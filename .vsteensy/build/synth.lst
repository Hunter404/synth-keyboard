
.vsteensy/build/synth.elf:     file format elf32-littlearm

SYMBOL TABLE:
00000000 l    d  .text	00000000 .text
0009e4c8 l    d  .fini	00000000 .fini
0009e4cc l    d  .ARM.exidx	00000000 .ARM.exidx
1fff0000 l    d  .usbdescriptortable	00000000 .usbdescriptortable
1fff0200 l    d  .dmabuffers	00000000 .dmabuffers
2000753c l    d  .usbbuffers	00000000 .usbbuffers
20007db0 l    d  .data	00000000 .data
20008bd8 l    d  .bss	00000000 .bss
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    df *ABS*	00000000 mk20dx128.c
00007688 l     F .text	0000000c startup_default_early_hook
00007694 l     F .text	00000002 startup_default_late_hook
00000000 l    df *ABS*	00000000 crtstuff.c
00000410 l     F .text	00000000 __do_global_dtors_aux
20008bd8 l       .bss	00000000 completed.8605
00000434 l     F .text	00000000 frame_dummy
20008bdc l       .bss	00000000 object.8610
0009e478 l     O .text	00000000 __frame_dummy_init_array_entry
00000000 l    df *ABS*	00000000 main.cpp
00000684 l     F .text	0000001c __tcf_0
00001434 l     F .text	0000178c _GLOBAL__sub_I_usb_in
2000ef04 l     O .bss	00000004 next
2000ef28 l     O .bss	00000004 printVoices()::last_notes_played
00010328 l     O .text	0000000c nylonstrgtr
00010458 l     O .text	00000003 nylonstrgtr_ranges
00010334 l     O .text	00000004 piano_ranges
00010338 l     O .text	0000000c vibraphone
00010454 l     O .text	00000002 vibraphone_ranges
1fff0200 l     O .dmabuffers	00016da0 setup::data
20011824 l     O .bss	00000004 guard variable for printVoices()::last_notes_played
00010468 l     O .text	0000000c piano
0001045c l     O .text	0000000c standard_DRUMS
20012030 l     O .bss	00000001 led
00010474 l     O .text	00000030 standard_DRUMS_ranges
00000000 l    df *ABS*	00000000 io.cpp
00002bcc l     F .text	00000028 __tcf_0
00002fa4 l     F .text	0000007c _GLOBAL__sub_I__ZN5Synth2IO5wheelEh
00000000 l    df *ABS*	00000000 output_pwm.cpp
0000302c l     F .text	00000018 _GLOBAL__sub_I__ZN14AudioOutputPWM9block_1stE
00000000 l    df *ABS*	00000000 output_pt8211.cpp
00003044 l     F .text	00000018 _GLOBAL__sub_I__ZN17AudioOutputPT821114block_left_1stE
00000000 l    df *ABS*	00000000 effect_freeverb.cpp
0009d9d0 l     O .text	00000104 zeroblock
00000000 l    df *ABS*	00000000 control_sgtl5000.cpp
00000000 l    df *ABS*	00000000 effect_bitcrusher.cpp
00000000 l    df *ABS*	00000000 mixer.cpp
00000000 l    df *ABS*	00000000 output_adat.cpp
00003ba8 l     F .text	00000018 _GLOBAL__sub_I__ZN15AudioOutputADAT13block_ch1_1stE
00000000 l    df *ABS*	00000000 effect_multiply.cpp
00000000 l    df *ABS*	00000000 input_adc.cpp
00003c5c l     F .text	00000018 _GLOBAL__sub_I__ZN16AudioInputAnalog10block_leftE
00000000 l    df *ABS*	00000000 output_dac.cpp
00003c74 l     F .text	00000018 _GLOBAL__sub_I__ZN17AudioOutputAnalog14block_left_1stE
00000000 l    df *ABS*	00000000 input_adcs.cpp
00003c8c l     F .text	00000030 _GLOBAL__sub_I__ZN22AudioInputAnalogStereo10block_leftE
00000000 l    df *ABS*	00000000 input_i2s_quad.cpp
00003cbc l     F .text	00000018 _GLOBAL__sub_I__ZN17AudioInputI2SQuad9block_ch1E
00000000 l    df *ABS*	00000000 output_dacs.cpp
00003cd4 l     F .text	00000018 _GLOBAL__sub_I__ZN23AudioOutputAnalogStereo14block_left_1stE
00000000 l    df *ABS*	00000000 filter_variable.cpp
00000000 l    df *ABS*	00000000 output_i2s_quad.cpp
00003f74 l     F .text	00000018 _GLOBAL__sub_I__ZN18AudioOutputI2SQuad13block_ch1_1stE
00000000 l    df *ABS*	00000000 synth_sine.cpp
00000000 l    df *ABS*	00000000 input_tdm.cpp
00004014 l     F .text	00000018 _GLOBAL__sub_I__ZN13AudioInputTDM14block_incomingE
00000000 l    df *ABS*	00000000 input_i2s.cpp
0000402c l     F .text	00000018 _GLOBAL__sub_I__ZN13AudioInputI2S10block_leftE
00000000 l    df *ABS*	00000000 synth_wavetable.cpp
00000000 l    df *ABS*	00000000 input_pdm.cpp
00004a78 l     F .text	00000018 _GLOBAL__sub_I__ZN13AudioInputPDM10block_leftE
00000000 l    df *ABS*	00000000 output_tdm.cpp
00004a90 l     F .text	00000018 _GLOBAL__sub_I__ZN14AudioOutputTDM11block_inputE
00000000 l    df *ABS*	00000000 output_i2s.cpp
00004e0c l     F .text	00000018 _GLOBAL__sub_I__ZN14AudioOutputI2S14block_left_1stE
20006fa0 l     O .dmabuffers	00000200 i2s_tx_buffer
00000000 l    df *ABS*	00000000 output_spdif.cpp
00004e24 l     F .text	00000018 _GLOBAL__sub_I__ZN16AudioOutputSPDIF14block_left_1stE
00000000 l    df *ABS*	00000000 effect_delay.cpp
00000000 l    df *ABS*	00000000 WireKinetis.cpp
000052e8 l       .text	00000000 L_1373_delayMicroseconds
000052f6 l       .text	00000000 L_1387_delayMicroseconds
0000533c l       .text	00000000 L_1438_delayMicroseconds
00005672 l       .text	00000000 L_2952_delayMicroseconds
2001277c l     O .bss	00000001 TwoWire::isr()::receiving
00000000 l    df *ABS*	00000000 SPI.cpp
00000000 l    df *ABS*	00000000 SD.cpp
00005808 l     F .text	00000024 _GLOBAL__sub_I__Z20getNextPathComponentPKcPjPc
00000000 l    df *ABS*	00000000 SdVolume.cpp
00005908 l     F .text	00000084 SdVolume::fatPut(unsigned long, unsigned long) [clone .part.3]
00000000 l    df *ABS*	00000000 NXP_SDHC.cpp
200129e0 l     O .bss	00000004 dmaDone
200129e4 l     O .bss	00000010 sdCardDesc
00000000 l    df *ABS*	00000000 SdFile.cpp
00005d2c l     F .text	0000006c SdFile::sync() [clone .part.23] [clone .constprop.37]
00000000 l    df *ABS*	00000000 Sd2Card.cpp
000064d0 l     F .text	00000010 _GLOBAL__sub_I__ZN7Sd2Card11cardCommandEhm
200129f8 l     O .bss	00000004 settings
200129fc l     O .bss	00000001 chip_select_asserted
00000000 l    df *ABS*	00000000 seesaw_neopixel.cpp
00000000 l    df *ABS*	00000000 Adafruit_seesaw.cpp
000067a2 l       .text	00000000 L_241_delayMicroseconds
0009dc98 l     O .text	00000004 CSWTCH.47
0009dc98 l     O .text	00000004 CSWTCH.68
00000000 l    df *ABS*	00000000 Adafruit_NeoTrellis.cpp
00006d5c l       .text	00000000 L_1310_delayMicroseconds
00000000 l    df *ABS*	00000000 .vsteensy/build/lib/Audio/memcpy_audio.o
00006e20 l       .text	00000000 .loopLR
00006e64 l       .text	00000000 .loopL
00006ea4 l       .text	00000000 .loopR
00006ee0 l       .text	00000000 .loopQuad
00000000 l    df *ABS*	00000000 memcpy-armv7m.o
00000000 l    df *ABS*	00000000 usb_serial.c
200129fe l     O .bss	00000001 tx_noautoflush
20012a00 l     O .bss	00000004 tx_packet
20012a04 l     O .bss	00000001 transmit_previous_timeout
20012a08 l     O .bss	00000004 rx_packet
00000000 l    df *ABS*	00000000 analog.c
00007318 l     F .text	00000144 wait_for_cal
20012a0d l     O .bss	00000001 analog_right_shift
20012a0e l     O .bss	00000001 calibrating
0009dec8 l     O .text	00000048 pin2sc1a
2000803c l     O .data	00000001 analog_config_bits
20012a0f l     O .bss	00000001 analogReadBusyADC1
20012a10 l     O .bss	00000001 analogReadBusyADC0
20012a11 l     O .bss	00000001 analog_reference_internal
2000803d l     O .data	00000001 analog_num_average
00000000 l    df *ABS*	00000000 pins_teensy.c
00007744 l     F .text	0000004c digitalWrite.part.1
00007790 l     F .text	00000078 pinMode.part.2
00000000 l    df *ABS*	00000000 usb_mem.c
20008044 l     O .data	00000004 usb_buffer_available
00000000 l    df *ABS*	00000000 usb_dev.c
20012a18 l     O .bss	00000004 ep0_tx_ptr
20012a1c l     O .bss	00000020 rx_last
20012a3c l     O .bss	00000002 ep0_tx_len
20012a40 l     O .bss	00000040 ep0_rx0_buf
20012a80 l     O .bss	00000020 rx_first
20012aa0 l     O .bss	00000001 ep0_tx_data_toggle
20012aa4 l     O .bss	00000040 ep0_rx1_buf
20012ae4 l     O .bss	00000020 tx_first
1fff0000 l     O .usbdescriptortable	00000120 table
20012b04 l     O .bss	00000020 tx_last
20012b24 l     O .bss	00000008 setup
20012b2c l     O .bss	00000001 ep0_tx_bdt_bank
20012b30 l     O .bss	00000008 reply_buffer
20012b3c l     O .bss	00000008 tx_state
00000000 l    df *ABS*	00000000 DMAChannel.cpp
00000000 l    df *ABS*	00000000 EventResponder.cpp
00000000 l    df *ABS*	00000000 yield.cpp
20012b64 l     O .bss	00000001 yield::running
00000000 l    df *ABS*	00000000 HardwareSerial5.cpp
00000000 l    df *ABS*	00000000 usb_inst.cpp
00000000 l    df *ABS*	00000000 Print.cpp
00000000 l    df *ABS*	00000000 usb_audio.cpp
00008d98 l     F .text	00000074 copy_to_buffers(unsigned long const*, short*, short*, unsigned int)
20008058 l     O .data	00000004 feedback_accumulator
20008068 l     O .data	00000004 usb_audio_transmit_callback::count
00000000 l    df *ABS*	00000000 WString.cpp
000093d4 l     F .text	0000001a String::operator=(char const*) [clone .part.3]
00000000 l    df *ABS*	00000000 HardwareSerial2.cpp
00000000 l    df *ABS*	00000000 HardwareSerial4.cpp
00000000 l    df *ABS*	00000000 main.cpp
00000000 l    df *ABS*	00000000 AudioStream.cpp
00000000 l    df *ABS*	00000000 HardwareSerial6.cpp
00000000 l    df *ABS*	00000000 new.cpp
00000000 l    df *ABS*	00000000 serial5.c
20012c24 l     O .bss	00000004 rts_pin
20012c28 l     O .bss	00000001 rx_buffer_head
20012c29 l     O .bss	00000001 rx_buffer_tail
20012c2c l     O .bss	00000028 tx_buffer
20012c54 l     O .bss	00000040 rx_buffer
20012c94 l     O .bss	00000001 transmitting
20012c95 l     O .bss	00000001 tx_buffer_tail
20012c98 l     O .bss	00000004 transmit_pin
20012c9c l     O .bss	00000001 tx_buffer_head
00000000 l    df *ABS*	00000000 serial2.c
20012ca0 l     O .bss	00000004 rts_pin
20012ca4 l     O .bss	00000001 transmitting
20012ca5 l     O .bss	00000001 rx_buffer_tail
20012ca8 l     O .bss	00000028 tx_buffer
20012cd0 l     O .bss	00000040 rx_buffer
20012d10 l     O .bss	00000001 rx_buffer_head
20012d11 l     O .bss	00000001 tx_buffer_tail
20012d14 l     O .bss	00000004 transmit_pin
20012d18 l     O .bss	00000001 tx_buffer_head
00000000 l    df *ABS*	00000000 serial4.c
20012d1c l     O .bss	00000004 rts_pin
20012d20 l     O .bss	00000001 rx_buffer_head
20012d21 l     O .bss	00000001 rx_buffer_tail
20012d24 l     O .bss	00000028 tx_buffer
20012d4c l     O .bss	00000040 rx_buffer
20012d8c l     O .bss	00000001 transmitting
20012d8d l     O .bss	00000001 tx_buffer_tail
20012d90 l     O .bss	00000004 transmit_pin
20012d94 l     O .bss	00000001 tx_buffer_head
00000000 l    df *ABS*	00000000 serial1.c
20012d98 l     O .bss	00000004 rts_pin
20012d9c l     O .bss	00000001 rx_buffer_head
20012d9d l     O .bss	00000001 rx_buffer_tail
20012da0 l     O .bss	00000040 tx_buffer
20012de0 l     O .bss	00000040 rx_buffer
20012e20 l     O .bss	00000001 transmitting
20012e21 l     O .bss	00000001 tx_buffer_tail
20012e24 l     O .bss	00000004 transmit_pin
20012e28 l     O .bss	00000001 tx_buffer_head
00000000 l    df *ABS*	00000000 serial6_lpuart.c
20012e2c l     O .bss	00000004 rts_pin
20012e30 l     O .bss	00000001 rx_buffer_head
20012e31 l     O .bss	00000001 rx_buffer_tail
20012e34 l     O .bss	00000028 tx_buffer
20012e5c l     O .bss	00000040 rx_buffer
20012e9c l     O .bss	00000001 transmitting
20012e9d l     O .bss	00000001 tx_buffer_tail
20012ea0 l     O .bss	00000004 transmit_pin
20012ea4 l     O .bss	00000001 tx_buffer_head
00000000 l    df *ABS*	00000000 usb_desc.c
2000806c l     O .data	00000012 device_descriptor
20008098 l     O .data	00000155 config_descriptor
00000000 l    df *ABS*	00000000 nonstd.c
00000000 l    df *ABS*	00000000 usb_midi.c
20012ea5 l     O .bss	00000001 tx_noautoflush
20012ea8 l     O .bss	00000004 tx_packet
00000000 l    df *ABS*	00000000 serial3.c
20012eac l     O .bss	00000004 rts_pin
20012eb0 l     O .bss	00000001 rx_buffer_head
20012eb1 l     O .bss	00000001 rx_buffer_tail
20012eb4 l     O .bss	00000028 tx_buffer
20012edc l     O .bss	00000040 rx_buffer
20012f1c l     O .bss	00000001 transmitting
20012f1d l     O .bss	00000001 tx_buffer_tail
20012f20 l     O .bss	00000004 transmit_pin
20012f24 l     O .bss	00000001 tx_buffer_head
00000000 l    df *ABS*	00000000 HardwareSerial1.cpp
00000000 l    df *ABS*	00000000 HardwareSerial3.cpp
00000000 l    df *ABS*	00000000 sf_round.c
00000000 l    df *ABS*	00000000 wf_pow.c
00000000 l    df *ABS*	00000000 ef_pow.c
00000000 l    df *ABS*	00000000 ef_sqrt.c
00000000 l    df *ABS*	00000000 s_matherr.c
00000000 l    df *ABS*	00000000 s_rint.c
0009e1d0 l     O .text	00000010 TWO52
00000000 l    df *ABS*	00000000 sf_fabs.c
00000000 l    df *ABS*	00000000 sf_finite.c
00000000 l    df *ABS*	00000000 sf_nan.c
00000000 l    df *ABS*	00000000 sf_scalbn.c
00000000 l    df *ABS*	00000000 sf_copysign.c
00000000 l    df *ABS*	00000000 _arm_addsubdf3.o
00000000 l    df *ABS*	00000000 _arm_muldivdf3.o
00000000 l    df *ABS*	00000000 _arm_cmpdf2.o
00000000 l    df *ABS*	00000000 _arm_unorddf2.o
00000000 l    df *ABS*	00000000 _arm_fixdfsi.o
00000000 l    df *ABS*	00000000 _arm_truncdfsf2.o
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 _dvmd_tls.o
00000000 l    df *ABS*	00000000 aeabi_atexit.c
00000000 l    df *ABS*	00000000 calloc.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 cxa_atexit.c
00000000 l    df *ABS*	00000000 errno.c
00000000 l    df *ABS*	00000000 init.c
00000000 l    df *ABS*	00000000 malloc.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 mbtowc_r.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mlock.c
00000000 l    df *ABS*	00000000 realloc.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 strchr.c
00000000 l    df *ABS*	00000000 lib_a-strcmp.o
00000000 l    df *ABS*	00000000 strcpy.c
00000000 l    df *ABS*	00000000 lib_a-strlen.o
00000000 l    df *ABS*	00000000 strncpy.c
00000000 l    df *ABS*	00000000 strstr.c
0000cb84 l     F .text	000000b8 critical_factorization
0000cc3c l     F .text	000001fe two_way_long_needle
00000000 l    df *ABS*	00000000 vdprintf.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
0000d1ac l     F .text	00000014 register_fini
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 fini.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 localeconv.c
00000000 l    df *ABS*	00000000 lib_a-memchr.o
00000000 l    df *ABS*	00000000 mprec.c
0009e3e8 l     O .text	0000000c p05.6087
00000000 l    df *ABS*	00000000 vasnprintf.c
00000000 l    df *ABS*	00000000 dtoa.c
0000dba4 l     F .text	00000128 quorem
00000000 l    df *ABS*	00000000 vfprintf.c
0009e408 l     O .text	00000010 zeroes.7258
0009e458 l     O .text	00000010 blanks.7257
00000000 l    df *ABS*	00000000 vfprintf.c
00000000 l    df *ABS*	00000000 _aeabi_uldivmod.o
00000000 l    df *ABS*	00000000 standard_DRUMS_samples.cpp
00000000 l    df *ABS*	00000000 nylonstrgtr_samples.cpp
00000000 l    df *ABS*	00000000 vibraphone_samples.cpp
00000000 l    df *ABS*	00000000 piano_samples.cpp
00000000 l    df *ABS*	00000000 data_waveforms.c
00000000 l    df *ABS*	00000000 impure.c
20008230 l     O .data	00000428 impure_data
00000000 l    df *ABS*	00000000 locale.c
00000000 l    df *ABS*	00000000 ctype_.c
00000000 l    df *ABS*	00000000 c:/progra~2/arduino/hardware/tools/arm/bin/../lib/gcc/arm-none-eabi/5.4.1/armv7e-m/fpu/crti.o
00000000 l    df *ABS*	00000000 c:/progra~2/arduino/hardware/tools/arm/bin/../lib/gcc/arm-none-eabi/5.4.1/armv7e-m/fpu/crtn.o
00000000 l    df *ABS*	00000000 s_lib_ver.c
00000000 l    df *ABS*	00000000 reent.c
00000000 l    df *ABS*	00000000 
20008bd8 l       .bss	00000000 __bss_start__
20012f7c l       .bss	00000000 __bss_end__
00000000 l       *UND*	00000000 software_init_hook
00000000 l       *UND*	00000000 hardware_init_hook
00000000 l       *UND*	00000000 __stack
00007680  w    F .text	00000006 adc0_isr
20012b68 g     O .bss	00000004 AudioInputUSB::incoming_right
0000b540 g     F .text	0000002c .hidden __aeabi_dcmpun
00002ee4  w    F .text	000000c0 Adafruit_NeoTrellis::Adafruit_NeoTrellis(Adafruit_NeoTrellis const&)
000070bc g     F .text	0000001c usb_serial_available
20012b94 g     O .bss	00000004 AudioOutputUSB::left_2nd
0000b504 g     F .text	00000012 .hidden __aeabi_dcmple
0000c97c g     F .text	000000ba strcpy
00009b0c g     F .text	00000020 serial4_available
20012b98 g     O .bss	00000002 AudioInputUSB::incoming_count
2000ffd4 g     O .bss	00000038 bitcrushMixer
2001189c g     O .bss	00000014 patchCord29
000845c4 g     O .text	00000800 sample_0_vibraphone_vibese2
0009dc9c g     O .text	00000028 vtable for Adafruit_seesaw
00063ca4 g     O .text	00001200 sample_38_standard_DRUMS_triangle
00050aa4 g     O .text	00000200 sample_6_standard_DRUMS_sinetick
0000b440 g     F .text	0000007a .hidden __cmpdf2
20012ba4 g     O .bss	00000004 AudioStream::memory_pool
00008b50  w    F .text	000000c4 yield
200100c8 g     O .bss	00001700 wavetable
00004044 g     F .text	000008fc AudioSynthWavetable::update()
0001eaa4 g     O .text	00006a00 sample_19_standard_DRUMS_crash5
000254a4 g     O .text	00000e00 sample_3_standard_DRUMS_scratch
0000b440 g     F .text	0000007a .hidden __eqdf2
00005d98 g     F .text	0000002a SdFile::addCluster()
20007488 g     O .dmabuffers	000000b4 usb_audio_transmit_buffer
20008080 g     O .data	00000018 usb_string_manufacturer_name_default
00009c04 g     F .text	00000020 serial_available
0004f4a4 g     O .text	00001600 sample_34_standard_DRUMS_guiro2
20007f8c g     O .data	0000006c Wire1
0000afb0 g     F .text	0000005a .hidden __floatdidf
00000560 g     F .text	00000060 updateRingModulation(float)
00007638  w    F .text	00000048 hard_fault_isr
00007680  w    F .text	00000006 dma_ch6_isr
20012ba8 g     O .bss	00000001 AudioStream::update_scheduled
0009db50 g     O .text	0000000c vtable for AudioOutputI2S
00006c24 g     F .text	0000002c Adafruit_MultiTrellis::registerCallback(unsigned char, unsigned char, void (*(*)(keyEvent))(keyEvent))
20012b6e g     O .bss	00000001 usb_audio_transmit_setting
00008cbc g     F .text	00000020 Print::println()
00005140 g     F .text	00000130 TwoWire::isr()
000099e0 g     F .text	00000020 serial2_available
20012c20 g     O .bss	00000002 AudioStream::memory_used
00007680  w    F .text	00000006 uart0_lon_isr
00007bac g     F .text	00000090 usb_rx_memory
200117f0 g     O .bss	00000014 patchCord22
00008c14  w    F .text	00000002 serialEvent5()
2001209c g     O .bss	00000498 mixer
00007680  w    F .text	00000006 dma_ch8_isr
00009d30 g     F .text	00000020 serial6_available
0000c1b0 g     F .text	00000002 __malloc_unlock
00006030 g     F .text	00000068 Sd2Card::chipSelectHigh()
000524a4 g     O .text	00000400 sample_5_standard_DRUMS_stix
0000745c g     F .text	000000e0 analog_init
00007c3c g     F .text	00000084 usb_tx
00007680  w    F .text	00000006 portcd_isr
0000d05c g     F .text	0000004a _vdprintf_r
20007e6c g     O .data	00000044 channel_map
00004d38 g     F .text	000000d4 AudioOutputI2S::begin()
00088204 g     O .text	0000aa00 sample_1_piano_kpianocx4
00006018 g     F .text	00000018 SdFile::write(unsigned char)
00003948 g     F .text	000000ee AudioEffectBitcrusher::update()
000094f0 g     F .text	00000048 String::substring(unsigned int, unsigned int) const
20012b70 g     O .bss	00000004 AudioInputUSB::ready_right
0000c048 g     F .text	000000c6 memmove
00008aa8 g     F .text	00000098 MillisTimer::runFromTimer()
20012720 g     O .bss	00000008 AudioOutputAnalogStereo::dma
0000650c g     F .text	00000018 seesaw_NeoPixel::~seesaw_NeoPixel()
0000a090 g     F .text	00000328 powf
20012b7c g     O .bss	00000001 AudioInputUSB::update_responsibility
0000d520 g     F .text	0000004c _Balloc
00007680  w    F .text	00000006 can1_rx_warn_isr
0009e4d4 g       .ARM.exidx	00000000 __exidx_end
20007db4 g     O .data	00000001 bitcrushEnabled
00007680  w    F .text	00000006 dma_error_isr
20012768 g     O .bss	00000004 AudioOutputI2S::block_right_2nd
000009d0 g     F .text	00000098 findVoice(unsigned char, unsigned char)
20012b5c g     O .bss	00000001 EventResponder::runningFromYield
00009170 g     F .text	0000001c AudioOutputUSB::begin()
00016ea4 g     O .text	00001a00 sample_43_standard_DRUMS_ebongostone
00005694 g     F .text	0000000c i2c0_isr
00006580 g     F .text	0000005e seesaw_NeoPixel::updateType(unsigned short)
00008c44 g     F .text	0000002c Print::write(unsigned char const*, unsigned int)
0000b430 g     F .text	0000008a .hidden __gtdf2
0000b9cc g     F .text	0000000c __errno
00007680  w    F .text	00000006 portd_isr
00084e84 g     O .text	00003200 sample_2_piano_kpianodx5
00007680  w    F .text	00000006 enet_error_isr
0009dba8 g     O .text	00000020 TwoWire::i2c2_hardware
20012b48 g     O .bss	00000004 EventResponder::firstInterrupt
2000fea4 g     O .bss	00000014 patchCord2
00008e9c g     F .text	0000011c AudioOutputUSB::update()
00007680  w    F .text	00000006 tpm1_isr
00008c30  w    F .text	00000008 usb_serial_class::write(unsigned char const*, unsigned int)
0009df10 g     O .text	00000200 digital_pin_to_info_PGM
20012f78 g     O .bss	00000004 errno
0009e4d4 g       .ARM.exidx	00000000 _etext
000056d4 g     F .text	00000134 _spi_dma_rxISR0()
20008bd8 g       .bss	00000000 _sbss
00005e28 g     F .text	000001f0 SdFile::write(void const*, unsigned int)
0000b4cc g     F .text	00000010 .hidden __aeabi_cdcmple
200127dc g     O .bss	00000200 SdVolume::cacheBuffer_
00006c8c g     F .text	0000002c Adafruit_MultiTrellis::setPixelColor(unsigned char, unsigned char, unsigned long)
000098e0  w    F .text	00000002 serialEvent6()
00007838 g     F .text	0000001c digitalRead
00007680  w    F .text	00000006 porte_isr
000096ec g     F .text	00000018 AudioStream::receiveReadOnly(unsigned int)
00000f78 g     F .text	000004bc loop
00007680  w    F .text	00000006 portb_isr
000092e8 g     F .text	00000044 usb_audio_set_feature
00009f04 g     F .text	0000002c usb_midi_flush_output
00007680  w    F .text	00000006 spi1_isr
00009b2c g     F .text	000000d8 uart3_status_isr
00006b58 g     F .text	00000044 Adafruit_NeoTrellis::Adafruit_NeoTrellis(unsigned char)
0006a6a4 g     O .text	00001600 sample_33_standard_DRUMS_guirodown
2000fe78 g     O .bss	00000018 usb_in
0000a028  w    F .text	00000002 serialEvent1()
00007680  w    F .text	00000006 mcm_isr
2000feb8 g     O .bss	00000014 patchCord3
200125ac g     O .bss	00000014 patchCord23
00008a40 g     F .text	00000068 MillisTimer::addToActiveList()
20008c64 g     O .bss	000062a0 reverb
00003724  w    F .text	00000004 AudioControlSGTL5000::disable()
20011ff4 g     O .bss	0000003c cutoffFilter
000059fc g     F .text	000000f0 SdVolume::allocContiguous(unsigned long, unsigned long*)
000262a4 g     O .text	00000a00 sample_7_standard_DRUMS_verbclickwave
0000535c g     F .text	00000114 TwoWire::endTransmission(unsigned char)
20012b4c g     O .bss	00000004 EventResponder::lastInterrupt
00009a00 g     F .text	0000010c uart1_status_isr
2001207c g     O .bss	00000020 masterAmplifier
00006f10 g     F .text	00000134 memcpy
00007680  w    F .text	00000006 randnum_isr
0000b4bc g     F .text	00000020 .hidden __aeabi_cdrcmple
0009db14 g     O .text	0000000c vtable for AudioMixer4
200125c4 g     O .bss	00000014 patchCord26
0000eb08 g     F .text	000016e4 _svfprintf_r
200129f4 g     O .bss	00000004 SdFile::dateTime_
0000af40 g     F .text	00000022 .hidden __floatsidf
00006cd4 g     F .text	00000038 Adafruit_MultiTrellis::show()
20012a14 g     O .bss	00000004 systick_millis_count
0000b438 g     F .text	00000082 .hidden __ltdf2
200127d4 g     O .bss	00000004 SdVolume::cacheMirrorBlock_
00007638  w    F .text	00000048 bus_fault_isr
000064e0 g     F .text	0000002c seesaw_NeoPixel::seesaw_NeoPixel(unsigned short, unsigned char, unsigned short, TwoWire*)
00005270 g     F .text	000000ec TwoWire::wait_idle()
00007680  w    F .text	00000006 watchdog_isr
20012b74 g     O .bss	00000004 AudioOutputUSB::left_1st
000102ec g     F .text	00000000 .hidden __aeabi_uldivmod
000056a0 g     F .text	0000000c i2c1_isr
20012b38 g     O .bss	00000001 usb_configuration
00007680  w    F .text	00000006 dma_ch11_isr
0009dafc g     O .text	0000000c vtable for AudioEffectBitcrusher
0000305c g     F .text	00000518 AudioEffectFreeverb::update()
00000000  w      *UND*	00000000 __fini_array_end
000058ac g     F .text	0000005c SdVolume::cacheRawBlock(unsigned long, unsigned char)
00006834 g     F .text	0000004e Adafruit_seesaw::analogRead(unsigned char)
20011920 g     O .bss	00000004 stopped_voices
00009538  w    F .text	00000002 serialEvent2()
000056ac g     F .text	0000000c i2c2_isr
20012bac g     O .bss	00000070 AudioStream::memory_pool_available_mask
20012700 g     O .bss	00000008 AudioOutputAnalog::dma
20008080  w    O .data	00000018 usb_string_manufacturer_name
20012f68 g     O .bss	00000010 usb_rx_byte_count_data
00002c40 g     F .text	0000004c Synth::IO::wheel(unsigned char)
20010044 g     O .bss	00000014 patchCord9
00007680  w    F .text	00000006 pit1_isr
0000ba28 g     F .text	00000010 malloc
0000a030 g     F .text	00000060 roundf
00007680  w    F .text	00000006 dma_ch4_isr
0009db88 g     O .text	00000020 TwoWire::i2c1_hardware
0000985c g     F .text	00000084 software_isr
00007680  w    F .text	00000006 dma_ch7_isr
0000500c  w    F .text	0000001e TwoWire::read()
000056b8  w    F .text	0000001c EventResponder::triggerEvent(int, void*)
20012b6c g     O .bss	00000002 AudioOutputUSB::offset_1st
0009e2f8 g     O .text	000000c8 __mprec_tens
000087a4 g     F .text	000000d0 usb_init
20012c1e g     O .bss	00000002 AudioStream::memory_pool_first_mask
200073d0 g     O .dmabuffers	00000004 usb_audio_sync_feedback
00003d88 g     F .text	000000f0 AudioFilterStateVariable::update_variable(short const*, short const*, short*, short*, short*)
2000ff28 g     O .bss	00000014 patchCord10
2000ff78 g     O .bss	00000014 patchCord16
2001183c g     O .bss	00000038 reverbMixer
00007680  w    F .text	00000006 lptmr_isr
00006d0c g     F .text	0000010c Adafruit_MultiTrellis::read()
00006a58 g     F .text	00000038 Adafruit_seesaw::write(char const*)
20012f30 g     O .bss	00000004 __malloc_top_pad
00007808 g     F .text	00000024 rtc_set
000093f0 g     F .text	0000003c String::move(String&)
20007db0 g     O .data	00000000 .hidden __dso_handle
0000af20 g     F .text	0000001e .hidden __aeabi_ui2d
0000080c  w    F .text	00000054 AudioStream::AudioStream(unsigned char, audio_block_struct**)
0000d460 g     F .text	0000001c _localeconv_r
0000d69c g     F .text	00000012 __i2b
2000ff8c g     O .bss	00000014 patchCord17
20007db0 g       .data	00000000 _sdata
0009db68 g     O .text	00000020 TwoWire::i2c0_hardware
00007710 g     F .text	00000034 kinetis_hsrun_enable
0006bca4 g     O .text	00004c00 sample_17_standard_DRUMS_chcrash
0000b65c g     F .text	000002e2 .hidden __udivmoddi4
0000933c g     F .text	0000002a String::reserve(unsigned int)
0000ac9c g     F .text	00000000 .hidden __aeabi_drsub
200126d8 g     O .bss	00000008 Synth::IO::trellis
0000ab94 g     F .text	00000014 finitef
0000c5a4 g     F .text	00000024 _sbrk_r
00006bd8 g     F .text	0000004c Adafruit_MultiTrellis::begin()
000001d0 g     F .text	00000200 ResetHandler
00007044 g     F .text	00000048 usb_serial_getchar
00007680  w    F .text	00000006 can1_bus_off_isr
00006e18 g     F .text	00000000 memcpy_tointerleaveLR
00007680  w    F .text	00000006 ftm2_isr
20012f5c g     O .bss	00000008 usb_cdc_line_coding
200118b0 g     O .bss	00000038 echoRepeat
0000782c g     F .text	0000000a digitalWrite
0000ab84 g     F .text	0000000e fabsf
20012b54 g     O .bss	00000004 EventResponder::lastYield
00007680  w    F .text	00000006 uart5_status_isr
00009d50 g     F .text	000000e4 lpuart0_status_isr
00083ca4 g     O .text	00000120 nylonstrgtr_samples
200125a8 g     O .bss	00000004 ringModulationValLast
0009e16c g     O .text	00000008 usb_endpoint_config_table
00007680  w    F .text	00000006 dma_ch9_isr
20012760 g     O .bss	00000002 AudioOutputI2S::block_right_offset
00007680  w    F .text	00000006 pit2_isr
0000b4f0 g     F .text	00000012 .hidden __aeabi_dcmplt
00009f30 g     F .text	00000020 serial3_available
2001000c g     O .bss	00000024 ringModulation
00074ea4 g     O .text	00003a00 sample_46_standard_DRUMS_floortombrite
20012f2c g     O .bss	00000004 __malloc_max_sbrked_mem
200125d8 g     O .bss	00000004 bitcrushValLast
20012b90 g     O .bss	00000001 AudioOutputUSB::update_responsibility
00002c8c g     F .text	00000108 Synth::IO::setup()
00006098 g     F .text	000000b4 Sd2Card::chipSelectLow()
00007854 g     F .text	0000000a pinMode
2000ffd0 g     O .bss	00000004 cutoffValLast
00009478 g     F .text	00000032 String::getBytes(unsigned char*, unsigned int, unsigned int) const
000450a4 g     O .text	00000200 sample_44_standard_DRUMS_sinetick
0007c2a4 g     O .text	00003200 sample_2_nylonstrgtr_acgtrb3
00007af8 g     F .text	0000004c usb_free
00003bc0 g     F .text	0000009c AudioEffectMultiply::update()
00007680  w    F .text	00000006 i2c3_isr
0000af64 g     F .text	0000003a .hidden __extendsfdf2
0000b260 g     F .text	000001d0 .hidden __aeabi_ddiv
00068ea4 g     O .text	00001800 sample_25_standard_DRUMS_quintoslap
0000aca8 g     F .text	00000276 .hidden __adddf3
20012b88 g     O .bss	00000004 AudioInputUSB::ready_left
200127d8 g     O .bss	00000004 SdVolume::sdCard_
20007eb4 g     O .data	0000006c Wire2
0009e4cc g       .ARM.exidx	00000000 __exidx_start
000190a4 g     O .text	00003a00 sample_13_standard_DRUMS_floortombrite
0000b00c g     F .text	00000254 .hidden __aeabi_dmul
00003020  w    F .text	0000000c DMAChannel::~DMAChannel()
0003c0a4 g     O .text	00002000 sample_12_standard_DRUMS_snare24
00007680  w    F .text	00000006 pit0_isr
0009e13c g     O .text	00000018 vtable for Print
2000822e g     O .data	00000001 __fdlib_version
20012b58 g     O .bss	00000004 EventResponder::firstYield
20010090 g     O .bss	00000038 masterMixer
00005dc4 g     F .text	00000064 SdFile::seekSet(unsigned long)
0009e1e0 g     O .text	00000004 _global_impure_ptr
20012750 g     O .bss	00000002 AudioOutputI2S::block_left_offset
00002bc8  w    F .text	00000002 Adafruit_MultiTrellis::~Adafruit_MultiTrellis()
00007680  w    F .text	00000006 can1_error_isr
00006444 g     F .text	0000008c Sd2Card::SD_writeBlock(unsigned long, unsigned char const*)
0000c1c4 g     F .text	000003de _realloc_r
00044ea4 g     O .text	00000200 sample_8_standard_DRUMS_coldglass12wave
0000b9d8 g     F .text	00000050 __libc_init_array
20012f7c g       .bss	00000000 __bss_end
00005000  w    F .text	0000000c TwoWire::available()
00007680  w    F .text	00000006 can0_wakeup_isr
000066f4 g     F .text	0000000a seesaw_NeoPixel::Color(unsigned char, unsigned char, unsigned char)
000382a4 g     O .text	00003e00 sample_47_standard_DRUMS_timpani
00007680  w    F .text	00000006 flash_cmd_isr
0003e0a4 g     O .text	00001e00 sample_40_standard_DRUMS_tamborine
00009280 g     F .text	00000068 usb_audio_get_feature
00005c00 g     F .text	0000012c SDHC_CardWriteBlock(void const*, unsigned long)
0009e3c0 g     O .text	00000028 __mprec_bigtens
00005470 g     F .text	00000224 TwoWire::requestFrom(unsigned char, unsigned char, unsigned char)
00008c18  w    F .text	00000004 usb_serial_class::clear()
0000af20 g     F .text	0000001e .hidden __floatunsidf
00009f50 g     F .text	000000d8 uart2_status_isr
00007698 g     F .text	0000002c _sbrk
0000d930 g     F .text	00000042 __mcmp
0009db38 g     O .text	0000000c vtable for AudioSynthWaveformSine
20012b60 g     O .bss	00000004 MillisTimer::listWaiting
20012748 g     O .bss	00000008 AudioOutputTDM::dma
20008040 g     O .data	00000004 __brkval
20012a0c g     O .bss	00000001 usb_cdc_line_rtsdtr
2000f12c g     O .bss	00000d44 echo
2000ffcc g     O .bss	00000004 evict_voice
00000a68 g     F .text	000000ac freeVoices()
20007eb1 g     O .data	00000001 echoEnabled
0002b6a4 g     O .text	00003e00 sample_28_standard_DRUMS_timpani
000072d0 g     F .text	00000048 usb_serial_flush_callback
00004940 g     F .text	00000030 AudioSynthWavetable::stop()
0009e468 g     F .text	00000000 _init
0000932c g     F .text	0000000e String::~String()
00007680  w    F .text	00000006 svcall_isr
00009550 g     F .text	0000006c AudioStream::initialize_memory(audio_block_struct*, unsigned int)
0009db2c g     O .text	0000000c vtable for AudioFilterStateVariable
00007680  w    F .text	00000006 dma_ch15_isr
00002d94 g     F .text	00000018 Synth::IO::update()
0000b5bc g     F .text	0000009e .hidden __aeabi_d2f
00006a34 g     F .text	00000022 Adafruit_seesaw::write(unsigned char)
00006b08 g     F .text	00000050 Adafruit_seesaw::writeEmpty(unsigned char, unsigned char)
00000cb0 g     F .text	00000064 tone(keyEvent)
0009dbc8 g     O .text	00000024 vtable for TwoWire
00007680  w    F .text	00000006 uart1_error_isr
0000d1cc g     F .text	00000028 __libc_fini_array
00007680  w    F .text	00000006 usbhs_phy_isr
20012708 g     O .bss	00000008 AudioInputAnalogStereo::dma0
20012f7c g       .bss	00000000 _ebss
0000671c g     F .text	00000118 Adafruit_seesaw::read(unsigned char, unsigned char, unsigned char*, unsigned char, unsigned short)
0000aa5c g     F .text	00000128 rint
00092c04 g     O .text	00008800 sample_0_piano_kpianob1
200126f0 g     O .bss	00000008 AudioOutputADAT::dma
20012034 g     O .bss	00000014 patchCord30
00006cb8 g     F .text	0000001c Adafruit_MultiTrellis::setPixelColor(unsigned short, unsigned long)
2001275c g     O .bss	00000004 AudioOutputI2S::block_right_1st
00084dc4 g     O .text	000000c0 vibraphone_samples
0000d600 g     F .text	00000040 __hi0bits
2001276c g     O .bss	00000001 AudioOutputI2S::update_responsibility
0005eca4 g     O .text	00000e00 sample_20_standard_DRUMS_cowbell
0000b56c g     F .text	0000004e .hidden __fixdfsi
0000b950 g     F .text	00000010 calloc
00008fb8 g     F .text	00000054 AudioInputUSB::begin()
200117c8 g     O .bss	00000014 patchCord20
00007680 g     F .text	00000006 unused_isr
00007680  w    F .text	00000006 spi0_isr
20011804 g     O .bss	00000020 ringModulationMultiplier
000068c4 g     F .text	00000066 Adafruit_seesaw::write(unsigned char, unsigned char, unsigned char*, unsigned char)
00007680  w    F .text	00000006 dma_ch3_isr
00006ed6 g     F .text	00000000 memcpy_tointerleaveQuad
00009368 g     F .text	00000042 String::copy(char const*, unsigned int)
00003020  w    F .text	0000000c DMAChannel::~DMAChannel()
000094ac g     F .text	00000020 String::indexOf(char) const
20012b8c g     O .bss	00000004 AudioOutputUSB::right_1st
20011828 g     O .bss	00000014 patchCord25
0009d82c  w    O .text	00000028 vtable for Adafruit_NeoTrellis
0009b404 g     O .text	00002400 sample_3_piano_kpianof502
00007680  w    F .text	00000006 flash_error_isr
2000ffa0 g     O .bss	00000014 patchCord18
0000aca8 g     F .text	00000276 .hidden __aeabi_dadd
0000900c g     F .text	00000164 usb_audio_receive_callback
0004dea4 g     O .text	00001600 sample_39_standard_DRUMS_cabasastrk
0000b438 g     F .text	00000082 .hidden __ledf2
000098e8 g     F .text	00000020 serial5_available
0000932c g     F .text	0000000e String::~String()
00007680  w    F .text	00000006 uart5_error_isr
00007680  w    F .text	00000006 rtc_seconds_isr
0009dbec g     O .text	00000094 SPIClass::spi0_hardware
000005c0 g     F .text	000000b8 updateEcho(float)
00007680  w    F .text	00000006 pdb_isr
0000d7e0 g     F .text	000000a0 __pow5mult
0000afa0 g     F .text	0000006a .hidden __aeabi_ul2d
00007638  w    F .text	00000048 usage_fault_isr
00007680  w    F .text	00000006 dac1_isr
00000000 g     O .text	000001d0 _VectorsFlash
00050ca4 g     O .text	00000e00 sample_37_standard_DRUMS_quicadown
00007680  w    F .text	00000006 dma_ch14_isr
2000fe70 g     O .bss	00000004 reverbValLast
00000000  w      *UND*	00000000 __deregister_frame_info
20012f64 g     O .bss	00000004 usb_cdc_line_rtsdtr_millis
000414a4 g     O .text	00003a00 sample_15_standard_DRUMS_floortombrite
20010030 g     O .bss	00000014 patchCord8
00008b40 g     F .text	00000010 systick_isr
0001caa4 g     O .text	00002000 sample_27_standard_DRUMS_lowtumba
00007680  w    F .text	00000006 rtc_alarm_isr
20012770 g     O .bss	00000004 AudioOutputI2S::block_left_2nd
00006700 g     F .text	0000001c Adafruit_seesaw::Adafruit_seesaw(TwoWire*)
20012b9c g     O .bss	00000004 AudioStream::first_update
00007680  w    F .text	00000006 dma_ch2_isr
20008048 g     O .data	00000010 Serial
20012ba0 g     O .bss	00000002 AudioStream::memory_used_max
00007680  w    F .text	00000006 ftm1_isr
00000678  w    F .text	0000000c AudioConnection::~AudioConnection()
0002f4a4 g     O .text	00006a00 sample_16_standard_DRUMS_crash5
0009dae0 g     O .text	0000001c vtable for AudioControlSGTL5000
0000942c g     F .text	0000000e String::operator=(String const&)
00006b58 g     F .text	00000044 Adafruit_NeoTrellis::Adafruit_NeoTrellis(unsigned char)
200125dc g     O .bss	00000001 Synth::IO::initialized
00008c38  w    F .text	00000006 usb_serial_class::write(unsigned char)
20012b6f g     O .bss	00000001 usb_audio_receive_setting
00007688  w    F .text	0000000c startup_early_hook
00007680  w    F .text	00000006 dma_ch13_isr
2000ff3c g     O .bss	00000014 patchCord11
2000ff50 g     O .bss	00000014 patchCord13
00003728  w    F .text	00000004 AudioControlSGTL5000::inputLevel(float)
00007680  w    F .text	00000006 uart2_error_isr
00003574 g     F .text	000001b0 AudioEffectFreeverb::AudioEffectFreeverb()
0000b52c g     F .text	00000012 .hidden __aeabi_dcmpgt
0000708c g     F .text	00000030 usb_serial_peekchar
20012764 g     O .bss	00000004 AudioOutputI2S::block_left_1st
0000d480 g     F .text	00000000 memchr
20008218 g     O .data	00000016 usb_string_serial_number_default
00007638 g     F .text	00000048 fault_isr
0000d290 g     F .text	000001d0 _free_r
00002ee4  w    F .text	000000c0 Adafruit_NeoTrellis::Adafruit_NeoTrellis(Adafruit_NeoTrellis const&)
0000650c g     F .text	00000018 seesaw_NeoPixel::~seesaw_NeoPixel()
00036ca4 g     O .text	00001600 sample_45_standard_DRUMS_mbongotone
000006a0 g     F .text	0000016c updateCutoff(float)
0000b518 g     F .text	00000012 .hidden __aeabi_dcmpge
00007680  w    F .text	00000006 usb_charge_isr
00008c28  w    F .text	00000004 usb_serial_class::flush()
00007680  w    F .text	00000006 cmt_isr
000065e0 g     F .text	00000034 seesaw_NeoPixel::begin(unsigned char, signed char)
0000aca4 g     F .text	0000027a .hidden __aeabi_dsub
00007680  w    F .text	00000006 usbhs_isr
20008bd4 g     O .data	00000004 __malloc_sbrk_base
00008c20  w    F .text	00000004 usb_serial_class::read()
00007680  w    F .text	00000006 ftm3_isr
00003f8c g     F .text	00000088 AudioSynthWaveformSine::update()
0000ce3c g     F .text	0000021e strstr
00007680  w    F .text	00000006 tsi0_isr
00006bc8 g     F .text	0000000e Adafruit_MultiTrellis::Adafruit_MultiTrellis(Adafruit_NeoTrellis*, unsigned char, unsigned char)
0000afa0 g     F .text	0000006a .hidden __floatundidf
000076c4  w    F .text	00000002 __cxa_pure_virtual
0000d880 g     F .text	000000ae __lshift
00007680  w    F .text	00000006 spi2_isr
20012b80 g     O .bss	00000004 AudioInputUSB::incoming_left
20012710 g     O .bss	00000008 AudioInputAnalogStereo::dma1
000101ec g     F .text	00000100 __ssprint_r
0000953c  w    F .text	00000002 serialEvent4()
0000db44 g     F .text	0000005e _vasnprintf_r
00008c40  w    F .text	00000002 serialEvent()
2000fe74 g     O .bss	00000004 echoValLast
00003864  w    F .text	0000005c AudioControlSGTL5000::inputSelect(int)
20012aa1 g     O .bss	00000001 usb_reboot_timer
200126e0 g     O .bss	00000008 AudioOutputPWM::dma
0000d108 g     F .text	000000a4 __register_exitproc
0000943c g     F .text	00000010 String::operator=(String&&)
00009704 g     F .text	00000042 AudioStream::receiveWritable(unsigned int)
0000080c  w    F .text	00000054 AudioStream::AudioStream(unsigned char, audio_block_struct**)
000070d8 g     F .text	00000038 usb_serial_flush_input
00006968 g     F .text	00000030 Adafruit_seesaw::setKeypadEvent(unsigned char, unsigned char, bool)
00004a38 g     F .text	00000040 AudioSynthWavetable::playNote(int, int)
00064ea4 g     O .text	00001a00 sample_26_standard_DRUMS_quintotone
000708a4 g     O .text	00001e00 sample_18_standard_DRUMS_tamborine
00006998 g     F .text	00000018 Adafruit_seesaw::write8(unsigned char, unsigned char, unsigned char)
0000d6b0 g     F .text	00000130 __multiply
00027aa4 g     O .text	00003c00 sample_42_standard_DRUMS_belltree
00007218 g     F .text	00000018 usb_serial_putchar
00000022 g       *ABS*	00000000 _teensy_model_identifier
0000cb1c g     F .text	00000066 strncpy
20012f34 g     O .bss	00000028 __malloc_current_mallinfo
00003928  w    F .text	00000020 AudioControlSGTL5000::volume(float)
0000da88 g     F .text	000000ba __d2b
0009db08 g     O .text	0000000c vtable for AudioAmplifier
00007680  w    F .text	00000006 can0_bus_off_isr
0005a0a4 g     O .text	00004c00 sample_41_standard_DRUMS_chcrash
0000c1b4 g     F .text	00000010 realloc
20011fdc g     O .bss	00000014 patchCord12
20007e38 g     O .data	00000030 note_map
20012b2d g     O .bss	00000001 usb_rx_memory_needed
00007cc0 g     F .text	00000ae4 usb_isr
0000b9c0 g     F .text	0000000c __cxa_atexit
0000982c g     F .text	00000030 AudioStream::update_setup()
00006a90 g     F .text	00000078 Adafruit_seesaw::analogWrite(unsigned char, unsigned short, unsigned char)
0000af40 g     F .text	00000022 .hidden __aeabi_i2d
000068a0 g     F .text	00000024 Adafruit_seesaw::getKeypadCount()
20012570 g     O .bss	00000038 slaveMixer
20007ff8 g     O .data	00000040 SPI
0000bfe4 g     F .text	00000062 memcmp
0009e110  w    O .text	00000028 vtable for usb_serial_class
00007680  w    F .text	00000006 uart3_error_isr
000093ac g     F .text	00000026 String::String(char const*)
00004ba8 g     F .text	00000098 AudioOutputI2S::update()
00006b9c g     F .text	0000002c Adafruit_NeoTrellis::begin(unsigned char, signed char)
20012b50 g     O .bss	00000004 MillisTimer::listActive
20008bf4  w    O .bss	00000004 Synth::SerialPortInterface::getData()::spIndex
0000b940  w    F .text	00000002 .hidden __aeabi_ldiv0
00007680  w    F .text	00000006 porta_isr
0000b260 g     F .text	000001d0 .hidden __divdf3
2000753c g     O .usbbuffers	00000870 usb_buffer_memory
2000fee0 g     O .bss	00000014 patchCord5
00007680  w    F .text	00000006 low_voltage_isr
200087c8 g     O .data	00000408 __malloc_av_
00007680  w    F .text	00000006 can0_error_isr
0000794c g     F .text	0000016c _init_Teensyduino_internal_
00006c50 g     F .text	0000003a Adafruit_MultiTrellis::activateKey(unsigned char, unsigned char, unsigned char, bool)
0000b00c g     F .text	00000254 .hidden __muldf3
0000a3b8 g     F .text	000005fc __ieee754_powf
20012048 g     O .bss	00000014 patchCord31
00007278 g     F .text	00000058 usb_serial_flush_output
00007680  w    F .text	00000006 dma_ch12_isr
20012738 g     O .bss	00000008 AudioInputI2S::dma
0000c1ac g     F .text	00000002 __malloc_lock
2001205c g     O .bss	00000020 i2s
00000000  w      *UND*	00000000 __fini_array_start
00007680  w    F .text	00000006 can1_wakeup_isr
0000abb4 g     F .text	000000d0 scalbnf
20007200 g     O .dmabuffers	000001d0 _VectorsRam
0009e160 g     O .text	0000000c vtable for AudioOutputUSB
0000b960 g     F .text	0000005e _calloc_r
0000944c g     F .text	0000002c String::equals(char const*) const
00007680  w    F .text	00000006 pit3_isr
20010058 g     O .bss	00000038 echoMixer
00007680  w    F .text	00000006 enet_rx_isr
0009dcc4 g     O .text	00000202 AudioWaveformSine
00007680  w    F .text	00000006 portc_isr
2000ef2c g     O .bss	00000200 voices
00006e56 g     F .text	00000000 memcpy_tointerleaveL
20012718 g     O .bss	00000008 AudioInputI2SQuad::dma
000788a4 g     O .text	00001a00 sample_31_standard_DRUMS_maracas
0000c110 g     F .text	0000009a memset
0000a9b4 g     F .text	000000a2 __ieee754_sqrtf
000038c0 g     F .text	00000066 AudioControlSGTL5000::volumeInteger(unsigned int)
00009540 g     F .text	00000010 main
0000598c g     F .text	00000070 SdVolume::fatGet(unsigned long, unsigned long*) const
20012754 g     O .bss	00000008 AudioOutputI2S::dma
20012f28 g     O .bss	00000004 __malloc_max_total_mem
000738a4 g     O .text	00001600 sample_24_standard_DRUMS_mbongotone
00002bf4  w    F .text	0000004c Synth::Multiplexer::readMux(int)
2000ef08 g     O .bss	00000020 usb_out
00007638  w    F .text	00000048 memmanage_fault_isr
0000372c g     F .text	00000058 AudioControlSGTL5000::write(unsigned int, unsigned int)
0009dad4 g     O .text	0000000c vtable for AudioEffectFreeverb
0000aa58 g     F .text	00000004 matherr
00009e34 g     F .text	00000084 usb_init_serialnumber
0007f4a4 g     O .text	00002a00 sample_1_nylonstrgtr_nguitb2
0000b5bc g     F .text	0000009e .hidden __truncdfsf2
0009e4c8 g       .text	00000000 __init_array_end
0000dcd0 g     F .text	00000e34 _dtoa_r
20011874 g     O .bss	00000014 patchCord27
0000ba48 g     F .text	00000570 _malloc_r
00007680  w    F .text	00000006 debugmonitor_isr
0000d0c0 g     F .text	0000001a __ascii_wctomb
0000afb0 g     F .text	0000005a .hidden __aeabi_l2d
200125c0 g     O .bss	00000004 used_voices
00088084 g     O .text	00000180 piano_samples
00008978 g     F .text	00000080 EventResponder::triggerEventNotImmediate()
20012534 g     O .bss	00000038 ringModulationMixer
00000031 g       *ABS*	00000000 __rtc_localtime
00003784 g     F .text	000000e0 AudioControlSGTL5000::enable()
00007860 g     F .text	00000048 micros
00000000  w      *UND*	00000000 __libc_fini
000094cc g     F .text	00000022 String::indexOf(String const&) const
00007680  w    F .text	00000006 cmp1_isr
00003a38 g     F .text	000000f4 AudioMixer4::update()
00006a18 g     F .text	0000001c Adafruit_seesaw::enableKeypadInterrupt()
00007680  w    F .text	00000006 ftm0_isr
200125e0 g     O .bss	000000f8 Synth::IO::t_array
00006700 g     F .text	0000001c Adafruit_seesaw::Adafruit_seesaw(TwoWire*)
0000d1f4 g     F .text	0000009c _malloc_trim_r
20008214 g     O .data	00000004 string0
00005b40 g     F .text	000000c0 SDHC_CardReadBlock(void*, unsigned long)
00007110 g     F .text	00000108 usb_serial_write
20007eb2 g     O .data	00000001 reverbEnabled
00007694  w    F .text	00000002 startup_late_hook
00008c24  w    F .text	00000004 usb_serial_class::available()
0000c6a8 g     F .text	000002dc strcmp
000276a4 g     O .text	00000400 sample_0_standard_DRUMS_filtersnap
00081ea4 g     O .text	00001e00 sample_0_nylonstrgtr_nguitrf2
0009db20 g     O .text	0000000c vtable for AudioEffectMultiply
2000ff08 g     O .bss	00000020 bitcrush
200081f0  w    O .data	00000024 usb_string_product_name
00002e48 g     F .text	0000009c Synth::IO::readPot(unsigned char)
000078a8 g     F .text	000000a4 delay
0000b440 g     F .text	0000007a .hidden __nedf2
00007680  w    F .text	00000006 tpm0_isr
20012b44 g     O .bss	00000002 dma_channel_allocated_mask
0009e4c8 g     F .fini	00000000 _fini
20008038 g     O .data	00000004 SdVolume::cacheBlockNumber_
00000c80 g     F .text	00000030 stopNote(unsigned char, unsigned char)
00005084 g     F .text	00000026 TwoWire::write(unsigned char)
200126e8 g     O .bss	00000008 AudioOutputPT8211::dma
0000ac84 g     F .text	00000018 copysignf
2000ffc8 g     O .bss	00000004 notes_played
00008cec g     F .text	0000001c Print::printf(char const*, ...)
00007680  w    F .text	00000006 i2s0_rx_isr
00007680  w    F .text	00000006 uart4_error_isr
00008d88 g     F .text	00000010 Print::print(long)
0000d1c0 g     F .text	0000000c atexit
000076d4  w    F .text	00000006 __cxa_guard_release
0000d0dc g     F .text	0000002c _write_r
00002dac g     F .text	0000009c Synth::IO::readSlidePot(unsigned char)
20012780 g     O .bss	00000054 SD
00083dc4 g     O .text	00000800 sample_1_vibraphone_vibese2
00009664 g     F .text	00000054 AudioStream::release(audio_block_struct*)
000093ac g     F .text	00000026 String::String(char const*)
00007680  w    F .text	00000006 can0_message_isr
0000aba8 g     F .text	0000000c nanf
20008658 g     O .data	00000004 _impure_ptr
00007680  w    F .text	00000006 can1_message_isr
20012774 g     O .bss	00000008 AudioOutputSPDIF::dma
00007680  w    F .text	00000006 nmi_isr
20007f20 g     O .data	0000006c Wire
000096b8 g     F .text	00000034 AudioStream::transmit(audio_block_struct*, unsigned char)
0000692c g     F .text	0000003c Adafruit_seesaw::setPWMFreq(unsigned char, unsigned short)
20007e68 g     O .data	00000001 ringModulationEnabled
000452a4 g     O .text	00006800 sample_23_standard_DRUMS_paisteping
00006640 g     F .text	000000b2 seesaw_NeoPixel::setPixelColor(unsigned short, unsigned long)
0009e474 g       .text	00000000 __preinit_array_end
20007e69 g     O .data	00000001 cutoffEnabled
0007a2a4 g     O .text	00002000 sample_11_standard_DRUMS_snare24
20012730 g     O .bss	00000008 AudioInputTDM::dma
0009d804  w    O .text	00000028 vtable for seesaw_NeoPixel
00005aec g     F .text	00000054 sdhc_isr
00004e3c g     F .text	000001c2 AudioEffectDelay::update()
000008d0 g     F .text	00000100 allocateVoice(unsigned char, unsigned char)
0000bfb8 g     F .text	0000002a __ascii_mbtowc
000095bc g     F .text	000000a8 AudioStream::allocate()
000668a4 g     O .text	00000a00 sample_36_standard_DRUMS_woodblock
00006bc8 g     F .text	0000000e Adafruit_MultiTrellis::Adafruit_MultiTrellis(Adafruit_NeoTrellis*, unsigned char, unsigned char)
0000502c  w    F .text	00000016 TwoWire::peek()
00005044  w    F .text	00000002 TwoWire::flush()
00000d14 g     F .text	00000150 setup
0009e174 g     O .text	00000054 usb_descriptor_list
00007b44 g     F .text	0000003c usb_rx
0000614c g     F .text	00000054 Sd2Card::waitNotBusy(unsigned int)
000049c4 g     F .text	00000072 AudioSynthWavetable::setState(int, int, float)
00002bc8  w    F .text	00000002 Adafruit_MultiTrellis::~Adafruit_MultiTrellis()
00000e64 g     F .text	00000114 updateFilter(bool&, float, float, AudioMixer4*, AudioConnection*, AudioConnection*, void (*)(float))
00007680  w    F .text	00000006 dma_ch10_isr
00002bc4  w    F .text	00000002 Print::flush()
00004970 g     F .text	00000054 AudioSynthWavetable::setFrequency(float)
2000fe90 g     O .bss	00000014 patchCord1
00007680  w    F .text	00000006 uart0_error_isr
2000fecc g     O .bss	00000014 patchCord4
00007ab8 g     F .text	00000040 usb_malloc
000584a4 g     O .text	00000e00 sample_35_standard_DRUMS_bockclave
00007680  w    F .text	00000006 i2s0_isr
20030000 g       .bss	00000000 _estack
00008940 g     F .text	00000038 DMAChannel::release()
000004cc g     F .text	00000094 updateBitcrush(float)
00007230 g     F .text	00000048 usb_serial_write_buffer_free
20007eb0 g     O .data	00000001 overallEnabled
00007680  w    F .text	00000006 enet_timer_isr
20011924 g     O .bss	000006b8 patchCord
00009748 g     F .text	00000068 AudioConnection::connect()
0000b4dc g     F .text	00000012 .hidden __aeabi_dcmpeq
00006258 g     F .text	00000060 Sd2Card::waitStartBlock()
20012740 g     O .bss	00000008 AudioInputPDM::dma
00005048 g     F .text	0000003a TwoWire::write(unsigned char const*, unsigned int)
00003574 g     F .text	000001b0 AudioEffectFreeverb::AudioEffectFreeverb()
20012b84 g     O .bss	00000001 AudioInputUSB::receive_flag
00008cdc  w    F .text	0000000e _write
20008bd8 g       .data	00000000 _edata
00006614 g     F .text	0000002a seesaw_NeoPixel::show()
00007680  w    F .text	00000006 i2s0_tx_isr
00007680  w    F .text	00000006 adc1_isr
2000805c g     O .data	0000000c AudioInputUSB::features
00008c2c  w    F .text	00000004 usb_serial_class::availableForWrite()
00007680  w    F .text	00000006 cmp0_isr
200117dc g     O .bss	00000014 patchCord21
00035ea4 g     O .text	00000e00 sample_32_standard_DRUMS_sambawhistle
00009eb8 g     F .text	0000004c ultoa
0009dc80 g     O .text	00000018 vtable for SdFile
00000860 g     F .text	00000070 OnControlChange(unsigned char, unsigned char, unsigned char)
000050ac g     F .text	00000094 TwoWire::begin()
000592a4 g     O .text	00000e00 sample_9_standard_DRUMS_bd15
000098e4 g     F .text	00000004 operator new(unsigned int)
000089f8 g     F .text	00000044 EventResponder::runFromInterrupt()
20008bd0 g     O .data	00000004 __malloc_trim_threshold
00008c1c  w    F .text	00000004 usb_serial_class::peek()
000097b0 g     F .text	0000007a AudioConnection::disconnect()
00006378 g     F .text	000000cc Sd2Card::writeData(unsigned char, unsigned char const*)
0000918c g     F .text	000000f4 usb_audio_transmit_callback
20011888 g     O .bss	00000014 patchCord28
0004baa4 g     O .text	00002400 sample_29_standard_DRUMS_agogolotone
000069b0 g     F .text	00000066 Adafruit_seesaw::begin(unsigned char, signed char, bool)
00003cec g     F .text	0000009c AudioFilterStateVariable::update_fixed(short const*, short*, short*, short*)
0000d974 g     F .text	00000114 __mdiff
0000b56c g     F .text	0000004e .hidden __aeabi_d2iz
0005faa4 g     O .text	00004200 sample_1_standard_DRUMS_whitenoisewave
000726a4 g     O .text	00001200 standard_DRUMS_samples
200129fd g     O .bss	00000001 usb_cdc_transmit_flush_timer
20012c22 g     O .bss	00000002 AudioStream::cpu_cycles_total
00007680  w    F .text	00000006 pit_isr
000061a0 g     F .text	000000b8 Sd2Card::cardCommand(unsigned char, unsigned long)
00006884 g     F .text	0000001a Adafruit_seesaw::readKeypad(keyEventRaw*, unsigned char)
0000582c g     F .text	00000080 SdVolume::cacheFlush()
00000b14 g     F .text	00000100 printVoices()
0009e1f0 g     O .text	00000101 _ctype_
00007680  w    F .text	00000006 dac0_isr
0009e474 g       .text	00000000 __init_array_start
0000b940  w    F .text	00000002 .hidden __aeabi_idiv0
00007680  w    F .text	00000006 can1_tx_warn_isr
0000b540 g     F .text	0000002c .hidden __unorddf2
0000753c g     F .text	000000fc analogRead
000062b8 g     F .text	000000c0 Sd2Card::SD_readBlock(unsigned long, unsigned char*)
00009c24 g     F .text	0000010c uart0_status_isr
00004aa8 g     F .text	00000100 AudioOutputI2S::isr()
00007680  w    F .text	00000006 mcg_isr
00004c40 g     F .text	000000f8 AudioOutputI2S::config_i2s()
00000400 g     O .text	00000010 flashconfigbytes
00008874 g     F .text	000000cc DMAChannel::begin(bool)
20008c58 g     O .bss	0000000c sgtl5000
0000ca40 g     F .text	000000dc strlen
00006524 g     F .text	0000005c seesaw_NeoPixel::updateLength(unsigned short)
0000b4cc g     F .text	00000010 .hidden __aeabi_cdcmpeq
0000b430 g     F .text	0000008a .hidden __gedf2
200081f0 g     O .data	00000024 usb_string_product_name_default
00003b2c g     F .text	0000007c AudioAmplifier::update()
20012728 g     O .bss	00000008 AudioOutputI2SQuad::dma
0000d0a8 g     F .text	00000018 vdprintf
00007680  w    F .text	00000006 dma_ch1_isr
00051aa4 g     O .text	00000a00 sample_2_standard_DRUMS_verbclickwave
2000fef4 g     O .bss	00000014 patchCord6
000104a4 g     O .text	00006a00 sample_21_standard_DRUMS_crash5
0009e154 g     O .text	0000000c vtable for AudioInputUSB
200073d4 g     O .dmabuffers	000000b4 usb_audio_receive_buffer
00007b80 g     F .text	0000002c usb_tx_packet_count
20008bf8  w    O .bss	00000060 Synth::SerialPortInterface::getData()::spBuffer
0000c5c8 g     F .text	000000ce strchr
00006e96 g     F .text	00000000 memcpy_tointerleaveR
2000ffb4 g     O .bss	00000014 patchCord19
20012b78 g     O .bss	00000004 AudioOutputUSB::right_2nd
00008c70 g     F .text	0000004a Print::print(String const&)
0000af64 g     F .text	0000003a .hidden __aeabi_f2d
00007680  w    F .text	00000006 dma_ch5_isr
00007680  w    F .text	00000006 can0_rx_warn_isr
200118e8 g     O .bss	00000038 cutoffMixer
00026ca4 g     O .text	00000a00 sample_10_standard_DRUMS_verbclickwave
00007680  w    F .text	00000006 can0_tx_warn_isr
00009908 g     F .text	000000d8 uart4_status_isr
00000000  w      *UND*	00000000 _Jv_RegisterClasses
200126f8 g     O .bss	00000008 AudioInputAnalog::dma
20012c1c g     O .bss	00000002 AudioStream::cpu_cycles_total_max
0000aca4 g     F .text	0000027a .hidden __subdf3
000076dc g     F .text	00000034 kinetis_hsrun_disable
0003fea4 g     O .text	00001600 sample_30_standard_DRUMS_cabasastrk
0009e474 g       .text	00000000 __preinit_array_start
0001031c  w    O .text	0000000c vtable for AudioStream
000064e0 g     F .text	0000002c seesaw_NeoPixel::seesaw_NeoPixel(unsigned short, unsigned char, unsigned short, TwoWire*)
000672a4 g     O .text	00001c00 sample_4_standard_DRUMS_guitarfret
0000d640 g     F .text	0000005a __lo0bits
0000a02c  w    F .text	00000002 serialEvent3()
0000b944 g     F .text	0000000a __aeabi_atexit
000076c8  w    F .text	0000000a __cxa_guard_acquire
00000000  w      *UND*	00000000 __register_frame_info
00007680  w    F .text	00000006 cmp2_isr
00008a3c g     F .text	00000004 pendablesrvreq_isr
0000046c g     F .text	00000060 updateReverb(float)
00002bc0  w    F .text	00000004 Print::availableForWrite()
00000678  w    F .text	0000000c AudioConnection::~AudioConnection()
2000865c g     O .data	0000016c __global_locale
00007680  w    F .text	00000006 wakeup_isr
0009db5c g     O .text	0000000c vtable for AudioEffectDelay
0009db44 g     O .text	0000000c vtable for AudioSynthWavetable
00003e78 g     F .text	000000fa AudioFilterStateVariable::update()
000188a4 g     O .text	00000800 sample_22_standard_DRUMS_vibraloop
000528a4 g     O .text	00005c00 sample_14_standard_DRUMS_hatopenms
00000c14 g     F .text	0000006c playNote(unsigned char, unsigned char, unsigned char)
00007680  w    F .text	00000006 cmp3_isr
00008d08 g     F .text	0000007e Print::printNumber(unsigned long, unsigned char, unsigned char)
00008e0c g     F .text	00000090 AudioInputUSB::update()
20007db8 g     O .data	00000080 channel_vol
20011ff0 g     O .bss	00000004 distortionValLast
0000ba38 g     F .text	00000010 free
200129dc g     O .bss	00000001 SdVolume::cacheDirty_
00007680  w    F .text	00000006 tpm2_isr
2001256c g     O .bss	00000004 overallValLast
0000d580 g     F .text	00000080 __multadd
0000d56c g     F .text	00000012 _Bfree
00007680  w    F .text	00000006 dma_ch0_isr
20008218  w    O .data	00000016 usb_string_serial_number
2000ff64 g     O .bss	00000014 patchCord14
00007680  w    F .text	00000006 enet_tx_isr



Disassembly of section .text:

00000000 <_VectorsFlash>:
  free(ptr);
}

void operator delete[](void * ptr)
{
  free(ptr);
       0:	... .....v..9v..
      10:	9v..9v..9v..9v..
      20:	9v..9v..9v...v..
      30:	.v..9v..=...A...
      40:	.v...v...v...v..
      50:	.v...v...v...v..
      60:	.v...v...v...v..
      70:	.v...v...v...v..
      80:	.v...v...v...v..
      90:	.v...v...v...v..
      a0:	.V...V...v...v..
      b0:	.v...v...v..%...
      c0:	.v.......v..Q...
      d0:	.v..-....v...v..
      e0:	.v...v...v...v..
      f0:	.v...v...v...v..
     100:	.v...v...v...v..
     110:	.v...|...v...v..
     120:	.v...v...v...v..
     130:	.v...v...v...v..
     140:	]....v.......v..
     150:	.v...v...v...v..
     160:	.v...v...V...v..
     170:	.v...v...v...v..
     180:	.v...Z...v...v..
     190:	.v...v..Q....v..
     1a0:	.v...v...v...v..
     1b0:	.v...v...v...v..
     1c0:	.v...v...v...v..

000001d0 <ResetHandler>:
	volatile int n;
#endif
	//volatile int count;

#ifdef KINETISK
	WDOG_UNLOCK = WDOG_UNLOCK_SEQ1;
     1d0:	ldr	r3, [pc, #368]	; (344 <ResetHandler+0x174>)
     1d2:	movw	r2, #50464	; 0xc520
#else
// hopefully all others fit into startup section (below 0x400)
__attribute__ ((section(".startup"),optimize("-Os")))
#endif
void ResetHandler(void)
{
     1d6:	push	{r4, lr}
	volatile int n;
#endif
	//volatile int count;

#ifdef KINETISK
	WDOG_UNLOCK = WDOG_UNLOCK_SEQ1;
     1d8:	strh	r2, [r3, #0]
	WDOG_UNLOCK = WDOG_UNLOCK_SEQ2;
     1da:	movw	r2, #55592	; 0xd928
     1de:	strh	r2, [r3, #0]
	__asm__ volatile ("nop");
     1e0:	nop
	__asm__ volatile ("nop");
     1e2:	nop
#endif
	// programs using the watchdog timer or needing to initialize hardware as
	// early as possible can implement startup_early_hook()
	startup_early_hook();
     1e4:	bl	7688 <startup_early_hook>
#elif defined(__MK20DX256__)
	SIM_SCGC3 = SIM_SCGC3_ADC1 | SIM_SCGC3_FTM2;
	SIM_SCGC5 = 0x00043F82;		// clocks active to all GPIO
	SIM_SCGC6 = SIM_SCGC6_RTC | SIM_SCGC6_FTM0 | SIM_SCGC6_FTM1 | SIM_SCGC6_ADC0 | SIM_SCGC6_FTFL;
#elif defined(__MK64FX512__) || defined(__MK66FX1M0__)
	SIM_SCGC3 = SIM_SCGC3_ADC1 | SIM_SCGC3_FTM2 | SIM_SCGC3_FTM3;
     1e8:	ldr	r3, [pc, #348]	; (348 <ResetHandler+0x178>)
     1ea:	mov.w	r2, #184549376	; 0xb000000
     1ee:	str	r2, [r3, #0]
	SIM_SCGC5 = 0x00043F82;		// clocks active to all GPIO
     1f0:	ldr	r2, [pc, #344]	; (34c <ResetHandler+0x17c>)
     1f2:	str	r2, [r3, #8]
	SIM_SCGC6 = SIM_SCGC6_RTC | SIM_SCGC6_FTM0 | SIM_SCGC6_FTM1 | SIM_SCGC6_ADC0 | SIM_SCGC6_FTFL;
     1f4:	ldr	r2, [pc, #344]	; (350 <ResetHandler+0x180>)
     1f6:	str	r2, [r3, #12]
	SIM_SCGC4 = SIM_SCGC4_USBOTG | 0xF0000030;
	SIM_SCGC5 = 0x00003F82;		// clocks active to all GPIO
	SIM_SCGC6 = SIM_SCGC6_ADC0 | SIM_SCGC6_TPM0 | SIM_SCGC6_TPM1 | SIM_SCGC6_TPM2 | SIM_SCGC6_FTFL;
#endif
#if defined(__MK64FX512__) || defined(__MK66FX1M0__)
	SCB_CPACR = 0x00F00000;
     1f8:	ldr	r3, [pc, #344]	; (354 <ResetHandler+0x184>)
     1fa:	mov.w	r2, #15728640	; 0xf00000
     1fe:	str	r2, [r3, #0]
#endif
#if defined(__MK66FX1M0__)
	LMEM_PCCCR = 0x85000003;
     200:	ldr	r3, [pc, #340]	; (358 <ResetHandler+0x188>)
     202:	ldr	r2, [pc, #344]	; (35c <ResetHandler+0x18c>)
     204:	str	r2, [r3, #0]
		RTC_SR = 0;
		RTC_CR = RTC_CR_SC16P | RTC_CR_SC4P | RTC_CR_OSCE;
	}
#endif
	// release I/O pins hold, if we woke up from VLLS mode
	if (PMC_REGSC & PMC_REGSC_ACKISO) PMC_REGSC |= PMC_REGSC_ACKISO;
     206:	ldr	r3, [pc, #344]	; (360 <ResetHandler+0x190>)
     208:	ldrb	r2, [r3, #0]
     20a:	lsls	r1, r2, #28
     20c:	bpl.n	216 <ResetHandler+0x46>
     20e:	ldrb	r2, [r3, #0]
     210:	orr.w	r2, r2, #8
     214:	strb	r2, [r3, #0]

    // since this is a write once register, make it visible to all F_CPU's
    // so we can into other sleep modes in the future at any speed
#if defined(__MK66FX1M0__)
	SMC_PMPROT = SMC_PMPROT_AHSRUN | SMC_PMPROT_AVLP | SMC_PMPROT_ALLS | SMC_PMPROT_AVLLS;
     216:	ldr	r3, [pc, #332]	; (364 <ResetHandler+0x194>)
#else
	SMC_PMPROT = SMC_PMPROT_AVLP | SMC_PMPROT_ALLS | SMC_PMPROT_AVLLS;
#endif
    
	// TODO: do this while the PLL is waiting to lock....
	while (dest < &_edata) *dest++ = *src++;
     218:	ldr	r1, [pc, #332]	; (368 <ResetHandler+0x198>)
	if (PMC_REGSC & PMC_REGSC_ACKISO) PMC_REGSC |= PMC_REGSC_ACKISO;

    // since this is a write once register, make it visible to all F_CPU's
    // so we can into other sleep modes in the future at any speed
#if defined(__MK66FX1M0__)
	SMC_PMPROT = SMC_PMPROT_AHSRUN | SMC_PMPROT_AVLP | SMC_PMPROT_ALLS | SMC_PMPROT_AVLLS;
     21a:	movs	r2, #170	; 0xaa
     21c:	strb	r2, [r3, #0]
     21e:	ldr	r2, [pc, #332]	; (36c <ResetHandler+0x19c>)
     220:	ldr	r3, [pc, #332]	; (370 <ResetHandler+0x1a0>)
#else
	SMC_PMPROT = SMC_PMPROT_AVLP | SMC_PMPROT_ALLS | SMC_PMPROT_AVLLS;
#endif
    
	// TODO: do this while the PLL is waiting to lock....
	while (dest < &_edata) *dest++ = *src++;
     222:	cmp	r3, r1
     224:	bcs.n	230 <ResetHandler+0x60>
     226:	ldr.w	r0, [r2, #4]!
     22a:	str.w	r0, [r3], #4
     22e:	b.n	222 <ResetHandler+0x52>
     230:	ldr	r3, [pc, #320]	; (374 <ResetHandler+0x1a4>)
	dest = &_sbss;
	while (dest < &_ebss) *dest++ = 0;
     232:	ldr	r1, [pc, #324]	; (378 <ResetHandler+0x1a8>)
     234:	movs	r2, #0
     236:	cmp	r3, r1
     238:	bcs.n	240 <ResetHandler+0x70>
     23a:	str.w	r2, [r3], #4
     23e:	b.n	236 <ResetHandler+0x66>

	// default all interrupts to medium priority level
	for (i=0; i < NVIC_NUM_INTERRUPTS + 16; i++) _VectorsRam[i] = _VectorsFlash[i];
     240:	ldr	r1, [pc, #312]	; (37c <ResetHandler+0x1ac>)
     242:	ldr	r2, [pc, #316]	; (380 <ResetHandler+0x1b0>)
     244:	movs	r3, #0
     246:	ldr.w	r0, [r2, r3, lsl #2]
     24a:	str.w	r0, [r1, r3, lsl #2]
     24e:	adds	r3, #1
     250:	cmp	r3, #116	; 0x74
     252:	bne.n	246 <ResetHandler+0x76>
     254:	ldr	r3, [pc, #300]	; (384 <ResetHandler+0x1b4>)
	for (i=0; i < NVIC_NUM_INTERRUPTS; i++) NVIC_SET_PRIORITY(i, 128);
     256:	ldr	r2, [pc, #304]	; (388 <ResetHandler+0x1b8>)
     258:	movs	r1, #128	; 0x80
     25a:	strb.w	r1, [r3], #1
     25e:	cmp	r3, r2
     260:	bne.n	25a <ResetHandler+0x8a>
	SCB_VTOR = (uint32_t)_VectorsRam;	// use vector table in RAM
     262:	ldr	r3, [pc, #296]	; (38c <ResetHandler+0x1bc>)
     264:	ldr	r2, [pc, #276]	; (37c <ResetHandler+0x1ac>)
     266:	str	r2, [r3, #0]
	//  C6[PLLS] bit is written to 0
	//  C2[LP] bit is written to 1
#else
    #if defined(KINETISK)
    // enable capacitors for crystal
    OSC0_CR = OSC_SC8P | OSC_SC2P | OSC_ERCLKEN;
     268:	ldr	r3, [pc, #292]	; (390 <ResetHandler+0x1c0>)
     26a:	movs	r2, #138	; 0x8a
     26c:	strb	r2, [r3, #0]
    #elif defined(KINETISL)
    // enable capacitors for crystal
    OSC0_CR = OSC_SC8P | OSC_SC2P | OSC_ERCLKEN;
    #endif
	// enable osc, 8-32 MHz range, low power mode
	MCG_C2 = MCG_C2_RANGE0(2) | MCG_C2_EREFS;
     26e:	sub.w	r3, r3, #4096	; 0x1000
     272:	movs	r2, #36	; 0x24
     274:	strb	r2, [r3, #1]
	// switch to crystal as clock source, FLL input = 16 MHz / 512
	MCG_C1 =  MCG_C1_CLKS(2) | MCG_C1_FRDIV(4);
     276:	movs	r2, #160	; 0xa0
     278:	strb	r2, [r3, #0]
	// wait for crystal oscillator to begin
	while ((MCG_S & MCG_S_OSCINIT0) == 0) ;
     27a:	ldrb	r2, [r3, #6]
     27c:	lsls	r2, r2, #30
     27e:	bpl.n	27a <ResetHandler+0xaa>
	// wait for FLL to use oscillator
	while ((MCG_S & MCG_S_IREFST) != 0) ;
     280:	ldrb	r2, [r3, #6]
     282:	lsls	r4, r2, #27
     284:	bmi.n	280 <ResetHandler+0xb0>
	// wait for MCGOUT to use oscillator
	while ((MCG_S & MCG_S_CLKST_MASK) != MCG_S_CLKST(2)) ;
     286:	ldr	r2, [pc, #268]	; (394 <ResetHandler+0x1c4>)
     288:	ldrb	r3, [r2, #6]
     28a:	and.w	r3, r3, #12
     28e:	cmp	r3, #8
     290:	bne.n	288 <ResetHandler+0xb8>
	//   C2[LP] bit is written to 1
  #else
	// if we need faster than the crystal, turn on the PLL
   #if defined(__MK66FX1M0__)
    #if F_CPU > 120000000
	SMC_PMCTRL = SMC_PMCTRL_RUNM(3); // enter HSRUN mode
     292:	ldr	r3, [pc, #260]	; (398 <ResetHandler+0x1c8>)
     294:	movs	r2, #96	; 0x60
     296:	strb	r2, [r3, #0]
	while (SMC_PMSTAT != SMC_PMSTAT_HSRUN) ; // wait for HSRUN
     298:	adds	r3, #2
     29a:	ldrb	r2, [r3, #0]
     29c:	cmp	r2, #128	; 0x80
     29e:	bne.n	29a <ResetHandler+0xca>
	MCG_C6 = MCG_C6_PLLS | MCG_C6_VDIV0(11);
    #elif F_CPU == 192000000
	MCG_C5 = MCG_C5_PRDIV0(0);
	MCG_C6 = MCG_C6_PLLS | MCG_C6_VDIV0(8);
    #elif F_CPU == 180000000
	MCG_C5 = MCG_C5_PRDIV0(1);
     2a0:	ldr	r3, [pc, #240]	; (394 <ResetHandler+0x1c4>)
     2a2:	movs	r2, #1
     2a4:	strb	r2, [r3, #4]
	MCG_C6 = MCG_C6_PLLS | MCG_C6_VDIV0(29);
     2a6:	movs	r2, #93	; 0x5d
     2a8:	strb	r2, [r3, #5]
    #error "This clock speed isn't supported..."
    #endif
   #endif

	// wait for PLL to start using xtal as its input
	while (!(MCG_S & MCG_S_PLLST)) ;
     2aa:	ldrb	r2, [r3, #6]
     2ac:	lsls	r0, r2, #26
     2ae:	bpl.n	2aa <ResetHandler+0xda>
	// wait for PLL to lock
	while (!(MCG_S & MCG_S_LOCK0)) ;
     2b0:	ldrb	r1, [r3, #6]
     2b2:	ldr	r2, [pc, #224]	; (394 <ResetHandler+0x1c4>)
     2b4:	lsls	r1, r1, #25
     2b6:	bpl.n	2b0 <ResetHandler+0xe0>
	#endif
	SIM_CLKDIV2 = SIM_CLKDIV2_USBDIV(3);
#elif F_CPU == 180000000
	// config divisors: 180 MHz core, 60 MHz bus, 25.7 MHz flash, USB = IRC48M
	#if F_BUS == 60000000
	SIM_CLKDIV1 = SIM_CLKDIV1_OUTDIV1(0) | SIM_CLKDIV1_OUTDIV2(2) | SIM_CLKDIV1_OUTDIV4(6);
     2b8:	ldr	r3, [pc, #224]	; (39c <ResetHandler+0x1cc>)
     2ba:	ldr	r1, [pc, #228]	; (3a0 <ResetHandler+0x1d0>)
     2bc:	str	r1, [r3, #0]
	#elif F_BUS == 90000000
	SIM_CLKDIV1 = SIM_CLKDIV1_OUTDIV1(0) | SIM_CLKDIV1_OUTDIV2(1) | SIM_CLKDIV1_OUTDIV4(6);
	#else
	#error "This F_CPU & F_BUS combination is not supported"
	#endif
	SIM_CLKDIV2 = SIM_CLKDIV2_USBDIV(0);
     2be:	movs	r1, #0
     2c0:	str	r1, [r3, #4]
#error "Error, F_CPU must be 256, 240, 216, 192, 180, 168, 144, 120, 96, 72, 48, 24, 16, 8, 4, or 2 MHz"
#endif

#if F_CPU > 16000000
	// switch to PLL as clock source, FLL input = 16 MHz / 512
	MCG_C1 = MCG_C1_CLKS(0) | MCG_C1_FRDIV(4);
     2c2:	movs	r3, #32
     2c4:	strb	r3, [r2, #0]
	// wait for PLL clock to be used
	while ((MCG_S & MCG_S_CLKST_MASK) != MCG_S_CLKST(3)) ;
     2c6:	ldrb	r3, [r2, #6]
     2c8:	and.w	r3, r3, #12
     2cc:	cmp	r3, #12
     2ce:	bne.n	2c6 <ResetHandler+0xf6>
	// now we're in PEE mode
	// trace is CPU clock, CLKOUT=OSCERCLK0
	#if defined(KINETISK)
	#if F_CPU == 256000000 || F_CPU == 216000000 || F_CPU == 180000000
	// USB uses IRC48
	SIM_SOPT2 = SIM_SOPT2_USBSRC | SIM_SOPT2_IRC48SEL | SIM_SOPT2_TRACECLKSEL | SIM_SOPT2_CLKOUTSEL(6);
     2d0:	ldr	r3, [pc, #208]	; (3a4 <ResetHandler+0x1d4>)
     2d2:	ldr	r2, [pc, #212]	; (3a8 <ResetHandler+0x1d8>)
     2d4:	str	r2, [r3, #0]
#endif

#if defined(__MK66FX1M0__)
	// If the RTC oscillator isn't enabled, get it started.  For Teensy 3.6
	// we don't do this early.  See comment above about slow rising power.
	if (!(RTC_CR & RTC_CR_OSCE)) {
     2d6:	ldr	r2, [pc, #212]	; (3ac <ResetHandler+0x1dc>)
     2d8:	ldr	r4, [pc, #212]	; (3b0 <ResetHandler+0x1e0>)
     2da:	ldr	r3, [r2, #0]
     2dc:	ands.w	r3, r3, #256	; 0x100
     2e0:	bne.n	2ea <ResetHandler+0x11a>
		RTC_SR = 0;
     2e2:	str	r3, [r4, #0]
		RTC_CR = RTC_CR_SC16P | RTC_CR_SC4P | RTC_CR_OSCE;
     2e4:	mov.w	r3, #5376	; 0x1500
     2e8:	str	r3, [r2, #0]
	}
#endif

	// initialize the SysTick counter
	SYST_RVR = (F_CPU / 1000) - 1;
     2ea:	ldr	r3, [pc, #200]	; (3b4 <ResetHandler+0x1e4>)
     2ec:	ldr	r2, [pc, #200]	; (3b8 <ResetHandler+0x1e8>)
     2ee:	str	r2, [r3, #0]
	SYST_CVR = 0;
     2f0:	movs	r2, #0
     2f2:	str	r2, [r3, #4]
	SYST_CSR = SYST_CSR_CLKSOURCE | SYST_CSR_TICKINT | SYST_CSR_ENABLE;
     2f4:	movs	r2, #7
     2f6:	str.w	r2, [r3, #-4]
	SCB_SHPR3 = 0x20200000;  // Systick = priority 32
     2fa:	ldr	r2, [pc, #192]	; (3bc <ResetHandler+0x1ec>)
     2fc:	str.w	r2, [r3, #3340]	; 0xd0c

	//init_pins();
	__enable_irq();
     300:	cpsie	i

	_init_Teensyduino_internal_();
     302:	bl	794c <_init_Teensyduino_internal_>

#if defined(KINETISK)
	// RTC initialization
	if (RTC_SR & RTC_SR_TIF) {
     306:	ldr	r3, [r4, #0]
     308:	lsls	r2, r3, #31
     30a:	bpl.n	318 <ResetHandler+0x148>
		// compiled-in time will be stale.  Write a special
		// flag into the VBAT register file indicating the
		// RTC is set with known-stale time and should be
		// updated when fresh time is known.
		#if ARDUINO >= 10600
		rtc_set((uint32_t)&__rtc_localtime);
     30c:	ldr	r0, [pc, #176]	; (3c0 <ResetHandler+0x1f0>)
     30e:	bl	7808 <rtc_set>
		#else
		rtc_set(TIME_T);
		#endif
		*(uint32_t *)0x4003E01C = 0x5A94C3A5;
     312:	ldr	r3, [pc, #176]	; (3c4 <ResetHandler+0x1f4>)
     314:	ldr	r2, [pc, #176]	; (3c8 <ResetHandler+0x1f8>)
     316:	str	r2, [r3, #0]
	}
	if ((RCM_SRS0 & RCM_SRS0_PIN) && (*(uint32_t *)0x4003E01C == 0x5A94C3A5)) {
     318:	ldr	r3, [pc, #176]	; (3cc <ResetHandler+0x1fc>)
     31a:	ldrb	r3, [r3, #0]
     31c:	lsls	r3, r3, #25
     31e:	bpl.n	334 <ResetHandler+0x164>
     320:	ldr	r4, [pc, #160]	; (3c4 <ResetHandler+0x1f4>)
     322:	ldr	r3, [pc, #164]	; (3c8 <ResetHandler+0x1f8>)
     324:	ldr	r2, [r4, #0]
     326:	cmp	r2, r3
     328:	bne.n	334 <ResetHandler+0x164>
		// Our compiled-in time will be very fresh, so set
		// the RTC with this, and clear the VBAT resister file
		// data so we don't mess with the time after it's been
		// set well.
		#if ARDUINO >= 10600
		rtc_set((uint32_t)&__rtc_localtime);
     32a:	ldr	r0, [pc, #148]	; (3c0 <ResetHandler+0x1f0>)
     32c:	bl	7808 <rtc_set>
		#else
		rtc_set(TIME_T);
		#endif
		*(uint32_t *)0x4003E01C = 0;
     330:	movs	r3, #0
     332:	str	r3, [r4, #0]
	}
#endif

	__libc_init_array();
     334:	bl	b9d8 <__libc_init_array>

	startup_late_hook();
     338:	bl	7694 <startup_late_hook>
	main();
     33c:	bl	9540 <main>
     340:	b.n	340 <ResetHandler+0x170>
     342:	nop
     344:	.word	0x4005200e
     348:	.word	0x40048030
     34c:	.word	0x00043f82
     350:	.word	0x2b000001
     354:	.word	0xe000ed88
     358:	.word	0xe0082000
     35c:	.word	0x85000003
     360:	.word	0x4007d002
     364:	.word	0x4007e000
     368:	.word	0x20008bd8
     36c:	.word	0x0009e4d0
     370:	.word	0x20007db0
     374:	.word	0x20008bd8
     378:	.word	0x20012f7c
     37c:	.word	0x20007200
     380:	.word	0x00000000
     384:	.word	0xe000e400
     388:	.word	0xe000e464
     38c:	.word	0xe000ed08
     390:	.word	0x40065000
     394:	.word	0x40064000
     398:	.word	0x4007e001
     39c:	.word	0x40048044
     3a0:	.word	0x02060000
     3a4:	.word	0x40048004
     3a8:	.word	0x000710c0
     3ac:	.word	0x4003d010
     3b0:	.word	0x4003d014
     3b4:	.word	0xe000e014
     3b8:	.word	0x0002bf1f
     3bc:	.word	0x20200000
     3c0:	.word	0x00000031
     3c4:	.word	0x4003e01c
     3c8:	.word	0x5a94c3a5
     3cc:	.word	0x4007f000
     3d0:	.word	0xffffffff
     3d4:	.word	0xffffffff
     3d8:	.word	0xffffffff
     3dc:	.word	0xffffffff
     3e0:	.word	0xffffffff
     3e4:	.word	0xffffffff
     3e8:	.word	0xffffffff
     3ec:	.word	0xffffffff
     3f0:	.word	0xffffffff
     3f4:	.word	0xffffffff
     3f8:	.word	0xffffffff
     3fc:	.word	0xffffffff

00000400 <flashconfigbytes>:
     400:	................

00000410 <__do_global_dtors_aux>:
     410:	push	{r4, lr}
     412:	ldr	r4, [pc, #20]	; (428 <__do_global_dtors_aux+0x18>)
     414:	ldrb	r3, [r4, #0]
     416:	cbnz	r3, 426 <__do_global_dtors_aux+0x16>
     418:	ldr	r3, [pc, #16]	; (42c <__do_global_dtors_aux+0x1c>)
     41a:	cbz	r3, 422 <__do_global_dtors_aux+0x12>
     41c:	ldr	r0, [pc, #16]	; (430 <__do_global_dtors_aux+0x20>)
     41e:	nop.w
     422:	movs	r3, #1
     424:	strb	r3, [r4, #0]
     426:	pop	{r4, pc}
     428:	.word	0x20008bd8
     42c:	.word	0x00000000
     430:	.word	0x0009e4cc

00000434 <frame_dummy>:
     434:	ldr	r3, [pc, #32]	; (458 <frame_dummy+0x24>)
     436:	push	{r4, lr}
     438:	cbz	r3, 442 <frame_dummy+0xe>
     43a:	ldr	r1, [pc, #32]	; (45c <frame_dummy+0x28>)
     43c:	ldr	r0, [pc, #32]	; (460 <frame_dummy+0x2c>)
     43e:	nop.w
     442:	ldr	r0, [pc, #32]	; (464 <frame_dummy+0x30>)
     444:	ldr	r3, [r0, #0]
     446:	cbnz	r3, 44a <frame_dummy+0x16>
     448:	pop	{r4, pc}
     44a:	ldr	r3, [pc, #28]	; (468 <frame_dummy+0x34>)
     44c:	cmp	r3, #0
     44e:	beq.n	448 <frame_dummy+0x14>
     450:	ldmia.w	sp!, {r4, lr}
     454:	bx	r3
     456:	nop
     458:	.word	0x00000000
     45c:	.word	0x20008bdc
     460:	.word	0x0009e4cc
     464:	.word	0x20008bd8
     468:	.word	0x00000000

0000046c <updateReverb(float)>:
{
public:
	AudioEffectFreeverb();
	virtual void update();
	void roomsize(float n) {
		if (n > 1.0f) n = 1.0f;
     46c:	vmov.f32	s15, #112	; 0x3f800000  1.0
     470:	vcmpe.f32	s0, s15
     474:	vmrs	APSR_nzcv, fpscr
     478:	ble.n	488 <updateReverb(float)+0x1c>
		else if (n < 0.0) n = 0.0f;
		combfeeback = (int)(n * 9175.04f) + 22937;
     47a:	ldr	r1, [pc, #72]	; (4c4 <updateReverb(float)+0x58>)
     47c:	movw	r2, #22112	; 0x5660
{
public:
	AudioEffectFreeverb();
	virtual void update();
	void roomsize(float n) {
		if (n > 1.0f) n = 1.0f;
     480:	movw	r3, #32112	; 0x7d70
		else if (n < 0.0) n = 0.0f;
		combfeeback = (int)(n * 9175.04f) + 22937;
     484:	strh	r3, [r1, r2]
     486:	bx	lr
public:
	AudioEffectFreeverb();
	virtual void update();
	void roomsize(float n) {
		if (n > 1.0f) n = 1.0f;
		else if (n < 0.0) n = 0.0f;
     488:	vcmpe.f32	s0, #0.0
     48c:	vmrs	APSR_nzcv, fpscr
     490:	bmi.n	4b4 <updateReverb(float)+0x48>
     492:	vldr	s15, [pc, #52]	; 4c8 <updateReverb(float)+0x5c>
		combfeeback = (int)(n * 9175.04f) + 22937;
     496:	ldr	r1, [pc, #44]	; (4c4 <updateReverb(float)+0x58>)
     498:	vmul.f32	s0, s0, s15
     49c:	movw	r2, #22112	; 0x5660
     4a0:	vcvt.s32.f32	s0, s0
     4a4:	vmov	r3, s0
     4a8:	add.w	r3, r3, #22912	; 0x5980
     4ac:	adds	r3, #25
     4ae:	sxth	r3, r3
     4b0:	strh	r3, [r1, r2]
     4b2:	bx	lr
     4b4:	ldr	r1, [pc, #12]	; (4c4 <updateReverb(float)+0x58>)
     4b6:	movw	r2, #22112	; 0x5660
public:
	AudioEffectFreeverb();
	virtual void update();
	void roomsize(float n) {
		if (n > 1.0f) n = 1.0f;
		else if (n < 0.0) n = 0.0f;
     4ba:	movw	r3, #22937	; 0x5999
		combfeeback = (int)(n * 9175.04f) + 22937;
     4be:	strh	r3, [r1, r2]
     4c0:	bx	lr
     4c2:	nop
     4c4:	.word	0x20008c64
     4c8:	.word	0x460f5c29

000004cc <updateBitcrush(float)>:
  reverb.roomsize(input);
}

void updateBitcrush(float input)
{
  bitcrush.bits((uint8_t) ((1 - bitcrushValLast) * 16));
     4cc:	ldr	r3, [pc, #124]	; (54c <updateBitcrush(float)+0x80>)
     4ce:	vldr	s14, [r3]
     4d2:	vmov.f32	s15, #112	; 0x3f800000  1.0
     4d6:	vsub.f32	s15, s15, s14
     4da:	vmov.f32	s14, #48	; 0x41800000  16.0
     4de:	vmul.f32	s15, s15, s14
{
  reverb.roomsize(input);
}

void updateBitcrush(float input)
{
     4e2:	sub	sp, #8
  bitcrush.bits((uint8_t) ((1 - bitcrushValLast) * 16));
     4e4:	vcvt.u32.f32	s15, s15
     4e8:	vstr	s15, [sp, #4]
     4ec:	ldrb.w	r3, [sp, #4]
{
public:
	AudioEffectBitcrusher(void)
	  : AudioStream(1, inputQueueArray) {}
	void bits(uint8_t b) {
		if (b > 16) b = 16;
     4f0:	cmp	r3, #16
     4f2:	bhi.n	53e <updateBitcrush(float)+0x72>
		else if (b == 0) b = 1;
     4f4:	cmp	r3, #0
     4f6:	it	eq
     4f8:	moveq	r3, #1
  bitcrush.sampleRate((1 - distortionValLast) * 44100);
     4fa:	ldr	r2, [pc, #84]	; (550 <updateBitcrush(float)+0x84>)
		crushBits = b;
	}
        void sampleRate(float hz) {
		int n = (AUDIO_SAMPLE_RATE_EXACT / hz) + 0.5;
     4fc:	vldr	s11, [pc, #84]	; 554 <updateBitcrush(float)+0x88>
     500:	vldr	s14, [r2]
     504:	vldr	s12, [pc, #80]	; 558 <updateBitcrush(float)+0x8c>
	AudioEffectBitcrusher(void)
	  : AudioStream(1, inputQueueArray) {}
	void bits(uint8_t b) {
		if (b > 16) b = 16;
		else if (b == 0) b = 1;
		crushBits = b;
     508:	ldr	r2, [pc, #80]	; (55c <updateBitcrush(float)+0x90>)
	}
        void sampleRate(float hz) {
		int n = (AUDIO_SAMPLE_RATE_EXACT / hz) + 0.5;
     50a:	vmov.f32	s15, #112	; 0x3f800000  1.0
     50e:	vsub.f32	s14, s15, s14
     512:	vmov.f32	s13, #96	; 0x3f000000  0.5
     516:	vmul.f32	s14, s14, s11
	AudioEffectBitcrusher(void)
	  : AudioStream(1, inputQueueArray) {}
	void bits(uint8_t b) {
		if (b > 16) b = 16;
		else if (b == 0) b = 1;
		crushBits = b;
     51a:	strb	r3, [r2, #24]
	}
        void sampleRate(float hz) {
		int n = (AUDIO_SAMPLE_RATE_EXACT / hz) + 0.5;
     51c:	vdiv.f32	s15, s12, s14
     520:	vadd.f32	s15, s15, s13
     524:	vcvt.s32.f32	s15, s15
     528:	vmov	r3, s15
		if (n < 1) n = 1;
     52c:	cmp	r3, #0
     52e:	ble.n	542 <updateBitcrush(float)+0x76>
     530:	cmp	r3, #64	; 0x40
     532:	it	ge
     534:	movge	r3, #64	; 0x40
     536:	uxtb	r3, r3
		else if (n > 64) n = 64;
		sampleStep = n;
     538:	strb	r3, [r2, #25]
}
     53a:	add	sp, #8
     53c:	bx	lr
{
public:
	AudioEffectBitcrusher(void)
	  : AudioStream(1, inputQueueArray) {}
	void bits(uint8_t b) {
		if (b > 16) b = 16;
     53e:	movs	r3, #16
     540:	b.n	4fa <updateBitcrush(float)+0x2e>
		else if (b == 0) b = 1;
		crushBits = b;
	}
        void sampleRate(float hz) {
		int n = (AUDIO_SAMPLE_RATE_EXACT / hz) + 0.5;
		if (n < 1) n = 1;
     542:	movs	r3, #1
		else if (n > 64) n = 64;
		sampleStep = n;
     544:	strb	r3, [r2, #25]
     546:	add	sp, #8
     548:	bx	lr
     54a:	nop
     54c:	.word	0x200125d8
     550:	.word	0x20011ff0
     554:	.word	0x472c4400
     558:	.word	0x472c55a6
     55c:	.word	0x2000ff08

00000560 <updateRingModulation(float)>:
  echo.delay(0, roundf(input * 500));
}

void updateRingModulation(float input)
{
  ringModulation.frequency((int) (input * 10));
     560:	vmov.f32	s15, #36	; 0x41200000  10.0
     564:	vmul.f32	s0, s0, s15
     568:	vcvt.s32.f32	s0, s0
     56c:	vcvt.f32.s32	s0, s0
class AudioSynthWaveformSine : public AudioStream
{
public:
	AudioSynthWaveformSine() : AudioStream(0, NULL), magnitude(16384) {}
	void frequency(float freq) {
		if (freq < 0.0) freq = 0.0;
     570:	vcmpe.f32	s0, #0.0
     574:	vmrs	APSR_nzcv, fpscr
     578:	bmi.n	5a6 <updateRingModulation(float)+0x46>
		else if (freq > AUDIO_SAMPLE_RATE_EXACT/2) freq = AUDIO_SAMPLE_RATE_EXACT/2;
     57a:	vldr	s15, [pc, #52]	; 5b0 <updateRingModulation(float)+0x50>
     57e:	vcmpe.f32	s0, s15
     582:	vmrs	APSR_nzcv, fpscr
     586:	ble.n	590 <updateRingModulation(float)+0x30>
		phase_increment = freq * (4294967296.0 / AUDIO_SAMPLE_RATE_EXACT);
     588:	ldr	r2, [pc, #40]	; (5b4 <updateRingModulation(float)+0x54>)
{
public:
	AudioSynthWaveformSine() : AudioStream(0, NULL), magnitude(16384) {}
	void frequency(float freq) {
		if (freq < 0.0) freq = 0.0;
		else if (freq > AUDIO_SAMPLE_RATE_EXACT/2) freq = AUDIO_SAMPLE_RATE_EXACT/2;
     58a:	ldr	r3, [pc, #44]	; (5b8 <updateRingModulation(float)+0x58>)
		phase_increment = freq * (4294967296.0 / AUDIO_SAMPLE_RATE_EXACT);
     58c:	str	r3, [r2, #28]
     58e:	bx	lr
     590:	vldr	s15, [pc, #40]	; 5bc <updateRingModulation(float)+0x5c>
     594:	ldr	r2, [pc, #28]	; (5b4 <updateRingModulation(float)+0x54>)
     596:	vmul.f32	s0, s0, s15
     59a:	vcvt.u32.f32	s15, s0
     59e:	vmov	r3, s15
     5a2:	str	r3, [r2, #28]
     5a4:	bx	lr
     5a6:	ldr	r2, [pc, #12]	; (5b4 <updateRingModulation(float)+0x54>)
class AudioSynthWaveformSine : public AudioStream
{
public:
	AudioSynthWaveformSine() : AudioStream(0, NULL), magnitude(16384) {}
	void frequency(float freq) {
		if (freq < 0.0) freq = 0.0;
     5a8:	movs	r3, #0
		else if (freq > AUDIO_SAMPLE_RATE_EXACT/2) freq = AUDIO_SAMPLE_RATE_EXACT/2;
		phase_increment = freq * (4294967296.0 / AUDIO_SAMPLE_RATE_EXACT);
     5aa:	str	r3, [r2, #28]
     5ac:	bx	lr
     5ae:	nop
     5b0:	.word	0x46ac55a6
     5b4:	.word	0x2001000c
     5b8:	.word	0x7fffff80
     5bc:	.word	0x47be244b

000005c0 <updateEcho(float)>:
  bitcrush.sampleRate((1 - distortionValLast) * 44100);
}

void updateEcho(float input)
{
  echo.delay(0, roundf(input * 500));
     5c0:	vldr	s15, [pc, #164]	; 668 <updateEcho(float)+0xa8>
  bitcrush.bits((uint8_t) ((1 - bitcrushValLast) * 16));
  bitcrush.sampleRate((1 - distortionValLast) * 44100);
}

void updateEcho(float input)
{
     5c4:	push	{r3, r4, r5, lr}
  echo.delay(0, roundf(input * 500));
     5c6:	vmul.f32	s0, s0, s15
     5ca:	bl	a030 <roundf>
		maxblocks = 0;
		memset(queue, 0, sizeof(queue));
	}
	void delay(uint8_t channel, float milliseconds) {
		if (channel >= 8) return;
		if (milliseconds < 0.0) milliseconds = 0.0;
     5ce:	vcmpe.f32	s0, #0.0
     5d2:	vmrs	APSR_nzcv, fpscr
     5d6:	bmi.n	656 <updateEcho(float)+0x96>
		uint32_t n = (milliseconds*(AUDIO_SAMPLE_RATE_EXACT/1000.0))+0.5;
     5d8:	vldr	s14, [pc, #144]	; 66c <updateEcho(float)+0xac>
		uint32_t nmax = AUDIO_BLOCK_SAMPLES * (DELAY_QUEUE_SIZE-1);
		if (n > nmax) n = nmax;
     5dc:	ldr	r3, [pc, #144]	; (670 <updateEcho(float)+0xb0>)
		memset(queue, 0, sizeof(queue));
	}
	void delay(uint8_t channel, float milliseconds) {
		if (channel >= 8) return;
		if (milliseconds < 0.0) milliseconds = 0.0;
		uint32_t n = (milliseconds*(AUDIO_SAMPLE_RATE_EXACT/1000.0))+0.5;
     5de:	vmov.f32	s15, #96	; 0x3f000000  0.5
     5e2:	vfma.f32	s15, s0, s14
     5e6:	vcvt.u32.f32	s15, s15
     5ea:	vmov	r2, s15
		uint32_t nmax = AUDIO_BLOCK_SAMPLES * (DELAY_QUEUE_SIZE-1);
		if (n > nmax) n = nmax;
     5ee:	cmp	r2, r3
     5f0:	bls.n	65c <updateEcho(float)+0x9c>
     5f2:	mov	r2, r3
     5f4:	mov.w	r3, #832	; 0x340
		uint32_t blks = (n + (AUDIO_BLOCK_SAMPLES-1)) / AUDIO_BLOCK_SAMPLES + 1;
		if (!(activemask & (1<<channel))) {
     5f8:	ldr	r4, [pc, #120]	; (674 <updateEcho(float)+0xb4>)
     5fa:	ldrb	r0, [r4, #24]
     5fc:	lsls	r1, r0, #31
     5fe:	bmi.n	612 <updateEcho(float)+0x52>
			// enabling a previously disabled channel
			position[channel] = n;
			if (blks > maxblocks) maxblocks = blks;
     600:	ldrh	r1, [r4, #30]
		uint32_t nmax = AUDIO_BLOCK_SAMPLES * (DELAY_QUEUE_SIZE-1);
		if (n > nmax) n = nmax;
		uint32_t blks = (n + (AUDIO_BLOCK_SAMPLES-1)) / AUDIO_BLOCK_SAMPLES + 1;
		if (!(activemask & (1<<channel))) {
			// enabling a previously disabled channel
			position[channel] = n;
     602:	str	r2, [r4, #32]
			if (blks > maxblocks) maxblocks = blks;
			activemask |= (1<<channel);
     604:	orr.w	r0, r0, #1
		if (n > nmax) n = nmax;
		uint32_t blks = (n + (AUDIO_BLOCK_SAMPLES-1)) / AUDIO_BLOCK_SAMPLES + 1;
		if (!(activemask & (1<<channel))) {
			// enabling a previously disabled channel
			position[channel] = n;
			if (blks > maxblocks) maxblocks = blks;
     608:	cmp	r1, r3
			activemask |= (1<<channel);
     60a:	strb	r0, [r4, #24]
		if (n > nmax) n = nmax;
		uint32_t blks = (n + (AUDIO_BLOCK_SAMPLES-1)) / AUDIO_BLOCK_SAMPLES + 1;
		if (!(activemask & (1<<channel))) {
			// enabling a previously disabled channel
			position[channel] = n;
			if (blks > maxblocks) maxblocks = blks;
     60c:	it	cc
     60e:	strhcc	r3, [r4, #30]
     610:	pop	{r3, r4, r5, pc}
			activemask |= (1<<channel);
		} else {
			if (n > position[channel]) {
     612:	ldr	r1, [r4, #32]
     614:	cmp	r2, r1
     616:	bhi.n	64a <updateEcho(float)+0x8a>
				// new delay is greater than previous setting
				if (blks > maxblocks) maxblocks = blks;
				position[channel] = n;
			} else {
				// new delay is less than previous setting
				position[channel] = n;
     618:	mov	r1, r4
	}
	virtual void update(void);
private:
	void recompute_maxblocks(void) {
		uint32_t max=0;
		uint32_t channel = 0;
     61a:	movs	r3, #0
				// new delay is greater than previous setting
				if (blks > maxblocks) maxblocks = blks;
				position[channel] = n;
			} else {
				// new delay is less than previous setting
				position[channel] = n;
     61c:	str.w	r2, [r1, #32]!
		recompute_maxblocks();
	}
	virtual void update(void);
private:
	void recompute_maxblocks(void) {
		uint32_t max=0;
     620:	mov	r5, r3
		uint32_t channel = 0;
		do {
			if (activemask & (1<<channel)) {
     622:	asr.w	r2, r0, r3
     626:	tst.w	r2, #1
     62a:	add.w	r3, r3, #1
     62e:	beq.n	63e <updateEcho(float)+0x7e>
				uint32_t n = position[channel];
				n = (n + (AUDIO_BLOCK_SAMPLES-1)) / AUDIO_BLOCK_SAMPLES + 1;
     630:	ldr	r2, [r1, #0]
     632:	adds	r2, #127	; 0x7f
     634:	lsrs	r2, r2, #7
     636:	adds	r2, #1
     638:	cmp	r5, r2
     63a:	it	cc
     63c:	movcc	r5, r2
	virtual void update(void);
private:
	void recompute_maxblocks(void) {
		uint32_t max=0;
		uint32_t channel = 0;
		do {
     63e:	cmp	r3, #8
     640:	add.w	r1, r1, #4
     644:	bne.n	622 <updateEcho(float)+0x62>
				uint32_t n = position[channel];
				n = (n + (AUDIO_BLOCK_SAMPLES-1)) / AUDIO_BLOCK_SAMPLES + 1;
				if (n > max) max = n;
			}
		} while(++channel < 8);
		maxblocks = max;
     646:	strh	r5, [r4, #30]
     648:	pop	{r3, r4, r5, pc}
			if (blks > maxblocks) maxblocks = blks;
			activemask |= (1<<channel);
		} else {
			if (n > position[channel]) {
				// new delay is greater than previous setting
				if (blks > maxblocks) maxblocks = blks;
     64a:	ldrh	r1, [r4, #30]
				position[channel] = n;
     64c:	str	r2, [r4, #32]
			if (blks > maxblocks) maxblocks = blks;
			activemask |= (1<<channel);
		} else {
			if (n > position[channel]) {
				// new delay is greater than previous setting
				if (blks > maxblocks) maxblocks = blks;
     64e:	cmp	r3, r1
     650:	it	hi
     652:	strhhi	r3, [r4, #30]
     654:	pop	{r3, r4, r5, pc}
		maxblocks = 0;
		memset(queue, 0, sizeof(queue));
	}
	void delay(uint8_t channel, float milliseconds) {
		if (channel >= 8) return;
		if (milliseconds < 0.0) milliseconds = 0.0;
     656:	movs	r3, #1
		uint32_t n = (milliseconds*(AUDIO_SAMPLE_RATE_EXACT/1000.0))+0.5;
     658:	movs	r2, #0
     65a:	b.n	5f8 <updateEcho(float)+0x38>
     65c:	add.w	r3, r2, #127	; 0x7f
     660:	lsrs	r3, r3, #7
     662:	adds	r3, #1
     664:	b.n	5f8 <updateEcho(float)+0x38>
     666:	nop
     668:	.word	0x43fa0000
     66c:	.word	0x42307879
     670:	.word	0x00019f80
     674:	.word	0x2000f12c

00000678 <AudioConnection::~AudioConnection()>:
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
		{ isConnected = false;
		  connect(); }
	friend class AudioStream;
	~AudioConnection() {
     678:	push	{r4, lr}
     67a:	mov	r4, r0
		disconnect();
     67c:	bl	97b0 <AudioConnection::disconnect()>
	}
     680:	mov	r0, r4
     682:	pop	{r4, pc}

00000684 <__tcf_0>:
  const int TOTAL_MIXERS = 21; // 64 / 4 = 16, + 16 / 4 = 4, + 4 / 4 = 1 = 21
  const int SECONDARY_MIXERS = 4; // What are these for

  AudioSynthWavetable wavetable[TOTAL_VOICES];
  AudioMixer4         mixer[TOTAL_MIXERS];
  AudioConnection patchCord[] = {
     684:	push	{r3, r4, r5, lr}
     686:	ldr	r4, [pc, #20]	; (69c <__tcf_0+0x18>)
     688:	sub.w	r5, r4, #1720	; 0x6b8
		next_dest(NULL)
		{ isConnected = false;
		  connect(); }
	friend class AudioStream;
	~AudioConnection() {
		disconnect();
     68c:	mov	r0, r4
     68e:	subs	r4, #20
     690:	bl	97b0 <AudioConnection::disconnect()>
     694:	cmp	r4, r5
     696:	bne.n	68c <__tcf_0+0x8>
     698:	pop	{r3, r4, r5, pc}
     69a:	nop
     69c:	.word	0x20011fc8

000006a0 <updateCutoff(float)>:
}

void updateCutoff(float input)
{

  if (input > 0.52f)
     6a0:	vldr	s15, [pc, #320]	; 7e4 <updateCutoff(float)+0x144>
     6a4:	vcmpe.f32	s0, s15
     6a8:	vmrs	APSR_nzcv, fpscr
     6ac:	ble.n	706 <updateCutoff(float)+0x66>
}
// when the input is a float or double, do all math using the input's type
template <class T, class A, class B, class C, class D>
T map(T x, A in_min, B in_max, C out_min, D out_max, typename std::enable_if<std::is_floating_point<T>::value >::type* = 0)
{
	return (x - (T)in_min) * ((T)out_max - (T)out_min) / ((T)in_max - (T)in_min) + (T)out_min;
     6ae:	vldr	s14, [pc, #312]	; 7e8 <updateCutoff(float)+0x148>
     6b2:	vldr	s12, [pc, #312]	; 7ec <updateCutoff(float)+0x14c>
		for (int i=0; i<4; i++) multiplier[i] = 65536;
	}
	virtual void update(void);
	void gain(unsigned int channel, float gain) {
		if (channel >= 4) return;
		if (gain > 32767.0f) gain = 32767.0f;
     6b6:	vldr	s13, [pc, #312]	; 7f0 <updateCutoff(float)+0x150>
     6ba:	vsub.f32	s0, s0, s15
     6be:	vdiv.f32	s15, s0, s14
  {
    float hipass = map(input, 0.52f, 1.0f, 0.0f, 1.0f);

    cutoffMixer.gain(0, 1 - hipass);
     6c2:	vmov.f32	s14, #112	; 0x3f800000  1.0
     6c6:	vadd.f32	s15, s15, s12
     6ca:	vsub.f32	s14, s14, s15
     6ce:	vcmpe.f32	s14, s13
     6d2:	vmrs	APSR_nzcv, fpscr
     6d6:	ble.n	794 <updateCutoff(float)+0xf4>
     6d8:	ldr	r3, [pc, #280]	; (7f4 <updateCutoff(float)+0x154>)
     6da:	vldr	s14, [pc, #276]	; 7f0 <updateCutoff(float)+0x150>
		else if (gain < -32767.0f) gain = -32767.0f;
		multiplier[channel] = gain * 65536.0f; // TODO: proper roundoff?
     6de:	ldr	r2, [pc, #280]	; (7f8 <updateCutoff(float)+0x158>)
		for (int i=0; i<4; i++) multiplier[i] = 65536;
	}
	virtual void update(void);
	void gain(unsigned int channel, float gain) {
		if (channel >= 4) return;
		if (gain > 32767.0f) gain = 32767.0f;
     6e0:	vcmpe.f32	s15, s14
		else if (gain < -32767.0f) gain = -32767.0f;
		multiplier[channel] = gain * 65536.0f; // TODO: proper roundoff?
     6e4:	str	r3, [r2, #24]
		for (int i=0; i<4; i++) multiplier[i] = 65536;
	}
	virtual void update(void);
	void gain(unsigned int channel, float gain) {
		if (channel >= 4) return;
		if (gain > 32767.0f) gain = 32767.0f;
     6e6:	vmrs	APSR_nzcv, fpscr
		else if (gain < -32767.0f) gain = -32767.0f;
		multiplier[channel] = gain * 65536.0f; // TODO: proper roundoff?
     6ea:	mov.w	r3, #0
     6ee:	str	r3, [r2, #28]
		for (int i=0; i<4; i++) multiplier[i] = 65536;
	}
	virtual void update(void);
	void gain(unsigned int channel, float gain) {
		if (channel >= 4) return;
		if (gain > 32767.0f) gain = 32767.0f;
     6f0:	bgt.n	7c8 <updateCutoff(float)+0x128>
		else if (gain < -32767.0f) gain = -32767.0f;
     6f2:	vldr	s14, [pc, #264]	; 7fc <updateCutoff(float)+0x15c>
     6f6:	vcmpe.f32	s15, s14
     6fa:	vmrs	APSR_nzcv, fpscr
     6fe:	bpl.n	7b8 <updateCutoff(float)+0x118>
     700:	ldr	r3, [pc, #252]	; (800 <updateCutoff(float)+0x160>)
		multiplier[channel] = gain * 65536.0f; // TODO: proper roundoff?
     702:	str	r3, [r2, #36]	; 0x24
     704:	bx	lr
    cutoffMixer.gain(1, 0);
    cutoffMixer.gain(3, hipass);
  }
  else if (input < 0.48f)
     706:	vldr	s15, [pc, #252]	; 804 <updateCutoff(float)+0x164>
     70a:	vcmpe.f32	s0, s15
     70e:	vmrs	APSR_nzcv, fpscr
     712:	bpl.n	782 <updateCutoff(float)+0xe2>
     714:	vldr	s14, [pc, #240]	; 808 <updateCutoff(float)+0x168>
     718:	vldr	s12, [pc, #208]	; 7ec <updateCutoff(float)+0x14c>
		for (int i=0; i<4; i++) multiplier[i] = 65536;
	}
	virtual void update(void);
	void gain(unsigned int channel, float gain) {
		if (channel >= 4) return;
		if (gain > 32767.0f) gain = 32767.0f;
     71c:	vldr	s13, [pc, #208]	; 7f0 <updateCutoff(float)+0x150>
     720:	vsub.f32	s0, s0, s15
     724:	vdiv.f32	s15, s0, s14
  {
    float lopass = map(input, 0.48f, 0.0f, 0.0f, 1.0f);

    cutoffMixer.gain(0, 1 - lopass);
     728:	vmov.f32	s14, #112	; 0x3f800000  1.0
     72c:	vadd.f32	s15, s15, s12
     730:	vsub.f32	s14, s14, s15
     734:	vcmpe.f32	s14, s13
     738:	vmrs	APSR_nzcv, fpscr
     73c:	bgt.n	7b4 <updateCutoff(float)+0x114>
		else if (gain < -32767.0f) gain = -32767.0f;
     73e:	vldr	s13, [pc, #188]	; 7fc <updateCutoff(float)+0x15c>
     742:	vcmpe.f32	s14, s13
     746:	vmrs	APSR_nzcv, fpscr
     74a:	bmi.n	7d2 <updateCutoff(float)+0x132>
     74c:	vmov.f32	s13, s14
     750:	vcvt.s32.f32	s13, s13, #16
     754:	vmov	r3, s13
		for (int i=0; i<4; i++) multiplier[i] = 65536;
	}
	virtual void update(void);
	void gain(unsigned int channel, float gain) {
		if (channel >= 4) return;
		if (gain > 32767.0f) gain = 32767.0f;
     758:	vldr	s14, [pc, #148]	; 7f0 <updateCutoff(float)+0x150>
		else if (gain < -32767.0f) gain = -32767.0f;
		multiplier[channel] = gain * 65536.0f; // TODO: proper roundoff?
     75c:	ldr	r2, [pc, #152]	; (7f8 <updateCutoff(float)+0x158>)
		for (int i=0; i<4; i++) multiplier[i] = 65536;
	}
	virtual void update(void);
	void gain(unsigned int channel, float gain) {
		if (channel >= 4) return;
		if (gain > 32767.0f) gain = 32767.0f;
     75e:	vcmpe.f32	s15, s14
     762:	vmrs	APSR_nzcv, fpscr
		else if (gain < -32767.0f) gain = -32767.0f;
		multiplier[channel] = gain * 65536.0f; // TODO: proper roundoff?
     766:	str	r3, [r2, #24]
		for (int i=0; i<4; i++) multiplier[i] = 65536;
	}
	virtual void update(void);
	void gain(unsigned int channel, float gain) {
		if (channel >= 4) return;
		if (gain > 32767.0f) gain = 32767.0f;
     768:	bgt.n	7ce <updateCutoff(float)+0x12e>
		else if (gain < -32767.0f) gain = -32767.0f;
     76a:	vldr	s14, [pc, #144]	; 7fc <updateCutoff(float)+0x15c>
     76e:	vcmpe.f32	s15, s14
     772:	vmrs	APSR_nzcv, fpscr
     776:	bpl.n	7d6 <updateCutoff(float)+0x136>
     778:	ldr	r3, [pc, #132]	; (800 <updateCutoff(float)+0x160>)
		multiplier[channel] = gain * 65536.0f; // TODO: proper roundoff?
     77a:	str	r3, [r2, #28]
     77c:	movs	r3, #0
     77e:	str	r3, [r2, #36]	; 0x24
     780:	bx	lr
     782:	ldr	r3, [pc, #116]	; (7f8 <updateCutoff(float)+0x158>)
     784:	movs	r2, #0
     786:	mov.w	r1, #65536	; 0x10000
     78a:	str	r1, [r3, #24]
     78c:	str	r2, [r3, #28]
     78e:	str	r2, [r3, #32]
     790:	str	r2, [r3, #36]	; 0x24
     792:	bx	lr
	}
	virtual void update(void);
	void gain(unsigned int channel, float gain) {
		if (channel >= 4) return;
		if (gain > 32767.0f) gain = 32767.0f;
		else if (gain < -32767.0f) gain = -32767.0f;
     794:	vldr	s13, [pc, #100]	; 7fc <updateCutoff(float)+0x15c>
     798:	vcmpe.f32	s14, s13
     79c:	vmrs	APSR_nzcv, fpscr
     7a0:	bpl.n	7a6 <updateCutoff(float)+0x106>
     7a2:	ldr	r3, [pc, #92]	; (800 <updateCutoff(float)+0x160>)
     7a4:	b.n	6da <updateCutoff(float)+0x3a>
     7a6:	vmov.f32	s13, s14
     7aa:	vcvt.s32.f32	s13, s13, #16
     7ae:	vmov	r3, s13
     7b2:	b.n	6da <updateCutoff(float)+0x3a>
		for (int i=0; i<4; i++) multiplier[i] = 65536;
	}
	virtual void update(void);
	void gain(unsigned int channel, float gain) {
		if (channel >= 4) return;
		if (gain > 32767.0f) gain = 32767.0f;
     7b4:	ldr	r3, [pc, #60]	; (7f4 <updateCutoff(float)+0x154>)
     7b6:	b.n	758 <updateCutoff(float)+0xb8>
     7b8:	vmov.f32	s14, s15
     7bc:	vcvt.s32.f32	s14, s14, #16
     7c0:	vmov	r3, s14
		else if (gain < -32767.0f) gain = -32767.0f;
		multiplier[channel] = gain * 65536.0f; // TODO: proper roundoff?
     7c4:	str	r3, [r2, #36]	; 0x24
     7c6:	bx	lr
		for (int i=0; i<4; i++) multiplier[i] = 65536;
	}
	virtual void update(void);
	void gain(unsigned int channel, float gain) {
		if (channel >= 4) return;
		if (gain > 32767.0f) gain = 32767.0f;
     7c8:	ldr	r3, [pc, #40]	; (7f4 <updateCutoff(float)+0x154>)
		else if (gain < -32767.0f) gain = -32767.0f;
		multiplier[channel] = gain * 65536.0f; // TODO: proper roundoff?
     7ca:	str	r3, [r2, #36]	; 0x24
     7cc:	bx	lr
		for (int i=0; i<4; i++) multiplier[i] = 65536;
	}
	virtual void update(void);
	void gain(unsigned int channel, float gain) {
		if (channel >= 4) return;
		if (gain > 32767.0f) gain = 32767.0f;
     7ce:	ldr	r3, [pc, #36]	; (7f4 <updateCutoff(float)+0x154>)
     7d0:	b.n	77a <updateCutoff(float)+0xda>
		else if (gain < -32767.0f) gain = -32767.0f;
     7d2:	ldr	r3, [pc, #44]	; (800 <updateCutoff(float)+0x160>)
     7d4:	b.n	758 <updateCutoff(float)+0xb8>
     7d6:	vmov.f32	s14, s15
     7da:	vcvt.s32.f32	s14, s14, #16
     7de:	vmov	r3, s14
     7e2:	b.n	77a <updateCutoff(float)+0xda>
     7e4:	.word	0x3f051eb8
     7e8:	.word	0x3ef5c290
     7ec:	.word	0x00000000
     7f0:	.word	0x46fffe00
     7f4:	.word	0x7fff0000
     7f8:	.word	0x200118e8
     7fc:	.word	0xc6fffe00
     800:	.word	0x80010000
     804:	.word	0x3ef5c28f
     808:	.word	0xbef5c28f

0000080c <AudioStream::AudioStream(unsigned char, audio_block_struct**)>:
class AudioStream
{
public:
	AudioStream(unsigned char ninput, audio_block_t **iqueue) :
		num_inputs(ninput), inputQueue(iqueue) {
			active = false;
     80c:	movs	r3, #0
#define AudioMemoryUsageMaxReset() (AudioStream::memory_used_max = AudioStream::memory_used)

class AudioStream
{
public:
	AudioStream(unsigned char ninput, audio_block_t **iqueue) :
     80e:	push	{r4}
		num_inputs(ninput), inputQueue(iqueue) {
     810:	ldr	r4, [pc, #68]	; (858 <AudioStream::AudioStream(unsigned char, audio_block_struct**)+0x4c>)
     812:	strb	r1, [r0, #9]
     814:	str	r2, [r0, #16]
     816:	str	r4, [r0, #0]
			active = false;
     818:	strb	r3, [r0, #8]
			destination_list = NULL;
     81a:	str	r3, [r0, #12]
			for (int i=0; i < num_inputs; i++) {
     81c:	cbz	r1, 830 <AudioStream::AudioStream(unsigned char, audio_block_struct**)+0x24>
				inputQueue[i] = NULL;
     81e:	mov	r1, r3
     820:	b.n	824 <AudioStream::AudioStream(unsigned char, audio_block_struct**)+0x18>
     822:	ldr	r2, [r0, #16]
     824:	str.w	r1, [r2, r3, lsl #2]
public:
	AudioStream(unsigned char ninput, audio_block_t **iqueue) :
		num_inputs(ninput), inputQueue(iqueue) {
			active = false;
			destination_list = NULL;
			for (int i=0; i < num_inputs; i++) {
     828:	ldrb	r2, [r0, #9]
     82a:	adds	r3, #1
     82c:	cmp	r2, r3
     82e:	bgt.n	822 <AudioStream::AudioStream(unsigned char, audio_block_struct**)+0x16>
				inputQueue[i] = NULL;
			}
			// add to a simple list, for update_all
			// TODO: replace with a proper data flow analysis in update_all
			if (first_update == NULL) {
     830:	ldr	r3, [pc, #40]	; (85c <AudioStream::AudioStream(unsigned char, audio_block_struct**)+0x50>)
     832:	ldr	r2, [r3, #0]
     834:	cbnz	r2, 83a <AudioStream::AudioStream(unsigned char, audio_block_struct**)+0x2e>
     836:	b.n	852 <AudioStream::AudioStream(unsigned char, audio_block_struct**)+0x46>
     838:	mov	r2, r3
				first_update = this;
			} else {
				AudioStream *p;
				for (p=first_update; p->next_update; p = p->next_update) ;
     83a:	ldr	r3, [r2, #20]
     83c:	cmp	r3, #0
     83e:	bne.n	838 <AudioStream::AudioStream(unsigned char, audio_block_struct**)+0x2c>
				p->next_update = this;
     840:	str	r0, [r2, #20]
			}
			next_update = NULL;
     842:	movs	r3, #0
     844:	str	r3, [r0, #20]
			cpu_cycles = 0;
     846:	strh	r3, [r0, #4]
			cpu_cycles_max = 0;
     848:	strh	r3, [r0, #6]
			numConnections = 0;
     84a:	strb	r3, [r0, #10]
		}
     84c:	ldr.w	r4, [sp], #4
     850:	bx	lr
				inputQueue[i] = NULL;
			}
			// add to a simple list, for update_all
			// TODO: replace with a proper data flow analysis in update_all
			if (first_update == NULL) {
				first_update = this;
     852:	str	r0, [r3, #0]
     854:	b.n	842 <AudioStream::AudioStream(unsigned char, audio_block_struct**)+0x36>
     856:	nop
     858:	.word	0x00010324
     85c:	.word	0x20012b9c

00000860 <OnControlChange(unsigned char, unsigned char, unsigned char)>:
  90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90
};

void OnControlChange(byte channel, byte control, byte value)
{
	switch (control) {
     860:	cmp	r1, #7
	case 7: //volume
		channel_vol[channel] = value;
     862:	it	eq
     864:	ldreq	r3, [pc, #84]	; (8bc <OnControlChange(unsigned char, unsigned char, unsigned char)+0x5c>)
int channel_vol[] = {
  90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90
};

void OnControlChange(byte channel, byte control, byte value)
{
     866:	push	{r4, r5, r6, lr}
	switch (control) {
	case 7: //volume
		channel_vol[channel] = value;
     868:	it	eq
     86a:	streq.w	r2, [r3, r0, lsl #2]
int channel_vol[] = {
  90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90
};

void OnControlChange(byte channel, byte control, byte value)
{
     86e:	mov	r4, r1
     870:	mov	r6, r0
        virtual int read() { return usb_serial_getchar(); }
        virtual int peek() { return usb_serial_peekchar(); }
        virtual void flush() { usb_serial_flush_output(); }  // TODO: actually wait for data to leave USB...
        virtual void clear(void) { usb_serial_flush_input(); }
        virtual size_t write(uint8_t c) { return usb_serial_putchar(c); }
        virtual size_t write(const uint8_t *buffer, size_t size) { return usb_serial_write(buffer, size); }
     872:	movs	r1, #19
     874:	ldr	r0, [pc, #72]	; (8c0 <OnControlChange(unsigned char, unsigned char, unsigned char)+0x60>)
     876:	mov	r5, r2
     878:	bl	7110 <usb_serial_write>
	size_t print(const String &s);
	size_t print(char c)				{ return write((uint8_t)c); }
	size_t print(const char s[])			{ return write(s); }
	size_t print(const __FlashStringHelper *f)	{ return write((const char *)f); }

	size_t print(uint8_t b)				{ return printNumber(b, 10, 0); }
     87c:	mov	r1, r6
     87e:	movs	r3, #0
     880:	movs	r2, #10
     882:	ldr	r0, [pc, #64]	; (8c4 <OnControlChange(unsigned char, unsigned char, unsigned char)+0x64>)
     884:	bl	8d08 <Print::printNumber(unsigned long, unsigned char, unsigned char)>
     888:	movs	r1, #10
     88a:	ldr	r0, [pc, #60]	; (8c8 <OnControlChange(unsigned char, unsigned char, unsigned char)+0x68>)
     88c:	bl	7110 <usb_serial_write>
     890:	mov	r1, r4
     892:	movs	r3, #0
     894:	movs	r2, #10
     896:	ldr	r0, [pc, #44]	; (8c4 <OnControlChange(unsigned char, unsigned char, unsigned char)+0x64>)
     898:	bl	8d08 <Print::printNumber(unsigned long, unsigned char, unsigned char)>
     89c:	movs	r1, #8
     89e:	ldr	r0, [pc, #44]	; (8cc <OnControlChange(unsigned char, unsigned char, unsigned char)+0x6c>)
     8a0:	bl	7110 <usb_serial_write>
     8a4:	mov	r1, r5
     8a6:	movs	r3, #0
     8a8:	movs	r2, #10
     8aa:	ldr	r0, [pc, #24]	; (8c4 <OnControlChange(unsigned char, unsigned char, unsigned char)+0x64>)
     8ac:	bl	8d08 <Print::printNumber(unsigned long, unsigned char, unsigned char)>
	Serial.print(channel);
	Serial.print(", control=");
	Serial.print(control);
	Serial.print(", value=");
	Serial.print(value);
	Serial.println();
     8b0:	ldr	r0, [pc, #16]	; (8c4 <OnControlChange(unsigned char, unsigned char, unsigned char)+0x64>)
}
     8b2:	ldmia.w	sp!, {r4, r5, r6, lr}
	Serial.print(channel);
	Serial.print(", control=");
	Serial.print(control);
	Serial.print(", value=");
	Serial.print(value);
	Serial.println();
     8b6:	b.w	8cbc <Print::println()>
     8ba:	nop
     8bc:	.word	0x20007db8
     8c0:	.word	0x00010344
     8c4:	.word	0x20008048
     8c8:	.word	0x00010358
     8cc:	.word	0x00010364

000008d0 <allocateVoice(unsigned char, unsigned char)>:

void OnProgramChange(byte channel, byte program) {
	channel_map[channel] = channel != 10 ? midi_map[program] : &standard_DRUMS;
}

int allocateVoice(byte channel, byte note) {
     8d0:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  int i;
  int nonfree_voices = stopped_voices + used_voices;
     8d4:	ldr.w	r9, [pc, #240]	; 9c8 <allocateVoice(unsigned char, unsigned char)+0xf8>
     8d8:	ldr.w	r8, [pc, #240]	; 9cc <allocateVoice(unsigned char, unsigned char)+0xfc>
     8dc:	ldr.w	r3, [r9]
     8e0:	ldr.w	lr, [r8]
     8e4:	add.w	r5, r3, lr
  if (nonfree_voices < TOTAL_VOICES) {
     8e8:	cmp	r5, #63	; 0x3f

void OnProgramChange(byte channel, byte program) {
	channel_map[channel] = channel != 10 ? midi_map[program] : &standard_DRUMS;
}

int allocateVoice(byte channel, byte note) {
     8ea:	mov	r4, r0
     8ec:	mov	ip, r1
  int i;
  int nonfree_voices = stopped_voices + used_voices;
  if (nonfree_voices < TOTAL_VOICES) {
     8ee:	bgt.n	932 <allocateVoice(unsigned char, unsigned char)+0x62>
     8f0:	ldr	r7, [pc, #200]	; (9bc <allocateVoice(unsigned char, unsigned char)+0xec>)
     8f2:	lsls	r6, r5, #3
     8f4:	adds	r3, r7, r6
     8f6:	mov	r2, r5
    for (i = nonfree_voices; i < TOTAL_VOICES && voices[i].channel != channel; ++i);
     8f8:	ldrb	r1, [r3, #4]
     8fa:	cmp	r1, r4
     8fc:	add.w	r3, r3, #8
     900:	beq.n	940 <allocateVoice(unsigned char, unsigned char)+0x70>
     902:	adds	r2, #1
     904:	cmp	r2, #64	; 0x40
     906:	bne.n	8f8 <allocateVoice(unsigned char, unsigned char)+0x28>
     908:	ldr	r2, [pc, #180]	; (9c0 <allocateVoice(unsigned char, unsigned char)+0xf0>)
      voice_t temp = voices[i];
      voices[i] = voices[nonfree_voices];
      voices[nonfree_voices] = temp;
    }
    i = nonfree_voices;
    used_voices++;
     90a:	add.w	r3, lr, #1
     90e:	ldr	r2, [r2, #0]
     910:	str.w	r3, [r8]

  voices[i].channel = channel;
  voices[i].note = note;

  evict_voice++;
  evict_voice %= TOTAL_VOICES;
     914:	ldr	r3, [pc, #172]	; (9c4 <allocateVoice(unsigned char, unsigned char)+0xf4>)
     916:	ldr	r1, [pc, #168]	; (9c0 <allocateVoice(unsigned char, unsigned char)+0xf0>)
     918:	adds	r2, #1
    }
    else
      i = evict_voice;
  }

  voices[i].channel = channel;
     91a:	add	r6, r7
  voices[i].note = note;

  evict_voice++;
  evict_voice %= TOTAL_VOICES;
     91c:	ands	r3, r2
     91e:	cmp	r3, #0
    }
    else
      i = evict_voice;
  }

  voices[i].channel = channel;
     920:	strb	r4, [r6, #4]
  voices[i].note = note;
     922:	strb.w	ip, [r6, #5]

  evict_voice++;
  evict_voice %= TOTAL_VOICES;
     926:	blt.n	966 <allocateVoice(unsigned char, unsigned char)+0x96>
     928:	str	r3, [r1, #0]

  return voices[i].wavetable_id;
     92a:	ldr.w	r0, [r7, r5, lsl #3]
}
     92e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    i = nonfree_voices;
    used_voices++;
  }
  else {
    if (stopped_voices) {
      i = evict_voice % stopped_voices;
     932:	ldr	r2, [pc, #140]	; (9c0 <allocateVoice(unsigned char, unsigned char)+0xf0>)
      voice_t temp = voices[i];
     934:	ldr	r7, [pc, #132]	; (9bc <allocateVoice(unsigned char, unsigned char)+0xec>)
    }
    i = nonfree_voices;
    used_voices++;
  }
  else {
    if (stopped_voices) {
     936:	cbnz	r3, 978 <allocateVoice(unsigned char, unsigned char)+0xa8>
      voices[stopped_voices] = temp;
      used_voices++;
      i = stopped_voices;
    }
    else
      i = evict_voice;
     938:	ldr	r5, [r2, #0]
     93a:	mov	r2, r5
     93c:	lsls	r6, r5, #3
     93e:	b.n	914 <allocateVoice(unsigned char, unsigned char)+0x44>
  int nonfree_voices = stopped_voices + used_voices;
  if (nonfree_voices < TOTAL_VOICES) {
    for (i = nonfree_voices; i < TOTAL_VOICES && voices[i].channel != channel; ++i);
    if (i < TOTAL_VOICES) {
      voice_t temp = voices[i];
      voices[i] = voices[nonfree_voices];
     940:	adds	r3, r7, r6
     942:	ldmia.w	r3, {r0, r1}
  int i;
  int nonfree_voices = stopped_voices + used_voices;
  if (nonfree_voices < TOTAL_VOICES) {
    for (i = nonfree_voices; i < TOTAL_VOICES && voices[i].channel != channel; ++i);
    if (i < TOTAL_VOICES) {
      voice_t temp = voices[i];
     946:	add.w	r9, r7, r2, lsl #3
     94a:	ldr.w	fp, [r7, r2, lsl #3]
     94e:	ldrb.w	sl, [r9, #4]
     952:	ldrb.w	r2, [r9, #5]
      voices[i] = voices[nonfree_voices];
     956:	stmia.w	r9, {r0, r1}
      voices[nonfree_voices] = temp;
     95a:	str.w	fp, [r7, r5, lsl #3]
     95e:	strb.w	sl, [r3, #4]
     962:	strb	r2, [r3, #5]
     964:	b.n	908 <allocateVoice(unsigned char, unsigned char)+0x38>

  voices[i].channel = channel;
  voices[i].note = note;

  evict_voice++;
  evict_voice %= TOTAL_VOICES;
     966:	subs	r3, #1
     968:	orn	r3, r3, #63	; 0x3f
     96c:	adds	r3, #1
     96e:	str	r3, [r1, #0]

  return voices[i].wavetable_id;
     970:	ldr.w	r0, [r7, r5, lsl #3]
}
     974:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  }
  else {
    if (stopped_voices) {
      i = evict_voice % stopped_voices;
      voice_t temp = voices[i];
      stopped_voices--;
     978:	subs	r5, r3, #1
    i = nonfree_voices;
    used_voices++;
  }
  else {
    if (stopped_voices) {
      i = evict_voice % stopped_voices;
     97a:	ldr	r2, [r2, #0]
     97c:	sdiv	r1, r2, r3
      voice_t temp = voices[i];
      stopped_voices--;
      voices[i] = voices[stopped_voices];
     980:	lsls	r6, r5, #3
    i = nonfree_voices;
    used_voices++;
  }
  else {
    if (stopped_voices) {
      i = evict_voice % stopped_voices;
     982:	mls	r3, r3, r1, r2
      voice_t temp = voices[i];
      stopped_voices--;
      voices[i] = voices[stopped_voices];
     986:	add.w	sl, r7, r6
    used_voices++;
  }
  else {
    if (stopped_voices) {
      i = evict_voice % stopped_voices;
      voice_t temp = voices[i];
     98a:	add.w	fp, r7, r3, lsl #3
      stopped_voices--;
      voices[i] = voices[stopped_voices];
     98e:	ldmia.w	sl, {r0, r1}
      voices[stopped_voices] = temp;
      used_voices++;
     992:	add.w	lr, lr, #1
    used_voices++;
  }
  else {
    if (stopped_voices) {
      i = evict_voice % stopped_voices;
      voice_t temp = voices[i];
     996:	ldr.w	r3, [r7, r3, lsl #3]
      stopped_voices--;
      voices[i] = voices[stopped_voices];
      voices[stopped_voices] = temp;
      used_voices++;
     99a:	str.w	lr, [r8]
    used_voices++;
  }
  else {
    if (stopped_voices) {
      i = evict_voice % stopped_voices;
      voice_t temp = voices[i];
     99e:	ldrb.w	r8, [fp, #4]
     9a2:	ldrb.w	lr, [fp, #5]
      stopped_voices--;
     9a6:	str.w	r5, [r9]
      voices[i] = voices[stopped_voices];
     9aa:	stmia.w	fp, {r0, r1}
      voices[stopped_voices] = temp;
     9ae:	str.w	r3, [r7, r5, lsl #3]
     9b2:	strb.w	r8, [sl, #4]
     9b6:	strb.w	lr, [sl, #5]
     9ba:	b.n	914 <allocateVoice(unsigned char, unsigned char)+0x44>
     9bc:	.word	0x2000ef2c
     9c0:	.word	0x2000ffcc
     9c4:	.word	0x8000003f
     9c8:	.word	0x20011920
     9cc:	.word	0x200125c0

000009d0 <findVoice(unsigned char, unsigned char)>:
  evict_voice %= TOTAL_VOICES;

  return voices[i].wavetable_id;
}

int findVoice(byte channel, byte note) {
     9d0:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  int i;
  //find match
  int nonfree_voices = stopped_voices + used_voices;
     9d4:	ldr.w	ip, [pc, #136]	; a60 <findVoice(unsigned char, unsigned char)+0x90>
     9d8:	ldr.w	r8, [pc, #136]	; a64 <findVoice(unsigned char, unsigned char)+0x94>
     9dc:	ldr.w	r6, [ip]
     9e0:	ldr.w	lr, [r8]
     9e4:	add.w	r5, r6, lr
  for (i = stopped_voices; i < nonfree_voices && !(voices[i].channel == channel && voices[i].note == note); ++i);
     9e8:	cmp	r6, r5
     9ea:	bge.n	a50 <findVoice(unsigned char, unsigned char)+0x80>
     9ec:	ldr	r7, [pc, #108]	; (a5c <findVoice(unsigned char, unsigned char)+0x8c>)
     9ee:	mov.w	r9, r6, lsl #3
     9f2:	add.w	r3, r7, r9
     9f6:	mov	r2, r6
     9f8:	b.n	a04 <findVoice(unsigned char, unsigned char)+0x34>
     9fa:	adds	r2, #1
     9fc:	cmp	r5, r2
     9fe:	add.w	r3, r3, #8
     a02:	beq.n	a4a <findVoice(unsigned char, unsigned char)+0x7a>
     a04:	ldrb	r4, [r3, #4]
     a06:	cmp	r4, r0
     a08:	bne.n	9fa <findVoice(unsigned char, unsigned char)+0x2a>
     a0a:	ldrb	r4, [r3, #5]
     a0c:	cmp	r4, r1
     a0e:	bne.n	9fa <findVoice(unsigned char, unsigned char)+0x2a>
  //return TOTAL_VOICES if no match
  if (i == (nonfree_voices)) return TOTAL_VOICES;

  voice_t temp = voices[i];
  voices[i] = voices[stopped_voices];
     a10:	add.w	r3, r7, r9
     a14:	ldmia.w	r3, {r0, r1}
  int nonfree_voices = stopped_voices + used_voices;
  for (i = stopped_voices; i < nonfree_voices && !(voices[i].channel == channel && voices[i].note == note); ++i);
  //return TOTAL_VOICES if no match
  if (i == (nonfree_voices)) return TOTAL_VOICES;

  voice_t temp = voices[i];
     a18:	add.w	r4, r7, r2, lsl #3
     a1c:	ldr.w	r2, [r7, r2, lsl #3]
     a20:	ldrb.w	r9, [r4, #4]
     a24:	ldrb	r5, [r4, #5]
  voices[i] = voices[stopped_voices];
     a26:	stmia.w	r4, {r0, r1}
  voices[stopped_voices] = temp;
     a2a:	str.w	r2, [r7, r6, lsl #3]
     a2e:	strb.w	r9, [r3, #4]
     a32:	strb	r5, [r3, #5]
  --used_voices;
     a34:	add.w	r2, lr, #4294967295

  return voices[stopped_voices++].wavetable_id;
     a38:	adds	r3, r6, #1
  if (i == (nonfree_voices)) return TOTAL_VOICES;

  voice_t temp = voices[i];
  voices[i] = voices[stopped_voices];
  voices[stopped_voices] = temp;
  --used_voices;
     a3a:	str.w	r2, [r8]

  return voices[stopped_voices++].wavetable_id;
     a3e:	ldr.w	r0, [r7, r6, lsl #3]
     a42:	str.w	r3, [ip]
     a46:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  int i;
  //find match
  int nonfree_voices = stopped_voices + used_voices;
  for (i = stopped_voices; i < nonfree_voices && !(voices[i].channel == channel && voices[i].note == note); ++i);
  //return TOTAL_VOICES if no match
  if (i == (nonfree_voices)) return TOTAL_VOICES;
     a4a:	movs	r0, #64	; 0x40
  voices[i] = voices[stopped_voices];
  voices[stopped_voices] = temp;
  --used_voices;

  return voices[stopped_voices++].wavetable_id;
}
     a4c:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  int i;
  //find match
  int nonfree_voices = stopped_voices + used_voices;
  for (i = stopped_voices; i < nonfree_voices && !(voices[i].channel == channel && voices[i].note == note); ++i);
  //return TOTAL_VOICES if no match
  if (i == (nonfree_voices)) return TOTAL_VOICES;
     a50:	beq.n	a4a <findVoice(unsigned char, unsigned char)+0x7a>
     a52:	ldr	r7, [pc, #8]	; (a5c <findVoice(unsigned char, unsigned char)+0x8c>)
     a54:	mov	r2, r6
     a56:	mov.w	r9, r6, lsl #3
     a5a:	b.n	a10 <findVoice(unsigned char, unsigned char)+0x40>
     a5c:	.word	0x2000ef2c
     a60:	.word	0x20011920
     a64:	.word	0x200125c0

00000a68 <freeVoices()>:

  return voices[stopped_voices++].wavetable_id;
}

void freeVoices() {
  for (int i = 0; i < stopped_voices; i++)
     a68:	ldr.w	ip, [pc, #156]	; b08 <freeVoices()+0xa0>
     a6c:	ldr.w	r3, [ip]
     a70:	cmp	r3, #0
     a72:	ble.n	b02 <freeVoices()+0x9a>
  --used_voices;

  return voices[stopped_voices++].wavetable_id;
}

void freeVoices() {
     a74:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
     a78:	ldr	r2, [pc, #136]	; (b04 <freeVoices()+0x9c>)
     a7a:	ldr.w	r8, [pc, #144]	; b0c <freeVoices()+0xa4>
  for (int i = 0; i < stopped_voices; i++)
    if (wavetable[voices[i].wavetable_id].isPlaying() == false) {
      voice_t temp = voices[i];
      --stopped_voices;
      voices[i] = voices[stopped_voices];
      int nonfree_voices = stopped_voices + used_voices;
     a7e:	ldr.w	sl, [pc, #144]	; b10 <freeVoices()+0xa8>
  --used_voices;

  return voices[stopped_voices++].wavetable_id;
}

void freeVoices() {
     a82:	sub	sp, #20
  for (int i = 0; i < stopped_voices; i++)
    if (wavetable[voices[i].wavetable_id].isPlaying() == false) {
      voice_t temp = voices[i];
      --stopped_voices;
      voices[i] = voices[stopped_voices];
     a84:	sub.w	lr, r2, #4

  return voices[stopped_voices++].wavetable_id;
}

void freeVoices() {
  for (int i = 0; i < stopped_voices; i++)
     a88:	movs	r4, #0
	// Defined in AudioSynthWavetable.cpp
	void stop(void);
	// TODO: amplitude should be 0 to 1.0 scale
	void playFrequency(float freq, int amp = DEFAULT_AMPLITUDE);
	void playNote(int note, int amp = DEFAULT_AMPLITUDE);
	bool isPlaying(void) { return env_state != STATE_IDLE; }
     a8a:	mov.w	r9, #92	; 0x5c
     a8e:	b.n	a9e <freeVoices()+0x36>
     a90:	ldr.w	r3, [ip]
     a94:	adds	r4, #1
     a96:	cmp	r3, r4
     a98:	add.w	r2, r2, #8
     a9c:	ble.n	afc <freeVoices()+0x94>
    if (wavetable[voices[i].wavetable_id].isPlaying() == false) {
     a9e:	ldr.w	fp, [r2, #-4]
     aa2:	mla	r1, r9, fp, r8
      voice_t temp = voices[i];
      --stopped_voices;
     aa6:	subs	r3, #1
     aa8:	ldrb.w	r1, [r1, #46]	; 0x2e
      voices[i] = voices[stopped_voices];
     aac:	add.w	r5, lr, r3, lsl #3
     ab0:	subs	r6, r2, #4
  return voices[stopped_voices++].wavetable_id;
}

void freeVoices() {
  for (int i = 0; i < stopped_voices; i++)
    if (wavetable[voices[i].wavetable_id].isPlaying() == false) {
     ab2:	cmp	r1, #0
     ab4:	bne.n	a90 <freeVoices()+0x28>
      voice_t temp = voices[i];
      --stopped_voices;
      voices[i] = voices[stopped_voices];
     ab6:	ldmia.w	r5, {r0, r1}
      int nonfree_voices = stopped_voices + used_voices;
     aba:	ldr.w	r7, [sl]
     abe:	str	r7, [sp, #12]
}

void freeVoices() {
  for (int i = 0; i < stopped_voices; i++)
    if (wavetable[voices[i].wavetable_id].isPlaying() == false) {
      voice_t temp = voices[i];
     ac0:	ldrb	r7, [r2, #0]
     ac2:	str	r7, [sp, #4]
     ac4:	ldrb	r7, [r2, #1]
     ac6:	str	r7, [sp, #8]
      --stopped_voices;
      voices[i] = voices[stopped_voices];
     ac8:	stmia.w	r6, {r0, r1}
      int nonfree_voices = stopped_voices + used_voices;
     acc:	ldr	r1, [sp, #12]

void freeVoices() {
  for (int i = 0; i < stopped_voices; i++)
    if (wavetable[voices[i].wavetable_id].isPlaying() == false) {
      voice_t temp = voices[i];
      --stopped_voices;
     ace:	str.w	r3, [ip]
      voices[i] = voices[stopped_voices];
      int nonfree_voices = stopped_voices + used_voices;
     ad2:	add	r1, r3
      voices[stopped_voices] = voices[nonfree_voices];
     ad4:	add.w	r6, lr, r1, lsl #3
  for (int i = 0; i < stopped_voices; i++)
    if (wavetable[voices[i].wavetable_id].isPlaying() == false) {
      voice_t temp = voices[i];
      --stopped_voices;
      voices[i] = voices[stopped_voices];
      int nonfree_voices = stopped_voices + used_voices;
     ad8:	mov	r7, r1
      voices[stopped_voices] = voices[nonfree_voices];
     ada:	ldmia.w	r6, {r0, r1}

  return voices[stopped_voices++].wavetable_id;
}

void freeVoices() {
  for (int i = 0; i < stopped_voices; i++)
     ade:	adds	r4, #1
    if (wavetable[voices[i].wavetable_id].isPlaying() == false) {
      voice_t temp = voices[i];
      --stopped_voices;
      voices[i] = voices[stopped_voices];
      int nonfree_voices = stopped_voices + used_voices;
      voices[stopped_voices] = voices[nonfree_voices];
     ae0:	stmia.w	r5, {r0, r1}
      voices[nonfree_voices] = temp;
     ae4:	ldrb.w	r1, [sp, #4]
     ae8:	str.w	fp, [lr, r7, lsl #3]

  return voices[stopped_voices++].wavetable_id;
}

void freeVoices() {
  for (int i = 0; i < stopped_voices; i++)
     aec:	cmp	r3, r4
      voice_t temp = voices[i];
      --stopped_voices;
      voices[i] = voices[stopped_voices];
      int nonfree_voices = stopped_voices + used_voices;
      voices[stopped_voices] = voices[nonfree_voices];
      voices[nonfree_voices] = temp;
     aee:	strb	r1, [r6, #4]
     af0:	ldrb.w	r1, [sp, #8]
     af4:	strb	r1, [r6, #5]
     af6:	add.w	r2, r2, #8

  return voices[stopped_voices++].wavetable_id;
}

void freeVoices() {
  for (int i = 0; i < stopped_voices; i++)
     afa:	bgt.n	a9e <freeVoices()+0x36>
      voices[i] = voices[stopped_voices];
      int nonfree_voices = stopped_voices + used_voices;
      voices[stopped_voices] = voices[nonfree_voices];
      voices[nonfree_voices] = temp;
    }
}
     afc:	add	sp, #20
     afe:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
     b02:	bx	lr
     b04:	.word	0x2000ef30
     b08:	.word	0x20011920
     b0c:	.word	0x200100c8
     b10:	.word	0x200125c0

00000b14 <printVoices()>:

const char* note_map[] = {
  "C","C#","D","D#","E","F","F#","G","G#","A","A#","B"
};

void printVoices() {
     b14:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	static int last_notes_played = notes_played;
     b18:	ldr	r4, [pc, #192]	; (bdc <printVoices()+0xc8>)
     b1a:	ldr	r3, [r4, #0]
     b1c:	lsls	r3, r3, #31

const char* note_map[] = {
  "C","C#","D","D#","E","F","F#","G","G#","A","A#","B"
};

void printVoices() {
     b1e:	sub	sp, #8
	static int last_notes_played = notes_played;
     b20:	bpl.n	bc0 <printVoices()+0xac>
     b22:	ldr	r5, [pc, #188]	; (be0 <printVoices()+0xcc>)
     b24:	ldr	r6, [pc, #188]	; (be4 <printVoices()+0xd0>)
	if (last_notes_played == notes_played)
     b26:	ldr	r3, [r5, #0]
     b28:	ldr	r2, [r6, #0]
     b2a:	ldr	r5, [pc, #180]	; (be0 <printVoices()+0xcc>)
     b2c:	cmp	r3, r2
     b2e:	beq.n	bba <printVoices()+0xa6>
		return;
	last_notes_played = notes_played;
	int usage = AudioProcessorUsage();
     b30:	ldr	r3, [pc, #180]	; (be8 <printVoices()+0xd4>)
     b32:	vldr	s14, [pc, #184]	; bec <printVoices()+0xd8>
     b36:	ldrh	r3, [r3, #0]
     b38:	vldr	s13, [pc, #180]	; bf0 <printVoices()+0xdc>
	Serial.printf("CPU:%03i voices:%02i CPU/Voice:%02i evict:%02i", usage, used_voices, usage / used_voices, evict_voice);
     b3c:	ldr	r6, [pc, #180]	; (bf4 <printVoices()+0xe0>)
     b3e:	ldr	r1, [pc, #184]	; (bf8 <printVoices()+0xe4>)
     b40:	ldr	r4, [r6, #0]
     b42:	ldr	r0, [pc, #184]	; (bfc <printVoices()+0xe8>)
void printVoices() {
	static int last_notes_played = notes_played;
	if (last_notes_played == notes_played)
		return;
	last_notes_played = notes_played;
	int usage = AudioProcessorUsage();
     b44:	vmov	s15, r3
     b48:	vcvt.f32.s32	s15, s15
	Serial.printf("CPU:%03i voices:%02i CPU/Voice:%02i evict:%02i", usage, used_voices, usage / used_voices, evict_voice);
     b4c:	ldr	r3, [pc, #176]	; (c00 <printVoices()+0xec>)
void printVoices() {
	static int last_notes_played = notes_played;
	if (last_notes_played == notes_played)
		return;
	last_notes_played = notes_played;
	int usage = AudioProcessorUsage();
     b4e:	vadd.f32	s15, s15, s14
	Serial.printf("CPU:%03i voices:%02i CPU/Voice:%02i evict:%02i", usage, used_voices, usage / used_voices, evict_voice);
     b52:	ldr	r3, [r3, #0]
     b54:	str	r3, [sp, #4]
void printVoices() {
	static int last_notes_played = notes_played;
	if (last_notes_played == notes_played)
		return;
	last_notes_played = notes_played;
	int usage = AudioProcessorUsage();
     b56:	vdiv.f32	s14, s15, s13

void printVoices() {
	static int last_notes_played = notes_played;
	if (last_notes_played == notes_played)
		return;
	last_notes_played = notes_played;
     b5a:	str	r2, [r5, #0]
	int usage = AudioProcessorUsage();
	Serial.printf("CPU:%03i voices:%02i CPU/Voice:%02i evict:%02i", usage, used_voices, usage / used_voices, evict_voice);
     b5c:	mov	r3, r4
void printVoices() {
	static int last_notes_played = notes_played;
	if (last_notes_played == notes_played)
		return;
	last_notes_played = notes_played;
	int usage = AudioProcessorUsage();
     b5e:	vcvt.s32.f32	s15, s14
     b62:	vmov	r2, s15
	Serial.printf("CPU:%03i voices:%02i CPU/Voice:%02i evict:%02i", usage, used_voices, usage / used_voices, evict_voice);
     b66:	sdiv	r4, r2, r4
     b6a:	str	r4, [sp, #0]
     b6c:	bl	8cec <Print::printf(char const*, ...)>
	for (int i = 0; i < used_voices; ++i)
     b70:	ldr	r3, [r6, #0]
     b72:	cmp	r3, #0
     b74:	ble.n	bae <printVoices()+0x9a>
     b76:	ldr	r4, [pc, #140]	; (c04 <printVoices()+0xf0>)
     b78:	ldr.w	r8, [pc, #148]	; c10 <printVoices()+0xfc>
		Serial.printf(" %02hhu %-2s", voices[i].channel, note_map[voices[i].note % 12]);
     b7c:	ldr	r7, [pc, #136]	; (c08 <printVoices()+0xf4>)
	if (last_notes_played == notes_played)
		return;
	last_notes_played = notes_played;
	int usage = AudioProcessorUsage();
	Serial.printf("CPU:%03i voices:%02i CPU/Voice:%02i evict:%02i", usage, used_voices, usage / used_voices, evict_voice);
	for (int i = 0; i < used_voices; ++i)
     b7e:	movs	r5, #0
		Serial.printf(" %02hhu %-2s", voices[i].channel, note_map[voices[i].note % 12]);
     b80:	ldrb	r3, [r4, #5]
     b82:	ldrb	r2, [r4, #4]
     b84:	ldr	r1, [pc, #132]	; (c0c <printVoices()+0xf8>)
     b86:	ldr	r0, [pc, #116]	; (bfc <printVoices()+0xe8>)
     b88:	umull	ip, lr, r7, r3
     b8c:	mov.w	lr, lr, lsr #3
     b90:	add.w	lr, lr, lr, lsl #1
     b94:	sub.w	r3, r3, lr, lsl #2
     b98:	uxtb	r3, r3
	if (last_notes_played == notes_played)
		return;
	last_notes_played = notes_played;
	int usage = AudioProcessorUsage();
	Serial.printf("CPU:%03i voices:%02i CPU/Voice:%02i evict:%02i", usage, used_voices, usage / used_voices, evict_voice);
	for (int i = 0; i < used_voices; ++i)
     b9a:	adds	r5, #1
		Serial.printf(" %02hhu %-2s", voices[i].channel, note_map[voices[i].note % 12]);
     b9c:	ldr.w	r3, [r8, r3, lsl #2]
     ba0:	bl	8cec <Print::printf(char const*, ...)>
	if (last_notes_played == notes_played)
		return;
	last_notes_played = notes_played;
	int usage = AudioProcessorUsage();
	Serial.printf("CPU:%03i voices:%02i CPU/Voice:%02i evict:%02i", usage, used_voices, usage / used_voices, evict_voice);
	for (int i = 0; i < used_voices; ++i)
     ba4:	ldr	r3, [r6, #0]
     ba6:	cmp	r3, r5
     ba8:	add.w	r4, r4, #8
     bac:	bgt.n	b80 <printVoices()+0x6c>
		Serial.printf(" %02hhu %-2s", voices[i].channel, note_map[voices[i].note % 12]);

  Serial.println();
     bae:	ldr	r0, [pc, #76]	; (bfc <printVoices()+0xe8>)
}
     bb0:	add	sp, #8
     bb2:	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
	int usage = AudioProcessorUsage();
	Serial.printf("CPU:%03i voices:%02i CPU/Voice:%02i evict:%02i", usage, used_voices, usage / used_voices, evict_voice);
	for (int i = 0; i < used_voices; ++i)
		Serial.printf(" %02hhu %-2s", voices[i].channel, note_map[voices[i].note % 12]);

  Serial.println();
     bb6:	b.w	8cbc <Print::println()>
}
     bba:	add	sp, #8
     bbc:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
const char* note_map[] = {
  "C","C#","D","D#","E","F","F#","G","G#","A","A#","B"
};

void printVoices() {
	static int last_notes_played = notes_played;
     bc0:	mov	r0, r4
     bc2:	bl	76c8 <__cxa_guard_acquire>
     bc6:	cmp	r0, #0
     bc8:	beq.n	b22 <printVoices()+0xe>
     bca:	ldr	r6, [pc, #24]	; (be4 <printVoices()+0xd0>)
     bcc:	ldr	r5, [pc, #16]	; (be0 <printVoices()+0xcc>)
     bce:	ldr	r3, [r6, #0]
     bd0:	str	r3, [r5, #0]
     bd2:	mov	r0, r4
     bd4:	bl	76d4 <__cxa_guard_release>
     bd8:	b.n	b26 <printVoices()+0x12>
     bda:	nop
     bdc:	.word	0x20011824
     be0:	.word	0x2000ef28
     be4:	.word	0x2000ffc8
     be8:	.word	0x20012c22
     bec:	.word	0x43233333
     bf0:	.word	0x43a33333
     bf4:	.word	0x200125c0
     bf8:	.word	0x00010370
     bfc:	.word	0x20008048
     c00:	.word	0x2000ffcc
     c04:	.word	0x2000ef2c
     c08:	.word	0xaaaaaaab
     c0c:	.word	0x000103a0
     c10:	.word	0x20007e38

00000c14 <playNote(unsigned char, unsigned char, unsigned char)>:
{
  channel_map[channel] = channel != 10 ? midi_map[program] : &standard_DRUMS;
}

void playNote(byte channel, byte note, byte velocity)
{
     c14:	push	{r3, r4, r5, r6, r7, lr}
  notes_played++;
     c16:	ldr	r6, [pc, #88]	; (c70 <playNote(unsigned char, unsigned char, unsigned char)+0x5c>)
     c18:	ldr	r3, [r6, #0]
{
  channel_map[channel] = channel != 10 ? midi_map[program] : &standard_DRUMS;
}

void playNote(byte channel, byte note, byte velocity)
{
     c1a:	mov	r4, r0
  notes_played++;
     c1c:	adds	r3, #1
{
  channel_map[channel] = channel != 10 ? midi_map[program] : &standard_DRUMS;
}

void playNote(byte channel, byte note, byte velocity)
{
     c1e:	mov	r5, r1
  notes_played++;
     c20:	str	r3, [r6, #0]
{
  channel_map[channel] = channel != 10 ? midi_map[program] : &standard_DRUMS;
}

void playNote(byte channel, byte note, byte velocity)
{
     c22:	mov	r7, r2
  notes_played++;

#ifdef DEBUG_ALLOC
  //Serial.printf("**** NoteOn: channel==%hhu,note==%hhu ****\n", channel, note);
  printVoices();
     c24:	bl	b14 <printVoices()>
#endif //DEBUG_ALLOC

  freeVoices();
     c28:	bl	a68 <freeVoices()>
  int wavetable_id = allocateVoice(channel, note);
     c2c:	mov	r1, r5
     c2e:	mov	r0, r4
     c30:	bl	8d0 <allocateVoice(unsigned char, unsigned char)>
  wavetable[wavetable_id].setInstrument(*channel_map[channel]);
     c34:	ldr	r3, [pc, #60]	; (c74 <playNote(unsigned char, unsigned char, unsigned char)+0x60>)
     c36:	ldr.w	r1, [r3, r4, lsl #2]
	 * This function is used to set the instrument samples.
	 * @param instrument a struct of type instrument_data, commonly prodced from a
	 * decoded SoundFont file using the SoundFont Decoder Script which accompanies this library.
	 */
	void setInstrument(const instrument_data& instrument) {
		cli();
     c3a:	cpsid	i
		this->instrument = &instrument;
     c3c:	ldr	r3, [pc, #56]	; (c78 <playNote(unsigned char, unsigned char, unsigned char)+0x64>)
     c3e:	movs	r2, #92	; 0x5c
     c40:	mla	r0, r2, r0, r3
		current_sample = NULL;
     c44:	movs	r3, #0
		env_state = STATE_IDLE;
		state_change = true;
     c46:	movs	r2, #1
	 */
	void setInstrument(const instrument_data& instrument) {
		cli();
		this->instrument = &instrument;
		current_sample = NULL;
		env_state = STATE_IDLE;
     c48:	strb.w	r3, [r0, #46]	; 0x2e
	 * @param instrument a struct of type instrument_data, commonly prodced from a
	 * decoded SoundFont file using the SoundFont Decoder Script which accompanies this library.
	 */
	void setInstrument(const instrument_data& instrument) {
		cli();
		this->instrument = &instrument;
     c4c:	str	r1, [r0, #28]
		current_sample = NULL;
     c4e:	str	r3, [r0, #32]
		env_state = STATE_IDLE;
		state_change = true;
     c50:	strb	r2, [r0, #24]
		sei();
     c52:	cpsie	i
  wavetable[wavetable_id].playNote(note, (velocity*channel_vol[channel] + 0x80) >> 7);
     c54:	ldr	r3, [pc, #36]	; (c7c <playNote(unsigned char, unsigned char, unsigned char)+0x68>)
     c56:	ldr.w	r3, [r3, r4, lsl #2]
     c5a:	mul.w	r2, r3, r7
     c5e:	adds	r2, #128	; 0x80
     c60:	mov	r1, r5
     c62:	asrs	r2, r2, #7
     c64:	bl	4a38 <AudioSynthWavetable::playNote(int, int)>

#ifdef DEBUG_ALLOC
  printVoices();
#endif //DEBUG_ALLOC
}
     c68:	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
  int wavetable_id = allocateVoice(channel, note);
  wavetable[wavetable_id].setInstrument(*channel_map[channel]);
  wavetable[wavetable_id].playNote(note, (velocity*channel_vol[channel] + 0x80) >> 7);

#ifdef DEBUG_ALLOC
  printVoices();
     c6c:	b.w	b14 <printVoices()>
     c70:	.word	0x2000ffc8
     c74:	.word	0x20007e6c
     c78:	.word	0x200100c8
     c7c:	.word	0x20007db8

00000c80 <stopNote(unsigned char, unsigned char)>:
#endif //DEBUG_ALLOC
}

void stopNote(byte channel, byte note)
{
     c80:	push	{r3, r4, r5, lr}
     c82:	mov	r4, r0
     c84:	mov	r5, r1
#ifdef DEBUG_ALLOC
	//Serial.printf("\n**** NoteOff: channel==%hhu,note==%hhu ****", channel, note);
	printVoices();
     c86:	bl	b14 <printVoices()>
#endif //DEBUG_ALLOC

  int wavetable_id = findVoice(channel, note);
     c8a:	mov	r1, r5
     c8c:	mov	r0, r4
     c8e:	bl	9d0 <findVoice(unsigned char, unsigned char)>
  if (wavetable_id != TOTAL_VOICES)
     c92:	cmp	r0, #64	; 0x40
     c94:	beq.n	ca2 <stopNote(unsigned char, unsigned char)+0x22>
    wavetable[wavetable_id].stop();
     c96:	ldr	r3, [pc, #20]	; (cac <stopNote(unsigned char, unsigned char)+0x2c>)
     c98:	movs	r2, #92	; 0x5c
     c9a:	mla	r0, r2, r0, r3
     c9e:	bl	4940 <AudioSynthWavetable::stop()>

#ifdef DEBUG_ALLOC
  printVoices();
#endif //DEBUG_ALLOC
}
     ca2:	ldmia.w	sp!, {r3, r4, r5, lr}
  int wavetable_id = findVoice(channel, note);
  if (wavetable_id != TOTAL_VOICES)
    wavetable[wavetable_id].stop();

#ifdef DEBUG_ALLOC
  printVoices();
     ca6:	b.w	b14 <printVoices()>
     caa:	nop
     cac:	.word	0x200100c8

00000cb0 <tone(keyEvent)>:
#endif //DEBUG_ALLOC
}

TrellisCallback tone(keyEvent evt)
{
     cb0:	ubfx	r3, r0, #2, #14
  if (evt.bit.EDGE == SEESAW_KEYPAD_EDGE_RISING)
     cb4:	and.w	r0, r0, #3
     cb8:	cmp	r0, #3
  printVoices();
#endif //DEBUG_ALLOC
}

TrellisCallback tone(keyEvent evt)
{
     cba:	push	{r4, lr}
     cbc:	uxth	r4, r3
  if (evt.bit.EDGE == SEESAW_KEYPAD_EDGE_RISING)
     cbe:	beq.n	ce4 <tone(keyEvent)+0x34>
    IO::trellis.setPixelColor(evt.bit.NUM, IO::wheel(map(evt.bit.NUM, 0, NEOTRELLIS_X_DIM*NEOTRELLIS_Y_DIM, 0, 255)));
    IO::trellis.show();

    playNote(0, evt.bit.NUM, 255);
  }
  else if (evt.bit.EDGE == SEESAW_KEYPAD_EDGE_FALLING)
     cc0:	cmp	r0, #2
     cc2:	beq.n	cc8 <tone(keyEvent)+0x18>
    stopNote(0, evt.bit.NUM);
  }


  return 0;
}
     cc4:	movs	r0, #0
     cc6:	pop	{r4, pc}

    playNote(0, evt.bit.NUM, 255);
  }
  else if (evt.bit.EDGE == SEESAW_KEYPAD_EDGE_FALLING)
  {
    IO::trellis.setPixelColor(evt.bit.NUM, 0);
     cc8:	movs	r2, #0
     cca:	mov	r1, r4
     ccc:	ldr	r0, [pc, #64]	; (d10 <tone(keyEvent)+0x60>)
     cce:	bl	6cb8 <Adafruit_MultiTrellis::setPixelColor(unsigned short, unsigned long)>
    IO::trellis.show();
     cd2:	ldr	r0, [pc, #60]	; (d10 <tone(keyEvent)+0x60>)
     cd4:	bl	6cd4 <Adafruit_MultiTrellis::show()>

    stopNote(0, evt.bit.NUM);
     cd8:	uxtb	r1, r4
     cda:	movs	r0, #0
     cdc:	bl	c80 <stopNote(unsigned char, unsigned char)>
  }


  return 0;
}
     ce0:	movs	r0, #0
     ce2:	pop	{r4, pc}

TrellisCallback tone(keyEvent evt)
{
  if (evt.bit.EDGE == SEESAW_KEYPAD_EDGE_RISING)
  {
    IO::trellis.setPixelColor(evt.bit.NUM, IO::wheel(map(evt.bit.NUM, 0, NEOTRELLIS_X_DIM*NEOTRELLIS_Y_DIM, 0, 255)));
     ce4:	sxth	r3, r3
     ce6:	rsb	r0, r3, r3, lsl #8
     cea:	ubfx	r0, r0, #5, #8
     cee:	bl	2c40 <Synth::IO::wheel(unsigned char)>
     cf2:	mov	r1, r4
     cf4:	mov	r2, r0
     cf6:	ldr	r0, [pc, #24]	; (d10 <tone(keyEvent)+0x60>)
     cf8:	bl	6cb8 <Adafruit_MultiTrellis::setPixelColor(unsigned short, unsigned long)>
    IO::trellis.show();
     cfc:	ldr	r0, [pc, #16]	; (d10 <tone(keyEvent)+0x60>)
     cfe:	bl	6cd4 <Adafruit_MultiTrellis::show()>

    playNote(0, evt.bit.NUM, 255);
     d02:	uxtb	r1, r4
     d04:	movs	r2, #255	; 0xff
     d06:	movs	r0, #0
     d08:	bl	c14 <playNote(unsigned char, unsigned char, unsigned char)>
     d0c:	b.n	cc4 <tone(keyEvent)+0x14>
     d0e:	nop
     d10:	.word	0x200126d8

00000d14 <setup>:


  return 0;
}

void setup() {
     d14:	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  pinMode(13, OUTPUT);
     d18:	movs	r1, #1
     d1a:	movs	r0, #13
     d1c:	bl	7854 <pinMode>

  // Serial Port
  SerialPortInterface::start();

  // IO
  IO::setup();
     d20:	bl	2c8c <Synth::IO::setup()>

  for (int x = 0; x < NEOTRELLIS_X_DIM; x++) {
     d24:	movs	r6, #0
     d26:	uxtb	r5, r6
     d28:	movs	r4, #0
    for (int y = 0; y < NEOTRELLIS_Y_DIM; y++) {
      IO::trellis.registerCallback(x, y, tone);
     d2a:	uxtb	r2, r4
     d2c:	ldr	r3, [pc, #244]	; (e24 <setup+0x110>)
     d2e:	ldr	r0, [pc, #248]	; (e28 <setup+0x114>)
     d30:	mov	r1, r5

  // IO
  IO::setup();

  for (int x = 0; x < NEOTRELLIS_X_DIM; x++) {
    for (int y = 0; y < NEOTRELLIS_Y_DIM; y++) {
     d32:	adds	r4, #1
      IO::trellis.registerCallback(x, y, tone);
     d34:	bl	6c24 <Adafruit_MultiTrellis::registerCallback(unsigned char, unsigned char, void (*(*)(keyEvent))(keyEvent))>

  // IO
  IO::setup();

  for (int x = 0; x < NEOTRELLIS_X_DIM; x++) {
    for (int y = 0; y < NEOTRELLIS_Y_DIM; y++) {
     d38:	cmp	r4, #4
     d3a:	bne.n	d2a <setup+0x16>
  SerialPortInterface::start();

  // IO
  IO::setup();

  for (int x = 0; x < NEOTRELLIS_X_DIM; x++) {
     d3c:	adds	r6, #1
     d3e:	cmp	r6, #8
     d40:	bne.n	d26 <setup+0x12>
     d42:	ldr	r7, [pc, #232]	; (e2c <setup+0x118>)
     d44:	ldr	r6, [pc, #232]	; (e30 <setup+0x11c>)
     d46:	ldr.w	r9, [pc, #280]	; e60 <setup+0x14c>
     d4a:	movs	r3, #0
     d4c:	mov	r1, r7
     d4e:	mov	r2, r6
	 * decoded SoundFont file using the SoundFont Decoder Script which accompanies this library.
	 */
	void setInstrument(const instrument_data& instrument) {
		cli();
		this->instrument = &instrument;
		current_sample = NULL;
     d50:	mov	r5, r3
		env_state = STATE_IDLE;
     d52:	mov.w	r8, #92	; 0x5c
		state_change = true;
     d56:	mov.w	ip, #1
	 * values.
	 * @param v a value between 0.0 and 1.0
	 */
	void amplitude(float v) {
		v = (v < 0.0) ? 0.0 : (v > 1.0) ? 1.0 : v;
		tone_amp = (uint16_t)(UINT16_MAX*v);
     d5a:	movw	r4, #65535	; 0xffff
  // Audio
  for (int i = 0; i < TOTAL_VOICES; ++i) {
    wavetable[i].setInstrument(nylonstrgtr);
    wavetable[i].amplitude(1.0f);
    voices[i].wavetable_id = i;
    voices[i].channel = voices[i].note = 0xFF;
     d5e:	mov.w	lr, #255	; 0xff
	 * This function is used to set the instrument samples.
	 * @param instrument a struct of type instrument_data, commonly prodced from a
	 * decoded SoundFont file using the SoundFont Decoder Script which accompanies this library.
	 */
	void setInstrument(const instrument_data& instrument) {
		cli();
     d62:	cpsid	i
		this->instrument = &instrument;
		current_sample = NULL;
		env_state = STATE_IDLE;
     d64:	mla	r0, r8, r3, r7
	 * @param instrument a struct of type instrument_data, commonly prodced from a
	 * decoded SoundFont file using the SoundFont Decoder Script which accompanies this library.
	 */
	void setInstrument(const instrument_data& instrument) {
		cli();
		this->instrument = &instrument;
     d68:	str.w	r9, [r1, #28]
		current_sample = NULL;
     d6c:	str	r5, [r1, #32]
		env_state = STATE_IDLE;
     d6e:	strb.w	r5, [r0, #46]	; 0x2e
		state_change = true;
     d72:	strb.w	ip, [r0, #24]
		sei();
     d76:	cpsie	i

  // Audio
  for (int i = 0; i < TOTAL_VOICES; ++i) {
    wavetable[i].setInstrument(nylonstrgtr);
    wavetable[i].amplitude(1.0f);
    voices[i].wavetable_id = i;
     d78:	str.w	r3, [r6, r3, lsl #3]
  }

  // IOTest::test();

  // Audio
  for (int i = 0; i < TOTAL_VOICES; ++i) {
     d7c:	adds	r3, #1
     d7e:	cmp	r3, #64	; 0x40
    wavetable[i].setInstrument(nylonstrgtr);
    wavetable[i].amplitude(1.0f);
    voices[i].wavetable_id = i;
    voices[i].channel = voices[i].note = 0xFF;
     d80:	strb	r4, [r2, #5]
     d82:	strb.w	lr, [r2, #4]
	 * values.
	 * @param v a value between 0.0 and 1.0
	 */
	void amplitude(float v) {
		v = (v < 0.0) ? 0.0 : (v > 1.0) ? 1.0 : v;
		tone_amp = (uint16_t)(UINT16_MAX*v);
     d86:	strh	r4, [r0, #44]	; 0x2c
     d88:	add.w	r1, r1, #92	; 0x5c
     d8c:	add.w	r2, r2, #8
  }

  // IOTest::test();

  // Audio
  for (int i = 0; i < TOTAL_VOICES; ++i) {
     d90:	bne.n	d62 <setup+0x4e>
     d92:	ldr	r5, [pc, #160]	; (e34 <setup+0x120>)
		multiplier[channel] = gain * 65536.0f; // TODO: proper roundoff?
     d94:	mov.w	r2, #196608	; 0x30000
     d98:	mov	r3, r5
     d9a:	add.w	r1, r5, #1120	; 0x460
     d9e:	str	r2, [r3, #24]
     da0:	str	r2, [r3, #28]
     da2:	str	r2, [r3, #32]
     da4:	str	r2, [r3, #36]	; 0x24
     da6:	adds	r3, #56	; 0x38
    wavetable[i].amplitude(1.0f);
    voices[i].wavetable_id = i;
    voices[i].channel = voices[i].note = 0xFF;
  }

  for (int i = 0; i < TOTAL_MIXERS - 1; ++i)
     da8:	cmp	r3, r1
     daa:	mov.w	r4, #196608	; 0x30000
     dae:	bne.n	d9e <setup+0x8a>
      mixer[i].gain(j, 3);

  for (int i = 0; i < 4; ++i)
    mixer[TOTAL_MIXERS - 1].gain(i, 3); // .gain(i, i < SECONDARY_MIXERS ? 2.0f / SECONDARY_MIXERS : 0.0f);

  OnControlChange(0, 7, 255);
     db0:	movs	r2, #255	; 0xff
     db2:	movs	r1, #7
     db4:	movs	r0, #0
     db6:	str.w	r4, [r5, #1144]	; 0x478
     dba:	str.w	r4, [r5, #1148]	; 0x47c
     dbe:	str.w	r4, [r5, #1152]	; 0x480
     dc2:	str.w	r4, [r5, #1156]	; 0x484
     dc6:	bl	860 <OnControlChange(unsigned char, unsigned char, unsigned char)>
     dca:	ldr	r2, [pc, #108]	; (e38 <setup+0x124>)
     dcc:	ldr	r1, [pc, #108]	; (e3c <setup+0x128>)
	Serial.println();
}


void OnProgramChange(byte channel, byte program) {
	channel_map[channel] = channel != 10 ? midi_map[program] : &standard_DRUMS;
     dce:	ldr	r0, [pc, #112]	; (e40 <setup+0x12c>)
      mixer[i].gain(j, 3);

  for (int i = 0; i < 4; ++i)
    mixer[TOTAL_MIXERS - 1].gain(i, 3); // .gain(i, i < SECONDARY_MIXERS ? 2.0f / SECONDARY_MIXERS : 0.0f);

  OnControlChange(0, 7, 255);
     dd0:	movs	r3, #1
     dd2:	b.n	dd8 <setup+0xc4>
     dd4:	adds	r3, #1
     dd6:	adds	r2, #4
	Serial.println();
}


void OnProgramChange(byte channel, byte program) {
	channel_map[channel] = channel != 10 ? midi_map[program] : &standard_DRUMS;
     dd8:	cmp	r3, #11
     dda:	beq.n	e20 <setup+0x10c>
  for (int i = 0; i < 4; ++i)
    mixer[TOTAL_MIXERS - 1].gain(i, 3); // .gain(i, i < SECONDARY_MIXERS ? 2.0f / SECONDARY_MIXERS : 0.0f);

  OnControlChange(0, 7, 255);

  for (int i = 0; i < 16; i++)
     ddc:	cmp	r3, #16
	Serial.println();
}


void OnProgramChange(byte channel, byte program) {
	channel_map[channel] = channel != 10 ? midi_map[program] : &standard_DRUMS;
     dde:	str	r1, [r2, #0]
  for (int i = 0; i < 4; ++i)
    mixer[TOTAL_MIXERS - 1].gain(i, 3); // .gain(i, i < SECONDARY_MIXERS ? 2.0f / SECONDARY_MIXERS : 0.0f);

  OnControlChange(0, 7, 255);

  for (int i = 0; i < 16; i++)
     de0:	bne.n	dd4 <setup+0xc0>
    OnProgramChange(i, 10);


  AudioNoInterrupts();
     de2:	ldr	r3, [pc, #96]	; (e44 <setup+0x130>)
  AudioMemory(360);
     de4:	ldr	r0, [pc, #96]	; (e48 <setup+0x134>)
		phase_accumulator = angle * (4294967296.0 / 360.0);
	}
	void amplitude(float n) {
		if (n < 0) n = 0;
		else if (n > 1.0) n = 1.0;
		magnitude = n * 65536.0;
     de6:	ldr	r6, [pc, #100]	; (e4c <setup+0x138>)

  for (int i = 0; i < 16; i++)
    OnProgramChange(i, 10);


  AudioNoInterrupts();
     de8:	movs	r4, #1
     dea:	str	r4, [r3, #0]
  AudioMemory(360);
     dec:	mov.w	r1, #360	; 0x168
     df0:	bl	9550 <AudioStream::initialize_memory(audio_block_struct*, unsigned int)>
     df4:	mov.w	r3, #65536	; 0x10000
     df8:	ldr	r1, [pc, #84]	; (e50 <setup+0x13c>)
     dfa:	ldr	r2, [pc, #88]	; (e54 <setup+0x140>)
     dfc:	str	r3, [r6, #32]
  echoRepeat.gain(1, 0.5);

  slaveMixer.gain(2, 1);
  slaveMixer.gain(3, 1);

  sgtl5000.enable();
     dfe:	ldr	r0, [pc, #88]	; (e58 <setup+0x144>)
     e00:	str	r3, [r1, #24]
     e02:	mov.w	r5, #32768	; 0x8000
     e06:	str	r3, [r2, #32]
     e08:	str	r3, [r2, #36]	; 0x24
     e0a:	str	r5, [r1, #28]
     e0c:	bl	3784 <AudioControlSGTL5000::enable()>
public:
	AudioControlSGTL5000(void) : i2c_addr(0x0A) { }
	void setAddress(uint8_t level);
	bool enable(void);
	bool disable(void) { return false; }
	bool volume(float n) { return volumeInteger(n * 129 + 0.499); }
     e10:	movs	r1, #90	; 0x5a
     e12:	ldr	r0, [pc, #68]	; (e58 <setup+0x144>)
     e14:	bl	38c0 <AudioControlSGTL5000::volumeInteger(unsigned int)>
  sgtl5000.volume(0.7);

  AudioInterrupts();
     e18:	ldr	r3, [pc, #64]	; (e5c <setup+0x148>)
     e1a:	str	r4, [r3, #0]
}
     e1c:	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
	Serial.println();
}


void OnProgramChange(byte channel, byte program) {
	channel_map[channel] = channel != 10 ? midi_map[program] : &standard_DRUMS;
     e20:	str	r0, [r2, #0]
     e22:	b.n	dd4 <setup+0xc0>
     e24:	.word	0x00000cb1
     e28:	.word	0x200126d8
     e2c:	.word	0x200100c8
     e30:	.word	0x2000ef2c
     e34:	.word	0x2001209c
     e38:	.word	0x20007e6c
     e3c:	.word	0x00010338
     e40:	.word	0x0001045c
     e44:	.word	0xe000e188
     e48:	.word	0x1fff0200
     e4c:	.word	0x2001000c
     e50:	.word	0x200118b0
     e54:	.word	0x20012570
     e58:	.word	0x20008c58
     e5c:	.word	0xe000e108
     e60:	.word	0x00010328

00000e64 <updateFilter(bool&, float, float, AudioMixer4*, AudioConnection*, AudioConnection*, void (*)(float))>:
{
  bitcrush.sampleRate((1 - input) * 44100.0f);
}

void updateFilter(bool &enabled, float input, float off, AudioMixer4 *mixer, AudioConnection *a, AudioConnection *b, void (*func)(float))
{
     e64:	push	{r3, r4, r5, r6, r7, lr}
  if (fabsf(input - off) > __FLT_EPSILON__)
     e66:	vsub.f32	s15, s0, s1
     e6a:	vldr	s14, [pc, #248]	; f64 <updateFilter(bool&, float, float, AudioMixer4*, AudioConnection*, AudioConnection*, void (*)(float))+0x100>
     e6e:	vabs.f32	s15, s15
     e72:	vcmpe.f32	s15, s14
{
  bitcrush.sampleRate((1 - input) * 44100.0f);
}

void updateFilter(bool &enabled, float input, float off, AudioMixer4 *mixer, AudioConnection *a, AudioConnection *b, void (*func)(float))
{
     e76:	vpush	{d8}
  if (fabsf(input - off) > __FLT_EPSILON__)
     e7a:	vmrs	APSR_nzcv, fpscr
{
  bitcrush.sampleRate((1 - input) * 44100.0f);
}

void updateFilter(bool &enabled, float input, float off, AudioMixer4 *mixer, AudioConnection *a, AudioConnection *b, void (*func)(float))
{
     e7e:	ldr	r6, [sp, #32]
     e80:	mov	r5, r0
     e82:	mov	r4, r1
     e84:	mov	r7, r3
  if (fabsf(input - off) > __FLT_EPSILON__)
     e86:	ble.n	eda <updateFilter(bool&, float, float, AudioMixer4*, AudioConnection*, AudioConnection*, void (*)(float))+0x76>
  {
    if (!enabled)
     e88:	ldrb	r3, [r0, #0]
     e8a:	vmov.f32	s16, s0
     e8e:	cbnz	r3, ea4 <updateFilter(bool&, float, float, AudioMixer4*, AudioConnection*, AudioConnection*, void (*)(float))+0x40>
    {
      if (a) a->connect();
     e90:	cbz	r2, e98 <updateFilter(bool&, float, float, AudioMixer4*, AudioConnection*, AudioConnection*, void (*)(float))+0x34>
     e92:	mov	r0, r2
     e94:	bl	9748 <AudioConnection::connect()>
      if (b) b->connect();
     e98:	cbz	r7, ea0 <updateFilter(bool&, float, float, AudioMixer4*, AudioConnection*, AudioConnection*, void (*)(float))+0x3c>
     e9a:	mov	r0, r7
     e9c:	bl	9748 <AudioConnection::connect()>

      enabled = true;
     ea0:	movs	r3, #1
     ea2:	strb	r3, [r5, #0]
    }

    if (func) func(input);
     ea4:	cbz	r6, eac <updateFilter(bool&, float, float, AudioMixer4*, AudioConnection*, AudioConnection*, void (*)(float))+0x48>
     ea6:	vmov.f32	s0, s16
     eaa:	blx	r6

    if (mixer)
     eac:	cbz	r4, f0a <updateFilter(bool&, float, float, AudioMixer4*, AudioConnection*, AudioConnection*, void (*)(float))+0xa6>
     eae:	vmov.f32	s14, #112	; 0x3f800000  1.0
     eb2:	vsub.f32	s15, s16, s14
		for (int i=0; i<4; i++) multiplier[i] = 65536;
	}
	virtual void update(void);
	void gain(unsigned int channel, float gain) {
		if (channel >= 4) return;
		if (gain > 32767.0f) gain = 32767.0f;
     eb6:	vldr	s13, [pc, #176]	; f68 <updateFilter(bool&, float, float, AudioMixer4*, AudioConnection*, AudioConnection*, void (*)(float))+0x104>
     eba:	vadd.f32	s15, s15, s14
     ebe:	vcmpe.f32	s15, s13
     ec2:	vmrs	APSR_nzcv, fpscr
     ec6:	bgt.n	f10 <updateFilter(bool&, float, float, AudioMixer4*, AudioConnection*, AudioConnection*, void (*)(float))+0xac>
		else if (gain < -32767.0f) gain = -32767.0f;
     ec8:	vldr	s14, [pc, #160]	; f6c <updateFilter(bool&, float, float, AudioMixer4*, AudioConnection*, AudioConnection*, void (*)(float))+0x108>
     ecc:	vcmpe.f32	s15, s14
     ed0:	vmrs	APSR_nzcv, fpscr
     ed4:	bpl.n	f42 <updateFilter(bool&, float, float, AudioMixer4*, AudioConnection*, AudioConnection*, void (*)(float))+0xde>
     ed6:	ldr	r3, [pc, #152]	; (f70 <updateFilter(bool&, float, float, AudioMixer4*, AudioConnection*, AudioConnection*, void (*)(float))+0x10c>)
     ed8:	b.n	f12 <updateFilter(bool&, float, float, AudioMixer4*, AudioConnection*, AudioConnection*, void (*)(float))+0xae>
      mixer->gain(1, map(input, 0.0f, 1.0f, 1.0f, 0.0f));
    }
  }
  else
  {
    if (enabled)
     eda:	ldrb	r3, [r0, #0]
     edc:	cbz	r3, f0a <updateFilter(bool&, float, float, AudioMixer4*, AudioConnection*, AudioConnection*, void (*)(float))+0xa6>
     ede:	vmov.f32	s17, s1
    {
      if (a) a->disconnect();
     ee2:	cbz	r2, eea <updateFilter(bool&, float, float, AudioMixer4*, AudioConnection*, AudioConnection*, void (*)(float))+0x86>
     ee4:	mov	r0, r2
     ee6:	bl	97b0 <AudioConnection::disconnect()>
      if (b) b->disconnect();
     eea:	cbz	r7, ef2 <updateFilter(bool&, float, float, AudioMixer4*, AudioConnection*, AudioConnection*, void (*)(float))+0x8e>
     eec:	mov	r0, r7
     eee:	bl	97b0 <AudioConnection::disconnect()>

      if (mixer)
     ef2:	cbz	r4, efe <updateFilter(bool&, float, float, AudioMixer4*, AudioConnection*, AudioConnection*, void (*)(float))+0x9a>
		multiplier[channel] = gain * 65536.0f; // TODO: proper roundoff?
     ef4:	movs	r2, #0
     ef6:	mov.w	r3, #65536	; 0x10000
     efa:	str	r2, [r4, #24]
     efc:	str	r3, [r4, #28]
      {
        mixer->gain(0, 0);
        mixer->gain(1, 1);
      }

      if (func) func(off);
     efe:	cbz	r6, f06 <updateFilter(bool&, float, float, AudioMixer4*, AudioConnection*, AudioConnection*, void (*)(float))+0xa2>
     f00:	vmov.f32	s0, s17
     f04:	blx	r6

      enabled = false;
     f06:	movs	r3, #0
     f08:	strb	r3, [r5, #0]
    }
  }
}
     f0a:	vpop	{d8}
     f0e:	pop	{r3, r4, r5, r6, r7, pc}
		for (int i=0; i<4; i++) multiplier[i] = 65536;
	}
	virtual void update(void);
	void gain(unsigned int channel, float gain) {
		if (channel >= 4) return;
		if (gain > 32767.0f) gain = 32767.0f;
     f10:	ldr	r3, [pc, #96]	; (f74 <updateFilter(bool&, float, float, AudioMixer4*, AudioConnection*, AudioConnection*, void (*)(float))+0x110>)
     f12:	vldr	s14, [pc, #84]	; f68 <updateFilter(bool&, float, float, AudioMixer4*, AudioConnection*, AudioConnection*, void (*)(float))+0x104>
		else if (gain < -32767.0f) gain = -32767.0f;
		multiplier[channel] = gain * 65536.0f; // TODO: proper roundoff?
     f16:	str	r3, [r4, #24]
     f18:	vmov.f32	s15, #112	; 0x3f800000  1.0
     f1c:	vsub.f32	s16, s15, s16
		for (int i=0; i<4; i++) multiplier[i] = 65536;
	}
	virtual void update(void);
	void gain(unsigned int channel, float gain) {
		if (channel >= 4) return;
		if (gain > 32767.0f) gain = 32767.0f;
     f20:	vcmpe.f32	s16, s14
     f24:	vmrs	APSR_nzcv, fpscr
     f28:	bgt.n	f5e <updateFilter(bool&, float, float, AudioMixer4*, AudioConnection*, AudioConnection*, void (*)(float))+0xfa>
		else if (gain < -32767.0f) gain = -32767.0f;
     f2a:	vldr	s15, [pc, #64]	; f6c <updateFilter(bool&, float, float, AudioMixer4*, AudioConnection*, AudioConnection*, void (*)(float))+0x108>
     f2e:	vcmpe.f32	s16, s15
     f32:	vmrs	APSR_nzcv, fpscr
     f36:	bpl.n	f50 <updateFilter(bool&, float, float, AudioMixer4*, AudioConnection*, AudioConnection*, void (*)(float))+0xec>
     f38:	ldr	r3, [pc, #52]	; (f70 <updateFilter(bool&, float, float, AudioMixer4*, AudioConnection*, AudioConnection*, void (*)(float))+0x10c>)
		multiplier[channel] = gain * 65536.0f; // TODO: proper roundoff?
     f3a:	str	r3, [r4, #28]
     f3c:	vpop	{d8}
     f40:	pop	{r3, r4, r5, r6, r7, pc}
     f42:	vmov.f32	s14, s15
     f46:	vcvt.s32.f32	s14, s14, #16
     f4a:	vmov	r3, s14
     f4e:	b.n	f12 <updateFilter(bool&, float, float, AudioMixer4*, AudioConnection*, AudioConnection*, void (*)(float))+0xae>
     f50:	vmov.f32	s15, s16
     f54:	vcvt.s32.f32	s15, s15, #16
     f58:	vmov	r3, s15
     f5c:	b.n	f3a <updateFilter(bool&, float, float, AudioMixer4*, AudioConnection*, AudioConnection*, void (*)(float))+0xd6>
		for (int i=0; i<4; i++) multiplier[i] = 65536;
	}
	virtual void update(void);
	void gain(unsigned int channel, float gain) {
		if (channel >= 4) return;
		if (gain > 32767.0f) gain = 32767.0f;
     f5e:	ldr	r3, [pc, #20]	; (f74 <updateFilter(bool&, float, float, AudioMixer4*, AudioConnection*, AudioConnection*, void (*)(float))+0x110>)
     f60:	b.n	f3a <updateFilter(bool&, float, float, AudioMixer4*, AudioConnection*, AudioConnection*, void (*)(float))+0xd6>
     f62:	nop
     f64:	.word	0x34000000
     f68:	.word	0x46fffe00
     f6c:	.word	0xc6fffe00
     f70:	.word	0x80010000
     f74:	.word	0x7fff0000

00000f78 <loop>:

void loop() {
     f78:	push	{r4, r5, r6, lr}
     f7a:	vpush	{d8-d11}
     f7e:	ldr	r5, [pc, #812]	; (12ac <loop+0x334>)
                static char spBuffer[96];
                static int spIndex = 0;

                while (Serial.available() > 0)
                {
                    if (spIndex < 80) {
     f80:	ldr	r4, [pc, #812]	; (12b0 <loop+0x338>)
     f82:	sub	sp, #72	; 0x48
			// sketch still gets to run normally after this wait time.
			//if ((uint32_t)(systick_millis_count - millis_begin) > 2500) break;
		//}
	}
        void end() { /* TODO: flush output and shut down USB port */ };
        virtual int available() { return usb_serial_available(); }
     f84:	bl	70bc <usb_serial_available>

            static void getData() {
                static char spBuffer[96];
                static int spIndex = 0;

                while (Serial.available() > 0)
     f88:	cmp	r0, #0
     f8a:	ble.n	fa8 <loop+0x30>
                {
                    if (spIndex < 80) {
     f8c:	ldr	r3, [r4, #0]
     f8e:	cmp	r3, #79	; 0x4f
     f90:	bgt.w	126a <loop+0x2f2>
        virtual int read() { return usb_serial_getchar(); }
     f94:	bl	7044 <usb_serial_getchar>
                        char c = Serial.read();
                        spBuffer[spIndex] = c;
     f98:	ldr	r3, [r4, #0]

                        spIndex++;
     f9a:	adds	r2, r3, #1

                while (Serial.available() > 0)
                {
                    if (spIndex < 80) {
                        char c = Serial.read();
                        spBuffer[spIndex] = c;
     f9c:	strb	r0, [r5, r3]

                        spIndex++;
     f9e:	str	r2, [r4, #0]
			// sketch still gets to run normally after this wait time.
			//if ((uint32_t)(systick_millis_count - millis_begin) > 2500) break;
		//}
	}
        void end() { /* TODO: flush output and shut down USB port */ };
        virtual int available() { return usb_serial_available(); }
     fa0:	bl	70bc <usb_serial_available>

            static void getData() {
                static char spBuffer[96];
                static int spIndex = 0;

                while (Serial.available() > 0)
     fa4:	cmp	r0, #0
     fa6:	bgt.n	f8c <loop+0x14>
                        spBuffer[i] = '\0';
                        }
                    }
                }

                String serialData = String(spBuffer);
     fa8:	ldr	r1, [pc, #768]	; (12ac <loop+0x334>)
     faa:	add	r0, sp, #8
     fac:	bl	93ac <String::String(char const*)>
                int newLineIndex = serialData.indexOf("\r\n");
     fb0:	ldr	r1, [pc, #768]	; (12b4 <loop+0x33c>)
     fb2:	add	r0, sp, #56	; 0x38
     fb4:	bl	93ac <String::String(char const*)>
     fb8:	add	r1, sp, #56	; 0x38
     fba:	add	r0, sp, #8
     fbc:	bl	94cc <String::indexOf(String const&) const>
     fc0:	mov	r4, r0
     fc2:	add	r0, sp, #56	; 0x38
     fc4:	bl	932c <String::~String()>
                if (newLineIndex > 0) {
     fc8:	cmp	r4, #0
     fca:	ble.n	1078 <loop+0x100>
                    String commandString = serialData.substring(0, newLineIndex);

                    // CLEAR BUFFER
                    spIndex -= newLineIndex + 2;
     fcc:	ldr	r6, [pc, #736]	; (12b0 <loop+0x338>)
                }

                String serialData = String(spBuffer);
                int newLineIndex = serialData.indexOf("\r\n");
                if (newLineIndex > 0) {
                    String commandString = serialData.substring(0, newLineIndex);
     fce:	add	r0, sp, #24
     fd0:	mov	r3, r4
     fd2:	movs	r2, #0
     fd4:	add	r1, sp, #8
     fd6:	bl	94f0 <String::substring(unsigned int, unsigned int) const>

                    // CLEAR BUFFER
                    spIndex -= newLineIndex + 2;
     fda:	ldr	r3, [r6, #0]
     fdc:	ldr	r2, [pc, #716]	; (12ac <loop+0x334>)
     fde:	adds	r1, r4, #2
     fe0:	subs	r1, r3, r1
                    for (int i = 0; i < SERIAL_PORT_BUFFER_SIZE; i++) {
     fe2:	movs	r3, #0
                        if (i < newLineIndex) {
                        spBuffer[i] = spBuffer[i + newLineIndex];
     fe4:	adds	r0, r5, r4
                int newLineIndex = serialData.indexOf("\r\n");
                if (newLineIndex > 0) {
                    String commandString = serialData.substring(0, newLineIndex);

                    // CLEAR BUFFER
                    spIndex -= newLineIndex + 2;
     fe6:	str	r1, [r6, #0]
                    for (int i = 0; i < SERIAL_PORT_BUFFER_SIZE; i++) {
                        if (i < newLineIndex) {
                        spBuffer[i] = spBuffer[i + newLineIndex];
                        } else {
                        spBuffer[i] = '\0';
     fe8:	mov	r5, r3
                    String commandString = serialData.substring(0, newLineIndex);

                    // CLEAR BUFFER
                    spIndex -= newLineIndex + 2;
                    for (int i = 0; i < SERIAL_PORT_BUFFER_SIZE; i++) {
                        if (i < newLineIndex) {
     fea:	cmp	r4, r3
                        spBuffer[i] = spBuffer[i + newLineIndex];
     fec:	itt	gt
     fee:	ldrbgt	r1, [r0, r3]
     ff0:	strbgt	r1, [r2, #0]
                if (newLineIndex > 0) {
                    String commandString = serialData.substring(0, newLineIndex);

                    // CLEAR BUFFER
                    spIndex -= newLineIndex + 2;
                    for (int i = 0; i < SERIAL_PORT_BUFFER_SIZE; i++) {
     ff2:	add.w	r3, r3, #1
                        if (i < newLineIndex) {
                        spBuffer[i] = spBuffer[i + newLineIndex];
                        } else {
                        spBuffer[i] = '\0';
     ff6:	it	le
     ff8:	strble	r5, [r2, #0]
                if (newLineIndex > 0) {
                    String commandString = serialData.substring(0, newLineIndex);

                    // CLEAR BUFFER
                    spIndex -= newLineIndex + 2;
                    for (int i = 0; i < SERIAL_PORT_BUFFER_SIZE; i++) {
     ffa:	cmp	r3, #96	; 0x60
     ffc:	add.w	r2, r2, #1
    1000:	bne.n	fea <loop+0x72>
                        } else {
                        spBuffer[i] = '\0';
                        }
                    }

                    int commandIndex = commandString.indexOf(' ');
    1002:	movs	r1, #32
    1004:	add	r0, sp, #24
    1006:	bl	94ac <String::indexOf(char) const>
                    String c;
    100a:	movs	r1, #0
                        } else {
                        spBuffer[i] = '\0';
                        }
                    }

                    int commandIndex = commandString.indexOf(' ');
    100c:	mov	r4, r0
                    String c;
    100e:	add	r0, sp, #40	; 0x28
    1010:	bl	93ac <String::String(char const*)>
                    if (commandIndex == -1) {
    1014:	adds	r3, r4, #1
    1016:	beq.w	13d4 <loop+0x45c>
                        c = commandString;
                    } else {
                        c = commandString.substring(0, commandIndex);
    101a:	mov	r3, r4
    101c:	movs	r2, #0
    101e:	add	r1, sp, #24
    1020:	add	r0, sp, #56	; 0x38
    1022:	bl	94f0 <String::substring(unsigned int, unsigned int) const>
    1026:	add	r1, sp, #56	; 0x38
    1028:	add	r0, sp, #40	; 0x28
    102a:	bl	943c <String::operator=(String&&)>
    102e:	add	r0, sp, #56	; 0x38
    1030:	bl	932c <String::~String()>
	size_t print(unsigned long n, int base)		{ return printNumber(n, base, 0); }

	size_t print(double n, int digits = 2)		{ return printFloat(n, digits); }
	size_t print(const Printable &obj)		{ return obj.printTo(*this); }
	size_t println(void);
	size_t println(const String &s)			{ return print(s) + println(); }
    1034:	add	r1, sp, #40	; 0x28
    1036:	ldr	r0, [pc, #640]	; (12b8 <loop+0x340>)
    1038:	bl	8c70 <Print::print(String const&)>
    103c:	ldr	r0, [pc, #632]	; (12b8 <loop+0x340>)
    103e:	bl	8cbc <Print::println()>
	int compareTo(const String &s) const;
	unsigned char equals(const String &s) const;
	unsigned char equals(const char *cstr) const;
	//unsigned char equals(const __FlashStringHelper *pgmstr) const;
	unsigned char operator == (const String &rhs) const {return equals(rhs);}
	unsigned char operator == (const char *cstr) const {return equals(cstr);}
    1042:	ldr	r1, [pc, #632]	; (12bc <loop+0x344>)
    1044:	add	r0, sp, #40	; 0x28
    1046:	bl	944c <String::equals(char const*) const>
                    }

                    Serial.println(c);

                    // VERSION
                    if (c == "Q") {
    104a:	cmp	r0, #0
    104c:	beq.w	13de <loop+0x466>
        virtual int read() { return usb_serial_getchar(); }
        virtual int peek() { return usb_serial_peekchar(); }
        virtual void flush() { usb_serial_flush_output(); }  // TODO: actually wait for data to leave USB...
        virtual void clear(void) { usb_serial_flush_input(); }
        virtual size_t write(uint8_t c) { return usb_serial_putchar(c); }
        virtual size_t write(const uint8_t *buffer, size_t size) { return usb_serial_write(buffer, size); }
    1050:	movs	r1, #36	; 0x24
    1052:	ldr	r0, [pc, #620]	; (12c0 <loop+0x348>)
    1054:	bl	7110 <usb_serial_write>
	size_t println(char c)				{ return print(c) + println(); }
	size_t println(const char s[])			{ return print(s) + println(); }
    1058:	ldr	r0, [pc, #604]	; (12b8 <loop+0x340>)
    105a:	bl	8cbc <Print::println()>
    105e:	movs	r1, #2
    1060:	ldr	r0, [pc, #608]	; (12c4 <loop+0x34c>)
    1062:	bl	7110 <usb_serial_write>
    1066:	ldr	r0, [pc, #592]	; (12b8 <loop+0x340>)
    1068:	bl	8cbc <Print::println()>
                        spBuffer[i] = '\0';
                        }
                    }

                    int commandIndex = commandString.indexOf(' ');
                    String c;
    106c:	add	r0, sp, #40	; 0x28
    106e:	bl	932c <String::~String()>
                }

                String serialData = String(spBuffer);
                int newLineIndex = serialData.indexOf("\r\n");
                if (newLineIndex > 0) {
                    String commandString = serialData.substring(0, newLineIndex);
    1072:	add	r0, sp, #24
    1074:	bl	932c <String::~String()>
                        spBuffer[i] = '\0';
                        }
                    }
                }

                String serialData = String(spBuffer);
    1078:	add	r0, sp, #8
    107a:	bl	932c <String::~String()>
  SerialPortInterface::getData();

  IO::update();
    107e:	bl	2d94 <Synth::IO::update()>

  float volume = IO::readPot(13) * 1.5f;
    1082:	movs	r0, #13
    1084:	bl	2e48 <Synth::IO::readPot(unsigned char)>
    1088:	vmov.f32	s16, #120	; 0x3fc00000  1.5

  float bpmVal = IO::readSlidePot(1);
    108c:	movs	r0, #1
void loop() {
  SerialPortInterface::getData();

  IO::update();

  float volume = IO::readPot(13) * 1.5f;
    108e:	vmul.f32	s16, s0, s16

  float bpmVal = IO::readSlidePot(1);
    1092:	bl	2dac <Synth::IO::readSlidePot(unsigned char)>
  float echoVal = IO::readSlidePot(2);
    1096:	movs	r0, #2
    1098:	bl	2dac <Synth::IO::readSlidePot(unsigned char)>
  float reverbVal = IO::readSlidePot(3);
    109c:	movs	r0, #3
  IO::update();

  float volume = IO::readPot(13) * 1.5f;

  float bpmVal = IO::readSlidePot(1);
  float echoVal = IO::readSlidePot(2);
    109e:	vmov.f32	s19, s0
  float reverbVal = IO::readSlidePot(3);
    10a2:	bl	2dac <Synth::IO::readSlidePot(unsigned char)>
  float cutoffVal = IO::readSlidePot(4);
    10a6:	movs	r0, #4

  float volume = IO::readPot(13) * 1.5f;

  float bpmVal = IO::readSlidePot(1);
  float echoVal = IO::readSlidePot(2);
  float reverbVal = IO::readSlidePot(3);
    10a8:	vmov.f32	s23, s0
  float cutoffVal = IO::readSlidePot(4);
    10ac:	bl	2dac <Synth::IO::readSlidePot(unsigned char)>
  float ringModulationVal = IO::readSlidePot(5);
    10b0:	movs	r0, #5
  float volume = IO::readPot(13) * 1.5f;

  float bpmVal = IO::readSlidePot(1);
  float echoVal = IO::readSlidePot(2);
  float reverbVal = IO::readSlidePot(3);
  float cutoffVal = IO::readSlidePot(4);
    10b2:	vmov.f32	s18, s0
  float ringModulationVal = IO::readSlidePot(5);
    10b6:	bl	2dac <Synth::IO::readSlidePot(unsigned char)>
  float bitcrushVal = IO::readSlidePot(6);
    10ba:	movs	r0, #6

  float bpmVal = IO::readSlidePot(1);
  float echoVal = IO::readSlidePot(2);
  float reverbVal = IO::readSlidePot(3);
  float cutoffVal = IO::readSlidePot(4);
  float ringModulationVal = IO::readSlidePot(5);
    10bc:	vmov.f32	s22, s0
  float bitcrushVal = IO::readSlidePot(6);
    10c0:	bl	2dac <Synth::IO::readSlidePot(unsigned char)>
  float distortionVal = IO::readSlidePot(7);
    10c4:	movs	r0, #7
  float bpmVal = IO::readSlidePot(1);
  float echoVal = IO::readSlidePot(2);
  float reverbVal = IO::readSlidePot(3);
  float cutoffVal = IO::readSlidePot(4);
  float ringModulationVal = IO::readSlidePot(5);
  float bitcrushVal = IO::readSlidePot(6);
    10c6:	vmov.f32	s20, s0
  float distortionVal = IO::readSlidePot(7);
    10ca:	bl	2dac <Synth::IO::readSlidePot(unsigned char)>

typedef void (* vUpdateFilter)(float args);

bool changed(float input, float &other)
{
  if (fabsf(input - other) <= __FLT_EPSILON__) return false;
    10ce:	ldr	r4, [pc, #504]	; (12c8 <loop+0x350>)
  float reverbVal = IO::readSlidePot(3);
  float cutoffVal = IO::readSlidePot(4);
  float ringModulationVal = IO::readSlidePot(5);
  float bitcrushVal = IO::readSlidePot(6);
  float distortionVal = IO::readSlidePot(7);
  float beatrepeaterVal = IO::readSlidePot(8);
    10d0:	movs	r0, #8
  float echoVal = IO::readSlidePot(2);
  float reverbVal = IO::readSlidePot(3);
  float cutoffVal = IO::readSlidePot(4);
  float ringModulationVal = IO::readSlidePot(5);
  float bitcrushVal = IO::readSlidePot(6);
  float distortionVal = IO::readSlidePot(7);
    10d2:	vmov.f32	s21, s0
  float beatrepeaterVal = IO::readSlidePot(8);
    10d6:	bl	2dac <Synth::IO::readSlidePot(unsigned char)>
  float overallVal = IO::readSlidePot(9);
    10da:	movs	r0, #9
    10dc:	bl	2dac <Synth::IO::readSlidePot(unsigned char)>

typedef void (* vUpdateFilter)(float args);

bool changed(float input, float &other)
{
  if (fabsf(input - other) <= __FLT_EPSILON__) return false;
    10e0:	vldr	s15, [r4]
    10e4:	vldr	s14, [pc, #484]	; 12cc <loop+0x354>
  float bitcrushVal = IO::readSlidePot(6);
  float distortionVal = IO::readSlidePot(7);
  float beatrepeaterVal = IO::readSlidePot(8);
  float overallVal = IO::readSlidePot(9);

  AudioNoInterrupts();
    10e8:	ldr	r3, [pc, #484]	; (12d0 <loop+0x358>)

typedef void (* vUpdateFilter)(float args);

bool changed(float input, float &other)
{
  if (fabsf(input - other) <= __FLT_EPSILON__) return false;
    10ea:	vsub.f32	s15, s23, s15
  float bitcrushVal = IO::readSlidePot(6);
  float distortionVal = IO::readSlidePot(7);
  float beatrepeaterVal = IO::readSlidePot(8);
  float overallVal = IO::readSlidePot(9);

  AudioNoInterrupts();
    10ee:	movs	r2, #1

typedef void (* vUpdateFilter)(float args);

bool changed(float input, float &other)
{
  if (fabsf(input - other) <= __FLT_EPSILON__) return false;
    10f0:	vabs.f32	s15, s15
    10f4:	vcmpe.f32	s15, s14
    10f8:	vmrs	APSR_nzcv, fpscr
  float cutoffVal = IO::readSlidePot(4);
  float ringModulationVal = IO::readSlidePot(5);
  float bitcrushVal = IO::readSlidePot(6);
  float distortionVal = IO::readSlidePot(7);
  float beatrepeaterVal = IO::readSlidePot(8);
  float overallVal = IO::readSlidePot(9);
    10fc:	vmov.f32	s17, s0

  AudioNoInterrupts();
    1100:	str	r2, [r3, #0]

typedef void (* vUpdateFilter)(float args);

bool changed(float input, float &other)
{
  if (fabsf(input - other) <= __FLT_EPSILON__) return false;
    1102:	bls.n	1120 <loop+0x1a8>
  float overallVal = IO::readSlidePot(9);

  AudioNoInterrupts();

  if (changed(reverbVal, reverbValLast))
    updateFilter(reverbEnabled, reverbVal, 0, &reverbMixer, &patchCord3, &patchCord10, &updateReverb);
    1104:	ldr	r3, [pc, #460]	; (12d4 <loop+0x35c>)
    1106:	str	r3, [sp, #0]
    1108:	vmov.f32	s0, s23
    110c:	ldr	r3, [pc, #456]	; (12d8 <loop+0x360>)
    110e:	ldr	r2, [pc, #460]	; (12dc <loop+0x364>)
    1110:	ldr	r1, [pc, #460]	; (12e0 <loop+0x368>)
    1112:	vldr	s1, [pc, #464]	; 12e4 <loop+0x36c>
    1116:	ldr	r0, [pc, #464]	; (12e8 <loop+0x370>)

bool changed(float input, float &other)
{
  if (fabsf(input - other) <= __FLT_EPSILON__) return false;

  other = input;
    1118:	vstr	s23, [r4]
  float overallVal = IO::readSlidePot(9);

  AudioNoInterrupts();

  if (changed(reverbVal, reverbValLast))
    updateFilter(reverbEnabled, reverbVal, 0, &reverbMixer, &patchCord3, &patchCord10, &updateReverb);
    111c:	bl	e64 <updateFilter(bool&, float, float, AudioMixer4*, AudioConnection*, AudioConnection*, void (*)(float))>

typedef void (* vUpdateFilter)(float args);

bool changed(float input, float &other)
{
  if (fabsf(input - other) <= __FLT_EPSILON__) return false;
    1120:	ldr	r3, [pc, #456]	; (12ec <loop+0x374>)
    1122:	vldr	s14, [pc, #424]	; 12cc <loop+0x354>
    1126:	vldr	s15, [r3]
    112a:	vsub.f32	s15, s20, s15
    112e:	vabs.f32	s15, s15
    1132:	vcmpe.f32	s15, s14
    1136:	vmrs	APSR_nzcv, fpscr
    113a:	bls.w	128c <loop+0x314>

  other = input;
    113e:	vstr	s20, [r3]
constexpr auto min(A&& a, B&& b) -> decltype(a < b ? std::forward<A>(a) : std::forward<B>(b)) {
  return a < b ? std::forward<A>(a) : std::forward<B>(b);
}
template<class A, class B>
constexpr auto max(A&& a, B&& b) -> decltype(a < b ? std::forward<A>(a) : std::forward<B>(b)) {
  return a >= b ? std::forward<A>(a) : std::forward<B>(b);
    1142:	vcmpe.f32	s20, s21

  if (changed(reverbVal, reverbValLast))
    updateFilter(reverbEnabled, reverbVal, 0, &reverbMixer, &patchCord3, &patchCord10, &updateReverb);

  if (changed(bitcrushVal, bitcrushValLast) || changed(distortionVal, distortionValLast))
    updateFilter(bitcrushEnabled, max(bitcrushVal, distortionVal), 0, &bitcrushMixer, &patchCord8, &patchCord11, &updateBitcrush);
    1146:	ldr	r3, [pc, #424]	; (12f0 <loop+0x378>)
    1148:	str	r3, [sp, #0]
    114a:	vmrs	APSR_nzcv, fpscr
    114e:	ite	lt
    1150:	vmovlt.f32	s0, s21
    1154:	vmovge.f32	s0, s20
    1158:	ldr	r3, [pc, #408]	; (12f4 <loop+0x37c>)
    115a:	ldr	r2, [pc, #412]	; (12f8 <loop+0x380>)
    115c:	ldr	r1, [pc, #412]	; (12fc <loop+0x384>)
    115e:	vldr	s1, [pc, #388]	; 12e4 <loop+0x36c>
    1162:	ldr	r0, [pc, #412]	; (1300 <loop+0x388>)
    1164:	bl	e64 <updateFilter(bool&, float, float, AudioMixer4*, AudioConnection*, AudioConnection*, void (*)(float))>

typedef void (* vUpdateFilter)(float args);

bool changed(float input, float &other)
{
  if (fabsf(input - other) <= __FLT_EPSILON__) return false;
    1168:	ldr	r4, [pc, #408]	; (1304 <loop+0x38c>)
    116a:	vldr	s14, [pc, #352]	; 12cc <loop+0x354>
    116e:	vldr	s15, [r4]
    1172:	vsub.f32	s15, s22, s15
    1176:	vabs.f32	s15, s15
    117a:	vcmpe.f32	s15, s14
    117e:	vmrs	APSR_nzcv, fpscr
    1182:	bls.n	11a0 <loop+0x228>

  if (changed(bitcrushVal, bitcrushValLast) || changed(distortionVal, distortionValLast))
    updateFilter(bitcrushEnabled, max(bitcrushVal, distortionVal), 0, &bitcrushMixer, &patchCord8, &patchCord11, &updateBitcrush);

  if (changed(ringModulationVal, ringModulationValLast))
    updateFilter(ringModulationEnabled, ringModulationVal, 0, &ringModulationMixer, &patchCord9, &patchCord13, &updateRingModulation);
    1184:	ldr	r3, [pc, #384]	; (1308 <loop+0x390>)
    1186:	str	r3, [sp, #0]
    1188:	vmov.f32	s0, s22
    118c:	ldr	r3, [pc, #380]	; (130c <loop+0x394>)
    118e:	ldr	r2, [pc, #384]	; (1310 <loop+0x398>)
    1190:	ldr	r1, [pc, #384]	; (1314 <loop+0x39c>)
    1192:	vldr	s1, [pc, #336]	; 12e4 <loop+0x36c>
    1196:	ldr	r0, [pc, #384]	; (1318 <loop+0x3a0>)

bool changed(float input, float &other)
{
  if (fabsf(input - other) <= __FLT_EPSILON__) return false;

  other = input;
    1198:	vstr	s22, [r4]

  if (changed(bitcrushVal, bitcrushValLast) || changed(distortionVal, distortionValLast))
    updateFilter(bitcrushEnabled, max(bitcrushVal, distortionVal), 0, &bitcrushMixer, &patchCord8, &patchCord11, &updateBitcrush);

  if (changed(ringModulationVal, ringModulationValLast))
    updateFilter(ringModulationEnabled, ringModulationVal, 0, &ringModulationMixer, &patchCord9, &patchCord13, &updateRingModulation);
    119c:	bl	e64 <updateFilter(bool&, float, float, AudioMixer4*, AudioConnection*, AudioConnection*, void (*)(float))>

typedef void (* vUpdateFilter)(float args);

bool changed(float input, float &other)
{
  if (fabsf(input - other) <= __FLT_EPSILON__) return false;
    11a0:	ldr	r4, [pc, #376]	; (131c <loop+0x3a4>)
    11a2:	vldr	s14, [pc, #296]	; 12cc <loop+0x354>
    11a6:	vldr	s15, [r4]
    11aa:	vsub.f32	s15, s19, s15
    11ae:	vabs.f32	s15, s15
    11b2:	vcmpe.f32	s15, s14
    11b6:	vmrs	APSR_nzcv, fpscr
    11ba:	bls.n	11d8 <loop+0x260>

  if (changed(ringModulationVal, ringModulationValLast))
    updateFilter(ringModulationEnabled, ringModulationVal, 0, &ringModulationMixer, &patchCord9, &patchCord13, &updateRingModulation);

  if (changed(echoVal, echoValLast))
    updateFilter(echoEnabled, echoVal, 0, &echoMixer, &patchCord17, &patchCord20, &updateEcho);
    11bc:	ldr	r3, [pc, #352]	; (1320 <loop+0x3a8>)
    11be:	str	r3, [sp, #0]
    11c0:	vmov.f32	s0, s19
    11c4:	ldr	r3, [pc, #348]	; (1324 <loop+0x3ac>)
    11c6:	ldr	r2, [pc, #352]	; (1328 <loop+0x3b0>)
    11c8:	ldr	r1, [pc, #352]	; (132c <loop+0x3b4>)
    11ca:	vldr	s1, [pc, #280]	; 12e4 <loop+0x36c>
    11ce:	ldr	r0, [pc, #352]	; (1330 <loop+0x3b8>)

bool changed(float input, float &other)
{
  if (fabsf(input - other) <= __FLT_EPSILON__) return false;

  other = input;
    11d0:	vstr	s19, [r4]

  if (changed(ringModulationVal, ringModulationValLast))
    updateFilter(ringModulationEnabled, ringModulationVal, 0, &ringModulationMixer, &patchCord9, &patchCord13, &updateRingModulation);

  if (changed(echoVal, echoValLast))
    updateFilter(echoEnabled, echoVal, 0, &echoMixer, &patchCord17, &patchCord20, &updateEcho);
    11d4:	bl	e64 <updateFilter(bool&, float, float, AudioMixer4*, AudioConnection*, AudioConnection*, void (*)(float))>

typedef void (* vUpdateFilter)(float args);

bool changed(float input, float &other)
{
  if (fabsf(input - other) <= __FLT_EPSILON__) return false;
    11d8:	ldr	r4, [pc, #344]	; (1334 <loop+0x3bc>)
    11da:	vldr	s14, [pc, #240]	; 12cc <loop+0x354>
    11de:	vldr	s15, [r4]
    11e2:	vsub.f32	s15, s18, s15
    11e6:	vabs.f32	s15, s15
    11ea:	vcmpe.f32	s15, s14
    11ee:	vmrs	APSR_nzcv, fpscr
    11f2:	bls.n	1210 <loop+0x298>

  if (changed(echoVal, echoValLast))
    updateFilter(echoEnabled, echoVal, 0, &echoMixer, &patchCord17, &patchCord20, &updateEcho);

  if (changed(cutoffVal, cutoffValLast))
    updateFilter(cutoffEnabled, cutoffVal, 0.5f, nullptr, &patchCord21, nullptr, &updateCutoff);
    11f4:	ldr	r3, [pc, #320]	; (1338 <loop+0x3c0>)
    11f6:	str	r3, [sp, #0]
    11f8:	movs	r3, #0
    11fa:	vmov.f32	s0, s18
    11fe:	mov	r1, r3
    1200:	ldr	r2, [pc, #312]	; (133c <loop+0x3c4>)
    1202:	ldr	r0, [pc, #316]	; (1340 <loop+0x3c8>)

bool changed(float input, float &other)
{
  if (fabsf(input - other) <= __FLT_EPSILON__) return false;

  other = input;
    1204:	vstr	s18, [r4]

  if (changed(echoVal, echoValLast))
    updateFilter(echoEnabled, echoVal, 0, &echoMixer, &patchCord17, &patchCord20, &updateEcho);

  if (changed(cutoffVal, cutoffValLast))
    updateFilter(cutoffEnabled, cutoffVal, 0.5f, nullptr, &patchCord21, nullptr, &updateCutoff);
    1208:	vmov.f32	s1, #96	; 0x3f000000  0.5
    120c:	bl	e64 <updateFilter(bool&, float, float, AudioMixer4*, AudioConnection*, AudioConnection*, void (*)(float))>

typedef void (* vUpdateFilter)(float args);

bool changed(float input, float &other)
{
  if (fabsf(input - other) <= __FLT_EPSILON__) return false;
    1210:	ldr	r4, [pc, #304]	; (1344 <loop+0x3cc>)
    1212:	vldr	s14, [pc, #184]	; 12cc <loop+0x354>
    1216:	vldr	s15, [r4]
    121a:	vsub.f32	s15, s17, s15
    121e:	vabs.f32	s15, s15
    1222:	vcmpe.f32	s15, s14
    1226:	vmrs	APSR_nzcv, fpscr
    122a:	bls.n	1246 <loop+0x2ce>

  if (changed(cutoffVal, cutoffValLast))
    updateFilter(cutoffEnabled, cutoffVal, 0.5f, nullptr, &patchCord21, nullptr, &updateCutoff);

  if (changed(overallVal, overallValLast))
    updateFilter(overallEnabled, overallVal, 0, &masterMixer, nullptr, nullptr, nullptr);
    122c:	movs	r3, #0
    122e:	str	r3, [sp, #0]
    1230:	vmov.f32	s0, s17
    1234:	mov	r2, r3
    1236:	ldr	r1, [pc, #272]	; (1348 <loop+0x3d0>)
    1238:	vldr	s1, [pc, #168]	; 12e4 <loop+0x36c>
    123c:	ldr	r0, [pc, #268]	; (134c <loop+0x3d4>)

bool changed(float input, float &other)
{
  if (fabsf(input - other) <= __FLT_EPSILON__) return false;

  other = input;
    123e:	vstr	s17, [r4]

  if (changed(cutoffVal, cutoffValLast))
    updateFilter(cutoffEnabled, cutoffVal, 0.5f, nullptr, &patchCord21, nullptr, &updateCutoff);

  if (changed(overallVal, overallValLast))
    updateFilter(overallEnabled, overallVal, 0, &masterMixer, nullptr, nullptr, nullptr);
    1242:	bl	e64 <updateFilter(bool&, float, float, AudioMixer4*, AudioConnection*, AudioConnection*, void (*)(float))>
public:
	AudioAmplifier(void) : AudioStream(1, inputQueueArray), multiplier(65536) {
	}
	virtual void update(void);
	void gain(float n) {
		if (n > 32767.0f) n = 32767.0f;
    1246:	vldr	s15, [pc, #264]	; 1350 <loop+0x3d8>
    124a:	vcmpe.f32	s16, s15
    124e:	vmrs	APSR_nzcv, fpscr
    1252:	bgt.w	1368 <loop+0x3f0>
		else if (n < -32767.0f) n = -32767.0f;
    1256:	vldr	s15, [pc, #252]	; 1354 <loop+0x3dc>
    125a:	vcmpe.f32	s16, s15
    125e:	vmrs	APSR_nzcv, fpscr
    1262:	bpl.w	13c6 <loop+0x44e>
    1266:	ldr	r0, [pc, #240]	; (1358 <loop+0x3e0>)
    1268:	b.n	136a <loop+0x3f2>
    126a:	movs	r1, #8
    126c:	ldr	r0, [pc, #236]	; (135c <loop+0x3e4>)
    126e:	bl	7110 <usb_serial_write>
    1272:	ldr	r0, [pc, #68]	; (12b8 <loop+0x340>)
    1274:	bl	8cbc <Print::println()>
    1278:	ldr	r3, [pc, #228]	; (1360 <loop+0x3e8>)
                        spBuffer[spIndex] = c;

                        spIndex++;
                    } else {
                        Serial.println("OVERFLOW");
                        spIndex = 0;
    127a:	movs	r2, #0
    127c:	add.w	r1, r3, #96	; 0x60
    1280:	str	r2, [r4, #0]

                        for (int i = 0; i < SERIAL_PORT_BUFFER_SIZE; i++) {
                        spBuffer[i] = '\0';
    1282:	strb.w	r2, [r3, #1]!
                        spIndex++;
                    } else {
                        Serial.println("OVERFLOW");
                        spIndex = 0;

                        for (int i = 0; i < SERIAL_PORT_BUFFER_SIZE; i++) {
    1286:	cmp	r1, r3
    1288:	bne.n	1282 <loop+0x30a>
    128a:	b.n	f84 <loop+0xc>

typedef void (* vUpdateFilter)(float args);

bool changed(float input, float &other)
{
  if (fabsf(input - other) <= __FLT_EPSILON__) return false;
    128c:	ldr	r3, [pc, #212]	; (1364 <loop+0x3ec>)
    128e:	vldr	s15, [r3]
    1292:	vsub.f32	s15, s21, s15
    1296:	vabs.f32	s15, s15
    129a:	vcmpe.f32	s15, s14
    129e:	vmrs	APSR_nzcv, fpscr
    12a2:	bls.w	1168 <loop+0x1f0>

  other = input;
    12a6:	vstr	s21, [r3]
    12aa:	b.n	1142 <loop+0x1ca>
    12ac:	.word	0x20008bf8
    12b0:	.word	0x20008bf4
    12b4:	.word	0x000103bc
    12b8:	.word	0x20008048
    12bc:	.word	0x000103c0
    12c0:	.word	0x000103c4
    12c4:	.word	0x00010420
    12c8:	.word	0x2000fe70
    12cc:	.word	0x34000000
    12d0:	.word	0xe000e188
    12d4:	.word	0x0000046d
    12d8:	.word	0x2000ff28
    12dc:	.word	0x2000feb8
    12e0:	.word	0x2001183c
    12e4:	.word	0x00000000
    12e8:	.word	0x20007eb2
    12ec:	.word	0x200125d8
    12f0:	.word	0x000004cd
    12f4:	.word	0x2000ff3c
    12f8:	.word	0x20010030
    12fc:	.word	0x2000ffd4
    1300:	.word	0x20007db4
    1304:	.word	0x200125a8
    1308:	.word	0x00000561
    130c:	.word	0x2000ff50
    1310:	.word	0x20010044
    1314:	.word	0x20012534
    1318:	.word	0x20007e68
    131c:	.word	0x2000fe74
    1320:	.word	0x000005c1
    1324:	.word	0x200117c8
    1328:	.word	0x2000ff8c
    132c:	.word	0x20010058
    1330:	.word	0x20007eb1
    1334:	.word	0x2000ffd0
    1338:	.word	0x000006a1
    133c:	.word	0x200117dc
    1340:	.word	0x20007e69
    1344:	.word	0x2001256c
    1348:	.word	0x20010090
    134c:	.word	0x20007eb0
    1350:	.word	0x46fffe00
    1354:	.word	0xc6fffe00
    1358:	.word	0x80010000
    135c:	.word	0x000103b0
    1360:	.word	0x20008bf7
    1364:	.word	0x20011ff0
public:
	AudioAmplifier(void) : AudioStream(1, inputQueueArray), multiplier(65536) {
	}
	virtual void update(void);
	void gain(float n) {
		if (n > 32767.0f) n = 32767.0f;
    1368:	ldr	r0, [pc, #156]	; (1408 <loop+0x490>)
  if (changed(overallVal, overallValLast))
    updateFilter(overallEnabled, overallVal, 0, &masterMixer, nullptr, nullptr, nullptr);

  masterAmplifier.gain(volume);

  AudioInterrupts();
    136a:	ldr	r4, [pc, #160]	; (140c <loop+0x494>)
	// do not remove this "redundant" code without
	// carefully verifying the case mentioned here:
	//
	// https://forum.pjrc.com/threads/17469-millis%28%29-on-teensy-3?p=104924&viewfull=1#post104924
	//
	volatile uint32_t ret = systick_millis_count; // single aligned 32 bit is atomic
    136c:	ldr	r1, [pc, #160]	; (1410 <loop+0x498>)

  if(millis() > next)
    136e:	ldr	r2, [pc, #164]	; (1414 <loop+0x49c>)
		else if (n < -32767.0f) n = -32767.0f;
		multiplier = n * 65536.0f;
    1370:	ldr	r6, [pc, #164]	; (1418 <loop+0x4a0>)
  if (changed(overallVal, overallValLast))
    updateFilter(overallEnabled, overallVal, 0, &masterMixer, nullptr, nullptr, nullptr);

  masterAmplifier.gain(volume);

  AudioInterrupts();
    1372:	movs	r3, #1
    1374:	str	r3, [r4, #0]
    1376:	ldr	r4, [r1, #0]
    1378:	str	r4, [sp, #40]	; 0x28
	return ret;
    137a:	ldr	r4, [sp, #40]	; 0x28

  if(millis() > next)
    137c:	ldr	r5, [r2, #0]
    137e:	str	r0, [r6, #24]
    1380:	cmp	r5, r4
    1382:	bcs.n	13b0 <loop+0x438>
	// do not remove this "redundant" code without
	// carefully verifying the case mentioned here:
	//
	// https://forum.pjrc.com/threads/17469-millis%28%29-on-teensy-3?p=104924&viewfull=1#post104924
	//
	volatile uint32_t ret = systick_millis_count; // single aligned 32 bit is atomic
    1384:	ldr	r1, [r1, #0]
    1386:	str	r1, [sp, #56]	; 0x38
  {
    next = millis() + 1000;

    if (led)
    1388:	ldr	r1, [pc, #144]	; (141c <loop+0x4a4>)
	return ret;
    138a:	ldr	r0, [sp, #56]	; 0x38
    138c:	ldrb	r4, [r1, #0]

  AudioInterrupts();

  if(millis() > next)
  {
    next = millis() + 1000;
    138e:	add.w	r0, r0, #1000	; 0x3e8
    1392:	str	r0, [r2, #0]

    if (led)
    1394:	cbnz	r4, 13be <loop+0x446>
      led = 0;
    else
      led = 1;
    1396:	strb	r3, [r1, #0]
    1398:	mov	r1, r3

    digitalWrite(13, led);
    139a:	movs	r0, #13
    139c:	bl	782c <digitalWrite>

    Serial.println(AudioMemoryUsageMax());
    13a0:	ldr	r3, [pc, #124]	; (1420 <loop+0x4a8>)
	size_t print(char c)				{ return write((uint8_t)c); }
	size_t print(const char s[])			{ return write(s); }
	size_t print(const __FlashStringHelper *f)	{ return write((const char *)f); }

	size_t print(uint8_t b)				{ return printNumber(b, 10, 0); }
	size_t print(int n)				{ return print((long)n); }
    13a2:	ldr	r0, [pc, #128]	; (1424 <loop+0x4ac>)
    13a4:	ldrh	r1, [r3, #0]
    13a6:	bl	8d88 <Print::print(long)>
	size_t println(char c)				{ return print(c) + println(); }
	size_t println(const char s[])			{ return print(s) + println(); }
	size_t println(const __FlashStringHelper *f)	{ return print(f) + println(); }

	size_t println(uint8_t b)			{ return print(b) + println(); }
	size_t println(int n)				{ return print(n) + println(); }
    13aa:	ldr	r0, [pc, #120]	; (1424 <loop+0x4ac>)
    13ac:	bl	8cbc <Print::println()>
  }

  delay(20);
    13b0:	movs	r0, #20
    13b2:	bl	78a8 <delay>
}
    13b6:	add	sp, #72	; 0x48
    13b8:	vpop	{d8-d11}
    13bc:	pop	{r4, r5, r6, pc}
  if(millis() > next)
  {
    next = millis() + 1000;

    if (led)
      led = 0;
    13be:	movs	r3, #0
    13c0:	strb	r3, [r1, #0]
    13c2:	mov	r1, r3
    13c4:	b.n	139a <loop+0x422>
    13c6:	vmov.f32	s15, s16
    13ca:	vcvt.s32.f32	s15, s15, #16
    13ce:	vmov	r0, s15
    13d2:	b.n	136a <loop+0x3f2>
                    }

                    int commandIndex = commandString.indexOf(' ');
                    String c;
                    if (commandIndex == -1) {
                        c = commandString;
    13d4:	add	r1, sp, #24
    13d6:	add	r0, sp, #40	; 0x28
    13d8:	bl	942c <String::operator=(String const&)>
    13dc:	b.n	1034 <loop+0xbc>
    13de:	ldr	r1, [pc, #72]	; (1428 <loop+0x4b0>)
    13e0:	add	r0, sp, #40	; 0x28
    13e2:	bl	944c <String::equals(char const*) const>
                    Serial.println(c);

                    // VERSION
                    if (c == "Q") {
                        Serial.println("SYNTH VERSION 1.1 BY FREDRIK LARSSON");
                    } else if (c == "HelloWorld") {
    13e6:	cbz	r0, 13f8 <loop+0x480>
    13e8:	movs	r1, #18
    13ea:	ldr	r0, [pc, #64]	; (142c <loop+0x4b4>)
    13ec:	bl	7110 <usb_serial_write>
	size_t print(double n, int digits = 2)		{ return printFloat(n, digits); }
	size_t print(const Printable &obj)		{ return obj.printTo(*this); }
	size_t println(void);
	size_t println(const String &s)			{ return print(s) + println(); }
	size_t println(char c)				{ return print(c) + println(); }
	size_t println(const char s[])			{ return print(s) + println(); }
    13f0:	ldr	r0, [pc, #48]	; (1424 <loop+0x4ac>)
    13f2:	bl	8cbc <Print::println()>
    13f6:	b.n	105e <loop+0xe6>
    13f8:	movs	r1, #17
    13fa:	ldr	r0, [pc, #52]	; (1430 <loop+0x4b8>)
    13fc:	bl	7110 <usb_serial_write>
    1400:	ldr	r0, [pc, #32]	; (1424 <loop+0x4ac>)
    1402:	bl	8cbc <Print::println()>
    1406:	b.n	105e <loop+0xe6>
    1408:	.word	0x7fff0000
    140c:	.word	0xe000e108
    1410:	.word	0x20012a14
    1414:	.word	0x2000ef04
    1418:	.word	0x2001207c
    141c:	.word	0x20012030
    1420:	.word	0x20012ba0
    1424:	.word	0x20008048
    1428:	.word	0x000103ec
    142c:	.word	0x000103f8
    1430:	.word	0x0001040c

00001434 <_GLOBAL__sub_I_usb_in>:

    Serial.println(AudioMemoryUsageMax());
  }

  delay(20);
}
    1434:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
			for (int i=0; i < num_inputs; i++) {
				inputQueue[i] = NULL;
			}
			// add to a simple list, for update_all
			// TODO: replace with a proper data flow analysis in update_all
			if (first_update == NULL) {
    1438:	ldr	r3, [pc, #720]	; (170c <_GLOBAL__sub_I_usb_in+0x2d8>)

class AudioStream
{
public:
	AudioStream(unsigned char ninput, audio_block_t **iqueue) :
		num_inputs(ninput), inputQueue(iqueue) {
    143a:	ldr.w	fp, [pc, #732]	; 1718 <_GLOBAL__sub_I_usb_in+0x2e4>
			for (int i=0; i < num_inputs; i++) {
				inputQueue[i] = NULL;
			}
			// add to a simple list, for update_all
			// TODO: replace with a proper data flow analysis in update_all
			if (first_update == NULL) {
    143e:	ldr	r1, [r3, #0]

class AudioStream
{
public:
	AudioStream(unsigned char ninput, audio_block_t **iqueue) :
		num_inputs(ninput), inputQueue(iqueue) {
    1440:	ldr	r4, [pc, #716]	; (1710 <_GLOBAL__sub_I_usb_in+0x2dc>)
    1442:	str.w	r4, [fp]
    1446:	movs	r2, #0
    1448:	sub	sp, #12
    144a:	strb.w	r2, [fp, #9]
    144e:	str.w	r2, [fp, #16]
			active = false;
    1452:	strb.w	r2, [fp, #8]
			destination_list = NULL;
    1456:	str.w	r2, [fp, #12]
			for (int i=0; i < num_inputs; i++) {
				inputQueue[i] = NULL;
			}
			// add to a simple list, for update_all
			// TODO: replace with a proper data flow analysis in update_all
			if (first_update == NULL) {
    145a:	cbnz	r1, 1462 <_GLOBAL__sub_I_usb_in+0x2e>
    145c:	b.w	2b8e <_GLOBAL__sub_I_usb_in+0x175a>
				first_update = this;
			} else {
				AudioStream *p;
				for (p=first_update; p->next_update; p = p->next_update) ;
    1460:	mov	r1, r3
    1462:	ldr	r3, [r1, #20]
    1464:	cmp	r3, #0
    1466:	bne.n	1460 <_GLOBAL__sub_I_usb_in+0x2c>
				p->next_update = this;
    1468:	str.w	fp, [r1, #20]
			}
			next_update = NULL;
    146c:	movs	r5, #0
#include "AudioStream.h"

class AudioInputUSB : public AudioStream
{
public:
	AudioInputUSB(void) : AudioStream(0, NULL) { begin(); }
    146e:	ldr	r2, [pc, #676]	; (1714 <_GLOBAL__sub_I_usb_in+0x2e0>)
    1470:	ldr	r0, [pc, #676]	; (1718 <_GLOBAL__sub_I_usb_in+0x2e4>)
    1472:	str.w	r5, [fp, #20]
			cpu_cycles = 0;
    1476:	strh.w	r5, [fp, #4]
			cpu_cycles_max = 0;
    147a:	strh.w	r5, [fp, #6]
			numConnections = 0;
    147e:	strb.w	r5, [fp, #10]
    1482:	str.w	r2, [fp]
    1486:	bl	8fb8 <AudioInputUSB::begin()>

class AudioMixer4 : public AudioStream
{
#if defined(__ARM_ARCH_7EM__)
public:
	AudioMixer4(void) : AudioStream(4, inputQueueArray) {
    148a:	ldr	r3, [pc, #656]	; (171c <_GLOBAL__sub_I_usb_in+0x2e8>)
    148c:	ldr	r7, [pc, #652]	; (171c <_GLOBAL__sub_I_usb_in+0x2e8>)
    148e:	ldr	r6, [pc, #656]	; (1720 <_GLOBAL__sub_I_usb_in+0x2ec>)

class AudioStream
{
public:
	AudioStream(unsigned char ninput, audio_block_t **iqueue) :
		num_inputs(ninput), inputQueue(iqueue) {
    1490:	ldr.w	r8, [pc, #664]	; 172c <_GLOBAL__sub_I_usb_in+0x2f8>
    1494:	add.w	r2, r3, #40	; 0x28
    1498:	mov	r0, r3
    149a:	movs	r1, #4
    149c:	bl	80c <AudioStream::AudioStream(unsigned char, audio_block_struct**)>
		for (int i=0; i<4; i++) multiplier[i] = 65536;
    14a0:	mov.w	r3, #65536	; 0x10000
// http://www.musicdsp.org/showone.php?id=13

class AudioSynthWaveformSine : public AudioStream
{
public:
	AudioSynthWaveformSine() : AudioStream(0, NULL), magnitude(16384) {}
    14a4:	mov	r2, r5
    14a6:	mov	r1, r5
    14a8:	ldr	r0, [pc, #632]	; (1724 <_GLOBAL__sub_I_usb_in+0x2f0>)
    14aa:	str	r3, [r7, #24]
    14ac:	str	r3, [r7, #28]
    14ae:	str	r3, [r7, #32]
    14b0:	str	r3, [r7, #36]	; 0x24

class AudioMixer4 : public AudioStream
{
#if defined(__ARM_ARCH_7EM__)
public:
	AudioMixer4(void) : AudioStream(4, inputQueueArray) {
    14b2:	str	r6, [r7, #0]
    14b4:	bl	80c <AudioStream::AudioStream(unsigned char, audio_block_struct**)>
    14b8:	ldr	r3, [pc, #616]	; (1724 <_GLOBAL__sub_I_usb_in+0x2f0>)
    14ba:	ldr	r2, [pc, #620]	; (1728 <_GLOBAL__sub_I_usb_in+0x2f4>)
    14bc:	ldr	r7, [pc, #612]	; (1724 <_GLOBAL__sub_I_usb_in+0x2f0>)
    14be:	str	r2, [r3, #0]
    14c0:	movs	r0, #1
    14c2:	mov.w	r3, #16384	; 0x4000
    14c6:	add.w	r1, r8, #3392	; 0xd40
			active = false;
			destination_list = NULL;
    14ca:	mov	r2, r5
    14cc:	str	r3, [r7, #32]
class AudioStream
{
public:
	AudioStream(unsigned char ninput, audio_block_t **iqueue) :
		num_inputs(ninput), inputQueue(iqueue) {
			active = false;
    14ce:	strb.w	r5, [r8, #8]
			destination_list = NULL;
			for (int i=0; i < num_inputs; i++) {
				inputQueue[i] = NULL;
    14d2:	mov	r3, r5
{
public:
	AudioStream(unsigned char ninput, audio_block_t **iqueue) :
		num_inputs(ninput), inputQueue(iqueue) {
			active = false;
			destination_list = NULL;
    14d4:	str.w	r5, [r8, #12]

class AudioStream
{
public:
	AudioStream(unsigned char ninput, audio_block_t **iqueue) :
		num_inputs(ninput), inputQueue(iqueue) {
    14d8:	str.w	r4, [r8]
    14dc:	strb.w	r0, [r8, #9]
    14e0:	str.w	r1, [r8, #16]
			active = false;
			destination_list = NULL;
			for (int i=0; i < num_inputs; i++) {
    14e4:	mov	r5, r8
    14e6:	b.n	14ea <_GLOBAL__sub_I_usb_in+0xb6>
    14e8:	ldr	r1, [r5, #16]
				inputQueue[i] = NULL;
    14ea:	str.w	r3, [r1, r2, lsl #2]
public:
	AudioStream(unsigned char ninput, audio_block_t **iqueue) :
		num_inputs(ninput), inputQueue(iqueue) {
			active = false;
			destination_list = NULL;
			for (int i=0; i < num_inputs; i++) {
    14ee:	ldrb.w	r1, [r8, #9]
    14f2:	ldr	r0, [pc, #568]	; (172c <_GLOBAL__sub_I_usb_in+0x2f8>)
    14f4:	adds	r2, #1
    14f6:	cmp	r1, r2
    14f8:	bgt.n	14e8 <_GLOBAL__sub_I_usb_in+0xb4>
				inputQueue[i] = NULL;
			}
			// add to a simple list, for update_all
			// TODO: replace with a proper data flow analysis in update_all
			if (first_update == NULL) {
    14fa:	ldr	r3, [pc, #528]	; (170c <_GLOBAL__sub_I_usb_in+0x2d8>)
    14fc:	ldr	r1, [r3, #0]
    14fe:	cbnz	r1, 1506 <_GLOBAL__sub_I_usb_in+0xd2>
    1500:	b.w	2b96 <_GLOBAL__sub_I_usb_in+0x1762>
				first_update = this;
			} else {
				AudioStream *p;
				for (p=first_update; p->next_update; p = p->next_update) ;
    1504:	mov	r1, r3
    1506:	ldr	r3, [r1, #20]
    1508:	cmp	r3, #0
    150a:	bne.n	1504 <_GLOBAL__sub_I_usb_in+0xd0>
				p->next_update = this;
    150c:	str.w	r8, [r1, #20]
			}
			next_update = NULL;
    1510:	mov.w	sl, #0
#endif

class AudioEffectDelay : public AudioStream
{
public:
	AudioEffectDelay() : AudioStream(1, inputQueueArray) {
    1514:	ldr	r5, [pc, #536]	; (1730 <_GLOBAL__sub_I_usb_in+0x2fc>)
		activemask = 0;
		headindex = 0;
		tailindex = 0;
		maxblocks = 0;
		memset(queue, 0, sizeof(queue));
    1516:	ldr	r0, [pc, #540]	; (1734 <_GLOBAL__sub_I_usb_in+0x300>)
    1518:	str.w	sl, [r8, #20]
    151c:	mov	r1, sl
    151e:	mov.w	r2, #3328	; 0xd00
			cpu_cycles = 0;
    1522:	strh.w	sl, [r8, #4]
			cpu_cycles_max = 0;
    1526:	strh.w	sl, [r8, #6]
			numConnections = 0;
    152a:	strb.w	sl, [r8, #10]
#endif

class AudioEffectDelay : public AudioStream
{
public:
	AudioEffectDelay() : AudioStream(1, inputQueueArray) {
    152e:	str.w	r5, [r8]
		activemask = 0;
    1532:	strb.w	sl, [r8, #24]
		headindex = 0;
    1536:	strh.w	sl, [r8, #26]
		tailindex = 0;
    153a:	strh.w	sl, [r8, #28]
		maxblocks = 0;
    153e:	strh.w	sl, [r8, #30]
		memset(queue, 0, sizeof(queue));
    1542:	bl	c110 <memset>

class AudioEffectBitcrusher : public AudioStream
{
public:
	AudioEffectBitcrusher(void)
	  : AudioStream(1, inputQueueArray) {}
    1546:	ldr	r3, [pc, #496]	; (1738 <_GLOBAL__sub_I_usb_in+0x304>)

class AudioStream
{
public:
	AudioStream(unsigned char ninput, audio_block_t **iqueue) :
		num_inputs(ninput), inputQueue(iqueue) {
    1548:	ldr.w	r9, [pc, #568]	; 1784 <_GLOBAL__sub_I_usb_in+0x350>
    154c:	add.w	r2, r3, #28
    1550:	mov	r0, r3
    1552:	movs	r1, #1
    1554:	bl	80c <AudioStream::AudioStream(unsigned char, audio_block_struct**)>
    1558:	ldr	r3, [pc, #476]	; (1738 <_GLOBAL__sub_I_usb_in+0x304>)
    155a:	ldr	r2, [pc, #480]	; (173c <_GLOBAL__sub_I_usb_in+0x308>)
    155c:	str	r2, [r3, #0]
    155e:	ldr	r3, [pc, #480]	; (1740 <_GLOBAL__sub_I_usb_in+0x30c>)
    1560:	movs	r1, #4
    1562:	add.w	r2, r3, #40	; 0x28
    1566:	mov	r0, r3
    1568:	bl	80c <AudioStream::AudioStream(unsigned char, audio_block_struct**)>
#include "utility/dspinst.h"

class AudioEffectMultiply : public AudioStream
{
public:
	AudioEffectMultiply() : AudioStream(2, inputQueueArray) { }
    156c:	ldr	r3, [pc, #468]	; (1744 <_GLOBAL__sub_I_usb_in+0x310>)
    156e:	add.w	r2, r3, #24
    1572:	mov	r0, r3
    1574:	ldr	r3, [pc, #456]	; (1740 <_GLOBAL__sub_I_usb_in+0x30c>)
		for (int i=0; i<4; i++) multiplier[i] = 65536;
    1576:	mov.w	r5, #65536	; 0x10000
    157a:	movs	r1, #2
    157c:	str	r5, [r3, #24]
    157e:	str	r5, [r3, #28]
    1580:	str	r5, [r3, #32]
    1582:	str	r5, [r3, #36]	; 0x24

class AudioMixer4 : public AudioStream
{
#if defined(__ARM_ARCH_7EM__)
public:
	AudioMixer4(void) : AudioStream(4, inputQueueArray) {
    1584:	str	r6, [r3, #0]
    1586:	bl	80c <AudioStream::AudioStream(unsigned char, audio_block_struct**)>
    158a:	ldr	r3, [pc, #440]	; (1744 <_GLOBAL__sub_I_usb_in+0x310>)
    158c:	ldr	r2, [pc, #440]	; (1748 <_GLOBAL__sub_I_usb_in+0x314>)
  AudioSynthWaveformSine   ringModulation; //xy=1391,411
  AudioEffectDelay         echo;           //xy=1423,720
  AudioEffectBitcrusher    bitcrush;       //xy=1593,296
  AudioMixer4              echoRepeat;     //xy=1594,566
  AudioEffectMultiply      ringModulationMultiplier; //xy=1596,404
  AudioEffectFreeverb      reverb;         //xy=1600,188
    158e:	ldr	r0, [pc, #444]	; (174c <_GLOBAL__sub_I_usb_in+0x318>)
    1590:	str	r2, [r3, #0]
    1592:	bl	3574 <AudioEffectFreeverb::AudioEffectFreeverb()>
    1596:	ldr	r3, [pc, #440]	; (1750 <_GLOBAL__sub_I_usb_in+0x31c>)
    1598:	movs	r1, #4
    159a:	add.w	r2, r3, #40	; 0x28
    159e:	mov	r0, r3
    15a0:	bl	80c <AudioStream::AudioStream(unsigned char, audio_block_struct**)>
    15a4:	ldr	r3, [pc, #428]	; (1754 <_GLOBAL__sub_I_usb_in+0x320>)
    15a6:	add.w	r2, r3, #40	; 0x28
    15aa:	mov	r0, r3
    15ac:	ldr	r3, [pc, #416]	; (1750 <_GLOBAL__sub_I_usb_in+0x31c>)
    15ae:	movs	r1, #4
		for (int i=0; i<4; i++) multiplier[i] = 65536;
    15b0:	str	r5, [r3, #24]
    15b2:	str	r5, [r3, #28]
    15b4:	str	r5, [r3, #32]
    15b6:	str	r5, [r3, #36]	; 0x24

class AudioMixer4 : public AudioStream
{
#if defined(__ARM_ARCH_7EM__)
public:
	AudioMixer4(void) : AudioStream(4, inputQueueArray) {
    15b8:	str	r6, [r3, #0]
    15ba:	bl	80c <AudioStream::AudioStream(unsigned char, audio_block_struct**)>
    15be:	ldr	r3, [pc, #408]	; (1758 <_GLOBAL__sub_I_usb_in+0x324>)
    15c0:	add.w	r2, r3, #40	; 0x28
    15c4:	mov	r0, r3
    15c6:	ldr	r3, [pc, #396]	; (1754 <_GLOBAL__sub_I_usb_in+0x320>)
    15c8:	movs	r1, #4
		for (int i=0; i<4; i++) multiplier[i] = 65536;
    15ca:	str	r5, [r3, #24]
    15cc:	str	r5, [r3, #28]
    15ce:	str	r5, [r3, #32]
    15d0:	str	r5, [r3, #36]	; 0x24

class AudioMixer4 : public AudioStream
{
#if defined(__ARM_ARCH_7EM__)
public:
	AudioMixer4(void) : AudioStream(4, inputQueueArray) {
    15d2:	str	r6, [r3, #0]
    15d4:	bl	80c <AudioStream::AudioStream(unsigned char, audio_block_struct**)>
    15d8:	ldr	r3, [pc, #384]	; (175c <_GLOBAL__sub_I_usb_in+0x328>)
    15da:	add.w	r2, r3, #40	; 0x28
    15de:	mov	r0, r3
    15e0:	ldr	r3, [pc, #372]	; (1758 <_GLOBAL__sub_I_usb_in+0x324>)
    15e2:	movs	r1, #4
		for (int i=0; i<4; i++) multiplier[i] = 65536;
    15e4:	str	r5, [r3, #24]
    15e6:	str	r5, [r3, #28]
    15e8:	str	r5, [r3, #32]
    15ea:	str	r5, [r3, #36]	; 0x24

class AudioMixer4 : public AudioStream
{
#if defined(__ARM_ARCH_7EM__)
public:
	AudioMixer4(void) : AudioStream(4, inputQueueArray) {
    15ec:	str	r6, [r3, #0]
    15ee:	bl	80c <AudioStream::AudioStream(unsigned char, audio_block_struct**)>
    15f2:	ldr	r3, [pc, #364]	; (1760 <_GLOBAL__sub_I_usb_in+0x32c>)
    15f4:	add.w	r2, r3, #40	; 0x28
    15f8:	mov	r0, r3
    15fa:	ldr	r3, [pc, #352]	; (175c <_GLOBAL__sub_I_usb_in+0x328>)
    15fc:	movs	r1, #4
		for (int i=0; i<4; i++) multiplier[i] = 65536;
    15fe:	str	r5, [r3, #24]
    1600:	str	r5, [r3, #28]
    1602:	str	r5, [r3, #32]
    1604:	str	r5, [r3, #36]	; 0x24

class AudioMixer4 : public AudioStream
{
#if defined(__ARM_ARCH_7EM__)
public:
	AudioMixer4(void) : AudioStream(4, inputQueueArray) {
    1606:	str	r6, [r3, #0]
    1608:	bl	80c <AudioStream::AudioStream(unsigned char, audio_block_struct**)>
#include "AudioStream.h"

class AudioFilterStateVariable: public AudioStream
{
public:
	AudioFilterStateVariable() : AudioStream(2, inputQueueArray) {
    160c:	ldr	r3, [pc, #340]	; (1764 <_GLOBAL__sub_I_usb_in+0x330>)
    160e:	add.w	r2, r3, #52	; 0x34
    1612:	mov	r0, r3
    1614:	ldr	r3, [pc, #328]	; (1760 <_GLOBAL__sub_I_usb_in+0x32c>)
    1616:	movs	r1, #2
		for (int i=0; i<4; i++) multiplier[i] = 65536;
    1618:	str	r5, [r3, #24]
    161a:	str	r5, [r3, #28]
    161c:	str	r5, [r3, #32]
    161e:	str	r5, [r3, #36]	; 0x24

class AudioMixer4 : public AudioStream
{
#if defined(__ARM_ARCH_7EM__)
public:
	AudioMixer4(void) : AudioStream(4, inputQueueArray) {
    1620:	str	r6, [r3, #0]
    1622:	bl	80c <AudioStream::AudioStream(unsigned char, audio_block_struct**)>
		frequency(1000);
		octaveControl(1.0); // default values
		resonance(0.707);
		state_inputprev = 0;
    1626:	ldr	r3, [pc, #316]	; (1764 <_GLOBAL__sub_I_usb_in+0x330>)
#include "AudioStream.h"

class AudioFilterStateVariable: public AudioStream
{
public:
	AudioFilterStateVariable() : AudioStream(2, inputQueueArray) {
    1628:	ldr	r0, [pc, #316]	; (1768 <_GLOBAL__sub_I_usb_in+0x334>)
	}
	void frequency(float freq) {
		if (freq < 20.0) freq = 20.0;
		else if (freq > AUDIO_SAMPLE_RATE_EXACT/2.5) freq = AUDIO_SAMPLE_RATE_EXACT/2.5;
		setting_fcenter = (freq * (3.141592654/(AUDIO_SAMPLE_RATE_EXACT*2.0)))
			* 2147483647.0;
    162a:	ldr	r1, [pc, #320]	; (176c <_GLOBAL__sub_I_usb_in+0x338>)
		// TODO: should we use an approximation when freq is not a const,
		// so the sinf() function isn't linked?
		setting_fmult = sinf(freq * (3.141592654/(AUDIO_SAMPLE_RATE_EXACT*2.0)))
			* 2147483647.0;
    162c:	ldr	r2, [pc, #320]	; (1770 <_GLOBAL__sub_I_usb_in+0x33c>)
#include "AudioStream.h"

class AudioFilterStateVariable: public AudioStream
{
public:
	AudioFilterStateVariable() : AudioStream(2, inputQueueArray) {
    162e:	str	r0, [r3, #0]
	}
	void frequency(float freq) {
		if (freq < 20.0) freq = 20.0;
		else if (freq > AUDIO_SAMPLE_RATE_EXACT/2.5) freq = AUDIO_SAMPLE_RATE_EXACT/2.5;
		setting_fcenter = (freq * (3.141592654/(AUDIO_SAMPLE_RATE_EXACT*2.0)))
			* 2147483647.0;
    1630:	str	r1, [r3, #24]
		// TODO: should we use an approximation when freq is not a const,
		// so the sinf() function isn't linked?
		setting_fmult = sinf(freq * (3.141592654/(AUDIO_SAMPLE_RATE_EXACT*2.0)))
			* 2147483647.0;
    1632:	str	r2, [r3, #28]
public:
	AudioFilterStateVariable() : AudioStream(2, inputQueueArray) {
		frequency(1000);
		octaveControl(1.0); // default values
		resonance(0.707);
		state_inputprev = 0;
    1634:	str.w	sl, [r3, #40]	; 0x28
		state_lowpass = 0;
    1638:	str.w	sl, [r3, #44]	; 0x2c
		state_bandpass = 0;
    163c:	str.w	sl, [r3, #48]	; 0x30
    1640:	ldr	r3, [pc, #304]	; (1774 <_GLOBAL__sub_I_usb_in+0x340>)
	}
	void resonance(float q) {
		if (q < 0.7) q = 0.7;
		else if (q > 5.0) q = 5.0;
		// TODO: allow lower Q when frequency is lower
		setting_damp = (1.0 / q) * 1073741824.0;
    1642:	ldr	r1, [pc, #308]	; (1778 <_GLOBAL__sub_I_usb_in+0x344>)
    1644:	add.w	r2, r3, #40	; 0x28
		// filter's corner frequency is Fcenter * 2^(control * N)
		// where "control" ranges from -1.0 to +1.0
		// and "N" allows the frequency to change from 0 to 7 octaves
		if (n < 0.0) n = 0.0;
		else if (n > 6.9999) n = 6.9999;
		setting_octavemult = n * 4096.0;
    1648:	ldr	r3, [pc, #280]	; (1764 <_GLOBAL__sub_I_usb_in+0x330>)
    164a:	mov.w	r0, #4096	; 0x1000
    164e:	str	r0, [r3, #32]
	}
	void resonance(float q) {
		if (q < 0.7) q = 0.7;
		else if (q > 5.0) q = 5.0;
		// TODO: allow lower Q when frequency is lower
		setting_damp = (1.0 / q) * 1073741824.0;
    1650:	str	r1, [r3, #36]	; 0x24
    1652:	sub.w	r0, r2, #40	; 0x28
    1656:	movs	r1, #4
    1658:	bl	80c <AudioStream::AudioStream(unsigned char, audio_block_struct**)>
};

class AudioAmplifier : public AudioStream
{
public:
	AudioAmplifier(void) : AudioStream(1, inputQueueArray), multiplier(65536) {
    165c:	ldr	r3, [pc, #284]	; (177c <_GLOBAL__sub_I_usb_in+0x348>)
    165e:	add.w	r2, r3, #28
    1662:	mov	r0, r3

class AudioMixer4 : public AudioStream
{
#if defined(__ARM_ARCH_7EM__)
public:
	AudioMixer4(void) : AudioStream(4, inputQueueArray) {
    1664:	ldr	r3, [pc, #268]	; (1774 <_GLOBAL__sub_I_usb_in+0x340>)
};

class AudioAmplifier : public AudioStream
{
public:
	AudioAmplifier(void) : AudioStream(1, inputQueueArray), multiplier(65536) {
    1666:	movs	r1, #1
class AudioMixer4 : public AudioStream
{
#if defined(__ARM_ARCH_7EM__)
public:
	AudioMixer4(void) : AudioStream(4, inputQueueArray) {
		for (int i=0; i<4; i++) multiplier[i] = 65536;
    1668:	str	r5, [r3, #24]
    166a:	str	r5, [r3, #28]
    166c:	str	r5, [r3, #32]
    166e:	str	r5, [r3, #36]	; 0x24

class AudioMixer4 : public AudioStream
{
#if defined(__ARM_ARCH_7EM__)
public:
	AudioMixer4(void) : AudioStream(4, inputQueueArray) {
    1670:	str	r6, [r3, #0]
};

class AudioAmplifier : public AudioStream
{
public:
	AudioAmplifier(void) : AudioStream(1, inputQueueArray), multiplier(65536) {
    1672:	bl	80c <AudioStream::AudioStream(unsigned char, audio_block_struct**)>
    1676:	ldr	r2, [pc, #260]	; (177c <_GLOBAL__sub_I_usb_in+0x348>)
    1678:	ldr	r3, [pc, #260]	; (1780 <_GLOBAL__sub_I_usb_in+0x34c>)
    167a:	str	r5, [r2, #24]
    167c:	ldr	r5, [pc, #252]	; (177c <_GLOBAL__sub_I_usb_in+0x348>)
    167e:	str.w	r4, [r9]
    1682:	movs	r0, #2
    1684:	add.w	r1, r9, #24
    1688:	str	r3, [r5, #0]
			active = false;
			destination_list = NULL;
    168a:	mov	r2, sl
			for (int i=0; i < num_inputs; i++) {
				inputQueue[i] = NULL;
    168c:	mov	r5, sl
class AudioStream
{
public:
	AudioStream(unsigned char ninput, audio_block_t **iqueue) :
		num_inputs(ninput), inputQueue(iqueue) {
			active = false;
    168e:	strb.w	sl, [r9, #8]
			destination_list = NULL;
    1692:	str.w	sl, [r9, #12]

class AudioStream
{
public:
	AudioStream(unsigned char ninput, audio_block_t **iqueue) :
		num_inputs(ninput), inputQueue(iqueue) {
    1696:	strb.w	r0, [r9, #9]
    169a:	str.w	r1, [r9, #16]
			active = false;
			destination_list = NULL;
			for (int i=0; i < num_inputs; i++) {
    169e:	mov	lr, r9
    16a0:	b.n	16a6 <_GLOBAL__sub_I_usb_in+0x272>
    16a2:	ldr.w	r1, [lr, #16]
				inputQueue[i] = NULL;
    16a6:	str.w	r5, [r1, r2, lsl #2]
public:
	AudioStream(unsigned char ninput, audio_block_t **iqueue) :
		num_inputs(ninput), inputQueue(iqueue) {
			active = false;
			destination_list = NULL;
			for (int i=0; i < num_inputs; i++) {
    16aa:	ldrb.w	r3, [r9, #9]
    16ae:	ldr	r0, [pc, #212]	; (1784 <_GLOBAL__sub_I_usb_in+0x350>)
    16b0:	adds	r2, #1
    16b2:	cmp	r3, r2
    16b4:	bgt.n	16a2 <_GLOBAL__sub_I_usb_in+0x26e>
				inputQueue[i] = NULL;
			}
			// add to a simple list, for update_all
			// TODO: replace with a proper data flow analysis in update_all
			if (first_update == NULL) {
    16b6:	ldr	r3, [pc, #84]	; (170c <_GLOBAL__sub_I_usb_in+0x2d8>)
    16b8:	ldr	r1, [r3, #0]
    16ba:	cbnz	r1, 16c2 <_GLOBAL__sub_I_usb_in+0x28e>
    16bc:	b.w	2b9c <_GLOBAL__sub_I_usb_in+0x1768>
				first_update = this;
			} else {
				AudioStream *p;
				for (p=first_update; p->next_update; p = p->next_update) ;
    16c0:	mov	r1, r3
    16c2:	ldr	r3, [r1, #20]
    16c4:	cmp	r3, #0
    16c6:	bne.n	16c0 <_GLOBAL__sub_I_usb_in+0x28c>
				p->next_update = this;
    16c8:	str.w	r9, [r1, #20]
			}
			next_update = NULL;
    16cc:	movs	r5, #0

class AudioStream
{
public:
	AudioStream(unsigned char ninput, audio_block_t **iqueue) :
		num_inputs(ninput), inputQueue(iqueue) {
    16ce:	ldr	r3, [pc, #184]	; (1788 <_GLOBAL__sub_I_usb_in+0x354>)
};

class AudioOutputUSB : public AudioStream
{
public:
	AudioOutputUSB(void) : AudioStream(2, inputQueueArray) { begin(); }
    16d0:	ldr	r2, [pc, #184]	; (178c <_GLOBAL__sub_I_usb_in+0x358>)
    16d2:	ldr	r0, [pc, #176]	; (1784 <_GLOBAL__sub_I_usb_in+0x350>)
			} else {
				AudioStream *p;
				for (p=first_update; p->next_update; p = p->next_update) ;
				p->next_update = this;
			}
			next_update = NULL;
    16d4:	str.w	r5, [r9, #20]
			cpu_cycles = 0;
    16d8:	strh.w	r5, [r9, #4]
			cpu_cycles_max = 0;
    16dc:	strh.w	r5, [r9, #6]
			numConnections = 0;
    16e0:	strb.w	r5, [r9, #10]

class AudioStream
{
public:
	AudioStream(unsigned char ninput, audio_block_t **iqueue) :
		num_inputs(ninput), inputQueue(iqueue) {
    16e4:	str	r3, [sp, #0]
    16e6:	str.w	r2, [r9]
    16ea:	bl	9170 <AudioOutputUSB::begin()>
    16ee:	ldr	r3, [sp, #0]
    16f0:	mov.w	lr, #2
    16f4:	add.w	r1, r3, #24
    16f8:	strb.w	lr, [r3, #9]
			active = false;
			destination_list = NULL;
    16fc:	mov	r2, r5
			for (int i=0; i < num_inputs; i++) {
				inputQueue[i] = NULL;
    16fe:	mov	r0, r5

class AudioStream
{
public:
	AudioStream(unsigned char ninput, audio_block_t **iqueue) :
		num_inputs(ninput), inputQueue(iqueue) {
    1700:	str	r4, [r3, #0]
			active = false;
    1702:	strb	r5, [r3, #8]
			destination_list = NULL;
    1704:	str	r5, [r3, #12]

class AudioStream
{
public:
	AudioStream(unsigned char ninput, audio_block_t **iqueue) :
		num_inputs(ninput), inputQueue(iqueue) {
    1706:	str	r1, [r3, #16]
			active = false;
			destination_list = NULL;
			for (int i=0; i < num_inputs; i++) {
    1708:	mov	lr, r3
    170a:	b.n	1794 <_GLOBAL__sub_I_usb_in+0x360>
    170c:	.word	0x20012b9c
    1710:	.word	0x00010324
    1714:	.word	0x0009e15c
    1718:	.word	0x2000fe78
    171c:	.word	0x20012570
    1720:	.word	0x0009db1c
    1724:	.word	0x2001000c
    1728:	.word	0x0009db40
    172c:	.word	0x2000f12c
    1730:	.word	0x0009db64
    1734:	.word	0x2000f16c
    1738:	.word	0x2000ff08
    173c:	.word	0x0009db04
    1740:	.word	0x200118b0
    1744:	.word	0x20011804
    1748:	.word	0x0009db28
    174c:	.word	0x20008c64
    1750:	.word	0x2001183c
    1754:	.word	0x2000ffd4
    1758:	.word	0x20012534
    175c:	.word	0x20010058
    1760:	.word	0x20010090
    1764:	.word	0x20011ff4
    1768:	.word	0x0009db34
    176c:	.word	0x048eb200
    1770:	.word	0x048e72e8
    1774:	.word	0x200118e8
    1778:	.word	0x5a85f980
    177c:	.word	0x2001207c
    1780:	.word	0x0009db10
    1784:	.word	0x2000ef08
    1788:	.word	0x2001205c
    178c:	.word	0x0009e168
    1790:	ldr.w	r1, [lr, #16]
				inputQueue[i] = NULL;
    1794:	str.w	r0, [r1, r2, lsl #2]
public:
	AudioStream(unsigned char ninput, audio_block_t **iqueue) :
		num_inputs(ninput), inputQueue(iqueue) {
			active = false;
			destination_list = NULL;
			for (int i=0; i < num_inputs; i++) {
    1798:	ldrb	r1, [r3, #9]
    179a:	ldr	r5, [pc, #16]	; (17ac <_GLOBAL__sub_I_usb_in+0x378>)
    179c:	adds	r2, #1
    179e:	cmp	r1, r2
    17a0:	bgt.n	1790 <_GLOBAL__sub_I_usb_in+0x35c>
				inputQueue[i] = NULL;
			}
			// add to a simple list, for update_all
			// TODO: replace with a proper data flow analysis in update_all
			if (first_update == NULL) {
    17a2:	ldr	r2, [pc, #12]	; (17b0 <_GLOBAL__sub_I_usb_in+0x37c>)
    17a4:	ldr	r1, [r2, #0]
    17a6:	cbnz	r1, 17b6 <_GLOBAL__sub_I_usb_in+0x382>
    17a8:	b.w	2ba2 <_GLOBAL__sub_I_usb_in+0x176e>
    17ac:	.word	0x2001205c
    17b0:	.word	0x20012b9c
				first_update = this;
			} else {
				AudioStream *p;
				for (p=first_update; p->next_update; p = p->next_update) ;
    17b4:	mov	r1, r2
    17b6:	ldr	r2, [r1, #20]
    17b8:	cmp	r2, #0
    17ba:	bne.n	17b4 <_GLOBAL__sub_I_usb_in+0x380>
				p->next_update = this;
    17bc:	str	r3, [r1, #20]
			}
			next_update = NULL;
    17be:	movs	r5, #0
#include "DMAChannel.h"

class AudioOutputI2S : public AudioStream
{
public:
	AudioOutputI2S(void) : AudioStream(2, inputQueueArray) { begin(); }
    17c0:	ldr	r1, [pc, #808]	; (1aec <_GLOBAL__sub_I_usb_in+0x6b8>)
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    17c2:	ldr	r2, [pc, #812]	; (1af0 <_GLOBAL__sub_I_usb_in+0x6bc>)
    17c4:	ldr	r0, [pc, #812]	; (1af4 <_GLOBAL__sub_I_usb_in+0x6c0>)
			} else {
				AudioStream *p;
				for (p=first_update; p->next_update; p = p->next_update) ;
				p->next_update = this;
			}
			next_update = NULL;
    17c6:	str	r5, [r3, #20]
			cpu_cycles = 0;
    17c8:	strh	r5, [r3, #4]
			cpu_cycles_max = 0;
    17ca:	strh	r5, [r3, #6]
			numConnections = 0;
    17cc:	strb	r5, [r3, #10]
    17ce:	str	r1, [r3, #0]
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    17d0:	str	r2, [sp, #0]
				p->next_update = this;
			}
			next_update = NULL;
			cpu_cycles = 0;
			cpu_cycles_max = 0;
			numConnections = 0;
    17d2:	str	r3, [sp, #4]
    17d4:	bl	4d38 <AudioOutputI2S::begin()>
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
		{ isConnected = false;
		  connect(); }
    17d8:	ldr	r2, [sp, #0]
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    17da:	ldr	r3, [pc, #796]	; (1af8 <_GLOBAL__sub_I_usb_in+0x6c4>)
    17dc:	str	r3, [r2, #4]
		{ isConnected = false;
		  connect(); }
    17de:	mov	r0, r2
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    17e0:	str.w	fp, [r2]
    17e4:	strb	r5, [r2, #8]
    17e6:	strb	r5, [r2, #9]
    17e8:	str	r5, [r2, #12]
		{ isConnected = false;
    17ea:	strb	r5, [r2, #16]
		  connect(); }
    17ec:	bl	9748 <AudioConnection::connect()>
  AudioFilterStateVariable cutoffFilter;   //xy=1897,874
  AudioMixer4              cutoffMixer;    //xy=2110,867
  AudioAmplifier           masterAmplifier; //xy=2114,154
  AudioOutputUSB           usb_out;        //xy=2293,203
  AudioOutputI2S           i2s;            //xy=2294,100
  AudioConnection          patchCord1(usb_in, 0, slaveMixer, 0);
    17f0:	ldr	r2, [sp, #0]
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    17f2:	ldr.w	sl, [pc, #852]	; 1b48 <_GLOBAL__sub_I_usb_in+0x714>
    17f6:	ldr	r1, [pc, #772]	; (1afc <_GLOBAL__sub_I_usb_in+0x6c8>)
    17f8:	ldr	r7, [pc, #772]	; (1b00 <_GLOBAL__sub_I_usb_in+0x6cc>)
    17fa:	mov	r0, r2
    17fc:	ldr	r2, [pc, #772]	; (1b04 <_GLOBAL__sub_I_usb_in+0x6d0>)
    17fe:	bl	b944 <__aeabi_atexit>
    1802:	ldr	r3, [pc, #756]	; (1af8 <_GLOBAL__sub_I_usb_in+0x6c4>)
    1804:	str.w	r3, [sl, #4]
		{ isConnected = false;
		  connect(); }
    1808:	mov	r0, sl
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    180a:	mov.w	r3, #1
    180e:	strb.w	r3, [sl, #8]
    1812:	strb.w	r3, [sl, #9]
    1816:	str.w	fp, [sl]
    181a:	str.w	r5, [sl, #12]
		{ isConnected = false;
    181e:	strb.w	r5, [sl, #16]
		  connect(); }
    1822:	bl	9748 <AudioConnection::connect()>
  AudioConnection          patchCord2(usb_in, 1, slaveMixer, 1);
    1826:	ldr	r2, [pc, #732]	; (1b04 <_GLOBAL__sub_I_usb_in+0x6d0>)
    1828:	ldr	r1, [pc, #720]	; (1afc <_GLOBAL__sub_I_usb_in+0x6c8>)
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    182a:	ldr.w	fp, [pc, #800]	; 1b4c <_GLOBAL__sub_I_usb_in+0x718>
    182e:	mov	r0, sl
    1830:	bl	b944 <__aeabi_atexit>
    1834:	ldr	r3, [pc, #704]	; (1af8 <_GLOBAL__sub_I_usb_in+0x6c4>)
    1836:	str	r3, [r7, #0]
		{ isConnected = false;
		  connect(); }
    1838:	mov	r0, r7
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    183a:	ldr	r3, [pc, #716]	; (1b08 <_GLOBAL__sub_I_usb_in+0x6d4>)
    183c:	ldr.w	sl, [pc, #784]	; 1b50 <_GLOBAL__sub_I_usb_in+0x71c>
    1840:	str	r3, [r7, #4]
    1842:	strb	r5, [r7, #8]
    1844:	strb	r5, [r7, #9]
    1846:	str	r5, [r7, #12]
		{ isConnected = false;
    1848:	strb	r5, [r7, #16]
		  connect(); }
    184a:	bl	9748 <AudioConnection::connect()>
  AudioConnection          patchCord3(slaveMixer, 0, reverb, 0);
    184e:	ldr	r2, [pc, #692]	; (1b04 <_GLOBAL__sub_I_usb_in+0x6d0>)
    1850:	ldr	r1, [pc, #680]	; (1afc <_GLOBAL__sub_I_usb_in+0x6c8>)
    1852:	mov	r0, r7
    1854:	bl	b944 <__aeabi_atexit>
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    1858:	ldr	r3, [pc, #668]	; (1af8 <_GLOBAL__sub_I_usb_in+0x6c4>)
    185a:	str.w	r3, [sl]
    185e:	ldr	r3, [pc, #684]	; (1b0c <_GLOBAL__sub_I_usb_in+0x6d8>)
    1860:	str.w	r3, [sl, #4]
		{ isConnected = false;
		  connect(); }
    1864:	mov	r0, sl
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    1866:	mov.w	r3, #1
    186a:	strb.w	r3, [sl, #9]
    186e:	strb.w	r5, [sl, #8]
    1872:	str.w	r5, [sl, #12]
		{ isConnected = false;
    1876:	strb.w	r5, [sl, #16]
		  connect(); }
    187a:	bl	9748 <AudioConnection::connect()>
  AudioConnection          patchCord4(slaveMixer, 0, reverbMixer, 1);
    187e:	ldr	r2, [pc, #644]	; (1b04 <_GLOBAL__sub_I_usb_in+0x6d0>)
    1880:	ldr	r1, [pc, #632]	; (1afc <_GLOBAL__sub_I_usb_in+0x6c8>)
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    1882:	ldr	r7, [pc, #652]	; (1b10 <_GLOBAL__sub_I_usb_in+0x6dc>)
    1884:	mov	r0, sl
    1886:	bl	b944 <__aeabi_atexit>
    188a:	ldr	r3, [pc, #620]	; (1af8 <_GLOBAL__sub_I_usb_in+0x6c4>)
    188c:	str.w	r3, [fp]
    1890:	ldr	r3, [pc, #640]	; (1b14 <_GLOBAL__sub_I_usb_in+0x6e0>)
    1892:	str.w	r3, [fp, #4]
		{ isConnected = false;
		  connect(); }
    1896:	mov	r0, fp
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    1898:	mov.w	r3, #1
    189c:	ldr.w	sl, [pc, #692]	; 1b54 <_GLOBAL__sub_I_usb_in+0x720>
    18a0:	strb.w	r3, [fp, #9]
    18a4:	strb.w	r5, [fp, #8]
    18a8:	str.w	r5, [fp, #12]
		{ isConnected = false;
    18ac:	strb.w	r5, [fp, #16]
		  connect(); }
    18b0:	bl	9748 <AudioConnection::connect()>
  AudioConnection          patchCord5(slaveMixer, 0, masterMixer, 1);
    18b4:	ldr	r2, [pc, #588]	; (1b04 <_GLOBAL__sub_I_usb_in+0x6d0>)
    18b6:	ldr	r1, [pc, #580]	; (1afc <_GLOBAL__sub_I_usb_in+0x6c8>)
    18b8:	mov	r0, fp
    18ba:	bl	b944 <__aeabi_atexit>
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    18be:	ldr	r3, [pc, #600]	; (1b18 <_GLOBAL__sub_I_usb_in+0x6e4>)
    18c0:	str.w	r3, [sl]
    18c4:	ldr	r3, [pc, #596]	; (1b1c <_GLOBAL__sub_I_usb_in+0x6e8>)
    18c6:	str.w	r3, [sl, #4]
		{ isConnected = false;
		  connect(); }
    18ca:	mov	r0, sl
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    18cc:	mov.w	r3, #1
    18d0:	ldr.w	fp, [pc, #644]	; 1b58 <_GLOBAL__sub_I_usb_in+0x724>
    18d4:	strb.w	r3, [sl, #9]
    18d8:	strb.w	r5, [sl, #8]
    18dc:	str.w	r5, [sl, #12]
		{ isConnected = false;
    18e0:	strb.w	r5, [sl, #16]
		  connect(); }
    18e4:	bl	9748 <AudioConnection::connect()>
  AudioConnection          patchCord6(ringModulation, 0, ringModulationMultiplier, 1);
    18e8:	ldr	r2, [pc, #536]	; (1b04 <_GLOBAL__sub_I_usb_in+0x6d0>)
    18ea:	ldr	r1, [pc, #528]	; (1afc <_GLOBAL__sub_I_usb_in+0x6c8>)
    18ec:	mov	r0, sl
    18ee:	bl	b944 <__aeabi_atexit>
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    18f2:	ldr	r3, [pc, #556]	; (1b20 <_GLOBAL__sub_I_usb_in+0x6ec>)
    18f4:	str.w	r3, [fp]
		{ isConnected = false;
		  connect(); }
    18f8:	mov	r0, fp
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    18fa:	ldr	r3, [pc, #552]	; (1b24 <_GLOBAL__sub_I_usb_in+0x6f0>)
    18fc:	ldr.w	sl, [pc, #604]	; 1b5c <_GLOBAL__sub_I_usb_in+0x728>
    1900:	str.w	r3, [fp, #4]
    1904:	strb.w	r5, [fp, #8]
    1908:	strb.w	r5, [fp, #9]
    190c:	str.w	r5, [fp, #12]
		{ isConnected = false;
    1910:	strb.w	r5, [fp, #16]
		  connect(); }
    1914:	bl	9748 <AudioConnection::connect()>
  AudioConnection          patchCord8(bitcrush, 0, bitcrushMixer, 0);
    1918:	ldr	r2, [pc, #488]	; (1b04 <_GLOBAL__sub_I_usb_in+0x6d0>)
    191a:	ldr	r1, [pc, #480]	; (1afc <_GLOBAL__sub_I_usb_in+0x6c8>)
    191c:	mov	r0, fp
    191e:	bl	b944 <__aeabi_atexit>
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    1922:	ldr	r3, [pc, #504]	; (1b1c <_GLOBAL__sub_I_usb_in+0x6e8>)
    1924:	str.w	r3, [sl]
		{ isConnected = false;
		  connect(); }
    1928:	mov	r0, sl
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    192a:	ldr	r3, [pc, #508]	; (1b28 <_GLOBAL__sub_I_usb_in+0x6f4>)
    192c:	ldr.w	fp, [pc, #560]	; 1b60 <_GLOBAL__sub_I_usb_in+0x72c>
    1930:	str.w	r3, [sl, #4]
    1934:	strb.w	r5, [sl, #8]
    1938:	strb.w	r5, [sl, #9]
    193c:	str.w	r5, [sl, #12]
		{ isConnected = false;
    1940:	strb.w	r5, [sl, #16]
		  connect(); }
    1944:	bl	9748 <AudioConnection::connect()>
  AudioConnection          patchCord9(ringModulationMultiplier, 0, ringModulationMixer, 0);
    1948:	ldr	r2, [pc, #440]	; (1b04 <_GLOBAL__sub_I_usb_in+0x6d0>)
    194a:	ldr	r1, [pc, #432]	; (1afc <_GLOBAL__sub_I_usb_in+0x6c8>)
    194c:	mov	r0, sl
    194e:	bl	b944 <__aeabi_atexit>
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    1952:	ldr	r3, [pc, #436]	; (1b08 <_GLOBAL__sub_I_usb_in+0x6d4>)
    1954:	str.w	r3, [fp]
		{ isConnected = false;
		  connect(); }
    1958:	mov	r0, fp
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    195a:	ldr	r3, [pc, #432]	; (1b0c <_GLOBAL__sub_I_usb_in+0x6d8>)
class AudioConnection
{
public:
	AudioConnection(AudioStream &source, AudioStream &destination) :
		src(source), dst(destination), src_index(0), dest_index(0),
		next_dest(NULL)
    195c:	ldr.w	sl, [pc, #516]	; 1b64 <_GLOBAL__sub_I_usb_in+0x730>
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    1960:	str.w	r3, [fp, #4]
    1964:	strb.w	r5, [fp, #8]
    1968:	strb.w	r5, [fp, #9]
    196c:	str.w	r5, [fp, #12]
		{ isConnected = false;
    1970:	strb.w	r5, [fp, #16]
		  connect(); }
    1974:	bl	9748 <AudioConnection::connect()>
  AudioConnection          patchCord10(reverb, 0, reverbMixer, 0);
    1978:	ldr	r2, [pc, #392]	; (1b04 <_GLOBAL__sub_I_usb_in+0x6d0>)
    197a:	ldr	r1, [pc, #384]	; (1afc <_GLOBAL__sub_I_usb_in+0x6c8>)
    197c:	mov	r0, fp
    197e:	bl	b944 <__aeabi_atexit>
class AudioConnection
{
public:
	AudioConnection(AudioStream &source, AudioStream &destination) :
		src(source), dst(destination), src_index(0), dest_index(0),
		next_dest(NULL)
    1982:	ldr	r3, [pc, #392]	; (1b0c <_GLOBAL__sub_I_usb_in+0x6d8>)
    1984:	str.w	r3, [sl]
		{ isConnected = false;
		  connect(); }
    1988:	mov	r0, sl
class AudioConnection
{
public:
	AudioConnection(AudioStream &source, AudioStream &destination) :
		src(source), dst(destination), src_index(0), dest_index(0),
		next_dest(NULL)
    198a:	ldr	r3, [pc, #404]	; (1b20 <_GLOBAL__sub_I_usb_in+0x6ec>)
    198c:	str.w	r3, [sl, #4]
    1990:	strb.w	r5, [sl, #8]
    1994:	strb.w	r5, [sl, #9]
    1998:	str.w	r5, [sl, #12]
		{ isConnected = false;
    199c:	strb.w	r5, [sl, #16]
		  connect(); }
    19a0:	bl	9748 <AudioConnection::connect()>
  AudioConnection          patchCord11(reverbMixer, bitcrush);
    19a4:	ldr	r2, [pc, #348]	; (1b04 <_GLOBAL__sub_I_usb_in+0x6d0>)
    19a6:	ldr	r1, [pc, #340]	; (1afc <_GLOBAL__sub_I_usb_in+0x6c8>)
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    19a8:	ldr.w	fp, [pc, #444]	; 1b68 <_GLOBAL__sub_I_usb_in+0x734>
    19ac:	mov	r0, sl
    19ae:	bl	b944 <__aeabi_atexit>
    19b2:	ldr	r3, [pc, #344]	; (1b0c <_GLOBAL__sub_I_usb_in+0x6d8>)
    19b4:	str	r3, [r7, #0]
    19b6:	ldr	r3, [pc, #364]	; (1b24 <_GLOBAL__sub_I_usb_in+0x6f0>)
    19b8:	str	r3, [r7, #4]
		{ isConnected = false;
		  connect(); }
    19ba:	mov	r0, r7
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    19bc:	mov.w	r3, #1
    19c0:	strb	r3, [r7, #9]
    19c2:	strb	r5, [r7, #8]
    19c4:	str	r5, [r7, #12]
		{ isConnected = false;
    19c6:	strb	r5, [r7, #16]
		  connect(); }
    19c8:	bl	9748 <AudioConnection::connect()>
  AudioConnection          patchCord12(reverbMixer, 0, bitcrushMixer, 1);
    19cc:	ldr	r2, [pc, #308]	; (1b04 <_GLOBAL__sub_I_usb_in+0x6d0>)
    19ce:	ldr	r1, [pc, #300]	; (1afc <_GLOBAL__sub_I_usb_in+0x6c8>)
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    19d0:	ldr.w	sl, [pc, #408]	; 1b6c <_GLOBAL__sub_I_usb_in+0x738>
    19d4:	mov	r0, r7
    19d6:	bl	b944 <__aeabi_atexit>
    19da:	ldr	r3, [pc, #328]	; (1b24 <_GLOBAL__sub_I_usb_in+0x6f0>)
    19dc:	str.w	r3, [fp]
		{ isConnected = false;
		  connect(); }
    19e0:	mov	r0, fp
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    19e2:	ldr	r3, [pc, #312]	; (1b1c <_GLOBAL__sub_I_usb_in+0x6e8>)
    19e4:	str.w	r3, [fp, #4]
    19e8:	strb.w	r5, [fp, #8]
    19ec:	strb.w	r5, [fp, #9]
    19f0:	str.w	r5, [fp, #12]
		{ isConnected = false;
    19f4:	strb.w	r5, [fp, #16]
		  connect(); }
    19f8:	bl	9748 <AudioConnection::connect()>
  AudioConnection          patchCord13(bitcrushMixer, 0, ringModulationMultiplier, 0);
    19fc:	ldr	r2, [pc, #260]	; (1b04 <_GLOBAL__sub_I_usb_in+0x6d0>)
    19fe:	ldr	r1, [pc, #252]	; (1afc <_GLOBAL__sub_I_usb_in+0x6c8>)
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    1a00:	ldr	r7, [pc, #296]	; (1b2c <_GLOBAL__sub_I_usb_in+0x6f8>)
    1a02:	mov	r0, fp
    1a04:	bl	b944 <__aeabi_atexit>
    1a08:	ldr	r3, [pc, #280]	; (1b24 <_GLOBAL__sub_I_usb_in+0x6f0>)
    1a0a:	str.w	r3, [sl]
    1a0e:	ldr	r3, [pc, #280]	; (1b28 <_GLOBAL__sub_I_usb_in+0x6f4>)
    1a10:	str.w	r3, [sl, #4]
		{ isConnected = false;
		  connect(); }
    1a14:	mov	r0, sl
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    1a16:	mov.w	r3, #1
    1a1a:	strb.w	r3, [sl, #9]
    1a1e:	strb.w	r5, [sl, #8]
    1a22:	str.w	r5, [sl, #12]
		{ isConnected = false;
    1a26:	strb.w	r5, [sl, #16]
		  connect(); }
    1a2a:	bl	9748 <AudioConnection::connect()>
  AudioConnection          patchCord14(bitcrushMixer, 0, ringModulationMixer, 1);
    1a2e:	ldr	r1, [pc, #204]	; (1afc <_GLOBAL__sub_I_usb_in+0x6c8>)
    1a30:	ldr	r2, [pc, #208]	; (1b04 <_GLOBAL__sub_I_usb_in+0x6d0>)
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    1a32:	ldr.w	fp, [pc, #316]	; 1b70 <_GLOBAL__sub_I_usb_in+0x73c>
    1a36:	mov	r0, sl
    1a38:	bl	b944 <__aeabi_atexit>
		{ isConnected = false;
		  connect(); }
    1a3c:	ldr	r0, [pc, #240]	; (1b30 <_GLOBAL__sub_I_usb_in+0x6fc>)
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    1a3e:	ldr	r2, [pc, #244]	; (1b34 <_GLOBAL__sub_I_usb_in+0x700>)
    1a40:	strb	r5, [r0, #8]
    1a42:	stmia.w	r0, {r2, r8}
    1a46:	strb	r5, [r0, #9]
    1a48:	str	r5, [r0, #12]
		{ isConnected = false;
    1a4a:	strb	r5, [r0, #16]
		  connect(); }
    1a4c:	bl	9748 <AudioConnection::connect()>
  AudioConnection          patchCord16(echoRepeat, 0, echo, 0);
    1a50:	ldr	r2, [pc, #176]	; (1b04 <_GLOBAL__sub_I_usb_in+0x6d0>)
    1a52:	ldr	r1, [pc, #168]	; (1afc <_GLOBAL__sub_I_usb_in+0x6c8>)
    1a54:	ldr	r0, [pc, #216]	; (1b30 <_GLOBAL__sub_I_usb_in+0x6fc>)
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    1a56:	ldr.w	sl, [pc, #284]	; 1b74 <_GLOBAL__sub_I_usb_in+0x740>
    1a5a:	bl	b944 <__aeabi_atexit>
    1a5e:	ldr	r3, [pc, #200]	; (1b28 <_GLOBAL__sub_I_usb_in+0x6f4>)
    1a60:	str	r3, [r7, #0]
		{ isConnected = false;
		  connect(); }
    1a62:	mov	r0, r7
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    1a64:	ldr	r3, [pc, #204]	; (1b34 <_GLOBAL__sub_I_usb_in+0x700>)
    1a66:	str	r3, [r7, #4]
    1a68:	strb	r5, [r7, #8]
    1a6a:	strb	r5, [r7, #9]
    1a6c:	str	r5, [r7, #12]
		{ isConnected = false;
    1a6e:	strb	r5, [r7, #16]
		  connect(); }
    1a70:	bl	9748 <AudioConnection::connect()>
  AudioConnection          patchCord17(ringModulationMixer, 0, echoRepeat, 0);
    1a74:	ldr	r1, [pc, #132]	; (1afc <_GLOBAL__sub_I_usb_in+0x6c8>)
    1a76:	ldr	r2, [pc, #140]	; (1b04 <_GLOBAL__sub_I_usb_in+0x6d0>)
    1a78:	mov	r0, r7
    1a7a:	bl	b944 <__aeabi_atexit>
    1a7e:	ldr	r0, [pc, #184]	; (1b38 <_GLOBAL__sub_I_usb_in+0x704>)
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    1a80:	ldr	r2, [pc, #164]	; (1b28 <_GLOBAL__sub_I_usb_in+0x6f4>)
    1a82:	str	r2, [r0, #0]
    1a84:	ldr	r2, [pc, #180]	; (1b3c <_GLOBAL__sub_I_usb_in+0x708>)
    1a86:	str	r2, [r0, #4]
    1a88:	mov.w	r2, #1
    1a8c:	strb	r2, [r0, #9]
    1a8e:	strb	r5, [r0, #8]
    1a90:	str	r5, [r0, #12]
		{ isConnected = false;
    1a92:	strb	r5, [r0, #16]
		  connect(); }
    1a94:	bl	9748 <AudioConnection::connect()>
  AudioConnection          patchCord18(ringModulationMixer, 0, echoMixer, 1);
    1a98:	ldr	r2, [pc, #104]	; (1b04 <_GLOBAL__sub_I_usb_in+0x6d0>)
    1a9a:	ldr	r1, [pc, #96]	; (1afc <_GLOBAL__sub_I_usb_in+0x6c8>)
    1a9c:	ldr	r0, [pc, #152]	; (1b38 <_GLOBAL__sub_I_usb_in+0x704>)
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    1a9e:	ldr	r7, [pc, #160]	; (1b40 <_GLOBAL__sub_I_usb_in+0x70c>)
    1aa0:	bl	b944 <__aeabi_atexit>
    1aa4:	ldr	r3, [pc, #140]	; (1b34 <_GLOBAL__sub_I_usb_in+0x700>)
    1aa6:	str.w	r3, [fp, #4]
		{ isConnected = false;
		  connect(); }
    1aaa:	mov	r0, fp
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    1aac:	mov.w	r3, #1
    1ab0:	strb.w	r3, [fp, #9]
    1ab4:	str.w	r8, [fp]
    1ab8:	strb.w	r5, [fp, #8]
    1abc:	str.w	r5, [fp, #12]
		{ isConnected = false;
    1ac0:	strb.w	r5, [fp, #16]
		  connect(); }
    1ac4:	bl	9748 <AudioConnection::connect()>
  AudioConnection          patchCord19(echo, 0, echoRepeat, 1);
    1ac8:	ldr	r1, [pc, #48]	; (1afc <_GLOBAL__sub_I_usb_in+0x6c8>)
    1aca:	ldr	r2, [pc, #56]	; (1b04 <_GLOBAL__sub_I_usb_in+0x6d0>)
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    1acc:	ldr.w	r8, [pc, #168]	; 1b78 <_GLOBAL__sub_I_usb_in+0x744>
    1ad0:	mov	r0, fp
    1ad2:	bl	b944 <__aeabi_atexit>
		{ isConnected = false;
		  connect(); }
    1ad6:	ldr	r0, [pc, #108]	; (1b44 <_GLOBAL__sub_I_usb_in+0x710>)
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    1ad8:	ldr	r2, [pc, #88]	; (1b34 <_GLOBAL__sub_I_usb_in+0x700>)
    1ada:	str	r2, [r0, #0]
    1adc:	ldr	r2, [pc, #92]	; (1b3c <_GLOBAL__sub_I_usb_in+0x708>)
    1ade:	str	r2, [r0, #4]
    1ae0:	strb	r5, [r0, #8]
    1ae2:	strb	r5, [r0, #9]
    1ae4:	str	r5, [r0, #12]
		{ isConnected = false;
    1ae6:	strb	r5, [r0, #16]
    1ae8:	b.n	1b7c <_GLOBAL__sub_I_usb_in+0x748>
    1aea:	nop
    1aec:	.word	0x0009db58
    1af0:	.word	0x2000fe90
    1af4:	.word	0x2001205c
    1af8:	.word	0x20012570
    1afc:	.word	0x00000679
    1b00:	.word	0x2000feb8
    1b04:	.word	0x20007db0
    1b08:	.word	0x20008c64
    1b0c:	.word	0x2001183c
    1b10:	.word	0x20011fdc
    1b14:	.word	0x20010090
    1b18:	.word	0x2001000c
    1b1c:	.word	0x20011804
    1b20:	.word	0x2000ff08
    1b24:	.word	0x2000ffd4
    1b28:	.word	0x20012534
    1b2c:	.word	0x2000ff8c
    1b30:	.word	0x2000ff78
    1b34:	.word	0x200118b0
    1b38:	.word	0x2000ffa0
    1b3c:	.word	0x20010058
    1b40:	.word	0x20012048
    1b44:	.word	0x200117c8
    1b48:	.word	0x2000fea4
    1b4c:	.word	0x2000fee0
    1b50:	.word	0x2000fecc
    1b54:	.word	0x2000fef4
    1b58:	.word	0x20010030
    1b5c:	.word	0x20010044
    1b60:	.word	0x2000ff28
    1b64:	.word	0x2000ff3c
    1b68:	.word	0x2000ff50
    1b6c:	.word	0x2000ff64
    1b70:	.word	0x2000ffb4
    1b74:	.word	0x200117dc
    1b78:	.word	0x20011874
		  connect(); }
    1b7c:	bl	9748 <AudioConnection::connect()>
  AudioConnection          patchCord20(echoRepeat, 0, echoMixer, 0);
    1b80:	ldr	r2, [pc, #612]	; (1de8 <_GLOBAL__sub_I_usb_in+0x9b4>)
    1b82:	ldr	r1, [pc, #616]	; (1dec <_GLOBAL__sub_I_usb_in+0x9b8>)
    1b84:	ldr	r0, [pc, #616]	; (1df0 <_GLOBAL__sub_I_usb_in+0x9bc>)
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    1b86:	ldr.w	fp, [pc, #684]	; 1e34 <_GLOBAL__sub_I_usb_in+0xa00>
    1b8a:	bl	b944 <__aeabi_atexit>
    1b8e:	ldr	r3, [pc, #612]	; (1df4 <_GLOBAL__sub_I_usb_in+0x9c0>)
    1b90:	str.w	r3, [sl]
		{ isConnected = false;
		  connect(); }
    1b94:	mov	r0, sl
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    1b96:	ldr	r3, [pc, #608]	; (1df8 <_GLOBAL__sub_I_usb_in+0x9c4>)
    1b98:	str.w	r3, [sl, #4]
    1b9c:	strb.w	r5, [sl, #8]
    1ba0:	strb.w	r5, [sl, #9]
    1ba4:	str.w	r5, [sl, #12]
		{ isConnected = false;
    1ba8:	strb.w	r5, [sl, #16]
		  connect(); }
    1bac:	bl	9748 <AudioConnection::connect()>
  AudioConnection          patchCord21(echoMixer, 0, cutoffFilter, 0);
    1bb0:	ldr	r1, [pc, #568]	; (1dec <_GLOBAL__sub_I_usb_in+0x9b8>)
    1bb2:	ldr	r2, [pc, #564]	; (1de8 <_GLOBAL__sub_I_usb_in+0x9b4>)
    1bb4:	mov	r0, sl
    1bb6:	bl	b944 <__aeabi_atexit>
    1bba:	ldr	r0, [pc, #576]	; (1dfc <_GLOBAL__sub_I_usb_in+0x9c8>)
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    1bbc:	ldr	r2, [pc, #564]	; (1df4 <_GLOBAL__sub_I_usb_in+0x9c0>)
    1bbe:	str	r2, [r0, #0]
    1bc0:	ldr	r2, [pc, #572]	; (1e00 <_GLOBAL__sub_I_usb_in+0x9cc>)
    1bc2:	str	r2, [r0, #4]
    1bc4:	strb	r5, [r0, #8]
    1bc6:	strb	r5, [r0, #9]
    1bc8:	str	r5, [r0, #12]
		{ isConnected = false;
    1bca:	strb	r5, [r0, #16]
		  connect(); }
    1bcc:	bl	9748 <AudioConnection::connect()>
  AudioConnection          patchCord22(echoMixer, 0, cutoffMixer, 0);
    1bd0:	ldr	r1, [pc, #536]	; (1dec <_GLOBAL__sub_I_usb_in+0x9b8>)
    1bd2:	ldr	r2, [pc, #532]	; (1de8 <_GLOBAL__sub_I_usb_in+0x9b4>)
    1bd4:	ldr	r0, [pc, #548]	; (1dfc <_GLOBAL__sub_I_usb_in+0x9c8>)
    1bd6:	ldr.w	sl, [pc, #608]	; 1e38 <_GLOBAL__sub_I_usb_in+0xa04>
    1bda:	bl	b944 <__aeabi_atexit>
    1bde:	ldr	r0, [pc, #548]	; (1e04 <_GLOBAL__sub_I_usb_in+0x9d0>)
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    1be0:	ldr	r2, [pc, #532]	; (1df8 <_GLOBAL__sub_I_usb_in+0x9c4>)
    1be2:	str	r2, [r0, #0]
    1be4:	ldr	r2, [pc, #536]	; (1e00 <_GLOBAL__sub_I_usb_in+0x9cc>)
    1be6:	str	r2, [r0, #4]
    1be8:	mov.w	r2, #1
    1bec:	strb	r2, [r0, #9]
    1bee:	strb	r5, [r0, #8]
    1bf0:	str	r5, [r0, #12]
		{ isConnected = false;
    1bf2:	strb	r5, [r0, #16]
		  connect(); }
    1bf4:	bl	9748 <AudioConnection::connect()>
  AudioConnection          patchCord23(cutoffFilter, 0, cutoffMixer, 1);
    1bf8:	ldr	r2, [pc, #492]	; (1de8 <_GLOBAL__sub_I_usb_in+0x9b4>)
    1bfa:	ldr	r1, [pc, #496]	; (1dec <_GLOBAL__sub_I_usb_in+0x9b8>)
    1bfc:	ldr	r0, [pc, #516]	; (1e04 <_GLOBAL__sub_I_usb_in+0x9d0>)
    1bfe:	bl	b944 <__aeabi_atexit>
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    1c02:	ldr	r3, [pc, #500]	; (1df8 <_GLOBAL__sub_I_usb_in+0x9c4>)
    1c04:	str	r3, [r7, #0]
    1c06:	movs	r1, #2
    1c08:	ldr	r3, [pc, #500]	; (1e00 <_GLOBAL__sub_I_usb_in+0x9cc>)
    1c0a:	str	r3, [r7, #4]
    1c0c:	movs	r2, #3
		{ isConnected = false;
		  connect(); }
    1c0e:	mov	r0, r7
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    1c10:	strb	r1, [r7, #8]
    1c12:	strb	r2, [r7, #9]
    1c14:	str	r5, [r7, #12]
		{ isConnected = false;
    1c16:	strb	r5, [r7, #16]
		  connect(); }
    1c18:	bl	9748 <AudioConnection::connect()>
  AudioConnection          patchCord31(cutoffFilter, 2, cutoffMixer, 3);
    1c1c:	ldr	r1, [pc, #460]	; (1dec <_GLOBAL__sub_I_usb_in+0x9b8>)
    1c1e:	ldr	r2, [pc, #456]	; (1de8 <_GLOBAL__sub_I_usb_in+0x9b4>)
    1c20:	mov	r0, r7
    1c22:	bl	b944 <__aeabi_atexit>
    1c26:	ldr	r0, [pc, #480]	; (1e08 <_GLOBAL__sub_I_usb_in+0x9d4>)
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    1c28:	ldr	r2, [pc, #468]	; (1e00 <_GLOBAL__sub_I_usb_in+0x9cc>)
    1c2a:	str	r2, [r0, #0]
    1c2c:	ldr	r2, [pc, #476]	; (1e0c <_GLOBAL__sub_I_usb_in+0x9d8>)
    1c2e:	str	r2, [r0, #4]
    1c30:	strb	r5, [r0, #8]
    1c32:	strb	r5, [r0, #9]
    1c34:	str	r5, [r0, #12]
		{ isConnected = false;
    1c36:	strb	r5, [r0, #16]
		  connect(); }
    1c38:	bl	9748 <AudioConnection::connect()>
  AudioConnection          patchCord25(cutoffMixer, 0, masterMixer, 0);
    1c3c:	ldr	r1, [pc, #428]	; (1dec <_GLOBAL__sub_I_usb_in+0x9b8>)
    1c3e:	ldr	r2, [pc, #424]	; (1de8 <_GLOBAL__sub_I_usb_in+0x9b4>)
    1c40:	ldr	r0, [pc, #452]	; (1e08 <_GLOBAL__sub_I_usb_in+0x9d4>)
    1c42:	bl	b944 <__aeabi_atexit>
    1c46:	ldr	r0, [pc, #456]	; (1e10 <_GLOBAL__sub_I_usb_in+0x9dc>)
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    1c48:	ldr	r2, [pc, #448]	; (1e0c <_GLOBAL__sub_I_usb_in+0x9d8>)
    1c4a:	str	r2, [r0, #0]
    1c4c:	ldr	r2, [pc, #452]	; (1e14 <_GLOBAL__sub_I_usb_in+0x9e0>)
    1c4e:	str	r2, [r0, #4]
    1c50:	strb	r5, [r0, #8]
    1c52:	strb	r5, [r0, #9]
    1c54:	str	r5, [r0, #12]
		{ isConnected = false;
    1c56:	strb	r5, [r0, #16]
		  connect(); }
    1c58:	bl	9748 <AudioConnection::connect()>
  AudioConnection          patchCord26(masterMixer, 0, masterAmplifier, 0);
    1c5c:	ldr	r2, [pc, #392]	; (1de8 <_GLOBAL__sub_I_usb_in+0x9b4>)
    1c5e:	ldr	r1, [pc, #396]	; (1dec <_GLOBAL__sub_I_usb_in+0x9b8>)
    1c60:	ldr	r0, [pc, #428]	; (1e10 <_GLOBAL__sub_I_usb_in+0x9dc>)
    1c62:	bl	b944 <__aeabi_atexit>
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    1c66:	ldr	r3, [pc, #428]	; (1e14 <_GLOBAL__sub_I_usb_in+0x9e0>)
    1c68:	strb.w	r5, [r8, #8]
		{ isConnected = false;
		  connect(); }
    1c6c:	mov	r0, r8
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    1c6e:	stmia.w	r8, {r3, r9}
    1c72:	strb.w	r5, [r8, #9]
    1c76:	str.w	r5, [r8, #12]
		{ isConnected = false;
    1c7a:	strb.w	r5, [r8, #16]
		  connect(); }
    1c7e:	bl	9748 <AudioConnection::connect()>
  AudioConnection          patchCord27(masterAmplifier, 0, usb_out, 0);
    1c82:	ldr	r2, [pc, #356]	; (1de8 <_GLOBAL__sub_I_usb_in+0x9b4>)
    1c84:	ldr	r1, [pc, #356]	; (1dec <_GLOBAL__sub_I_usb_in+0x9b8>)
    1c86:	mov	r0, r8
    1c88:	bl	b944 <__aeabi_atexit>
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    1c8c:	mov.w	r3, #1
    1c90:	strb.w	r3, [fp, #9]
    1c94:	ldr	r3, [pc, #380]	; (1e14 <_GLOBAL__sub_I_usb_in+0x9e0>)
    1c96:	strb.w	r5, [fp, #8]
		{ isConnected = false;
		  connect(); }
    1c9a:	mov	r0, fp
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    1c9c:	stmia.w	fp, {r3, r9}
    1ca0:	str.w	r5, [fp, #12]
		{ isConnected = false;
    1ca4:	strb.w	r5, [fp, #16]
		  connect(); }
    1ca8:	bl	9748 <AudioConnection::connect()>
  AudioConnection          patchCord28(masterAmplifier, 0, usb_out, 1);
    1cac:	ldr	r1, [pc, #316]	; (1dec <_GLOBAL__sub_I_usb_in+0x9b8>)
    1cae:	ldr	r2, [pc, #312]	; (1de8 <_GLOBAL__sub_I_usb_in+0x9b4>)
    1cb0:	ldr.w	r8, [pc, #392]	; 1e3c <_GLOBAL__sub_I_usb_in+0xa08>
    1cb4:	mov	r0, fp
    1cb6:	bl	b944 <__aeabi_atexit>
    1cba:	ldr	r0, [pc, #348]	; (1e18 <_GLOBAL__sub_I_usb_in+0x9e4>)
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    1cbc:	ldr	r3, [sp, #4]
    1cbe:	ldr	r2, [pc, #340]	; (1e14 <_GLOBAL__sub_I_usb_in+0x9e0>)
    1cc0:	str	r3, [r0, #4]
    1cc2:	str	r2, [r0, #0]
    1cc4:	str	r3, [sp, #0]
    1cc6:	strb	r5, [r0, #8]
    1cc8:	strb	r5, [r0, #9]
    1cca:	str	r5, [r0, #12]
		{ isConnected = false;
    1ccc:	strb	r5, [r0, #16]
		  connect(); }
    1cce:	bl	9748 <AudioConnection::connect()>
  AudioConnection          patchCord29(masterAmplifier, 0, i2s, 0);
    1cd2:	ldr	r1, [pc, #280]	; (1dec <_GLOBAL__sub_I_usb_in+0x9b8>)
    1cd4:	ldr	r2, [pc, #272]	; (1de8 <_GLOBAL__sub_I_usb_in+0x9b4>)
    1cd6:	ldr	r0, [pc, #320]	; (1e18 <_GLOBAL__sub_I_usb_in+0x9e4>)
    1cd8:	bl	b944 <__aeabi_atexit>
    1cdc:	ldr	r0, [pc, #316]	; (1e1c <_GLOBAL__sub_I_usb_in+0x9e8>)
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    1cde:	ldr	r3, [sp, #0]
    1ce0:	str	r3, [r0, #4]
    1ce2:	mov.w	r2, #1
    1ce6:	strb	r2, [r0, #9]
    1ce8:	ldr	r2, [pc, #296]	; (1e14 <_GLOBAL__sub_I_usb_in+0x9e0>)
    1cea:	str	r2, [r0, #0]
    1cec:	strb	r5, [r0, #8]
    1cee:	str	r5, [r0, #12]
		{ isConnected = false;
    1cf0:	strb	r5, [r0, #16]
		  connect(); }
    1cf2:	bl	9748 <AudioConnection::connect()>
  AudioConnection          patchCord30(masterAmplifier, 0, i2s, 1);
    1cf6:	ldr	r2, [pc, #240]	; (1de8 <_GLOBAL__sub_I_usb_in+0x9b4>)
    1cf8:	ldr	r1, [pc, #240]	; (1dec <_GLOBAL__sub_I_usb_in+0x9b8>)
    1cfa:	ldr	r0, [pc, #288]	; (1e1c <_GLOBAL__sub_I_usb_in+0x9e8>)
    1cfc:	bl	b944 <__aeabi_atexit>
{
public:
	AudioStream(unsigned char ninput, audio_block_t **iqueue) :
		num_inputs(ninput), inputQueue(iqueue) {
			active = false;
			destination_list = NULL;
    1d00:	ldr	r1, [pc, #284]	; (1e20 <_GLOBAL__sub_I_usb_in+0x9ec>)

class AudioStream
{
public:
	AudioStream(unsigned char ninput, audio_block_t **iqueue) :
		num_inputs(ninput), inputQueue(iqueue) {
    1d02:	ldr	r3, [pc, #288]	; (1e24 <_GLOBAL__sub_I_usb_in+0x9f0>)
			active = false;
			destination_list = NULL;
    1d04:	ldr.w	lr, [r1]
#include "AudioControl.h"

class AudioControlSGTL5000 : public AudioControl
{
public:
	AudioControlSGTL5000(void) : i2c_addr(0x0A) { }
    1d08:	ldr	r2, [pc, #284]	; (1e28 <_GLOBAL__sub_I_usb_in+0x9f4>)
    1d0a:	ldr	r0, [pc, #288]	; (1e2c <_GLOBAL__sub_I_usb_in+0x9f8>)
    1d0c:	str	r0, [r2, #0]
    1d0e:	mov.w	ip, #10

public:
	/**
	 * Class constructor.
	 */
	AudioSynthWavetable(void) : AudioStream(0, NULL) {}
    1d12:	mov	r7, lr

class AudioStream
{
public:
	AudioStream(unsigned char ninput, audio_block_t **iqueue) :
		num_inputs(ninput), inputQueue(iqueue) {
    1d14:	str	r4, [r3, #0]
			} else {
				AudioStream *p;
				for (p=first_update; p->next_update; p = p->next_update) ;
				p->next_update = this;
			}
			next_update = NULL;
    1d16:	mov	r1, r5

class AudioStream
{
public:
	AudioStream(unsigned char ninput, audio_block_t **iqueue) :
		num_inputs(ninput), inputQueue(iqueue) {
    1d18:	strb	r5, [r3, #9]
    1d1a:	str	r5, [r3, #16]
			active = false;
    1d1c:	strb	r5, [r3, #8]
			destination_list = NULL;
    1d1e:	str	r5, [r3, #12]
    1d20:	strb.w	ip, [r2, #8]
    1d24:	mov.w	r0, #3221225472	; 0xc0000000
    1d28:	mov	lr, r5
			for (int i=0; i < num_inputs; i++) {
				inputQueue[i] = NULL;
			}
			// add to a simple list, for update_all
			// TODO: replace with a proper data flow analysis in update_all
			if (first_update == NULL) {
    1d2a:	cmp	r7, #0
    1d2c:	beq.n	1d86 <_GLOBAL__sub_I_usb_in+0x952>
    1d2e:	mov	r5, r7
    1d30:	b.n	1d34 <_GLOBAL__sub_I_usb_in+0x900>
				first_update = this;
			} else {
				AudioStream *p;
				for (p=first_update; p->next_update; p = p->next_update) ;
    1d32:	mov	r5, r2
    1d34:	ldr	r2, [r5, #20]
    1d36:	cmp	r2, #0
    1d38:	bne.n	1d32 <_GLOBAL__sub_I_usb_in+0x8fe>
				p->next_update = this;
    1d3a:	str	r3, [r5, #20]

  const int TOTAL_VOICES = 64;
  const int TOTAL_MIXERS = 21; // 64 / 4 = 16, + 16 / 4 = 4, + 4 / 4 = 1 = 21
  const int SECONDARY_MIXERS = 4; // What are these for

  AudioSynthWavetable wavetable[TOTAL_VOICES];
    1d3c:	cmp	sl, r3
    1d3e:	strb	r1, [r3, #24]
			}
			next_update = NULL;
    1d40:	str	r1, [r3, #20]
    1d42:	str	r1, [r3, #36]	; 0x24
			cpu_cycles = 0;
    1d44:	strh	r1, [r3, #4]
    1d46:	str	r1, [r3, #40]	; 0x28
			cpu_cycles_max = 0;
    1d48:	strh	r1, [r3, #6]
    1d4a:	strh	r1, [r3, #44]	; 0x2c
			numConnections = 0;
    1d4c:	strb	r1, [r3, #10]
    1d4e:	strb.w	r1, [r3, #46]	; 0x2e
    1d52:	str.w	r8, [r3]
    1d56:	str	r1, [r3, #48]	; 0x30
    1d58:	str	r1, [r3, #28]
    1d5a:	str	r1, [r3, #52]	; 0x34
    1d5c:	str	r1, [r3, #32]
    1d5e:	str	r1, [r3, #56]	; 0x38
    1d60:	str	r1, [r3, #60]	; 0x3c
    1d62:	str	r1, [r3, #64]	; 0x40
    1d64:	str	r1, [r3, #68]	; 0x44
    1d66:	str	r1, [r3, #72]	; 0x48
    1d68:	str	r1, [r3, #76]	; 0x4c
    1d6a:	str	r0, [r3, #80]	; 0x50
    1d6c:	str	r1, [r3, #84]	; 0x54
    1d6e:	str	r1, [r3, #88]	; 0x58
    1d70:	beq.n	1d8e <_GLOBAL__sub_I_usb_in+0x95a>

class AudioStream
{
public:
	AudioStream(unsigned char ninput, audio_block_t **iqueue) :
		num_inputs(ninput), inputQueue(iqueue) {
    1d72:	str	r4, [r3, #92]	; 0x5c
    1d74:	strb.w	r1, [r3, #101]	; 0x65
    1d78:	str	r1, [r3, #108]	; 0x6c
			active = false;
    1d7a:	strb.w	r1, [r3, #100]	; 0x64
			destination_list = NULL;
    1d7e:	str	r1, [r3, #104]	; 0x68
    1d80:	adds	r3, #92	; 0x5c
			for (int i=0; i < num_inputs; i++) {
				inputQueue[i] = NULL;
			}
			// add to a simple list, for update_all
			// TODO: replace with a proper data flow analysis in update_all
			if (first_update == NULL) {
    1d82:	cmp	r7, #0
    1d84:	bne.n	1d2e <_GLOBAL__sub_I_usb_in+0x8fa>
    1d86:	mov	r7, r3
    1d88:	mov.w	lr, #1
    1d8c:	b.n	1d3c <_GLOBAL__sub_I_usb_in+0x908>
    1d8e:	mov	r2, r7
    1d90:	mov	r7, lr
    1d92:	cmp	r7, #0
    1d94:	bne.w	2ba8 <_GLOBAL__sub_I_usb_in+0x1774>
    1d98:	ldr	r1, [pc, #148]	; (1e30 <_GLOBAL__sub_I_usb_in+0x9fc>)
    1d9a:	ldr.w	r9, [pc, #132]	; 1e20 <_GLOBAL__sub_I_usb_in+0x9ec>
    1d9e:	add.w	r8, r1, #1176	; 0x498

class AudioStream
{
public:
	AudioStream(unsigned char ninput, audio_block_t **iqueue) :
		num_inputs(ninput), inputQueue(iqueue) {
    1da2:	mov.w	ip, #4
			active = false;
    1da6:	movs	r5, #0
class AudioMixer4 : public AudioStream
{
#if defined(__ARM_ARCH_7EM__)
public:
	AudioMixer4(void) : AudioStream(4, inputQueueArray) {
		for (int i=0; i<4; i++) multiplier[i] = 65536;
    1da8:	mov.w	r0, #65536	; 0x10000

class AudioStream
{
public:
	AudioStream(unsigned char ninput, audio_block_t **iqueue) :
		num_inputs(ninput), inputQueue(iqueue) {
    1dac:	str.w	r4, [r1, #-40]
    1db0:	strb.w	ip, [r1, #-31]
    1db4:	str.w	r1, [r1, #-24]
			active = false;
    1db8:	strb.w	r5, [r1, #-32]
			destination_list = NULL;
    1dbc:	str.w	r5, [r1, #-28]
    1dc0:	sub.w	r7, r1, #40	; 0x28
    1dc4:	mov	r2, r1
    1dc6:	movs	r3, #0
    1dc8:	b.n	1dce <_GLOBAL__sub_I_usb_in+0x99a>
    1dca:	ldr.w	r2, [r1, #-24]
			for (int i=0; i < num_inputs; i++) {
				inputQueue[i] = NULL;
    1dce:	str.w	r5, [r2, r3, lsl #2]
public:
	AudioStream(unsigned char ninput, audio_block_t **iqueue) :
		num_inputs(ninput), inputQueue(iqueue) {
			active = false;
			destination_list = NULL;
			for (int i=0; i < num_inputs; i++) {
    1dd2:	ldrb.w	r2, [r1, #-31]
    1dd6:	adds	r3, #1
    1dd8:	cmp	r2, r3
    1dda:	bgt.n	1dca <_GLOBAL__sub_I_usb_in+0x996>
				inputQueue[i] = NULL;
			}
			// add to a simple list, for update_all
			// TODO: replace with a proper data flow analysis in update_all
			if (first_update == NULL) {
    1ddc:	ldr	r3, [pc, #64]	; (1e20 <_GLOBAL__sub_I_usb_in+0x9ec>)
    1dde:	ldr	r2, [r3, #0]
    1de0:	cbnz	r2, 1e42 <_GLOBAL__sub_I_usb_in+0xa0e>
    1de2:	b.w	2b86 <_GLOBAL__sub_I_usb_in+0x1752>
    1de6:	nop
    1de8:	.word	0x20007db0
    1dec:	.word	0x00000679
    1df0:	.word	0x200117c8
    1df4:	.word	0x20010058
    1df8:	.word	0x20011ff4
    1dfc:	.word	0x200117f0
    1e00:	.word	0x200118e8
    1e04:	.word	0x200125ac
    1e08:	.word	0x20011828
    1e0c:	.word	0x20010090
    1e10:	.word	0x200125c4
    1e14:	.word	0x2001207c
    1e18:	.word	0x2001189c
    1e1c:	.word	0x20012034
    1e20:	.word	0x20012b9c
    1e24:	.word	0x200100c8
    1e28:	.word	0x20008c58
    1e2c:	.word	0x0009dae8
    1e30:	.word	0x200120c4
    1e34:	.word	0x20011888
    1e38:	.word	0x2001176c
    1e3c:	.word	0x0009db4c
				first_update = this;
			} else {
				AudioStream *p;
				for (p=first_update; p->next_update; p = p->next_update) ;
    1e40:	mov	r2, r3
    1e42:	ldr	r3, [r2, #20]
    1e44:	cmp	r3, #0
    1e46:	bne.n	1e40 <_GLOBAL__sub_I_usb_in+0xa0c>
				p->next_update = this;
    1e48:	str	r7, [r2, #20]
			}
			next_update = NULL;
    1e4a:	str.w	r5, [r1, #-20]
			cpu_cycles = 0;
    1e4e:	strh.w	r5, [r1, #-36]
			cpu_cycles_max = 0;
    1e52:	strh.w	r5, [r1, #-34]
			numConnections = 0;
    1e56:	strb.w	r5, [r1, #-30]

class AudioMixer4 : public AudioStream
{
#if defined(__ARM_ARCH_7EM__)
public:
	AudioMixer4(void) : AudioStream(4, inputQueueArray) {
    1e5a:	str.w	r6, [r1, #-40]
		for (int i=0; i<4; i++) multiplier[i] = 65536;
    1e5e:	str.w	r0, [r1, #-16]
    1e62:	str.w	r0, [r1, #-12]
    1e66:	str.w	r0, [r1, #-8]
    1e6a:	str.w	r0, [r1, #-4]
    1e6e:	adds	r1, #56	; 0x38
  AudioMixer4         mixer[TOTAL_MIXERS];
    1e70:	cmp	r1, r8
			} else {
				AudioStream *p;
				for (p=first_update; p->next_update; p = p->next_update) ;
				p->next_update = this;
			}
			next_update = NULL;
    1e72:	mov.w	fp, #0
    1e76:	bne.n	1dac <_GLOBAL__sub_I_usb_in+0x978>
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    1e78:	ldr	r4, [pc, #1008]	; (226c <_GLOBAL__sub_I_usb_in+0xe38>)
    1e7a:	ldr.w	r9, [pc, #1016]	; 2274 <_GLOBAL__sub_I_usb_in+0xe40>
    1e7e:	ldr	r5, [pc, #1008]	; (2270 <_GLOBAL__sub_I_usb_in+0xe3c>)
    1e80:	str.w	r5, [r9, #4]
    1e84:	sub.w	r3, r4, #92	; 0x5c
    1e88:	mov.w	r8, #1
    1e8c:	str.w	r3, [r9]
		{ isConnected = false;
		  connect(); }
    1e90:	mov	r0, r9
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    1e92:	strb.w	fp, [r9, #8]
    1e96:	strb.w	fp, [r9, #9]
    1e9a:	str.w	fp, [r9, #12]
		{ isConnected = false;
    1e9e:	strb.w	fp, [r9, #16]
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    1ea2:	movs	r7, #2
		{ isConnected = false;
		  connect(); }
    1ea4:	bl	9748 <AudioConnection::connect()>
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    1ea8:	add.w	r6, r4, #92	; 0x5c
		{ isConnected = false;
		  connect(); }
    1eac:	add.w	r0, r9, #20
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    1eb0:	str.w	r5, [r9, #24]
    1eb4:	str.w	r4, [r9, #20]
    1eb8:	strb.w	fp, [r9, #28]
    1ebc:	str.w	fp, [r9, #32]
		{ isConnected = false;
    1ec0:	strb.w	fp, [r9, #36]	; 0x24
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    1ec4:	strb.w	r8, [r9, #29]
		{ isConnected = false;
		  connect(); }
    1ec8:	bl	9748 <AudioConnection::connect()>
    1ecc:	add.w	r0, r9, #40	; 0x28
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    1ed0:	str.w	r5, [r9, #44]	; 0x2c
    1ed4:	str.w	r6, [r9, #40]	; 0x28
    1ed8:	strb.w	fp, [r9, #48]	; 0x30
    1edc:	str.w	fp, [r9, #52]	; 0x34
		{ isConnected = false;
    1ee0:	strb.w	fp, [r9, #56]	; 0x38
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    1ee4:	strb.w	r7, [r9, #49]	; 0x31
    1ee8:	movs	r6, #3
		{ isConnected = false;
		  connect(); }
    1eea:	bl	9748 <AudioConnection::connect()>
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    1eee:	add.w	r3, r4, #184	; 0xb8
		{ isConnected = false;
		  connect(); }
    1ef2:	add.w	r0, r9, #60	; 0x3c
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    1ef6:	str.w	r5, [r9, #64]	; 0x40
    1efa:	str.w	r3, [r9, #60]	; 0x3c
    1efe:	strb.w	fp, [r9, #68]	; 0x44
    1f02:	str.w	fp, [r9, #72]	; 0x48
		{ isConnected = false;
    1f06:	strb.w	fp, [r9, #76]	; 0x4c
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    1f0a:	strb.w	r6, [r9, #69]	; 0x45
		{ isConnected = false;
		  connect(); }
    1f0e:	bl	9748 <AudioConnection::connect()>
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    1f12:	add.w	r3, r5, #1064	; 0x428
		{ isConnected = false;
		  connect(); }
    1f16:	add.w	r0, r9, #80	; 0x50
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    1f1a:	str.w	r5, [r9, #80]	; 0x50
    1f1e:	str.w	r3, [r9, #84]	; 0x54
    1f22:	strb.w	fp, [r9, #88]	; 0x58
    1f26:	strb.w	fp, [r9, #89]	; 0x59
    1f2a:	str.w	fp, [r9, #92]	; 0x5c
		{ isConnected = false;
    1f2e:	strb.w	fp, [r9, #96]	; 0x60
		  connect(); }
    1f32:	bl	9748 <AudioConnection::connect()>
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    1f36:	add.w	r3, r4, #276	; 0x114
    1f3a:	str.w	r3, [r9, #100]	; 0x64
    1f3e:	add.w	r3, r5, #56	; 0x38
		{ isConnected = false;
		  connect(); }
    1f42:	add.w	r0, r9, #100	; 0x64
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    1f46:	str.w	r3, [r9, #104]	; 0x68
    1f4a:	strb.w	fp, [r9, #108]	; 0x6c
    1f4e:	strb.w	fp, [r9, #109]	; 0x6d
    1f52:	str.w	fp, [r9, #112]	; 0x70
		{ isConnected = false;
    1f56:	strb.w	fp, [r9, #116]	; 0x74
		  connect(); }
    1f5a:	bl	9748 <AudioConnection::connect()>
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    1f5e:	add.w	r3, r4, #368	; 0x170
    1f62:	add.w	r2, r5, #56	; 0x38
		{ isConnected = false;
		  connect(); }
    1f66:	add.w	r0, r9, #120	; 0x78
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    1f6a:	str.w	r2, [r9, #124]	; 0x7c
    1f6e:	str.w	r3, [r9, #120]	; 0x78
    1f72:	strb.w	fp, [r9, #128]	; 0x80
    1f76:	strb.w	r8, [r9, #129]	; 0x81
    1f7a:	str.w	fp, [r9, #132]	; 0x84
		{ isConnected = false;
    1f7e:	strb.w	fp, [r9, #136]	; 0x88
		  connect(); }
    1f82:	bl	9748 <AudioConnection::connect()>
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    1f86:	add.w	r3, r4, #460	; 0x1cc
    1f8a:	add.w	r2, r5, #56	; 0x38
		{ isConnected = false;
		  connect(); }
    1f8e:	add.w	r0, r9, #140	; 0x8c
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    1f92:	str.w	r2, [r9, #144]	; 0x90
    1f96:	str.w	r3, [r9, #140]	; 0x8c
    1f9a:	strb.w	fp, [r9, #148]	; 0x94
    1f9e:	strb.w	r7, [r9, #149]	; 0x95
    1fa2:	str.w	fp, [r9, #152]	; 0x98
		{ isConnected = false;
    1fa6:	strb.w	fp, [r9, #156]	; 0x9c
		  connect(); }
    1faa:	bl	9748 <AudioConnection::connect()>
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    1fae:	add.w	r2, r5, #56	; 0x38
    1fb2:	add.w	r3, r4, #552	; 0x228
    1fb6:	str.w	r2, [r9, #164]	; 0xa4
		{ isConnected = false;
		  connect(); }
    1fba:	add.w	r0, r9, #160	; 0xa0
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    1fbe:	str.w	r3, [r9, #160]	; 0xa0
    1fc2:	strb.w	fp, [r9, #168]	; 0xa8
    1fc6:	strb.w	r6, [r9, #169]	; 0xa9
    1fca:	str.w	fp, [r9, #172]	; 0xac
		{ isConnected = false;
    1fce:	strb.w	fp, [r9, #176]	; 0xb0
		  connect(); }
    1fd2:	bl	9748 <AudioConnection::connect()>
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    1fd6:	add.w	r3, r5, #56	; 0x38
    1fda:	str.w	r3, [r9, #180]	; 0xb4
    1fde:	add.w	r3, r5, #1064	; 0x428
		{ isConnected = false;
		  connect(); }
    1fe2:	add.w	r0, r9, #180	; 0xb4
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    1fe6:	str.w	r3, [r9, #184]	; 0xb8
    1fea:	strb.w	fp, [r9, #188]	; 0xbc
    1fee:	strb.w	r8, [r9, #189]	; 0xbd
    1ff2:	str.w	fp, [r9, #192]	; 0xc0
		{ isConnected = false;
    1ff6:	strb.w	fp, [r9, #196]	; 0xc4
		  connect(); }
    1ffa:	bl	9748 <AudioConnection::connect()>
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    1ffe:	add.w	r3, r4, #644	; 0x284
    2002:	str.w	r3, [r9, #200]	; 0xc8
    2006:	add.w	r3, r5, #112	; 0x70
		{ isConnected = false;
		  connect(); }
    200a:	add.w	r0, r9, #200	; 0xc8
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    200e:	str.w	r3, [r9, #204]	; 0xcc
    2012:	strb.w	fp, [r9, #208]	; 0xd0
    2016:	strb.w	fp, [r9, #209]	; 0xd1
    201a:	str.w	fp, [r9, #212]	; 0xd4
		{ isConnected = false;
    201e:	strb.w	fp, [r9, #216]	; 0xd8
		  connect(); }
    2022:	bl	9748 <AudioConnection::connect()>
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    2026:	add.w	r3, r4, #736	; 0x2e0
    202a:	add.w	r2, r5, #112	; 0x70
		{ isConnected = false;
		  connect(); }
    202e:	add.w	r0, r9, #220	; 0xdc
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    2032:	str.w	r2, [r9, #224]	; 0xe0
    2036:	str.w	r3, [r9, #220]	; 0xdc
    203a:	strb.w	fp, [r9, #228]	; 0xe4
    203e:	strb.w	r8, [r9, #229]	; 0xe5
    2042:	str.w	fp, [r9, #232]	; 0xe8
		{ isConnected = false;
    2046:	strb.w	fp, [r9, #236]	; 0xec
		  connect(); }
    204a:	bl	9748 <AudioConnection::connect()>
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    204e:	add.w	r3, r4, #828	; 0x33c
    2052:	add.w	r2, r5, #112	; 0x70
		{ isConnected = false;
		  connect(); }
    2056:	add.w	r0, r9, #240	; 0xf0
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    205a:	str.w	r2, [r9, #244]	; 0xf4
    205e:	str.w	r3, [r9, #240]	; 0xf0
    2062:	strb.w	fp, [r9, #248]	; 0xf8
    2066:	strb.w	r7, [r9, #249]	; 0xf9
    206a:	str.w	fp, [r9, #252]	; 0xfc
		{ isConnected = false;
    206e:	strb.w	fp, [r9, #256]	; 0x100
		  connect(); }
    2072:	bl	9748 <AudioConnection::connect()>
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    2076:	add.w	r2, r5, #112	; 0x70
    207a:	add.w	r3, r4, #920	; 0x398
    207e:	str.w	r2, [r9, #264]	; 0x108
		{ isConnected = false;
		  connect(); }
    2082:	add.w	r0, r9, #260	; 0x104
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    2086:	str.w	r3, [r9, #260]	; 0x104
    208a:	strb.w	fp, [r9, #268]	; 0x10c
    208e:	strb.w	r6, [r9, #269]	; 0x10d
    2092:	str.w	fp, [r9, #272]	; 0x110
		{ isConnected = false;
    2096:	strb.w	fp, [r9, #276]	; 0x114
		  connect(); }
    209a:	bl	9748 <AudioConnection::connect()>
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    209e:	add.w	r3, r5, #112	; 0x70
    20a2:	str.w	r3, [r9, #280]	; 0x118
    20a6:	add.w	r3, r5, #1064	; 0x428
		{ isConnected = false;
		  connect(); }
    20aa:	add.w	r0, r9, #280	; 0x118
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    20ae:	str.w	r3, [r9, #284]	; 0x11c
    20b2:	strb.w	fp, [r9, #288]	; 0x120
    20b6:	strb.w	r7, [r9, #289]	; 0x121
    20ba:	str.w	fp, [r9, #292]	; 0x124
		{ isConnected = false;
    20be:	strb.w	fp, [r9, #296]	; 0x128
		  connect(); }
    20c2:	bl	9748 <AudioConnection::connect()>
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    20c6:	add.w	r3, r4, #1012	; 0x3f4
    20ca:	str.w	r3, [r9, #300]	; 0x12c
    20ce:	add.w	r3, r5, #168	; 0xa8
		{ isConnected = false;
		  connect(); }
    20d2:	add.w	r0, r9, #300	; 0x12c
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    20d6:	str.w	r3, [r9, #304]	; 0x130
    20da:	strb.w	fp, [r9, #308]	; 0x134
    20de:	strb.w	fp, [r9, #309]	; 0x135
    20e2:	str.w	fp, [r9, #312]	; 0x138
		{ isConnected = false;
    20e6:	strb.w	fp, [r9, #316]	; 0x13c
		  connect(); }
    20ea:	bl	9748 <AudioConnection::connect()>
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    20ee:	add.w	r3, r4, #1104	; 0x450
    20f2:	add.w	r2, r5, #168	; 0xa8
		{ isConnected = false;
		  connect(); }
    20f6:	add.w	r0, r9, #320	; 0x140
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    20fa:	str.w	r2, [r9, #324]	; 0x144
    20fe:	str.w	r3, [r9, #320]	; 0x140
    2102:	strb.w	fp, [r9, #328]	; 0x148
    2106:	strb.w	r8, [r9, #329]	; 0x149
    210a:	str.w	fp, [r9, #332]	; 0x14c
		{ isConnected = false;
    210e:	strb.w	fp, [r9, #336]	; 0x150
		  connect(); }
    2112:	bl	9748 <AudioConnection::connect()>
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    2116:	addw	r3, r4, #1196	; 0x4ac
    211a:	add.w	r2, r5, #168	; 0xa8
		{ isConnected = false;
		  connect(); }
    211e:	add.w	r0, r9, #340	; 0x154
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    2122:	str.w	r2, [r9, #344]	; 0x158
    2126:	str.w	r3, [r9, #340]	; 0x154
    212a:	strb.w	fp, [r9, #348]	; 0x15c
    212e:	strb.w	r7, [r9, #349]	; 0x15d
    2132:	str.w	fp, [r9, #352]	; 0x160
		{ isConnected = false;
    2136:	strb.w	fp, [r9, #356]	; 0x164
		  connect(); }
    213a:	bl	9748 <AudioConnection::connect()>
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    213e:	add.w	r2, r5, #168	; 0xa8
    2142:	add.w	r3, r4, #1288	; 0x508
    2146:	str.w	r2, [r9, #364]	; 0x16c
		{ isConnected = false;
		  connect(); }
    214a:	add.w	r0, r9, #360	; 0x168
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    214e:	str.w	r3, [r9, #360]	; 0x168
    2152:	strb.w	fp, [r9, #368]	; 0x170
    2156:	strb.w	r6, [r9, #369]	; 0x171
    215a:	str.w	fp, [r9, #372]	; 0x174
		{ isConnected = false;
    215e:	strb.w	fp, [r9, #376]	; 0x178
		  connect(); }
    2162:	bl	9748 <AudioConnection::connect()>
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    2166:	add.w	r3, r5, #168	; 0xa8
    216a:	str.w	r3, [r9, #380]	; 0x17c
    216e:	add.w	r3, r5, #1064	; 0x428
		{ isConnected = false;
		  connect(); }
    2172:	add.w	r0, r9, #380	; 0x17c
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    2176:	str.w	r3, [r9, #384]	; 0x180
    217a:	strb.w	fp, [r9, #388]	; 0x184
    217e:	strb.w	r6, [r9, #389]	; 0x185
    2182:	str.w	fp, [r9, #392]	; 0x188
		{ isConnected = false;
    2186:	strb.w	fp, [r9, #396]	; 0x18c
		  connect(); }
    218a:	bl	9748 <AudioConnection::connect()>
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    218e:	addw	r3, r4, #1380	; 0x564
    2192:	str.w	r3, [r9, #400]	; 0x190
    2196:	add.w	r3, r5, #224	; 0xe0
		{ isConnected = false;
		  connect(); }
    219a:	add.w	r0, r9, #400	; 0x190
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    219e:	str.w	r3, [r9, #404]	; 0x194
    21a2:	strb.w	fp, [r9, #408]	; 0x198
    21a6:	strb.w	fp, [r9, #409]	; 0x199
    21aa:	str.w	fp, [r9, #412]	; 0x19c
		{ isConnected = false;
    21ae:	strb.w	fp, [r9, #416]	; 0x1a0
		  connect(); }
    21b2:	bl	9748 <AudioConnection::connect()>
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    21b6:	add.w	r3, r4, #1472	; 0x5c0
    21ba:	add.w	r2, r5, #224	; 0xe0
		{ isConnected = false;
		  connect(); }
    21be:	add.w	r0, r9, #420	; 0x1a4
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    21c2:	str.w	r2, [r9, #424]	; 0x1a8
    21c6:	str.w	r3, [r9, #420]	; 0x1a4
    21ca:	strb.w	fp, [r9, #428]	; 0x1ac
    21ce:	strb.w	r8, [r9, #429]	; 0x1ad
    21d2:	str.w	fp, [r9, #432]	; 0x1b0
		{ isConnected = false;
    21d6:	strb.w	fp, [r9, #436]	; 0x1b4
		  connect(); }
    21da:	bl	9748 <AudioConnection::connect()>
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    21de:	addw	r3, r4, #1564	; 0x61c
    21e2:	add.w	r2, r5, #224	; 0xe0
		{ isConnected = false;
		  connect(); }
    21e6:	add.w	r0, r9, #440	; 0x1b8
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    21ea:	str.w	r2, [r9, #444]	; 0x1bc
    21ee:	str.w	r3, [r9, #440]	; 0x1b8
    21f2:	strb.w	fp, [r9, #448]	; 0x1c0
    21f6:	strb.w	r7, [r9, #449]	; 0x1c1
    21fa:	str.w	fp, [r9, #452]	; 0x1c4
		{ isConnected = false;
    21fe:	strb.w	fp, [r9, #456]	; 0x1c8
		  connect(); }
    2202:	bl	9748 <AudioConnection::connect()>
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    2206:	add.w	r2, r5, #224	; 0xe0
    220a:	add.w	r3, r4, #1656	; 0x678
    220e:	str.w	r2, [r9, #464]	; 0x1d0
		{ isConnected = false;
		  connect(); }
    2212:	add.w	r0, r9, #460	; 0x1cc
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    2216:	str.w	r3, [r9, #460]	; 0x1cc
    221a:	strb.w	fp, [r9, #468]	; 0x1d4
    221e:	strb.w	r6, [r9, #469]	; 0x1d5
    2222:	str.w	fp, [r9, #472]	; 0x1d8
		{ isConnected = false;
    2226:	strb.w	fp, [r9, #476]	; 0x1dc
		  connect(); }
    222a:	bl	9748 <AudioConnection::connect()>
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    222e:	add.w	r3, r5, #224	; 0xe0
    2232:	str.w	r3, [r9, #480]	; 0x1e0
    2236:	add.w	r3, r5, #1008	; 0x3f0
		{ isConnected = false;
		  connect(); }
    223a:	add.w	r0, r9, #480	; 0x1e0
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    223e:	str.w	r3, [r9, #484]	; 0x1e4
    2242:	strb.w	fp, [r9, #488]	; 0x1e8
    2246:	strb.w	fp, [r9, #489]	; 0x1e9
    224a:	str.w	fp, [r9, #492]	; 0x1ec
		{ isConnected = false;
    224e:	strb.w	fp, [r9, #496]	; 0x1f0
		  connect(); }
    2252:	bl	9748 <AudioConnection::connect()>
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    2256:	addw	r3, r4, #1748	; 0x6d4
    225a:	str.w	r3, [r9, #500]	; 0x1f4
    225e:	add.w	r3, r5, #280	; 0x118
		{ isConnected = false;
		  connect(); }
    2262:	add.w	r0, r9, #500	; 0x1f4
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    2266:	str.w	r3, [r9, #504]	; 0x1f8
    226a:	b.n	2278 <_GLOBAL__sub_I_usb_in+0xe44>
    226c:	.word	0x20010124
    2270:	.word	0x2001209c
    2274:	.word	0x20011924
    2278:	strb.w	fp, [r9, #508]	; 0x1fc
    227c:	strb.w	fp, [r9, #509]	; 0x1fd
    2280:	str.w	fp, [r9, #512]	; 0x200
		{ isConnected = false;
    2284:	strb.w	fp, [r9, #516]	; 0x204
		  connect(); }
    2288:	bl	9748 <AudioConnection::connect()>
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    228c:	add.w	r3, r4, #1840	; 0x730
    2290:	add.w	r2, r5, #280	; 0x118
		{ isConnected = false;
		  connect(); }
    2294:	add.w	r0, r9, #520	; 0x208
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    2298:	str.w	r2, [r9, #524]	; 0x20c
    229c:	str.w	r3, [r9, #520]	; 0x208
    22a0:	strb.w	fp, [r9, #528]	; 0x210
    22a4:	strb.w	r8, [r9, #529]	; 0x211
    22a8:	str.w	fp, [r9, #532]	; 0x214
		{ isConnected = false;
    22ac:	strb.w	fp, [r9, #536]	; 0x218
		  connect(); }
    22b0:	bl	9748 <AudioConnection::connect()>
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    22b4:	addw	r3, r4, #1932	; 0x78c
    22b8:	add.w	r2, r5, #280	; 0x118
		{ isConnected = false;
		  connect(); }
    22bc:	add.w	r0, r9, #540	; 0x21c
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    22c0:	str.w	r2, [r9, #544]	; 0x220
    22c4:	str.w	r3, [r9, #540]	; 0x21c
    22c8:	strb.w	fp, [r9, #548]	; 0x224
    22cc:	strb.w	r7, [r9, #549]	; 0x225
    22d0:	str.w	fp, [r9, #552]	; 0x228
		{ isConnected = false;
    22d4:	strb.w	fp, [r9, #556]	; 0x22c
		  connect(); }
    22d8:	bl	9748 <AudioConnection::connect()>
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    22dc:	add.w	r2, r5, #280	; 0x118
    22e0:	add.w	r3, r4, #2024	; 0x7e8
    22e4:	str.w	r2, [r9, #564]	; 0x234
		{ isConnected = false;
		  connect(); }
    22e8:	add.w	r0, r9, #560	; 0x230
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    22ec:	str.w	r3, [r9, #560]	; 0x230
    22f0:	strb.w	fp, [r9, #568]	; 0x238
    22f4:	strb.w	r6, [r9, #569]	; 0x239
    22f8:	str.w	fp, [r9, #572]	; 0x23c
		{ isConnected = false;
    22fc:	strb.w	fp, [r9, #576]	; 0x240
		  connect(); }
    2300:	bl	9748 <AudioConnection::connect()>
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    2304:	add.w	r3, r5, #280	; 0x118
    2308:	str.w	r3, [r9, #580]	; 0x244
    230c:	add.w	r3, r5, #1008	; 0x3f0
		{ isConnected = false;
		  connect(); }
    2310:	add.w	r0, r9, #580	; 0x244
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    2314:	str.w	r3, [r9, #584]	; 0x248
    2318:	strb.w	fp, [r9, #588]	; 0x24c
    231c:	strb.w	r8, [r9, #589]	; 0x24d
    2320:	str.w	fp, [r9, #592]	; 0x250
		{ isConnected = false;
    2324:	strb.w	fp, [r9, #596]	; 0x254
		  connect(); }
    2328:	bl	9748 <AudioConnection::connect()>
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    232c:	addw	r3, r4, #2116	; 0x844
    2330:	str.w	r3, [r9, #600]	; 0x258
    2334:	add.w	r3, r5, #336	; 0x150
		{ isConnected = false;
		  connect(); }
    2338:	add.w	r0, r9, #600	; 0x258
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    233c:	str.w	r3, [r9, #604]	; 0x25c
    2340:	strb.w	fp, [r9, #608]	; 0x260
    2344:	strb.w	fp, [r9, #609]	; 0x261
    2348:	str.w	fp, [r9, #612]	; 0x264
		{ isConnected = false;
    234c:	strb.w	fp, [r9, #616]	; 0x268
		  connect(); }
    2350:	bl	9748 <AudioConnection::connect()>
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    2354:	add.w	r3, r4, #2208	; 0x8a0
    2358:	add.w	r2, r5, #336	; 0x150
		{ isConnected = false;
		  connect(); }
    235c:	add.w	r0, r9, #620	; 0x26c
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    2360:	str.w	r2, [r9, #624]	; 0x270
    2364:	str.w	r3, [r9, #620]	; 0x26c
    2368:	strb.w	fp, [r9, #628]	; 0x274
    236c:	strb.w	r8, [r9, #629]	; 0x275
    2370:	str.w	fp, [r9, #632]	; 0x278
		{ isConnected = false;
    2374:	strb.w	fp, [r9, #636]	; 0x27c
		  connect(); }
    2378:	bl	9748 <AudioConnection::connect()>
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    237c:	addw	r3, r4, #2300	; 0x8fc
    2380:	add.w	r2, r5, #336	; 0x150
		{ isConnected = false;
		  connect(); }
    2384:	add.w	r0, r9, #640	; 0x280
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    2388:	str.w	r2, [r9, #644]	; 0x284
    238c:	str.w	r3, [r9, #640]	; 0x280
    2390:	strb.w	fp, [r9, #648]	; 0x288
    2394:	strb.w	r7, [r9, #649]	; 0x289
    2398:	str.w	fp, [r9, #652]	; 0x28c
		{ isConnected = false;
    239c:	strb.w	fp, [r9, #656]	; 0x290
		  connect(); }
    23a0:	bl	9748 <AudioConnection::connect()>
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    23a4:	add.w	r2, r5, #336	; 0x150
    23a8:	addw	r3, r4, #2392	; 0x958
    23ac:	str.w	r2, [r9, #664]	; 0x298
		{ isConnected = false;
		  connect(); }
    23b0:	add.w	r0, r9, #660	; 0x294
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    23b4:	str.w	r3, [r9, #660]	; 0x294
    23b8:	strb.w	fp, [r9, #668]	; 0x29c
    23bc:	strb.w	r6, [r9, #669]	; 0x29d
    23c0:	str.w	fp, [r9, #672]	; 0x2a0
		{ isConnected = false;
    23c4:	strb.w	fp, [r9, #676]	; 0x2a4
		  connect(); }
    23c8:	bl	9748 <AudioConnection::connect()>
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    23cc:	add.w	r3, r5, #336	; 0x150
    23d0:	str.w	r3, [r9, #680]	; 0x2a8
    23d4:	add.w	r3, r5, #1008	; 0x3f0
		{ isConnected = false;
		  connect(); }
    23d8:	add.w	r0, r9, #680	; 0x2a8
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    23dc:	str.w	r3, [r9, #684]	; 0x2ac
    23e0:	strb.w	fp, [r9, #688]	; 0x2b0
    23e4:	strb.w	r7, [r9, #689]	; 0x2b1
    23e8:	str.w	fp, [r9, #692]	; 0x2b4
		{ isConnected = false;
    23ec:	strb.w	fp, [r9, #696]	; 0x2b8
		  connect(); }
    23f0:	bl	9748 <AudioConnection::connect()>
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    23f4:	addw	r3, r4, #2484	; 0x9b4
    23f8:	str.w	r3, [r9, #700]	; 0x2bc
    23fc:	add.w	r3, r5, #392	; 0x188
		{ isConnected = false;
		  connect(); }
    2400:	add.w	r0, r9, #700	; 0x2bc
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    2404:	str.w	r3, [r9, #704]	; 0x2c0
    2408:	strb.w	fp, [r9, #708]	; 0x2c4
    240c:	strb.w	fp, [r9, #709]	; 0x2c5
    2410:	str.w	fp, [r9, #712]	; 0x2c8
		{ isConnected = false;
    2414:	strb.w	fp, [r9, #716]	; 0x2cc
		  connect(); }
    2418:	bl	9748 <AudioConnection::connect()>
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    241c:	add.w	r3, r4, #2576	; 0xa10
    2420:	add.w	r2, r5, #392	; 0x188
		{ isConnected = false;
		  connect(); }
    2424:	add.w	r0, r9, #720	; 0x2d0
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    2428:	str.w	r2, [r9, #724]	; 0x2d4
    242c:	str.w	r3, [r9, #720]	; 0x2d0
    2430:	strb.w	fp, [r9, #728]	; 0x2d8
    2434:	strb.w	r8, [r9, #729]	; 0x2d9
    2438:	str.w	fp, [r9, #732]	; 0x2dc
		{ isConnected = false;
    243c:	strb.w	fp, [r9, #736]	; 0x2e0
		  connect(); }
    2440:	bl	9748 <AudioConnection::connect()>
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    2444:	addw	r2, r4, #2668	; 0xa6c
    2448:	add.w	r3, r5, #392	; 0x188
		{ isConnected = false;
		  connect(); }
    244c:	add.w	r0, r9, #740	; 0x2e4
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    2450:	str.w	r3, [r9, #744]	; 0x2e8
    2454:	str.w	r2, [r9, #740]	; 0x2e4
    2458:	strb.w	fp, [r9, #748]	; 0x2ec
    245c:	strb.w	r7, [r9, #749]	; 0x2ed
    2460:	str.w	fp, [r9, #752]	; 0x2f0
		{ isConnected = false;
    2464:	strb.w	fp, [r9, #756]	; 0x2f4
		  connect(); }
    2468:	bl	9748 <AudioConnection::connect()>
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    246c:	addw	r2, r4, #2760	; 0xac8
    2470:	add.w	r3, r5, #392	; 0x188
    2474:	str.w	r2, [r9, #760]	; 0x2f8
		{ isConnected = false;
		  connect(); }
    2478:	add.w	r0, r9, #760	; 0x2f8
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    247c:	str.w	r3, [r9, #764]	; 0x2fc
    2480:	strb.w	fp, [r9, #768]	; 0x300
    2484:	strb.w	r6, [r9, #769]	; 0x301
    2488:	str.w	fp, [r9, #772]	; 0x304
		{ isConnected = false;
    248c:	strb.w	fp, [r9, #776]	; 0x308
		  connect(); }
    2490:	bl	9748 <AudioConnection::connect()>
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    2494:	add.w	r3, r5, #392	; 0x188
    2498:	str.w	r3, [r9, #780]	; 0x30c
    249c:	add.w	r3, r5, #1008	; 0x3f0
    24a0:	str.w	r3, [r9, #784]	; 0x310
		{ isConnected = false;
		  connect(); }
    24a4:	add.w	r0, r9, #780	; 0x30c
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    24a8:	strb.w	fp, [r9, #788]	; 0x314
    24ac:	strb.w	r6, [r9, #789]	; 0x315
    24b0:	str.w	fp, [r9, #792]	; 0x318
		{ isConnected = false;
    24b4:	strb.w	fp, [r9, #796]	; 0x31c
		  connect(); }
    24b8:	bl	9748 <AudioConnection::connect()>
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    24bc:	add.w	sl, r5, #448	; 0x1c0
    24c0:	addw	r2, r4, #2852	; 0xb24
		{ isConnected = false;
		  connect(); }
    24c4:	add.w	r0, r9, #800	; 0x320
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    24c8:	str.w	r2, [r9, #800]	; 0x320
    24cc:	str.w	sl, [r9, #804]	; 0x324
    24d0:	strb.w	fp, [r9, #808]	; 0x328
    24d4:	strb.w	fp, [r9, #809]	; 0x329
    24d8:	str.w	fp, [r9, #812]	; 0x32c
		{ isConnected = false;
    24dc:	strb.w	fp, [r9, #816]	; 0x330
		  connect(); }
    24e0:	bl	9748 <AudioConnection::connect()>
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    24e4:	add.w	r2, r4, #2944	; 0xb80
		{ isConnected = false;
		  connect(); }
    24e8:	add.w	r0, r9, #820	; 0x334
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    24ec:	str.w	sl, [r9, #824]	; 0x338
    24f0:	str.w	r2, [r9, #820]	; 0x334
    24f4:	strb.w	fp, [r9, #828]	; 0x33c
    24f8:	strb.w	r8, [r9, #829]	; 0x33d
    24fc:	str.w	fp, [r9, #832]	; 0x340
		{ isConnected = false;
    2500:	strb.w	fp, [r9, #836]	; 0x344
		  connect(); }
    2504:	bl	9748 <AudioConnection::connect()>
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    2508:	addw	r2, r4, #3036	; 0xbdc
		{ isConnected = false;
		  connect(); }
    250c:	add.w	r0, r9, #840	; 0x348
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    2510:	str.w	sl, [r9, #844]	; 0x34c
    2514:	str.w	r2, [r9, #840]	; 0x348
    2518:	strb.w	fp, [r9, #848]	; 0x350
    251c:	strb.w	r7, [r9, #849]	; 0x351
    2520:	str.w	fp, [r9, #852]	; 0x354
		{ isConnected = false;
    2524:	strb.w	fp, [r9, #856]	; 0x358
		  connect(); }
    2528:	bl	9748 <AudioConnection::connect()>
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    252c:	addw	r2, r4, #3128	; 0xc38
    2530:	str.w	r2, [r9, #860]	; 0x35c
		{ isConnected = false;
		  connect(); }
    2534:	add.w	r0, r9, #860	; 0x35c
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    2538:	str.w	sl, [r9, #864]	; 0x360
    253c:	strb.w	fp, [r9, #868]	; 0x364
    2540:	strb.w	r6, [r9, #869]	; 0x365
    2544:	str.w	fp, [r9, #872]	; 0x368
		{ isConnected = false;
    2548:	strb.w	fp, [r9, #876]	; 0x36c
		  connect(); }
    254c:	bl	9748 <AudioConnection::connect()>
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    2550:	add.w	r3, r5, #952	; 0x3b8
    2554:	str.w	r3, [r9, #884]	; 0x374
		{ isConnected = false;
		  connect(); }
    2558:	add.w	r0, r9, #880	; 0x370
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    255c:	str.w	sl, [r9, #880]	; 0x370
    2560:	strb.w	fp, [r9, #888]	; 0x378
    2564:	strb.w	fp, [r9, #889]	; 0x379
    2568:	str.w	fp, [r9, #892]	; 0x37c
		{ isConnected = false;
    256c:	strb.w	fp, [r9, #896]	; 0x380
		  connect(); }
    2570:	bl	9748 <AudioConnection::connect()>
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    2574:	add.w	sl, r5, #504	; 0x1f8
    2578:	addw	r2, r4, #3220	; 0xc94
		{ isConnected = false;
		  connect(); }
    257c:	add.w	r0, r9, #900	; 0x384
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    2580:	str.w	r2, [r9, #900]	; 0x384
    2584:	str.w	sl, [r9, #904]	; 0x388
    2588:	strb.w	fp, [r9, #908]	; 0x38c
    258c:	strb.w	fp, [r9, #909]	; 0x38d
    2590:	str.w	fp, [r9, #912]	; 0x390
		{ isConnected = false;
    2594:	strb.w	fp, [r9, #916]	; 0x394
		  connect(); }
    2598:	bl	9748 <AudioConnection::connect()>
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    259c:	add.w	r2, r4, #3312	; 0xcf0
		{ isConnected = false;
		  connect(); }
    25a0:	add.w	r0, r9, #920	; 0x398
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    25a4:	str.w	sl, [r9, #924]	; 0x39c
    25a8:	str.w	r2, [r9, #920]	; 0x398
    25ac:	strb.w	fp, [r9, #928]	; 0x3a0
    25b0:	strb.w	r8, [r9, #929]	; 0x3a1
    25b4:	str.w	fp, [r9, #932]	; 0x3a4
		{ isConnected = false;
    25b8:	strb.w	fp, [r9, #936]	; 0x3a8
		  connect(); }
    25bc:	bl	9748 <AudioConnection::connect()>
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    25c0:	addw	r2, r4, #3404	; 0xd4c
		{ isConnected = false;
		  connect(); }
    25c4:	add.w	r0, r9, #940	; 0x3ac
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    25c8:	str.w	sl, [r9, #944]	; 0x3b0
    25cc:	str.w	r2, [r9, #940]	; 0x3ac
    25d0:	strb.w	fp, [r9, #948]	; 0x3b4
    25d4:	strb.w	r7, [r9, #949]	; 0x3b5
    25d8:	str.w	fp, [r9, #952]	; 0x3b8
		{ isConnected = false;
    25dc:	strb.w	fp, [r9, #956]	; 0x3bc
		  connect(); }
    25e0:	bl	9748 <AudioConnection::connect()>
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    25e4:	addw	r2, r4, #3496	; 0xda8
    25e8:	str.w	r2, [r9, #960]	; 0x3c0
		{ isConnected = false;
		  connect(); }
    25ec:	add.w	r0, r9, #960	; 0x3c0
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    25f0:	str.w	sl, [r9, #964]	; 0x3c4
    25f4:	strb.w	fp, [r9, #968]	; 0x3c8
    25f8:	strb.w	r6, [r9, #969]	; 0x3c9
    25fc:	str.w	fp, [r9, #972]	; 0x3cc
		{ isConnected = false;
    2600:	strb.w	fp, [r9, #976]	; 0x3d0
		  connect(); }
    2604:	bl	9748 <AudioConnection::connect()>
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    2608:	add.w	r3, r5, #952	; 0x3b8
    260c:	str.w	r3, [r9, #984]	; 0x3d8
		{ isConnected = false;
		  connect(); }
    2610:	add.w	r0, r9, #980	; 0x3d4
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    2614:	str.w	sl, [r9, #980]	; 0x3d4
    2618:	strb.w	fp, [r9, #988]	; 0x3dc
    261c:	strb.w	r8, [r9, #989]	; 0x3dd
    2620:	str.w	fp, [r9, #992]	; 0x3e0
		{ isConnected = false;
    2624:	strb.w	fp, [r9, #996]	; 0x3e4
		  connect(); }
    2628:	bl	9748 <AudioConnection::connect()>
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    262c:	add.w	sl, r5, #560	; 0x230
    2630:	addw	r2, r4, #3588	; 0xe04
		{ isConnected = false;
		  connect(); }
    2634:	add.w	r0, r9, #1000	; 0x3e8
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    2638:	str.w	r2, [r9, #1000]	; 0x3e8
    263c:	str.w	sl, [r9, #1004]	; 0x3ec
    2640:	strb.w	fp, [r9, #1008]	; 0x3f0
    2644:	strb.w	fp, [r9, #1009]	; 0x3f1
    2648:	str.w	fp, [r9, #1012]	; 0x3f4
		{ isConnected = false;
    264c:	strb.w	fp, [r9, #1016]	; 0x3f8
		  connect(); }
    2650:	bl	9748 <AudioConnection::connect()>
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    2654:	add.w	r2, r4, #3680	; 0xe60
		{ isConnected = false;
		  connect(); }
    2658:	add.w	r0, r9, #1020	; 0x3fc
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    265c:	str.w	sl, [r9, #1024]	; 0x400
    2660:	str.w	r2, [r9, #1020]	; 0x3fc
    2664:	strb.w	fp, [r9, #1028]	; 0x404
    2668:	strb.w	r8, [r9, #1029]	; 0x405
    266c:	str.w	fp, [r9, #1032]	; 0x408
		{ isConnected = false;
    2670:	strb.w	fp, [r9, #1036]	; 0x40c
		  connect(); }
    2674:	bl	9748 <AudioConnection::connect()>
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    2678:	addw	r2, r4, #3772	; 0xebc
		{ isConnected = false;
		  connect(); }
    267c:	add.w	r0, r9, #1040	; 0x410
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    2680:	str.w	sl, [r9, #1044]	; 0x414
    2684:	str.w	r2, [r9, #1040]	; 0x410
    2688:	strb.w	fp, [r9, #1048]	; 0x418
    268c:	strb.w	r7, [r9, #1049]	; 0x419
    2690:	str.w	fp, [r9, #1052]	; 0x41c
		{ isConnected = false;
    2694:	strb.w	fp, [r9, #1056]	; 0x420
		  connect(); }
    2698:	bl	9748 <AudioConnection::connect()>
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    269c:	addw	r2, r4, #3864	; 0xf18
    26a0:	str.w	r2, [r9, #1060]	; 0x424
		{ isConnected = false;
		  connect(); }
    26a4:	addw	r0, r9, #1060	; 0x424
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    26a8:	str.w	sl, [r9, #1064]	; 0x428
    26ac:	strb.w	fp, [r9, #1068]	; 0x42c
    26b0:	strb.w	r6, [r9, #1069]	; 0x42d
    26b4:	str.w	fp, [r9, #1072]	; 0x430
		{ isConnected = false;
    26b8:	strb.w	fp, [r9, #1076]	; 0x434
		  connect(); }
    26bc:	bl	9748 <AudioConnection::connect()>
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    26c0:	add.w	r3, r5, #952	; 0x3b8
    26c4:	str.w	r3, [r9, #1084]	; 0x43c
		{ isConnected = false;
		  connect(); }
    26c8:	add.w	r0, r9, #1080	; 0x438
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    26cc:	str.w	sl, [r9, #1080]	; 0x438
    26d0:	strb.w	fp, [r9, #1088]	; 0x440
    26d4:	strb.w	r7, [r9, #1089]	; 0x441
    26d8:	str.w	fp, [r9, #1092]	; 0x444
		{ isConnected = false;
    26dc:	strb.w	fp, [r9, #1096]	; 0x448
		  connect(); }
    26e0:	bl	9748 <AudioConnection::connect()>
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    26e4:	add.w	sl, r5, #616	; 0x268
    26e8:	addw	r2, r4, #3956	; 0xf74
		{ isConnected = false;
		  connect(); }
    26ec:	addw	r0, r9, #1100	; 0x44c
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    26f0:	str.w	r2, [r9, #1100]	; 0x44c
    26f4:	str.w	sl, [r9, #1104]	; 0x450
    26f8:	strb.w	fp, [r9, #1108]	; 0x454
    26fc:	strb.w	fp, [r9, #1109]	; 0x455
    2700:	str.w	fp, [r9, #1112]	; 0x458
		{ isConnected = false;
    2704:	strb.w	fp, [r9, #1116]	; 0x45c
		  connect(); }
    2708:	bl	9748 <AudioConnection::connect()>
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    270c:	add.w	r2, r4, #4048	; 0xfd0
		{ isConnected = false;
		  connect(); }
    2710:	add.w	r0, r9, #1120	; 0x460
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    2714:	str.w	sl, [r9, #1124]	; 0x464
    2718:	str.w	r2, [r9, #1120]	; 0x460
    271c:	strb.w	fp, [r9, #1128]	; 0x468
    2720:	strb.w	r8, [r9, #1129]	; 0x469
    2724:	str.w	fp, [r9, #1132]	; 0x46c
		{ isConnected = false;
    2728:	strb.w	fp, [r9, #1136]	; 0x470
		  connect(); }
    272c:	bl	9748 <AudioConnection::connect()>
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    2730:	ldr	r2, [pc, #984]	; (2b0c <_GLOBAL__sub_I_usb_in+0x16d8>)
    2732:	str.w	sl, [r9, #1144]	; 0x478
		{ isConnected = false;
		  connect(); }
    2736:	addw	r0, r9, #1140	; 0x474
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    273a:	str.w	r2, [r9, #1140]	; 0x474
    273e:	strb.w	fp, [r9, #1148]	; 0x47c
    2742:	strb.w	r7, [r9, #1149]	; 0x47d
    2746:	str.w	fp, [r9, #1152]	; 0x480
		{ isConnected = false;
    274a:	strb.w	fp, [r9, #1156]	; 0x484
		  connect(); }
    274e:	bl	9748 <AudioConnection::connect()>
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    2752:	ldr	r2, [pc, #956]	; (2b10 <_GLOBAL__sub_I_usb_in+0x16dc>)
    2754:	str.w	r2, [r9, #1160]	; 0x488
    2758:	str.w	sl, [r9, #1164]	; 0x48c
		{ isConnected = false;
		  connect(); }
    275c:	add.w	r0, r9, #1160	; 0x488
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    2760:	strb.w	fp, [r9, #1168]	; 0x490
    2764:	strb.w	r6, [r9, #1169]	; 0x491
    2768:	str.w	fp, [r9, #1172]	; 0x494
		{ isConnected = false;
    276c:	strb.w	fp, [r9, #1176]	; 0x498
		  connect(); }
    2770:	bl	9748 <AudioConnection::connect()>
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    2774:	add.w	r3, r5, #952	; 0x3b8
    2778:	str.w	r3, [r9, #1184]	; 0x4a0
		{ isConnected = false;
		  connect(); }
    277c:	addw	r0, r9, #1180	; 0x49c
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    2780:	str.w	sl, [r9, #1180]	; 0x49c
    2784:	strb.w	fp, [r9, #1188]	; 0x4a4
    2788:	strb.w	r6, [r9, #1189]	; 0x4a5
    278c:	str.w	fp, [r9, #1192]	; 0x4a8
		{ isConnected = false;
    2790:	strb.w	fp, [r9, #1196]	; 0x4ac
		  connect(); }
    2794:	bl	9748 <AudioConnection::connect()>
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    2798:	add.w	sl, r5, #672	; 0x2a0
    279c:	ldr	r2, [pc, #884]	; (2b14 <_GLOBAL__sub_I_usb_in+0x16e0>)
    279e:	str.w	r2, [r9, #1200]	; 0x4b0
		{ isConnected = false;
		  connect(); }
    27a2:	add.w	r0, r9, #1200	; 0x4b0
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    27a6:	str.w	sl, [r9, #1204]	; 0x4b4
    27aa:	strb.w	fp, [r9, #1208]	; 0x4b8
    27ae:	strb.w	fp, [r9, #1209]	; 0x4b9
    27b2:	str.w	fp, [r9, #1212]	; 0x4bc
		{ isConnected = false;
    27b6:	strb.w	fp, [r9, #1216]	; 0x4c0
		  connect(); }
    27ba:	bl	9748 <AudioConnection::connect()>
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    27be:	add.w	r2, r4, #4416	; 0x1140
		{ isConnected = false;
		  connect(); }
    27c2:	addw	r0, r9, #1220	; 0x4c4
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    27c6:	str.w	sl, [r9, #1224]	; 0x4c8
    27ca:	str.w	r2, [r9, #1220]	; 0x4c4
    27ce:	strb.w	fp, [r9, #1228]	; 0x4cc
    27d2:	strb.w	r8, [r9, #1229]	; 0x4cd
    27d6:	str.w	fp, [r9, #1232]	; 0x4d0
		{ isConnected = false;
    27da:	strb.w	fp, [r9, #1236]	; 0x4d4
		  connect(); }
    27de:	bl	9748 <AudioConnection::connect()>
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    27e2:	ldr	r2, [pc, #820]	; (2b18 <_GLOBAL__sub_I_usb_in+0x16e4>)
    27e4:	str.w	sl, [r9, #1244]	; 0x4dc
		{ isConnected = false;
		  connect(); }
    27e8:	add.w	r0, r9, #1240	; 0x4d8
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    27ec:	str.w	r2, [r9, #1240]	; 0x4d8
    27f0:	strb.w	fp, [r9, #1248]	; 0x4e0
    27f4:	strb.w	r7, [r9, #1249]	; 0x4e1
    27f8:	str.w	fp, [r9, #1252]	; 0x4e4
		{ isConnected = false;
    27fc:	strb.w	fp, [r9, #1256]	; 0x4e8
		  connect(); }
    2800:	bl	9748 <AudioConnection::connect()>
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    2804:	ldr	r2, [pc, #788]	; (2b1c <_GLOBAL__sub_I_usb_in+0x16e8>)
    2806:	str.w	r2, [r9, #1260]	; 0x4ec
    280a:	str.w	sl, [r9, #1264]	; 0x4f0
		{ isConnected = false;
		  connect(); }
    280e:	addw	r0, r9, #1260	; 0x4ec
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    2812:	strb.w	fp, [r9, #1268]	; 0x4f4
    2816:	strb.w	r6, [r9, #1269]	; 0x4f5
    281a:	str.w	fp, [r9, #1272]	; 0x4f8
		{ isConnected = false;
    281e:	strb.w	fp, [r9, #1276]	; 0x4fc
		  connect(); }
    2822:	bl	9748 <AudioConnection::connect()>
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    2826:	add.w	r3, r5, #896	; 0x380
    282a:	str.w	r3, [r9, #1284]	; 0x504
		{ isConnected = false;
		  connect(); }
    282e:	add.w	r0, r9, #1280	; 0x500
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    2832:	str.w	sl, [r9, #1280]	; 0x500
    2836:	strb.w	fp, [r9, #1288]	; 0x508
    283a:	strb.w	fp, [r9, #1289]	; 0x509
    283e:	str.w	fp, [r9, #1292]	; 0x50c
		{ isConnected = false;
    2842:	strb.w	fp, [r9, #1296]	; 0x510
		  connect(); }
    2846:	bl	9748 <AudioConnection::connect()>
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    284a:	add.w	sl, r5, #728	; 0x2d8
    284e:	ldr	r2, [pc, #720]	; (2b20 <_GLOBAL__sub_I_usb_in+0x16ec>)
    2850:	str.w	r2, [r9, #1300]	; 0x514
		{ isConnected = false;
		  connect(); }
    2854:	addw	r0, r9, #1300	; 0x514
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    2858:	str.w	sl, [r9, #1304]	; 0x518
    285c:	strb.w	fp, [r9, #1308]	; 0x51c
    2860:	strb.w	fp, [r9, #1309]	; 0x51d
    2864:	str.w	fp, [r9, #1312]	; 0x520
		{ isConnected = false;
    2868:	strb.w	fp, [r9, #1316]	; 0x524
		  connect(); }
    286c:	bl	9748 <AudioConnection::connect()>
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    2870:	ldr	r2, [pc, #688]	; (2b24 <_GLOBAL__sub_I_usb_in+0x16f0>)
    2872:	str.w	sl, [r9, #1324]	; 0x52c
		{ isConnected = false;
		  connect(); }
    2876:	add.w	r0, r9, #1320	; 0x528
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    287a:	str.w	r2, [r9, #1320]	; 0x528
    287e:	strb.w	fp, [r9, #1328]	; 0x530
    2882:	strb.w	r8, [r9, #1329]	; 0x531
    2886:	str.w	fp, [r9, #1332]	; 0x534
		{ isConnected = false;
    288a:	strb.w	fp, [r9, #1336]	; 0x538
		  connect(); }
    288e:	bl	9748 <AudioConnection::connect()>
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    2892:	ldr	r2, [pc, #660]	; (2b28 <_GLOBAL__sub_I_usb_in+0x16f4>)
    2894:	str.w	sl, [r9, #1344]	; 0x540
		{ isConnected = false;
		  connect(); }
    2898:	addw	r0, r9, #1340	; 0x53c
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    289c:	str.w	r2, [r9, #1340]	; 0x53c
    28a0:	strb.w	fp, [r9, #1348]	; 0x544
    28a4:	strb.w	r7, [r9, #1349]	; 0x545
    28a8:	str.w	fp, [r9, #1352]	; 0x548
		{ isConnected = false;
    28ac:	strb.w	fp, [r9, #1356]	; 0x54c
		  connect(); }
    28b0:	bl	9748 <AudioConnection::connect()>
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    28b4:	ldr	r2, [pc, #628]	; (2b2c <_GLOBAL__sub_I_usb_in+0x16f8>)
    28b6:	str.w	r2, [r9, #1360]	; 0x550
    28ba:	str.w	sl, [r9, #1364]	; 0x554
		{ isConnected = false;
		  connect(); }
    28be:	add.w	r0, r9, #1360	; 0x550
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    28c2:	strb.w	fp, [r9, #1368]	; 0x558
    28c6:	strb.w	r6, [r9, #1369]	; 0x559
    28ca:	str.w	fp, [r9, #1372]	; 0x55c
		{ isConnected = false;
    28ce:	strb.w	fp, [r9, #1376]	; 0x560
		  connect(); }
    28d2:	bl	9748 <AudioConnection::connect()>
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    28d6:	add.w	r3, r5, #896	; 0x380
    28da:	str.w	r3, [r9, #1384]	; 0x568
		{ isConnected = false;
		  connect(); }
    28de:	addw	r0, r9, #1380	; 0x564
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    28e2:	str.w	sl, [r9, #1380]	; 0x564
    28e6:	strb.w	fp, [r9, #1388]	; 0x56c
    28ea:	strb.w	r8, [r9, #1389]	; 0x56d
    28ee:	str.w	fp, [r9, #1392]	; 0x570
		{ isConnected = false;
    28f2:	strb.w	fp, [r9, #1396]	; 0x574
		  connect(); }
    28f6:	bl	9748 <AudioConnection::connect()>
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    28fa:	add.w	sl, r5, #784	; 0x310
    28fe:	ldr	r2, [pc, #560]	; (2b30 <_GLOBAL__sub_I_usb_in+0x16fc>)
    2900:	str.w	r2, [r9, #1400]	; 0x578
    2904:	add.w	r4, r4, #5152	; 0x1420
		{ isConnected = false;
		  connect(); }
    2908:	add.w	r0, r9, #1400	; 0x578
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    290c:	strb.w	fp, [r9, #1408]	; 0x580
    2910:	strb.w	fp, [r9, #1409]	; 0x581
    2914:	str.w	fp, [r9, #1412]	; 0x584
		{ isConnected = false;
    2918:	strb.w	fp, [r9, #1416]	; 0x588
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    291c:	str.w	sl, [r9, #1404]	; 0x57c
		{ isConnected = false;
		  connect(); }
    2920:	bl	9748 <AudioConnection::connect()>
    2924:	addw	r0, r9, #1420	; 0x58c
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    2928:	str.w	r4, [r9, #1420]	; 0x58c
    292c:	str.w	sl, [r9, #1424]	; 0x590
    2930:	strb.w	fp, [r9, #1428]	; 0x594
    2934:	strb.w	r8, [r9, #1429]	; 0x595
    2938:	str.w	fp, [r9, #1432]	; 0x598
		{ isConnected = false;
    293c:	strb.w	fp, [r9, #1436]	; 0x59c
		  connect(); }
    2940:	bl	9748 <AudioConnection::connect()>
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    2944:	add.w	r2, r4, #92	; 0x5c
		{ isConnected = false;
		  connect(); }
    2948:	add.w	r0, r9, #1440	; 0x5a0
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    294c:	str.w	r2, [r9, #1440]	; 0x5a0
    2950:	str.w	sl, [r9, #1444]	; 0x5a4
    2954:	strb.w	fp, [r9, #1448]	; 0x5a8
    2958:	strb.w	r7, [r9, #1449]	; 0x5a9
    295c:	str.w	fp, [r9, #1452]	; 0x5ac
		{ isConnected = false;
    2960:	strb.w	fp, [r9, #1456]	; 0x5b0
		  connect(); }
    2964:	bl	9748 <AudioConnection::connect()>
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    2968:	add.w	r2, r4, #184	; 0xb8
    296c:	str.w	r2, [r9, #1460]	; 0x5b4
		{ isConnected = false;
		  connect(); }
    2970:	addw	r0, r9, #1460	; 0x5b4
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    2974:	str.w	sl, [r9, #1464]	; 0x5b8
    2978:	strb.w	fp, [r9, #1468]	; 0x5bc
    297c:	strb.w	r6, [r9, #1469]	; 0x5bd
    2980:	str.w	fp, [r9, #1472]	; 0x5c0
		{ isConnected = false;
    2984:	strb.w	fp, [r9, #1476]	; 0x5c4
		  connect(); }
    2988:	bl	9748 <AudioConnection::connect()>
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    298c:	add.w	r3, r5, #896	; 0x380
    2990:	str.w	r3, [r9, #1484]	; 0x5cc
		{ isConnected = false;
		  connect(); }
    2994:	add.w	r0, r9, #1480	; 0x5c8
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    2998:	str.w	sl, [r9, #1480]	; 0x5c8
    299c:	strb.w	fp, [r9, #1488]	; 0x5d0
    29a0:	strb.w	r7, [r9, #1489]	; 0x5d1
    29a4:	str.w	fp, [r9, #1492]	; 0x5d4
		{ isConnected = false;
    29a8:	strb.w	fp, [r9, #1496]	; 0x5d8
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    29ac:	add.w	r4, r5, #840	; 0x348
		{ isConnected = false;
		  connect(); }
    29b0:	bl	9748 <AudioConnection::connect()>
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    29b4:	ldr	r2, [pc, #380]	; (2b34 <_GLOBAL__sub_I_usb_in+0x1700>)
    29b6:	str.w	r2, [r9, #1500]	; 0x5dc
		{ isConnected = false;
		  connect(); }
    29ba:	addw	r0, r9, #1500	; 0x5dc
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    29be:	strb.w	fp, [r9, #1508]	; 0x5e4
    29c2:	strb.w	fp, [r9, #1509]	; 0x5e5
    29c6:	str.w	fp, [r9, #1512]	; 0x5e8
		{ isConnected = false;
    29ca:	strb.w	fp, [r9, #1516]	; 0x5ec
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    29ce:	str.w	r4, [r9, #1504]	; 0x5e0
		{ isConnected = false;
		  connect(); }
    29d2:	bl	9748 <AudioConnection::connect()>
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    29d6:	ldr	r2, [pc, #352]	; (2b38 <_GLOBAL__sub_I_usb_in+0x1704>)
    29d8:	str.w	r2, [r9, #1520]	; 0x5f0
		{ isConnected = false;
		  connect(); }
    29dc:	add.w	r0, r9, #1520	; 0x5f0
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    29e0:	str.w	r4, [r9, #1524]	; 0x5f4
    29e4:	strb.w	fp, [r9, #1528]	; 0x5f8
    29e8:	strb.w	r8, [r9, #1529]	; 0x5f9
    29ec:	str.w	fp, [r9, #1532]	; 0x5fc
		{ isConnected = false;
    29f0:	strb.w	fp, [r9, #1536]	; 0x600
		  connect(); }
    29f4:	bl	9748 <AudioConnection::connect()>
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    29f8:	ldr	r2, [pc, #320]	; (2b3c <_GLOBAL__sub_I_usb_in+0x1708>)
    29fa:	str.w	r2, [r9, #1540]	; 0x604
		{ isConnected = false;
		  connect(); }
    29fe:	addw	r0, r9, #1540	; 0x604
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    2a02:	str.w	r4, [r9, #1544]	; 0x608
    2a06:	strb.w	fp, [r9, #1548]	; 0x60c
    2a0a:	strb.w	r7, [r9, #1549]	; 0x60d
    2a0e:	str.w	fp, [r9, #1552]	; 0x610
		{ isConnected = false;
    2a12:	strb.w	fp, [r9, #1556]	; 0x614
		  connect(); }
    2a16:	bl	9748 <AudioConnection::connect()>
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    2a1a:	ldr	r3, [pc, #292]	; (2b40 <_GLOBAL__sub_I_usb_in+0x170c>)
    2a1c:	str.w	r3, [r9, #1560]	; 0x618
		{ isConnected = false;
		  connect(); }
    2a20:	add.w	r0, r9, #1560	; 0x618
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    2a24:	str.w	r4, [r9, #1564]	; 0x61c
    2a28:	strb.w	fp, [r9, #1568]	; 0x620
    2a2c:	strb.w	r6, [r9, #1569]	; 0x621
    2a30:	str.w	fp, [r9, #1572]	; 0x624
		{ isConnected = false;
    2a34:	strb.w	fp, [r9, #1576]	; 0x628
		  connect(); }
    2a38:	bl	9748 <AudioConnection::connect()>
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    2a3c:	add.w	r3, r4, #56	; 0x38
		{ isConnected = false;
		  connect(); }
    2a40:	addw	r0, r9, #1580	; 0x62c
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    2a44:	str.w	r3, [r9, #1584]	; 0x630
    2a48:	str.w	r4, [r9, #1580]	; 0x62c
    2a4c:	strb.w	fp, [r9, #1588]	; 0x634
    2a50:	strb.w	r6, [r9, #1589]	; 0x635
    2a54:	str.w	fp, [r9, #1592]	; 0x638
		{ isConnected = false;
    2a58:	strb.w	fp, [r9, #1596]	; 0x63c
		  connect(); }
    2a5c:	bl	9748 <AudioConnection::connect()>
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    2a60:	add.w	r5, r5, #1120	; 0x460
    2a64:	add.w	r3, r4, #224	; 0xe0
		{ isConnected = false;
		  connect(); }
    2a68:	add.w	r0, r9, #1600	; 0x640
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    2a6c:	str.w	r3, [r9, #1600]	; 0x640
    2a70:	str.w	r5, [r9, #1604]	; 0x644
    2a74:	strb.w	fp, [r9, #1608]	; 0x648
    2a78:	strb.w	fp, [r9, #1609]	; 0x649
    2a7c:	str.w	fp, [r9, #1612]	; 0x64c
		{ isConnected = false;
    2a80:	strb.w	fp, [r9, #1616]	; 0x650
		  connect(); }
    2a84:	bl	9748 <AudioConnection::connect()>
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    2a88:	add.w	r3, r4, #168	; 0xa8
		{ isConnected = false;
		  connect(); }
    2a8c:	addw	r0, r9, #1620	; 0x654
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    2a90:	str.w	r3, [r9, #1620]	; 0x654
    2a94:	str.w	r5, [r9, #1624]	; 0x658
    2a98:	strb.w	fp, [r9, #1628]	; 0x65c
    2a9c:	strb.w	r8, [r9, #1629]	; 0x65d
    2aa0:	str.w	fp, [r9, #1632]	; 0x660
		{ isConnected = false;
    2aa4:	strb.w	fp, [r9, #1636]	; 0x664
		  connect(); }
    2aa8:	bl	9748 <AudioConnection::connect()>
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    2aac:	add.w	r3, r4, #112	; 0x70
		{ isConnected = false;
		  connect(); }
    2ab0:	add.w	r0, r9, #1640	; 0x668
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    2ab4:	str.w	r3, [r9, #1640]	; 0x668
    2ab8:	str.w	r5, [r9, #1644]	; 0x66c
    2abc:	strb.w	fp, [r9, #1648]	; 0x670
    2ac0:	strb.w	r7, [r9, #1649]	; 0x671
    2ac4:	str.w	fp, [r9, #1652]	; 0x674
		{ isConnected = false;
    2ac8:	strb.w	fp, [r9, #1656]	; 0x678
		  connect(); }
    2acc:	bl	9748 <AudioConnection::connect()>
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    2ad0:	add.w	r3, r4, #56	; 0x38
		{ isConnected = false;
		  connect(); }
    2ad4:	addw	r0, r9, #1660	; 0x67c
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    2ad8:	str.w	r3, [r9, #1660]	; 0x67c
    2adc:	str.w	r5, [r9, #1664]	; 0x680
    2ae0:	strb.w	fp, [r9, #1668]	; 0x684
    2ae4:	strb.w	r6, [r9, #1669]	; 0x685
    2ae8:	str.w	fp, [r9, #1672]	; 0x688
		{ isConnected = false;
    2aec:	strb.w	fp, [r9, #1676]	; 0x68c
		  connect(); }
    2af0:	bl	9748 <AudioConnection::connect()>
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    2af4:	ldr	r3, [pc, #76]	; (2b44 <_GLOBAL__sub_I_usb_in+0x1710>)
    2af6:	str.w	r3, [r9, #1684]	; 0x694
		{ isConnected = false;
		  connect(); }
    2afa:	add.w	r0, r9, #1680	; 0x690
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    2afe:	strb.w	r7, [r9, #1689]	; 0x699
    2b02:	str.w	r5, [r9, #1680]	; 0x690
    2b06:	strb.w	fp, [r9, #1688]	; 0x698
    2b0a:	b.n	2b48 <_GLOBAL__sub_I_usb_in+0x1714>
    2b0c:	.word	0x20011150
    2b10:	.word	0x200111ac
    2b14:	.word	0x20011208
    2b18:	.word	0x200112c0
    2b1c:	.word	0x2001131c
    2b20:	.word	0x20011378
    2b24:	.word	0x200113d4
    2b28:	.word	0x20011430
    2b2c:	.word	0x2001148c
    2b30:	.word	0x200114e8
    2b34:	.word	0x20011658
    2b38:	.word	0x200116b4
    2b3c:	.word	0x20011710
    2b40:	.word	0x2001176c
    2b44:	.word	0x20012570
    2b48:	str.w	fp, [r9, #1692]	; 0x69c
		{ isConnected = false;
    2b4c:	strb.w	fp, [r9, #1696]	; 0x6a0
		  connect(); }
    2b50:	bl	9748 <AudioConnection::connect()>
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    2b54:	ldr	r3, [pc, #88]	; (2bb0 <_GLOBAL__sub_I_usb_in+0x177c>)
    2b56:	str.w	r5, [r9, #1700]	; 0x6a4
		{ isConnected = false;
		  connect(); }
    2b5a:	addw	r0, r9, #1700	; 0x6a4
		  connect(); }
	AudioConnection(AudioStream &source, unsigned char sourceOutput,
		AudioStream &destination, unsigned char destinationInput) :
		src(source), dst(destination),
		src_index(sourceOutput), dest_index(destinationInput),
		next_dest(NULL)
    2b5e:	str.w	r3, [r9, #1704]	; 0x6a8
    2b62:	strb.w	fp, [r9, #1708]	; 0x6ac
    2b66:	strb.w	r6, [r9, #1709]	; 0x6ad
    2b6a:	str.w	fp, [r9, #1712]	; 0x6b0
		{ isConnected = false;
    2b6e:	strb.w	fp, [r9, #1716]	; 0x6b4
		  connect(); }
    2b72:	bl	9748 <AudioConnection::connect()>
  AudioConnection patchCord[] = {
    2b76:	ldr	r2, [pc, #60]	; (2bb4 <_GLOBAL__sub_I_usb_in+0x1780>)
    2b78:	ldr	r1, [pc, #60]	; (2bb8 <_GLOBAL__sub_I_usb_in+0x1784>)
    2b7a:	mov	r0, fp

    Serial.println(AudioMemoryUsageMax());
  }

  delay(20);
}
    2b7c:	add	sp, #12
    2b7e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  const int TOTAL_MIXERS = 21; // 64 / 4 = 16, + 16 / 4 = 4, + 4 / 4 = 1 = 21
  const int SECONDARY_MIXERS = 4; // What are these for

  AudioSynthWavetable wavetable[TOTAL_VOICES];
  AudioMixer4         mixer[TOTAL_MIXERS];
  AudioConnection patchCord[] = {
    2b82:	b.w	b944 <__aeabi_atexit>
				inputQueue[i] = NULL;
			}
			// add to a simple list, for update_all
			// TODO: replace with a proper data flow analysis in update_all
			if (first_update == NULL) {
				first_update = this;
    2b86:	str.w	r7, [r9]
    2b8a:	b.w	1e4a <_GLOBAL__sub_I_usb_in+0xa16>
    2b8e:	str.w	fp, [r3]
    2b92:	b.w	146c <_GLOBAL__sub_I_usb_in+0x38>
    2b96:	str	r0, [r3, #0]
    2b98:	b.w	1510 <_GLOBAL__sub_I_usb_in+0xdc>
    2b9c:	str	r0, [r3, #0]
    2b9e:	b.w	16cc <_GLOBAL__sub_I_usb_in+0x298>
    2ba2:	str	r5, [r2, #0]
    2ba4:	b.w	17be <_GLOBAL__sub_I_usb_in+0x38a>
    2ba8:	ldr	r3, [pc, #16]	; (2bbc <_GLOBAL__sub_I_usb_in+0x1788>)
    2baa:	str	r2, [r3, #0]
    2bac:	b.w	1d98 <_GLOBAL__sub_I_usb_in+0x964>
    2bb0:	.word	0x20012570
    2bb4:	.word	0x20007db0
    2bb8:	.word	0x00000685
    2bbc:	.word	0x20012b9c

00002bc0 <Print::availableForWrite()>:
  public:
	constexpr Print() : write_error(0) {}
	virtual size_t write(uint8_t b) = 0;
	size_t write(const char *str)			{ return write((const uint8_t *)str, strlen(str)); }
	virtual size_t write(const uint8_t *buffer, size_t size);
	virtual int availableForWrite(void)		{ return 0; }
    2bc0:	movs	r0, #0
    2bc2:	bx	lr

00002bc4 <Print::flush()>:
	virtual void flush()				{ }
    2bc4:	bx	lr
    2bc6:	nop

00002bc8 <Adafruit_MultiTrellis::~Adafruit_MultiTrellis()>:
*/
/**************************************************************************/
class Adafruit_MultiTrellis {
public:
    Adafruit_MultiTrellis(Adafruit_NeoTrellis *trelli, uint8_t rows, uint8_t cols);
    ~Adafruit_MultiTrellis() {};
    2bc8:	bx	lr
    2bca:	nop

00002bcc <__tcf_0>:
                Serial.print(" out of range exception");
                return 0;
        }
    }

    Adafruit_NeoTrellis IO::t_array[NEOTRELLIS_Y_DIM / 4][NEOTRELLIS_X_DIM / 4] = { { *new Adafruit_NeoTrellis(0x2E), *new Adafruit_NeoTrellis(0x2F) } };
    2bcc:	push	{r3, r4, r5, lr}
*/
/**************************************************************************/
class Adafruit_NeoTrellis : public Adafruit_seesaw {
public:
	Adafruit_NeoTrellis(uint8_t addr = NEO_TRELLIS_ADDR);
	~Adafruit_NeoTrellis() {};
    2bce:	ldr	r4, [pc, #28]	; (2bec <__tcf_0+0x20>)
    2bd0:	ldr	r5, [pc, #28]	; (2bf0 <__tcf_0+0x24>)
    2bd2:	str	r5, [r4, #124]	; 0x7c
    2bd4:	add.w	r0, r4, #140	; 0x8c
    2bd8:	bl	650c <seesaw_NeoPixel::~seesaw_NeoPixel()>
    2bdc:	mov	r0, r4
    2bde:	str.w	r5, [r0], #16
    2be2:	ldmia.w	sp!, {r3, r4, r5, lr}
    2be6:	b.w	650c <seesaw_NeoPixel::~seesaw_NeoPixel()>
    2bea:	nop
    2bec:	.word	0x200125e0
    2bf0:	.word	0x0009d834

00002bf4 <Synth::Multiplexer::readMux(int)>:
                pinMode(MUX_EN, OUTPUT);

                digitalWrite(MUX_EN, LOW);
            }

            static int readMux(int channel)
    2bf4:	push	{r4, r5, r6, r7, lr}
                int controlPin[] = {
                    MUX_S0,
                    MUX_S1,
                    MUX_S2,
                    MUX_S3
                };
    2bf6:	ldr	r7, [pc, #68]	; (2c3c <Synth::Multiplexer::readMux(int)+0x48>)
                pinMode(MUX_EN, OUTPUT);

                digitalWrite(MUX_EN, LOW);
            }

            static int readMux(int channel)
    2bf8:	mov	r5, r0
                int controlPin[] = {
                    MUX_S0,
                    MUX_S1,
                    MUX_S2,
                    MUX_S3
                };
    2bfa:	ldmia.w	r7, {r0, r1, r2, r3}
                pinMode(MUX_EN, OUTPUT);

                digitalWrite(MUX_EN, LOW);
            }

            static int readMux(int channel)
    2bfe:	sub	sp, #276	; 0x114
                    {1,1,0,1}, //channel 11
                    {0,0,1,1}, //channel 12
                    {1,0,1,1}, //channel 13
                    {0,1,1,1}, //channel 14
                    {1,1,1,1}  //channel 15
                };
    2c00:	add	r6, sp, #16
                int controlPin[] = {
                    MUX_S0,
                    MUX_S1,
                    MUX_S2,
                    MUX_S3
                };
    2c02:	stmia.w	sp, {r0, r1, r2, r3}
                    {1,1,0,1}, //channel 11
                    {0,0,1,1}, //channel 12
                    {1,0,1,1}, //channel 13
                    {0,1,1,1}, //channel 14
                    {1,1,1,1}  //channel 15
                };
    2c06:	add.w	r1, r7, #16
    2c0a:	mov	r0, r6
    2c0c:	mov.w	r2, #256	; 0x100
    2c10:	bl	6f10 <memcpy>
                int controlPin[] = {
                    MUX_S0,
                    MUX_S1,
                    MUX_S2,
                    MUX_S3
                };
    2c14:	mov	r4, sp
    2c16:	add.w	r5, r6, r5, lsl #4
                    {0,1,1,1}, //channel 14
                    {1,1,1,1}  //channel 15
                };

                for(int i = 0; i < 4; i ++) {
                    digitalWrite(controlPin[i], muxChannel[channel][i]);
    2c1a:	ldr.w	r0, [r4], #4
    2c1e:	ldr.w	r1, [r5], #4
    2c22:	uxtb	r0, r0
    2c24:	uxtb	r1, r1
    2c26:	bl	782c <digitalWrite>
                    {1,0,1,1}, //channel 13
                    {0,1,1,1}, //channel 14
                    {1,1,1,1}  //channel 15
                };

                for(int i = 0; i < 4; i ++) {
    2c2a:	cmp	r4, r6
    2c2c:	bne.n	2c1a <Synth::Multiplexer::readMux(int)+0x26>
                    digitalWrite(controlPin[i], muxChannel[channel][i]);
                }

                int val;
                val = analogRead(MUX_SIG);
    2c2e:	movs	r0, #39	; 0x27

                return val;
            }
    2c30:	add	sp, #276	; 0x114
    2c32:	ldmia.w	sp!, {r4, r5, r6, r7, lr}
                for(int i = 0; i < 4; i ++) {
                    digitalWrite(controlPin[i], muxChannel[channel][i]);
                }

                int val;
                val = analogRead(MUX_SIG);
    2c36:	b.w	753c <analogRead>
    2c3a:	nop
    2c3c:	.word	0x0009d854

00002c40 <Synth::IO::wheel(unsigned char)>:

#include "io.h"

namespace Synth {
    uint32_t IO::wheel(unsigned char wheelPos) {
        if(wheelPos < 85) {
    2c40:	cmp	r0, #84	; 0x54
    2c42:	bls.n	2c78 <Synth::IO::wheel(unsigned char)+0x38>
            return seesaw_NeoPixel::Color(wheelPos * 3, 255 - wheelPos * 3, 0);
        }
        else if(wheelPos < 170)
    2c44:	cmp	r0, #169	; 0xa9
    2c46:	bls.n	2c60 <Synth::IO::wheel(unsigned char)+0x20>
            wheelPos -= 85;
            return seesaw_NeoPixel::Color(255 - wheelPos * 3, 0, wheelPos * 3);
        }
        else
        {
            wheelPos -= 170;
    2c48:	adds	r0, #86	; 0x56
    2c4a:	uxtb	r1, r0
            return seesaw_NeoPixel::Color(0, wheelPos * 3, 255 - wheelPos * 3);
    2c4c:	sub.w	r2, r1, r1, lsl #2
    2c50:	subs	r2, #1
    2c52:	add.w	r1, r1, r1, lsl #1
    2c56:	uxtb	r2, r2
    2c58:	uxtb	r1, r1
    2c5a:	movs	r0, #0
    2c5c:	b.w	66f4 <seesaw_NeoPixel::Color(unsigned char, unsigned char, unsigned char)>
        if(wheelPos < 85) {
            return seesaw_NeoPixel::Color(wheelPos * 3, 255 - wheelPos * 3, 0);
        }
        else if(wheelPos < 170)
        {
            wheelPos -= 85;
    2c60:	subs	r0, #85	; 0x55
    2c62:	uxtb	r2, r0
            return seesaw_NeoPixel::Color(255 - wheelPos * 3, 0, wheelPos * 3);
    2c64:	sub.w	r0, r2, r2, lsl #2
    2c68:	subs	r0, #1
    2c6a:	add.w	r2, r2, r2, lsl #1
    2c6e:	uxtb	r0, r0
    2c70:	uxtb	r2, r2
    2c72:	movs	r1, #0
    2c74:	b.w	66f4 <seesaw_NeoPixel::Color(unsigned char, unsigned char, unsigned char)>
#include "io.h"

namespace Synth {
    uint32_t IO::wheel(unsigned char wheelPos) {
        if(wheelPos < 85) {
            return seesaw_NeoPixel::Color(wheelPos * 3, 255 - wheelPos * 3, 0);
    2c78:	sub.w	r1, r0, r0, lsl #2
    2c7c:	subs	r1, #1
    2c7e:	add.w	r0, r0, r0, lsl #1
    2c82:	uxtb	r1, r1
    2c84:	uxtb	r0, r0
    2c86:	movs	r2, #0
    2c88:	b.w	66f4 <seesaw_NeoPixel::Color(unsigned char, unsigned char, unsigned char)>

00002c8c <Synth::IO::setup()>:
            return seesaw_NeoPixel::Color(0, wheelPos * 3, 255 - wheelPos * 3);
        }
    }

    void IO::setup()
    {
    2c8c:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
namespace Synth {
    class Multiplexer {
        public:
            static void setup()
            {
                pinMode(MUX_S0, OUTPUT);
    2c90:	movs	r1, #1
    2c92:	sub	sp, #8
    2c94:	movs	r0, #51	; 0x33
    2c96:	bl	7854 <pinMode>
                pinMode(MUX_S1, OUTPUT);
    2c9a:	movs	r1, #1
    2c9c:	movs	r0, #52	; 0x34
    2c9e:	bl	7854 <pinMode>
                pinMode(MUX_S2, OUTPUT);
    2ca2:	movs	r1, #1
    2ca4:	movs	r0, #40	; 0x28
    2ca6:	bl	7854 <pinMode>
                pinMode(MUX_S3, OUTPUT);
    2caa:	movs	r1, #1
    2cac:	movs	r0, #53	; 0x35
    2cae:	bl	7854 <pinMode>
                pinMode(MUX_EN, OUTPUT);
    2cb2:	movs	r1, #1
    2cb4:	movs	r0, #41	; 0x29
    2cb6:	bl	7854 <pinMode>

                digitalWrite(MUX_EN, LOW);
    2cba:	movs	r1, #0
    2cbc:	movs	r0, #41	; 0x29
    2cbe:	bl	782c <digitalWrite>
        Multiplexer::setup();

        // Buttons
        pinMode(PB1, INPUT_PULLUP);
    2cc2:	movs	r1, #2
    2cc4:	movs	r0, #28
    2cc6:	bl	7854 <pinMode>
        pinMode(PB2, INPUT_PULLUP);
    2cca:	movs	r1, #2
    2ccc:	movs	r0, #27
    2cce:	bl	7854 <pinMode>
        pinMode(PB3, INPUT_PULLUP);
    2cd2:	movs	r1, #2
    2cd4:	movs	r0, #26
    2cd6:	bl	7854 <pinMode>

        // Keypad
        pinMode(NEOTRELLIS_INT_PIN, INPUT);
    2cda:	movs	r1, #0
    2cdc:	movs	r0, #47	; 0x2f
    2cde:	bl	7854 <pinMode>
    2ce2:	b.n	2cf0 <Synth::IO::setup()+0x64>
    2ce4:	ldr	r0, [pc, #156]	; (2d84 <Synth::IO::setup()+0xf8>)
    2ce6:	bl	7110 <usb_serial_write>
	size_t print(double n, int digits = 2)		{ return printFloat(n, digits); }
	size_t print(const Printable &obj)		{ return obj.printTo(*this); }
	size_t println(void);
	size_t println(const String &s)			{ return print(s) + println(); }
	size_t println(char c)				{ return print(c) + println(); }
	size_t println(const char s[])			{ return print(s) + println(); }
    2cea:	ldr	r0, [pc, #156]	; (2d88 <Synth::IO::setup()+0xfc>)
    2cec:	bl	8cbc <Print::println()>

        while (!trellis.begin())
    2cf0:	ldr	r0, [pc, #152]	; (2d8c <Synth::IO::setup()+0x100>)
    2cf2:	bl	6bd8 <Adafruit_MultiTrellis::begin()>
    2cf6:	movs	r1, #23
    2cf8:	cmp	r0, #0
    2cfa:	beq.n	2ce4 <Synth::IO::setup()+0x58>
    2cfc:	movs	r4, #0
        }

        /* the array can be addressed as x,y or with the key number */
        for(int i = 0; i < NEOTRELLIS_Y_DIM * NEOTRELLIS_X_DIM; i++)
        {
            trellis.setPixelColor(i, wheel(map(i, 0, NEOTRELLIS_X_DIM * NEOTRELLIS_Y_DIM, 0, 255))); //addressed with keynum
    2cfe:	rsb	r0, r4, r4, lsl #8
    2d02:	ubfx	r0, r0, #5, #8
    2d06:	bl	2c40 <Synth::IO::wheel(unsigned char)>
    2d0a:	uxth	r1, r4
    2d0c:	mov	r2, r0
    2d0e:	ldr	r0, [pc, #124]	; (2d8c <Synth::IO::setup()+0x100>)
    2d10:	bl	6cb8 <Adafruit_MultiTrellis::setPixelColor(unsigned short, unsigned long)>
            trellis.show();
    2d14:	ldr	r0, [pc, #116]	; (2d8c <Synth::IO::setup()+0x100>)
    2d16:	bl	6cd4 <Adafruit_MultiTrellis::show()>
        {
            Serial.println("failed to begin trellis");
        }

        /* the array can be addressed as x,y or with the key number */
        for(int i = 0; i < NEOTRELLIS_Y_DIM * NEOTRELLIS_X_DIM; i++)
    2d1a:	adds	r4, #1
        {
            trellis.setPixelColor(i, wheel(map(i, 0, NEOTRELLIS_X_DIM * NEOTRELLIS_Y_DIM, 0, 255))); //addressed with keynum
            trellis.show();
            delay(10);
    2d1c:	movs	r0, #10
    2d1e:	bl	78a8 <delay>
        {
            Serial.println("failed to begin trellis");
        }

        /* the array can be addressed as x,y or with the key number */
        for(int i = 0; i < NEOTRELLIS_Y_DIM * NEOTRELLIS_X_DIM; i++)
    2d22:	cmp	r4, #32
    2d24:	bne.n	2cfe <Synth::IO::setup()+0x72>
    2d26:	mov.w	r8, #0
        for(int y = 0; y < NEOTRELLIS_Y_DIM; y++)
        {
            for(int x = 0; x < NEOTRELLIS_X_DIM; x++)
            {
                //activate rising and falling edges on all keys
                trellis.activateKey(x, y, SEESAW_KEYPAD_EDGE_RISING, true);
    2d2a:	movs	r7, #1
    2d2c:	uxtb.w	r6, r8
    2d30:	movs	r4, #0
    2d32:	uxtb	r5, r4
    2d34:	mov	r1, r5
    2d36:	movs	r3, #3
    2d38:	mov	r2, r6
    2d3a:	ldr	r0, [pc, #80]	; (2d8c <Synth::IO::setup()+0x100>)
    2d3c:	str	r7, [sp, #0]
    2d3e:	bl	6c50 <Adafruit_MultiTrellis::activateKey(unsigned char, unsigned char, unsigned char, bool)>
                trellis.activateKey(x, y, SEESAW_KEYPAD_EDGE_FALLING, true);
    2d42:	mov	r1, r5
    2d44:	movs	r3, #2
    2d46:	mov	r2, r6
    2d48:	ldr	r0, [pc, #64]	; (2d8c <Synth::IO::setup()+0x100>)
    2d4a:	str	r7, [sp, #0]
    2d4c:	bl	6c50 <Adafruit_MultiTrellis::activateKey(unsigned char, unsigned char, unsigned char, bool)>
                trellis.setPixelColor(x, y, 0x000000); //addressed with x,y
    2d50:	movs	r3, #0
    2d52:	mov	r1, r5
    2d54:	mov	r2, r6
    2d56:	ldr	r0, [pc, #52]	; (2d8c <Synth::IO::setup()+0x100>)
    2d58:	bl	6c8c <Adafruit_MultiTrellis::setPixelColor(unsigned char, unsigned char, unsigned long)>
                trellis.show(); //show all LEDs
    2d5c:	ldr	r0, [pc, #44]	; (2d8c <Synth::IO::setup()+0x100>)
    2d5e:	bl	6cd4 <Adafruit_MultiTrellis::show()>
            delay(10);
        }

        for(int y = 0; y < NEOTRELLIS_Y_DIM; y++)
        {
            for(int x = 0; x < NEOTRELLIS_X_DIM; x++)
    2d62:	adds	r4, #1
                //activate rising and falling edges on all keys
                trellis.activateKey(x, y, SEESAW_KEYPAD_EDGE_RISING, true);
                trellis.activateKey(x, y, SEESAW_KEYPAD_EDGE_FALLING, true);
                trellis.setPixelColor(x, y, 0x000000); //addressed with x,y
                trellis.show(); //show all LEDs
                delay(10);
    2d64:	movs	r0, #10
    2d66:	bl	78a8 <delay>
            delay(10);
        }

        for(int y = 0; y < NEOTRELLIS_Y_DIM; y++)
        {
            for(int x = 0; x < NEOTRELLIS_X_DIM; x++)
    2d6a:	cmp	r4, #8
            {
                //activate rising and falling edges on all keys
                trellis.activateKey(x, y, SEESAW_KEYPAD_EDGE_RISING, true);
    2d6c:	mov.w	r3, #1
            delay(10);
        }

        for(int y = 0; y < NEOTRELLIS_Y_DIM; y++)
        {
            for(int x = 0; x < NEOTRELLIS_X_DIM; x++)
    2d70:	bne.n	2d32 <Synth::IO::setup()+0xa6>
            trellis.setPixelColor(i, wheel(map(i, 0, NEOTRELLIS_X_DIM * NEOTRELLIS_Y_DIM, 0, 255))); //addressed with keynum
            trellis.show();
            delay(10);
        }

        for(int y = 0; y < NEOTRELLIS_Y_DIM; y++)
    2d72:	add	r8, r3
    2d74:	cmp.w	r8, #4
    2d78:	bne.n	2d2c <Synth::IO::setup()+0xa0>
                trellis.show(); //show all LEDs
                delay(10);
            }
        }

        initialized = true;
    2d7a:	ldr	r2, [pc, #20]	; (2d90 <Synth::IO::setup()+0x104>)
    2d7c:	strb	r3, [r2, #0]
    }
    2d7e:	add	sp, #8
    2d80:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    2d84:	.word	0x0009d964
    2d88:	.word	0x20008048
    2d8c:	.word	0x200126d8
    2d90:	.word	0x200125dc

00002d94 <Synth::IO::update()>:

    void IO::update()
    {
        if (!initialized) return;
    2d94:	ldr	r3, [pc, #12]	; (2da4 <Synth::IO::update()+0x10>)
    2d96:	ldrb	r3, [r3, #0]
    2d98:	cbnz	r3, 2d9c <Synth::IO::update()+0x8>
    2d9a:	bx	lr

        trellis.read();
    2d9c:	ldr	r0, [pc, #8]	; (2da8 <Synth::IO::update()+0x14>)
    2d9e:	b.w	6d0c <Adafruit_MultiTrellis::read()>
    2da2:	nop
    2da4:	.word	0x200125dc
    2da8:	.word	0x200126d8

00002dac <Synth::IO::readSlidePot(unsigned char)>:
        }
    }

    float IO::readSlidePot(unsigned char index)
    {
        switch (index)
    2dac:	subs	r3, r0, #1
                return false;
        }
    }

    float IO::readSlidePot(unsigned char index)
    {
    2dae:	push	{r4, lr}
        switch (index)
    2db0:	cmp	r3, #8
    2db2:	bhi.n	2e0e <Synth::IO::readSlidePot(unsigned char)+0x62>
    2db4:	tbb	[pc, r3]
    2db8:	.word	0x21151311
    2dbc:	.word	0x29272523
    2dc0:	.byte	0x05
    2dc1:	.byte	0x00
            case 7:
                return (float) analogRead(SLIDE_POT7) / 1023.0;
            case 8:
                return (float) analogRead(SLIDE_POT8) / 1023.0;
            case 9:
                return (float) Multiplexer::readMux(SLIDE_POT9) / 1023.0;
    2dc2:	movs	r0, #2
        switch (index)
        {
            case 1:
                return (float) Multiplexer::readMux(SLIDE_POT1) / 1023.0;
            case 2:
                return (float) Multiplexer::readMux(SLIDE_POT2) / 1023.0;
    2dc4:	bl	2bf4 <Synth::Multiplexer::readMux(int)>
    2dc8:	vmov	s14, r0
    2dcc:	vldr	s15, [pc, #100]	; 2e34 <Synth::IO::readSlidePot(unsigned char)+0x88>
    2dd0:	vcvt.f32.s32	s14, s14
    2dd4:	vdiv.f32	s0, s14, s15
    2dd8:	pop	{r4, pc}
    float IO::readSlidePot(unsigned char index)
    {
        switch (index)
        {
            case 1:
                return (float) Multiplexer::readMux(SLIDE_POT1) / 1023.0;
    2dda:	movs	r0, #0
    2ddc:	b.n	2dc4 <Synth::IO::readSlidePot(unsigned char)+0x18>
            case 2:
                return (float) Multiplexer::readMux(SLIDE_POT2) / 1023.0;
    2dde:	movs	r0, #1
    2de0:	b.n	2dc4 <Synth::IO::readSlidePot(unsigned char)+0x18>
            case 3:
                return (float) analogRead(SLIDE_POT3) / 1023.0;
    2de2:	movs	r0, #35	; 0x23
            case 6:
                return (float) analogRead(SLIDE_POT6) / 1023.0;
            case 7:
                return (float) analogRead(SLIDE_POT7) / 1023.0;
            case 8:
                return (float) analogRead(SLIDE_POT8) / 1023.0;
    2de4:	bl	753c <analogRead>
    2de8:	vmov	s14, r0
    2dec:	vldr	s15, [pc, #68]	; 2e34 <Synth::IO::readSlidePot(unsigned char)+0x88>
    2df0:	vcvt.f32.s32	s14, s14
    2df4:	vdiv.f32	s0, s14, s15
    2df8:	pop	{r4, pc}
            case 2:
                return (float) Multiplexer::readMux(SLIDE_POT2) / 1023.0;
            case 3:
                return (float) analogRead(SLIDE_POT3) / 1023.0;
            case 4:
                return (float) analogRead(SLIDE_POT4) / 1023.0;
    2dfa:	movs	r0, #36	; 0x24
    2dfc:	b.n	2de4 <Synth::IO::readSlidePot(unsigned char)+0x38>
            case 5:
                return (float) analogRead(SLIDE_POT5) / 1023.0;
    2dfe:	movs	r0, #31
    2e00:	b.n	2de4 <Synth::IO::readSlidePot(unsigned char)+0x38>
            case 6:
                return (float) analogRead(SLIDE_POT6) / 1023.0;
    2e02:	movs	r0, #32
    2e04:	b.n	2de4 <Synth::IO::readSlidePot(unsigned char)+0x38>
            case 7:
                return (float) analogRead(SLIDE_POT7) / 1023.0;
    2e06:	movs	r0, #33	; 0x21
    2e08:	b.n	2de4 <Synth::IO::readSlidePot(unsigned char)+0x38>
            case 8:
                return (float) analogRead(SLIDE_POT8) / 1023.0;
    2e0a:	movs	r0, #34	; 0x22
    2e0c:	b.n	2de4 <Synth::IO::readSlidePot(unsigned char)+0x38>
    2e0e:	mov	r4, r0
    2e10:	movs	r1, #20
    2e12:	ldr	r0, [pc, #36]	; (2e38 <Synth::IO::readSlidePot(unsigned char)+0x8c>)
    2e14:	bl	7110 <usb_serial_write>
	size_t print(const String &s);
	size_t print(char c)				{ return write((uint8_t)c); }
	size_t print(const char s[])			{ return write(s); }
	size_t print(const __FlashStringHelper *f)	{ return write((const char *)f); }

	size_t print(uint8_t b)				{ return printNumber(b, 10, 0); }
    2e18:	mov	r1, r4
    2e1a:	movs	r3, #0
    2e1c:	movs	r2, #10
    2e1e:	ldr	r0, [pc, #28]	; (2e3c <Synth::IO::readSlidePot(unsigned char)+0x90>)
    2e20:	bl	8d08 <Print::printNumber(unsigned long, unsigned char, unsigned char)>
    2e24:	movs	r1, #23
    2e26:	ldr	r0, [pc, #24]	; (2e40 <Synth::IO::readSlidePot(unsigned char)+0x94>)
    2e28:	bl	7110 <usb_serial_write>
                return (float) Multiplexer::readMux(SLIDE_POT9) / 1023.0;
            default:
                Serial.print("Error: readSlidePot ");
                Serial.print(index);
                Serial.print(" out of range exception");
                return 0;
    2e2c:	vldr	s0, [pc, #20]	; 2e44 <Synth::IO::readSlidePot(unsigned char)+0x98>
        }
    }
    2e30:	pop	{r4, pc}
    2e32:	nop
    2e34:	.word	0x447fc000
    2e38:	.word	0x0009d9a8
    2e3c:	.word	0x20008048
    2e40:	.word	0x0009d990
    2e44:	.word	0x00000000

00002e48 <Synth::IO::readPot(unsigned char)>:

    float IO::readPot(unsigned char index)
    {
        switch (index)
    2e48:	subs	r3, r0, #1
                return 0;
        }
    }

    float IO::readPot(unsigned char index)
    {
    2e4a:	push	{r4, lr}
        switch (index)
    2e4c:	cmp	r3, #12
    2e4e:	bhi.n	2eaa <Synth::IO::readPot(unsigned char)+0x62>
    2e50:	tbb	[pc, r3]
    2e54:	.word	0x19171513
    2e58:	.word	0x211f1d1b
    2e5c:	.word	0x29272523
    2e60:	.byte	0x07
    2e61:	.byte	0x00
            case 11:
                return (float) Multiplexer::readMux(POT11) / 1023.0;
            case 12:
                return (float) Multiplexer::readMux(POT12) / 1023.0;
            case 13:
                return (float) Multiplexer::readMux(POT13) / 1023.0;
    2e62:	movs	r0, #3
        switch (index)
        {
            case 1:
                return (float) Multiplexer::readMux(POT1) / 1023.0;
            case 2:
                return (float) Multiplexer::readMux(POT2) / 1023.0;
    2e64:	bl	2bf4 <Synth::Multiplexer::readMux(int)>
    2e68:	vmov	s14, r0
    2e6c:	vldr	s15, [pc, #96]	; 2ed0 <Synth::IO::readPot(unsigned char)+0x88>
    2e70:	vcvt.f32.s32	s14, s14
    2e74:	vdiv.f32	s0, s14, s15
    2e78:	pop	{r4, pc}
    float IO::readPot(unsigned char index)
    {
        switch (index)
        {
            case 1:
                return (float) Multiplexer::readMux(POT1) / 1023.0;
    2e7a:	movs	r0, #10
    2e7c:	b.n	2e64 <Synth::IO::readPot(unsigned char)+0x1c>
            case 2:
                return (float) Multiplexer::readMux(POT2) / 1023.0;
    2e7e:	movs	r0, #11
    2e80:	b.n	2e64 <Synth::IO::readPot(unsigned char)+0x1c>
            case 3:
                return (float) Multiplexer::readMux(POT3) / 1023.0;
    2e82:	movs	r0, #4
    2e84:	b.n	2e64 <Synth::IO::readPot(unsigned char)+0x1c>
            case 4:
                return (float) Multiplexer::readMux(POT4) / 1023.0;
    2e86:	movs	r0, #5
    2e88:	b.n	2e64 <Synth::IO::readPot(unsigned char)+0x1c>
            case 5:
                return (float) Multiplexer::readMux(POT5) / 1023.0;
    2e8a:	movs	r0, #6
    2e8c:	b.n	2e64 <Synth::IO::readPot(unsigned char)+0x1c>
            case 6:
                return (float) Multiplexer::readMux(POT6) / 1023.0;
    2e8e:	movs	r0, #7
    2e90:	b.n	2e64 <Synth::IO::readPot(unsigned char)+0x1c>
            case 7:
                return (float) Multiplexer::readMux(POT7) / 1023.0;
    2e92:	movs	r0, #12
    2e94:	b.n	2e64 <Synth::IO::readPot(unsigned char)+0x1c>
            case 8:
                return (float) Multiplexer::readMux(POT8) / 1023.0;
    2e96:	movs	r0, #13
    2e98:	b.n	2e64 <Synth::IO::readPot(unsigned char)+0x1c>
            case 9:
                return (float) Multiplexer::readMux(POT9) / 1023.0;
    2e9a:	movs	r0, #14
    2e9c:	b.n	2e64 <Synth::IO::readPot(unsigned char)+0x1c>
            case 10:
                return (float) Multiplexer::readMux(POT10) / 1023.0;
    2e9e:	movs	r0, #15
    2ea0:	b.n	2e64 <Synth::IO::readPot(unsigned char)+0x1c>
            case 11:
                return (float) Multiplexer::readMux(POT11) / 1023.0;
    2ea2:	movs	r0, #9
    2ea4:	b.n	2e64 <Synth::IO::readPot(unsigned char)+0x1c>
            case 12:
                return (float) Multiplexer::readMux(POT12) / 1023.0;
    2ea6:	movs	r0, #8
    2ea8:	b.n	2e64 <Synth::IO::readPot(unsigned char)+0x1c>
    2eaa:	mov	r4, r0
    2eac:	movs	r1, #15
    2eae:	ldr	r0, [pc, #36]	; (2ed4 <Synth::IO::readPot(unsigned char)+0x8c>)
    2eb0:	bl	7110 <usb_serial_write>
    2eb4:	mov	r1, r4
    2eb6:	movs	r3, #0
    2eb8:	movs	r2, #10
    2eba:	ldr	r0, [pc, #28]	; (2ed8 <Synth::IO::readPot(unsigned char)+0x90>)
    2ebc:	bl	8d08 <Print::printNumber(unsigned long, unsigned char, unsigned char)>
    2ec0:	movs	r1, #23
    2ec2:	ldr	r0, [pc, #24]	; (2edc <Synth::IO::readPot(unsigned char)+0x94>)
    2ec4:	bl	7110 <usb_serial_write>
                return (float) Multiplexer::readMux(POT13) / 1023.0;
            default:
                Serial.print("Error: readPot ");
                Serial.print(index);
                Serial.print(" out of range exception");
                return 0;
    2ec8:	vldr	s0, [pc, #20]	; 2ee0 <Synth::IO::readPot(unsigned char)+0x98>
        }
    }
    2ecc:	pop	{r4, pc}
    2ece:	nop
    2ed0:	.word	0x447fc000
    2ed4:	.word	0x0009d9c0
    2ed8:	.word	0x20008048
    2edc:	.word	0x0009d990
    2ee0:	.word	0x00000000

00002ee4 <Adafruit_NeoTrellis::Adafruit_NeoTrellis(Adafruit_NeoTrellis const&)>:
/**************************************************************************/
/*! 
    @brief  Class that stores state and functions for interacting with the seesaw keypad module
*/
/**************************************************************************/
class Adafruit_NeoTrellis : public Adafruit_seesaw {
    2ee4:	push	{r4, r5, r6}
//#define BYTE 0
//#endif

class __FlashStringHelper;

class Print
    2ee6:	ldr	r3, [pc, #176]	; (2f98 <Adafruit_NeoTrellis::Adafruit_NeoTrellis(Adafruit_NeoTrellis const&)+0xb4>)
    2ee8:	str	r3, [r0, #0]
    2eea:	ldrb	r2, [r1, #4]
    2eec:	strb	r2, [r0, #4]
/**************************************************************************/
/*! 
    @brief  Class that stores state and functions for interacting with seesaw helper IC
*/
/**************************************************************************/
class Adafruit_seesaw : public Print {
    2eee:	ldrb	r2, [r1, #5]
    2ef0:	strb	r2, [r0, #5]
    2ef2:	ldr	r2, [r1, #8]
    2ef4:	str	r2, [r0, #8]
    2ef6:	ldrsb.w	r2, [r1, #12]
    2efa:	strb	r2, [r0, #12]
    2efc:	mov	r5, r0
    2efe:	ldr	r2, [pc, #156]	; (2f9c <Adafruit_NeoTrellis::Adafruit_NeoTrellis(Adafruit_NeoTrellis const&)+0xb8>)
    2f00:	ldrb	r0, [r1, #13]
    2f02:	strb	r0, [r5, #13]
    2f04:	str	r3, [r5, #16]
    2f06:	str	r2, [r5, #0]
    2f08:	ldrb	r3, [r1, #20]
    2f0a:	strb	r3, [r5, #20]
    2f0c:	ldrb	r3, [r1, #21]
    2f0e:	strb	r3, [r5, #21]
    2f10:	ldr	r3, [r1, #24]
    2f12:	str	r3, [r5, #24]
    2f14:	ldrsb.w	r3, [r1, #28]
    2f18:	strb	r3, [r5, #28]
    2f1a:	ldrb	r3, [r1, #29]
    2f1c:	strb	r3, [r5, #29]
#define NEO_KHZ800 0x0000 // 800 KHz datastream
#define NEO_KHZ400 0x0100 // 400 KHz datastream

typedef uint16_t neoPixelType;

class seesaw_NeoPixel : public Adafruit_seesaw {
    2f1e:	ldrb	r4, [r1, #30]
    2f20:	ldrh	r2, [r1, #32]
    2f22:	ldrh	r3, [r1, #34]	; 0x22
    2f24:	ldrb	r0, [r1, #31]
    2f26:	ldr	r6, [pc, #120]	; (2fa0 <Adafruit_NeoTrellis::Adafruit_NeoTrellis(Adafruit_NeoTrellis const&)+0xbc>)
    2f28:	str	r6, [r5, #16]
    2f2a:	strb	r4, [r5, #30]
    2f2c:	strb	r0, [r5, #31]
    2f2e:	strh	r2, [r5, #32]
    2f30:	strh	r3, [r5, #34]	; 0x22
    2f32:	ldrsb.w	r3, [r1, #36]	; 0x24
    2f36:	strb.w	r3, [r5, #36]	; 0x24
    2f3a:	ldrb.w	r3, [r1, #37]	; 0x25
    2f3e:	strb.w	r3, [r5, #37]	; 0x25
    2f42:	ldr	r3, [r1, #40]	; 0x28
    2f44:	str	r3, [r5, #40]	; 0x28
    2f46:	ldrb.w	r3, [r1, #44]	; 0x2c
    2f4a:	strb.w	r3, [r5, #44]	; 0x2c
    2f4e:	ldrb.w	r3, [r1, #45]	; 0x2d
    2f52:	strb.w	r3, [r5, #45]	; 0x2d
    2f56:	ldrb.w	r3, [r1, #46]	; 0x2e
    2f5a:	strb.w	r3, [r5, #46]	; 0x2e
    2f5e:	ldrb.w	r3, [r1, #47]	; 0x2f
    2f62:	strb.w	r3, [r5, #47]	; 0x2f
    2f66:	ldrh	r3, [r1, #52]	; 0x34
    2f68:	ldr	r2, [r1, #48]	; 0x30
    2f6a:	str	r2, [r5, #48]	; 0x30
    2f6c:	strh	r3, [r5, #52]	; 0x34
    2f6e:	ldrb.w	r3, [r1, #56]	; 0x38
    2f72:	strb.w	r3, [r5, #56]	; 0x38
    2f76:	add.w	r4, r1, #60	; 0x3c
    2f7a:	ldmia	r4!, {r0, r1, r2, r3}
    2f7c:	add.w	r6, r5, #60	; 0x3c
    2f80:	stmia	r6!, {r0, r1, r2, r3}
    2f82:	ldmia	r4!, {r0, r1, r2, r3}
    2f84:	stmia	r6!, {r0, r1, r2, r3}
    2f86:	ldmia	r4!, {r0, r1, r2, r3}
    2f88:	stmia	r6!, {r0, r1, r2, r3}
    2f8a:	ldmia.w	r4, {r0, r1, r2, r3}
    2f8e:	stmia.w	r6, {r0, r1, r2, r3}
    2f92:	mov	r0, r5
    2f94:	pop	{r4, r5, r6}
    2f96:	bx	lr
    2f98:	.word	0x0009e144
    2f9c:	.word	0x0009d834
    2fa0:	.word	0x0009d80c

00002fa4 <_GLOBAL__sub_I__ZN5Synth2IO5wheelEh>:

    Adafruit_NeoTrellis IO::t_array[NEOTRELLIS_Y_DIM / 4][NEOTRELLIS_X_DIM / 4] = { { *new Adafruit_NeoTrellis(0x2E), *new Adafruit_NeoTrellis(0x2F) } };
    Adafruit_MultiTrellis IO::trellis = *new Adafruit_MultiTrellis((Adafruit_NeoTrellis *)IO::t_array, NEOTRELLIS_Y_DIM / 4, NEOTRELLIS_X_DIM / 4);
    boolean IO::initialized = false;
}
    2fa4:	push	{r4, r5, r6, lr}
                Serial.print(" out of range exception");
                return 0;
        }
    }

    Adafruit_NeoTrellis IO::t_array[NEOTRELLIS_Y_DIM / 4][NEOTRELLIS_X_DIM / 4] = { { *new Adafruit_NeoTrellis(0x2E), *new Adafruit_NeoTrellis(0x2F) } };
    2fa6:	movs	r0, #124	; 0x7c
    2fa8:	bl	98e4 <operator new(unsigned int)>
    2fac:	ldr	r4, [pc, #92]	; (300c <_GLOBAL__sub_I__ZN5Synth2IO5wheelEh+0x68>)
    2fae:	ldr	r5, [pc, #96]	; (3010 <_GLOBAL__sub_I__ZN5Synth2IO5wheelEh+0x6c>)
    2fb0:	mov	r6, r0
    2fb2:	movs	r1, #46	; 0x2e
    2fb4:	bl	6b58 <Adafruit_NeoTrellis::Adafruit_NeoTrellis(unsigned char)>
    2fb8:	mov	r1, r6
    2fba:	mov	r0, r4
    2fbc:	bl	2ee4 <Adafruit_NeoTrellis::Adafruit_NeoTrellis(Adafruit_NeoTrellis const&)>
    2fc0:	movs	r0, #124	; 0x7c
    2fc2:	bl	98e4 <operator new(unsigned int)>
    2fc6:	movs	r1, #47	; 0x2f
    2fc8:	mov	r6, r0
    2fca:	bl	6b58 <Adafruit_NeoTrellis::Adafruit_NeoTrellis(unsigned char)>
    2fce:	mov	r1, r6
    2fd0:	add.w	r0, r4, #124	; 0x7c
    2fd4:	bl	2ee4 <Adafruit_NeoTrellis::Adafruit_NeoTrellis(Adafruit_NeoTrellis const&)>
    2fd8:	mov	r2, r5
    2fda:	ldr	r1, [pc, #56]	; (3014 <_GLOBAL__sub_I__ZN5Synth2IO5wheelEh+0x70>)
    2fdc:	movs	r0, #0
    2fde:	bl	b944 <__aeabi_atexit>
    Adafruit_MultiTrellis IO::trellis = *new Adafruit_MultiTrellis((Adafruit_NeoTrellis *)IO::t_array, NEOTRELLIS_Y_DIM / 4, NEOTRELLIS_X_DIM / 4);
    2fe2:	movs	r0, #8
    2fe4:	bl	98e4 <operator new(unsigned int)>
    2fe8:	mov	r1, r4
    2fea:	mov	r6, r0
    2fec:	movs	r3, #2
    2fee:	movs	r2, #1
    2ff0:	bl	6bc8 <Adafruit_MultiTrellis::Adafruit_MultiTrellis(Adafruit_NeoTrellis*, unsigned char, unsigned char)>
    2ff4:	ldmia.w	r6, {r0, r1}
    2ff8:	ldr	r3, [pc, #28]	; (3018 <_GLOBAL__sub_I__ZN5Synth2IO5wheelEh+0x74>)
    2ffa:	stmia.w	r3, {r0, r1}
    2ffe:	mov	r2, r5
    3000:	mov	r0, r3
    3002:	ldr	r1, [pc, #24]	; (301c <_GLOBAL__sub_I__ZN5Synth2IO5wheelEh+0x78>)
    boolean IO::initialized = false;
}
    3004:	ldmia.w	sp!, {r4, r5, r6, lr}
                return 0;
        }
    }

    Adafruit_NeoTrellis IO::t_array[NEOTRELLIS_Y_DIM / 4][NEOTRELLIS_X_DIM / 4] = { { *new Adafruit_NeoTrellis(0x2E), *new Adafruit_NeoTrellis(0x2F) } };
    Adafruit_MultiTrellis IO::trellis = *new Adafruit_MultiTrellis((Adafruit_NeoTrellis *)IO::t_array, NEOTRELLIS_Y_DIM / 4, NEOTRELLIS_X_DIM / 4);
    3008:	b.w	b944 <__aeabi_atexit>
    300c:	.word	0x200125e0
    3010:	.word	0x20007db0
    3014:	.word	0x00002bcd
    3018:	.word	0x200126d8
    301c:	.word	0x00002bc9

00003020 <DMAChannel::~DMAChannel()>:
	}
	DMAChannel & operator = (const DMASetting &rhs) {
		copy_tcd(TCD, rhs.TCD);
		return *this;
	}
	~DMAChannel() {
    3020:	push	{r4, lr}
    3022:	mov	r4, r0
		release();
    3024:	bl	8940 <DMAChannel::release()>
	}
    3028:	mov	r0, r4
    302a:	pop	{r4, pc}

0000302c <_GLOBAL__sub_I__ZN14AudioOutputPWM9block_1stE>:
uint32_t  AudioOutputPWM::block_offset = 0;
bool AudioOutputPWM::update_responsibility = false;
uint8_t AudioOutputPWM::interrupt_count = 0;

DMAMEM uint32_t pwm_dma_buffer[AUDIO_BLOCK_SAMPLES*2];
DMAChannel AudioOutputPWM::dma(false);
    302c:	ldr	r2, [pc, #8]	; (3038 <_GLOBAL__sub_I__ZN14AudioOutputPWM9block_1stE+0xc>)
    302e:	ldr	r1, [pc, #12]	; (303c <_GLOBAL__sub_I__ZN14AudioOutputPWM9block_1stE+0x10>)
    3030:	ldr	r0, [pc, #12]	; (3040 <_GLOBAL__sub_I__ZN14AudioOutputPWM9block_1stE+0x14>)
    3032:	b.w	b944 <__aeabi_atexit>
    3036:	nop
    3038:	.word	0x20007db0
    303c:	.word	0x00003021
    3040:	.word	0x200126e0

00003044 <_GLOBAL__sub_I__ZN17AudioOutputPT821114block_left_1stE>:
#if defined(AUDIO_PT8211_OVERSAMPLING)
	static uint32_t i2s_tx_buffer[AUDIO_BLOCK_SAMPLES*4];
#else
	static uint32_t i2s_tx_buffer[AUDIO_BLOCK_SAMPLES];
#endif
DMAChannel AudioOutputPT8211::dma(false);
    3044:	ldr	r2, [pc, #8]	; (3050 <_GLOBAL__sub_I__ZN17AudioOutputPT821114block_left_1stE+0xc>)
    3046:	ldr	r1, [pc, #12]	; (3054 <_GLOBAL__sub_I__ZN17AudioOutputPT821114block_left_1stE+0x10>)
    3048:	ldr	r0, [pc, #12]	; (3058 <_GLOBAL__sub_I__ZN17AudioOutputPT821114block_left_1stE+0x14>)
    304a:	b.w	b944 <__aeabi_atexit>
    304e:	nop
    3050:	.word	0x20007db0
    3054:	.word	0x00003021
    3058:	.word	0x200126e8

0000305c <AudioEffectFreeverb::update()>:
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
#endif
} };

void AudioEffectFreeverb::update()
{
    305c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    3060:	sub	sp, #108	; 0x6c
    3062:	mov	r4, r0
	audio_block_t *outblock;
	int i;
	int16_t input, bufout, output;
	int32_t sum;

	outblock = allocate();
    3064:	bl	95bc <AudioStream::allocate()>
	if (!outblock) {
    3068:	str	r0, [sp, #84]	; 0x54
    306a:	cmp	r0, #0
    306c:	beq.w	3556 <AudioEffectFreeverb::update()+0x4fa>
		audio_block_t *tmp = receiveReadOnly(0);
		if (tmp) release(tmp);
		return;
	}
	block = receiveReadOnly(0);
    3070:	movs	r1, #0
    3072:	mov	r0, r4
    3074:	bl	96ec <AudioStream::receiveReadOnly(unsigned int)>
	if (!block) block = &zeroblock;
    3078:	str	r0, [sp, #88]	; 0x58
    307a:	cmp	r0, #0
    307c:	beq.w	3568 <AudioEffectFreeverb::update()+0x50c>
    3080:	ldr	r3, [pc, #212]	; (3158 <AudioEffectFreeverb::update()+0xfc>)
    3082:	str	r3, [sp, #100]	; 0x64
    3084:	movw	r9, #22092	; 0x564c
    3088:	movw	r5, #22094	; 0x564e
    308c:	ldrsh.w	r3, [r4, r9]
    3090:	str	r3, [sp, #12]
    3092:	movw	r0, #22096	; 0x5650
    3096:	ldrsh	r3, [r4, r5]
    3098:	str	r3, [sp, #96]	; 0x60
    309a:	movw	r7, #22098	; 0x5652
    309e:	ldrsh	r3, [r4, r0]
    30a0:	str	r3, [sp, #92]	; 0x5c
    30a2:	movw	r6, #22100	; 0x5654
    30a6:	ldrsh	r3, [r4, r7]
    30a8:	str	r3, [sp, #16]
    30aa:	movw	r1, #22102	; 0x5656
    30ae:	ldrsh	r3, [r4, r6]
    30b0:	str	r3, [sp, #28]
    30b2:	movw	r2, #22104	; 0x5658
    30b6:	ldrsh	r3, [r4, r1]
    30b8:	str	r3, [sp, #24]
    30ba:	ldrsh	r3, [r4, r2]
    30bc:	str	r3, [sp, #20]
    30be:	add.w	r3, r4, #22016	; 0x5600
    30c2:	mov	r2, r3
    30c4:	add.w	r9, r4, #25216	; 0x6280
    30c8:	mov	r6, r3
    30ca:	str.w	r9, [sp, #64]	; 0x40
    30ce:	add.w	r9, r2, #60	; 0x3c
    30d2:	adds	r2, #62	; 0x3e
    30d4:	str	r2, [sp, #40]	; 0x28
    30d6:	add.w	r2, r6, #64	; 0x40
    30da:	str	r2, [sp, #44]	; 0x2c
    30dc:	add.w	r2, r6, #66	; 0x42
    30e0:	str	r2, [sp, #48]	; 0x30
    30e2:	add.w	r2, r6, #68	; 0x44
    30e6:	str	r2, [sp, #52]	; 0x34
    30e8:	add.w	r2, r6, #70	; 0x46
    30ec:	str	r2, [sp, #56]	; 0x38
    30ee:	add.w	r2, r6, #72	; 0x48
    30f2:	ldr	r3, [sp, #64]	; 0x40
    30f4:	str	r2, [sp, #60]	; 0x3c
    30f6:	mov	r2, r6
    30f8:	adds	r2, #74	; 0x4a
    30fa:	str	r2, [sp, #8]
    30fc:	mov	r2, r3
    30fe:	adds	r2, #24
    3100:	str	r2, [sp, #64]	; 0x40
    3102:	mov	r2, r3
    3104:	adds	r2, #26
    3106:	movw	sl, #22106	; 0x565a
    310a:	str	r2, [sp, #68]	; 0x44
    310c:	movw	r8, #22110	; 0x565e
    3110:	mov	r2, r3
    3112:	movw	ip, #22108	; 0x565c
    3116:	movw	lr, #22112	; 0x5660
    311a:	adds	r2, #28
    311c:	adds	r3, #30
    311e:	ldrsh.w	fp, [r4, sl]
    3122:	str	r2, [sp, #72]	; 0x48
    3124:	ldrsh.w	r8, [r4, r8]
    3128:	ldrsh.w	ip, [r4, ip]
    312c:	ldrsh.w	lr, [r4, lr]
    3130:	str.w	r9, [sp, #4]
    3134:	str	r3, [sp, #76]	; 0x4c
    3136:	ldr	r3, [sp, #88]	; 0x58
static inline int32_t signed_saturate_rshift(int32_t val, int bits, int rshift) __attribute__((always_inline, unused));
static inline int32_t signed_saturate_rshift(int32_t val, int bits, int rshift)
{
#if defined (__ARM_ARCH_7EM__)
	int32_t out;
	asm volatile("ssat %0, %1, %2, asr %3" : "=r" (out) : "I" (bits), "r" (val), "I" (rshift));
    3138:	ldr	r0, [sp, #92]	; 0x5c
    313a:	ldr	r5, [sp, #96]	; 0x60
    313c:	str.w	fp, [sp, #32]
    3140:	adds	r2, r3, #2
    3142:	str	r2, [sp, #0]
    3144:	ldr	r2, [sp, #84]	; 0x54
    3146:	add.w	r3, r3, #258	; 0x102
    314a:	adds	r2, #2
    314c:	str	r2, [sp, #36]	; 0x24
    314e:	str	r3, [sp, #80]	; 0x50

		bufout = comb1buf[comb1index];
		sum += bufout;
		comb1filter = sat16(bufout * combdamp2 + comb1filter * combdamp1, 15);
		comb1buf[comb1index] = sat16(input + sat16(comb1filter * combfeeback, 15), 0);
		if (++comb1index >= sizeof(comb1buf)/sizeof(int16_t)) comb1index = 0;
    3150:	mov.w	sl, #0
    3154:	b.n	315c <AudioEffectFreeverb::update()+0x100>
    3156:	nop
    3158:	.word	0x0009d9d0
	block = receiveReadOnly(0);
	if (!block) block = &zeroblock;

	for (i=0; i < AUDIO_BLOCK_SAMPLES; i++) {
		// TODO: scale numerical range depending on roomsize & damping
		input = sat16(block->data[i] * 8738, 17); // for numerical headroom
    315c:	ldr	r3, [sp, #0]
    315e:	ldrsh.w	r2, [r3, #2]!
    3162:	str	r3, [sp, #0]
    3164:	add.w	r2, r2, r2, lsl #4
    3168:	add.w	r2, r2, r2, lsl #8
    316c:	lsls	r2, r2, #1
    316e:	ssat	r2, #16, r2, asr #17
		sum = 0;

		bufout = comb1buf[comb1index];
    3172:	ldr	r3, [sp, #4]
    3174:	ldr	r1, [sp, #12]
    3176:	ldrh	r6, [r3, #0]
    3178:	add.w	r7, r4, r6, lsl #1
    317c:	mul.w	r9, r1, ip
    3180:	ldrsh.w	r3, [r7, #28]
    3184:	mla	r9, r3, r8, r9
    3188:	ssat	r9, #16, r9, asr #15
		sum += bufout;
		comb1filter = sat16(bufout * combdamp2 + comb1filter * combdamp1, 15);
    318c:	sxth.w	r1, r9
    3190:	str	r1, [sp, #12]
		comb1buf[comb1index] = sat16(input + sat16(comb1filter * combfeeback, 15), 0);
    3192:	sxth	r2, r2
    3194:	mul.w	r9, r1, lr
    3198:	ssat	r9, #16, r9, asr #15
    319c:	add	r9, r2
    319e:	ssat	r9, #16, r9
		if (++comb1index >= sizeof(comb1buf)/sizeof(int16_t)) comb1index = 0;
    31a2:	adds	r6, #1
		sum = 0;

		bufout = comb1buf[comb1index];
		sum += bufout;
		comb1filter = sat16(bufout * combdamp2 + comb1filter * combdamp1, 15);
		comb1buf[comb1index] = sat16(input + sat16(comb1filter * combfeeback, 15), 0);
    31a4:	strh.w	r9, [r7, #28]
		if (++comb1index >= sizeof(comb1buf)/sizeof(int16_t)) comb1index = 0;
    31a8:	ldr	r1, [sp, #4]
    31aa:	uxth	r6, r6
    31ac:	movw	r7, #1115	; 0x45b
    31b0:	cmp	r6, r7
    31b2:	ite	ls
    31b4:	strhls	r6, [r1, #0]
    31b6:	strhhi.w	sl, [r1]

		bufout = comb2buf[comb2index];
    31ba:	ldr	r1, [sp, #40]	; 0x28
    31bc:	ldrh	r6, [r1, #0]
    31be:	add.w	r9, r4, r6, lsl #1
    31c2:	mul.w	r5, r5, ip
    31c6:	ldrsh.w	r7, [r9, #2260]	; 0x8d4
		sum += bufout;
    31ca:	add	r3, r7
    31cc:	mla	r5, r7, r8, r5
    31d0:	ssat	r5, #16, r5, asr #15
		comb2filter = sat16(bufout * combdamp2 + comb2filter * combdamp1, 15);
    31d4:	sxth	r5, r5
    31d6:	mul.w	r7, r5, lr
    31da:	ssat	r7, #16, r7, asr #15
    31de:	add	r7, r2
    31e0:	ssat	r7, #16, r7
		comb2buf[comb2index] = sat16(input + sat16(comb2filter * combfeeback, 15), 0);
		if (++comb2index >= sizeof(comb2buf)/sizeof(int16_t)) comb2index = 0;
    31e4:	adds	r6, #1
		if (++comb1index >= sizeof(comb1buf)/sizeof(int16_t)) comb1index = 0;

		bufout = comb2buf[comb2index];
		sum += bufout;
		comb2filter = sat16(bufout * combdamp2 + comb2filter * combdamp1, 15);
		comb2buf[comb2index] = sat16(input + sat16(comb2filter * combfeeback, 15), 0);
    31e6:	strh.w	r7, [r9, #2260]	; 0x8d4
		if (++comb2index >= sizeof(comb2buf)/sizeof(int16_t)) comb2index = 0;
    31ea:	uxth	r6, r6
    31ec:	movw	r7, #1187	; 0x4a3
    31f0:	cmp	r6, r7
    31f2:	itet	hi
    31f4:	ldrhi	r1, [sp, #40]	; 0x28
    31f6:	strhls	r6, [r1, #0]
    31f8:	strhhi.w	sl, [r1]

		bufout = comb3buf[comb3index];
    31fc:	ldr	r1, [sp, #44]	; 0x2c
    31fe:	ldrh	r6, [r1, #0]
    3200:	add.w	r7, r4, r6, lsl #1
    3204:	add.w	r7, r7, #4608	; 0x1200
    3208:	adds	r7, #28
    320a:	ldrsh.w	r9, [r7]
    320e:	mul.w	r0, r0, ip
		sum += bufout;
    3212:	add	r3, r9
    3214:	mla	r0, r9, r8, r0
    3218:	ssat	r0, #16, r0, asr #15
		comb3filter = sat16(bufout * combdamp2 + comb3filter * combdamp1, 15);
    321c:	sxth	r0, r0
    321e:	mul.w	r9, r0, lr
    3222:	ssat	r9, #16, r9, asr #15
    3226:	add	r9, r2
    3228:	ssat	r9, #16, r9
		comb3buf[comb3index] = sat16(input + sat16(comb3filter * combfeeback, 15), 0);
		if (++comb3index >= sizeof(comb3buf)/sizeof(int16_t)) comb3index = 0;
    322c:	adds	r6, #1
		if (++comb2index >= sizeof(comb2buf)/sizeof(int16_t)) comb2index = 0;

		bufout = comb3buf[comb3index];
		sum += bufout;
		comb3filter = sat16(bufout * combdamp2 + comb3filter * combdamp1, 15);
		comb3buf[comb3index] = sat16(input + sat16(comb3filter * combfeeback, 15), 0);
    322e:	strh.w	r9, [r7]
		if (++comb3index >= sizeof(comb3buf)/sizeof(int16_t)) comb3index = 0;
    3232:	uxth	r6, r6
    3234:	movw	r7, #1276	; 0x4fc
    3238:	cmp	r6, r7
    323a:	itet	hi
    323c:	ldrhi	r1, [sp, #44]	; 0x2c
    323e:	strhls	r6, [r1, #0]
    3240:	strhhi.w	sl, [r1]

		bufout = comb4buf[comb4index];
    3244:	ldr	r1, [sp, #48]	; 0x30
    3246:	ldrh	r6, [r1, #0]
    3248:	ldr	r1, [sp, #16]
    324a:	add.w	r7, r4, r6, lsl #1
    324e:	add.w	r7, r7, #7168	; 0x1c00
    3252:	adds	r7, #22
    3254:	ldrsh.w	r9, [r7]
    3258:	mul.w	fp, r1, ip
		sum += bufout;
    325c:	add	r3, r9
    325e:	mla	fp, r9, r8, fp
    3262:	ssat	fp, #16, fp, asr #15
		comb4filter = sat16(bufout * combdamp2 + comb4filter * combdamp1, 15);
    3266:	sxth.w	r9, fp
    326a:	str.w	r9, [sp, #16]
    326e:	mul.w	r9, r9, lr
    3272:	ssat	r9, #16, r9, asr #15
    3276:	add	r9, r2
    3278:	ssat	r9, #16, r9
		comb4buf[comb4index] = sat16(input + sat16(comb4filter * combfeeback, 15), 0);
		if (++comb4index >= sizeof(comb4buf)/sizeof(int16_t)) comb4index = 0;
    327c:	adds	r6, #1
		if (++comb3index >= sizeof(comb3buf)/sizeof(int16_t)) comb3index = 0;

		bufout = comb4buf[comb4index];
		sum += bufout;
		comb4filter = sat16(bufout * combdamp2 + comb4filter * combdamp1, 15);
		comb4buf[comb4index] = sat16(input + sat16(comb4filter * combfeeback, 15), 0);
    327e:	strh.w	r9, [r7]
		if (++comb4index >= sizeof(comb4buf)/sizeof(int16_t)) comb4index = 0;
    3282:	ldr	r1, [sp, #48]	; 0x30
    3284:	uxth	r6, r6
    3286:	movw	r7, #1355	; 0x54b
    328a:	cmp	r6, r7
    328c:	ite	ls
    328e:	strhls	r6, [r1, #0]
    3290:	strhhi.w	sl, [r1]

		bufout = comb5buf[comb5index];
    3294:	ldr	r1, [sp, #52]	; 0x34
    3296:	ldrh	r6, [r1, #0]
    3298:	ldr	r1, [sp, #28]
    329a:	add.w	r7, r4, r6, lsl #1
    329e:	add.w	r7, r7, #9856	; 0x2680
    32a2:	adds	r7, #46	; 0x2e
    32a4:	ldrsh.w	r9, [r7]
    32a8:	mul.w	fp, r1, ip
		sum += bufout;
    32ac:	add	r3, r9
    32ae:	mla	fp, r9, r8, fp
    32b2:	ssat	fp, #16, fp, asr #15
		comb5filter = sat16(bufout * combdamp2 + comb5filter * combdamp1, 15);
    32b6:	sxth.w	r9, fp
    32ba:	str.w	r9, [sp, #28]
    32be:	mul.w	r9, r9, lr
    32c2:	ssat	r9, #16, r9, asr #15
    32c6:	add	r9, r2
    32c8:	ssat	r9, #16, r9
		comb5buf[comb5index] = sat16(input + sat16(comb5filter * combfeeback, 15), 0);
		if (++comb5index >= sizeof(comb5buf)/sizeof(int16_t)) comb5index = 0;
    32cc:	adds	r6, #1
		if (++comb4index >= sizeof(comb4buf)/sizeof(int16_t)) comb4index = 0;

		bufout = comb5buf[comb5index];
		sum += bufout;
		comb5filter = sat16(bufout * combdamp2 + comb5filter * combdamp1, 15);
		comb5buf[comb5index] = sat16(input + sat16(comb5filter * combfeeback, 15), 0);
    32ce:	strh.w	r9, [r7]
		if (++comb5index >= sizeof(comb5buf)/sizeof(int16_t)) comb5index = 0;
    32d2:	ldr	r1, [sp, #52]	; 0x34
    32d4:	uxth	r6, r6
    32d6:	movw	r7, #1421	; 0x58d
    32da:	cmp	r6, r7
    32dc:	ite	ls
    32de:	strhls	r6, [r1, #0]
    32e0:	strhhi.w	sl, [r1]

		bufout = comb6buf[comb6index];
    32e4:	ldr	r1, [sp, #56]	; 0x38
    32e6:	ldrh	r6, [r1, #0]
    32e8:	ldr	r1, [sp, #24]
    32ea:	add.w	r7, r4, r6, lsl #1
    32ee:	add.w	r7, r7, #12736	; 0x31c0
    32f2:	adds	r7, #10
    32f4:	ldrsh.w	r9, [r7]
    32f8:	mul.w	fp, r1, ip
		sum += bufout;
    32fc:	add	r3, r9
    32fe:	mla	fp, r9, r8, fp
    3302:	ssat	fp, #16, fp, asr #15
		comb6filter = sat16(bufout * combdamp2 + comb6filter * combdamp1, 15);
    3306:	sxth.w	r9, fp
    330a:	str.w	r9, [sp, #24]
    330e:	mul.w	r9, r9, lr
    3312:	ssat	r9, #16, r9, asr #15
    3316:	add	r9, r2
    3318:	ssat	r9, #16, r9
		comb6buf[comb6index] = sat16(input + sat16(comb6filter * combfeeback, 15), 0);
		if (++comb6index >= sizeof(comb6buf)/sizeof(int16_t)) comb6index = 0;
    331c:	adds	r6, #1
		if (++comb5index >= sizeof(comb5buf)/sizeof(int16_t)) comb5index = 0;

		bufout = comb6buf[comb6index];
		sum += bufout;
		comb6filter = sat16(bufout * combdamp2 + comb6filter * combdamp1, 15);
		comb6buf[comb6index] = sat16(input + sat16(comb6filter * combfeeback, 15), 0);
    331e:	strh.w	r9, [r7]
		if (++comb6index >= sizeof(comb6buf)/sizeof(int16_t)) comb6index = 0;
    3322:	ldr	r1, [sp, #56]	; 0x38
    3324:	uxth	r6, r6
    3326:	movw	r7, #1490	; 0x5d2
    332a:	cmp	r6, r7
    332c:	ite	ls
    332e:	strhls	r6, [r1, #0]
    3330:	strhhi.w	sl, [r1]

		bufout = comb7buf[comb7index];
    3334:	ldr	r1, [sp, #60]	; 0x3c
    3336:	ldrh	r6, [r1, #0]
    3338:	ldr	r1, [sp, #20]
    333a:	add.w	r7, r4, r6, lsl #1
    333e:	add.w	r7, r7, #15680	; 0x3d40
    3342:	adds	r7, #48	; 0x30
    3344:	ldrsh.w	r9, [r7]
    3348:	mul.w	fp, r1, ip
		sum += bufout;
    334c:	add	r3, r9
    334e:	mla	fp, r9, r8, fp
    3352:	ssat	fp, #16, fp, asr #15
		comb7filter = sat16(bufout * combdamp2 + comb7filter * combdamp1, 15);
    3356:	sxth.w	r9, fp
    335a:	str.w	r9, [sp, #20]
    335e:	mul.w	r9, r9, lr
    3362:	ssat	r9, #16, r9, asr #15
    3366:	add	r9, r2
    3368:	ssat	r9, #16, r9
		comb7buf[comb7index] = sat16(input + sat16(comb7filter * combfeeback, 15), 0);
		if (++comb7index >= sizeof(comb7buf)/sizeof(int16_t)) comb7index = 0;
    336c:	adds	r6, #1
		if (++comb6index >= sizeof(comb6buf)/sizeof(int16_t)) comb6index = 0;

		bufout = comb7buf[comb7index];
		sum += bufout;
		comb7filter = sat16(bufout * combdamp2 + comb7filter * combdamp1, 15);
		comb7buf[comb7index] = sat16(input + sat16(comb7filter * combfeeback, 15), 0);
    336e:	strh.w	r9, [r7]
		if (++comb7index >= sizeof(comb7buf)/sizeof(int16_t)) comb7index = 0;
    3372:	ldr	r1, [sp, #60]	; 0x3c
    3374:	uxth	r6, r6
    3376:	movw	r7, #1556	; 0x614
    337a:	cmp	r6, r7
    337c:	ite	ls
    337e:	strhls	r6, [r1, #0]
    3380:	strhhi.w	sl, [r1]

		bufout = comb8buf[comb8index];
    3384:	ldr	r1, [sp, #8]
    3386:	ldrh	r6, [r1, #0]
    3388:	ldr	r1, [sp, #32]
    338a:	add.w	r7, r4, r6, lsl #1
    338e:	add.w	r7, r7, #18816	; 0x4980
    3392:	adds	r7, #26
    3394:	ldrsh.w	r9, [r7]
    3398:	mul.w	r1, r1, ip
		sum += bufout;
    339c:	add	r3, r9
    339e:	mla	r1, r9, r8, r1
    33a2:	ssat	r1, #16, r1, asr #15
		comb8filter = sat16(bufout * combdamp2 + comb8filter * combdamp1, 15);
    33a6:	sxth	r1, r1
    33a8:	str	r1, [sp, #32]
    33aa:	mul.w	r9, r1, lr
    33ae:	ssat	r9, #16, r9, asr #15
    33b2:	add	r2, r9
    33b4:	ssat	r2, #16, r2
		comb8buf[comb8index] = sat16(input + sat16(comb8filter * combfeeback, 15), 0);
		if (++comb8index >= sizeof(comb8buf)/sizeof(int16_t)) comb8index = 0;
    33b8:	adds	r6, #1
    33ba:	uxth	r6, r6
    33bc:	cmp.w	r6, #1616	; 0x650
		if (++comb7index >= sizeof(comb7buf)/sizeof(int16_t)) comb7index = 0;

		bufout = comb8buf[comb8index];
		sum += bufout;
		comb8filter = sat16(bufout * combdamp2 + comb8filter * combdamp1, 15);
		comb8buf[comb8index] = sat16(input + sat16(comb8filter * combfeeback, 15), 0);
    33c0:	strh	r2, [r7, #0]
		if (++comb8index >= sizeof(comb8buf)/sizeof(int16_t)) comb8index = 0;
    33c2:	itet	hi
    33c4:	ldrhi	r2, [sp, #8]
    33c6:	ldrls	r1, [sp, #8]
    33c8:	strhhi.w	sl, [r2]
    33cc:	movw	r2, #31457	; 0x7ae1
    33d0:	it	ls
    33d2:	strhls	r6, [r1, #0]
    33d4:	mul.w	r3, r2, r3
    33d8:	ssat	r3, #16, r3, asr #17

		output = sat16(sum * 31457, 17);

		bufout = allpass1buf[allpass1index];
    33dc:	ldr	r1, [sp, #64]	; 0x40
    33de:	ldrh	r6, [r1, #0]
    33e0:	add.w	r7, r4, r6, lsl #1
    33e4:	add.w	r7, r7, #22016	; 0x5600
    33e8:	sxth.w	r9, r3
		allpass1buf[allpass1index] = output + (bufout >> 1);
    33ec:	ldrsh.w	r2, [r7, #98]	; 0x62
    33f0:	add.w	r3, r3, r2, asr #1
    33f4:	strh.w	r3, [r7, #98]	; 0x62
    33f8:	rsb	r2, r9, r2
    33fc:	ssat	r2, #16, r2, asr #1
		output = sat16(bufout - output, 1);
		if (++allpass1index >= sizeof(allpass1buf)/sizeof(int16_t)) allpass1index = 0;
    3400:	adds	r6, #1
    3402:	uxth	r6, r6
    3404:	cmp.w	r6, #556	; 0x22c
    3408:	it	cc
    340a:	movcc	r3, r1

		bufout = allpass2buf[allpass2index];
    340c:	ldr	r1, [sp, #68]	; 0x44
		output = sat16(sum * 31457, 17);

		bufout = allpass1buf[allpass1index];
		allpass1buf[allpass1index] = output + (bufout >> 1);
		output = sat16(bufout - output, 1);
		if (++allpass1index >= sizeof(allpass1buf)/sizeof(int16_t)) allpass1index = 0;
    340e:	it	cc
    3410:	strhcc	r6, [r3, #0]

		bufout = allpass2buf[allpass2index];
    3412:	ldrh	r6, [r1, #0]
		output = sat16(sum * 31457, 17);

		bufout = allpass1buf[allpass1index];
		allpass1buf[allpass1index] = output + (bufout >> 1);
		output = sat16(bufout - output, 1);
		if (++allpass1index >= sizeof(allpass1buf)/sizeof(int16_t)) allpass1index = 0;
    3414:	it	cs
    3416:	ldrcs	r3, [sp, #64]	; 0x40
    3418:	add.w	r7, r4, r6, lsl #1

		bufout = allpass2buf[allpass2index];
    341c:	add.w	r7, r7, #23168	; 0x5a80
		output = sat16(sum * 31457, 17);

		bufout = allpass1buf[allpass1index];
		allpass1buf[allpass1index] = output + (bufout >> 1);
		output = sat16(bufout - output, 1);
		if (++allpass1index >= sizeof(allpass1buf)/sizeof(int16_t)) allpass1index = 0;
    3420:	it	cs
    3422:	strhcs.w	sl, [r3]

		bufout = allpass2buf[allpass2index];
		allpass2buf[allpass2index] = output + (bufout >> 1);
    3426:	ldrsh.w	r3, [r7, #58]	; 0x3a

		output = sat16(sum * 31457, 17);

		bufout = allpass1buf[allpass1index];
		allpass1buf[allpass1index] = output + (bufout >> 1);
		output = sat16(bufout - output, 1);
    342a:	sxth.w	r9, r2
		if (++allpass1index >= sizeof(allpass1buf)/sizeof(int16_t)) allpass1index = 0;

		bufout = allpass2buf[allpass2index];
		allpass2buf[allpass2index] = output + (bufout >> 1);
    342e:	add.w	r2, r2, r3, asr #1
    3432:	strh	r2, [r7, #58]	; 0x3a
    3434:	rsb	r3, r9, r3
    3438:	ssat	r3, #16, r3, asr #1
		output = sat16(bufout - output, 1);
		if (++allpass2index >= sizeof(allpass2buf)/sizeof(int16_t)) allpass2index = 0;
    343c:	adds	r6, #1
    343e:	uxth	r6, r6
    3440:	cmp.w	r6, #440	; 0x1b8
    3444:	it	ls
    3446:	movls	r2, r1

		bufout = allpass3buf[allpass3index];
    3448:	ldr	r1, [sp, #72]	; 0x48
		if (++allpass1index >= sizeof(allpass1buf)/sizeof(int16_t)) allpass1index = 0;

		bufout = allpass2buf[allpass2index];
		allpass2buf[allpass2index] = output + (bufout >> 1);
		output = sat16(bufout - output, 1);
		if (++allpass2index >= sizeof(allpass2buf)/sizeof(int16_t)) allpass2index = 0;
    344a:	it	ls
    344c:	strhls	r6, [r2, #0]

		bufout = allpass3buf[allpass3index];
    344e:	ldrh	r6, [r1, #0]
		if (++allpass1index >= sizeof(allpass1buf)/sizeof(int16_t)) allpass1index = 0;

		bufout = allpass2buf[allpass2index];
		allpass2buf[allpass2index] = output + (bufout >> 1);
		output = sat16(bufout - output, 1);
		if (++allpass2index >= sizeof(allpass2buf)/sizeof(int16_t)) allpass2index = 0;
    3450:	it	hi
    3452:	ldrhi	r2, [sp, #68]	; 0x44
    3454:	add.w	r7, r4, r6, lsl #1

		bufout = allpass3buf[allpass3index];
    3458:	add.w	r7, r7, #24064	; 0x5e00
		if (++allpass1index >= sizeof(allpass1buf)/sizeof(int16_t)) allpass1index = 0;

		bufout = allpass2buf[allpass2index];
		allpass2buf[allpass2index] = output + (bufout >> 1);
		output = sat16(bufout - output, 1);
		if (++allpass2index >= sizeof(allpass2buf)/sizeof(int16_t)) allpass2index = 0;
    345c:	it	hi
    345e:	strhhi.w	sl, [r2]

		bufout = allpass3buf[allpass3index];
		allpass3buf[allpass3index] = output + (bufout >> 1);
    3462:	ldrsh.w	r2, [r7, #44]	; 0x2c
		output = sat16(bufout - output, 1);
		if (++allpass1index >= sizeof(allpass1buf)/sizeof(int16_t)) allpass1index = 0;

		bufout = allpass2buf[allpass2index];
		allpass2buf[allpass2index] = output + (bufout >> 1);
		output = sat16(bufout - output, 1);
    3466:	sxth.w	r9, r3
		if (++allpass2index >= sizeof(allpass2buf)/sizeof(int16_t)) allpass2index = 0;

		bufout = allpass3buf[allpass3index];
		allpass3buf[allpass3index] = output + (bufout >> 1);
    346a:	add.w	r3, r3, r2, asr #1
    346e:	strh	r3, [r7, #44]	; 0x2c
    3470:	rsb	r2, r9, r2
    3474:	ssat	r2, #16, r2, asr #1
		output = sat16(bufout - output, 1);
		if (++allpass3index >= sizeof(allpass3buf)/sizeof(int16_t)) allpass3index = 0;
    3478:	adds	r6, #1
    347a:	uxth	r6, r6
    347c:	cmp.w	r6, #340	; 0x154
    3480:	it	ls
    3482:	movls	r3, r1

		bufout = allpass4buf[allpass4index];
    3484:	ldr	r1, [sp, #76]	; 0x4c
		if (++allpass2index >= sizeof(allpass2buf)/sizeof(int16_t)) allpass2index = 0;

		bufout = allpass3buf[allpass3index];
		allpass3buf[allpass3index] = output + (bufout >> 1);
		output = sat16(bufout - output, 1);
		if (++allpass3index >= sizeof(allpass3buf)/sizeof(int16_t)) allpass3index = 0;
    3486:	it	ls
    3488:	strhls	r6, [r3, #0]

		bufout = allpass4buf[allpass4index];
    348a:	ldrh	r6, [r1, #0]
		if (++allpass2index >= sizeof(allpass2buf)/sizeof(int16_t)) allpass2index = 0;

		bufout = allpass3buf[allpass3index];
		allpass3buf[allpass3index] = output + (bufout >> 1);
		output = sat16(bufout - output, 1);
		if (++allpass3index >= sizeof(allpass3buf)/sizeof(int16_t)) allpass3index = 0;
    348c:	it	hi
    348e:	ldrhi	r3, [sp, #72]	; 0x48
    3490:	add.w	r7, r4, r6, lsl #1

		bufout = allpass4buf[allpass4index];
    3494:	add.w	r7, r7, #24704	; 0x6080
		if (++allpass2index >= sizeof(allpass2buf)/sizeof(int16_t)) allpass2index = 0;

		bufout = allpass3buf[allpass3index];
		allpass3buf[allpass3index] = output + (bufout >> 1);
		output = sat16(bufout - output, 1);
		if (++allpass3index >= sizeof(allpass3buf)/sizeof(int16_t)) allpass3index = 0;
    3498:	it	hi
    349a:	strhhi.w	sl, [r3]

		bufout = allpass4buf[allpass4index];
		allpass4buf[allpass4index] = output + (bufout >> 1);
    349e:	ldrsh.w	r3, [r7, #86]	; 0x56
		output = sat16(bufout - output, 1);
		if (++allpass2index >= sizeof(allpass2buf)/sizeof(int16_t)) allpass2index = 0;

		bufout = allpass3buf[allpass3index];
		allpass3buf[allpass3index] = output + (bufout >> 1);
		output = sat16(bufout - output, 1);
    34a2:	sxth.w	r9, r2
		if (++allpass3index >= sizeof(allpass3buf)/sizeof(int16_t)) allpass3index = 0;

		bufout = allpass4buf[allpass4index];
		allpass4buf[allpass4index] = output + (bufout >> 1);
    34a6:	add.w	r2, r2, r3, asr #1
    34aa:	strh.w	r2, [r7, #86]	; 0x56
    34ae:	rsb	r3, r9, r3
    34b2:	ssat	r3, #16, r3, asr #1
		output = sat16(bufout - output, 1);
		if (++allpass4index >= sizeof(allpass4buf)/sizeof(int16_t)) allpass4index = 0;
    34b6:	adds	r6, #1
    34b8:	uxth	r6, r6
    34ba:	cmp	r6, #224	; 0xe0
    34bc:	itet	ls
    34be:	movls	r2, r1
    34c0:	ldrhi	r2, [sp, #76]	; 0x4c
    34c2:	strhls	r6, [r2, #0]
		output = sat16(bufout - output, 1);
		if (++allpass3index >= sizeof(allpass3buf)/sizeof(int16_t)) allpass3index = 0;

		bufout = allpass4buf[allpass4index];
		allpass4buf[allpass4index] = output + (bufout >> 1);
		output = sat16(bufout - output, 1);
    34c4:	sxth	r3, r3
    34c6:	rsb	r3, r3, r3, lsl #4
		if (++allpass4index >= sizeof(allpass4buf)/sizeof(int16_t)) allpass4index = 0;
    34ca:	it	hi
    34cc:	strhhi.w	sl, [r2]
    34d0:	lsls	r3, r3, #1
    34d2:	ssat	r3, #16, r3

		outblock->data[i] = sat16(output * 30, 0);
    34d6:	ldr	r2, [sp, #36]	; 0x24
    34d8:	strh.w	r3, [r2, #2]!
		return;
	}
	block = receiveReadOnly(0);
	if (!block) block = &zeroblock;

	for (i=0; i < AUDIO_BLOCK_SAMPLES; i++) {
    34dc:	ldr	r3, [sp, #0]
		bufout = allpass4buf[allpass4index];
		allpass4buf[allpass4index] = output + (bufout >> 1);
		output = sat16(bufout - output, 1);
		if (++allpass4index >= sizeof(allpass4buf)/sizeof(int16_t)) allpass4index = 0;

		outblock->data[i] = sat16(output * 30, 0);
    34de:	str	r2, [sp, #36]	; 0x24
		return;
	}
	block = receiveReadOnly(0);
	if (!block) block = &zeroblock;

	for (i=0; i < AUDIO_BLOCK_SAMPLES; i++) {
    34e0:	ldr	r2, [sp, #80]	; 0x50
    34e2:	cmp	r3, r2
    34e4:	bne.w	315c <AudioEffectFreeverb::update()+0x100>
    34e8:	movw	r3, #22092	; 0x564c
    34ec:	ldrh.w	r1, [sp, #12]
    34f0:	strh	r1, [r4, r3]
    34f2:	movw	r2, #22094	; 0x564e
    34f6:	movw	r6, #22096	; 0x5650
    34fa:	movw	r3, #22098	; 0x5652
    34fe:	strh	r5, [r4, r2]
    3500:	ldrh.w	r1, [sp, #16]
    3504:	strh	r0, [r4, r6]
    3506:	movw	r5, #22100	; 0x5654
    350a:	strh	r1, [r4, r3]
    350c:	movw	r2, #22102	; 0x5656
    3510:	ldrh.w	r3, [sp, #28]
    3514:	strh	r3, [r4, r5]
    3516:	movw	r0, #22106	; 0x565a
    351a:	ldrh.w	r3, [sp, #24]
    351e:	strh	r3, [r4, r2]
    3520:	movw	r6, #22104	; 0x5658
    3524:	ldrh.w	r3, [sp, #20]
    3528:	ldr.w	fp, [sp, #32]
    352c:	strh	r3, [r4, r6]
    352e:	strh.w	fp, [r4, r0]
		output = sat16(bufout - output, 1);
		if (++allpass4index >= sizeof(allpass4buf)/sizeof(int16_t)) allpass4index = 0;

		outblock->data[i] = sat16(output * 30, 0);
	}
	transmit(outblock);
    3532:	mov	r0, r4
    3534:	ldr	r4, [sp, #84]	; 0x54
    3536:	movs	r2, #0
    3538:	mov	r1, r4
    353a:	bl	96b8 <AudioStream::transmit(audio_block_struct*, unsigned char)>
	release(outblock);
    353e:	mov	r0, r4
    3540:	bl	9664 <AudioStream::release(audio_block_struct*)>
	if (block != &zeroblock) release((audio_block_t *)block);
    3544:	ldr	r0, [sp, #88]	; 0x58
    3546:	ldr	r2, [sp, #100]	; 0x64
    3548:	cmp	r0, r2
    354a:	beq.n	3562 <AudioEffectFreeverb::update()+0x506>
#elif defined(KINETISL)
	audio_block_t *block;
	block = receiveReadOnly(0);
	if (block) release(block);
#endif
}
    354c:	add	sp, #108	; 0x6c
    354e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}

		outblock->data[i] = sat16(output * 30, 0);
	}
	transmit(outblock);
	release(outblock);
	if (block != &zeroblock) release((audio_block_t *)block);
    3552:	b.w	9664 <AudioStream::release(audio_block_struct*)>
	int16_t input, bufout, output;
	int32_t sum;

	outblock = allocate();
	if (!outblock) {
		audio_block_t *tmp = receiveReadOnly(0);
    3556:	mov	r1, r0
    3558:	mov	r0, r4
    355a:	bl	96ec <AudioStream::receiveReadOnly(unsigned int)>
		if (tmp) release(tmp);
    355e:	cmp	r0, #0
    3560:	bne.n	354c <AudioEffectFreeverb::update()+0x4f0>
#elif defined(KINETISL)
	audio_block_t *block;
	block = receiveReadOnly(0);
	if (block) release(block);
#endif
}
    3562:	add	sp, #108	; 0x6c
    3564:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
		audio_block_t *tmp = receiveReadOnly(0);
		if (tmp) release(tmp);
		return;
	}
	block = receiveReadOnly(0);
	if (!block) block = &zeroblock;
    3568:	ldr	r3, [pc, #4]	; (3570 <AudioEffectFreeverb::update()+0x514>)
    356a:	str	r3, [sp, #100]	; 0x64
    356c:	str	r3, [sp, #88]	; 0x58
    356e:	b.n	3084 <AudioEffectFreeverb::update()+0x28>
    3570:	.word	0x0009d9d0

00003574 <AudioEffectFreeverb::AudioEffectFreeverb()>:

#include <Arduino.h>
#include "effect_freeverb.h"
#include "utility/dspinst.h"

AudioEffectFreeverb::AudioEffectFreeverb() : AudioStream(1, inputQueueArray)
    3574:	push	{r3, r4, r5, r6, r7, lr}
    3576:	mov	r4, r0

class AudioStream
{
public:
	AudioStream(unsigned char ninput, audio_block_t **iqueue) :
		num_inputs(ninput), inputQueue(iqueue) {
    3578:	ldr	r3, [pc, #412]	; (3718 <AudioEffectFreeverb::AudioEffectFreeverb()+0x1a4>)
    357a:	str	r3, [r0, #0]
			active = false;
    357c:	movs	r1, #0

class AudioStream
{
public:
	AudioStream(unsigned char ninput, audio_block_t **iqueue) :
		num_inputs(ninput), inputQueue(iqueue) {
    357e:	movs	r0, #1
    3580:	add.w	r2, r4, #24
			active = false;
			destination_list = NULL;
    3584:	mov	r3, r1

class AudioStream
{
public:
	AudioStream(unsigned char ninput, audio_block_t **iqueue) :
		num_inputs(ninput), inputQueue(iqueue) {
    3586:	strb	r0, [r4, #9]
    3588:	str	r2, [r4, #16]
			active = false;
    358a:	strb	r1, [r4, #8]
			destination_list = NULL;
    358c:	str	r1, [r4, #12]
    358e:	b.n	3592 <AudioEffectFreeverb::AudioEffectFreeverb()+0x1e>
    3590:	ldr	r2, [r4, #16]
			for (int i=0; i < num_inputs; i++) {
				inputQueue[i] = NULL;
    3592:	str.w	r1, [r2, r3, lsl #2]
public:
	AudioStream(unsigned char ninput, audio_block_t **iqueue) :
		num_inputs(ninput), inputQueue(iqueue) {
			active = false;
			destination_list = NULL;
			for (int i=0; i < num_inputs; i++) {
    3596:	ldrb	r2, [r4, #9]
    3598:	adds	r3, #1
    359a:	cmp	r2, r3
    359c:	bgt.n	3590 <AudioEffectFreeverb::AudioEffectFreeverb()+0x1c>
				inputQueue[i] = NULL;
			}
			// add to a simple list, for update_all
			// TODO: replace with a proper data flow analysis in update_all
			if (first_update == NULL) {
    359e:	ldr	r3, [pc, #380]	; (371c <AudioEffectFreeverb::AudioEffectFreeverb()+0x1a8>)
    35a0:	ldr	r2, [r3, #0]
    35a2:	cbnz	r2, 35a8 <AudioEffectFreeverb::AudioEffectFreeverb()+0x34>
    35a4:	b.n	3714 <AudioEffectFreeverb::AudioEffectFreeverb()+0x1a0>
				first_update = this;
			} else {
				AudioStream *p;
				for (p=first_update; p->next_update; p = p->next_update) ;
    35a6:	mov	r2, r3
    35a8:	ldr	r3, [r2, #20]
    35aa:	cmp	r3, #0
    35ac:	bne.n	35a6 <AudioEffectFreeverb::AudioEffectFreeverb()+0x32>
				p->next_update = this;
    35ae:	str	r4, [r2, #20]
    35b0:	mov	r0, r4
			}
			next_update = NULL;
    35b2:	movs	r5, #0
    35b4:	ldr	r3, [pc, #360]	; (3720 <AudioEffectFreeverb::AudioEffectFreeverb()+0x1ac>)
    35b6:	str	r5, [r4, #20]
			cpu_cycles = 0;
    35b8:	strh	r5, [r4, #4]
			cpu_cycles_max = 0;
    35ba:	strh	r5, [r4, #6]
			numConnections = 0;
    35bc:	strb	r5, [r4, #10]
{
	memset(comb1buf, 0, sizeof(comb1buf));
    35be:	mov	r1, r5

#include <Arduino.h>
#include "effect_freeverb.h"
#include "utility/dspinst.h"

AudioEffectFreeverb::AudioEffectFreeverb() : AudioStream(1, inputQueueArray)
    35c0:	str.w	r3, [r0], #28
{
	memset(comb1buf, 0, sizeof(comb1buf));
    35c4:	movw	r2, #2232	; 0x8b8
    35c8:	bl	c110 <memset>
	memset(comb2buf, 0, sizeof(comb2buf));
    35cc:	mov	r1, r5
    35ce:	movw	r2, #2376	; 0x948
    35d2:	addw	r0, r4, #2260	; 0x8d4
    35d6:	bl	c110 <memset>
	memset(comb3buf, 0, sizeof(comb3buf));
    35da:	add.w	r0, r4, #4608	; 0x1200
    35de:	mov	r1, r5
    35e0:	movw	r2, #2554	; 0x9fa
    35e4:	adds	r0, #28
    35e6:	bl	c110 <memset>
	memset(comb4buf, 0, sizeof(comb4buf));
    35ea:	add.w	r0, r4, #7168	; 0x1c00
    35ee:	mov	r1, r5
    35f0:	movw	r2, #2712	; 0xa98
    35f4:	adds	r0, #22
    35f6:	bl	c110 <memset>
	memset(comb5buf, 0, sizeof(comb5buf));
    35fa:	add.w	r0, r4, #9856	; 0x2680
    35fe:	mov	r1, r5
    3600:	movw	r2, #2844	; 0xb1c
    3604:	adds	r0, #46	; 0x2e
    3606:	bl	c110 <memset>
	memset(comb6buf, 0, sizeof(comb6buf));
    360a:	add.w	r0, r4, #12736	; 0x31c0
    360e:	mov	r1, r5
    3610:	movw	r2, #2982	; 0xba6
    3614:	adds	r0, #10
    3616:	bl	c110 <memset>
	memset(comb7buf, 0, sizeof(comb7buf));
    361a:	add.w	r0, r4, #15680	; 0x3d40
    361e:	mov	r1, r5
    3620:	movw	r2, #3114	; 0xc2a
    3624:	adds	r0, #48	; 0x30
    3626:	bl	c110 <memset>
	memset(comb8buf, 0, sizeof(comb8buf));
    362a:	add.w	r0, r4, #18816	; 0x4980
    362e:	mov	r1, r5
    3630:	movw	r2, #3234	; 0xca2
    3634:	adds	r0, #26
    3636:	bl	c110 <memset>
	comb1index = 0;
    363a:	movw	r3, #22076	; 0x563c
	comb2index = 0;
    363e:	movw	r0, #22078	; 0x563e
	comb3index = 0;
    3642:	movw	r7, #22080	; 0x5640
	comb4index = 0;
    3646:	movw	r1, #22082	; 0x5642
	comb5index = 0;
    364a:	movw	r2, #22084	; 0x5644
	memset(comb4buf, 0, sizeof(comb4buf));
	memset(comb5buf, 0, sizeof(comb5buf));
	memset(comb6buf, 0, sizeof(comb6buf));
	memset(comb7buf, 0, sizeof(comb7buf));
	memset(comb8buf, 0, sizeof(comb8buf));
	comb1index = 0;
    364e:	strh	r5, [r4, r3]
	comb2index = 0;
	comb3index = 0;
	comb4index = 0;
	comb5index = 0;
	comb6index = 0;
    3650:	movw	r6, #22086	; 0x5646
	memset(comb5buf, 0, sizeof(comb5buf));
	memset(comb6buf, 0, sizeof(comb6buf));
	memset(comb7buf, 0, sizeof(comb7buf));
	memset(comb8buf, 0, sizeof(comb8buf));
	comb1index = 0;
	comb2index = 0;
    3654:	strh	r5, [r4, r0]
	comb3index = 0;
	comb4index = 0;
	comb5index = 0;
	comb6index = 0;
	comb7index = 0;
    3656:	movw	r3, #22088	; 0x5648
	comb8index = 0;
    365a:	movw	r0, #22090	; 0x564a
	memset(comb6buf, 0, sizeof(comb6buf));
	memset(comb7buf, 0, sizeof(comb7buf));
	memset(comb8buf, 0, sizeof(comb8buf));
	comb1index = 0;
	comb2index = 0;
	comb3index = 0;
    365e:	strh	r5, [r4, r7]
	comb4index = 0;
    3660:	strh	r5, [r4, r1]
	comb5index = 0;
	comb6index = 0;
	comb7index = 0;
	comb8index = 0;
	comb1filter = 0;
    3662:	movw	r7, #22092	; 0x564c
	memset(comb8buf, 0, sizeof(comb8buf));
	comb1index = 0;
	comb2index = 0;
	comb3index = 0;
	comb4index = 0;
	comb5index = 0;
    3666:	strh	r5, [r4, r2]
	comb6index = 0;
	comb7index = 0;
	comb8index = 0;
	comb1filter = 0;
	comb2filter = 0;
    3668:	movw	r1, #22094	; 0x564e
	comb3filter = 0;
    366c:	movw	r2, #22096	; 0x5650
	comb1index = 0;
	comb2index = 0;
	comb3index = 0;
	comb4index = 0;
	comb5index = 0;
	comb6index = 0;
    3670:	strh	r5, [r4, r6]
	comb7index = 0;
    3672:	strh	r5, [r4, r3]
	comb8index = 0;
	comb1filter = 0;
	comb2filter = 0;
	comb3filter = 0;
	comb4filter = 0;
    3674:	movw	r6, #22098	; 0x5652
	comb3index = 0;
	comb4index = 0;
	comb5index = 0;
	comb6index = 0;
	comb7index = 0;
	comb8index = 0;
    3678:	strh	r5, [r4, r0]
	comb1filter = 0;
	comb2filter = 0;
	comb3filter = 0;
	comb4filter = 0;
	comb5filter = 0;
    367a:	movw	r3, #22100	; 0x5654
	comb6filter = 0;
    367e:	movw	r0, #22102	; 0x5656
	comb4index = 0;
	comb5index = 0;
	comb6index = 0;
	comb7index = 0;
	comb8index = 0;
	comb1filter = 0;
    3682:	strh	r5, [r4, r7]
	comb2filter = 0;
    3684:	strh	r5, [r4, r1]
	comb3filter = 0;
	comb4filter = 0;
	comb5filter = 0;
	comb6filter = 0;
	comb7filter = 0;
    3686:	movw	r7, #22104	; 0x5658
	comb6index = 0;
	comb7index = 0;
	comb8index = 0;
	comb1filter = 0;
	comb2filter = 0;
	comb3filter = 0;
    368a:	strh	r5, [r4, r2]
	comb4filter = 0;
	comb5filter = 0;
	comb6filter = 0;
	comb7filter = 0;
	comb8filter = 0;
    368c:	movw	r1, #22106	; 0x565a
	combdamp1 = 6553;
    3690:	movw	r2, #22108	; 0x565c
	comb7index = 0;
	comb8index = 0;
	comb1filter = 0;
	comb2filter = 0;
	comb3filter = 0;
	comb4filter = 0;
    3694:	strh	r5, [r4, r6]
	comb5filter = 0;
    3696:	strh	r5, [r4, r3]
	comb6filter = 0;
	comb7filter = 0;
	comb8filter = 0;
	combdamp1 = 6553;
	combdamp2 = 26215;
    3698:	movw	r6, #22110	; 0x565e
	comb1filter = 0;
	comb2filter = 0;
	comb3filter = 0;
	comb4filter = 0;
	comb5filter = 0;
	comb6filter = 0;
    369c:	strh	r5, [r4, r0]
	comb7filter = 0;
	comb8filter = 0;
	combdamp1 = 6553;
	combdamp2 = 26215;
	combfeeback = 27524;
    369e:	movw	r3, #22112	; 0x5660
	comb4filter = 0;
	comb5filter = 0;
	comb6filter = 0;
	comb7filter = 0;
	comb8filter = 0;
	combdamp1 = 6553;
    36a2:	movw	r0, #6553	; 0x1999
	comb2filter = 0;
	comb3filter = 0;
	comb4filter = 0;
	comb5filter = 0;
	comb6filter = 0;
	comb7filter = 0;
    36a6:	strh	r5, [r4, r7]
	comb8filter = 0;
    36a8:	strh	r5, [r4, r1]
	combdamp1 = 6553;
	combdamp2 = 26215;
    36aa:	movw	r7, #26215	; 0x6667
	comb4filter = 0;
	comb5filter = 0;
	comb6filter = 0;
	comb7filter = 0;
	comb8filter = 0;
	combdamp1 = 6553;
    36ae:	strh	r0, [r4, r2]
	combdamp2 = 26215;
	combfeeback = 27524;
    36b0:	movw	r2, #27524	; 0x6b84
	memset(allpass1buf, 0, sizeof(allpass1buf));
    36b4:	add.w	r0, r4, #22016	; 0x5600
    36b8:	mov	r1, r5
	comb5filter = 0;
	comb6filter = 0;
	comb7filter = 0;
	comb8filter = 0;
	combdamp1 = 6553;
	combdamp2 = 26215;
    36ba:	strh	r7, [r4, r6]
	combfeeback = 27524;
	memset(allpass1buf, 0, sizeof(allpass1buf));
    36bc:	adds	r0, #98	; 0x62
	comb6filter = 0;
	comb7filter = 0;
	comb8filter = 0;
	combdamp1 = 6553;
	combdamp2 = 26215;
	combfeeback = 27524;
    36be:	strh	r2, [r4, r3]
	memset(allpass1buf, 0, sizeof(allpass1buf));
    36c0:	mov.w	r2, #1112	; 0x458
    36c4:	bl	c110 <memset>
	memset(allpass2buf, 0, sizeof(allpass2buf));
    36c8:	add.w	r0, r4, #23168	; 0x5a80
    36cc:	mov	r1, r5
    36ce:	movw	r2, #882	; 0x372
    36d2:	adds	r0, #58	; 0x3a
    36d4:	bl	c110 <memset>
	memset(allpass3buf, 0, sizeof(allpass3buf));
    36d8:	add.w	r0, r4, #24064	; 0x5e00
    36dc:	mov	r1, r5
    36de:	movw	r2, #682	; 0x2aa
    36e2:	adds	r0, #44	; 0x2c
    36e4:	bl	c110 <memset>
	memset(allpass4buf, 0, sizeof(allpass4buf));
    36e8:	add.w	r0, r4, #24704	; 0x6080
    36ec:	mov	r1, r5
    36ee:	mov.w	r2, #450	; 0x1c2
    36f2:	adds	r0, #86	; 0x56
    36f4:	bl	c110 <memset>
	allpass1index = 0;
    36f8:	movw	r0, #25240	; 0x6298
	allpass2index = 0;
    36fc:	movw	r1, #25242	; 0x629a
	allpass3index = 0;
    3700:	movw	r2, #25244	; 0x629c
	allpass4index = 0;
    3704:	movw	r3, #25246	; 0x629e
	combfeeback = 27524;
	memset(allpass1buf, 0, sizeof(allpass1buf));
	memset(allpass2buf, 0, sizeof(allpass2buf));
	memset(allpass3buf, 0, sizeof(allpass3buf));
	memset(allpass4buf, 0, sizeof(allpass4buf));
	allpass1index = 0;
    3708:	strh	r5, [r4, r0]
	allpass2index = 0;
    370a:	strh	r5, [r4, r1]
	allpass3index = 0;
	allpass4index = 0;
}
    370c:	mov	r0, r4
	memset(allpass2buf, 0, sizeof(allpass2buf));
	memset(allpass3buf, 0, sizeof(allpass3buf));
	memset(allpass4buf, 0, sizeof(allpass4buf));
	allpass1index = 0;
	allpass2index = 0;
	allpass3index = 0;
    370e:	strh	r5, [r4, r2]
	allpass4index = 0;
    3710:	strh	r5, [r4, r3]
}
    3712:	pop	{r3, r4, r5, r6, r7, pc}
				inputQueue[i] = NULL;
			}
			// add to a simple list, for update_all
			// TODO: replace with a proper data flow analysis in update_all
			if (first_update == NULL) {
				first_update = this;
    3714:	str	r4, [r3, #0]
    3716:	b.n	35b0 <AudioEffectFreeverb::AudioEffectFreeverb()+0x3c>
    3718:	.word	0x00010324
    371c:	.word	0x20012b9c
    3720:	.word	0x0009dadc

00003724 <AudioControlSGTL5000::disable()>:
	void setAddress(uint8_t level);
	bool enable(void);
	bool disable(void) { return false; }
    3724:	movs	r0, #0
    3726:	bx	lr

00003728 <AudioControlSGTL5000::inputLevel(float)>:
	bool volume(float n) { return volumeInteger(n * 129 + 0.499); }
	bool inputLevel(float n) {return false;}
    3728:	movs	r0, #0
    372a:	bx	lr

0000372c <AudioControlSGTL5000::write(unsigned int, unsigned int)>:
	val |= Wire.read();
	return val;
}

bool AudioControlSGTL5000::write(unsigned int reg, unsigned int val)
{
    372c:	push	{r3, r4, r5, r6, r7, lr}
	void end();
	void setClock(uint32_t frequency);
	void setSDA(uint8_t pin);
	void setSCL(uint8_t pin);
	void beginTransmission(uint8_t address) {
		txBuffer[0] = (address << 1);
    372e:	ldr	r4, [pc, #80]	; (3780 <AudioControlSGTL5000::write(unsigned int, unsigned int)+0x54>)
    3730:	ldrb	r3, [r0, #8]
	if (reg == CHIP_ANA_CTRL) ana_ctrl = val;
    3732:	cmp	r1, #36	; 0x24
    3734:	it	eq
    3736:	strheq	r2, [r0, #6]
    3738:	lsls	r3, r3, #1
		transmitting = 1;
    373a:	movs	r5, #1
	val |= Wire.read();
	return val;
}

bool AudioControlSGTL5000::write(unsigned int reg, unsigned int val)
{
    373c:	mov	r6, r1
	}
	size_t write(long n) {
		return write((uint8_t)n);
	}
	size_t write(unsigned int n) {
		return write((uint8_t)n);
    373e:	mov	r0, r4
    3740:	ubfx	r1, r1, #8, #8
    3744:	mov	r7, r2
	void end();
	void setClock(uint32_t frequency);
	void setSDA(uint8_t pin);
	void setSCL(uint8_t pin);
	void beginTransmission(uint8_t address) {
		txBuffer[0] = (address << 1);
    3746:	strb.w	r3, [r4, #59]	; 0x3b
		transmitting = 1;
    374a:	strb.w	r5, [r4, #94]	; 0x5e
		txBufferLength = 1;
    374e:	strb.w	r5, [r4, #93]	; 0x5d
	}
	size_t write(long n) {
		return write((uint8_t)n);
	}
	size_t write(unsigned int n) {
		return write((uint8_t)n);
    3752:	bl	5084 <TwoWire::write(unsigned char)>
    3756:	uxtb	r1, r6
    3758:	mov	r0, r4
    375a:	bl	5084 <TwoWire::write(unsigned char)>
    375e:	ubfx	r1, r7, #8, #8
    3762:	mov	r0, r4
    3764:	bl	5084 <TwoWire::write(unsigned char)>
    3768:	uxtb	r1, r7
    376a:	mov	r0, r4
    376c:	bl	5084 <TwoWire::write(unsigned char)>
	void beginTransmission(int address) {
		beginTransmission((uint8_t)address);
	}
	uint8_t endTransmission(uint8_t sendStop);
	uint8_t endTransmission(void) {
		return endTransmission(1);
    3770:	mov	r1, r5
    3772:	mov	r0, r4
    3774:	bl	535c <TwoWire::endTransmission(unsigned char)>
	Wire.write(reg);
	Wire.write(val >> 8);
	Wire.write(val);
	if (Wire.endTransmission() == 0) return true;
	return false;
}
    3778:	clz	r0, r0
    377c:	lsrs	r0, r0, #5
    377e:	pop	{r3, r4, r5, r6, r7, pc}
    3780:	.word	0x20007f20

00003784 <AudioControlSGTL5000::enable()>:
		i2c_addr = SGTL5000_I2C_ADDR_CS_HIGH;
	}
}

bool AudioControlSGTL5000::enable(void)
{
    3784:	push	{r4, r5, r6, lr}
	muted = true;
    3786:	movs	r6, #1
		i2c_addr = SGTL5000_I2C_ADDR_CS_HIGH;
	}
}

bool AudioControlSGTL5000::enable(void)
{
    3788:	mov	r4, r0
	muted = true;
    378a:	strb	r6, [r0, #4]
	Wire.begin();
    378c:	ldr	r0, [pc, #208]	; (3860 <AudioControlSGTL5000::enable()+0xdc>)
    378e:	bl	50ac <TwoWire::begin()>
	delay(5);
    3792:	movs	r0, #5
    3794:	bl	78a8 <delay>
	//Serial.print("chip ID = ");
	//delay(5);
	//unsigned int n = read(CHIP_ID);
	//Serial.println(n, HEX);

	int r = write(CHIP_ANA_POWER, 0x4060);  // VDDD is externally driven with 1.8V
    3798:	mov	r0, r4
    379a:	movw	r2, #16480	; 0x4060
    379e:	movs	r1, #48	; 0x30
    37a0:	bl	372c <AudioControlSGTL5000::write(unsigned int, unsigned int)>
	if (!r) return false;
    37a4:	mov	r5, r0
    37a6:	cmp	r0, #0
    37a8:	beq.n	385c <AudioControlSGTL5000::enable()+0xd8>
	write(CHIP_LINREG_CTRL, 0x006C);  // VDDA & VDDIO both over 3.1V
    37aa:	movs	r2, #108	; 0x6c
    37ac:	movs	r1, #38	; 0x26
    37ae:	mov	r0, r4
    37b0:	bl	372c <AudioControlSGTL5000::write(unsigned int, unsigned int)>
	write(CHIP_REF_CTRL, 0x01F2); // VAG=1.575, normal ramp, +12.5% bias current
    37b4:	mov.w	r2, #498	; 0x1f2
    37b8:	movs	r1, #40	; 0x28
    37ba:	mov	r0, r4
    37bc:	bl	372c <AudioControlSGTL5000::write(unsigned int, unsigned int)>
	write(CHIP_LINE_OUT_CTRL, 0x0F22); // LO_VAGCNTRL=1.65V, OUT_CURRENT=0.54mA
    37c0:	movw	r2, #3874	; 0xf22
    37c4:	movs	r1, #44	; 0x2c
    37c6:	mov	r0, r4
    37c8:	bl	372c <AudioControlSGTL5000::write(unsigned int, unsigned int)>
	write(CHIP_SHORT_CTRL, 0x4446);  // allow up to 125mA
    37cc:	movw	r2, #17478	; 0x4446
    37d0:	movs	r1, #60	; 0x3c
    37d2:	mov	r0, r4
    37d4:	bl	372c <AudioControlSGTL5000::write(unsigned int, unsigned int)>
	write(CHIP_ANA_CTRL, 0x0137);  // enable zero cross detectors
    37d8:	movw	r2, #311	; 0x137
    37dc:	movs	r1, #36	; 0x24
    37de:	mov	r0, r4
    37e0:	bl	372c <AudioControlSGTL5000::write(unsigned int, unsigned int)>
	write(CHIP_ANA_POWER, 0x40FF); // power up: lineout, hp, adc, dac
    37e4:	movw	r2, #16639	; 0x40ff
    37e8:	movs	r1, #48	; 0x30
    37ea:	mov	r0, r4
    37ec:	bl	372c <AudioControlSGTL5000::write(unsigned int, unsigned int)>
	write(CHIP_DIG_POWER, 0x0073); // power up all digital stuff
    37f0:	movs	r2, #115	; 0x73
    37f2:	movs	r1, #2
    37f4:	mov	r0, r4
    37f6:	bl	372c <AudioControlSGTL5000::write(unsigned int, unsigned int)>
	delay(400);
    37fa:	mov.w	r0, #400	; 0x190
    37fe:	bl	78a8 <delay>
	write(CHIP_LINE_OUT_VOL, 0x1D1D); // default approx 1.3 volts peak-to-peak
    3802:	movw	r2, #7453	; 0x1d1d
    3806:	movs	r1, #46	; 0x2e
    3808:	mov	r0, r4
    380a:	bl	372c <AudioControlSGTL5000::write(unsigned int, unsigned int)>
	write(CHIP_CLK_CTRL, 0x0004);  // 44.1 kHz, 256*Fs
    380e:	movs	r2, #4
    3810:	mov	r1, r2
    3812:	mov	r0, r4
    3814:	bl	372c <AudioControlSGTL5000::write(unsigned int, unsigned int)>
	write(CHIP_I2S_CTRL, 0x0130); // SCLK=32*Fs, 16bit, I2S format
    3818:	mov.w	r2, #304	; 0x130
    381c:	movs	r1, #6
    381e:	mov	r0, r4
    3820:	bl	372c <AudioControlSGTL5000::write(unsigned int, unsigned int)>
	// default signal routing is ok?
	write(CHIP_SSS_CTRL, 0x0010); // ADC->I2S, I2S->DAC
    3824:	movs	r2, #16
    3826:	movs	r1, #10
    3828:	mov	r0, r4
    382a:	bl	372c <AudioControlSGTL5000::write(unsigned int, unsigned int)>
	write(CHIP_ADCDAC_CTRL, 0x0000); // disable dac mute
    382e:	movs	r2, #0
    3830:	movs	r1, #14
    3832:	mov	r0, r4
    3834:	bl	372c <AudioControlSGTL5000::write(unsigned int, unsigned int)>
	write(CHIP_DAC_VOL, 0x3C3C); // digital gain, 0dB
    3838:	movw	r2, #15420	; 0x3c3c
    383c:	movs	r1, #16
    383e:	mov	r0, r4
    3840:	bl	372c <AudioControlSGTL5000::write(unsigned int, unsigned int)>
	write(CHIP_ANA_HP_CTRL, 0x7F7F); // set volume (lowest level)
    3844:	movw	r2, #32639	; 0x7f7f
    3848:	movs	r1, #34	; 0x22
    384a:	mov	r0, r4
    384c:	bl	372c <AudioControlSGTL5000::write(unsigned int, unsigned int)>
	write(CHIP_ANA_CTRL, 0x0036);  // enable zero cross detectors
    3850:	movs	r2, #54	; 0x36
    3852:	movs	r1, #36	; 0x24
    3854:	mov	r0, r4
    3856:	bl	372c <AudioControlSGTL5000::write(unsigned int, unsigned int)>
	//mute = false;
	semi_automated = true;
    385a:	strb	r6, [r4, #9]
	return true;
}
    385c:	mov	r0, r5
    385e:	pop	{r4, r5, r6, pc}
    3860:	.word	0x20007f20

00003864 <AudioControlSGTL5000::inputSelect(int)>:
	bool muteHeadphone(void) { return write(0x0024, ana_ctrl | (1<<4)); }
	bool unmuteHeadphone(void) { return write(0x0024, ana_ctrl & ~(1<<4)); }
	bool muteLineout(void) { return write(0x0024, ana_ctrl | (1<<8)); }
	bool unmuteLineout(void) { return write(0x0024, ana_ctrl & ~(1<<8)); }
	bool inputSelect(int n) {
    3864:	push	{r4, lr}
    3866:	mov	r4, r0
		if (n == AUDIO_INPUT_LINEIN) {
    3868:	cbz	r1, 3872 <AudioControlSGTL5000::inputSelect(int)+0xe>
			return write(0x0020, 0x055) // +7.5dB gain (1.3Vp-p full scale)
			 && write(0x0024, ana_ctrl | (1<<2)); // enable linein
		} else if (n == AUDIO_INPUT_MIC) {
    386a:	cmp	r1, #1
    386c:	beq.n	3892 <AudioControlSGTL5000::inputSelect(int)+0x2e>
			 && write(0x0020, 0x088)     // input gain +12dB (is this enough?)
			 && write(0x0024, ana_ctrl & ~(1<<2)); // enable mic
		} else {
			return false;
		}
	}
    386e:	movs	r0, #0
    3870:	pop	{r4, pc}
	bool unmuteHeadphone(void) { return write(0x0024, ana_ctrl & ~(1<<4)); }
	bool muteLineout(void) { return write(0x0024, ana_ctrl | (1<<8)); }
	bool unmuteLineout(void) { return write(0x0024, ana_ctrl & ~(1<<8)); }
	bool inputSelect(int n) {
		if (n == AUDIO_INPUT_LINEIN) {
			return write(0x0020, 0x055) // +7.5dB gain (1.3Vp-p full scale)
    3872:	movs	r2, #85	; 0x55
    3874:	movs	r1, #32
    3876:	bl	372c <AudioControlSGTL5000::write(unsigned int, unsigned int)>
			 && write(0x0024, ana_ctrl | (1<<2)); // enable linein
    387a:	cmp	r0, #0
    387c:	beq.n	386e <AudioControlSGTL5000::inputSelect(int)+0xa>
    387e:	ldrh	r2, [r4, #6]
    3880:	orr.w	r2, r2, #4
    3884:	mov	r0, r4
    3886:	uxth	r2, r2
    3888:	movs	r1, #36	; 0x24
			 && write(0x0020, 0x088)     // input gain +12dB (is this enough?)
			 && write(0x0024, ana_ctrl & ~(1<<2)); // enable mic
		} else {
			return false;
		}
	}
    388a:	ldmia.w	sp!, {r4, lr}
	bool muteLineout(void) { return write(0x0024, ana_ctrl | (1<<8)); }
	bool unmuteLineout(void) { return write(0x0024, ana_ctrl & ~(1<<8)); }
	bool inputSelect(int n) {
		if (n == AUDIO_INPUT_LINEIN) {
			return write(0x0020, 0x055) // +7.5dB gain (1.3Vp-p full scale)
			 && write(0x0024, ana_ctrl | (1<<2)); // enable linein
    388e:	b.w	372c <AudioControlSGTL5000::write(unsigned int, unsigned int)>
		} else if (n == AUDIO_INPUT_MIC) {
			return write(0x002A, 0x0173) // mic preamp gain = +40dB
    3892:	movw	r2, #371	; 0x173
    3896:	movs	r1, #42	; 0x2a
    3898:	bl	372c <AudioControlSGTL5000::write(unsigned int, unsigned int)>
			 && write(0x0020, 0x088)     // input gain +12dB (is this enough?)
			 && write(0x0024, ana_ctrl & ~(1<<2)); // enable mic
    389c:	cmp	r0, #0
    389e:	beq.n	386e <AudioControlSGTL5000::inputSelect(int)+0xa>
		if (n == AUDIO_INPUT_LINEIN) {
			return write(0x0020, 0x055) // +7.5dB gain (1.3Vp-p full scale)
			 && write(0x0024, ana_ctrl | (1<<2)); // enable linein
		} else if (n == AUDIO_INPUT_MIC) {
			return write(0x002A, 0x0173) // mic preamp gain = +40dB
			 && write(0x0020, 0x088)     // input gain +12dB (is this enough?)
    38a0:	movs	r2, #136	; 0x88
    38a2:	movs	r1, #32
    38a4:	mov	r0, r4
    38a6:	bl	372c <AudioControlSGTL5000::write(unsigned int, unsigned int)>
    38aa:	cmp	r0, #0
    38ac:	beq.n	386e <AudioControlSGTL5000::inputSelect(int)+0xa>
			 && write(0x0024, ana_ctrl & ~(1<<2)); // enable mic
    38ae:	ldrh	r2, [r4, #6]
    38b0:	mov	r0, r4
    38b2:	bic.w	r2, r2, #4
    38b6:	movs	r1, #36	; 0x24
		} else {
			return false;
		}
	}
    38b8:	ldmia.w	sp!, {r4, lr}
			return write(0x0020, 0x055) // +7.5dB gain (1.3Vp-p full scale)
			 && write(0x0024, ana_ctrl | (1<<2)); // enable linein
		} else if (n == AUDIO_INPUT_MIC) {
			return write(0x002A, 0x0173) // mic preamp gain = +40dB
			 && write(0x0020, 0x088)     // input gain +12dB (is this enough?)
			 && write(0x0024, ana_ctrl & ~(1<<2)); // enable mic
    38bc:	b.w	372c <AudioControlSGTL5000::write(unsigned int, unsigned int)>

000038c0 <AudioControlSGTL5000::volumeInteger(unsigned int)>:
	if(!write(reg,val1)) return 0;
	return val1;
}

bool AudioControlSGTL5000::volumeInteger(unsigned int n)
{
    38c0:	push	{r3, r4, r5, lr}
    38c2:	mov	r5, r0
	if (n == 0) {
    38c4:	cbz	r1, 3904 <AudioControlSGTL5000::volumeInteger(unsigned int)+0x44>
		muted = true;
		write(CHIP_ANA_HP_CTRL, 0x7F7F);
		return muteHeadphone();
	} else if (n > 0x80) {
    38c6:	cmp	r1, #128	; 0x80
		n = 0;
	} else {
		n = 0x80 - n;
	}
	if (muted) {
    38c8:	ldrb	r3, [r0, #4]
		write(CHIP_ANA_HP_CTRL, 0x7F7F);
		return muteHeadphone();
	} else if (n > 0x80) {
		n = 0;
	} else {
		n = 0x80 - n;
    38ca:	itte	ls
    38cc:	rsbls	r4, r1, #128	; 0x80
    38d0:	orrls.w	r4, r4, r4, lsl #8
    38d4:	movhi	r4, #0
	}
	if (muted) {
    38d6:	cbnz	r3, 38e6 <AudioControlSGTL5000::volumeInteger(unsigned int)+0x26>
		muted = false;
		unmuteHeadphone();
	}
	n = n | (n << 8);
	return write(CHIP_ANA_HP_CTRL, n);  // set volume
    38d8:	mov	r2, r4
    38da:	mov	r0, r5
    38dc:	movs	r1, #34	; 0x22
}
    38de:	ldmia.w	sp!, {r3, r4, r5, lr}
	if (muted) {
		muted = false;
		unmuteHeadphone();
	}
	n = n | (n << 8);
	return write(CHIP_ANA_HP_CTRL, n);  // set volume
    38e2:	b.w	372c <AudioControlSGTL5000::write(unsigned int, unsigned int)>
	bool enable(void);
	bool disable(void) { return false; }
	bool volume(float n) { return volumeInteger(n * 129 + 0.499); }
	bool inputLevel(float n) {return false;}
	bool muteHeadphone(void) { return write(0x0024, ana_ctrl | (1<<4)); }
	bool unmuteHeadphone(void) { return write(0x0024, ana_ctrl & ~(1<<4)); }
    38e6:	ldrh	r2, [r0, #6]
		n = 0;
	} else {
		n = 0x80 - n;
	}
	if (muted) {
		muted = false;
    38e8:	movs	r3, #0
    38ea:	bic.w	r2, r2, #16
    38ee:	strb	r3, [r0, #4]
    38f0:	movs	r1, #36	; 0x24
    38f2:	bl	372c <AudioControlSGTL5000::write(unsigned int, unsigned int)>
		unmuteHeadphone();
	}
	n = n | (n << 8);
	return write(CHIP_ANA_HP_CTRL, n);  // set volume
    38f6:	mov	r2, r4
    38f8:	mov	r0, r5
    38fa:	movs	r1, #34	; 0x22
}
    38fc:	ldmia.w	sp!, {r3, r4, r5, lr}
	if (muted) {
		muted = false;
		unmuteHeadphone();
	}
	n = n | (n << 8);
	return write(CHIP_ANA_HP_CTRL, n);  // set volume
    3900:	b.w	372c <AudioControlSGTL5000::write(unsigned int, unsigned int)>
}

bool AudioControlSGTL5000::volumeInteger(unsigned int n)
{
	if (n == 0) {
		muted = true;
    3904:	movs	r3, #1
    3906:	strb	r3, [r0, #4]
		write(CHIP_ANA_HP_CTRL, 0x7F7F);
    3908:	movw	r2, #32639	; 0x7f7f
    390c:	movs	r1, #34	; 0x22
    390e:	bl	372c <AudioControlSGTL5000::write(unsigned int, unsigned int)>
	void setAddress(uint8_t level);
	bool enable(void);
	bool disable(void) { return false; }
	bool volume(float n) { return volumeInteger(n * 129 + 0.499); }
	bool inputLevel(float n) {return false;}
	bool muteHeadphone(void) { return write(0x0024, ana_ctrl | (1<<4)); }
    3912:	ldrh	r2, [r5, #6]
    3914:	orr.w	r2, r2, #16
    3918:	mov	r0, r5
    391a:	uxth	r2, r2
    391c:	movs	r1, #36	; 0x24
		muted = false;
		unmuteHeadphone();
	}
	n = n | (n << 8);
	return write(CHIP_ANA_HP_CTRL, n);  // set volume
}
    391e:	ldmia.w	sp!, {r3, r4, r5, lr}
    3922:	b.w	372c <AudioControlSGTL5000::write(unsigned int, unsigned int)>
    3926:	nop

00003928 <AudioControlSGTL5000::volume(float)>:
public:
	AudioControlSGTL5000(void) : i2c_addr(0x0A) { }
	void setAddress(uint8_t level);
	bool enable(void);
	bool disable(void) { return false; }
	bool volume(float n) { return volumeInteger(n * 129 + 0.499); }
    3928:	vldr	s14, [pc, #20]	; 3940 <AudioControlSGTL5000::volume(float)+0x18>
    392c:	vldr	s15, [pc, #20]	; 3944 <AudioControlSGTL5000::volume(float)+0x1c>
    3930:	vfma.f32	s15, s0, s14
    3934:	vcvt.u32.f32	s15, s15
    3938:	vmov	r1, s15
    393c:	b.w	38c0 <AudioControlSGTL5000::volumeInteger(unsigned int)>
    3940:	.word	0x43010000
    3944:	.word	0x3eff7cee

00003948 <AudioEffectBitcrusher::update()>:

#include <Arduino.h>
#include "effect_bitcrusher.h"

void AudioEffectBitcrusher::update(void)
{
    3948:	push	{r3, r4, r5, r6, r7, lr}
	audio_block_t *block;
	uint32_t i;
	uint32_t sampleSquidge, sampleSqueeze; //squidge is bitdepth, squeeze is for samplerate
			
	if (crushBits == 16 && sampleStep <= 1) {
    394a:	ldrb	r3, [r0, #24]
    394c:	cmp	r3, #16

#include <Arduino.h>
#include "effect_bitcrusher.h"

void AudioEffectBitcrusher::update(void)
{
    394e:	mov	r4, r0
	uint32_t i;
	uint32_t sampleSquidge, sampleSqueeze; //squidge is bitdepth, squeeze is for samplerate
			
	if (crushBits == 16 && sampleStep <= 1) {
		// nothing to do. Output is sent through clean, then exit the function
		block = receiveReadOnly();
    3950:	mov.w	r1, #0
{
	audio_block_t *block;
	uint32_t i;
	uint32_t sampleSquidge, sampleSqueeze; //squidge is bitdepth, squeeze is for samplerate
			
	if (crushBits == 16 && sampleStep <= 1) {
    3954:	beq.n	39f6 <AudioEffectBitcrusher::update()+0xae>
		release(block);
		return;
	}
	// start of processing functions. Could be more elegant based on external
	// functions but left like this to enable code optimisation later.
	block = receiveWritable();
    3956:	mov	r0, r4
    3958:	bl	9704 <AudioStream::receiveWritable(unsigned int)>
	if (!block) return;
    395c:	mov	r5, r0
    395e:	cmp	r0, #0
    3960:	beq.n	3a34 <AudioEffectBitcrusher::update()+0xec>

	if (sampleStep <= 1) { //no sample rate mods, just crush the bitdepth.
    3962:	ldrb	r3, [r4, #25]
    3964:	cmp	r3, #1
    3966:	bls.n	3a18 <AudioEffectBitcrusher::update()+0xd0>
			sampleSquidge = block->data[i] >> (16-crushBits);
			// shift bits left again to regain the volume level.
			// fills with zeroes.
		 	block->data[i] = sampleSquidge << (16-crushBits);
		}
	} else if (crushBits == 16) { //bitcrusher not being used, samplerate mods only.
    3968:	ldrb	r2, [r4, #24]
    396a:	cmp	r2, #16
    396c:	mov.w	r6, #0
    3970:	beq.n	39c8 <AudioEffectBitcrusher::update()+0x80>
	} else {           //both being used. crush those bits and mash those samples.
		i=0;
		while (i < AUDIO_BLOCK_SAMPLES) {
			// save the root sample. this will pick up a root sample
			// every _sampleStep_ samples.
			sampleSqueeze = block->data[i];
    3972:	add.w	r2, r5, r6, lsl #1
    3976:	ldrsh.w	r7, [r2, #4]
			for (int j = 0; j < sampleStep && i < AUDIO_BLOCK_SAMPLES; j++) {
    397a:	cbz	r3, 39bc <AudioEffectBitcrusher::update()+0x74>
    397c:	cmp	r6, #128	; 0x80
    397e:	beq.n	3a04 <AudioEffectBitcrusher::update()+0xbc>
    3980:	add.w	r0, r5, r6, lsl #1
    3984:	adds	r0, #2
    3986:	mov	r2, r6
    3988:	b.n	398e <AudioEffectBitcrusher::update()+0x46>
    398a:	cmp	r2, #128	; 0x80
    398c:	beq.n	3a04 <AudioEffectBitcrusher::update()+0xbc>
 				// shift bits right to cut off fine detail sampleSquidge
				// is a uint32 so sign extension will not occur, fills
				// with zeroes.
				sampleSquidge = sampleSqueeze >> (16-crushBits);
    398e:	ldrb	r3, [r4, #24]
    3990:	rsb	r3, r3, #16
 				// shift bits left again to regain the volume level.
				// fills with zeroes. paste into buffer sample +
				// sampleStep offset.
				block->data[i] = sampleSquidge << (16-crushBits);
    3994:	lsr.w	r1, r7, r3
    3998:	lsl.w	r3, r1, r3
    399c:	strh.w	r3, [r0, #2]!
				i++;
    39a0:	adds	r2, #1
		i=0;
		while (i < AUDIO_BLOCK_SAMPLES) {
			// save the root sample. this will pick up a root sample
			// every _sampleStep_ samples.
			sampleSqueeze = block->data[i];
			for (int j = 0; j < sampleStep && i < AUDIO_BLOCK_SAMPLES; j++) {
    39a2:	ldrb	r3, [r4, #25]
    39a4:	subs	r1, r2, r6
    39a6:	cmp	r1, r3
    39a8:	blt.n	398a <AudioEffectBitcrusher::update()+0x42>
				i++;
			}
		}
	} else {           //both being used. crush those bits and mash those samples.
		i=0;
		while (i < AUDIO_BLOCK_SAMPLES) {
    39aa:	cmp	r2, #128	; 0x80
    39ac:	beq.n	3a04 <AudioEffectBitcrusher::update()+0xbc>
    39ae:	mov	r6, r2
			// save the root sample. this will pick up a root sample
			// every _sampleStep_ samples.
			sampleSqueeze = block->data[i];
    39b0:	add.w	r2, r5, r6, lsl #1
    39b4:	ldrsh.w	r7, [r2, #4]
			for (int j = 0; j < sampleStep && i < AUDIO_BLOCK_SAMPLES; j++) {
    39b8:	cmp	r3, #0
    39ba:	bne.n	397c <AudioEffectBitcrusher::update()+0x34>
    39bc:	mov	r2, r6
    39be:	b.n	39aa <AudioEffectBitcrusher::update()+0x62>
		i=0;
		while (i < AUDIO_BLOCK_SAMPLES) {
			// save the root sample. this will pick up a root
			// sample every _sampleStep_ samples.
			sampleSqueeze = block->data[i];
			for (int j = 0; j < sampleStep && i < AUDIO_BLOCK_SAMPLES; j++) {
    39c0:	mov	r2, r6
			// fills with zeroes.
		 	block->data[i] = sampleSquidge << (16-crushBits);
		}
	} else if (crushBits == 16) { //bitcrusher not being used, samplerate mods only.
		i=0;
		while (i < AUDIO_BLOCK_SAMPLES) {
    39c2:	cmp	r2, #128	; 0x80
    39c4:	beq.n	3a04 <AudioEffectBitcrusher::update()+0xbc>
    39c6:	mov	r6, r2
			// save the root sample. this will pick up a root
			// sample every _sampleStep_ samples.
			sampleSqueeze = block->data[i];
    39c8:	add.w	r2, r5, r6, lsl #1
    39cc:	ldrsh.w	r7, [r2, #4]
			for (int j = 0; j < sampleStep && i < AUDIO_BLOCK_SAMPLES; j++) {
    39d0:	cmp	r3, #0
    39d2:	beq.n	39c0 <AudioEffectBitcrusher::update()+0x78>
    39d4:	cmp	r6, #128	; 0x80
    39d6:	beq.n	3a04 <AudioEffectBitcrusher::update()+0xbc>
    39d8:	add.w	r1, r5, r6, lsl #1
    39dc:	adds	r1, #2
    39de:	mov	r2, r6
    39e0:	b.n	39e6 <AudioEffectBitcrusher::update()+0x9e>
    39e2:	cmp	r2, #128	; 0x80
    39e4:	beq.n	3a04 <AudioEffectBitcrusher::update()+0xbc>
 				// for each repeated sample, paste in the current
				// root sample, then move onto the next step.
				block->data[i] = sampleSqueeze;
    39e6:	strh.w	r7, [r1, #2]!
				i++;
    39ea:	adds	r2, #1
		i=0;
		while (i < AUDIO_BLOCK_SAMPLES) {
			// save the root sample. this will pick up a root
			// sample every _sampleStep_ samples.
			sampleSqueeze = block->data[i];
			for (int j = 0; j < sampleStep && i < AUDIO_BLOCK_SAMPLES; j++) {
    39ec:	ldrb	r3, [r4, #25]
    39ee:	subs	r0, r2, r6
    39f0:	cmp	r0, r3
    39f2:	blt.n	39e2 <AudioEffectBitcrusher::update()+0x9a>
    39f4:	b.n	39c2 <AudioEffectBitcrusher::update()+0x7a>
{
	audio_block_t *block;
	uint32_t i;
	uint32_t sampleSquidge, sampleSqueeze; //squidge is bitdepth, squeeze is for samplerate
			
	if (crushBits == 16 && sampleStep <= 1) {
    39f6:	ldrb	r3, [r0, #25]
    39f8:	cmp	r3, #1
    39fa:	bhi.n	3956 <AudioEffectBitcrusher::update()+0xe>
		// nothing to do. Output is sent through clean, then exit the function
		block = receiveReadOnly();
    39fc:	bl	96ec <AudioStream::receiveReadOnly(unsigned int)>
		if (!block) return;
    3a00:	mov	r5, r0
    3a02:	cbz	r0, 3a34 <AudioEffectBitcrusher::update()+0xec>
				block->data[i] = sampleSquidge << (16-crushBits);
				i++;
			}
		}
	}
	transmit(block);
    3a04:	mov	r0, r4
    3a06:	mov	r1, r5
    3a08:	movs	r2, #0
    3a0a:	bl	96b8 <AudioStream::transmit(audio_block_struct*, unsigned char)>
	release(block);
    3a0e:	mov	r0, r5
}
    3a10:	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
				i++;
			}
		}
	}
	transmit(block);
	release(block);
    3a14:	b.w	9664 <AudioStream::release(audio_block_struct*)>
    3a18:	adds	r1, r0, #2
    3a1a:	add.w	r0, r0, #258	; 0x102

	if (sampleStep <= 1) { //no sample rate mods, just crush the bitdepth.
		for (i=0; i < AUDIO_BLOCK_SAMPLES; i++) {
			// shift bits right to cut off fine detail sampleSquidge is a
			// uint32 so sign extension will not occur, fills with zeroes.
			sampleSquidge = block->data[i] >> (16-crushBits);
    3a1e:	ldrb	r2, [r4, #24]
			// shift bits left again to regain the volume level.
			// fills with zeroes.
		 	block->data[i] = sampleSquidge << (16-crushBits);
    3a20:	ldrsh.w	r3, [r1, #2]!

	if (sampleStep <= 1) { //no sample rate mods, just crush the bitdepth.
		for (i=0; i < AUDIO_BLOCK_SAMPLES; i++) {
			// shift bits right to cut off fine detail sampleSquidge is a
			// uint32 so sign extension will not occur, fills with zeroes.
			sampleSquidge = block->data[i] >> (16-crushBits);
    3a24:	rsb	r2, r2, #16
			// shift bits left again to regain the volume level.
			// fills with zeroes.
		 	block->data[i] = sampleSquidge << (16-crushBits);
    3a28:	asrs	r3, r2
    3a2a:	lsls	r3, r2
	// functions but left like this to enable code optimisation later.
	block = receiveWritable();
	if (!block) return;

	if (sampleStep <= 1) { //no sample rate mods, just crush the bitdepth.
		for (i=0; i < AUDIO_BLOCK_SAMPLES; i++) {
    3a2c:	cmp	r0, r1
			// shift bits right to cut off fine detail sampleSquidge is a
			// uint32 so sign extension will not occur, fills with zeroes.
			sampleSquidge = block->data[i] >> (16-crushBits);
			// shift bits left again to regain the volume level.
			// fills with zeroes.
		 	block->data[i] = sampleSquidge << (16-crushBits);
    3a2e:	strh	r3, [r1, #0]
	// functions but left like this to enable code optimisation later.
	block = receiveWritable();
	if (!block) return;

	if (sampleStep <= 1) { //no sample rate mods, just crush the bitdepth.
		for (i=0; i < AUDIO_BLOCK_SAMPLES; i++) {
    3a30:	bne.n	3a1e <AudioEffectBitcrusher::update()+0xd6>
    3a32:	b.n	3a04 <AudioEffectBitcrusher::update()+0xbc>
    3a34:	pop	{r3, r4, r5, r6, r7, pc}
    3a36:	nop

00003a38 <AudioMixer4::update()>:
}

#endif

void AudioMixer4::update(void)
{
    3a38:	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
	audio_block_t *in, *out=NULL;
	unsigned int channel;

	for (channel=0; channel < 4; channel++) {
    3a3c:	mov.w	r8, #0
}

#endif

void AudioMixer4::update(void)
{
    3a40:	mov	r6, r0
    3a42:	add.w	r5, r0, #24
	audio_block_t *in, *out=NULL;
    3a46:	mov	r7, r8
	unsigned int channel;

	for (channel=0; channel < 4; channel++) {
		if (!out) {
			out = receiveWritable(channel);
    3a48:	mov	r1, r8
    3a4a:	mov	r0, r6
{
	audio_block_t *in, *out=NULL;
	unsigned int channel;

	for (channel=0; channel < 4; channel++) {
		if (!out) {
    3a4c:	cmp	r7, #0
    3a4e:	beq.n	3af0 <AudioMixer4::update()+0xb8>
			if (out) {
				int32_t mult = multiplier[channel];
				if (mult != MULTI_UNITYGAIN) applyGain(out->data, mult);
			}
		} else {
			in = receiveReadOnly(channel);
    3a50:	bl	96ec <AudioStream::receiveReadOnly(unsigned int)>
			if (in) {
    3a54:	cbz	r0, 3a94 <AudioMixer4::update()+0x5c>
				applyGainThenAdd(out->data, in->data, multiplier[channel]);
    3a56:	ldr	r4, [r5, #0]
{
	uint32_t *dst = (uint32_t *)data;
	const uint32_t *src = (uint32_t *)in;
	const uint32_t *end = (uint32_t *)(data + AUDIO_BLOCK_SAMPLES);

	if (mult == MULTI_UNITYGAIN) {
    3a58:	cmp.w	r4, #65536	; 0x10000
				if (mult != MULTI_UNITYGAIN) applyGain(out->data, mult);
			}
		} else {
			in = receiveReadOnly(channel);
			if (in) {
				applyGainThenAdd(out->data, in->data, multiplier[channel]);
    3a5c:	add.w	r1, r7, #4
    3a60:	add.w	lr, r0, #4

static void applyGainThenAdd(int16_t *data, const int16_t *in, int32_t mult)
{
	uint32_t *dst = (uint32_t *)data;
	const uint32_t *src = (uint32_t *)in;
	const uint32_t *end = (uint32_t *)(data + AUDIO_BLOCK_SAMPLES);
    3a64:	add.w	ip, r7, #260	; 0x104

	if (mult == MULTI_UNITYGAIN) {
    3a68:	beq.n	3aba <AudioMixer4::update()+0x82>
			tmp32 = *dst;
			*dst++ = signed_add_16_and_16(tmp32, *src++);
		} while (dst < end);
	} else {
		do {
			uint32_t tmp32 = *src++; // read 2 samples from *data
    3a6a:	ldr.w	r2, [lr], #4
static inline int32_t signed_multiply_32x16b(int32_t a, uint32_t b) __attribute__((always_inline, unused));
static inline int32_t signed_multiply_32x16b(int32_t a, uint32_t b)
{
#if defined (__ARM_ARCH_7EM__)
	int32_t out;
	asm volatile("smulwb %0, %1, %2" : "=r" (out) : "r" (a), "r" (b));
    3a6e:	smulwb	r3, r4, r2
static inline int32_t signed_multiply_32x16t(int32_t a, uint32_t b) __attribute__((always_inline, unused));
static inline int32_t signed_multiply_32x16t(int32_t a, uint32_t b)
{
#if defined (__ARM_ARCH_7EM__)
	int32_t out;
	asm volatile("smulwt %0, %1, %2" : "=r" (out) : "r" (a), "r" (b));
    3a72:	smulwt	r9, r4, r2
static inline int32_t signed_saturate_rshift(int32_t val, int bits, int rshift) __attribute__((always_inline, unused));
static inline int32_t signed_saturate_rshift(int32_t val, int bits, int rshift)
{
#if defined (__ARM_ARCH_7EM__)
	int32_t out;
	asm volatile("ssat %0, %1, %2, asr %3" : "=r" (out) : "I" (bits), "r" (val), "I" (rshift));
    3a76:	ssat	r2, #16, r3
    3a7a:	ssat	r3, #16, r9
static inline uint32_t pack_16b_16b(int32_t a, int32_t b) __attribute__((always_inline, unused));
static inline uint32_t pack_16b_16b(int32_t a, int32_t b)
{
#if defined (__ARM_ARCH_7EM__)
	int32_t out;
	asm volatile("pkhbt %0, %1, %2, lsl #16" : "=r" (out) : "r" (b), "r" (a));
    3a7e:	pkhbt	r3, r2, r3, lsl #16
			int32_t val1 = signed_multiply_32x16b(mult, tmp32);
			int32_t val2 = signed_multiply_32x16t(mult, tmp32);
			val1 = signed_saturate_rshift(val1, 16, 0);
			val2 = signed_saturate_rshift(val2, 16, 0);
			tmp32 = pack_16b_16b(val2, val1);
			uint32_t tmp32b = *dst;
    3a82:	ldr	r2, [r1, #0]
// computes (((a[31:16] + b[31:16]) << 16) | (a[15:0 + b[15:0]))  (saturates)
static inline uint32_t signed_add_16_and_16(uint32_t a, uint32_t b) __attribute__((always_inline, unused));
static inline uint32_t signed_add_16_and_16(uint32_t a, uint32_t b)
{
	int32_t out;
	asm volatile("qadd16 %0, %1, %2" : "=r" (out) : "r" (a), "r" (b));
    3a84:	qadd16	r3, r3, r2
			*dst++ = signed_add_16_and_16(tmp32, tmp32b);
    3a88:	str.w	r3, [r1], #4
		} while (dst < end);
    3a8c:	cmp	ip, r1
    3a8e:	bhi.n	3a6a <AudioMixer4::update()+0x32>
			}
		} else {
			in = receiveReadOnly(channel);
			if (in) {
				applyGainThenAdd(out->data, in->data, multiplier[channel]);
				release(in);
    3a90:	bl	9664 <AudioStream::release(audio_block_struct*)>
void AudioMixer4::update(void)
{
	audio_block_t *in, *out=NULL;
	unsigned int channel;

	for (channel=0; channel < 4; channel++) {
    3a94:	add.w	r8, r8, #1
    3a98:	cmp.w	r8, #4
    3a9c:	add.w	r5, r5, #4
    3aa0:	bne.n	3a48 <AudioMixer4::update()+0x10>
				applyGainThenAdd(out->data, in->data, multiplier[channel]);
				release(in);
			}
		}
	}
	if (out) {
    3aa2:	cmp	r7, #0
    3aa4:	beq.n	3b28 <AudioMixer4::update()+0xf0>
		transmit(out);
    3aa6:	mov	r0, r6
    3aa8:	mov	r1, r7
    3aaa:	movs	r2, #0
    3aac:	bl	96b8 <AudioStream::transmit(audio_block_struct*, unsigned char)>
		release(out);
    3ab0:	mov	r0, r7
	}
}
    3ab2:	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
			}
		}
	}
	if (out) {
		transmit(out);
		release(out);
    3ab6:	b.w	9664 <AudioStream::release(audio_block_struct*)>
    3aba:	add.w	r1, r7, #12
    3abe:	add.w	r4, r0, #12
    3ac2:	ldr.w	r3, [r1, #-8]
    3ac6:	ldr.w	r2, [r4, #-8]
    3aca:	qadd16	r3, r3, r2
	const uint32_t *end = (uint32_t *)(data + AUDIO_BLOCK_SAMPLES);

	if (mult == MULTI_UNITYGAIN) {
		do {
			uint32_t tmp32 = *dst;
			*dst++ = signed_add_16_and_16(tmp32, *src++);
    3ace:	str.w	r3, [r1, #-8]
    3ad2:	ldr.w	r2, [r4, #-4]
    3ad6:	ldr.w	r3, [r1, #-4]
    3ada:	qadd16	r3, r3, r2
			tmp32 = *dst;
			*dst++ = signed_add_16_and_16(tmp32, *src++);
		} while (dst < end);
    3ade:	cmp	ip, r1
	if (mult == MULTI_UNITYGAIN) {
		do {
			uint32_t tmp32 = *dst;
			*dst++ = signed_add_16_and_16(tmp32, *src++);
			tmp32 = *dst;
			*dst++ = signed_add_16_and_16(tmp32, *src++);
    3ae0:	str.w	r3, [r1, #-4]
    3ae4:	add.w	r4, r4, #8
		} while (dst < end);
    3ae8:	add.w	r1, r1, #8
    3aec:	bhi.n	3ac2 <AudioMixer4::update()+0x8a>
    3aee:	b.n	3a90 <AudioMixer4::update()+0x58>
	audio_block_t *in, *out=NULL;
	unsigned int channel;

	for (channel=0; channel < 4; channel++) {
		if (!out) {
			out = receiveWritable(channel);
    3af0:	bl	9704 <AudioStream::receiveWritable(unsigned int)>
			if (out) {
    3af4:	mov	r7, r0
    3af6:	cmp	r0, #0
    3af8:	beq.n	3a94 <AudioMixer4::update()+0x5c>
				int32_t mult = multiplier[channel];
    3afa:	ldr	r0, [r5, #0]
				if (mult != MULTI_UNITYGAIN) applyGain(out->data, mult);
    3afc:	cmp.w	r0, #65536	; 0x10000
    3b00:	beq.n	3a94 <AudioMixer4::update()+0x5c>
    3b02:	adds	r1, r7, #4
#define MULTI_UNITYGAIN 65536

static void applyGain(int16_t *data, int32_t mult)
{
	uint32_t *p = (uint32_t *)data;
	const uint32_t *end = (uint32_t *)(data + AUDIO_BLOCK_SAMPLES);
    3b04:	add.w	r4, r7, #260	; 0x104

	do {
		uint32_t tmp32 = *p; // read 2 samples from *data
    3b08:	ldr	r3, [r1, #0]
static inline int32_t signed_multiply_32x16b(int32_t a, uint32_t b) __attribute__((always_inline, unused));
static inline int32_t signed_multiply_32x16b(int32_t a, uint32_t b)
{
#if defined (__ARM_ARCH_7EM__)
	int32_t out;
	asm volatile("smulwb %0, %1, %2" : "=r" (out) : "r" (a), "r" (b));
    3b0a:	smulwb	r2, r0, r3
static inline int32_t signed_multiply_32x16t(int32_t a, uint32_t b) __attribute__((always_inline, unused));
static inline int32_t signed_multiply_32x16t(int32_t a, uint32_t b)
{
#if defined (__ARM_ARCH_7EM__)
	int32_t out;
	asm volatile("smulwt %0, %1, %2" : "=r" (out) : "r" (a), "r" (b));
    3b0e:	smulwt	r3, r0, r3
static inline int32_t signed_saturate_rshift(int32_t val, int bits, int rshift) __attribute__((always_inline, unused));
static inline int32_t signed_saturate_rshift(int32_t val, int bits, int rshift)
{
#if defined (__ARM_ARCH_7EM__)
	int32_t out;
	asm volatile("ssat %0, %1, %2, asr %3" : "=r" (out) : "I" (bits), "r" (val), "I" (rshift));
    3b12:	ssat	r2, #16, r2
    3b16:	ssat	r3, #16, r3
static inline uint32_t pack_16b_16b(int32_t a, int32_t b) __attribute__((always_inline, unused));
static inline uint32_t pack_16b_16b(int32_t a, int32_t b)
{
#if defined (__ARM_ARCH_7EM__)
	int32_t out;
	asm volatile("pkhbt %0, %1, %2, lsl #16" : "=r" (out) : "r" (b), "r" (a));
    3b1a:	pkhbt	r3, r2, r3, lsl #16
		int32_t val1 = signed_multiply_32x16b(mult, tmp32);
		int32_t val2 = signed_multiply_32x16t(mult, tmp32);
		val1 = signed_saturate_rshift(val1, 16, 0);
		val2 = signed_saturate_rshift(val2, 16, 0);
		*p++ = pack_16b_16b(val2, val1);
    3b1e:	str.w	r3, [r1], #4
	} while (p < end);
    3b22:	cmp	r4, r1
    3b24:	bhi.n	3b08 <AudioMixer4::update()+0xd0>
    3b26:	b.n	3a94 <AudioMixer4::update()+0x5c>
    3b28:	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

00003b2c <AudioAmplifier::update()>:
		release(out);
	}
}

void AudioAmplifier::update(void)
{
    3b2c:	push	{r4, r5, r6, lr}
	audio_block_t *block;
	int32_t mult = multiplier;
    3b2e:	ldr	r4, [r0, #24]

	if (mult == 0) {
    3b30:	cbz	r4, 3b7e <AudioAmplifier::update()+0x52>
		// zero gain, discard any input and transmit nothing
		block = receiveReadOnly(0);
		if (block) release(block);
	} else if (mult == MULTI_UNITYGAIN) {
    3b32:	cmp.w	r4, #65536	; 0x10000
    3b36:	mov	r6, r0
		// unity gain, pass input to output without any change
		block = receiveReadOnly(0);
    3b38:	mov.w	r1, #0

	if (mult == 0) {
		// zero gain, discard any input and transmit nothing
		block = receiveReadOnly(0);
		if (block) release(block);
	} else if (mult == MULTI_UNITYGAIN) {
    3b3c:	beq.n	3b8a <AudioAmplifier::update()+0x5e>
			transmit(block);
			release(block);
		}
	} else {
		// apply gain to signal
		block = receiveWritable(0);
    3b3e:	bl	9704 <AudioStream::receiveWritable(unsigned int)>
		if (block) {
    3b42:	mov	r5, r0
    3b44:	cbz	r0, 3b88 <AudioAmplifier::update()+0x5c>
			applyGain(block->data, mult);
    3b46:	adds	r1, r0, #4
#define MULTI_UNITYGAIN 65536

static void applyGain(int16_t *data, int32_t mult)
{
	uint32_t *p = (uint32_t *)data;
	const uint32_t *end = (uint32_t *)(data + AUDIO_BLOCK_SAMPLES);
    3b48:	add.w	r0, r0, #260	; 0x104

	do {
		uint32_t tmp32 = *p; // read 2 samples from *data
    3b4c:	ldr	r3, [r1, #0]
static inline int32_t signed_multiply_32x16b(int32_t a, uint32_t b) __attribute__((always_inline, unused));
static inline int32_t signed_multiply_32x16b(int32_t a, uint32_t b)
{
#if defined (__ARM_ARCH_7EM__)
	int32_t out;
	asm volatile("smulwb %0, %1, %2" : "=r" (out) : "r" (a), "r" (b));
    3b4e:	smulwb	r2, r4, r3
static inline int32_t signed_multiply_32x16t(int32_t a, uint32_t b) __attribute__((always_inline, unused));
static inline int32_t signed_multiply_32x16t(int32_t a, uint32_t b)
{
#if defined (__ARM_ARCH_7EM__)
	int32_t out;
	asm volatile("smulwt %0, %1, %2" : "=r" (out) : "r" (a), "r" (b));
    3b52:	smulwt	r3, r4, r3
static inline int32_t signed_saturate_rshift(int32_t val, int bits, int rshift) __attribute__((always_inline, unused));
static inline int32_t signed_saturate_rshift(int32_t val, int bits, int rshift)
{
#if defined (__ARM_ARCH_7EM__)
	int32_t out;
	asm volatile("ssat %0, %1, %2, asr %3" : "=r" (out) : "I" (bits), "r" (val), "I" (rshift));
    3b56:	ssat	r2, #16, r2
    3b5a:	ssat	r3, #16, r3
static inline uint32_t pack_16b_16b(int32_t a, int32_t b) __attribute__((always_inline, unused));
static inline uint32_t pack_16b_16b(int32_t a, int32_t b)
{
#if defined (__ARM_ARCH_7EM__)
	int32_t out;
	asm volatile("pkhbt %0, %1, %2, lsl #16" : "=r" (out) : "r" (b), "r" (a));
    3b5e:	pkhbt	r3, r2, r3, lsl #16
		int32_t val1 = signed_multiply_32x16b(mult, tmp32);
		int32_t val2 = signed_multiply_32x16t(mult, tmp32);
		val1 = signed_saturate_rshift(val1, 16, 0);
		val2 = signed_saturate_rshift(val2, 16, 0);
		*p++ = pack_16b_16b(val2, val1);
    3b62:	str.w	r3, [r1], #4
	} while (p < end);
    3b66:	cmp	r0, r1
    3b68:	bhi.n	3b4c <AudioAmplifier::update()+0x20>
	} else {
		// apply gain to signal
		block = receiveWritable(0);
		if (block) {
			applyGain(block->data, mult);
			transmit(block);
    3b6a:	mov	r0, r6
    3b6c:	movs	r2, #0
    3b6e:	mov	r1, r5
    3b70:	bl	96b8 <AudioStream::transmit(audio_block_struct*, unsigned char)>
			release(block);
    3b74:	mov	r0, r5
		}
	}
}
    3b76:	ldmia.w	sp!, {r4, r5, r6, lr}
		// apply gain to signal
		block = receiveWritable(0);
		if (block) {
			applyGain(block->data, mult);
			transmit(block);
			release(block);
    3b7a:	b.w	9664 <AudioStream::release(audio_block_struct*)>
	audio_block_t *block;
	int32_t mult = multiplier;

	if (mult == 0) {
		// zero gain, discard any input and transmit nothing
		block = receiveReadOnly(0);
    3b7e:	mov	r1, r4
    3b80:	bl	96ec <AudioStream::receiveReadOnly(unsigned int)>
		if (block) release(block);
    3b84:	cmp	r0, #0
    3b86:	bne.n	3b76 <AudioAmplifier::update()+0x4a>
    3b88:	pop	{r4, r5, r6, pc}
	} else if (mult == MULTI_UNITYGAIN) {
		// unity gain, pass input to output without any change
		block = receiveReadOnly(0);
    3b8a:	bl	96ec <AudioStream::receiveReadOnly(unsigned int)>
		if (block) {
    3b8e:	mov	r4, r0
    3b90:	cmp	r0, #0
    3b92:	beq.n	3b88 <AudioAmplifier::update()+0x5c>
			transmit(block);
    3b94:	mov	r0, r6
    3b96:	mov	r1, r4
    3b98:	movs	r2, #0
    3b9a:	bl	96b8 <AudioStream::transmit(audio_block_struct*, unsigned char)>
			release(block);
    3b9e:	mov	r0, r4
			applyGain(block->data, mult);
			transmit(block);
			release(block);
		}
	}
}
    3ba0:	ldmia.w	sp!, {r4, r5, r6, lr}
	} else if (mult == MULTI_UNITYGAIN) {
		// unity gain, pass input to output without any change
		block = receiveReadOnly(0);
		if (block) {
			transmit(block);
			release(block);
    3ba4:	b.w	9664 <AudioStream::release(audio_block_struct*)>

00003ba8 <_GLOBAL__sub_I__ZN15AudioOutputADAT13block_ch1_1stE>:
bool AudioOutputADAT::update_responsibility = false;
//uint32_t  AudioOutputADAT::vucp = VUCP_VALID;

DMAMEM static uint32_t ADAT_tx_buffer[AUDIO_BLOCK_SAMPLES * 8]; //4 KB, AUDIO_BLOCK_SAMPLES is usually 128

DMAChannel AudioOutputADAT::dma(false);
    3ba8:	ldr	r2, [pc, #8]	; (3bb4 <_GLOBAL__sub_I__ZN15AudioOutputADAT13block_ch1_1stE+0xc>)
    3baa:	ldr	r1, [pc, #12]	; (3bb8 <_GLOBAL__sub_I__ZN15AudioOutputADAT13block_ch1_1stE+0x10>)
    3bac:	ldr	r0, [pc, #12]	; (3bbc <_GLOBAL__sub_I__ZN15AudioOutputADAT13block_ch1_1stE+0x14>)
    3bae:	b.w	b944 <__aeabi_atexit>
    3bb2:	nop
    3bb4:	.word	0x20007db0
    3bb8:	.word	0x00003021
    3bbc:	.word	0x200126f0

00003bc0 <AudioEffectMultiply::update()>:

#include <Arduino.h>
#include "effect_multiply.h"

void AudioEffectMultiply::update(void)
{
    3bc0:	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
	audio_block_t *blocka, *blockb;
	uint32_t *pa, *pb, *end;
	uint32_t a12, a34; //, a56, a78;
	uint32_t b12, b34; //, b56, b78;

	blocka = receiveWritable(0);
    3bc4:	movs	r1, #0

#include <Arduino.h>
#include "effect_multiply.h"

void AudioEffectMultiply::update(void)
{
    3bc6:	mov	r5, r0
	audio_block_t *blocka, *blockb;
	uint32_t *pa, *pb, *end;
	uint32_t a12, a34; //, a56, a78;
	uint32_t b12, b34; //, b56, b78;

	blocka = receiveWritable(0);
    3bc8:	bl	9704 <AudioStream::receiveWritable(unsigned int)>
	blockb = receiveReadOnly(1);
    3bcc:	movs	r1, #1
	audio_block_t *blocka, *blockb;
	uint32_t *pa, *pb, *end;
	uint32_t a12, a34; //, a56, a78;
	uint32_t b12, b34; //, b56, b78;

	blocka = receiveWritable(0);
    3bce:	mov	r4, r0
	blockb = receiveReadOnly(1);
    3bd0:	mov	r0, r5
    3bd2:	bl	96ec <AudioStream::receiveReadOnly(unsigned int)>
    3bd6:	mov	r6, r0
	if (!blocka) {
    3bd8:	cbz	r4, 3c4a <AudioEffectMultiply::update()+0x8a>
		if (blockb) release(blockb);
		return;
	}
	if (!blockb) {
    3bda:	cbz	r0, 3c52 <AudioEffectMultiply::update()+0x92>
		release(blocka);
		return;
	}
	pa = (uint32_t *)(blocka->data);
	pb = (uint32_t *)(blockb->data);
	end = pa + AUDIO_BLOCK_SAMPLES/2;
    3bdc:	add.w	lr, r4, #260	; 0x104
	}
	if (!blockb) {
		release(blocka);
		return;
	}
	pa = (uint32_t *)(blocka->data);
    3be0:	adds	r3, r4, #4
	pb = (uint32_t *)(blockb->data);
	end = pa + AUDIO_BLOCK_SAMPLES/2;
	while (pa < end) {
    3be2:	cmp	lr, r3
    3be4:	bls.n	3c30 <AudioEffectMultiply::update()+0x70>
    3be6:	adds	r0, #12
    3be8:	add.w	r1, r4, #12
		a12 = *pa;
		a34 = *(pa+1);
    3bec:	ldmdb	r1, {r2, r3}
		//a56 = *(pa+2); // 8 samples/loop should work, but crashes.
		//a78 = *(pa+3); // why?!  maybe a compiler bug??
		b12 = *pb++;
    3bf0:	ldr.w	r9, [r0, #-8]
		b34 = *pb++;
    3bf4:	ldr.w	r8, [r0, #-4]
// computes ((a[31:16] * b[31:16])
static inline int32_t multiply_16tx16t(uint32_t a, uint32_t b) __attribute__((always_inline, unused));
static inline int32_t multiply_16tx16t(uint32_t a, uint32_t b)
{
	int32_t out;
	asm volatile("smultt %0, %1, %2" : "=r" (out) : "r" (a), "r" (b));
    3bf8:	smultt	ip, r2, r9
static inline int32_t signed_saturate_rshift(int32_t val, int bits, int rshift) __attribute__((always_inline, unused));
static inline int32_t signed_saturate_rshift(int32_t val, int bits, int rshift)
{
#if defined (__ARM_ARCH_7EM__)
	int32_t out;
	asm volatile("ssat %0, %1, %2, asr %3" : "=r" (out) : "I" (bits), "r" (val), "I" (rshift));
    3bfc:	ssat	ip, #16, ip, asr #15
// computes ((a[15:0] * b[15:0])
static inline int32_t multiply_16bx16b(uint32_t a, uint32_t b) __attribute__((always_inline, unused));
static inline int32_t multiply_16bx16b(uint32_t a, uint32_t b)
{
	int32_t out;
	asm volatile("smulbb %0, %1, %2" : "=r" (out) : "r" (a), "r" (b));
    3c00:	smulbb	r2, r2, r9
static inline int32_t signed_saturate_rshift(int32_t val, int bits, int rshift) __attribute__((always_inline, unused));
static inline int32_t signed_saturate_rshift(int32_t val, int bits, int rshift)
{
#if defined (__ARM_ARCH_7EM__)
	int32_t out;
	asm volatile("ssat %0, %1, %2, asr %3" : "=r" (out) : "I" (bits), "r" (val), "I" (rshift));
    3c04:	ssat	r2, #16, r2, asr #15
static inline uint32_t pack_16b_16b(int32_t a, int32_t b) __attribute__((always_inline, unused));
static inline uint32_t pack_16b_16b(int32_t a, int32_t b)
{
#if defined (__ARM_ARCH_7EM__)
	int32_t out;
	asm volatile("pkhbt %0, %1, %2, lsl #16" : "=r" (out) : "r" (b), "r" (a));
    3c08:	pkhbt	r2, r2, ip, lsl #16
// computes ((a[31:16] * b[31:16])
static inline int32_t multiply_16tx16t(uint32_t a, uint32_t b) __attribute__((always_inline, unused));
static inline int32_t multiply_16tx16t(uint32_t a, uint32_t b)
{
	int32_t out;
	asm volatile("smultt %0, %1, %2" : "=r" (out) : "r" (a), "r" (b));
    3c0c:	smultt	ip, r3, r8
static inline int32_t signed_saturate_rshift(int32_t val, int bits, int rshift) __attribute__((always_inline, unused));
static inline int32_t signed_saturate_rshift(int32_t val, int bits, int rshift)
{
#if defined (__ARM_ARCH_7EM__)
	int32_t out;
	asm volatile("ssat %0, %1, %2, asr %3" : "=r" (out) : "I" (bits), "r" (val), "I" (rshift));
    3c10:	ssat	ip, #16, ip, asr #15
// computes ((a[15:0] * b[15:0])
static inline int32_t multiply_16bx16b(uint32_t a, uint32_t b) __attribute__((always_inline, unused));
static inline int32_t multiply_16bx16b(uint32_t a, uint32_t b)
{
	int32_t out;
	asm volatile("smulbb %0, %1, %2" : "=r" (out) : "r" (a), "r" (b));
    3c14:	smulbb	r3, r3, r8
static inline int32_t signed_saturate_rshift(int32_t val, int bits, int rshift) __attribute__((always_inline, unused));
static inline int32_t signed_saturate_rshift(int32_t val, int bits, int rshift)
{
#if defined (__ARM_ARCH_7EM__)
	int32_t out;
	asm volatile("ssat %0, %1, %2, asr %3" : "=r" (out) : "I" (bits), "r" (val), "I" (rshift));
    3c18:	ssat	r3, #16, r3, asr #15
static inline uint32_t pack_16b_16b(int32_t a, int32_t b) __attribute__((always_inline, unused));
static inline uint32_t pack_16b_16b(int32_t a, int32_t b)
{
#if defined (__ARM_ARCH_7EM__)
	int32_t out;
	asm volatile("pkhbt %0, %1, %2, lsl #16" : "=r" (out) : "r" (b), "r" (a));
    3c1c:	pkhbt	r3, r3, ip, lsl #16
		return;
	}
	pa = (uint32_t *)(blocka->data);
	pb = (uint32_t *)(blockb->data);
	end = pa + AUDIO_BLOCK_SAMPLES/2;
	while (pa < end) {
    3c20:	cmp	lr, r1
		//	signed_saturate_rshift(multiply_16bx16b(a56, b56), 16, 15));
		//a78 = pack_16b_16b(
		//	signed_saturate_rshift(multiply_16tx16t(a78, b78), 16, 15), 
		//	signed_saturate_rshift(multiply_16bx16b(a78, b78), 16, 15));
		*pa++ = a12;
		*pa++ = a34;
    3c22:	stmdb	r1, {r2, r3}
    3c26:	add.w	r0, r0, #8
		return;
	}
	pa = (uint32_t *)(blocka->data);
	pb = (uint32_t *)(blockb->data);
	end = pa + AUDIO_BLOCK_SAMPLES/2;
	while (pa < end) {
    3c2a:	add.w	r1, r1, #8
    3c2e:	bhi.n	3bec <AudioEffectMultiply::update()+0x2c>
		*pa++ = a12;
		*pa++ = a34;
		//*pa++ = a56;
		//*pa++ = a78;
	}
	transmit(blocka);
    3c30:	mov	r0, r5
    3c32:	movs	r2, #0
    3c34:	mov	r1, r4
    3c36:	bl	96b8 <AudioStream::transmit(audio_block_struct*, unsigned char)>
	release(blocka);
    3c3a:	mov	r0, r4
    3c3c:	bl	9664 <AudioStream::release(audio_block_struct*)>
	release(blockb);
    3c40:	mov	r0, r6
	block = receiveReadOnly(0);
	if (block) release(block);
	block = receiveReadOnly(1);
	if (block) release(block);
#endif
}
    3c42:	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
		//*pa++ = a56;
		//*pa++ = a78;
	}
	transmit(blocka);
	release(blocka);
	release(blockb);
    3c46:	b.w	9664 <AudioStream::release(audio_block_struct*)>
	uint32_t b12, b34; //, b56, b78;

	blocka = receiveWritable(0);
	blockb = receiveReadOnly(1);
	if (!blocka) {
		if (blockb) release(blockb);
    3c4a:	cmp	r0, #0
    3c4c:	bne.n	3c42 <AudioEffectMultiply::update()+0x82>
    3c4e:	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
		return;
	}
	if (!blockb) {
		release(blocka);
    3c52:	mov	r0, r4
	block = receiveReadOnly(0);
	if (block) release(block);
	block = receiveReadOnly(1);
	if (block) release(block);
#endif
}
    3c54:	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
	if (!blocka) {
		if (blockb) release(blockb);
		return;
	}
	if (!blockb) {
		release(blocka);
    3c58:	b.w	9664 <AudioStream::release(audio_block_struct*)>

00003c5c <_GLOBAL__sub_I__ZN16AudioInputAnalog10block_leftE>:
uint16_t AudioInputAnalog::block_offset = 0;
int32_t AudioInputAnalog::hpf_y1 = 0;
int32_t AudioInputAnalog::hpf_x1 = 0;

bool AudioInputAnalog::update_responsibility = false;
DMAChannel AudioInputAnalog::dma(false);
    3c5c:	ldr	r2, [pc, #8]	; (3c68 <_GLOBAL__sub_I__ZN16AudioInputAnalog10block_leftE+0xc>)
    3c5e:	ldr	r1, [pc, #12]	; (3c6c <_GLOBAL__sub_I__ZN16AudioInputAnalog10block_leftE+0x10>)
    3c60:	ldr	r0, [pc, #12]	; (3c70 <_GLOBAL__sub_I__ZN16AudioInputAnalog10block_leftE+0x14>)
    3c62:	b.w	b944 <__aeabi_atexit>
    3c66:	nop
    3c68:	.word	0x20007db0
    3c6c:	.word	0x00003021
    3c70:	.word	0x200126f8

00003c74 <_GLOBAL__sub_I__ZN17AudioOutputAnalog14block_left_1stE>:

DMAMEM static uint16_t dac_buffer[AUDIO_BLOCK_SAMPLES*2];
audio_block_t * AudioOutputAnalog::block_left_1st = NULL;
audio_block_t * AudioOutputAnalog::block_left_2nd = NULL;
bool AudioOutputAnalog::update_responsibility = false;
DMAChannel AudioOutputAnalog::dma(false);
    3c74:	ldr	r2, [pc, #8]	; (3c80 <_GLOBAL__sub_I__ZN17AudioOutputAnalog14block_left_1stE+0xc>)
    3c76:	ldr	r1, [pc, #12]	; (3c84 <_GLOBAL__sub_I__ZN17AudioOutputAnalog14block_left_1stE+0x10>)
    3c78:	ldr	r0, [pc, #12]	; (3c88 <_GLOBAL__sub_I__ZN17AudioOutputAnalog14block_left_1stE+0x14>)
    3c7a:	b.w	b944 <__aeabi_atexit>
    3c7e:	nop
    3c80:	.word	0x20007db0
    3c84:	.word	0x00003021
    3c88:	.word	0x20012700

00003c8c <_GLOBAL__sub_I__ZN22AudioInputAnalogStereo10block_leftE>:
        while (1) {
                if ((ADC1_SC1A & ADC_SC1_COCO)) {
                        return ADC1_RA;
                }
        }
}
    3c8c:	push	{r3, r4, r5, lr}
uint16_t AudioInputAnalogStereo::offset_left = 0;
uint16_t AudioInputAnalogStereo::offset_right = 0;
int32_t AudioInputAnalogStereo::hpf_y1[2] = { 0, 0 };
int32_t AudioInputAnalogStereo::hpf_x1[2] = { 0, 0 };
bool AudioInputAnalogStereo::update_responsibility = false;
DMAChannel AudioInputAnalogStereo::dma0(false);
    3c8e:	ldr	r5, [pc, #28]	; (3cac <_GLOBAL__sub_I__ZN22AudioInputAnalogStereo10block_leftE+0x20>)
    3c90:	ldr	r4, [pc, #28]	; (3cb0 <_GLOBAL__sub_I__ZN22AudioInputAnalogStereo10block_leftE+0x24>)
    3c92:	ldr	r0, [pc, #32]	; (3cb4 <_GLOBAL__sub_I__ZN22AudioInputAnalogStereo10block_leftE+0x28>)
    3c94:	mov	r2, r5
    3c96:	mov	r1, r4
    3c98:	bl	b944 <__aeabi_atexit>
DMAChannel AudioInputAnalogStereo::dma1(false);
    3c9c:	mov	r2, r5
    3c9e:	mov	r1, r4
    3ca0:	ldr	r0, [pc, #20]	; (3cb8 <_GLOBAL__sub_I__ZN22AudioInputAnalogStereo10block_leftE+0x2c>)
        while (1) {
                if ((ADC1_SC1A & ADC_SC1_COCO)) {
                        return ADC1_RA;
                }
        }
}
    3ca2:	ldmia.w	sp!, {r3, r4, r5, lr}
uint16_t AudioInputAnalogStereo::offset_right = 0;
int32_t AudioInputAnalogStereo::hpf_y1[2] = { 0, 0 };
int32_t AudioInputAnalogStereo::hpf_x1[2] = { 0, 0 };
bool AudioInputAnalogStereo::update_responsibility = false;
DMAChannel AudioInputAnalogStereo::dma0(false);
DMAChannel AudioInputAnalogStereo::dma1(false);
    3ca6:	b.w	b944 <__aeabi_atexit>
    3caa:	nop
    3cac:	.word	0x20007db0
    3cb0:	.word	0x00003021
    3cb4:	.word	0x20012708
    3cb8:	.word	0x20012710

00003cbc <_GLOBAL__sub_I__ZN17AudioInputI2SQuad9block_ch1E>:
audio_block_t * AudioInputI2SQuad::block_ch2 = NULL;
audio_block_t * AudioInputI2SQuad::block_ch3 = NULL;
audio_block_t * AudioInputI2SQuad::block_ch4 = NULL;
uint16_t AudioInputI2SQuad::block_offset = 0;
bool AudioInputI2SQuad::update_responsibility = false;
DMAChannel AudioInputI2SQuad::dma(false);
    3cbc:	ldr	r2, [pc, #8]	; (3cc8 <_GLOBAL__sub_I__ZN17AudioInputI2SQuad9block_ch1E+0xc>)
    3cbe:	ldr	r1, [pc, #12]	; (3ccc <_GLOBAL__sub_I__ZN17AudioInputI2SQuad9block_ch1E+0x10>)
    3cc0:	ldr	r0, [pc, #12]	; (3cd0 <_GLOBAL__sub_I__ZN17AudioInputI2SQuad9block_ch1E+0x14>)
    3cc2:	b.w	b944 <__aeabi_atexit>
    3cc6:	nop
    3cc8:	.word	0x20007db0
    3ccc:	.word	0x00003021
    3cd0:	.word	0x20012718

00003cd4 <_GLOBAL__sub_I__ZN23AudioOutputAnalogStereo14block_left_1stE>:
audio_block_t * AudioOutputAnalogStereo::block_left_2nd = NULL;
audio_block_t * AudioOutputAnalogStereo::block_right_1st = NULL;
audio_block_t * AudioOutputAnalogStereo::block_right_2nd = NULL;
audio_block_t AudioOutputAnalogStereo::block_silent;
bool AudioOutputAnalogStereo::update_responsibility = false;
DMAChannel AudioOutputAnalogStereo::dma(false);
    3cd4:	ldr	r2, [pc, #8]	; (3ce0 <_GLOBAL__sub_I__ZN23AudioOutputAnalogStereo14block_left_1stE+0xc>)
    3cd6:	ldr	r1, [pc, #12]	; (3ce4 <_GLOBAL__sub_I__ZN23AudioOutputAnalogStereo14block_left_1stE+0x10>)
    3cd8:	ldr	r0, [pc, #12]	; (3ce8 <_GLOBAL__sub_I__ZN23AudioOutputAnalogStereo14block_left_1stE+0x14>)
    3cda:	b.w	b944 <__aeabi_atexit>
    3cde:	nop
    3ce0:	.word	0x20007db0
    3ce4:	.word	0x00003021
    3ce8:	.word	0x20012720

00003cec <AudioFilterStateVariable::update_fixed(short const*, short*, short*, short*)>:

#if defined(__ARM_ARCH_7EM__)

void AudioFilterStateVariable::update_fixed(const int16_t *in,
	int16_t *lp, int16_t *bp, int16_t *hp)
{
    3cec:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    3cf0:	sub	sp, #12
    3cf2:	mov	r8, r1
	int32_t lowpasstmp, bandpasstmp, highpasstmp;
	int32_t fmult, damp;

	fmult = setting_fmult;
	damp = setting_damp;
	inputprev = state_inputprev;
    3cf4:	ldr	r4, [r0, #40]	; 0x28

#if defined(__ARM_ARCH_7EM__)

void AudioFilterStateVariable::update_fixed(const int16_t *in,
	int16_t *lp, int16_t *bp, int16_t *hp)
{
    3cf6:	str	r0, [sp, #4]
	int32_t input, inputprev;
	int32_t lowpass, bandpass, highpass;
	int32_t lowpasstmp, bandpasstmp, highpasstmp;
	int32_t fmult, damp;

	fmult = setting_fmult;
    3cf8:	ldr.w	ip, [r0, #28]
	damp = setting_damp;
    3cfc:	ldr.w	sl, [r0, #36]	; 0x24
	inputprev = state_inputprev;
	lowpass = state_lowpass;
    3d00:	ldr	r1, [r0, #44]	; 0x2c
	bandpass = state_bandpass;
    3d02:	ldr	r7, [r0, #48]	; 0x30

#if defined(__ARM_ARCH_7EM__)

void AudioFilterStateVariable::update_fixed(const int16_t *in,
	int16_t *lp, int16_t *bp, int16_t *hp)
{
    3d04:	ldr.w	r9, [sp, #48]	; 0x30
	const int16_t *end = in + AUDIO_BLOCK_SAMPLES;
    3d08:	add.w	r0, r8, #256	; 0x100
    3d0c:	mov	r6, r4
    3d0e:	mov	fp, r0
	damp = setting_damp;
	inputprev = state_inputprev;
	lowpass = state_lowpass;
	bandpass = state_bandpass;
	do {
		input = (*in++) << 12;
    3d10:	ldrsh.w	lr, [r8], #2
    3d14:	mov.w	lr, lr, lsl #12
static inline int32_t multiply_32x32_rshift32_rounded(int32_t a, int32_t b) __attribute__((always_inline, unused));
static inline int32_t multiply_32x32_rshift32_rounded(int32_t a, int32_t b)
{
#if defined (__ARM_ARCH_7EM__)
	int32_t out;
	asm volatile("smmulr %0, %1, %2" : "=r" (out) : "r" (a), "r" (b));
    3d18:	smmulr	r4, ip, r7
		lowpass = lowpass + MULT(fmult, bandpass);
    3d1c:	add.w	r4, r1, r4, lsl #2
    3d20:	smmulr	r5, sl, r7
		highpass = ((input + inputprev)>>1) - lowpass - MULT(damp, bandpass);
    3d24:	add	r6, lr
    3d26:	rsb	r6, r4, r6, asr #1
    3d2a:	sub.w	r6, r6, r5, lsl #2
    3d2e:	smmulr	r0, ip, r6
		inputprev = input;
		bandpass = bandpass + MULT(fmult, highpass);
    3d32:	add.w	r0, r7, r0, lsl #2
    3d36:	smmulr	r1, ip, r0
		lowpasstmp = lowpass;
		bandpasstmp = bandpass;
		highpasstmp = highpass;
		lowpass = lowpass + MULT(fmult, bandpass);
    3d3a:	add.w	r1, r4, r1, lsl #2
    3d3e:	smmulr	r5, sl, r0
		highpass = input - lowpass - MULT(damp, bandpass);
    3d42:	rsb	r7, r1, lr
    3d46:	sub.w	r5, r7, r5, lsl #2
    3d4a:	smmulr	r7, ip, r5
		bandpass = bandpass + MULT(fmult, highpass);
    3d4e:	add.w	r7, r0, r7, lsl #2
		lowpasstmp = signed_saturate_rshift(lowpass+lowpasstmp, 16, 13);
    3d52:	add	r4, r1
static inline int32_t signed_saturate_rshift(int32_t val, int bits, int rshift) __attribute__((always_inline, unused));
static inline int32_t signed_saturate_rshift(int32_t val, int bits, int rshift)
{
#if defined (__ARM_ARCH_7EM__)
	int32_t out;
	asm volatile("ssat %0, %1, %2, asr %3" : "=r" (out) : "I" (bits), "r" (val), "I" (rshift));
    3d54:	ssat	r4, #16, r4, asr #13
		bandpasstmp = signed_saturate_rshift(bandpass+bandpasstmp, 16, 13);
    3d58:	add	r0, r7
    3d5a:	ssat	r0, #16, r0, asr #13
		highpasstmp = signed_saturate_rshift(highpass+highpasstmp, 16, 13);
    3d5e:	add	r5, r6
    3d60:	ssat	r5, #16, r5, asr #13
		*lp++ = lowpasstmp;
		*bp++ = bandpasstmp;
		*hp++ = highpasstmp;
	} while (in < end);
    3d64:	cmp	fp, r8
		highpass = input - lowpass - MULT(damp, bandpass);
		bandpass = bandpass + MULT(fmult, highpass);
		lowpasstmp = signed_saturate_rshift(lowpass+lowpasstmp, 16, 13);
		bandpasstmp = signed_saturate_rshift(bandpass+bandpasstmp, 16, 13);
		highpasstmp = signed_saturate_rshift(highpass+highpasstmp, 16, 13);
		*lp++ = lowpasstmp;
    3d66:	strh.w	r4, [r2], #2
	damp = setting_damp;
	inputprev = state_inputprev;
	lowpass = state_lowpass;
	bandpass = state_bandpass;
	do {
		input = (*in++) << 12;
    3d6a:	mov	r6, lr
		bandpass = bandpass + MULT(fmult, highpass);
		lowpasstmp = signed_saturate_rshift(lowpass+lowpasstmp, 16, 13);
		bandpasstmp = signed_saturate_rshift(bandpass+bandpasstmp, 16, 13);
		highpasstmp = signed_saturate_rshift(highpass+highpasstmp, 16, 13);
		*lp++ = lowpasstmp;
		*bp++ = bandpasstmp;
    3d6c:	strh.w	r0, [r3], #2
		*hp++ = highpasstmp;
    3d70:	strh.w	r5, [r9], #2
	} while (in < end);
    3d74:	bne.n	3d10 <AudioFilterStateVariable::update_fixed(short const*, short*, short*, short*)+0x24>
	state_inputprev = inputprev;
    3d76:	ldr	r2, [sp, #4]
    3d78:	mov	r3, r2
    3d7a:	str.w	lr, [r3, #40]	; 0x28
	state_lowpass = lowpass;
    3d7e:	str	r1, [r2, #44]	; 0x2c
	state_bandpass = bandpass;
    3d80:	str	r7, [r2, #48]	; 0x30
}
    3d82:	add	sp, #12
    3d84:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

00003d88 <AudioFilterStateVariable::update_variable(short const*, short const*, short*, short*, short*)>:


void AudioFilterStateVariable::update_variable(const int16_t *in,
	const int16_t *ctl, int16_t *lp, int16_t *bp, int16_t *hp)
{
    3d88:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    3d8c:	sub	sp, #20
    3d8e:	mov	r8, r1
	int32_t lowpass, bandpass, highpass;
	int32_t lowpasstmp, bandpasstmp, highpasstmp;
	int32_t fcenter, fmult, damp, octavemult;
	int32_t n;

	fcenter = setting_fcenter;
    3d90:	ldr	r1, [r0, #24]
    3d92:	str	r1, [sp, #4]
	octavemult = setting_octavemult;
    3d94:	mov	r1, r0
	damp = setting_damp;
    3d96:	mov	r4, r1
}


void AudioFilterStateVariable::update_variable(const int16_t *in,
	const int16_t *ctl, int16_t *lp, int16_t *bp, int16_t *hp)
{
    3d98:	str	r0, [sp, #12]
	int32_t lowpasstmp, bandpasstmp, highpasstmp;
	int32_t fcenter, fmult, damp, octavemult;
	int32_t n;

	fcenter = setting_fcenter;
	octavemult = setting_octavemult;
    3d9a:	ldr	r0, [r0, #32]
    3d9c:	str	r0, [sp, #8]
	damp = setting_damp;
    3d9e:	ldr.w	fp, [r1, #36]	; 0x24
	inputprev = state_inputprev;
    3da2:	ldr	r7, [r1, #40]	; 0x28
	lowpass = state_lowpass;
	bandpass = state_bandpass;
    3da4:	ldr	r0, [r4, #48]	; 0x30

	fcenter = setting_fcenter;
	octavemult = setting_octavemult;
	damp = setting_damp;
	inputprev = state_inputprev;
	lowpass = state_lowpass;
    3da6:	ldr	r1, [r1, #44]	; 0x2c
}


void AudioFilterStateVariable::update_variable(const int16_t *in,
	const int16_t *ctl, int16_t *lp, int16_t *bp, int16_t *hp)
{
    3da8:	ldr.w	sl, [sp, #56]	; 0x38
    3dac:	ldr.w	r9, [sp, #60]	; 0x3c
	const int16_t *end = in + AUDIO_BLOCK_SAMPLES;
    3db0:	add.w	r4, r8, #256	; 0x100
    3db4:	str	r4, [sp, #0]
	inputprev = state_inputprev;
	lowpass = state_lowpass;
	bandpass = state_bandpass;
	do {
		// compute fmult using control input, fcenter and octavemult
		control = *ctl++;          // signal is always 15 fractional bits
    3db6:	ldrsh.w	r6, [r2], #2
		control *= octavemult;     // octavemult range: 0 to 28671 (12 frac bits)
    3dba:	ldr	r4, [sp, #8]
    3dbc:	mul.w	r6, r6, r4
			multiply_32x32_rshift32_rounded(x, 1358044250)) << 1);
		n = n << 1;
		#else
		// exp2 algorithm by Laurent de Soras
		// http://www.musicdsp.org/showone.php?id=106
		n = (n + 134217728) << 3;
    3dc0:	bic.w	r5, r6, #4160749568	; 0xf8000000
    3dc4:	add.w	r5, r5, #134217728	; 0x8000000
    3dc8:	lsls	r5, r5, #3
static inline int32_t multiply_32x32_rshift32_rounded(int32_t a, int32_t b) __attribute__((always_inline, unused));
static inline int32_t multiply_32x32_rshift32_rounded(int32_t a, int32_t b)
{
#if defined (__ARM_ARCH_7EM__)
	int32_t out;
	asm volatile("smmulr %0, %1, %2" : "=r" (out) : "r" (a), "r" (b));
    3dca:	smmulr	r5, r5, r5
    3dce:	ldr	r4, [pc, #160]	; (3e70 <AudioFilterStateVariable::update_variable(short const*, short const*, short*, short*, short*)+0xe8>)
    3dd0:	smmulr	r5, r5, r4
		n = multiply_32x32_rshift32_rounded(n, n);
		n = multiply_32x32_rshift32_rounded(n, 715827883) << 3;
    3dd4:	lsls	r5, r5, #3
		n = n + 715827882;
    3dd6:	subs	r4, #1
    3dd8:	asrs	r6, r6, #27
    3dda:	rsb	r6, r6, #6
    3dde:	add	r4, r5
    3de0:	asrs	r4, r6
    3de2:	ldr	r5, [sp, #4]
    3de4:	smmulr	r4, r5, r4
    3de8:	ldr	r5, [pc, #136]	; (3e74 <AudioFilterStateVariable::update_variable(short const*, short const*, short*, short*, short*)+0xec>)
			multiply_32x32_rshift32_rounded(
			multiply_32x32_rshift32_rounded(fmult, fmult),
			multiply_32x32_rshift32_rounded(fmult, -1383276101))) << 1;
		#endif
		// now do the state variable filter as normal, using fmult
		input = (*in++) << 12;
    3dea:	ldrsh.w	ip, [r8], #2
    3dee:	cmp	r4, r5
    3df0:	it	ge
    3df2:	movge	r4, r5
		n = n + 715827882;
		#endif
		n = n >> (6 - (control >> 27)); // 4 integer control bits
		fmult = multiply_32x32_rshift32_rounded(fcenter, n);
		if (fmult > 5378279) fmult = 5378279;
		fmult = fmult << 8;
    3df4:	lsls	r4, r4, #8
			multiply_32x32_rshift32_rounded(
			multiply_32x32_rshift32_rounded(fmult, fmult),
			multiply_32x32_rshift32_rounded(fmult, -1383276101))) << 1;
		#endif
		// now do the state variable filter as normal, using fmult
		input = (*in++) << 12;
    3df6:	mov.w	ip, ip, lsl #12
    3dfa:	smmulr	r6, r4, r0
		lowpass = lowpass + MULT(fmult, bandpass);
    3dfe:	add.w	r6, r1, r6, lsl #2
    3e02:	smmulr	r1, fp, r0
		highpass = ((input + inputprev)>>1) - lowpass - MULT(damp, bandpass);
    3e06:	add.w	lr, r7, ip
    3e0a:	rsb	lr, r6, lr, asr #1
    3e0e:	sub.w	lr, lr, r1, lsl #2
    3e12:	smmulr	r5, r4, lr
		inputprev = input;
		bandpass = bandpass + MULT(fmult, highpass);
    3e16:	add.w	r5, r0, r5, lsl #2
    3e1a:	smmulr	r1, r4, r5
		lowpasstmp = lowpass;
		bandpasstmp = bandpass;
		highpasstmp = highpass;
		lowpass = lowpass + MULT(fmult, bandpass);
    3e1e:	add.w	r1, r6, r1, lsl #2
    3e22:	smmulr	r0, fp, r5
		highpass = input - lowpass - MULT(damp, bandpass);
    3e26:	rsb	r7, r1, ip
    3e2a:	sub.w	r7, r7, r0, lsl #2
    3e2e:	smmulr	r4, r4, r7
		bandpass = bandpass + MULT(fmult, highpass);
    3e32:	add.w	r0, r5, r4, lsl #2
		lowpasstmp = signed_saturate_rshift(lowpass+lowpasstmp, 16, 13);
    3e36:	add	r6, r1
static inline int32_t signed_saturate_rshift(int32_t val, int bits, int rshift) __attribute__((always_inline, unused));
static inline int32_t signed_saturate_rshift(int32_t val, int bits, int rshift)
{
#if defined (__ARM_ARCH_7EM__)
	int32_t out;
	asm volatile("ssat %0, %1, %2, asr %3" : "=r" (out) : "I" (bits), "r" (val), "I" (rshift));
    3e38:	ssat	r6, #16, r6, asr #13
		bandpasstmp = signed_saturate_rshift(bandpass+bandpasstmp, 16, 13);
    3e3c:	add	r5, r0
    3e3e:	ssat	r5, #16, r5, asr #13
		highpasstmp = signed_saturate_rshift(highpass+highpasstmp, 16, 13);
    3e42:	add	lr, r7
    3e44:	ssat	lr, #16, lr, asr #13
		*lp++ = lowpasstmp;
		*bp++ = bandpasstmp;
		*hp++ = highpasstmp;
	} while (in < end);
    3e48:	ldr	r4, [sp, #0]
		highpass = input - lowpass - MULT(damp, bandpass);
		bandpass = bandpass + MULT(fmult, highpass);
		lowpasstmp = signed_saturate_rshift(lowpass+lowpasstmp, 16, 13);
		bandpasstmp = signed_saturate_rshift(bandpass+bandpasstmp, 16, 13);
		highpasstmp = signed_saturate_rshift(highpass+highpasstmp, 16, 13);
		*lp++ = lowpasstmp;
    3e4a:	strh.w	r6, [r3], #2
		*bp++ = bandpasstmp;
		*hp++ = highpasstmp;
	} while (in < end);
    3e4e:	cmp	r4, r8
		bandpass = bandpass + MULT(fmult, highpass);
		lowpasstmp = signed_saturate_rshift(lowpass+lowpasstmp, 16, 13);
		bandpasstmp = signed_saturate_rshift(bandpass+bandpasstmp, 16, 13);
		highpasstmp = signed_saturate_rshift(highpass+highpasstmp, 16, 13);
		*lp++ = lowpasstmp;
		*bp++ = bandpasstmp;
    3e50:	strh.w	r5, [sl], #2
			multiply_32x32_rshift32_rounded(
			multiply_32x32_rshift32_rounded(fmult, fmult),
			multiply_32x32_rshift32_rounded(fmult, -1383276101))) << 1;
		#endif
		// now do the state variable filter as normal, using fmult
		input = (*in++) << 12;
    3e54:	mov	r7, ip
		lowpasstmp = signed_saturate_rshift(lowpass+lowpasstmp, 16, 13);
		bandpasstmp = signed_saturate_rshift(bandpass+bandpasstmp, 16, 13);
		highpasstmp = signed_saturate_rshift(highpass+highpasstmp, 16, 13);
		*lp++ = lowpasstmp;
		*bp++ = bandpasstmp;
		*hp++ = highpasstmp;
    3e56:	strh.w	lr, [r9], #2
	} while (in < end);
    3e5a:	bne.n	3db6 <AudioFilterStateVariable::update_variable(short const*, short const*, short*, short*, short*)+0x2e>
	state_inputprev = inputprev;
    3e5c:	ldr	r2, [sp, #12]
    3e5e:	mov	r3, r2
    3e60:	str.w	ip, [r3, #40]	; 0x28
	state_lowpass = lowpass;
    3e64:	str	r1, [r2, #44]	; 0x2c
	state_bandpass = bandpass;
    3e66:	str	r0, [r2, #48]	; 0x30
}
    3e68:	add	sp, #20
    3e6a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    3e6e:	nop
    3e70:	.word	0x2aaaaaab
    3e74:	.word	0x005210e7

00003e78 <AudioFilterStateVariable::update()>:


void AudioFilterStateVariable::update(void)
{
    3e78:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
	audio_block_t *input_block=NULL, *control_block=NULL;
	audio_block_t *lowpass_block=NULL, *bandpass_block=NULL, *highpass_block=NULL;

	input_block = receiveReadOnly(0);
    3e7c:	movs	r1, #0
	state_bandpass = bandpass;
}


void AudioFilterStateVariable::update(void)
{
    3e7e:	sub	sp, #12
    3e80:	mov	r4, r0
	audio_block_t *input_block=NULL, *control_block=NULL;
	audio_block_t *lowpass_block=NULL, *bandpass_block=NULL, *highpass_block=NULL;

	input_block = receiveReadOnly(0);
    3e82:	bl	96ec <AudioStream::receiveReadOnly(unsigned int)>
	control_block = receiveReadOnly(1);
    3e86:	movs	r1, #1
void AudioFilterStateVariable::update(void)
{
	audio_block_t *input_block=NULL, *control_block=NULL;
	audio_block_t *lowpass_block=NULL, *bandpass_block=NULL, *highpass_block=NULL;

	input_block = receiveReadOnly(0);
    3e88:	mov	r5, r0
	control_block = receiveReadOnly(1);
    3e8a:	mov	r0, r4
    3e8c:	bl	96ec <AudioStream::receiveReadOnly(unsigned int)>
    3e90:	mov	r6, r0
	if (!input_block) {
    3e92:	cmp	r5, #0
    3e94:	beq.n	3f10 <AudioFilterStateVariable::update()+0x98>
		if (control_block) release(control_block);
		return;
	}
	lowpass_block = allocate();
    3e96:	bl	95bc <AudioStream::allocate()>
	if (!lowpass_block) {
    3e9a:	mov	r7, r0
    3e9c:	cmp	r0, #0
    3e9e:	beq.n	3f1a <AudioFilterStateVariable::update()+0xa2>
		release(input_block);
		if (control_block) release(control_block);
		return;
	}
	bandpass_block = allocate();
    3ea0:	bl	95bc <AudioStream::allocate()>
	if (!bandpass_block) {
    3ea4:	mov	r8, r0
    3ea6:	cmp	r0, #0
    3ea8:	beq.n	3f30 <AudioFilterStateVariable::update()+0xb8>
		release(input_block);
		release(lowpass_block);
		if (control_block) release(control_block);
		return;
	}
	highpass_block = allocate();
    3eaa:	bl	95bc <AudioStream::allocate()>
	if (!highpass_block) {
    3eae:	mov	r9, r0
    3eb0:	cmp	r0, #0
    3eb2:	beq.n	3f58 <AudioFilterStateVariable::update()+0xe0>
		release(bandpass_block);
		if (control_block) release(control_block);
		return;
	}

	if (control_block) {
    3eb4:	cmp	r6, #0
    3eb6:	beq.n	3f44 <AudioFilterStateVariable::update()+0xcc>
		update_variable(input_block->data,
    3eb8:	adds	r2, r0, #4
    3eba:	add.w	r3, r8, #4
			 control_block->data,
			 lowpass_block->data,
			 bandpass_block->data,
			 highpass_block->data);
    3ebe:	str	r2, [sp, #4]
    3ec0:	str	r3, [sp, #0]
    3ec2:	mov	r0, r4
    3ec4:	adds	r3, r7, #4
    3ec6:	adds	r2, r6, #4
    3ec8:	adds	r1, r5, #4
    3eca:	bl	3d88 <AudioFilterStateVariable::update_variable(short const*, short const*, short*, short*, short*)>
		release(control_block);
    3ece:	mov	r0, r6
    3ed0:	bl	9664 <AudioStream::release(audio_block_struct*)>
		update_fixed(input_block->data,
			 lowpass_block->data,
			 bandpass_block->data,
			 highpass_block->data);
	}
	release(input_block);
    3ed4:	mov	r0, r5
    3ed6:	bl	9664 <AudioStream::release(audio_block_struct*)>
	transmit(lowpass_block, 0);
    3eda:	movs	r2, #0
    3edc:	mov	r1, r7
    3ede:	mov	r0, r4
    3ee0:	bl	96b8 <AudioStream::transmit(audio_block_struct*, unsigned char)>
	release(lowpass_block);
    3ee4:	mov	r0, r7
    3ee6:	bl	9664 <AudioStream::release(audio_block_struct*)>
	transmit(bandpass_block, 1);
    3eea:	movs	r2, #1
    3eec:	mov	r1, r8
    3eee:	mov	r0, r4
    3ef0:	bl	96b8 <AudioStream::transmit(audio_block_struct*, unsigned char)>
	release(bandpass_block);
    3ef4:	mov	r0, r8
    3ef6:	bl	9664 <AudioStream::release(audio_block_struct*)>
	transmit(highpass_block, 2);
    3efa:	mov	r0, r4
    3efc:	movs	r2, #2
    3efe:	mov	r1, r9
    3f00:	bl	96b8 <AudioStream::transmit(audio_block_struct*, unsigned char)>
	release(highpass_block);
    3f04:	mov	r0, r9
	return;
}
    3f06:	add	sp, #12
    3f08:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
	transmit(lowpass_block, 0);
	release(lowpass_block);
	transmit(bandpass_block, 1);
	release(bandpass_block);
	transmit(highpass_block, 2);
	release(highpass_block);
    3f0c:	b.w	9664 <AudioStream::release(audio_block_struct*)>
	audio_block_t *lowpass_block=NULL, *bandpass_block=NULL, *highpass_block=NULL;

	input_block = receiveReadOnly(0);
	control_block = receiveReadOnly(1);
	if (!input_block) {
		if (control_block) release(control_block);
    3f10:	cmp	r0, #0
    3f12:	bne.n	3f06 <AudioFilterStateVariable::update()+0x8e>
	transmit(bandpass_block, 1);
	release(bandpass_block);
	transmit(highpass_block, 2);
	release(highpass_block);
	return;
}
    3f14:	add	sp, #12
    3f16:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
		if (control_block) release(control_block);
		return;
	}
	lowpass_block = allocate();
	if (!lowpass_block) {
		release(input_block);
    3f1a:	mov	r0, r5
    3f1c:	bl	9664 <AudioStream::release(audio_block_struct*)>
		if (control_block) release(control_block);
    3f20:	cmp	r6, #0
    3f22:	beq.n	3f14 <AudioFilterStateVariable::update()+0x9c>
	highpass_block = allocate();
	if (!highpass_block) {
		release(input_block);
		release(lowpass_block);
		release(bandpass_block);
		if (control_block) release(control_block);
    3f24:	mov	r0, r6
	transmit(bandpass_block, 1);
	release(bandpass_block);
	transmit(highpass_block, 2);
	release(highpass_block);
	return;
}
    3f26:	add	sp, #12
    3f28:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
	transmit(lowpass_block, 0);
	release(lowpass_block);
	transmit(bandpass_block, 1);
	release(bandpass_block);
	transmit(highpass_block, 2);
	release(highpass_block);
    3f2c:	b.w	9664 <AudioStream::release(audio_block_struct*)>
		if (control_block) release(control_block);
		return;
	}
	bandpass_block = allocate();
	if (!bandpass_block) {
		release(input_block);
    3f30:	mov	r0, r5
    3f32:	bl	9664 <AudioStream::release(audio_block_struct*)>
		release(lowpass_block);
    3f36:	mov	r0, r7
    3f38:	bl	9664 <AudioStream::release(audio_block_struct*)>
		if (control_block) release(control_block);
    3f3c:	cmp	r6, #0
    3f3e:	beq.n	3f14 <AudioFilterStateVariable::update()+0x9c>
	highpass_block = allocate();
	if (!highpass_block) {
		release(input_block);
		release(lowpass_block);
		release(bandpass_block);
		if (control_block) release(control_block);
    3f40:	mov	r0, r6
    3f42:	b.n	3f26 <AudioFilterStateVariable::update()+0xae>
			 lowpass_block->data,
			 bandpass_block->data,
			 highpass_block->data);
		release(control_block);
	} else {
		update_fixed(input_block->data,
    3f44:	adds	r3, r0, #4
			 lowpass_block->data,
			 bandpass_block->data,
			 highpass_block->data);
    3f46:	str	r3, [sp, #0]
    3f48:	adds	r2, r7, #4
    3f4a:	add.w	r3, r8, #4
    3f4e:	adds	r1, r5, #4
    3f50:	mov	r0, r4
    3f52:	bl	3cec <AudioFilterStateVariable::update_fixed(short const*, short*, short*, short*)>
    3f56:	b.n	3ed4 <AudioFilterStateVariable::update()+0x5c>
		if (control_block) release(control_block);
		return;
	}
	highpass_block = allocate();
	if (!highpass_block) {
		release(input_block);
    3f58:	mov	r0, r5
    3f5a:	bl	9664 <AudioStream::release(audio_block_struct*)>
		release(lowpass_block);
    3f5e:	mov	r0, r7
    3f60:	bl	9664 <AudioStream::release(audio_block_struct*)>
		release(bandpass_block);
    3f64:	mov	r0, r8
    3f66:	bl	9664 <AudioStream::release(audio_block_struct*)>
		if (control_block) release(control_block);
    3f6a:	cmp	r6, #0
    3f6c:	beq.n	3f14 <AudioFilterStateVariable::update()+0x9c>
    3f6e:	mov	r0, r6
    3f70:	b.n	3f26 <AudioFilterStateVariable::update()+0xae>
    3f72:	nop

00003f74 <_GLOBAL__sub_I__ZN18AudioOutputI2SQuad13block_ch1_1stE>:
uint16_t  AudioOutputI2SQuad::ch3_offset = 0;
uint16_t  AudioOutputI2SQuad::ch4_offset = 0;
//audio_block_t * AudioOutputI2SQuad::inputQueueArray[4];
bool AudioOutputI2SQuad::update_responsibility = false;
DMAMEM static uint32_t i2s_tx_buffer[AUDIO_BLOCK_SAMPLES*2];
DMAChannel AudioOutputI2SQuad::dma(false);
    3f74:	ldr	r2, [pc, #8]	; (3f80 <_GLOBAL__sub_I__ZN18AudioOutputI2SQuad13block_ch1_1stE+0xc>)
    3f76:	ldr	r1, [pc, #12]	; (3f84 <_GLOBAL__sub_I__ZN18AudioOutputI2SQuad13block_ch1_1stE+0x10>)
    3f78:	ldr	r0, [pc, #12]	; (3f88 <_GLOBAL__sub_I__ZN18AudioOutputI2SQuad13block_ch1_1stE+0x14>)
    3f7a:	b.w	b944 <__aeabi_atexit>
    3f7e:	nop
    3f80:	.word	0x20007db0
    3f84:	.word	0x00003021
    3f88:	.word	0x20012728

00003f8c <AudioSynthWaveformSine::update()>:
{
	audio_block_t *block;
	uint32_t i, ph, inc, index, scale;
	int32_t val1, val2;

	if (magnitude) {
    3f8c:	ldr	r3, [r0, #32]
extern const int16_t AudioWaveformSine[257];
}


void AudioSynthWaveformSine::update(void)
{
    3f8e:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    3f92:	mov	r8, r0
	audio_block_t *block;
	uint32_t i, ph, inc, index, scale;
	int32_t val1, val2;

	if (magnitude) {
    3f94:	cbnz	r3, 3faa <AudioSynthWaveformSine::update()+0x1e>
			transmit(block);
			release(block);
			return;
		}
	}
	phase_accumulator += phase_increment * AUDIO_BLOCK_SAMPLES;
    3f96:	ldr.w	r3, [r8, #24]
    3f9a:	ldr.w	r2, [r8, #28]
    3f9e:	add.w	r3, r3, r2, lsl #7
    3fa2:	str.w	r3, [r8, #24]
    3fa6:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	audio_block_t *block;
	uint32_t i, ph, inc, index, scale;
	int32_t val1, val2;

	if (magnitude) {
		block = allocate();
    3faa:	bl	95bc <AudioStream::allocate()>
		if (block) {
    3fae:	mov	r6, r0
    3fb0:	cmp	r0, #0
    3fb2:	beq.n	3f96 <AudioSynthWaveformSine::update()+0xa>
			ph = phase_accumulator;
    3fb4:	ldr.w	r9, [r8, #24]
			inc = phase_increment;
    3fb8:	ldr.w	r7, [r8, #28]
    3fbc:	ldr.w	ip, [r8, #32]
    3fc0:	ldr	r5, [pc, #76]	; (4010 <AudioSynthWaveformSine::update()+0x84>)
	int32_t val1, val2;

	if (magnitude) {
		block = allocate();
		if (block) {
			ph = phase_accumulator;
    3fc2:	mov	r1, r9
    3fc4:	adds	r4, r0, #2
    3fc6:	add.w	lr, r0, #258	; 0x102
			inc = phase_increment;
			for (i=0; i < AUDIO_BLOCK_SAMPLES; i++) {
				index = ph >> 24;
    3fca:	lsrs	r3, r1, #24
				val1 = AudioWaveformSine[index];
				val2 = AudioWaveformSine[index+1];
    3fcc:	adds	r2, r3, #1
static inline int32_t multiply_32x32_rshift32(int32_t a, int32_t b) __attribute__((always_inline, unused));
static inline int32_t multiply_32x32_rshift32(int32_t a, int32_t b)
{
#if defined (__ARM_ARCH_7EM__)
	int32_t out;
	asm volatile("smmul %0, %1, %2" : "=r" (out) : "r" (a), "r" (b));
    3fce:	ldrsh.w	r0, [r5, r3, lsl #1]
    3fd2:	ldrsh.w	r2, [r5, r2, lsl #1]
				scale = (ph >> 8) & 0xFFFF;
    3fd6:	ubfx	sl, r1, #8, #16
    3fda:	rsb	r3, sl, #65536	; 0x10000
    3fde:	mul.w	r3, r0, r3
    3fe2:	mla	r3, sl, r2, r3
    3fe6:	smmul	r3, r3, ip
				val2 *= scale;
				val1 *= 0x10000 - scale;
#if defined(__ARM_ARCH_7EM__)
				block->data[i] = multiply_32x32_rshift32(val1 + val2, magnitude);
    3fea:	strh.w	r3, [r4, #2]!
	if (magnitude) {
		block = allocate();
		if (block) {
			ph = phase_accumulator;
			inc = phase_increment;
			for (i=0; i < AUDIO_BLOCK_SAMPLES; i++) {
    3fee:	cmp	lr, r4
#if defined(__ARM_ARCH_7EM__)
				block->data[i] = multiply_32x32_rshift32(val1 + val2, magnitude);
#elif defined(KINETISL)
				block->data[i] = (((val1 + val2) >> 16) * magnitude) >> 16;
#endif
				ph += inc;
    3ff0:	add	r1, r7
	if (magnitude) {
		block = allocate();
		if (block) {
			ph = phase_accumulator;
			inc = phase_increment;
			for (i=0; i < AUDIO_BLOCK_SAMPLES; i++) {
    3ff2:	bne.n	3fca <AudioSynthWaveformSine::update()+0x3e>
#elif defined(KINETISL)
				block->data[i] = (((val1 + val2) >> 16) * magnitude) >> 16;
#endif
				ph += inc;
			}
			phase_accumulator = ph;
    3ff4:	add.w	r7, r9, r7, lsl #7
			transmit(block);
    3ff8:	mov	r0, r8
#elif defined(KINETISL)
				block->data[i] = (((val1 + val2) >> 16) * magnitude) >> 16;
#endif
				ph += inc;
			}
			phase_accumulator = ph;
    3ffa:	str.w	r7, [r8, #24]
			transmit(block);
    3ffe:	mov	r1, r6
    4000:	movs	r2, #0
    4002:	bl	96b8 <AudioStream::transmit(audio_block_struct*, unsigned char)>
			release(block);
    4006:	mov	r0, r6
			return;
		}
	}
	phase_accumulator += phase_increment * AUDIO_BLOCK_SAMPLES;
}
    4008:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
#endif
				ph += inc;
			}
			phase_accumulator = ph;
			transmit(block);
			release(block);
    400c:	b.w	9664 <AudioStream::release(audio_block_struct*)>
    4010:	.word	0x0009dcc4

00004014 <_GLOBAL__sub_I__ZN13AudioInputTDM14block_incomingE>:
audio_block_t * AudioInputTDM::block_incoming[16] = {
	nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr,
	nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr
};
bool AudioInputTDM::update_responsibility = false;
DMAChannel AudioInputTDM::dma(false);
    4014:	ldr	r2, [pc, #8]	; (4020 <_GLOBAL__sub_I__ZN13AudioInputTDM14block_incomingE+0xc>)
    4016:	ldr	r1, [pc, #12]	; (4024 <_GLOBAL__sub_I__ZN13AudioInputTDM14block_incomingE+0x10>)
    4018:	ldr	r0, [pc, #12]	; (4028 <_GLOBAL__sub_I__ZN13AudioInputTDM14block_incomingE+0x14>)
    401a:	b.w	b944 <__aeabi_atexit>
    401e:	nop
    4020:	.word	0x20007db0
    4024:	.word	0x00003021
    4028:	.word	0x20012730

0000402c <_GLOBAL__sub_I__ZN13AudioInputI2S10block_leftE>:
static uint32_t i2s_rx_buffer[AUDIO_BLOCK_SAMPLES];
audio_block_t * AudioInputI2S::block_left = NULL;
audio_block_t * AudioInputI2S::block_right = NULL;
uint16_t AudioInputI2S::block_offset = 0;
bool AudioInputI2S::update_responsibility = false;
DMAChannel AudioInputI2S::dma(false);
    402c:	ldr	r2, [pc, #8]	; (4038 <_GLOBAL__sub_I__ZN13AudioInputI2S10block_leftE+0xc>)
    402e:	ldr	r1, [pc, #12]	; (403c <_GLOBAL__sub_I__ZN13AudioInputI2S10block_leftE+0x10>)
    4030:	ldr	r0, [pc, #12]	; (4040 <_GLOBAL__sub_I__ZN13AudioInputI2S10block_leftE+0x14>)
    4032:	b.w	b944 <__aeabi_atexit>
    4036:	nop
    4038:	.word	0x20007db0
    403c:	.word	0x00003021
    4040:	.word	0x20012738

00004044 <AudioSynthWavetable::update()>:
 * Further details on implementation included inline.
 *
 */
void AudioSynthWavetable::update(void) {
	// exit if nothing to do
	if (env_state == STATE_IDLE || (current_sample->LOOP == false && tone_phase >= current_sample->MAX_PHASE)) {
    4044:	ldrb.w	r3, [r0, #46]	; 0x2e
    4048:	cmp	r3, #0
    404a:	beq.w	4206 <AudioSynthWavetable::update()+0x1c2>
 * @brief Called by the AudioStream library to fill the audio output buffer.
 * The major parts are the interpoalation stage, and the volume envelope stage.
 * Further details on implementation included inline.
 *
 */
void AudioSynthWavetable::update(void) {
    404e:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
	// exit if nothing to do
	if (env_state == STATE_IDLE || (current_sample->LOOP == false && tone_phase >= current_sample->MAX_PHASE)) {
    4052:	ldr.w	sl, [r0, #32]
    4056:	ldrb.w	r3, [sl, #4]
 * @brief Called by the AudioStream library to fill the audio output buffer.
 * The major parts are the interpoalation stage, and the volume envelope stage.
 * Further details on implementation included inline.
 *
 */
void AudioSynthWavetable::update(void) {
    405a:	sub	sp, #84	; 0x54
	// exit if nothing to do
	if (env_state == STATE_IDLE || (current_sample->LOOP == false && tone_phase >= current_sample->MAX_PHASE)) {
    405c:	cmp	r3, #0
    405e:	beq.w	420e <AudioSynthWavetable::update()+0x1ca>
		env_state = STATE_IDLE;
		return;
	}
	// else locally copy object state and continue
	this->state_change = false;
    4062:	movs	r6, #0
    4064:	strb	r6, [r0, #24]

	const sample_data* s = (const sample_data*)current_sample;
	uint32_t tone_phase = this->tone_phase;
    4066:	ldr.w	r8, [r0, #36]	; 0x24
	uint32_t tone_incr = this->tone_incr;
    406a:	ldr	r3, [r0, #40]	; 0x28
    406c:	str	r3, [sp, #28]
	uint16_t tone_amp = this->tone_amp;
    406e:	ldrh	r2, [r0, #44]	; 0x2c

	envelopeStateEnum  env_state = this->env_state;
    4070:	ldrb.w	r3, [r0, #46]	; 0x2e
	int32_t env_count = this->env_count;
    4074:	ldr	r1, [r0, #48]	; 0x30
    4076:	str	r0, [sp, #68]	; 0x44
    4078:	str	r1, [sp, #56]	; 0x38
	int32_t env_mult = this->env_mult;
    407a:	mov	r1, r0
    407c:	ldr	r0, [r0, #52]	; 0x34
    407e:	str	r0, [sp, #64]	; 0x40
	int32_t env_incr = this->env_incr;
    4080:	mov	r0, r1
    4082:	ldr	r1, [r1, #56]	; 0x38
    4084:	str	r1, [sp, #60]	; 0x3c

	uint32_t vib_count = this->vib_count;
    4086:	ldr	r5, [r0, #60]	; 0x3c
	uint32_t vib_phase = this->vib_phase;
    4088:	ldr	r1, [r0, #64]	; 0x40
    408a:	str	r1, [sp, #16]
	int32_t vib_pitch_offset_init = this->vib_pitch_offset_init;
    408c:	mov	r1, r0
    408e:	ldr	r0, [r0, #68]	; 0x44
    4090:	str	r0, [sp, #32]
	int32_t vib_pitch_offset_scnd = this->vib_pitch_offset_scnd;
    4092:	mov	r0, r1
    4094:	ldr	r1, [r1, #72]	; 0x48
    4096:	str	r1, [sp, #36]	; 0x24

	uint32_t mod_count = this->mod_count;
    4098:	ldr	r4, [r0, #76]	; 0x4c
	int32_t mod_phase = this->mod_phase;
    409a:	ldr	r1, [r0, #80]	; 0x50
    409c:	str	r1, [sp, #20]
	int32_t mod_pitch_offset_init = this->mod_pitch_offset_init;
    409e:	mov	r1, r0
	this->state_change = false;

	const sample_data* s = (const sample_data*)current_sample;
	uint32_t tone_phase = this->tone_phase;
	uint32_t tone_incr = this->tone_incr;
	uint16_t tone_amp = this->tone_amp;
    40a0:	uxth	r2, r2
	int32_t vib_pitch_offset_init = this->vib_pitch_offset_init;
	int32_t vib_pitch_offset_scnd = this->vib_pitch_offset_scnd;

	uint32_t mod_count = this->mod_count;
	int32_t mod_phase = this->mod_phase;
	int32_t mod_pitch_offset_init = this->mod_pitch_offset_init;
    40a2:	ldr	r0, [r0, #84]	; 0x54
	int32_t mod_pitch_offset_scnd = this->mod_pitch_offset_scnd;
    40a4:	ldr	r1, [r1, #88]	; 0x58
	int32_t vib_pitch_offset_init = this->vib_pitch_offset_init;
	int32_t vib_pitch_offset_scnd = this->vib_pitch_offset_scnd;

	uint32_t mod_count = this->mod_count;
	int32_t mod_phase = this->mod_phase;
	int32_t mod_pitch_offset_init = this->mod_pitch_offset_init;
    40a6:	str	r0, [sp, #40]	; 0x28
	const sample_data* s = (const sample_data*)current_sample;
	uint32_t tone_phase = this->tone_phase;
	uint32_t tone_incr = this->tone_incr;
	uint16_t tone_amp = this->tone_amp;

	envelopeStateEnum  env_state = this->env_state;
    40a8:	uxtb	r3, r3
	int32_t vib_pitch_offset_scnd = this->vib_pitch_offset_scnd;

	uint32_t mod_count = this->mod_count;
	int32_t mod_phase = this->mod_phase;
	int32_t mod_pitch_offset_init = this->mod_pitch_offset_init;
	int32_t mod_pitch_offset_scnd = this->mod_pitch_offset_scnd;
    40aa:	str	r1, [sp, #44]	; 0x2c
	this->state_change = false;

	const sample_data* s = (const sample_data*)current_sample;
	uint32_t tone_phase = this->tone_phase;
	uint32_t tone_incr = this->tone_incr;
	uint16_t tone_amp = this->tone_amp;
    40ac:	str	r2, [sp, #12]

	envelopeStateEnum  env_state = this->env_state;
    40ae:	str	r3, [sp, #52]	; 0x34
	int32_t mod_phase = this->mod_phase;
	int32_t mod_pitch_offset_init = this->mod_pitch_offset_init;
	int32_t mod_pitch_offset_scnd = this->mod_pitch_offset_scnd;

	audio_block_t* block;
	block = allocate();
    40b0:	bl	95bc <AudioStream::allocate()>
	if (block == NULL) return;
    40b4:	str	r0, [sp, #72]	; 0x48
    40b6:	cmp	r0, #0
    40b8:	beq.w	4220 <AudioSynthWavetable::update()+0x1dc>
	uint32_t index, phase_scale;
	int32_t s1, s2;
	uint32_t tmp1, tmp2;

	// filling audio_block two samples at a time
	p = (uint32_t*)block->data;
    40bc:	ldr	r2, [sp, #72]	; 0x48
    40be:	mov	r3, r2
    40c0:	adds	r3, #4
	end = p + AUDIO_BLOCK_SAMPLES / 2;
    40c2:	add.w	r2, r2, #260	; 0x104

	// also note that the vibrato/tremolo for the two LFO are defined in the SoundFont spec to be a cents (vibrato) or centibel (tremolo)
	// diviation oscillating with a triangle wave at a given frequency; the following implementation gets the critical points of those
	// oscillations correct, but linearly interpolates the *frequency* and *amplitude* range between those points, which technically results
	// in a "bowing" of the triangle wave curve relative to what it should be (although this typically isn't audible)
	while (p < end) {
    40c6:	cmp	r3, r2
	uint32_t index, phase_scale;
	int32_t s1, s2;
	uint32_t tmp1, tmp2;

	// filling audio_block two samples at a time
	p = (uint32_t*)block->data;
    40c8:	str	r3, [sp, #76]	; 0x4c
	end = p + AUDIO_BLOCK_SAMPLES / 2;
    40ca:	str	r2, [sp, #24]

	// also note that the vibrato/tremolo for the two LFO are defined in the SoundFont spec to be a cents (vibrato) or centibel (tremolo)
	// diviation oscillating with a triangle wave at a given frequency; the following implementation gets the critical points of those
	// oscillations correct, but linearly interpolates the *frequency* and *amplitude* range between those points, which technically results
	// in a "bowing" of the triangle wave curve relative to what it should be (although this typically isn't audible)
	while (p < end) {
    40cc:	bcs.w	485c <AudioSynthWavetable::update()+0x818>
    40d0:	ldrb.w	ip, [sl, #4]
static inline int32_t multiply_accumulate_32x32_rshift32_rounded(int32_t sum, int32_t a, int32_t b) __attribute__((always_inline, unused));
static inline int32_t multiply_accumulate_32x32_rshift32_rounded(int32_t sum, int32_t a, int32_t b)
{
#if defined (__ARM_ARCH_7EM__)
	int32_t out;
	asm volatile("smmlar %0, %2, %3, %1" : "=r" (out) : "r" (sum), "r" (a), "r" (b));
    40d4:	str	r6, [sp, #48]	; 0x30
    40d6:	mov	r7, r3
    40d8:	mov	r9, ip
		// TODO: more elegant support of non-looping samples
		if (s->LOOP == false && tone_phase >= s->MAX_PHASE) break;
    40da:	cmp.w	r9, #0
    40de:	bne.n	40ea <AudioSynthWavetable::update()+0xa6>
    40e0:	ldr.w	r3, [sl, #16]
    40e4:	cmp	r3, r8
    40e6:	bls.w	4254 <AudioSynthWavetable::update()+0x210>

		// variable to accumulate LFO pitch offsets; stays 0 if still in vibrato/modulation delay
		int32_t tone_incr_offset = 0; 
		if (vib_count++ > s->VIBRATO_DELAY) {
    40ea:	ldr.w	r3, [sl, #56]	; 0x38
    40ee:	adds	r2, r5, #1
    40f0:	cmp	r3, r5
    40f2:	str	r2, [sp, #4]
    40f4:	bcs.w	4250 <AudioSynthWavetable::update()+0x20c>
			vib_phase += s->VIBRATO_INCREMENT;
			// convert uint32_t phase value to int32_t triangle wave value
			// TRIANGLE_INITIAL_PHASE (0xC0000000) and 0x40000000 -> 0, 0 -> INT32_MAX/2, 0x80000000 -> INT32_MIN/2
			int32_t vib_scale = vib_phase & 0x80000000 ? 0x40000000 + vib_phase : 0x3FFFFFFF - vib_phase;
    40f8:	ldr	r2, [sp, #16]
		if (s->LOOP == false && tone_phase >= s->MAX_PHASE) break;

		// variable to accumulate LFO pitch offsets; stays 0 if still in vibrato/modulation delay
		int32_t tone_incr_offset = 0; 
		if (vib_count++ > s->VIBRATO_DELAY) {
			vib_phase += s->VIBRATO_INCREMENT;
    40fa:	ldr.w	r3, [sl, #60]	; 0x3c
			// TRIANGLE_INITIAL_PHASE (0xC0000000) and 0x40000000 -> 0, 0 -> INT32_MAX/2, 0x80000000 -> INT32_MIN/2
			int32_t vib_scale = vib_phase & 0x80000000 ? 0x40000000 + vib_phase : 0x3FFFFFFF - vib_phase;
			// select a vibrato pitch offset based on sign of scale; note that the values "init" and "scnd" values
			// produced by the decoder script will either both be negative, or both be positive; this allows the 
			// scalar to either start with either a downward (negative offset) or upward (positive) pitch oscillation
			int32_t vib_pitch_offset = vib_scale >= 0 ? vib_pitch_offset_init : vib_pitch_offset_scnd;
    40fe:	ldr	r1, [sp, #32]
		int32_t tone_incr_offset = 0; 
		if (vib_count++ > s->VIBRATO_DELAY) {
			vib_phase += s->VIBRATO_INCREMENT;
			// convert uint32_t phase value to int32_t triangle wave value
			// TRIANGLE_INITIAL_PHASE (0xC0000000) and 0x40000000 -> 0, 0 -> INT32_MAX/2, 0x80000000 -> INT32_MIN/2
			int32_t vib_scale = vib_phase & 0x80000000 ? 0x40000000 + vib_phase : 0x3FFFFFFF - vib_phase;
    4100:	adds	r3, r2, r3
    4102:	str	r3, [sp, #16]
    4104:	ittt	pl
    4106:	ldrpl	r2, [sp, #16]
    4108:	mvnpl.w	r3, #3221225472	; 0xc0000000
    410c:	subpl	r3, r3, r2
			// select a vibrato pitch offset based on sign of scale; note that the values "init" and "scnd" values
			// produced by the decoder script will either both be negative, or both be positive; this allows the 
			// scalar to either start with either a downward (negative offset) or upward (positive) pitch oscillation
			int32_t vib_pitch_offset = vib_scale >= 0 ? vib_pitch_offset_init : vib_pitch_offset_scnd;
    410e:	ldr	r2, [sp, #36]	; 0x24
		int32_t tone_incr_offset = 0; 
		if (vib_count++ > s->VIBRATO_DELAY) {
			vib_phase += s->VIBRATO_INCREMENT;
			// convert uint32_t phase value to int32_t triangle wave value
			// TRIANGLE_INITIAL_PHASE (0xC0000000) and 0x40000000 -> 0, 0 -> INT32_MAX/2, 0x80000000 -> INT32_MIN/2
			int32_t vib_scale = vib_phase & 0x80000000 ? 0x40000000 + vib_phase : 0x3FFFFFFF - vib_phase;
    4110:	it	mi
    4112:	addmi.w	r3, r3, #1073741824	; 0x40000000
			// select a vibrato pitch offset based on sign of scale; note that the values "init" and "scnd" values
			// produced by the decoder script will either both be negative, or both be positive; this allows the 
			// scalar to either start with either a downward (negative offset) or upward (positive) pitch oscillation
			int32_t vib_pitch_offset = vib_scale >= 0 ? vib_pitch_offset_init : vib_pitch_offset_scnd;
    4116:	ands.w	r2, r2, r3, asr #32
    411a:	it	cc
    411c:	movcc	r2, r1
    411e:	ldr	r1, [sp, #48]	; 0x30
    4120:	smmlar	r2, r3, r2, r1
			tone_incr_offset = multiply_accumulate_32x32_rshift32_rounded(tone_incr_offset, vib_scale, vib_pitch_offset);
		}

		// variable to hold an adjusted amplitude attenuation value; stays at tone_amp if modulation in delay
		int32_t mod_amp = tone_amp;
		if (mod_count++ > s->MODULATION_DELAY) {
    4124:	ldr.w	r3, [sl, #72]	; 0x48
			// note the offset value is already preshifted by << 2 to account for this func shifting >> 32
			tone_incr_offset = multiply_accumulate_32x32_rshift32_rounded(tone_incr_offset, vib_scale, vib_pitch_offset);
		}

		// variable to hold an adjusted amplitude attenuation value; stays at tone_amp if modulation in delay
		int32_t mod_amp = tone_amp;
    4128:	ldr	r1, [sp, #12]
		if (mod_count++ > s->MODULATION_DELAY) {
    412a:	adds	r0, r4, #1
    412c:	cmp	r4, r3
    412e:	str	r0, [sp, #8]
    4130:	bls.n	416e <AudioSynthWavetable::update()+0x12a>
			// pitch LFO component is same as above, but we'll also use the scale value for tremolo below
			mod_phase += s->MODULATION_INCREMENT;
			int32_t mod_scale = mod_phase & 0x80000000 ? 0x40000000 + mod_phase : 0x3FFFFFFF - mod_phase;
    4132:	ldr	r1, [sp, #20]

		// variable to hold an adjusted amplitude attenuation value; stays at tone_amp if modulation in delay
		int32_t mod_amp = tone_amp;
		if (mod_count++ > s->MODULATION_DELAY) {
			// pitch LFO component is same as above, but we'll also use the scale value for tremolo below
			mod_phase += s->MODULATION_INCREMENT;
    4134:	ldr.w	r3, [sl, #76]	; 0x4c
			int32_t mod_scale = mod_phase & 0x80000000 ? 0x40000000 + mod_phase : 0x3FFFFFFF - mod_phase;

			int32_t mod_pitch_offset = mod_scale >= 0 ? mod_pitch_offset_init : mod_pitch_offset_scnd;
    4138:	ldr	r0, [sp, #40]	; 0x28
		// variable to hold an adjusted amplitude attenuation value; stays at tone_amp if modulation in delay
		int32_t mod_amp = tone_amp;
		if (mod_count++ > s->MODULATION_DELAY) {
			// pitch LFO component is same as above, but we'll also use the scale value for tremolo below
			mod_phase += s->MODULATION_INCREMENT;
			int32_t mod_scale = mod_phase & 0x80000000 ? 0x40000000 + mod_phase : 0x3FFFFFFF - mod_phase;
    413a:	adds	r3, r1, r3
    413c:	str	r3, [sp, #20]
    413e:	ittet	pl
    4140:	ldrpl	r3, [sp, #20]
    4142:	mvnpl.w	r1, #3221225472	; 0xc0000000
    4146:	addmi.w	r1, r3, #1073741824	; 0x40000000
    414a:	subpl	r1, r1, r3

			int32_t mod_pitch_offset = mod_scale >= 0 ? mod_pitch_offset_init : mod_pitch_offset_scnd;
    414c:	cmp	r1, #0
    414e:	ldr	r3, [sp, #44]	; 0x2c
    4150:	it	ge
    4152:	movge	r3, r0
    4154:	smmlar	r2, r1, r3, r2
			tone_incr_offset = multiply_accumulate_32x32_rshift32_rounded(tone_incr_offset, mod_scale, mod_pitch_offset);

			// similar to pitch, sign of init and scnd are either both + or - to allow correct triangle direction
			int32_t mod_amp_offset = (mod_scale >= 0 ? s->MODULATION_AMPLITUDE_INITIAL_GAIN : s->MODULATION_AMPLITUDE_SECOND_GAIN);
    4158:	ldr.w	r3, [sl, #92]	; 0x5c
    415c:	ldr.w	r0, [sl, #88]	; 0x58
    4160:	it	lt
    4162:	movlt	r0, r3
static inline int32_t multiply_32x32_rshift32(int32_t a, int32_t b) __attribute__((always_inline, unused));
static inline int32_t multiply_32x32_rshift32(int32_t a, int32_t b)
{
#if defined (__ARM_ARCH_7EM__)
	int32_t out;
	asm volatile("smmul %0, %1, %2" : "=r" (out) : "r" (a), "r" (b));
    4164:	smmul	r1, r1, r0
// computes (sum + ((a[31:0] * b[15:0]) >> 16))
static inline int32_t signed_multiply_accumulate_32x16b(int32_t sum, int32_t a, uint32_t b) __attribute__((always_inline, unused));
static inline int32_t signed_multiply_accumulate_32x16b(int32_t sum, int32_t a, uint32_t b)
{
	int32_t out;
	asm volatile("smlawb %0, %2, %3, %1" : "=r" (out) : "r" (sum), "r" (a), "r" (b));
    4168:	ldr	r3, [sp, #12]
    416a:	smlawb	r1, r1, r3, r3
    416e:	ldr	r3, [sp, #28]
    4170:	ldr.w	r0, [sl, #8]
    4174:	ldr.w	r6, [sl]
    4178:	add.w	lr, r7, #64	; 0x40
    417c:	add	r2, r3
    417e:	mov	r3, r9
    4180:	rsb	r4, r0, #32
    4184:	mov	r9, lr
    4186:	mov	r5, r0
    4188:	mov	lr, r1
    418a:	mov	r1, r3
    418c:	b.n	41ce <AudioSynthWavetable::update()+0x18a>
			s1 = signed_multiply_32x16b(mod_amp, s1);

			// iterate tone_phase, giving us our desired frequency playback, and apply the offset, giving us our pitch LFOs
			tone_phase += tone_incr + tone_incr_offset;
			// break if no loop and we've gone past the end of the sample
			if (s->LOOP == false && tone_phase >= s->MAX_PHASE) break;
    418e:	ldr.w	r0, [sl, #16]
    4192:	cmp	r8, r0
    4194:	bcs.n	4242 <AudioSynthWavetable::update()+0x1fe>
			// move phase back if a looped sample has overstepped its loop
			tone_phase = s->LOOP && tone_phase >= s->LOOP_PHASE_END ? tone_phase - s->LOOP_PHASE_LENGTH : tone_phase;

			//repeat as above
			index = tone_phase >> (32 - s->INDEX_BITS);
			tmp1 = *((uint32_t*)(s->sample + index));
    4196:	lsr.w	ip, r8, r4
			phase_scale = (tone_phase << s->INDEX_BITS) >> 16;
    419a:	lsl.w	r0, r8, r5
			// move phase back if a looped sample has overstepped its loop
			tone_phase = s->LOOP && tone_phase >= s->LOOP_PHASE_END ? tone_phase - s->LOOP_PHASE_LENGTH : tone_phase;

			//repeat as above
			index = tone_phase >> (32 - s->INDEX_BITS);
			tmp1 = *((uint32_t*)(s->sample + index));
    419e:	ldr.w	ip, [r6, ip, lsl #1]
			phase_scale = (tone_phase << s->INDEX_BITS) >> 16;
    41a2:	lsrs	r0, r0, #16
static inline int32_t signed_multiply_32x16t(int32_t a, uint32_t b) __attribute__((always_inline, unused));
static inline int32_t signed_multiply_32x16t(int32_t a, uint32_t b)
{
#if defined (__ARM_ARCH_7EM__)
	int32_t out;
	asm volatile("smulwt %0, %1, %2" : "=r" (out) : "r" (a), "r" (b));
    41a4:	smulwt	fp, r0, ip
// computes (sum + ((a[31:0] * b[15:0]) >> 16))
static inline int32_t signed_multiply_accumulate_32x16b(int32_t sum, int32_t a, uint32_t b) __attribute__((always_inline, unused));
static inline int32_t signed_multiply_accumulate_32x16b(int32_t sum, int32_t a, uint32_t b)
{
	int32_t out;
	asm volatile("smlawb %0, %2, %3, %1" : "=r" (out) : "r" (sum), "r" (a), "r" (b));
    41a8:	rsb	r0, r0, #65280	; 0xff00
    41ac:	adds	r0, #255	; 0xff
    41ae:	smlawb	ip, r0, ip, fp
static inline int32_t signed_multiply_32x16b(int32_t a, uint32_t b) __attribute__((always_inline, unused));
static inline int32_t signed_multiply_32x16b(int32_t a, uint32_t b)
{
#if defined (__ARM_ARCH_7EM__)
	int32_t out;
	asm volatile("smulwb %0, %1, %2" : "=r" (out) : "r" (a), "r" (b));
    41b2:	smulwb	ip, lr, ip
			s2 = signed_multiply_32x16t(phase_scale, tmp1);
			s2 = signed_multiply_accumulate_32x16b(s2, 0xFFFF - phase_scale, tmp1);
			s2 = signed_multiply_32x16b(mod_amp, s2);

			tone_phase += tone_incr + tone_incr_offset;
    41b6:	add	r8, r2
			if (s->LOOP == false && tone_phase >= s->MAX_PHASE) break;
    41b8:	cbnz	r1, 4226 <AudioSynthWavetable::update()+0x1e2>
    41ba:	ldr.w	r0, [sl, #16]
    41be:	cmp	r8, r0
    41c0:	bcs.n	4242 <AudioSynthWavetable::update()+0x1fe>
static inline uint32_t pack_16b_16b(int32_t a, int32_t b) __attribute__((always_inline, unused));
static inline uint32_t pack_16b_16b(int32_t a, int32_t b)
{
#if defined (__ARM_ARCH_7EM__)
	int32_t out;
	asm volatile("pkhbt %0, %1, %2, lsl #16" : "=r" (out) : "r" (b), "r" (a));
    41c2:	pkhbt	r3, r3, ip, lsl #16
			tone_phase = s->LOOP && tone_phase >= s->LOOP_PHASE_END ? tone_phase - s->LOOP_PHASE_LENGTH : tone_phase;

			// pack the two output samples into the audio_block
			*p = pack_16b_16b(s2, s1);
    41c6:	str.w	r3, [r7], #4
			mod_amp = signed_multiply_accumulate_32x16b(mod_amp, mod_scale, mod_amp);
		}

		// producing 2 output values per iteration; repeat more depending on the LFO_SMOOTHNESS
		// this segment linearly interpolates, calculates how far we step through the sample data, and scales amplitude
		for (int i = LFO_PERIOD / 2; i; --i, ++p) {
    41ca:	cmp	r7, r9
    41cc:	beq.n	4242 <AudioSynthWavetable::update()+0x1fe>
			// INDEX_BITS representing the higher order bits we use to index into the sample data
			index = tone_phase >> (32 - s->INDEX_BITS);
			// recast as uint32_t to load in packed variable; initially int16_t* since we may need to read accross a word boundry
			// note we are assuming a little-endian cpu (i.e. the first sample is loaded into the lower half-word)
			tmp1 = *((uint32_t*)(s->sample + index));
    41ce:	lsr.w	r3, r8, r4
			// phase_scale here being the next 16-bits after the first INDEX_BITS, representing the distince between the samples to interpolate at
			// 0x0000 gives us all of the first sample point, 0xFFFF all of the second, anything inbetween a sliding mix
			phase_scale = (tone_phase << s->INDEX_BITS) >> 16;
    41d2:	lsl.w	r0, r8, r5
		for (int i = LFO_PERIOD / 2; i; --i, ++p) {
			// INDEX_BITS representing the higher order bits we use to index into the sample data
			index = tone_phase >> (32 - s->INDEX_BITS);
			// recast as uint32_t to load in packed variable; initially int16_t* since we may need to read accross a word boundry
			// note we are assuming a little-endian cpu (i.e. the first sample is loaded into the lower half-word)
			tmp1 = *((uint32_t*)(s->sample + index));
    41d6:	ldr.w	r3, [r6, r3, lsl #1]
			// phase_scale here being the next 16-bits after the first INDEX_BITS, representing the distince between the samples to interpolate at
			// 0x0000 gives us all of the first sample point, 0xFFFF all of the second, anything inbetween a sliding mix
			phase_scale = (tone_phase << s->INDEX_BITS) >> 16;
    41da:	lsrs	r0, r0, #16
static inline int32_t signed_multiply_32x16t(int32_t a, uint32_t b) __attribute__((always_inline, unused));
static inline int32_t signed_multiply_32x16t(int32_t a, uint32_t b)
{
#if defined (__ARM_ARCH_7EM__)
	int32_t out;
	asm volatile("smulwt %0, %1, %2" : "=r" (out) : "r" (a), "r" (b));
    41dc:	smulwt	ip, r0, r3
// computes (sum + ((a[31:0] * b[15:0]) >> 16))
static inline int32_t signed_multiply_accumulate_32x16b(int32_t sum, int32_t a, uint32_t b) __attribute__((always_inline, unused));
static inline int32_t signed_multiply_accumulate_32x16b(int32_t sum, int32_t a, uint32_t b)
{
	int32_t out;
	asm volatile("smlawb %0, %2, %3, %1" : "=r" (out) : "r" (sum), "r" (a), "r" (b));
    41e0:	rsb	r0, r0, #65280	; 0xff00
    41e4:	adds	r0, #255	; 0xff
    41e6:	smlawb	r3, r0, r3, ip
static inline int32_t signed_multiply_32x16b(int32_t a, uint32_t b) __attribute__((always_inline, unused));
static inline int32_t signed_multiply_32x16b(int32_t a, uint32_t b)
{
#if defined (__ARM_ARCH_7EM__)
	int32_t out;
	asm volatile("smulwb %0, %1, %2" : "=r" (out) : "r" (a), "r" (b));
    41ea:	smulwb	r3, lr, r3
			s1 = signed_multiply_accumulate_32x16b(s1, 0xFFFF - phase_scale, tmp1);
			// apply amplitude scaling
			s1 = signed_multiply_32x16b(mod_amp, s1);

			// iterate tone_phase, giving us our desired frequency playback, and apply the offset, giving us our pitch LFOs
			tone_phase += tone_incr + tone_incr_offset;
    41ee:	add	r8, r2
			// break if no loop and we've gone past the end of the sample
			if (s->LOOP == false && tone_phase >= s->MAX_PHASE) break;
    41f0:	cmp	r1, #0
    41f2:	beq.n	418e <AudioSynthWavetable::update()+0x14a>
			// move phase back if a looped sample has overstepped its loop
			tone_phase = s->LOOP && tone_phase >= s->LOOP_PHASE_END ? tone_phase - s->LOOP_PHASE_LENGTH : tone_phase;
    41f4:	ldr.w	r0, [sl, #20]
    41f8:	cmp	r8, r0
    41fa:	itt	cs
    41fc:	ldrcs.w	r0, [sl, #24]
    4200:	rsbcs	r8, r0, r8
    4204:	b.n	4196 <AudioSynthWavetable::update()+0x152>
 *
 */
void AudioSynthWavetable::update(void) {
	// exit if nothing to do
	if (env_state == STATE_IDLE || (current_sample->LOOP == false && tone_phase >= current_sample->MAX_PHASE)) {
		env_state = STATE_IDLE;
    4206:	movs	r3, #0
    4208:	strb.w	r3, [r0, #46]	; 0x2e
    420c:	bx	lr
 * Further details on implementation included inline.
 *
 */
void AudioSynthWavetable::update(void) {
	// exit if nothing to do
	if (env_state == STATE_IDLE || (current_sample->LOOP == false && tone_phase >= current_sample->MAX_PHASE)) {
    420e:	ldr	r2, [r0, #36]	; 0x24
    4210:	ldr.w	r3, [sl, #16]
    4214:	cmp	r2, r3
    4216:	bcc.w	4062 <AudioSynthWavetable::update()+0x1e>
		env_state = STATE_IDLE;
    421a:	movs	r3, #0
    421c:	strb.w	r3, [r0, #46]	; 0x2e
		}
	}

	transmit(block);
	release(block);
}
    4220:	add	sp, #84	; 0x54
    4222:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
			s2 = signed_multiply_accumulate_32x16b(s2, 0xFFFF - phase_scale, tmp1);
			s2 = signed_multiply_32x16b(mod_amp, s2);

			tone_phase += tone_incr + tone_incr_offset;
			if (s->LOOP == false && tone_phase >= s->MAX_PHASE) break;
			tone_phase = s->LOOP && tone_phase >= s->LOOP_PHASE_END ? tone_phase - s->LOOP_PHASE_LENGTH : tone_phase;
    4226:	ldr.w	r0, [sl, #20]
    422a:	cmp	r8, r0
    422c:	itt	cs
    422e:	ldrcs.w	r0, [sl, #24]
    4232:	rsbcs	r8, r0, r8
static inline uint32_t pack_16b_16b(int32_t a, int32_t b) __attribute__((always_inline, unused));
static inline uint32_t pack_16b_16b(int32_t a, int32_t b)
{
#if defined (__ARM_ARCH_7EM__)
	int32_t out;
	asm volatile("pkhbt %0, %1, %2, lsl #16" : "=r" (out) : "r" (b), "r" (a));
    4236:	pkhbt	r3, r3, ip, lsl #16

			// pack the two output samples into the audio_block
			*p = pack_16b_16b(s2, s1);
    423a:	str.w	r3, [r7], #4
			mod_amp = signed_multiply_accumulate_32x16b(mod_amp, mod_scale, mod_amp);
		}

		// producing 2 output values per iteration; repeat more depending on the LFO_SMOOTHNESS
		// this segment linearly interpolates, calculates how far we step through the sample data, and scales amplitude
		for (int i = LFO_PERIOD / 2; i; --i, ++p) {
    423e:	cmp	r7, r9
    4240:	bne.n	41ce <AudioSynthWavetable::update()+0x18a>

	// also note that the vibrato/tremolo for the two LFO are defined in the SoundFont spec to be a cents (vibrato) or centibel (tremolo)
	// diviation oscillating with a triangle wave at a given frequency; the following implementation gets the critical points of those
	// oscillations correct, but linearly interpolates the *frequency* and *amplitude* range between those points, which technically results
	// in a "bowing" of the triangle wave curve relative to what it should be (although this typically isn't audible)
	while (p < end) {
    4242:	ldr	r3, [sp, #24]
    4244:	cmp	r3, r7
    4246:	mov	r9, r1
    4248:	bls.n	4276 <AudioSynthWavetable::update()+0x232>
			tone_incr_offset = multiply_accumulate_32x32_rshift32_rounded(tone_incr_offset, vib_scale, vib_pitch_offset);
		}

		// variable to hold an adjusted amplitude attenuation value; stays at tone_amp if modulation in delay
		int32_t mod_amp = tone_amp;
		if (mod_count++ > s->MODULATION_DELAY) {
    424a:	ldr	r4, [sp, #8]
		// TODO: more elegant support of non-looping samples
		if (s->LOOP == false && tone_phase >= s->MAX_PHASE) break;

		// variable to accumulate LFO pitch offsets; stays 0 if still in vibrato/modulation delay
		int32_t tone_incr_offset = 0; 
		if (vib_count++ > s->VIBRATO_DELAY) {
    424c:	ldr	r5, [sp, #4]
    424e:	b.n	40da <AudioSynthWavetable::update()+0x96>
	while (p < end) {
		// TODO: more elegant support of non-looping samples
		if (s->LOOP == false && tone_phase >= s->MAX_PHASE) break;

		// variable to accumulate LFO pitch offsets; stays 0 if still in vibrato/modulation delay
		int32_t tone_incr_offset = 0; 
    4250:	movs	r2, #0
    4252:	b.n	4124 <AudioSynthWavetable::update()+0xe0>
			// pack the two output samples into the audio_block
			*p = pack_16b_16b(s2, s1);
		}
	}
	// fill with 0s if non-looping sample that ended prematurely
	if (p < end) {
    4254:	ldr	r3, [sp, #24]
    4256:	cmp	r3, r7
    4258:	mov	r2, r7
    425a:	mov	ip, r9
    425c:	bls.w	4932 <AudioSynthWavetable::update()+0x8ee>
		env_state = STATE_IDLE;
		env_count = 0;
		while (p < end) *p++ = 0;
    4260:	ldr	r1, [sp, #24]
    4262:	mov	r3, ip
    4264:	str.w	r3, [r2], #4
    4268:	cmp	r1, r2
    426a:	bhi.n	4264 <AudioSynthWavetable::update()+0x220>
		}
	}
	// fill with 0s if non-looping sample that ended prematurely
	if (p < end) {
		env_state = STATE_IDLE;
		env_count = 0;
    426c:	movs	r3, #0
    426e:	str	r3, [sp, #56]	; 0x38
		while (p < end) *p++ = 0;
    4270:	str	r4, [sp, #8]
    4272:	str	r5, [sp, #4]
			*p = pack_16b_16b(s2, s1);
		}
	}
	// fill with 0s if non-looping sample that ended prematurely
	if (p < end) {
		env_state = STATE_IDLE;
    4274:	str	r3, [sp, #52]	; 0x34
			env_count = s->ATTACK_COUNT;
			env_incr = UNITY_GAIN / (env_count * ENVELOPE_PERIOD);
			PRINT_ENV(STATE_ATTACK);
			continue;
		case STATE_ATTACK:
			env_mult = UNITY_GAIN;
    4276:	str.w	r8, [sp, #12]
    427a:	mvn.w	lr, #2147483648	; 0x80000000
    427e:	str.w	sl, [sp, #28]
    4282:	ldr.w	fp, [sp, #24]
    4286:	ldr	r3, [sp, #76]	; 0x4c
    4288:	ldr.w	r8, [sp, #64]	; 0x40
    428c:	ldr.w	r9, [sp, #56]	; 0x38
    4290:	ldr	r2, [sp, #60]	; 0x3c
    4292:	b.n	430a <AudioSynthWavetable::update()+0x2c6>
    4294:	add.w	ip, r8, r2
    4298:	add.w	r4, ip, r2
    429c:	adds	r7, r4, r2
    429e:	adds	r0, r7, r2
    42a0:	adds	r6, r0, r2
    42a2:	adds	r1, r6, r2
    42a4:	adds	r5, r1, r2
    42a6:	add.w	r9, r9, #4294967295
    42aa:	add.w	r8, r5, r2
			continue;
		}

		env_mult += env_incr;
		// env_mult is INT32_MAX at max (i.e. 31-bits), so shift << 1 so result is aligned with high halfword of tmp1/tmp2
		tmp1 = signed_multiply_32x16b(env_mult, p[0]) << 1;
    42ae:	ldr.w	sl, [r3]
static inline int32_t signed_multiply_32x16b(int32_t a, uint32_t b) __attribute__((always_inline, unused));
static inline int32_t signed_multiply_32x16b(int32_t a, uint32_t b)
{
#if defined (__ARM_ARCH_7EM__)
	int32_t out;
	asm volatile("smulwb %0, %1, %2" : "=r" (out) : "r" (a), "r" (b));
    42b2:	smulwb	ip, ip, sl
static inline int32_t signed_multiply_32x16t(int32_t a, uint32_t b) __attribute__((always_inline, unused));
static inline int32_t signed_multiply_32x16t(int32_t a, uint32_t b)
{
#if defined (__ARM_ARCH_7EM__)
	int32_t out;
	asm volatile("smulwt %0, %1, %2" : "=r" (out) : "r" (a), "r" (b));
    42b6:	smulwt	r4, r4, sl
static inline uint32_t pack_16t_16t(int32_t a, int32_t b) __attribute__((always_inline, unused));
static inline uint32_t pack_16t_16t(int32_t a, int32_t b)
{
#if defined (__ARM_ARCH_7EM__)
	int32_t out;
	asm volatile("pkhtb %0, %1, %2, asr #16" : "=r" (out) : "r" (a), "r" (b));
    42ba:	lsls	r4, r4, #1
    42bc:	mov.w	ip, ip, lsl #1
    42c0:	pkhtb	r4, r4, ip, asr #16
		env_mult += env_incr;
		tmp2 = signed_multiply_32x16t(env_mult, p[0]) << 1;
		// pack from high halfword of tmp1, tmp2
		p[0] = pack_16t_16t(tmp2, tmp1);
    42c4:	str	r4, [r3, #0]
		env_mult += env_incr;
		tmp1 = signed_multiply_32x16b(env_mult, p[1]) << 1;
    42c6:	ldr	r4, [r3, #4]
static inline int32_t signed_multiply_32x16b(int32_t a, uint32_t b) __attribute__((always_inline, unused));
static inline int32_t signed_multiply_32x16b(int32_t a, uint32_t b)
{
#if defined (__ARM_ARCH_7EM__)
	int32_t out;
	asm volatile("smulwb %0, %1, %2" : "=r" (out) : "r" (a), "r" (b));
    42c8:	smulwb	r7, r7, r4
static inline int32_t signed_multiply_32x16t(int32_t a, uint32_t b) __attribute__((always_inline, unused));
static inline int32_t signed_multiply_32x16t(int32_t a, uint32_t b)
{
#if defined (__ARM_ARCH_7EM__)
	int32_t out;
	asm volatile("smulwt %0, %1, %2" : "=r" (out) : "r" (a), "r" (b));
    42cc:	smulwt	r0, r0, r4
static inline uint32_t pack_16t_16t(int32_t a, int32_t b) __attribute__((always_inline, unused));
static inline uint32_t pack_16t_16t(int32_t a, int32_t b)
{
#if defined (__ARM_ARCH_7EM__)
	int32_t out;
	asm volatile("pkhtb %0, %1, %2, asr #16" : "=r" (out) : "r" (a), "r" (b));
    42d0:	lsls	r0, r0, #1
    42d2:	lsls	r7, r7, #1
    42d4:	pkhtb	r7, r0, r7, asr #16
		env_mult += env_incr;
		tmp2 = signed_multiply_32x16t(env_mult, p[1]) << 1;
		p[1] = pack_16t_16t(tmp2, tmp1);
    42d8:	str	r7, [r3, #4]
		env_mult += env_incr;
		tmp1 = signed_multiply_32x16b(env_mult, p[2]) << 1;
    42da:	ldr	r0, [r3, #8]
static inline int32_t signed_multiply_32x16b(int32_t a, uint32_t b) __attribute__((always_inline, unused));
static inline int32_t signed_multiply_32x16b(int32_t a, uint32_t b)
{
#if defined (__ARM_ARCH_7EM__)
	int32_t out;
	asm volatile("smulwb %0, %1, %2" : "=r" (out) : "r" (a), "r" (b));
    42dc:	smulwb	r6, r6, r0
static inline int32_t signed_multiply_32x16t(int32_t a, uint32_t b) __attribute__((always_inline, unused));
static inline int32_t signed_multiply_32x16t(int32_t a, uint32_t b)
{
#if defined (__ARM_ARCH_7EM__)
	int32_t out;
	asm volatile("smulwt %0, %1, %2" : "=r" (out) : "r" (a), "r" (b));
    42e0:	smulwt	r1, r1, r0
static inline uint32_t pack_16t_16t(int32_t a, int32_t b) __attribute__((always_inline, unused));
static inline uint32_t pack_16t_16t(int32_t a, int32_t b)
{
#if defined (__ARM_ARCH_7EM__)
	int32_t out;
	asm volatile("pkhtb %0, %1, %2, asr #16" : "=r" (out) : "r" (a), "r" (b));
    42e4:	lsls	r1, r1, #1
    42e6:	lsls	r6, r6, #1
    42e8:	pkhtb	r1, r1, r6, asr #16
		env_mult += env_incr;
		tmp2 = signed_multiply_32x16t(env_mult, p[2]) << 1;
		p[2] = pack_16t_16t(tmp2, tmp1);
    42ec:	str	r1, [r3, #8]
		env_mult += env_incr;
		tmp1 = signed_multiply_32x16b(env_mult, p[3]) << 1;
    42ee:	ldr	r1, [r3, #12]
static inline int32_t signed_multiply_32x16b(int32_t a, uint32_t b) __attribute__((always_inline, unused));
static inline int32_t signed_multiply_32x16b(int32_t a, uint32_t b)
{
#if defined (__ARM_ARCH_7EM__)
	int32_t out;
	asm volatile("smulwb %0, %1, %2" : "=r" (out) : "r" (a), "r" (b));
    42f0:	smulwb	r5, r5, r1
static inline int32_t signed_multiply_32x16t(int32_t a, uint32_t b) __attribute__((always_inline, unused));
static inline int32_t signed_multiply_32x16t(int32_t a, uint32_t b)
{
#if defined (__ARM_ARCH_7EM__)
	int32_t out;
	asm volatile("smulwt %0, %1, %2" : "=r" (out) : "r" (a), "r" (b));
    42f4:	smulwt	r1, r8, r1
static inline uint32_t pack_16t_16t(int32_t a, int32_t b) __attribute__((always_inline, unused));
static inline uint32_t pack_16t_16t(int32_t a, int32_t b)
{
#if defined (__ARM_ARCH_7EM__)
	int32_t out;
	asm volatile("pkhtb %0, %1, %2, asr #16" : "=r" (out) : "r" (a), "r" (b));
    42f8:	lsls	r1, r1, #1
    42fa:	lsls	r5, r5, #1
    42fc:	pkhtb	r1, r1, r5, asr #16
		env_mult += env_incr;
		tmp2 = signed_multiply_32x16t(env_mult, p[3]) << 1;
		p[3] = pack_16t_16t(tmp2, tmp1);
    4300:	str	r1, [r3, #12]

		p += ENVELOPE_PERIOD / 2;
    4302:	adds	r3, #16
	// to centibels. Practically this means the decay and release happen too slowing intially, and too quick
	// near the end

	// other points of note are that one env_count corresponds to 1 second * ENVELOPE_PERIOD / AUDIO_SAMPLE_RATE_EXACT;
	// the ENVELOPE_PERIOD is the number of samples processed per iteration of the following loop
	while (p < end) {
    4304:	cmp	fp, r3
    4306:	bls.w	4876 <AudioSynthWavetable::update()+0x832>
		// note env_count == 0 is used as a trigger for state transition
		if (env_count <= 0) switch (env_state) {
    430a:	cmp.w	r9, #0
    430e:	bgt.n	4294 <AudioSynthWavetable::update()+0x250>
    4310:	ldr	r1, [sp, #52]	; 0x34
    4312:	subs	r1, #1
    4314:	cmp	r1, #5
    4316:	bhi.w	4876 <AudioSynthWavetable::update()+0x832>
    431a:	tbh	[pc, r1, lsl #1]
    431e:	.short	0x0006
    4320:	.word	0x016601f8
    4324:	.word	0x00d70154
    4328:	.short	0x0096
		case STATE_DELAY:
			env_state = STATE_ATTACK;
			env_count = s->ATTACK_COUNT;
    432a:	ldr	r2, [sp, #28]
    432c:	ldr.w	r9, [r2, #36]	; 0x24
	// to centibels. Practically this means the decay and release happen too slowing intially, and too quick
	// near the end

	// other points of note are that one env_count corresponds to 1 second * ENVELOPE_PERIOD / AUDIO_SAMPLE_RATE_EXACT;
	// the ENVELOPE_PERIOD is the number of samples processed per iteration of the following loop
	while (p < end) {
    4330:	cmp	fp, r3
		// note env_count == 0 is used as a trigger for state transition
		if (env_count <= 0) switch (env_state) {
		case STATE_DELAY:
			env_state = STATE_ATTACK;
			env_count = s->ATTACK_COUNT;
			env_incr = UNITY_GAIN / (env_count * ENVELOPE_PERIOD);
    4332:	mov.w	r2, r9, lsl #3
    4336:	sdiv	r2, lr, r2
	// to centibels. Practically this means the decay and release happen too slowing intially, and too quick
	// near the end

	// other points of note are that one env_count corresponds to 1 second * ENVELOPE_PERIOD / AUDIO_SAMPLE_RATE_EXACT;
	// the ENVELOPE_PERIOD is the number of samples processed per iteration of the following loop
	while (p < end) {
    433a:	bls.w	4848 <AudioSynthWavetable::update()+0x804>
		// note env_count == 0 is used as a trigger for state transition
		if (env_count <= 0) switch (env_state) {
    433e:	cmp.w	r9, #0
    4342:	ble.w	4840 <AudioSynthWavetable::update()+0x7fc>
    4346:	add.w	r5, r2, r8
    434a:	adds	r0, r5, r2
    434c:	adds	r4, r2, r0
    434e:	adds	r1, r2, r4
    4350:	add.w	ip, r2, r1
    4354:	add.w	sl, r2, ip
    4358:	add.w	r7, r2, sl
    435c:	str	r1, [sp, #32]
    435e:	add.w	r8, r2, r7
    4362:	add.w	r6, r9, #4294967295
static inline int32_t signed_multiply_32x16b(int32_t a, uint32_t b) __attribute__((always_inline, unused));
static inline int32_t signed_multiply_32x16b(int32_t a, uint32_t b)
{
#if defined (__ARM_ARCH_7EM__)
	int32_t out;
	asm volatile("smulwb %0, %1, %2" : "=r" (out) : "r" (a), "r" (b));
    4366:	ldr	r1, [r3, #0]
    4368:	smulwb	r5, r5, r1
static inline int32_t signed_multiply_32x16t(int32_t a, uint32_t b) __attribute__((always_inline, unused));
static inline int32_t signed_multiply_32x16t(int32_t a, uint32_t b)
{
#if defined (__ARM_ARCH_7EM__)
	int32_t out;
	asm volatile("smulwt %0, %1, %2" : "=r" (out) : "r" (a), "r" (b));
    436c:	smulwt	r0, r0, r1
static inline uint32_t pack_16t_16t(int32_t a, int32_t b) __attribute__((always_inline, unused));
static inline uint32_t pack_16t_16t(int32_t a, int32_t b)
{
#if defined (__ARM_ARCH_7EM__)
	int32_t out;
	asm volatile("pkhtb %0, %1, %2, asr #16" : "=r" (out) : "r" (a), "r" (b));
    4370:	lsls	r0, r0, #1
    4372:	lsls	r5, r5, #1
    4374:	pkhtb	r5, r0, r5, asr #16
		// env_mult is INT32_MAX at max (i.e. 31-bits), so shift << 1 so result is aligned with high halfword of tmp1/tmp2
		tmp1 = signed_multiply_32x16b(env_mult, p[0]) << 1;
		env_mult += env_incr;
		tmp2 = signed_multiply_32x16t(env_mult, p[0]) << 1;
		// pack from high halfword of tmp1, tmp2
		p[0] = pack_16t_16t(tmp2, tmp1);
    4378:	str	r5, [r3, #0]
		env_mult += env_incr;
		tmp1 = signed_multiply_32x16b(env_mult, p[1]) << 1;
    437a:	ldr	r0, [r3, #4]
static inline int32_t signed_multiply_32x16b(int32_t a, uint32_t b) __attribute__((always_inline, unused));
static inline int32_t signed_multiply_32x16b(int32_t a, uint32_t b)
{
#if defined (__ARM_ARCH_7EM__)
	int32_t out;
	asm volatile("smulwb %0, %1, %2" : "=r" (out) : "r" (a), "r" (b));
    437c:	smulwb	r4, r4, r0
static inline int32_t signed_multiply_32x16t(int32_t a, uint32_t b) __attribute__((always_inline, unused));
static inline int32_t signed_multiply_32x16t(int32_t a, uint32_t b)
{
#if defined (__ARM_ARCH_7EM__)
	int32_t out;
	asm volatile("smulwt %0, %1, %2" : "=r" (out) : "r" (a), "r" (b));
    4380:	ldr	r1, [sp, #32]
    4382:	smulwt	r1, r1, r0
static inline uint32_t pack_16t_16t(int32_t a, int32_t b) __attribute__((always_inline, unused));
static inline uint32_t pack_16t_16t(int32_t a, int32_t b)
{
#if defined (__ARM_ARCH_7EM__)
	int32_t out;
	asm volatile("pkhtb %0, %1, %2, asr #16" : "=r" (out) : "r" (a), "r" (b));
    4386:	lsls	r1, r1, #1
    4388:	lsls	r4, r4, #1
    438a:	pkhtb	r1, r1, r4, asr #16
		env_mult += env_incr;
		tmp2 = signed_multiply_32x16t(env_mult, p[1]) << 1;
		p[1] = pack_16t_16t(tmp2, tmp1);
    438e:	str	r1, [r3, #4]
		env_mult += env_incr;
		tmp1 = signed_multiply_32x16b(env_mult, p[2]) << 1;
    4390:	ldr	r1, [r3, #8]
static inline int32_t signed_multiply_32x16b(int32_t a, uint32_t b) __attribute__((always_inline, unused));
static inline int32_t signed_multiply_32x16b(int32_t a, uint32_t b)
{
#if defined (__ARM_ARCH_7EM__)
	int32_t out;
	asm volatile("smulwb %0, %1, %2" : "=r" (out) : "r" (a), "r" (b));
    4392:	smulwb	r0, ip, r1
static inline int32_t signed_multiply_32x16t(int32_t a, uint32_t b) __attribute__((always_inline, unused));
static inline int32_t signed_multiply_32x16t(int32_t a, uint32_t b)
{
#if defined (__ARM_ARCH_7EM__)
	int32_t out;
	asm volatile("smulwt %0, %1, %2" : "=r" (out) : "r" (a), "r" (b));
    4396:	smulwt	r1, sl, r1
static inline uint32_t pack_16t_16t(int32_t a, int32_t b) __attribute__((always_inline, unused));
static inline uint32_t pack_16t_16t(int32_t a, int32_t b)
{
#if defined (__ARM_ARCH_7EM__)
	int32_t out;
	asm volatile("pkhtb %0, %1, %2, asr #16" : "=r" (out) : "r" (a), "r" (b));
    439a:	lsls	r1, r1, #1
    439c:	lsls	r0, r0, #1
    439e:	pkhtb	r1, r1, r0, asr #16
		env_mult += env_incr;
		tmp2 = signed_multiply_32x16t(env_mult, p[2]) << 1;
		p[2] = pack_16t_16t(tmp2, tmp1);
    43a2:	str	r1, [r3, #8]
		env_mult += env_incr;
		tmp1 = signed_multiply_32x16b(env_mult, p[3]) << 1;
    43a4:	ldr	r1, [r3, #12]
static inline int32_t signed_multiply_32x16b(int32_t a, uint32_t b) __attribute__((always_inline, unused));
static inline int32_t signed_multiply_32x16b(int32_t a, uint32_t b)
{
#if defined (__ARM_ARCH_7EM__)
	int32_t out;
	asm volatile("smulwb %0, %1, %2" : "=r" (out) : "r" (a), "r" (b));
    43a6:	smulwb	r0, r7, r1
static inline int32_t signed_multiply_32x16t(int32_t a, uint32_t b) __attribute__((always_inline, unused));
static inline int32_t signed_multiply_32x16t(int32_t a, uint32_t b)
{
#if defined (__ARM_ARCH_7EM__)
	int32_t out;
	asm volatile("smulwt %0, %1, %2" : "=r" (out) : "r" (a), "r" (b));
    43aa:	smulwt	r1, r8, r1
static inline uint32_t pack_16t_16t(int32_t a, int32_t b) __attribute__((always_inline, unused));
static inline uint32_t pack_16t_16t(int32_t a, int32_t b)
{
#if defined (__ARM_ARCH_7EM__)
	int32_t out;
	asm volatile("pkhtb %0, %1, %2, asr #16" : "=r" (out) : "r" (a), "r" (b));
    43ae:	lsls	r1, r1, #1
    43b0:	lsls	r0, r0, #1
    43b2:	pkhtb	r1, r1, r0, asr #16
		env_mult += env_incr;
		tmp2 = signed_multiply_32x16t(env_mult, p[3]) << 1;
		p[3] = pack_16t_16t(tmp2, tmp1);

		p += ENVELOPE_PERIOD / 2;
    43b6:	add.w	r0, r3, #16
	// to centibels. Practically this means the decay and release happen too slowing intially, and too quick
	// near the end

	// other points of note are that one env_count corresponds to 1 second * ENVELOPE_PERIOD / AUDIO_SAMPLE_RATE_EXACT;
	// the ENVELOPE_PERIOD is the number of samples processed per iteration of the following loop
	while (p < end) {
    43ba:	cmp	fp, r0
		p[2] = pack_16t_16t(tmp2, tmp1);
		env_mult += env_incr;
		tmp1 = signed_multiply_32x16b(env_mult, p[3]) << 1;
		env_mult += env_incr;
		tmp2 = signed_multiply_32x16t(env_mult, p[3]) << 1;
		p[3] = pack_16t_16t(tmp2, tmp1);
    43bc:	str	r1, [r3, #12]
	// to centibels. Practically this means the decay and release happen too slowing intially, and too quick
	// near the end

	// other points of note are that one env_count corresponds to 1 second * ENVELOPE_PERIOD / AUDIO_SAMPLE_RATE_EXACT;
	// the ENVELOPE_PERIOD is the number of samples processed per iteration of the following loop
	while (p < end) {
    43be:	bls.w	48c4 <AudioSynthWavetable::update()+0x880>
		// note env_count == 0 is used as a trigger for state transition
		if (env_count <= 0) switch (env_state) {
    43c2:	cmp	r6, #0
    43c4:	beq.w	470c <AudioSynthWavetable::update()+0x6c8>
    43c8:	add.w	r6, r2, r8
    43cc:	adds	r0, r2, r6
    43ce:	adds	r5, r2, r0
    43d0:	adds	r1, r2, r5
    43d2:	adds	r4, r2, r1
    43d4:	add.w	ip, r2, r4
    43d8:	add.w	sl, r2, ip
    43dc:	sub.w	r9, r9, #2
    43e0:	add.w	r8, r2, sl
			continue;
		}

		env_mult += env_incr;
		// env_mult is INT32_MAX at max (i.e. 31-bits), so shift << 1 so result is aligned with high halfword of tmp1/tmp2
		tmp1 = signed_multiply_32x16b(env_mult, p[0]) << 1;
    43e4:	ldr	r7, [r3, #16]
static inline int32_t signed_multiply_32x16b(int32_t a, uint32_t b) __attribute__((always_inline, unused));
static inline int32_t signed_multiply_32x16b(int32_t a, uint32_t b)
{
#if defined (__ARM_ARCH_7EM__)
	int32_t out;
	asm volatile("smulwb %0, %1, %2" : "=r" (out) : "r" (a), "r" (b));
    43e6:	smulwb	r6, r6, r7
static inline int32_t signed_multiply_32x16t(int32_t a, uint32_t b) __attribute__((always_inline, unused));
static inline int32_t signed_multiply_32x16t(int32_t a, uint32_t b)
{
#if defined (__ARM_ARCH_7EM__)
	int32_t out;
	asm volatile("smulwt %0, %1, %2" : "=r" (out) : "r" (a), "r" (b));
    43ea:	smulwt	r0, r0, r7
static inline uint32_t pack_16t_16t(int32_t a, int32_t b) __attribute__((always_inline, unused));
static inline uint32_t pack_16t_16t(int32_t a, int32_t b)
{
#if defined (__ARM_ARCH_7EM__)
	int32_t out;
	asm volatile("pkhtb %0, %1, %2, asr #16" : "=r" (out) : "r" (a), "r" (b));
    43ee:	lsls	r0, r0, #1
    43f0:	lsls	r6, r6, #1
    43f2:	pkhtb	r6, r0, r6, asr #16
		env_mult += env_incr;
		tmp2 = signed_multiply_32x16t(env_mult, p[0]) << 1;
		// pack from high halfword of tmp1, tmp2
		p[0] = pack_16t_16t(tmp2, tmp1);
    43f6:	str	r6, [r3, #16]
		env_mult += env_incr;
		tmp1 = signed_multiply_32x16b(env_mult, p[1]) << 1;
    43f8:	ldr	r0, [r3, #20]
static inline int32_t signed_multiply_32x16b(int32_t a, uint32_t b) __attribute__((always_inline, unused));
static inline int32_t signed_multiply_32x16b(int32_t a, uint32_t b)
{
#if defined (__ARM_ARCH_7EM__)
	int32_t out;
	asm volatile("smulwb %0, %1, %2" : "=r" (out) : "r" (a), "r" (b));
    43fa:	smulwb	r5, r5, r0
static inline int32_t signed_multiply_32x16t(int32_t a, uint32_t b) __attribute__((always_inline, unused));
static inline int32_t signed_multiply_32x16t(int32_t a, uint32_t b)
{
#if defined (__ARM_ARCH_7EM__)
	int32_t out;
	asm volatile("smulwt %0, %1, %2" : "=r" (out) : "r" (a), "r" (b));
    43fe:	smulwt	r1, r1, r0
static inline uint32_t pack_16t_16t(int32_t a, int32_t b) __attribute__((always_inline, unused));
static inline uint32_t pack_16t_16t(int32_t a, int32_t b)
{
#if defined (__ARM_ARCH_7EM__)
	int32_t out;
	asm volatile("pkhtb %0, %1, %2, asr #16" : "=r" (out) : "r" (a), "r" (b));
    4402:	lsls	r1, r1, #1
    4404:	lsls	r5, r5, #1
    4406:	pkhtb	r1, r1, r5, asr #16
		env_mult += env_incr;
		tmp2 = signed_multiply_32x16t(env_mult, p[1]) << 1;
		p[1] = pack_16t_16t(tmp2, tmp1);
    440a:	str	r1, [r3, #20]
		env_mult += env_incr;
		tmp1 = signed_multiply_32x16b(env_mult, p[2]) << 1;
    440c:	ldr	r1, [r3, #24]
static inline int32_t signed_multiply_32x16b(int32_t a, uint32_t b) __attribute__((always_inline, unused));
static inline int32_t signed_multiply_32x16b(int32_t a, uint32_t b)
{
#if defined (__ARM_ARCH_7EM__)
	int32_t out;
	asm volatile("smulwb %0, %1, %2" : "=r" (out) : "r" (a), "r" (b));
    440e:	smulwb	r0, r4, r1
static inline int32_t signed_multiply_32x16t(int32_t a, uint32_t b) __attribute__((always_inline, unused));
static inline int32_t signed_multiply_32x16t(int32_t a, uint32_t b)
{
#if defined (__ARM_ARCH_7EM__)
	int32_t out;
	asm volatile("smulwt %0, %1, %2" : "=r" (out) : "r" (a), "r" (b));
    4412:	smulwt	r1, ip, r1
static inline uint32_t pack_16t_16t(int32_t a, int32_t b) __attribute__((always_inline, unused));
static inline uint32_t pack_16t_16t(int32_t a, int32_t b)
{
#if defined (__ARM_ARCH_7EM__)
	int32_t out;
	asm volatile("pkhtb %0, %1, %2, asr #16" : "=r" (out) : "r" (a), "r" (b));
    4416:	lsls	r1, r1, #1
    4418:	lsls	r0, r0, #1
    441a:	pkhtb	r1, r1, r0, asr #16
		env_mult += env_incr;
		tmp2 = signed_multiply_32x16t(env_mult, p[2]) << 1;
		p[2] = pack_16t_16t(tmp2, tmp1);
    441e:	str	r1, [r3, #24]
		env_mult += env_incr;
		tmp1 = signed_multiply_32x16b(env_mult, p[3]) << 1;
    4420:	ldr	r1, [r3, #28]
static inline int32_t signed_multiply_32x16b(int32_t a, uint32_t b) __attribute__((always_inline, unused));
static inline int32_t signed_multiply_32x16b(int32_t a, uint32_t b)
{
#if defined (__ARM_ARCH_7EM__)
	int32_t out;
	asm volatile("smulwb %0, %1, %2" : "=r" (out) : "r" (a), "r" (b));
    4422:	smulwb	r0, sl, r1
static inline int32_t signed_multiply_32x16t(int32_t a, uint32_t b) __attribute__((always_inline, unused));
static inline int32_t signed_multiply_32x16t(int32_t a, uint32_t b)
{
#if defined (__ARM_ARCH_7EM__)
	int32_t out;
	asm volatile("smulwt %0, %1, %2" : "=r" (out) : "r" (a), "r" (b));
    4426:	smulwt	r1, r8, r1
static inline uint32_t pack_16t_16t(int32_t a, int32_t b) __attribute__((always_inline, unused));
static inline uint32_t pack_16t_16t(int32_t a, int32_t b)
{
#if defined (__ARM_ARCH_7EM__)
	int32_t out;
	asm volatile("pkhtb %0, %1, %2, asr #16" : "=r" (out) : "r" (a), "r" (b));
    442a:	lsls	r1, r1, #1
    442c:	lsls	r0, r0, #1
    442e:	pkhtb	r1, r1, r0, asr #16
		env_mult += env_incr;
		tmp2 = signed_multiply_32x16t(env_mult, p[3]) << 1;
		p[3] = pack_16t_16t(tmp2, tmp1);
    4432:	str	r1, [r3, #28]

		p += ENVELOPE_PERIOD / 2;
    4434:	adds	r3, #32
	// to centibels. Practically this means the decay and release happen too slowing intially, and too quick
	// near the end

	// other points of note are that one env_count corresponds to 1 second * ENVELOPE_PERIOD / AUDIO_SAMPLE_RATE_EXACT;
	// the ENVELOPE_PERIOD is the number of samples processed per iteration of the following loop
	while (p < end) {
    4436:	cmp	fp, r3
    4438:	bls.w	4848 <AudioSynthWavetable::update()+0x804>
		// note env_count == 0 is used as a trigger for state transition
		if (env_count <= 0) switch (env_state) {
    443c:	cmp.w	r9, #0
    4440:	ble.w	470e <AudioSynthWavetable::update()+0x6ca>
		case STATE_DELAY:
			env_state = STATE_ATTACK;
    4444:	movs	r1, #2
    4446:	str	r1, [sp, #52]	; 0x34
    4448:	b.n	4294 <AudioSynthWavetable::update()+0x250>
    444a:	str	r2, [sp, #60]	; 0x3c
			env_count = INT32_MAX;
			PRINT_ENV(STATE_SUSTAIN);
			continue;
		case STATE_RELEASE:
			env_state = STATE_IDLE;
			for (; p < end; ++p) *p = 0;
    444c:	ldr	r2, [sp, #24]
    444e:	str.w	r8, [sp, #64]	; 0x40
    4452:	cmp	r2, r3
    4454:	str	r3, [sp, #76]	; 0x4c
    4456:	ldr.w	r8, [sp, #12]
    445a:	str.w	r9, [sp, #56]	; 0x38
    445e:	bls.n	446e <AudioSynthWavetable::update()+0x42a>
    4460:	ldr	r1, [sp, #24]
    4462:	ldr	r2, [sp, #76]	; 0x4c
    4464:	movs	r3, #0
    4466:	str.w	r3, [r2], #4
    446a:	cmp	r1, r2
    446c:	bhi.n	4466 <AudioSynthWavetable::update()+0x422>
		case STATE_SUSTAIN:
			env_count = INT32_MAX;
			PRINT_ENV(STATE_SUSTAIN);
			continue;
		case STATE_RELEASE:
			env_state = STATE_IDLE;
    446e:	movs	r3, #0
    4470:	str	r3, [sp, #52]	; 0x34
		p += ENVELOPE_PERIOD / 2;
		env_count--;
	}

	// copy state back, unless there was a state change
	if (this->state_change == false) {
    4472:	ldr	r2, [sp, #68]	; 0x44
    4474:	ldrb	r3, [r2, #24]
    4476:	cbnz	r3, 44b4 <AudioSynthWavetable::update()+0x470>
		this->tone_phase = tone_phase;
		this->env_state = env_state;
    4478:	ldrb.w	r1, [sp, #52]	; 0x34
		env_count--;
	}

	// copy state back, unless there was a state change
	if (this->state_change == false) {
		this->tone_phase = tone_phase;
    447c:	str.w	r8, [r2, #36]	; 0x24
		this->env_state = env_state;
    4480:	strb.w	r1, [r2, #46]	; 0x2e
		this->env_count = env_count;
    4484:	ldr	r1, [sp, #56]	; 0x38
    4486:	str	r1, [r2, #48]	; 0x30
		this->env_mult = env_mult;
    4488:	ldr	r1, [sp, #64]	; 0x40
    448a:	str	r1, [r2, #52]	; 0x34
		this->env_incr = env_incr;
    448c:	ldr	r1, [sp, #60]	; 0x3c
    448e:	str	r1, [r2, #56]	; 0x38
		if (this->env_state != STATE_IDLE) {
    4490:	ldrb.w	r3, [r2, #46]	; 0x2e
    4494:	mov	r1, r2
    4496:	and.w	r2, r3, #255	; 0xff
    449a:	cmp	r3, #0
    449c:	beq.w	47f6 <AudioSynthWavetable::update()+0x7b2>
			this->vib_count = vib_count;
    44a0:	mov	r3, r1
    44a2:	mov	r2, r1
    44a4:	ldr	r1, [sp, #4]
    44a6:	str	r1, [r3, #60]	; 0x3c
			this->vib_phase = vib_phase;
    44a8:	ldr	r1, [sp, #16]
    44aa:	str	r1, [r3, #64]	; 0x40
			this->mod_count = mod_count;
    44ac:	ldr	r1, [sp, #8]
    44ae:	str	r1, [r3, #76]	; 0x4c
			this->mod_phase = mod_phase;
    44b0:	ldr	r3, [sp, #20]
    44b2:	str	r3, [r2, #80]	; 0x50
			this->vib_count = this->mod_count = 0;
			this->vib_phase = this->mod_phase = TRIANGLE_INITIAL_PHASE;
		}
	}

	transmit(block);
    44b4:	ldr	r4, [sp, #72]	; 0x48
    44b6:	ldr	r0, [sp, #68]	; 0x44
    44b8:	movs	r2, #0
    44ba:	mov	r1, r4
    44bc:	bl	96b8 <AudioStream::transmit(audio_block_struct*, unsigned char)>
	release(block);
    44c0:	mov	r0, r4
}
    44c2:	add	sp, #84	; 0x54
    44c4:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
			this->vib_phase = this->mod_phase = TRIANGLE_INITIAL_PHASE;
		}
	}

	transmit(block);
	release(block);
    44c8:	b.w	9664 <AudioStream::release(audio_block_struct*)>
	// to centibels. Practically this means the decay and release happen too slowing intially, and too quick
	// near the end

	// other points of note are that one env_count corresponds to 1 second * ENVELOPE_PERIOD / AUDIO_SAMPLE_RATE_EXACT;
	// the ENVELOPE_PERIOD is the number of samples processed per iteration of the following loop
	while (p < end) {
    44cc:	cmp	fp, r3
    44ce:	bls.w	4886 <AudioSynthWavetable::update()+0x842>
    44d2:	add.w	ip, r8, r2
    44d6:	add.w	r4, ip, r2
    44da:	adds	r7, r4, r2
    44dc:	adds	r0, r7, r2
    44de:	adds	r6, r0, r2
    44e0:	adds	r1, r6, r2
    44e2:	adds	r5, r1, r2
    44e4:	add.w	r8, r5, r2
			continue;
		}

		env_mult += env_incr;
		// env_mult is INT32_MAX at max (i.e. 31-bits), so shift << 1 so result is aligned with high halfword of tmp1/tmp2
		tmp1 = signed_multiply_32x16b(env_mult, p[0]) << 1;
    44e8:	ldr.w	r9, [r3]
static inline int32_t signed_multiply_32x16b(int32_t a, uint32_t b) __attribute__((always_inline, unused));
static inline int32_t signed_multiply_32x16b(int32_t a, uint32_t b)
{
#if defined (__ARM_ARCH_7EM__)
	int32_t out;
	asm volatile("smulwb %0, %1, %2" : "=r" (out) : "r" (a), "r" (b));
    44ec:	smulwb	ip, ip, r9
static inline int32_t signed_multiply_32x16t(int32_t a, uint32_t b) __attribute__((always_inline, unused));
static inline int32_t signed_multiply_32x16t(int32_t a, uint32_t b)
{
#if defined (__ARM_ARCH_7EM__)
	int32_t out;
	asm volatile("smulwt %0, %1, %2" : "=r" (out) : "r" (a), "r" (b));
    44f0:	smulwt	r4, r4, r9
static inline uint32_t pack_16t_16t(int32_t a, int32_t b) __attribute__((always_inline, unused));
static inline uint32_t pack_16t_16t(int32_t a, int32_t b)
{
#if defined (__ARM_ARCH_7EM__)
	int32_t out;
	asm volatile("pkhtb %0, %1, %2, asr #16" : "=r" (out) : "r" (a), "r" (b));
    44f4:	lsls	r4, r4, #1
    44f6:	mov.w	ip, ip, lsl #1
    44fa:	pkhtb	r4, r4, ip, asr #16
		env_mult += env_incr;
		tmp2 = signed_multiply_32x16t(env_mult, p[0]) << 1;
		// pack from high halfword of tmp1, tmp2
		p[0] = pack_16t_16t(tmp2, tmp1);
    44fe:	str	r4, [r3, #0]
		env_mult += env_incr;
		tmp1 = signed_multiply_32x16b(env_mult, p[1]) << 1;
    4500:	ldr.w	ip, [r3, #4]
static inline int32_t signed_multiply_32x16b(int32_t a, uint32_t b) __attribute__((always_inline, unused));
static inline int32_t signed_multiply_32x16b(int32_t a, uint32_t b)
{
#if defined (__ARM_ARCH_7EM__)
	int32_t out;
	asm volatile("smulwb %0, %1, %2" : "=r" (out) : "r" (a), "r" (b));
    4504:	smulwb	r4, r7, ip
static inline int32_t signed_multiply_32x16t(int32_t a, uint32_t b) __attribute__((always_inline, unused));
static inline int32_t signed_multiply_32x16t(int32_t a, uint32_t b)
{
#if defined (__ARM_ARCH_7EM__)
	int32_t out;
	asm volatile("smulwt %0, %1, %2" : "=r" (out) : "r" (a), "r" (b));
    4508:	smulwt	r0, r0, ip
static inline uint32_t pack_16t_16t(int32_t a, int32_t b) __attribute__((always_inline, unused));
static inline uint32_t pack_16t_16t(int32_t a, int32_t b)
{
#if defined (__ARM_ARCH_7EM__)
	int32_t out;
	asm volatile("pkhtb %0, %1, %2, asr #16" : "=r" (out) : "r" (a), "r" (b));
    450c:	lsls	r0, r0, #1
    450e:	lsls	r4, r4, #1
    4510:	pkhtb	r0, r0, r4, asr #16
		env_mult += env_incr;
		tmp2 = signed_multiply_32x16t(env_mult, p[1]) << 1;
		p[1] = pack_16t_16t(tmp2, tmp1);
    4514:	str	r0, [r3, #4]
		env_mult += env_incr;
		tmp1 = signed_multiply_32x16b(env_mult, p[2]) << 1;
    4516:	ldr	r4, [r3, #8]
static inline int32_t signed_multiply_32x16b(int32_t a, uint32_t b) __attribute__((always_inline, unused));
static inline int32_t signed_multiply_32x16b(int32_t a, uint32_t b)
{
#if defined (__ARM_ARCH_7EM__)
	int32_t out;
	asm volatile("smulwb %0, %1, %2" : "=r" (out) : "r" (a), "r" (b));
    4518:	smulwb	r0, r6, r4
static inline int32_t signed_multiply_32x16t(int32_t a, uint32_t b) __attribute__((always_inline, unused));
static inline int32_t signed_multiply_32x16t(int32_t a, uint32_t b)
{
#if defined (__ARM_ARCH_7EM__)
	int32_t out;
	asm volatile("smulwt %0, %1, %2" : "=r" (out) : "r" (a), "r" (b));
    451c:	smulwt	r1, r1, r4
static inline uint32_t pack_16t_16t(int32_t a, int32_t b) __attribute__((always_inline, unused));
static inline uint32_t pack_16t_16t(int32_t a, int32_t b)
{
#if defined (__ARM_ARCH_7EM__)
	int32_t out;
	asm volatile("pkhtb %0, %1, %2, asr #16" : "=r" (out) : "r" (a), "r" (b));
    4520:	lsls	r1, r1, #1
    4522:	lsls	r0, r0, #1
    4524:	pkhtb	r1, r1, r0, asr #16
		env_mult += env_incr;
		tmp2 = signed_multiply_32x16t(env_mult, p[2]) << 1;
		p[2] = pack_16t_16t(tmp2, tmp1);
    4528:	str	r1, [r3, #8]
		env_mult += env_incr;
		tmp1 = signed_multiply_32x16b(env_mult, p[3]) << 1;
    452a:	ldr	r1, [r3, #12]
static inline int32_t signed_multiply_32x16b(int32_t a, uint32_t b) __attribute__((always_inline, unused));
static inline int32_t signed_multiply_32x16b(int32_t a, uint32_t b)
{
#if defined (__ARM_ARCH_7EM__)
	int32_t out;
	asm volatile("smulwb %0, %1, %2" : "=r" (out) : "r" (a), "r" (b));
    452c:	smulwb	r0, r5, r1
static inline int32_t signed_multiply_32x16t(int32_t a, uint32_t b) __attribute__((always_inline, unused));
static inline int32_t signed_multiply_32x16t(int32_t a, uint32_t b)
{
#if defined (__ARM_ARCH_7EM__)
	int32_t out;
	asm volatile("smulwt %0, %1, %2" : "=r" (out) : "r" (a), "r" (b));
    4530:	smulwt	r1, r8, r1
static inline uint32_t pack_16t_16t(int32_t a, int32_t b) __attribute__((always_inline, unused));
static inline uint32_t pack_16t_16t(int32_t a, int32_t b)
{
#if defined (__ARM_ARCH_7EM__)
	int32_t out;
	asm volatile("pkhtb %0, %1, %2, asr #16" : "=r" (out) : "r" (a), "r" (b));
    4534:	lsls	r1, r1, #1
    4536:	lsls	r0, r0, #1
    4538:	pkhtb	r1, r1, r0, asr #16
	// to centibels. Practically this means the decay and release happen too slowing intially, and too quick
	// near the end

	// other points of note are that one env_count corresponds to 1 second * ENVELOPE_PERIOD / AUDIO_SAMPLE_RATE_EXACT;
	// the ENVELOPE_PERIOD is the number of samples processed per iteration of the following loop
	while (p < end) {
    453c:	add.w	r0, r3, #16
    4540:	cmp	fp, r0
		p[2] = pack_16t_16t(tmp2, tmp1);
		env_mult += env_incr;
		tmp1 = signed_multiply_32x16b(env_mult, p[3]) << 1;
		env_mult += env_incr;
		tmp2 = signed_multiply_32x16t(env_mult, p[3]) << 1;
		p[3] = pack_16t_16t(tmp2, tmp1);
    4542:	str	r1, [r3, #12]
	// to centibels. Practically this means the decay and release happen too slowing intially, and too quick
	// near the end

	// other points of note are that one env_count corresponds to 1 second * ENVELOPE_PERIOD / AUDIO_SAMPLE_RATE_EXACT;
	// the ENVELOPE_PERIOD is the number of samples processed per iteration of the following loop
	while (p < end) {
    4544:	bls.w	48b0 <AudioSynthWavetable::update()+0x86c>
    4548:	add.w	r7, r8, r2
    454c:	adds	r4, r2, r7
    454e:	adds	r6, r2, r4
    4550:	adds	r0, r2, r6
    4552:	adds	r5, r2, r0
    4554:	adds	r1, r2, r5
    4556:	add.w	r9, r2, r1
    455a:	add.w	r8, r2, r9
			continue;
		}

		env_mult += env_incr;
		// env_mult is INT32_MAX at max (i.e. 31-bits), so shift << 1 so result is aligned with high halfword of tmp1/tmp2
		tmp1 = signed_multiply_32x16b(env_mult, p[0]) << 1;
    455e:	ldr.w	ip, [r3, #16]
static inline int32_t signed_multiply_32x16b(int32_t a, uint32_t b) __attribute__((always_inline, unused));
static inline int32_t signed_multiply_32x16b(int32_t a, uint32_t b)
{
#if defined (__ARM_ARCH_7EM__)
	int32_t out;
	asm volatile("smulwb %0, %1, %2" : "=r" (out) : "r" (a), "r" (b));
    4562:	smulwb	r7, r7, ip
static inline int32_t signed_multiply_32x16t(int32_t a, uint32_t b) __attribute__((always_inline, unused));
static inline int32_t signed_multiply_32x16t(int32_t a, uint32_t b)
{
#if defined (__ARM_ARCH_7EM__)
	int32_t out;
	asm volatile("smulwt %0, %1, %2" : "=r" (out) : "r" (a), "r" (b));
    4566:	smulwt	r4, r4, ip
static inline uint32_t pack_16t_16t(int32_t a, int32_t b) __attribute__((always_inline, unused));
static inline uint32_t pack_16t_16t(int32_t a, int32_t b)
{
#if defined (__ARM_ARCH_7EM__)
	int32_t out;
	asm volatile("pkhtb %0, %1, %2, asr #16" : "=r" (out) : "r" (a), "r" (b));
    456a:	lsls	r4, r4, #1
    456c:	lsls	r7, r7, #1
    456e:	pkhtb	r4, r4, r7, asr #16
		env_mult += env_incr;
		tmp2 = signed_multiply_32x16t(env_mult, p[0]) << 1;
		// pack from high halfword of tmp1, tmp2
		p[0] = pack_16t_16t(tmp2, tmp1);
    4572:	str	r4, [r3, #16]
		env_mult += env_incr;
		tmp1 = signed_multiply_32x16b(env_mult, p[1]) << 1;
    4574:	ldr	r7, [r3, #20]
static inline int32_t signed_multiply_32x16b(int32_t a, uint32_t b) __attribute__((always_inline, unused));
static inline int32_t signed_multiply_32x16b(int32_t a, uint32_t b)
{
#if defined (__ARM_ARCH_7EM__)
	int32_t out;
	asm volatile("smulwb %0, %1, %2" : "=r" (out) : "r" (a), "r" (b));
    4576:	smulwb	r4, r6, r7
static inline int32_t signed_multiply_32x16t(int32_t a, uint32_t b) __attribute__((always_inline, unused));
static inline int32_t signed_multiply_32x16t(int32_t a, uint32_t b)
{
#if defined (__ARM_ARCH_7EM__)
	int32_t out;
	asm volatile("smulwt %0, %1, %2" : "=r" (out) : "r" (a), "r" (b));
    457a:	smulwt	r0, r0, r7
static inline uint32_t pack_16t_16t(int32_t a, int32_t b) __attribute__((always_inline, unused));
static inline uint32_t pack_16t_16t(int32_t a, int32_t b)
{
#if defined (__ARM_ARCH_7EM__)
	int32_t out;
	asm volatile("pkhtb %0, %1, %2, asr #16" : "=r" (out) : "r" (a), "r" (b));
    457e:	lsls	r0, r0, #1
    4580:	lsls	r4, r4, #1
    4582:	pkhtb	r0, r0, r4, asr #16
		env_mult += env_incr;
		tmp2 = signed_multiply_32x16t(env_mult, p[1]) << 1;
		p[1] = pack_16t_16t(tmp2, tmp1);
    4586:	str	r0, [r3, #20]
		env_mult += env_incr;
		tmp1 = signed_multiply_32x16b(env_mult, p[2]) << 1;
    4588:	ldr	r4, [r3, #24]
static inline int32_t signed_multiply_32x16b(int32_t a, uint32_t b) __attribute__((always_inline, unused));
static inline int32_t signed_multiply_32x16b(int32_t a, uint32_t b)
{
#if defined (__ARM_ARCH_7EM__)
	int32_t out;
	asm volatile("smulwb %0, %1, %2" : "=r" (out) : "r" (a), "r" (b));
    458a:	smulwb	r0, r5, r4
static inline int32_t signed_multiply_32x16t(int32_t a, uint32_t b) __attribute__((always_inline, unused));
static inline int32_t signed_multiply_32x16t(int32_t a, uint32_t b)
{
#if defined (__ARM_ARCH_7EM__)
	int32_t out;
	asm volatile("smulwt %0, %1, %2" : "=r" (out) : "r" (a), "r" (b));
    458e:	smulwt	r1, r1, r4
static inline uint32_t pack_16t_16t(int32_t a, int32_t b) __attribute__((always_inline, unused));
static inline uint32_t pack_16t_16t(int32_t a, int32_t b)
{
#if defined (__ARM_ARCH_7EM__)
	int32_t out;
	asm volatile("pkhtb %0, %1, %2, asr #16" : "=r" (out) : "r" (a), "r" (b));
    4592:	lsls	r1, r1, #1
    4594:	lsls	r0, r0, #1
    4596:	pkhtb	r1, r1, r0, asr #16
		env_mult += env_incr;
		tmp2 = signed_multiply_32x16t(env_mult, p[2]) << 1;
		p[2] = pack_16t_16t(tmp2, tmp1);
    459a:	str	r1, [r3, #24]
		env_mult += env_incr;
		tmp1 = signed_multiply_32x16b(env_mult, p[3]) << 1;
    459c:	ldr	r1, [r3, #28]
static inline int32_t signed_multiply_32x16b(int32_t a, uint32_t b) __attribute__((always_inline, unused));
static inline int32_t signed_multiply_32x16b(int32_t a, uint32_t b)
{
#if defined (__ARM_ARCH_7EM__)
	int32_t out;
	asm volatile("smulwb %0, %1, %2" : "=r" (out) : "r" (a), "r" (b));
    459e:	smulwb	r0, r9, r1
static inline int32_t signed_multiply_32x16t(int32_t a, uint32_t b) __attribute__((always_inline, unused));
static inline int32_t signed_multiply_32x16t(int32_t a, uint32_t b)
{
#if defined (__ARM_ARCH_7EM__)
	int32_t out;
	asm volatile("smulwt %0, %1, %2" : "=r" (out) : "r" (a), "r" (b));
    45a2:	smulwt	r1, r8, r1
static inline uint32_t pack_16t_16t(int32_t a, int32_t b) __attribute__((always_inline, unused));
static inline uint32_t pack_16t_16t(int32_t a, int32_t b)
{
#if defined (__ARM_ARCH_7EM__)
	int32_t out;
	asm volatile("pkhtb %0, %1, %2, asr #16" : "=r" (out) : "r" (a), "r" (b));
    45a6:	lsls	r1, r1, #1
    45a8:	lsls	r0, r0, #1
    45aa:	pkhtb	r1, r1, r0, asr #16
		env_mult += env_incr;
		tmp2 = signed_multiply_32x16t(env_mult, p[3]) << 1;
		p[3] = pack_16t_16t(tmp2, tmp1);
    45ae:	str	r1, [r3, #28]

		p += ENVELOPE_PERIOD / 2;
    45b0:	adds	r3, #32
	// to centibels. Practically this means the decay and release happen too slowing intially, and too quick
	// near the end

	// other points of note are that one env_count corresponds to 1 second * ENVELOPE_PERIOD / AUDIO_SAMPLE_RATE_EXACT;
	// the ENVELOPE_PERIOD is the number of samples processed per iteration of the following loop
	while (p < end) {
    45b2:	cmp	fp, r3
    45b4:	bls.w	4902 <AudioSynthWavetable::update()+0x8be>
    45b8:	movs	r1, #5
    45ba:	ldr.w	r9, [pc, #896]	; 493c <AudioSynthWavetable::update()+0x8f8>
    45be:	str	r1, [sp, #52]	; 0x34
    45c0:	b.n	4294 <AudioSynthWavetable::update()+0x250>
		tmp1 = signed_multiply_32x16b(env_mult, p[3]) << 1;
		env_mult += env_incr;
		tmp2 = signed_multiply_32x16t(env_mult, p[3]) << 1;
		p[3] = pack_16t_16t(tmp2, tmp1);

		p += ENVELOPE_PERIOD / 2;
    45c2:	mov	r3, r0

	// other points of note are that one env_count corresponds to 1 second * ENVELOPE_PERIOD / AUDIO_SAMPLE_RATE_EXACT;
	// the ENVELOPE_PERIOD is the number of samples processed per iteration of the following loop
	while (p < end) {
		// note env_count == 0 is used as a trigger for state transition
		if (env_count <= 0) switch (env_state) {
    45c4:	mov	r9, r6
    45c6:	ldr	r2, [sp, #28]
    45c8:	ldr	r1, [r2, #52]	; 0x34
			env_count = s->DECAY_COUNT;
			env_incr = (-s->SUSTAIN_MULT) / (env_count * ENVELOPE_PERIOD);
			PRINT_ENV(STATE_DECAY);
			continue;
		case STATE_DECAY:
			env_mult = UNITY_GAIN - s->SUSTAIN_MULT;
    45ca:	mvn.w	r8, #2147483648	; 0x80000000
    45ce:	rsb	r8, r1, r8
			// UINT16_MAX is a value approximately corresponding to the -100 dBFS defined in the SoundFont spec as full attenuation
			// hence this comparison either sends the state to indefinite STATE_SUSTAIN, or immediately into STATE_RELEASE -> STATE_IDLE
			env_state = env_mult < UNITY_GAIN / UINT16_MAX ? STATE_RELEASE : STATE_SUSTAIN;
    45d2:	cmp.w	r8, #32768	; 0x8000
    45d6:	blt.w	4806 <AudioSynthWavetable::update()+0x7c2>
	// to centibels. Practically this means the decay and release happen too slowing intially, and too quick
	// near the end

	// other points of note are that one env_count corresponds to 1 second * ENVELOPE_PERIOD / AUDIO_SAMPLE_RATE_EXACT;
	// the ENVELOPE_PERIOD is the number of samples processed per iteration of the following loop
	while (p < end) {
    45da:	cmp	fp, r3
    45dc:	bls.w	48ec <AudioSynthWavetable::update()+0x8a8>
		case STATE_DECAY:
			env_mult = UNITY_GAIN - s->SUSTAIN_MULT;
			// UINT16_MAX is a value approximately corresponding to the -100 dBFS defined in the SoundFont spec as full attenuation
			// hence this comparison either sends the state to indefinite STATE_SUSTAIN, or immediately into STATE_RELEASE -> STATE_IDLE
			env_state = env_mult < UNITY_GAIN / UINT16_MAX ? STATE_RELEASE : STATE_SUSTAIN;
			env_incr = 0;
    45e0:	movs	r2, #0
    45e2:	b.n	44d2 <AudioSynthWavetable::update()+0x48e>
		tmp1 = signed_multiply_32x16b(env_mult, p[3]) << 1;
		env_mult += env_incr;
		tmp2 = signed_multiply_32x16t(env_mult, p[3]) << 1;
		p[3] = pack_16t_16t(tmp2, tmp1);

		p += ENVELOPE_PERIOD / 2;
    45e4:	mov	r3, r0

	// other points of note are that one env_count corresponds to 1 second * ENVELOPE_PERIOD / AUDIO_SAMPLE_RATE_EXACT;
	// the ENVELOPE_PERIOD is the number of samples processed per iteration of the following loop
	while (p < end) {
		// note env_count == 0 is used as a trigger for state transition
		if (env_count <= 0) switch (env_state) {
    45e6:	mvn.w	r8, #2147483648	; 0x80000000
			env_incr = 0;
			PRINT_ENV(STATE_HOLD);
			continue;
		case STATE_HOLD:
			env_state = STATE_DECAY;
			env_count = s->DECAY_COUNT;
    45ea:	ldr	r1, [sp, #28]
    45ec:	ldr.w	r9, [r1, #44]	; 0x2c
			env_incr = (-s->SUSTAIN_MULT) / (env_count * ENVELOPE_PERIOD);
    45f0:	ldr	r1, [r1, #52]	; 0x34
	// to centibels. Practically this means the decay and release happen too slowing intially, and too quick
	// near the end

	// other points of note are that one env_count corresponds to 1 second * ENVELOPE_PERIOD / AUDIO_SAMPLE_RATE_EXACT;
	// the ENVELOPE_PERIOD is the number of samples processed per iteration of the following loop
	while (p < end) {
    45f2:	cmp	fp, r3
			PRINT_ENV(STATE_HOLD);
			continue;
		case STATE_HOLD:
			env_state = STATE_DECAY;
			env_count = s->DECAY_COUNT;
			env_incr = (-s->SUSTAIN_MULT) / (env_count * ENVELOPE_PERIOD);
    45f4:	mov.w	r2, r9, lsl #3
    45f8:	rsb	r0, r1, #0
    45fc:	sdiv	r2, r0, r2
	// to centibels. Practically this means the decay and release happen too slowing intially, and too quick
	// near the end

	// other points of note are that one env_count corresponds to 1 second * ENVELOPE_PERIOD / AUDIO_SAMPLE_RATE_EXACT;
	// the ENVELOPE_PERIOD is the number of samples processed per iteration of the following loop
	while (p < end) {
    4600:	bls.w	4862 <AudioSynthWavetable::update()+0x81e>
		// note env_count == 0 is used as a trigger for state transition
		if (env_count <= 0) switch (env_state) {
    4604:	cmp.w	r9, #0
    4608:	ble.n	45ca <AudioSynthWavetable::update()+0x586>
    460a:	add.w	r5, r2, r8
    460e:	adds	r0, r5, r2
    4610:	adds	r4, r0, r2
    4612:	adds	r1, r2, r4
    4614:	add.w	ip, r1, r2
    4618:	add.w	sl, ip, r2
    461c:	add.w	r7, r2, sl
    4620:	str	r1, [sp, #32]
    4622:	add.w	r8, r7, r2
    4626:	add.w	r6, r9, #4294967295
static inline int32_t signed_multiply_32x16b(int32_t a, uint32_t b) __attribute__((always_inline, unused));
static inline int32_t signed_multiply_32x16b(int32_t a, uint32_t b)
{
#if defined (__ARM_ARCH_7EM__)
	int32_t out;
	asm volatile("smulwb %0, %1, %2" : "=r" (out) : "r" (a), "r" (b));
    462a:	ldr	r1, [r3, #0]
    462c:	smulwb	r5, r5, r1
static inline int32_t signed_multiply_32x16t(int32_t a, uint32_t b) __attribute__((always_inline, unused));
static inline int32_t signed_multiply_32x16t(int32_t a, uint32_t b)
{
#if defined (__ARM_ARCH_7EM__)
	int32_t out;
	asm volatile("smulwt %0, %1, %2" : "=r" (out) : "r" (a), "r" (b));
    4630:	smulwt	r0, r0, r1
static inline uint32_t pack_16t_16t(int32_t a, int32_t b) __attribute__((always_inline, unused));
static inline uint32_t pack_16t_16t(int32_t a, int32_t b)
{
#if defined (__ARM_ARCH_7EM__)
	int32_t out;
	asm volatile("pkhtb %0, %1, %2, asr #16" : "=r" (out) : "r" (a), "r" (b));
    4634:	lsls	r0, r0, #1
    4636:	lsls	r5, r5, #1
    4638:	pkhtb	r5, r0, r5, asr #16
		// env_mult is INT32_MAX at max (i.e. 31-bits), so shift << 1 so result is aligned with high halfword of tmp1/tmp2
		tmp1 = signed_multiply_32x16b(env_mult, p[0]) << 1;
		env_mult += env_incr;
		tmp2 = signed_multiply_32x16t(env_mult, p[0]) << 1;
		// pack from high halfword of tmp1, tmp2
		p[0] = pack_16t_16t(tmp2, tmp1);
    463c:	str	r5, [r3, #0]
		env_mult += env_incr;
		tmp1 = signed_multiply_32x16b(env_mult, p[1]) << 1;
    463e:	ldr	r0, [r3, #4]
static inline int32_t signed_multiply_32x16b(int32_t a, uint32_t b) __attribute__((always_inline, unused));
static inline int32_t signed_multiply_32x16b(int32_t a, uint32_t b)
{
#if defined (__ARM_ARCH_7EM__)
	int32_t out;
	asm volatile("smulwb %0, %1, %2" : "=r" (out) : "r" (a), "r" (b));
    4640:	smulwb	r4, r4, r0
static inline int32_t signed_multiply_32x16t(int32_t a, uint32_t b) __attribute__((always_inline, unused));
static inline int32_t signed_multiply_32x16t(int32_t a, uint32_t b)
{
#if defined (__ARM_ARCH_7EM__)
	int32_t out;
	asm volatile("smulwt %0, %1, %2" : "=r" (out) : "r" (a), "r" (b));
    4644:	ldr	r1, [sp, #32]
    4646:	smulwt	r1, r1, r0
static inline uint32_t pack_16t_16t(int32_t a, int32_t b) __attribute__((always_inline, unused));
static inline uint32_t pack_16t_16t(int32_t a, int32_t b)
{
#if defined (__ARM_ARCH_7EM__)
	int32_t out;
	asm volatile("pkhtb %0, %1, %2, asr #16" : "=r" (out) : "r" (a), "r" (b));
    464a:	lsls	r1, r1, #1
    464c:	lsls	r4, r4, #1
    464e:	pkhtb	r1, r1, r4, asr #16
		env_mult += env_incr;
		tmp2 = signed_multiply_32x16t(env_mult, p[1]) << 1;
		p[1] = pack_16t_16t(tmp2, tmp1);
    4652:	str	r1, [r3, #4]
		env_mult += env_incr;
		tmp1 = signed_multiply_32x16b(env_mult, p[2]) << 1;
    4654:	ldr	r1, [r3, #8]
static inline int32_t signed_multiply_32x16b(int32_t a, uint32_t b) __attribute__((always_inline, unused));
static inline int32_t signed_multiply_32x16b(int32_t a, uint32_t b)
{
#if defined (__ARM_ARCH_7EM__)
	int32_t out;
	asm volatile("smulwb %0, %1, %2" : "=r" (out) : "r" (a), "r" (b));
    4656:	smulwb	r0, ip, r1
static inline int32_t signed_multiply_32x16t(int32_t a, uint32_t b) __attribute__((always_inline, unused));
static inline int32_t signed_multiply_32x16t(int32_t a, uint32_t b)
{
#if defined (__ARM_ARCH_7EM__)
	int32_t out;
	asm volatile("smulwt %0, %1, %2" : "=r" (out) : "r" (a), "r" (b));
    465a:	smulwt	r1, sl, r1
static inline uint32_t pack_16t_16t(int32_t a, int32_t b) __attribute__((always_inline, unused));
static inline uint32_t pack_16t_16t(int32_t a, int32_t b)
{
#if defined (__ARM_ARCH_7EM__)
	int32_t out;
	asm volatile("pkhtb %0, %1, %2, asr #16" : "=r" (out) : "r" (a), "r" (b));
    465e:	lsls	r1, r1, #1
    4660:	lsls	r0, r0, #1
    4662:	pkhtb	r1, r1, r0, asr #16
		env_mult += env_incr;
		tmp2 = signed_multiply_32x16t(env_mult, p[2]) << 1;
		p[2] = pack_16t_16t(tmp2, tmp1);
    4666:	str	r1, [r3, #8]
		env_mult += env_incr;
		tmp1 = signed_multiply_32x16b(env_mult, p[3]) << 1;
    4668:	ldr	r1, [r3, #12]
static inline int32_t signed_multiply_32x16b(int32_t a, uint32_t b) __attribute__((always_inline, unused));
static inline int32_t signed_multiply_32x16b(int32_t a, uint32_t b)
{
#if defined (__ARM_ARCH_7EM__)
	int32_t out;
	asm volatile("smulwb %0, %1, %2" : "=r" (out) : "r" (a), "r" (b));
    466a:	smulwb	r0, r7, r1
static inline int32_t signed_multiply_32x16t(int32_t a, uint32_t b) __attribute__((always_inline, unused));
static inline int32_t signed_multiply_32x16t(int32_t a, uint32_t b)
{
#if defined (__ARM_ARCH_7EM__)
	int32_t out;
	asm volatile("smulwt %0, %1, %2" : "=r" (out) : "r" (a), "r" (b));
    466e:	smulwt	r1, r8, r1
static inline uint32_t pack_16t_16t(int32_t a, int32_t b) __attribute__((always_inline, unused));
static inline uint32_t pack_16t_16t(int32_t a, int32_t b)
{
#if defined (__ARM_ARCH_7EM__)
	int32_t out;
	asm volatile("pkhtb %0, %1, %2, asr #16" : "=r" (out) : "r" (a), "r" (b));
    4672:	lsls	r1, r1, #1
    4674:	lsls	r0, r0, #1
    4676:	pkhtb	r1, r1, r0, asr #16
		env_mult += env_incr;
		tmp2 = signed_multiply_32x16t(env_mult, p[3]) << 1;
		p[3] = pack_16t_16t(tmp2, tmp1);

		p += ENVELOPE_PERIOD / 2;
    467a:	add.w	r0, r3, #16
	// to centibels. Practically this means the decay and release happen too slowing intially, and too quick
	// near the end

	// other points of note are that one env_count corresponds to 1 second * ENVELOPE_PERIOD / AUDIO_SAMPLE_RATE_EXACT;
	// the ENVELOPE_PERIOD is the number of samples processed per iteration of the following loop
	while (p < end) {
    467e:	cmp	fp, r0
		p[2] = pack_16t_16t(tmp2, tmp1);
		env_mult += env_incr;
		tmp1 = signed_multiply_32x16b(env_mult, p[3]) << 1;
		env_mult += env_incr;
		tmp2 = signed_multiply_32x16t(env_mult, p[3]) << 1;
		p[3] = pack_16t_16t(tmp2, tmp1);
    4680:	str	r1, [r3, #12]
	// to centibels. Practically this means the decay and release happen too slowing intially, and too quick
	// near the end

	// other points of note are that one env_count corresponds to 1 second * ENVELOPE_PERIOD / AUDIO_SAMPLE_RATE_EXACT;
	// the ENVELOPE_PERIOD is the number of samples processed per iteration of the following loop
	while (p < end) {
    4682:	bls.w	4916 <AudioSynthWavetable::update()+0x8d2>
		// note env_count == 0 is used as a trigger for state transition
		if (env_count <= 0) switch (env_state) {
    4686:	cmp	r6, #0
    4688:	beq.n	45c2 <AudioSynthWavetable::update()+0x57e>
    468a:	add.w	r6, r8, r2
    468e:	adds	r0, r2, r6
    4690:	adds	r5, r0, r2
    4692:	adds	r1, r5, r2
    4694:	adds	r4, r1, r2
    4696:	add.w	ip, r4, r2
    469a:	add.w	sl, r2, ip
    469e:	sub.w	r9, r9, #2
    46a2:	add.w	r8, r2, sl
			continue;
		}

		env_mult += env_incr;
		// env_mult is INT32_MAX at max (i.e. 31-bits), so shift << 1 so result is aligned with high halfword of tmp1/tmp2
		tmp1 = signed_multiply_32x16b(env_mult, p[0]) << 1;
    46a6:	ldr	r7, [r3, #16]
static inline int32_t signed_multiply_32x16b(int32_t a, uint32_t b) __attribute__((always_inline, unused));
static inline int32_t signed_multiply_32x16b(int32_t a, uint32_t b)
{
#if defined (__ARM_ARCH_7EM__)
	int32_t out;
	asm volatile("smulwb %0, %1, %2" : "=r" (out) : "r" (a), "r" (b));
    46a8:	smulwb	r6, r6, r7
static inline int32_t signed_multiply_32x16t(int32_t a, uint32_t b) __attribute__((always_inline, unused));
static inline int32_t signed_multiply_32x16t(int32_t a, uint32_t b)
{
#if defined (__ARM_ARCH_7EM__)
	int32_t out;
	asm volatile("smulwt %0, %1, %2" : "=r" (out) : "r" (a), "r" (b));
    46ac:	smulwt	r0, r0, r7
static inline uint32_t pack_16t_16t(int32_t a, int32_t b) __attribute__((always_inline, unused));
static inline uint32_t pack_16t_16t(int32_t a, int32_t b)
{
#if defined (__ARM_ARCH_7EM__)
	int32_t out;
	asm volatile("pkhtb %0, %1, %2, asr #16" : "=r" (out) : "r" (a), "r" (b));
    46b0:	lsls	r0, r0, #1
    46b2:	lsls	r6, r6, #1
    46b4:	pkhtb	r6, r0, r6, asr #16
		env_mult += env_incr;
		tmp2 = signed_multiply_32x16t(env_mult, p[0]) << 1;
		// pack from high halfword of tmp1, tmp2
		p[0] = pack_16t_16t(tmp2, tmp1);
    46b8:	str	r6, [r3, #16]
		env_mult += env_incr;
		tmp1 = signed_multiply_32x16b(env_mult, p[1]) << 1;
    46ba:	ldr	r0, [r3, #20]
static inline int32_t signed_multiply_32x16b(int32_t a, uint32_t b) __attribute__((always_inline, unused));
static inline int32_t signed_multiply_32x16b(int32_t a, uint32_t b)
{
#if defined (__ARM_ARCH_7EM__)
	int32_t out;
	asm volatile("smulwb %0, %1, %2" : "=r" (out) : "r" (a), "r" (b));
    46bc:	smulwb	r5, r5, r0
static inline int32_t signed_multiply_32x16t(int32_t a, uint32_t b) __attribute__((always_inline, unused));
static inline int32_t signed_multiply_32x16t(int32_t a, uint32_t b)
{
#if defined (__ARM_ARCH_7EM__)
	int32_t out;
	asm volatile("smulwt %0, %1, %2" : "=r" (out) : "r" (a), "r" (b));
    46c0:	smulwt	r1, r1, r0
static inline uint32_t pack_16t_16t(int32_t a, int32_t b) __attribute__((always_inline, unused));
static inline uint32_t pack_16t_16t(int32_t a, int32_t b)
{
#if defined (__ARM_ARCH_7EM__)
	int32_t out;
	asm volatile("pkhtb %0, %1, %2, asr #16" : "=r" (out) : "r" (a), "r" (b));
    46c4:	lsls	r1, r1, #1
    46c6:	lsls	r5, r5, #1
    46c8:	pkhtb	r1, r1, r5, asr #16
		env_mult += env_incr;
		tmp2 = signed_multiply_32x16t(env_mult, p[1]) << 1;
		p[1] = pack_16t_16t(tmp2, tmp1);
    46cc:	str	r1, [r3, #20]
		env_mult += env_incr;
		tmp1 = signed_multiply_32x16b(env_mult, p[2]) << 1;
    46ce:	ldr	r1, [r3, #24]
static inline int32_t signed_multiply_32x16b(int32_t a, uint32_t b) __attribute__((always_inline, unused));
static inline int32_t signed_multiply_32x16b(int32_t a, uint32_t b)
{
#if defined (__ARM_ARCH_7EM__)
	int32_t out;
	asm volatile("smulwb %0, %1, %2" : "=r" (out) : "r" (a), "r" (b));
    46d0:	smulwb	r0, r4, r1
static inline int32_t signed_multiply_32x16t(int32_t a, uint32_t b) __attribute__((always_inline, unused));
static inline int32_t signed_multiply_32x16t(int32_t a, uint32_t b)
{
#if defined (__ARM_ARCH_7EM__)
	int32_t out;
	asm volatile("smulwt %0, %1, %2" : "=r" (out) : "r" (a), "r" (b));
    46d4:	smulwt	r1, ip, r1
static inline uint32_t pack_16t_16t(int32_t a, int32_t b) __attribute__((always_inline, unused));
static inline uint32_t pack_16t_16t(int32_t a, int32_t b)
{
#if defined (__ARM_ARCH_7EM__)
	int32_t out;
	asm volatile("pkhtb %0, %1, %2, asr #16" : "=r" (out) : "r" (a), "r" (b));
    46d8:	lsls	r1, r1, #1
    46da:	lsls	r0, r0, #1
    46dc:	pkhtb	r1, r1, r0, asr #16
		env_mult += env_incr;
		tmp2 = signed_multiply_32x16t(env_mult, p[2]) << 1;
		p[2] = pack_16t_16t(tmp2, tmp1);
    46e0:	str	r1, [r3, #24]
		env_mult += env_incr;
		tmp1 = signed_multiply_32x16b(env_mult, p[3]) << 1;
    46e2:	ldr	r1, [r3, #28]
static inline int32_t signed_multiply_32x16b(int32_t a, uint32_t b) __attribute__((always_inline, unused));
static inline int32_t signed_multiply_32x16b(int32_t a, uint32_t b)
{
#if defined (__ARM_ARCH_7EM__)
	int32_t out;
	asm volatile("smulwb %0, %1, %2" : "=r" (out) : "r" (a), "r" (b));
    46e4:	smulwb	r0, sl, r1
static inline int32_t signed_multiply_32x16t(int32_t a, uint32_t b) __attribute__((always_inline, unused));
static inline int32_t signed_multiply_32x16t(int32_t a, uint32_t b)
{
#if defined (__ARM_ARCH_7EM__)
	int32_t out;
	asm volatile("smulwt %0, %1, %2" : "=r" (out) : "r" (a), "r" (b));
    46e8:	smulwt	r1, r8, r1
static inline uint32_t pack_16t_16t(int32_t a, int32_t b) __attribute__((always_inline, unused));
static inline uint32_t pack_16t_16t(int32_t a, int32_t b)
{
#if defined (__ARM_ARCH_7EM__)
	int32_t out;
	asm volatile("pkhtb %0, %1, %2, asr #16" : "=r" (out) : "r" (a), "r" (b));
    46ec:	lsls	r1, r1, #1
    46ee:	lsls	r0, r0, #1
    46f0:	pkhtb	r1, r1, r0, asr #16
		env_mult += env_incr;
		tmp2 = signed_multiply_32x16t(env_mult, p[3]) << 1;
		p[3] = pack_16t_16t(tmp2, tmp1);
    46f4:	str	r1, [r3, #28]

		p += ENVELOPE_PERIOD / 2;
    46f6:	adds	r3, #32
	// to centibels. Practically this means the decay and release happen too slowing intially, and too quick
	// near the end

	// other points of note are that one env_count corresponds to 1 second * ENVELOPE_PERIOD / AUDIO_SAMPLE_RATE_EXACT;
	// the ENVELOPE_PERIOD is the number of samples processed per iteration of the following loop
	while (p < end) {
    46f8:	cmp	fp, r3
    46fa:	bls.w	4862 <AudioSynthWavetable::update()+0x81e>
		// note env_count == 0 is used as a trigger for state transition
		if (env_count <= 0) switch (env_state) {
    46fe:	cmp.w	r9, #0
    4702:	ble.w	45c6 <AudioSynthWavetable::update()+0x582>
			env_count = s->HOLD_COUNT;
			env_incr = 0;
			PRINT_ENV(STATE_HOLD);
			continue;
		case STATE_HOLD:
			env_state = STATE_DECAY;
    4706:	movs	r1, #4
    4708:	str	r1, [sp, #52]	; 0x34
    470a:	b.n	4294 <AudioSynthWavetable::update()+0x250>
		tmp1 = signed_multiply_32x16b(env_mult, p[3]) << 1;
		env_mult += env_incr;
		tmp2 = signed_multiply_32x16t(env_mult, p[3]) << 1;
		p[3] = pack_16t_16t(tmp2, tmp1);

		p += ENVELOPE_PERIOD / 2;
    470c:	mov	r3, r0
			PRINT_ENV(STATE_ATTACK);
			continue;
		case STATE_ATTACK:
			env_mult = UNITY_GAIN;
			env_state = STATE_HOLD;
			env_count = s->HOLD_COUNT;
    470e:	ldr	r2, [sp, #28]
	// to centibels. Practically this means the decay and release happen too slowing intially, and too quick
	// near the end

	// other points of note are that one env_count corresponds to 1 second * ENVELOPE_PERIOD / AUDIO_SAMPLE_RATE_EXACT;
	// the ENVELOPE_PERIOD is the number of samples processed per iteration of the following loop
	while (p < end) {
    4710:	cmp	fp, r3
			PRINT_ENV(STATE_ATTACK);
			continue;
		case STATE_ATTACK:
			env_mult = UNITY_GAIN;
			env_state = STATE_HOLD;
			env_count = s->HOLD_COUNT;
    4712:	ldr.w	r9, [r2, #40]	; 0x28
	// to centibels. Practically this means the decay and release happen too slowing intially, and too quick
	// near the end

	// other points of note are that one env_count corresponds to 1 second * ENVELOPE_PERIOD / AUDIO_SAMPLE_RATE_EXACT;
	// the ENVELOPE_PERIOD is the number of samples processed per iteration of the following loop
	while (p < end) {
    4716:	bls.w	4898 <AudioSynthWavetable::update()+0x854>
		// note env_count == 0 is used as a trigger for state transition
		if (env_count <= 0) switch (env_state) {
    471a:	cmp.w	r9, #0
    471e:	ble.w	4828 <AudioSynthWavetable::update()+0x7e4>
    4722:	add.w	r2, r9, #4294967295
			continue;
		}

		env_mult += env_incr;
		// env_mult is INT32_MAX at max (i.e. 31-bits), so shift << 1 so result is aligned with high halfword of tmp1/tmp2
		tmp1 = signed_multiply_32x16b(env_mult, p[0]) << 1;
    4726:	ldr	r1, [r3, #0]
static inline int32_t signed_multiply_32x16b(int32_t a, uint32_t b) __attribute__((always_inline, unused));
static inline int32_t signed_multiply_32x16b(int32_t a, uint32_t b)
{
#if defined (__ARM_ARCH_7EM__)
	int32_t out;
	asm volatile("smulwb %0, %1, %2" : "=r" (out) : "r" (a), "r" (b));
    4728:	smulwb	r0, lr, r1
static inline int32_t signed_multiply_32x16t(int32_t a, uint32_t b) __attribute__((always_inline, unused));
static inline int32_t signed_multiply_32x16t(int32_t a, uint32_t b)
{
#if defined (__ARM_ARCH_7EM__)
	int32_t out;
	asm volatile("smulwt %0, %1, %2" : "=r" (out) : "r" (a), "r" (b));
    472c:	smulwt	r1, lr, r1
static inline uint32_t pack_16t_16t(int32_t a, int32_t b) __attribute__((always_inline, unused));
static inline uint32_t pack_16t_16t(int32_t a, int32_t b)
{
#if defined (__ARM_ARCH_7EM__)
	int32_t out;
	asm volatile("pkhtb %0, %1, %2, asr #16" : "=r" (out) : "r" (a), "r" (b));
    4730:	lsls	r1, r1, #1
    4732:	lsls	r0, r0, #1
    4734:	pkhtb	r1, r1, r0, asr #16
		env_mult += env_incr;
		tmp2 = signed_multiply_32x16t(env_mult, p[0]) << 1;
		// pack from high halfword of tmp1, tmp2
		p[0] = pack_16t_16t(tmp2, tmp1);
    4738:	str	r1, [r3, #0]
		env_mult += env_incr;
		tmp1 = signed_multiply_32x16b(env_mult, p[1]) << 1;
    473a:	ldr	r1, [r3, #4]
static inline int32_t signed_multiply_32x16b(int32_t a, uint32_t b) __attribute__((always_inline, unused));
static inline int32_t signed_multiply_32x16b(int32_t a, uint32_t b)
{
#if defined (__ARM_ARCH_7EM__)
	int32_t out;
	asm volatile("smulwb %0, %1, %2" : "=r" (out) : "r" (a), "r" (b));
    473c:	smulwb	r0, lr, r1
static inline int32_t signed_multiply_32x16t(int32_t a, uint32_t b) __attribute__((always_inline, unused));
static inline int32_t signed_multiply_32x16t(int32_t a, uint32_t b)
{
#if defined (__ARM_ARCH_7EM__)
	int32_t out;
	asm volatile("smulwt %0, %1, %2" : "=r" (out) : "r" (a), "r" (b));
    4740:	smulwt	r1, lr, r1
static inline uint32_t pack_16t_16t(int32_t a, int32_t b) __attribute__((always_inline, unused));
static inline uint32_t pack_16t_16t(int32_t a, int32_t b)
{
#if defined (__ARM_ARCH_7EM__)
	int32_t out;
	asm volatile("pkhtb %0, %1, %2, asr #16" : "=r" (out) : "r" (a), "r" (b));
    4744:	lsls	r1, r1, #1
    4746:	lsls	r0, r0, #1
    4748:	pkhtb	r1, r1, r0, asr #16
		env_mult += env_incr;
		tmp2 = signed_multiply_32x16t(env_mult, p[1]) << 1;
		p[1] = pack_16t_16t(tmp2, tmp1);
    474c:	str	r1, [r3, #4]
		env_mult += env_incr;
		tmp1 = signed_multiply_32x16b(env_mult, p[2]) << 1;
    474e:	ldr	r1, [r3, #8]
static inline int32_t signed_multiply_32x16b(int32_t a, uint32_t b) __attribute__((always_inline, unused));
static inline int32_t signed_multiply_32x16b(int32_t a, uint32_t b)
{
#if defined (__ARM_ARCH_7EM__)
	int32_t out;
	asm volatile("smulwb %0, %1, %2" : "=r" (out) : "r" (a), "r" (b));
    4750:	smulwb	r0, lr, r1
static inline int32_t signed_multiply_32x16t(int32_t a, uint32_t b) __attribute__((always_inline, unused));
static inline int32_t signed_multiply_32x16t(int32_t a, uint32_t b)
{
#if defined (__ARM_ARCH_7EM__)
	int32_t out;
	asm volatile("smulwt %0, %1, %2" : "=r" (out) : "r" (a), "r" (b));
    4754:	smulwt	r1, lr, r1
static inline uint32_t pack_16t_16t(int32_t a, int32_t b) __attribute__((always_inline, unused));
static inline uint32_t pack_16t_16t(int32_t a, int32_t b)
{
#if defined (__ARM_ARCH_7EM__)
	int32_t out;
	asm volatile("pkhtb %0, %1, %2, asr #16" : "=r" (out) : "r" (a), "r" (b));
    4758:	lsls	r1, r1, #1
    475a:	lsls	r0, r0, #1
    475c:	pkhtb	r1, r1, r0, asr #16
		env_mult += env_incr;
		tmp2 = signed_multiply_32x16t(env_mult, p[2]) << 1;
		p[2] = pack_16t_16t(tmp2, tmp1);
    4760:	str	r1, [r3, #8]
		env_mult += env_incr;
		tmp1 = signed_multiply_32x16b(env_mult, p[3]) << 1;
    4762:	ldr	r1, [r3, #12]
static inline int32_t signed_multiply_32x16b(int32_t a, uint32_t b) __attribute__((always_inline, unused));
static inline int32_t signed_multiply_32x16b(int32_t a, uint32_t b)
{
#if defined (__ARM_ARCH_7EM__)
	int32_t out;
	asm volatile("smulwb %0, %1, %2" : "=r" (out) : "r" (a), "r" (b));
    4764:	smulwb	r0, lr, r1
static inline int32_t signed_multiply_32x16t(int32_t a, uint32_t b) __attribute__((always_inline, unused));
static inline int32_t signed_multiply_32x16t(int32_t a, uint32_t b)
{
#if defined (__ARM_ARCH_7EM__)
	int32_t out;
	asm volatile("smulwt %0, %1, %2" : "=r" (out) : "r" (a), "r" (b));
    4768:	smulwt	r1, lr, r1
static inline uint32_t pack_16t_16t(int32_t a, int32_t b) __attribute__((always_inline, unused));
static inline uint32_t pack_16t_16t(int32_t a, int32_t b)
{
#if defined (__ARM_ARCH_7EM__)
	int32_t out;
	asm volatile("pkhtb %0, %1, %2, asr #16" : "=r" (out) : "r" (a), "r" (b));
    476c:	lsls	r1, r1, #1
    476e:	lsls	r0, r0, #1
    4770:	pkhtb	r1, r1, r0, asr #16
		env_mult += env_incr;
		tmp2 = signed_multiply_32x16t(env_mult, p[3]) << 1;
		p[3] = pack_16t_16t(tmp2, tmp1);

		p += ENVELOPE_PERIOD / 2;
    4774:	add.w	r0, r3, #16
	// to centibels. Practically this means the decay and release happen too slowing intially, and too quick
	// near the end

	// other points of note are that one env_count corresponds to 1 second * ENVELOPE_PERIOD / AUDIO_SAMPLE_RATE_EXACT;
	// the ENVELOPE_PERIOD is the number of samples processed per iteration of the following loop
	while (p < end) {
    4778:	cmp	fp, r0
		p[2] = pack_16t_16t(tmp2, tmp1);
		env_mult += env_incr;
		tmp1 = signed_multiply_32x16b(env_mult, p[3]) << 1;
		env_mult += env_incr;
		tmp2 = signed_multiply_32x16t(env_mult, p[3]) << 1;
		p[3] = pack_16t_16t(tmp2, tmp1);
    477a:	str	r1, [r3, #12]
	// to centibels. Practically this means the decay and release happen too slowing intially, and too quick
	// near the end

	// other points of note are that one env_count corresponds to 1 second * ENVELOPE_PERIOD / AUDIO_SAMPLE_RATE_EXACT;
	// the ENVELOPE_PERIOD is the number of samples processed per iteration of the following loop
	while (p < end) {
    477c:	bls.w	48d6 <AudioSynthWavetable::update()+0x892>
		// note env_count == 0 is used as a trigger for state transition
		if (env_count <= 0) switch (env_state) {
    4780:	cmp	r2, #0
    4782:	beq.w	45e4 <AudioSynthWavetable::update()+0x5a0>
    4786:	sub.w	r9, r9, #2
			continue;
		}

		env_mult += env_incr;
		// env_mult is INT32_MAX at max (i.e. 31-bits), so shift << 1 so result is aligned with high halfword of tmp1/tmp2
		tmp1 = signed_multiply_32x16b(env_mult, p[0]) << 1;
    478a:	ldr	r2, [r3, #16]
static inline int32_t signed_multiply_32x16b(int32_t a, uint32_t b) __attribute__((always_inline, unused));
static inline int32_t signed_multiply_32x16b(int32_t a, uint32_t b)
{
#if defined (__ARM_ARCH_7EM__)
	int32_t out;
	asm volatile("smulwb %0, %1, %2" : "=r" (out) : "r" (a), "r" (b));
    478c:	smulwb	r1, lr, r2
static inline int32_t signed_multiply_32x16t(int32_t a, uint32_t b) __attribute__((always_inline, unused));
static inline int32_t signed_multiply_32x16t(int32_t a, uint32_t b)
{
#if defined (__ARM_ARCH_7EM__)
	int32_t out;
	asm volatile("smulwt %0, %1, %2" : "=r" (out) : "r" (a), "r" (b));
    4790:	smulwt	r2, lr, r2
static inline uint32_t pack_16t_16t(int32_t a, int32_t b) __attribute__((always_inline, unused));
static inline uint32_t pack_16t_16t(int32_t a, int32_t b)
{
#if defined (__ARM_ARCH_7EM__)
	int32_t out;
	asm volatile("pkhtb %0, %1, %2, asr #16" : "=r" (out) : "r" (a), "r" (b));
    4794:	lsls	r2, r2, #1
    4796:	lsls	r1, r1, #1
    4798:	pkhtb	r2, r2, r1, asr #16
		env_mult += env_incr;
		tmp2 = signed_multiply_32x16t(env_mult, p[0]) << 1;
		// pack from high halfword of tmp1, tmp2
		p[0] = pack_16t_16t(tmp2, tmp1);
    479c:	str	r2, [r3, #16]
		env_mult += env_incr;
		tmp1 = signed_multiply_32x16b(env_mult, p[1]) << 1;
    479e:	ldr	r2, [r3, #20]
static inline int32_t signed_multiply_32x16b(int32_t a, uint32_t b) __attribute__((always_inline, unused));
static inline int32_t signed_multiply_32x16b(int32_t a, uint32_t b)
{
#if defined (__ARM_ARCH_7EM__)
	int32_t out;
	asm volatile("smulwb %0, %1, %2" : "=r" (out) : "r" (a), "r" (b));
    47a0:	smulwb	r1, lr, r2
static inline int32_t signed_multiply_32x16t(int32_t a, uint32_t b) __attribute__((always_inline, unused));
static inline int32_t signed_multiply_32x16t(int32_t a, uint32_t b)
{
#if defined (__ARM_ARCH_7EM__)
	int32_t out;
	asm volatile("smulwt %0, %1, %2" : "=r" (out) : "r" (a), "r" (b));
    47a4:	smulwt	r2, lr, r2
static inline uint32_t pack_16t_16t(int32_t a, int32_t b) __attribute__((always_inline, unused));
static inline uint32_t pack_16t_16t(int32_t a, int32_t b)
{
#if defined (__ARM_ARCH_7EM__)
	int32_t out;
	asm volatile("pkhtb %0, %1, %2, asr #16" : "=r" (out) : "r" (a), "r" (b));
    47a8:	lsls	r2, r2, #1
    47aa:	lsls	r1, r1, #1
    47ac:	pkhtb	r2, r2, r1, asr #16
		env_mult += env_incr;
		tmp2 = signed_multiply_32x16t(env_mult, p[1]) << 1;
		p[1] = pack_16t_16t(tmp2, tmp1);
    47b0:	str	r2, [r3, #20]
		env_mult += env_incr;
		tmp1 = signed_multiply_32x16b(env_mult, p[2]) << 1;
    47b2:	ldr	r2, [r3, #24]
static inline int32_t signed_multiply_32x16b(int32_t a, uint32_t b) __attribute__((always_inline, unused));
static inline int32_t signed_multiply_32x16b(int32_t a, uint32_t b)
{
#if defined (__ARM_ARCH_7EM__)
	int32_t out;
	asm volatile("smulwb %0, %1, %2" : "=r" (out) : "r" (a), "r" (b));
    47b4:	smulwb	r1, lr, r2
static inline int32_t signed_multiply_32x16t(int32_t a, uint32_t b) __attribute__((always_inline, unused));
static inline int32_t signed_multiply_32x16t(int32_t a, uint32_t b)
{
#if defined (__ARM_ARCH_7EM__)
	int32_t out;
	asm volatile("smulwt %0, %1, %2" : "=r" (out) : "r" (a), "r" (b));
    47b8:	smulwt	r2, lr, r2
static inline uint32_t pack_16t_16t(int32_t a, int32_t b) __attribute__((always_inline, unused));
static inline uint32_t pack_16t_16t(int32_t a, int32_t b)
{
#if defined (__ARM_ARCH_7EM__)
	int32_t out;
	asm volatile("pkhtb %0, %1, %2, asr #16" : "=r" (out) : "r" (a), "r" (b));
    47bc:	lsls	r2, r2, #1
    47be:	lsls	r1, r1, #1
    47c0:	pkhtb	r2, r2, r1, asr #16
		env_mult += env_incr;
		tmp2 = signed_multiply_32x16t(env_mult, p[2]) << 1;
		p[2] = pack_16t_16t(tmp2, tmp1);
    47c4:	str	r2, [r3, #24]
		env_mult += env_incr;
		tmp1 = signed_multiply_32x16b(env_mult, p[3]) << 1;
    47c6:	ldr	r2, [r3, #28]
static inline int32_t signed_multiply_32x16b(int32_t a, uint32_t b) __attribute__((always_inline, unused));
static inline int32_t signed_multiply_32x16b(int32_t a, uint32_t b)
{
#if defined (__ARM_ARCH_7EM__)
	int32_t out;
	asm volatile("smulwb %0, %1, %2" : "=r" (out) : "r" (a), "r" (b));
    47c8:	smulwb	r1, lr, r2
static inline int32_t signed_multiply_32x16t(int32_t a, uint32_t b) __attribute__((always_inline, unused));
static inline int32_t signed_multiply_32x16t(int32_t a, uint32_t b)
{
#if defined (__ARM_ARCH_7EM__)
	int32_t out;
	asm volatile("smulwt %0, %1, %2" : "=r" (out) : "r" (a), "r" (b));
    47cc:	smulwt	r2, lr, r2
static inline uint32_t pack_16t_16t(int32_t a, int32_t b) __attribute__((always_inline, unused));
static inline uint32_t pack_16t_16t(int32_t a, int32_t b)
{
#if defined (__ARM_ARCH_7EM__)
	int32_t out;
	asm volatile("pkhtb %0, %1, %2, asr #16" : "=r" (out) : "r" (a), "r" (b));
    47d0:	lsls	r2, r2, #1
    47d2:	lsls	r1, r1, #1
    47d4:	pkhtb	r2, r2, r1, asr #16
		env_mult += env_incr;
		tmp2 = signed_multiply_32x16t(env_mult, p[3]) << 1;
		p[3] = pack_16t_16t(tmp2, tmp1);
    47d8:	str	r2, [r3, #28]

		p += ENVELOPE_PERIOD / 2;
    47da:	adds	r3, #32
	// to centibels. Practically this means the decay and release happen too slowing intially, and too quick
	// near the end

	// other points of note are that one env_count corresponds to 1 second * ENVELOPE_PERIOD / AUDIO_SAMPLE_RATE_EXACT;
	// the ENVELOPE_PERIOD is the number of samples processed per iteration of the following loop
	while (p < end) {
    47dc:	cmp	fp, r3
    47de:	bls.w	4928 <AudioSynthWavetable::update()+0x8e4>
		// note env_count == 0 is used as a trigger for state transition
		if (env_count <= 0) switch (env_state) {
    47e2:	cmp.w	r9, #0
    47e6:	ble.w	45e6 <AudioSynthWavetable::update()+0x5a2>
			env_incr = UNITY_GAIN / (env_count * ENVELOPE_PERIOD);
			PRINT_ENV(STATE_ATTACK);
			continue;
		case STATE_ATTACK:
			env_mult = UNITY_GAIN;
			env_state = STATE_HOLD;
    47ea:	movs	r1, #3
			env_count = s->HOLD_COUNT;
			env_incr = 0;
    47ec:	movs	r2, #0

	// other points of note are that one env_count corresponds to 1 second * ENVELOPE_PERIOD / AUDIO_SAMPLE_RATE_EXACT;
	// the ENVELOPE_PERIOD is the number of samples processed per iteration of the following loop
	while (p < end) {
		// note env_count == 0 is used as a trigger for state transition
		if (env_count <= 0) switch (env_state) {
    47ee:	mvn.w	r8, #2147483648	; 0x80000000
			env_incr = UNITY_GAIN / (env_count * ENVELOPE_PERIOD);
			PRINT_ENV(STATE_ATTACK);
			continue;
		case STATE_ATTACK:
			env_mult = UNITY_GAIN;
			env_state = STATE_HOLD;
    47f2:	str	r1, [sp, #52]	; 0x34
    47f4:	b.n	4294 <AudioSynthWavetable::update()+0x250>
			this->vib_phase = vib_phase;
			this->mod_count = mod_count;
			this->mod_phase = mod_phase;
		}
		else {
			this->vib_count = this->mod_count = 0;
    47f6:	ldr	r0, [sp, #68]	; 0x44
			this->vib_phase = this->mod_phase = TRIANGLE_INITIAL_PHASE;
    47f8:	mov.w	r3, #3221225472	; 0xc0000000
			this->vib_phase = vib_phase;
			this->mod_count = mod_count;
			this->mod_phase = mod_phase;
		}
		else {
			this->vib_count = this->mod_count = 0;
    47fc:	str	r2, [r0, #76]	; 0x4c
    47fe:	str	r2, [r0, #60]	; 0x3c
			this->vib_phase = this->mod_phase = TRIANGLE_INITIAL_PHASE;
    4800:	str	r3, [r0, #80]	; 0x50
    4802:	str	r3, [r0, #64]	; 0x40
    4804:	b.n	44b4 <AudioSynthWavetable::update()+0x470>
	// to centibels. Practically this means the decay and release happen too slowing intially, and too quick
	// near the end

	// other points of note are that one env_count corresponds to 1 second * ENVELOPE_PERIOD / AUDIO_SAMPLE_RATE_EXACT;
	// the ENVELOPE_PERIOD is the number of samples processed per iteration of the following loop
	while (p < end) {
    4806:	ldr	r2, [sp, #24]
    4808:	str	r3, [sp, #76]	; 0x4c
    480a:	cmp	r2, r3
		case STATE_DECAY:
			env_mult = UNITY_GAIN - s->SUSTAIN_MULT;
			// UINT16_MAX is a value approximately corresponding to the -100 dBFS defined in the SoundFont spec as full attenuation
			// hence this comparison either sends the state to indefinite STATE_SUSTAIN, or immediately into STATE_RELEASE -> STATE_IDLE
			env_state = env_mult < UNITY_GAIN / UINT16_MAX ? STATE_RELEASE : STATE_SUSTAIN;
			env_incr = 0;
    480c:	mov.w	r3, #0
    4810:	str.w	r8, [sp, #64]	; 0x40
    4814:	str.w	r9, [sp, #56]	; 0x38
    4818:	ldr.w	r8, [sp, #12]
    481c:	str	r3, [sp, #60]	; 0x3c
	// to centibels. Practically this means the decay and release happen too slowing intially, and too quick
	// near the end

	// other points of note are that one env_count corresponds to 1 second * ENVELOPE_PERIOD / AUDIO_SAMPLE_RATE_EXACT;
	// the ENVELOPE_PERIOD is the number of samples processed per iteration of the following loop
	while (p < end) {
    481e:	bhi.w	4460 <AudioSynthWavetable::update()+0x41c>
			continue;
		case STATE_DECAY:
			env_mult = UNITY_GAIN - s->SUSTAIN_MULT;
			// UINT16_MAX is a value approximately corresponding to the -100 dBFS defined in the SoundFont spec as full attenuation
			// hence this comparison either sends the state to indefinite STATE_SUSTAIN, or immediately into STATE_RELEASE -> STATE_IDLE
			env_state = env_mult < UNITY_GAIN / UINT16_MAX ? STATE_RELEASE : STATE_SUSTAIN;
    4822:	movs	r3, #6
    4824:	str	r3, [sp, #52]	; 0x34
    4826:	b.n	4472 <AudioSynthWavetable::update()+0x42e>
			env_incr = 0;
			PRINT_ENV(STATE_HOLD);
			continue;
		case STATE_HOLD:
			env_state = STATE_DECAY;
			env_count = s->DECAY_COUNT;
    4828:	ldr	r1, [sp, #28]
    482a:	ldr.w	r9, [r1, #44]	; 0x2c
			env_incr = (-s->SUSTAIN_MULT) / (env_count * ENVELOPE_PERIOD);
    482e:	ldr	r1, [r1, #52]	; 0x34
    4830:	mov.w	r2, r9, lsl #3
    4834:	negs	r0, r1
			env_count = s->ATTACK_COUNT;
			env_incr = UNITY_GAIN / (env_count * ENVELOPE_PERIOD);
			PRINT_ENV(STATE_ATTACK);
			continue;
		case STATE_ATTACK:
			env_mult = UNITY_GAIN;
    4836:	mvn.w	r8, #2147483648	; 0x80000000
			PRINT_ENV(STATE_HOLD);
			continue;
		case STATE_HOLD:
			env_state = STATE_DECAY;
			env_count = s->DECAY_COUNT;
			env_incr = (-s->SUSTAIN_MULT) / (env_count * ENVELOPE_PERIOD);
    483a:	sdiv	r2, r0, r2
    483e:	b.n	4604 <AudioSynthWavetable::update()+0x5c0>
			PRINT_ENV(STATE_ATTACK);
			continue;
		case STATE_ATTACK:
			env_mult = UNITY_GAIN;
			env_state = STATE_HOLD;
			env_count = s->HOLD_COUNT;
    4840:	ldr	r2, [sp, #28]
    4842:	ldr.w	r9, [r2, #40]	; 0x28
    4846:	b.n	471a <AudioSynthWavetable::update()+0x6d6>
	// the ENVELOPE_PERIOD is the number of samples processed per iteration of the following loop
	while (p < end) {
		// note env_count == 0 is used as a trigger for state transition
		if (env_count <= 0) switch (env_state) {
		case STATE_DELAY:
			env_state = STATE_ATTACK;
    4848:	movs	r3, #2
    484a:	str.w	r8, [sp, #64]	; 0x40
    484e:	str.w	r9, [sp, #56]	; 0x38
    4852:	ldr.w	r8, [sp, #12]
    4856:	str	r2, [sp, #60]	; 0x3c
    4858:	str	r3, [sp, #52]	; 0x34
    485a:	b.n	4472 <AudioSynthWavetable::update()+0x42e>
	uint32_t vib_count = this->vib_count;
	uint32_t vib_phase = this->vib_phase;
	int32_t vib_pitch_offset_init = this->vib_pitch_offset_init;
	int32_t vib_pitch_offset_scnd = this->vib_pitch_offset_scnd;

	uint32_t mod_count = this->mod_count;
    485c:	str	r4, [sp, #8]
	envelopeStateEnum  env_state = this->env_state;
	int32_t env_count = this->env_count;
	int32_t env_mult = this->env_mult;
	int32_t env_incr = this->env_incr;

	uint32_t vib_count = this->vib_count;
    485e:	str	r5, [sp, #4]
    4860:	b.n	4472 <AudioSynthWavetable::update()+0x42e>
			env_count = s->HOLD_COUNT;
			env_incr = 0;
			PRINT_ENV(STATE_HOLD);
			continue;
		case STATE_HOLD:
			env_state = STATE_DECAY;
    4862:	movs	r3, #4
    4864:	str.w	r8, [sp, #64]	; 0x40
    4868:	str.w	r9, [sp, #56]	; 0x38
    486c:	ldr.w	r8, [sp, #12]
    4870:	str	r2, [sp, #60]	; 0x3c
    4872:	str	r3, [sp, #52]	; 0x34
    4874:	b.n	4472 <AudioSynthWavetable::update()+0x42e>
    4876:	str.w	r8, [sp, #64]	; 0x40
    487a:	str.w	r9, [sp, #56]	; 0x38
    487e:	ldr.w	r8, [sp, #12]
    4882:	str	r2, [sp, #60]	; 0x3c
    4884:	b.n	4472 <AudioSynthWavetable::update()+0x42e>
	// to centibels. Practically this means the decay and release happen too slowing intially, and too quick
	// near the end

	// other points of note are that one env_count corresponds to 1 second * ENVELOPE_PERIOD / AUDIO_SAMPLE_RATE_EXACT;
	// the ENVELOPE_PERIOD is the number of samples processed per iteration of the following loop
	while (p < end) {
    4886:	mvn.w	r3, #2147483648	; 0x80000000
    488a:	str.w	r8, [sp, #64]	; 0x40
    488e:	str	r2, [sp, #60]	; 0x3c
    4890:	ldr.w	r8, [sp, #12]
    4894:	str	r3, [sp, #56]	; 0x38
    4896:	b.n	4472 <AudioSynthWavetable::update()+0x42e>
			continue;
		case STATE_ATTACK:
			env_mult = UNITY_GAIN;
			env_state = STATE_HOLD;
			env_count = s->HOLD_COUNT;
			env_incr = 0;
    4898:	movs	r3, #0
    489a:	str	r3, [sp, #60]	; 0x3c
			env_count = s->ATTACK_COUNT;
			env_incr = UNITY_GAIN / (env_count * ENVELOPE_PERIOD);
			PRINT_ENV(STATE_ATTACK);
			continue;
		case STATE_ATTACK:
			env_mult = UNITY_GAIN;
    489c:	mvn.w	r3, #2147483648	; 0x80000000
    48a0:	str	r3, [sp, #64]	; 0x40
			env_state = STATE_HOLD;
    48a2:	movs	r3, #3
    48a4:	ldr.w	r8, [sp, #12]
    48a8:	str.w	r9, [sp, #56]	; 0x38
    48ac:	str	r3, [sp, #52]	; 0x34
    48ae:	b.n	4472 <AudioSynthWavetable::update()+0x42e>
	// to centibels. Practically this means the decay and release happen too slowing intially, and too quick
	// near the end

	// other points of note are that one env_count corresponds to 1 second * ENVELOPE_PERIOD / AUDIO_SAMPLE_RATE_EXACT;
	// the ENVELOPE_PERIOD is the number of samples processed per iteration of the following loop
	while (p < end) {
    48b0:	ldr	r3, [pc, #132]	; (4938 <AudioSynthWavetable::update()+0x8f4>)
    48b2:	str	r3, [sp, #56]	; 0x38
    48b4:	movs	r3, #5
    48b6:	str.w	r8, [sp, #64]	; 0x40
    48ba:	str	r2, [sp, #60]	; 0x3c
    48bc:	ldr.w	r8, [sp, #12]
    48c0:	str	r3, [sp, #52]	; 0x34
    48c2:	b.n	4472 <AudioSynthWavetable::update()+0x42e>
		// note env_count == 0 is used as a trigger for state transition
		if (env_count <= 0) switch (env_state) {
		case STATE_DELAY:
			env_state = STATE_ATTACK;
    48c4:	movs	r3, #2
    48c6:	str.w	r8, [sp, #64]	; 0x40
    48ca:	str	r2, [sp, #60]	; 0x3c
    48cc:	ldr.w	r8, [sp, #12]
	// to centibels. Practically this means the decay and release happen too slowing intially, and too quick
	// near the end

	// other points of note are that one env_count corresponds to 1 second * ENVELOPE_PERIOD / AUDIO_SAMPLE_RATE_EXACT;
	// the ENVELOPE_PERIOD is the number of samples processed per iteration of the following loop
	while (p < end) {
    48d0:	str	r6, [sp, #56]	; 0x38
		// note env_count == 0 is used as a trigger for state transition
		if (env_count <= 0) switch (env_state) {
		case STATE_DELAY:
			env_state = STATE_ATTACK;
    48d2:	str	r3, [sp, #52]	; 0x34
    48d4:	b.n	4472 <AudioSynthWavetable::update()+0x42e>
    48d6:	ldr.w	r8, [sp, #12]
	// to centibels. Practically this means the decay and release happen too slowing intially, and too quick
	// near the end

	// other points of note are that one env_count corresponds to 1 second * ENVELOPE_PERIOD / AUDIO_SAMPLE_RATE_EXACT;
	// the ENVELOPE_PERIOD is the number of samples processed per iteration of the following loop
	while (p < end) {
    48da:	str	r2, [sp, #56]	; 0x38
    48dc:	mvn.w	r3, #2147483648	; 0x80000000
    48e0:	str	r3, [sp, #64]	; 0x40
			continue;
		case STATE_ATTACK:
			env_mult = UNITY_GAIN;
			env_state = STATE_HOLD;
			env_count = s->HOLD_COUNT;
			env_incr = 0;
    48e2:	movs	r3, #0
    48e4:	str	r3, [sp, #60]	; 0x3c
			env_incr = UNITY_GAIN / (env_count * ENVELOPE_PERIOD);
			PRINT_ENV(STATE_ATTACK);
			continue;
		case STATE_ATTACK:
			env_mult = UNITY_GAIN;
			env_state = STATE_HOLD;
    48e6:	movs	r3, #3
    48e8:	str	r3, [sp, #52]	; 0x34
    48ea:	b.n	4472 <AudioSynthWavetable::update()+0x42e>
		case STATE_DECAY:
			env_mult = UNITY_GAIN - s->SUSTAIN_MULT;
			// UINT16_MAX is a value approximately corresponding to the -100 dBFS defined in the SoundFont spec as full attenuation
			// hence this comparison either sends the state to indefinite STATE_SUSTAIN, or immediately into STATE_RELEASE -> STATE_IDLE
			env_state = env_mult < UNITY_GAIN / UINT16_MAX ? STATE_RELEASE : STATE_SUSTAIN;
			env_incr = 0;
    48ec:	movs	r3, #0
    48ee:	str	r3, [sp, #60]	; 0x3c
			continue;
		case STATE_DECAY:
			env_mult = UNITY_GAIN - s->SUSTAIN_MULT;
			// UINT16_MAX is a value approximately corresponding to the -100 dBFS defined in the SoundFont spec as full attenuation
			// hence this comparison either sends the state to indefinite STATE_SUSTAIN, or immediately into STATE_RELEASE -> STATE_IDLE
			env_state = env_mult < UNITY_GAIN / UINT16_MAX ? STATE_RELEASE : STATE_SUSTAIN;
    48f0:	movs	r3, #5
    48f2:	str.w	r8, [sp, #64]	; 0x40
    48f6:	str.w	r9, [sp, #56]	; 0x38
    48fa:	ldr.w	r8, [sp, #12]
    48fe:	str	r3, [sp, #52]	; 0x34
    4900:	b.n	4472 <AudioSynthWavetable::update()+0x42e>
	// to centibels. Practically this means the decay and release happen too slowing intially, and too quick
	// near the end

	// other points of note are that one env_count corresponds to 1 second * ENVELOPE_PERIOD / AUDIO_SAMPLE_RATE_EXACT;
	// the ENVELOPE_PERIOD is the number of samples processed per iteration of the following loop
	while (p < end) {
    4902:	ldr	r3, [pc, #56]	; (493c <AudioSynthWavetable::update()+0x8f8>)
    4904:	str	r3, [sp, #56]	; 0x38
    4906:	movs	r3, #5
    4908:	str.w	r8, [sp, #64]	; 0x40
    490c:	str	r2, [sp, #60]	; 0x3c
    490e:	ldr.w	r8, [sp, #12]
    4912:	str	r3, [sp, #52]	; 0x34
    4914:	b.n	4472 <AudioSynthWavetable::update()+0x42e>
			env_count = s->HOLD_COUNT;
			env_incr = 0;
			PRINT_ENV(STATE_HOLD);
			continue;
		case STATE_HOLD:
			env_state = STATE_DECAY;
    4916:	movs	r3, #4
    4918:	str.w	r8, [sp, #64]	; 0x40
    491c:	str	r2, [sp, #60]	; 0x3c
    491e:	ldr.w	r8, [sp, #12]
	// to centibels. Practically this means the decay and release happen too slowing intially, and too quick
	// near the end

	// other points of note are that one env_count corresponds to 1 second * ENVELOPE_PERIOD / AUDIO_SAMPLE_RATE_EXACT;
	// the ENVELOPE_PERIOD is the number of samples processed per iteration of the following loop
	while (p < end) {
    4922:	str	r6, [sp, #56]	; 0x38
			env_count = s->HOLD_COUNT;
			env_incr = 0;
			PRINT_ENV(STATE_HOLD);
			continue;
		case STATE_HOLD:
			env_state = STATE_DECAY;
    4924:	str	r3, [sp, #52]	; 0x34
    4926:	b.n	4472 <AudioSynthWavetable::update()+0x42e>
    4928:	ldr.w	r8, [sp, #12]
    492c:	str.w	r9, [sp, #56]	; 0x38
    4930:	b.n	48dc <AudioSynthWavetable::update()+0x898>
			// pack the two output samples into the audio_block
			*p = pack_16b_16b(s2, s1);
		}
	}
	// fill with 0s if non-looping sample that ended prematurely
	if (p < end) {
    4932:	str	r4, [sp, #8]
    4934:	str	r5, [sp, #4]
    4936:	b.n	4276 <AudioSynthWavetable::update()+0x232>
    4938:	.word	0x7ffffffe
    493c:	.word	0x7ffffffd

00004940 <AudioSynthWavetable::stop()>:
 * Waveform does not immediately stop,
 * but fades out based on release time.
 *
 */
void AudioSynthWavetable::stop(void) {
	cli();
    4940:	cpsid	i
	if (env_state != STATE_IDLE) {
    4942:	ldrb.w	r3, [r0, #46]	; 0x2e
    4946:	cbz	r3, 4966 <AudioSynthWavetable::stop()+0x26>
		env_state = STATE_RELEASE;
    4948:	movs	r2, #6
		env_count = current_sample->RELEASE_COUNT;
    494a:	ldr	r3, [r0, #32]
 *
 */
void AudioSynthWavetable::stop(void) {
	cli();
	if (env_state != STATE_IDLE) {
		env_state = STATE_RELEASE;
    494c:	strb.w	r2, [r0, #46]	; 0x2e
		env_count = current_sample->RELEASE_COUNT;
    4950:	ldr	r3, [r3, #48]	; 0x30
    4952:	str	r3, [r0, #48]	; 0x30
		if (env_count == 0) env_count = 1;
    4954:	ldr	r3, [r0, #48]	; 0x30
    4956:	cbz	r3, 496a <AudioSynthWavetable::stop()+0x2a>
		env_incr = -(env_mult) / (env_count * ENVELOPE_PERIOD);
    4958:	ldr	r2, [r0, #52]	; 0x34
    495a:	ldr	r3, [r0, #48]	; 0x30
    495c:	negs	r2, r2
    495e:	lsls	r3, r3, #3
    4960:	sdiv	r3, r2, r3
    4964:	str	r3, [r0, #56]	; 0x38
	}
	PRINT_ENV(STATE_RELEASE);
	sei();
    4966:	cpsie	i
    4968:	bx	lr
void AudioSynthWavetable::stop(void) {
	cli();
	if (env_state != STATE_IDLE) {
		env_state = STATE_RELEASE;
		env_count = current_sample->RELEASE_COUNT;
		if (env_count == 0) env_count = 1;
    496a:	movs	r3, #1
    496c:	str	r3, [r0, #48]	; 0x30
    496e:	b.n	4958 <AudioSynthWavetable::stop()+0x18>

00004970 <AudioSynthWavetable::setFrequency(float)>:
 * variation in playback frequency (aka vibrato). Further details on implementation in update() and in sample_data.h.
 *
 * @param freq frequency of the generated output (between 0 and the board-specific sample rate)
 */
void AudioSynthWavetable::setFrequency(float freq) {
	float tone_incr_temp = freq * current_sample->PER_HERTZ_PHASE_INCREMENT;
    4970:	ldr	r3, [r0, #32]
    4972:	vldr	s15, [r3, #12]
    4976:	vmul.f32	s0, s15, s0
	tone_incr = tone_incr_temp;
    497a:	vcvt.u32.f32	s15, s0
    497e:	vstr	s15, [r0, #40]	; 0x28
	vib_pitch_offset_init = tone_incr_temp * current_sample->VIBRATO_PITCH_COEFFICIENT_INITIAL;
    4982:	vldr	s15, [r3, #64]	; 0x40
    4986:	vmul.f32	s15, s0, s15
    498a:	vcvt.s32.f32	s15, s15
    498e:	vstr	s15, [r0, #68]	; 0x44
	vib_pitch_offset_scnd = tone_incr_temp * current_sample->VIBRATO_PITCH_COEFFICIENT_SECOND;
    4992:	vldr	s15, [r3, #68]	; 0x44
    4996:	vmul.f32	s15, s0, s15
    499a:	vcvt.s32.f32	s15, s15
    499e:	vstr	s15, [r0, #72]	; 0x48
	mod_pitch_offset_init = tone_incr_temp * current_sample->MODULATION_PITCH_COEFFICIENT_INITIAL;
    49a2:	vldr	s15, [r3, #80]	; 0x50
    49a6:	vmul.f32	s15, s0, s15
    49aa:	vcvt.s32.f32	s15, s15
    49ae:	vstr	s15, [r0, #84]	; 0x54
	mod_pitch_offset_scnd = tone_incr_temp * current_sample->MODULATION_PITCH_COEFFICIENT_SECOND;
    49b2:	vldr	s15, [r3, #84]	; 0x54
    49b6:	vmul.f32	s0, s0, s15
    49ba:	vcvt.s32.f32	s0, s0
    49be:	vstr	s0, [r0, #88]	; 0x58
    49c2:	bx	lr

000049c4 <AudioSynthWavetable::setState(int, int, float)>:
 *
 * @param note Midi note number to play, value between 0-127
 * @param amp the amplitude level at which playback should occur
 * @param freq exact frequency of the note to be played played
 */
void AudioSynthWavetable::setState(int note, int amp, float freq) {
    49c4:	push	{r3, r4, r5, lr}
	cli();
    49c6:	cpsid	i
	int i;
	env_state = STATE_IDLE;
    49c8:	movs	r3, #0
	// note ranges calculated by sound font decoder
	for (i = 0; note > instrument->sample_note_ranges[i]; i++);
    49ca:	ldr	r5, [r0, #28]
 * @param freq exact frequency of the note to be played played
 */
void AudioSynthWavetable::setState(int note, int amp, float freq) {
	cli();
	int i;
	env_state = STATE_IDLE;
    49cc:	strb.w	r3, [r0, #46]	; 0x2e
	// note ranges calculated by sound font decoder
	for (i = 0; note > instrument->sample_note_ranges[i]; i++);
    49d0:	ldr	r4, [r5, #4]
    49d2:	ldrb	r4, [r4, #0]
    49d4:	cmp	r1, r4
    49d6:	ble.n	49e8 <AudioSynthWavetable::setState(int, int, float)+0x24>
    49d8:	adds	r3, #1
    49da:	ldr	r4, [r5, #4]
    49dc:	ldrb	r4, [r4, r3]
    49de:	cmp	r4, r1
    49e0:	blt.n	49d8 <AudioSynthWavetable::setState(int, int, float)+0x14>
    49e2:	add.w	r3, r3, r3, lsl #1
    49e6:	lsls	r3, r3, #5
	current_sample = &instrument->samples[i];
    49e8:	ldr	r1, [r5, #8]
    49ea:	add	r3, r1
    49ec:	str	r3, [r0, #32]
	if (current_sample == NULL) {
    49ee:	cbz	r3, 4a32 <AudioSynthWavetable::setState(int, int, float)+0x6e>
    49f0:	mov	r1, r0
		sei();
		return;
	}
	setFrequency(freq);
    49f2:	bl	4970 <AudioSynthWavetable::setFrequency(float)>
	vib_count = mod_count = tone_phase = env_incr = env_mult = 0;
	vib_phase = mod_phase = TRIANGLE_INITIAL_PHASE;
    49f6:	mov.w	r4, #3221225472	; 0xc0000000
	env_count = current_sample->DELAY_COUNT;
    49fa:	ldr	r0, [r0, #32]
	if (current_sample == NULL) {
		sei();
		return;
	}
	setFrequency(freq);
	vib_count = mod_count = tone_phase = env_incr = env_mult = 0;
    49fc:	movs	r3, #0
	vib_phase = mod_phase = TRIANGLE_INITIAL_PHASE;
	env_count = current_sample->DELAY_COUNT;
	// linear scalar for amp with UINT16_MAX being no attenuation
	tone_amp = amp * (UINT16_MAX / 127);
    49fe:	add.w	r2, r2, r2, lsl #7
	if (current_sample == NULL) {
		sei();
		return;
	}
	setFrequency(freq);
	vib_count = mod_count = tone_phase = env_incr = env_mult = 0;
    4a02:	str	r3, [r1, #52]	; 0x34
	vib_phase = mod_phase = TRIANGLE_INITIAL_PHASE;
	env_count = current_sample->DELAY_COUNT;
	// linear scalar for amp with UINT16_MAX being no attenuation
	tone_amp = amp * (UINT16_MAX / 127);
    4a04:	lsls	r2, r2, #2
	if (current_sample == NULL) {
		sei();
		return;
	}
	setFrequency(freq);
	vib_count = mod_count = tone_phase = env_incr = env_mult = 0;
    4a06:	str	r3, [r1, #56]	; 0x38
    4a08:	str	r3, [r1, #36]	; 0x24
    4a0a:	str	r3, [r1, #76]	; 0x4c
    4a0c:	str	r3, [r1, #60]	; 0x3c
	vib_phase = mod_phase = TRIANGLE_INITIAL_PHASE;
    4a0e:	str	r4, [r1, #80]	; 0x50
    4a10:	str	r4, [r1, #64]	; 0x40
	env_count = current_sample->DELAY_COUNT;
    4a12:	ldr	r3, [r0, #32]
    4a14:	str	r3, [r1, #48]	; 0x30
	// linear scalar for amp with UINT16_MAX being no attenuation
	tone_amp = amp * (UINT16_MAX / 127);
    4a16:	uxth	r2, r2
    4a18:	strh	r2, [r1, #44]	; 0x2c
	// scale relative to initial attenuation defined by soundfont file
	tone_amp = current_sample->INITIAL_ATTENUATION_SCALAR * tone_amp >> 16;
    4a1a:	ldrh	r2, [r0, #28]
    4a1c:	ldrh	r3, [r1, #44]	; 0x2c
    4a1e:	uxth	r2, r2
    4a20:	uxth	r3, r3
    4a22:	mul.w	r3, r3, r2
    4a26:	lsrs	r3, r3, #16
	env_state = STATE_DELAY;
    4a28:	movs	r2, #1
	vib_phase = mod_phase = TRIANGLE_INITIAL_PHASE;
	env_count = current_sample->DELAY_COUNT;
	// linear scalar for amp with UINT16_MAX being no attenuation
	tone_amp = amp * (UINT16_MAX / 127);
	// scale relative to initial attenuation defined by soundfont file
	tone_amp = current_sample->INITIAL_ATTENUATION_SCALAR * tone_amp >> 16;
    4a2a:	strh	r3, [r1, #44]	; 0x2c
	env_state = STATE_DELAY;
    4a2c:	strb.w	r2, [r1, #46]	; 0x2e
	PRINT_ENV(STATE_DELAY);
	state_change = true;
    4a30:	strb	r2, [r1, #24]
	sei();
    4a32:	cpsie	i
    4a34:	pop	{r3, r4, r5, pc}
    4a36:	nop

00004a38 <AudioSynthWavetable::playNote(int, int)>:
 * @brief Play sample at specified note, amplitude.
 *
 * @param note Midi note number to playback, value between 0-127
 * @param amp Amplitude scaling of playback, value between 0-127, with 127 being base volume
 */
void AudioSynthWavetable::playNote(int note, int amp) {
    4a38:	push	{r4, r5, lr}
	 * @param note a value between 0 and 127
	 * @return a frequency
	 */
	static float noteToFreq(int note) {
		float exp = note * (1.0 / 12.0) + 3.0313597;
		return powf(2.0, exp);
    4a3a:	vmov	s15, r1
    4a3e:	vldr	s1, [pc, #48]	; 4a70 <AudioSynthWavetable::playNote(int, int)+0x38>
    4a42:	vcvt.f32.s32	s14, s15
    4a46:	vldr	s15, [pc, #44]	; 4a74 <AudioSynthWavetable::playNote(int, int)+0x3c>
    4a4a:	sub	sp, #12
    4a4c:	vfma.f32	s1, s14, s15
    4a50:	str	r1, [sp, #4]
    4a52:	mov	r4, r0
    4a54:	vmov.f32	s0, #0	; 0x40000000  2.0
    4a58:	mov	r5, r2
    4a5a:	bl	a090 <powf>
	setState(note, amp, noteToFreq(note));
    4a5e:	ldr	r1, [sp, #4]
    4a60:	mov	r2, r5
    4a62:	mov	r0, r4
}
    4a64:	add	sp, #12
    4a66:	ldmia.w	sp!, {r4, r5, lr}
 *
 * @param note Midi note number to playback, value between 0-127
 * @param amp Amplitude scaling of playback, value between 0-127, with 127 being base volume
 */
void AudioSynthWavetable::playNote(int note, int amp) {
	setState(note, amp, noteToFreq(note));
    4a6a:	b.w	49c4 <AudioSynthWavetable::setState(int, int, float)>
    4a6e:	nop
    4a70:	.word	0x404201cc
    4a74:	.word	0x3daaaaab

00004a78 <_GLOBAL__sub_I__ZN13AudioInputPDM10block_leftE>:

DMAMEM static uint32_t pdm_buffer[AUDIO_BLOCK_SAMPLES*4];
static uint32_t leftover[14];
audio_block_t * AudioInputPDM::block_left = NULL;
bool AudioInputPDM::update_responsibility = false;
DMAChannel AudioInputPDM::dma(false);
    4a78:	ldr	r2, [pc, #8]	; (4a84 <_GLOBAL__sub_I__ZN13AudioInputPDM10block_leftE+0xc>)
    4a7a:	ldr	r1, [pc, #12]	; (4a88 <_GLOBAL__sub_I__ZN13AudioInputPDM10block_leftE+0x10>)
    4a7c:	ldr	r0, [pc, #12]	; (4a8c <_GLOBAL__sub_I__ZN13AudioInputPDM10block_leftE+0x14>)
    4a7e:	b.w	b944 <__aeabi_atexit>
    4a82:	nop
    4a84:	.word	0x20007db0
    4a88:	.word	0x00003021
    4a8c:	.word	0x20012740

00004a90 <_GLOBAL__sub_I__ZN14AudioOutputTDM11block_inputE>:
audio_block_t * AudioOutputTDM::block_input[16] = {
	nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr,
	nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr
};
bool AudioOutputTDM::update_responsibility = false;
DMAChannel AudioOutputTDM::dma(false);
    4a90:	ldr	r2, [pc, #8]	; (4a9c <_GLOBAL__sub_I__ZN14AudioOutputTDM11block_inputE+0xc>)
    4a92:	ldr	r1, [pc, #12]	; (4aa0 <_GLOBAL__sub_I__ZN14AudioOutputTDM11block_inputE+0x10>)
    4a94:	ldr	r0, [pc, #12]	; (4aa4 <_GLOBAL__sub_I__ZN14AudioOutputTDM11block_inputE+0x14>)
    4a96:	b.w	b944 <__aeabi_atexit>
    4a9a:	nop
    4a9c:	.word	0x20007db0
    4aa0:	.word	0x00003021
    4aa4:	.word	0x20012748

00004aa8 <AudioOutputI2S::isr()>:
	dma.attachInterrupt(isr);
}
#endif

void AudioOutputI2S::isr(void)
{
    4aa8:	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
#if defined(KINETISK) || defined(__IMXRT1052__) || defined(__IMXRT1062__)
	int16_t *dest;
	audio_block_t *blockL, *blockR;
	uint32_t saddr, offsetL, offsetR;

	saddr = (uint32_t)(dma.TCD->SADDR);
    4aac:	ldr	r3, [pc, #204]	; (4b7c <AudioOutputI2S::isr()+0xd4>)
	dma.clearInterrupt();
	if (saddr < (uint32_t)i2s_tx_buffer + sizeof(i2s_tx_buffer) / 2) {
    4aae:	ldr	r0, [pc, #208]	; (4b80 <AudioOutputI2S::isr()+0xd8>)
#if defined(KINETISK) || defined(__IMXRT1052__) || defined(__IMXRT1062__)
	int16_t *dest;
	audio_block_t *blockL, *blockR;
	uint32_t saddr, offsetL, offsetR;

	saddr = (uint32_t)(dma.TCD->SADDR);
    4ab0:	ldr	r2, [r3, #0]
	void detachInterrupt(void) {
		NVIC_DISABLE_IRQ(IRQ_DMA_CH0 + channel);
	}

	void clearInterrupt(void) {
		DMA_CINT = channel;
    4ab2:	ldr	r1, [pc, #208]	; (4b84 <AudioOutputI2S::isr()+0xdc>)
    4ab4:	ldr	r2, [r2, #0]
    4ab6:	ldrb	r3, [r3, #4]
    4ab8:	strb	r3, [r1, #0]
	dma.clearInterrupt();
	if (saddr < (uint32_t)i2s_tx_buffer + sizeof(i2s_tx_buffer) / 2) {
    4aba:	cmp	r2, r0
    4abc:	bcs.n	4b12 <AudioOutputI2S::isr()+0x6a>
		// DMA is transmitting the first half of the buffer
		// so we must fill the second half
		dest = (int16_t *)&i2s_tx_buffer[AUDIO_BLOCK_SAMPLES/2];
		if (AudioOutputI2S::update_responsibility) AudioStream::update_all();
    4abe:	ldr	r3, [pc, #200]	; (4b88 <AudioOutputI2S::isr()+0xe0>)
    4ac0:	ldrb	r3, [r3, #0]
    4ac2:	cbnz	r3, 4b18 <AudioOutputI2S::isr()+0x70>
		// DMA is transmitting the second half of the buffer
		// so we must fill the first half
		dest = (int16_t *)i2s_tx_buffer;
	}

	blockL = AudioOutputI2S::block_left_1st;
    4ac4:	ldr.w	sl, [pc, #208]	; 4b98 <AudioOutputI2S::isr()+0xf0>
	blockR = AudioOutputI2S::block_right_1st;
    4ac8:	ldr.w	r9, [pc, #208]	; 4b9c <AudioOutputI2S::isr()+0xf4>
	offsetL = AudioOutputI2S::block_left_offset;
    4acc:	ldr.w	r8, [pc, #208]	; 4ba0 <AudioOutputI2S::isr()+0xf8>
	offsetR = AudioOutputI2S::block_right_offset;
    4ad0:	ldr.w	fp, [pc, #208]	; 4ba4 <AudioOutputI2S::isr()+0xfc>
		// DMA is transmitting the second half of the buffer
		// so we must fill the first half
		dest = (int16_t *)i2s_tx_buffer;
	}

	blockL = AudioOutputI2S::block_left_1st;
    4ad4:	ldr.w	r6, [sl]
	blockR = AudioOutputI2S::block_right_1st;
    4ad8:	ldr.w	r7, [r9]
	offsetL = AudioOutputI2S::block_left_offset;
    4adc:	ldrh.w	r4, [r8]
	offsetR = AudioOutputI2S::block_right_offset;
    4ae0:	ldrh.w	r5, [fp]

	if (blockL && blockR) {
    4ae4:	cmp	r6, #0
    4ae6:	beq.n	4b60 <AudioOutputI2S::isr()+0xb8>
    4ae8:	cbz	r7, 4b52 <AudioOutputI2S::isr()+0xaa>
		memcpy_tointerleaveLR(dest, blockL->data + offsetL, blockR->data + offsetR);
    4aea:	adds	r2, r7, #4
    4aec:	adds	r1, r6, #4
    4aee:	add.w	r2, r2, r5, lsl #1
    4af2:	add.w	r1, r1, r4, lsl #1
    4af6:	bl	6e18 <memcpy_tointerleaveLR>
		offsetL += AUDIO_BLOCK_SAMPLES / 2;
		offsetR += AUDIO_BLOCK_SAMPLES / 2;
    4afa:	adds	r5, #64	; 0x40
	offsetL = AudioOutputI2S::block_left_offset;
	offsetR = AudioOutputI2S::block_right_offset;

	if (blockL && blockR) {
		memcpy_tointerleaveLR(dest, blockL->data + offsetL, blockR->data + offsetR);
		offsetL += AUDIO_BLOCK_SAMPLES / 2;
    4afc:	adds	r4, #64	; 0x40

	#if IMXRT_CACHE_ENABLED >= 2		
	arm_dcache_flush_delete(dest, sizeof(i2s_tx_buffer) / 2 );
	#endif
	
	if (offsetL < AUDIO_BLOCK_SAMPLES) {
    4afe:	cmp	r4, #127	; 0x7f
    4b00:	bhi.n	4b3a <AudioOutputI2S::isr()+0x92>
		AudioOutputI2S::block_left_offset = offsetL;
    4b02:	strh.w	r4, [r8]
		AudioOutputI2S::block_left_offset = 0;
		AudioStream::release(blockL);
		AudioOutputI2S::block_left_1st = AudioOutputI2S::block_left_2nd;
		AudioOutputI2S::block_left_2nd = NULL;
	}
	if (offsetR < AUDIO_BLOCK_SAMPLES) {
    4b06:	cmp	r5, #127	; 0x7f
    4b08:	bhi.n	4b20 <AudioOutputI2S::isr()+0x78>
		AudioOutputI2S::block_right_offset = offsetR;
    4b0a:	strh.w	r5, [fp]
    4b0e:	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
		dest = (int16_t *)&i2s_tx_buffer[AUDIO_BLOCK_SAMPLES/2];
		if (AudioOutputI2S::update_responsibility) AudioStream::update_all();
	} else {
		// DMA is transmitting the second half of the buffer
		// so we must fill the first half
		dest = (int16_t *)i2s_tx_buffer;
    4b12:	sub.w	r0, r0, #256	; 0x100
    4b16:	b.n	4ac4 <AudioOutputI2S::isr()+0x1c>
	void transmit(audio_block_t *block, unsigned char index = 0);
	audio_block_t * receiveReadOnly(unsigned int index = 0);
	audio_block_t * receiveWritable(unsigned int index = 0);
	static bool update_setup(void);
	static void update_stop(void);
	static void update_all(void) { NVIC_SET_PENDING(IRQ_SOFTWARE); }
    4b18:	ldr	r3, [pc, #112]	; (4b8c <AudioOutputI2S::isr()+0xe4>)
    4b1a:	movs	r2, #1
    4b1c:	str	r2, [r3, #0]
    4b1e:	b.n	4ac4 <AudioOutputI2S::isr()+0x1c>
		AudioOutputI2S::block_left_2nd = NULL;
	}
	if (offsetR < AUDIO_BLOCK_SAMPLES) {
		AudioOutputI2S::block_right_offset = offsetR;
	} else {
		AudioOutputI2S::block_right_offset = 0;
    4b20:	movs	r4, #0
		AudioStream::release(blockR);
    4b22:	mov	r0, r7
		AudioOutputI2S::block_left_2nd = NULL;
	}
	if (offsetR < AUDIO_BLOCK_SAMPLES) {
		AudioOutputI2S::block_right_offset = offsetR;
	} else {
		AudioOutputI2S::block_right_offset = 0;
    4b24:	strh.w	r4, [fp]
		AudioStream::release(blockR);
    4b28:	bl	9664 <AudioStream::release(audio_block_struct*)>
		AudioOutputI2S::block_right_1st = AudioOutputI2S::block_right_2nd;
    4b2c:	ldr	r3, [pc, #96]	; (4b90 <AudioOutputI2S::isr()+0xe8>)
    4b2e:	ldr	r2, [r3, #0]
    4b30:	str.w	r2, [r9]
		AudioOutputI2S::block_right_2nd = NULL;
    4b34:	str	r4, [r3, #0]
    4b36:	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
	#endif
	
	if (offsetL < AUDIO_BLOCK_SAMPLES) {
		AudioOutputI2S::block_left_offset = offsetL;
	} else {
		AudioOutputI2S::block_left_offset = 0;
    4b3a:	movs	r4, #0
		AudioStream::release(blockL);
    4b3c:	mov	r0, r6
	#endif
	
	if (offsetL < AUDIO_BLOCK_SAMPLES) {
		AudioOutputI2S::block_left_offset = offsetL;
	} else {
		AudioOutputI2S::block_left_offset = 0;
    4b3e:	strh.w	r4, [r8]
		AudioStream::release(blockL);
    4b42:	bl	9664 <AudioStream::release(audio_block_struct*)>
		AudioOutputI2S::block_left_1st = AudioOutputI2S::block_left_2nd;
    4b46:	ldr	r3, [pc, #76]	; (4b94 <AudioOutputI2S::isr()+0xec>)
    4b48:	ldr	r2, [r3, #0]
    4b4a:	str.w	r2, [sl]
		AudioOutputI2S::block_left_2nd = NULL;
    4b4e:	str	r4, [r3, #0]
    4b50:	b.n	4b06 <AudioOutputI2S::isr()+0x5e>
	if (blockL && blockR) {
		memcpy_tointerleaveLR(dest, blockL->data + offsetL, blockR->data + offsetR);
		offsetL += AUDIO_BLOCK_SAMPLES / 2;
		offsetR += AUDIO_BLOCK_SAMPLES / 2;
	} else if (blockL) {
		memcpy_tointerleaveL(dest, blockL->data + offsetL);
    4b52:	adds	r1, r6, #4
    4b54:	add.w	r1, r1, r4, lsl #1
    4b58:	bl	6e56 <memcpy_tointerleaveL>
		offsetL += AUDIO_BLOCK_SAMPLES / 2;
    4b5c:	adds	r4, #64	; 0x40
    4b5e:	b.n	4afe <AudioOutputI2S::isr()+0x56>
	} else if (blockR) {
    4b60:	cbz	r7, 4b70 <AudioOutputI2S::isr()+0xc8>
		memcpy_tointerleaveR(dest, blockR->data + offsetR);
    4b62:	adds	r1, r7, #4
    4b64:	add.w	r1, r1, r5, lsl #1
    4b68:	bl	6e96 <memcpy_tointerleaveR>
		offsetR += AUDIO_BLOCK_SAMPLES / 2;
    4b6c:	adds	r5, #64	; 0x40
    4b6e:	b.n	4afe <AudioOutputI2S::isr()+0x56>
	} else {
		memset(dest,0,AUDIO_BLOCK_SAMPLES * 2);
    4b70:	mov.w	r2, #256	; 0x100
    4b74:	mov	r1, r7
    4b76:	bl	c110 <memset>
    4b7a:	b.n	4afe <AudioOutputI2S::isr()+0x56>
    4b7c:	.word	0x20012754
    4b80:	.word	0x200070a0
    4b84:	.word	0x4000801f
    4b88:	.word	0x2001276c
    4b8c:	.word	0xe000e208
    4b90:	.word	0x20012768
    4b94:	.word	0x20012770
    4b98:	.word	0x20012764
    4b9c:	.word	0x2001275c
    4ba0:	.word	0x20012750
    4ba4:	.word	0x20012760

00004ba8 <AudioOutputI2S::update()>:




void AudioOutputI2S::update(void)
{
    4ba8:	push	{r4, r5, r6, lr}
	//if (!active) return;
	//audio_block_t *block = receiveReadOnly();
	//if (block) release(block);

	audio_block_t *block;
	block = receiveReadOnly(0); // input 0 = left channel
    4baa:	movs	r1, #0




void AudioOutputI2S::update(void)
{
    4bac:	mov	r4, r0
	//if (!active) return;
	//audio_block_t *block = receiveReadOnly();
	//if (block) release(block);

	audio_block_t *block;
	block = receiveReadOnly(0); // input 0 = left channel
    4bae:	bl	96ec <AudioStream::receiveReadOnly(unsigned int)>
	if (block) {
    4bb2:	cbz	r0, 4bd6 <AudioOutputI2S::update()+0x2e>
		__disable_irq();
    4bb4:	cpsid	i
		if (block_left_1st == NULL) {
    4bb6:	ldr	r2, [pc, #112]	; (4c28 <AudioOutputI2S::update()+0x80>)
    4bb8:	ldr	r3, [r2, #0]
    4bba:	cmp	r3, #0
    4bbc:	beq.n	4c12 <AudioOutputI2S::update()+0x6a>
			block_left_1st = block;
			block_left_offset = 0;
			__enable_irq();
		} else if (block_left_2nd == NULL) {
    4bbe:	ldr	r1, [pc, #108]	; (4c2c <AudioOutputI2S::update()+0x84>)
    4bc0:	ldr	r5, [r1, #0]
    4bc2:	cbz	r5, 4c06 <AudioOutputI2S::update()+0x5e>
			__enable_irq();
		} else {
			audio_block_t *tmp = block_left_1st;
			block_left_1st = block_left_2nd;
			block_left_2nd = block;
			block_left_offset = 0;
    4bc4:	ldr	r6, [pc, #104]	; (4c30 <AudioOutputI2S::update()+0x88>)
		} else if (block_left_2nd == NULL) {
			block_left_2nd = block;
			__enable_irq();
		} else {
			audio_block_t *tmp = block_left_1st;
			block_left_1st = block_left_2nd;
    4bc6:	str	r5, [r2, #0]
			block_left_2nd = block;
			block_left_offset = 0;
    4bc8:	movs	r2, #0
			block_left_2nd = block;
			__enable_irq();
		} else {
			audio_block_t *tmp = block_left_1st;
			block_left_1st = block_left_2nd;
			block_left_2nd = block;
    4bca:	str	r0, [r1, #0]
			block_left_offset = 0;
    4bcc:	strh	r2, [r6, #0]
			__enable_irq();
    4bce:	cpsie	i
			release(tmp);
    4bd0:	mov	r0, r3
    4bd2:	bl	9664 <AudioStream::release(audio_block_struct*)>
		}
	}
	block = receiveReadOnly(1); // input 1 = right channel
    4bd6:	mov	r0, r4
    4bd8:	movs	r1, #1
    4bda:	bl	96ec <AudioStream::receiveReadOnly(unsigned int)>
	if (block) {
    4bde:	cbz	r0, 4c04 <AudioOutputI2S::update()+0x5c>
		__disable_irq();
    4be0:	cpsid	i
		if (block_right_1st == NULL) {
    4be2:	ldr	r2, [pc, #80]	; (4c34 <AudioOutputI2S::update()+0x8c>)
    4be4:	ldr	r3, [r2, #0]
    4be6:	cbz	r3, 4c1c <AudioOutputI2S::update()+0x74>
			block_right_1st = block;
			block_right_offset = 0;
			__enable_irq();
		} else if (block_right_2nd == NULL) {
    4be8:	ldr	r1, [pc, #76]	; (4c38 <AudioOutputI2S::update()+0x90>)
    4bea:	ldr	r4, [r1, #0]
    4bec:	cbz	r4, 4c0c <AudioOutputI2S::update()+0x64>
			__enable_irq();
		} else {
			audio_block_t *tmp = block_right_1st;
			block_right_1st = block_right_2nd;
			block_right_2nd = block;
			block_right_offset = 0;
    4bee:	ldr	r5, [pc, #76]	; (4c3c <AudioOutputI2S::update()+0x94>)
		} else if (block_right_2nd == NULL) {
			block_right_2nd = block;
			__enable_irq();
		} else {
			audio_block_t *tmp = block_right_1st;
			block_right_1st = block_right_2nd;
    4bf0:	str	r4, [r2, #0]
			block_right_2nd = block;
			block_right_offset = 0;
    4bf2:	movs	r2, #0
			block_right_2nd = block;
			__enable_irq();
		} else {
			audio_block_t *tmp = block_right_1st;
			block_right_1st = block_right_2nd;
			block_right_2nd = block;
    4bf4:	str	r0, [r1, #0]
			block_right_offset = 0;
    4bf6:	strh	r2, [r5, #0]
			__enable_irq();
    4bf8:	cpsie	i
			release(tmp);
    4bfa:	mov	r0, r3
		}
	}
}
    4bfc:	ldmia.w	sp!, {r4, r5, r6, lr}
			audio_block_t *tmp = block_right_1st;
			block_right_1st = block_right_2nd;
			block_right_2nd = block;
			block_right_offset = 0;
			__enable_irq();
			release(tmp);
    4c00:	b.w	9664 <AudioStream::release(audio_block_struct*)>
    4c04:	pop	{r4, r5, r6, pc}
		if (block_left_1st == NULL) {
			block_left_1st = block;
			block_left_offset = 0;
			__enable_irq();
		} else if (block_left_2nd == NULL) {
			block_left_2nd = block;
    4c06:	str	r0, [r1, #0]
			__enable_irq();
    4c08:	cpsie	i
    4c0a:	b.n	4bd6 <AudioOutputI2S::update()+0x2e>
		if (block_right_1st == NULL) {
			block_right_1st = block;
			block_right_offset = 0;
			__enable_irq();
		} else if (block_right_2nd == NULL) {
			block_right_2nd = block;
    4c0c:	str	r0, [r1, #0]
			__enable_irq();
    4c0e:	cpsie	i
    4c10:	pop	{r4, r5, r6, pc}
	block = receiveReadOnly(0); // input 0 = left channel
	if (block) {
		__disable_irq();
		if (block_left_1st == NULL) {
			block_left_1st = block;
			block_left_offset = 0;
    4c12:	ldr	r1, [pc, #28]	; (4c30 <AudioOutputI2S::update()+0x88>)
	audio_block_t *block;
	block = receiveReadOnly(0); // input 0 = left channel
	if (block) {
		__disable_irq();
		if (block_left_1st == NULL) {
			block_left_1st = block;
    4c14:	str	r0, [r2, #0]
			block_left_offset = 0;
    4c16:	strh	r3, [r1, #0]
			__enable_irq();
    4c18:	cpsie	i
    4c1a:	b.n	4bd6 <AudioOutputI2S::update()+0x2e>
	block = receiveReadOnly(1); // input 1 = right channel
	if (block) {
		__disable_irq();
		if (block_right_1st == NULL) {
			block_right_1st = block;
			block_right_offset = 0;
    4c1c:	ldr	r1, [pc, #28]	; (4c3c <AudioOutputI2S::update()+0x94>)
	}
	block = receiveReadOnly(1); // input 1 = right channel
	if (block) {
		__disable_irq();
		if (block_right_1st == NULL) {
			block_right_1st = block;
    4c1e:	str	r0, [r2, #0]
			block_right_offset = 0;
    4c20:	strh	r3, [r1, #0]
			__enable_irq();
    4c22:	cpsie	i
    4c24:	pop	{r4, r5, r6, pc}
    4c26:	nop
    4c28:	.word	0x20012764
    4c2c:	.word	0x20012770
    4c30:	.word	0x20012750
    4c34:	.word	0x2001275c
    4c38:	.word	0x20012768
    4c3c:	.word	0x20012760

00004c40 <AudioOutputI2S::config_i2s()>:


void AudioOutputI2S::config_i2s(void)
{
#if defined(KINETISK) || defined(KINETISL)
	SIM_SCGC6 |= SIM_SCGC6_I2S;
    4c40:	ldr	r3, [pc, #160]	; (4ce4 <AudioOutputI2S::config_i2s()+0xa4>)
	SIM_SCGC7 |= SIM_SCGC7_DMA;
    4c42:	ldr	r1, [pc, #164]	; (4ce8 <AudioOutputI2S::config_i2s()+0xa8>)


void AudioOutputI2S::config_i2s(void)
{
#if defined(KINETISK) || defined(KINETISL)
	SIM_SCGC6 |= SIM_SCGC6_I2S;
    4c44:	ldr	r2, [r3, #0]
	SIM_SCGC7 |= SIM_SCGC7_DMA;
	SIM_SCGC6 |= SIM_SCGC6_DMAMUX;

	// if either transmitter or receiver is enabled, do nothing
	if (I2S0_TCSR & I2S_TCSR_TE) return;
    4c46:	ldr	r0, [pc, #164]	; (4cec <AudioOutputI2S::config_i2s()+0xac>)


void AudioOutputI2S::config_i2s(void)
{
#if defined(KINETISK) || defined(KINETISL)
	SIM_SCGC6 |= SIM_SCGC6_I2S;
    4c48:	orr.w	r2, r2, #32768	; 0x8000
    4c4c:	str	r2, [r3, #0]
	SIM_SCGC7 |= SIM_SCGC7_DMA;
    4c4e:	ldr	r2, [r1, #0]
    4c50:	orr.w	r2, r2, #2
    4c54:	str	r2, [r1, #0]
	SIM_SCGC6 |= SIM_SCGC6_DMAMUX;
    4c56:	ldr	r2, [r3, #0]
    4c58:	orr.w	r2, r2, #2
    4c5c:	str	r2, [r3, #0]

	// if either transmitter or receiver is enabled, do nothing
	if (I2S0_TCSR & I2S_TCSR_TE) return;
    4c5e:	ldr	r3, [r0, #0]
    4c60:	cmp	r3, #0
    4c62:	blt.n	4ce2 <AudioOutputI2S::config_i2s()+0xa2>
	if (I2S0_RCSR & I2S_RCSR_RE) return;
    4c64:	ldr	r3, [pc, #136]	; (4cf0 <AudioOutputI2S::config_i2s()+0xb0>)
    4c66:	ldr	r3, [r3, #0]
    4c68:	cmp	r3, #0
    4c6a:	blt.n	4ce2 <AudioOutputI2S::config_i2s()+0xa2>

	// enable MCLK output
	I2S0_MCR = I2S_MCR_MICS(MCLK_SRC) | I2S_MCR_MOE;
    4c6c:	ldr	r2, [pc, #132]	; (4cf4 <AudioOutputI2S::config_i2s()+0xb4>)
    4c6e:	mov.w	r3, #1073741824	; 0x40000000
    4c72:	str	r3, [r2, #0]
	while (I2S0_MCR & I2S_MCR_DUF) ;
    4c74:	ldr	r3, [r2, #0]
    4c76:	cmp	r3, #0
    4c78:	blt.n	4c74 <AudioOutputI2S::config_i2s()+0x34>
#endif
#endif


void AudioOutputI2S::config_i2s(void)
{
    4c7a:	push	{r4, r5, r6, r7, lr}
	if (I2S0_RCSR & I2S_RCSR_RE) return;

	// enable MCLK output
	I2S0_MCR = I2S_MCR_MICS(MCLK_SRC) | I2S_MCR_MOE;
	while (I2S0_MCR & I2S_MCR_DUF) ;
	I2S0_MDR = I2S_MDR_FRACT((MCLK_MULT-1)) | I2S_MDR_DIVIDE((MCLK_DIV-1));
    4c7c:	ldr	r4, [pc, #120]	; (4cf8 <AudioOutputI2S::config_i2s()+0xb8>)

	// configure transmitter
	I2S0_TMR = 0;
    4c7e:	ldr	r0, [pc, #124]	; (4cfc <AudioOutputI2S::config_i2s()+0xbc>)
	I2S0_TCR1 = I2S_TCR1_TFW(1);  // watermark at half fifo size
    4c80:	ldr.w	lr, [pc, #168]	; 4d2c <AudioOutputI2S::config_i2s()+0xec>
	I2S0_TCR2 = I2S_TCR2_SYNC(0) | I2S_TCR2_BCP | I2S_TCR2_MSEL(1)
		| I2S_TCR2_BCD | I2S_TCR2_DIV(1);
    4c84:	ldr	r1, [pc, #120]	; (4d00 <AudioOutputI2S::config_i2s()+0xc0>)
	I2S0_TCR3 = I2S_TCR3_TCE;
    4c86:	ldr	r3, [pc, #124]	; (4d04 <AudioOutputI2S::config_i2s()+0xc4>)
	I2S0_TCR4 = I2S_TCR4_FRSZ(1) | I2S_TCR4_SYWD(31) | I2S_TCR4_MF
		| I2S_TCR4_FSE | I2S_TCR4_FSP | I2S_TCR4_FSD;
    4c88:	ldr	r2, [pc, #124]	; (4d08 <AudioOutputI2S::config_i2s()+0xc8>)
	I2S0_TCR5 = I2S_TCR5_WNW(31) | I2S_TCR5_W0W(31) | I2S_TCR5_FBT(31);
    4c8a:	ldr	r7, [pc, #128]	; (4d0c <AudioOutputI2S::config_i2s()+0xcc>)

	// configure receiver (sync'd to transmitter clocks)
	I2S0_RMR = 0;
    4c8c:	ldr	r6, [pc, #128]	; (4d10 <AudioOutputI2S::config_i2s()+0xd0>)
	I2S0_RCR1 = I2S_RCR1_RFW(1);
    4c8e:	ldr	r5, [pc, #132]	; (4d14 <AudioOutputI2S::config_i2s()+0xd4>)
	if (I2S0_RCSR & I2S_RCSR_RE) return;

	// enable MCLK output
	I2S0_MCR = I2S_MCR_MICS(MCLK_SRC) | I2S_MCR_MOE;
	while (I2S0_MCR & I2S_MCR_DUF) ;
	I2S0_MDR = I2S_MDR_FRACT((MCLK_MULT-1)) | I2S_MDR_DIVIDE((MCLK_DIV-1));
    4c90:	movw	ip, #61694	; 0xf0fe
    4c94:	str.w	ip, [r4]

	// configure transmitter
	I2S0_TMR = 0;
    4c98:	movs	r4, #0
    4c9a:	str	r4, [r0, #0]
	I2S0_TCR1 = I2S_TCR1_TFW(1);  // watermark at half fifo size
    4c9c:	movs	r0, #1
    4c9e:	str.w	r0, [lr]
	I2S0_TCR2 = I2S_TCR2_SYNC(0) | I2S_TCR2_BCP | I2S_TCR2_MSEL(1)
		| I2S_TCR2_BCD | I2S_TCR2_DIV(1);
    4ca2:	ldr.w	lr, [pc, #140]	; 4d30 <AudioOutputI2S::config_i2s()+0xf0>
    4ca6:	str.w	lr, [r1]
	I2S0_TCR3 = I2S_TCR3_TCE;
    4caa:	mov.w	r1, #65536	; 0x10000
    4cae:	str	r1, [r3, #0]
	I2S0_TCR4 = I2S_TCR4_FRSZ(1) | I2S_TCR4_SYWD(31) | I2S_TCR4_MF
		| I2S_TCR4_FSE | I2S_TCR4_FSP | I2S_TCR4_FSD;
    4cb0:	ldr	r3, [pc, #100]	; (4d18 <AudioOutputI2S::config_i2s()+0xd8>)
    4cb2:	str	r3, [r2, #0]

	// configure receiver (sync'd to transmitter clocks)
	I2S0_RMR = 0;
	I2S0_RCR1 = I2S_RCR1_RFW(1);
	I2S0_RCR2 = I2S_RCR2_SYNC(1) | I2S_TCR2_BCP | I2S_RCR2_MSEL(1)
		| I2S_RCR2_BCD | I2S_RCR2_DIV(1);
    4cb4:	ldr.w	lr, [pc, #124]	; 4d34 <AudioOutputI2S::config_i2s()+0xf4>
	I2S0_TCR2 = I2S_TCR2_SYNC(0) | I2S_TCR2_BCP | I2S_TCR2_MSEL(1)
		| I2S_TCR2_BCD | I2S_TCR2_DIV(1);
	I2S0_TCR3 = I2S_TCR3_TCE;
	I2S0_TCR4 = I2S_TCR4_FRSZ(1) | I2S_TCR4_SYWD(31) | I2S_TCR4_MF
		| I2S_TCR4_FSE | I2S_TCR4_FSP | I2S_TCR4_FSD;
	I2S0_TCR5 = I2S_TCR5_WNW(31) | I2S_TCR5_W0W(31) | I2S_TCR5_FBT(31);
    4cb8:	ldr	r2, [pc, #96]	; (4d1c <AudioOutputI2S::config_i2s()+0xdc>)
    4cba:	str	r2, [r7, #0]

	// configure receiver (sync'd to transmitter clocks)
	I2S0_RMR = 0;
    4cbc:	str	r4, [r6, #0]
	I2S0_RCR1 = I2S_RCR1_RFW(1);
    4cbe:	str	r0, [r5, #0]
	I2S0_RCR2 = I2S_RCR2_SYNC(1) | I2S_TCR2_BCP | I2S_RCR2_MSEL(1)
		| I2S_RCR2_BCD | I2S_RCR2_DIV(1);
    4cc0:	add.w	r0, r0, #1191182336	; 0x47000000
    4cc4:	str.w	r0, [lr]
	I2S0_RCR4 = I2S_RCR4_FRSZ(1) | I2S_RCR4_SYWD(31) | I2S_RCR4_MF
		| I2S_RCR4_FSE | I2S_RCR4_FSP | I2S_RCR4_FSD;
	I2S0_RCR5 = I2S_RCR5_WNW(31) | I2S_RCR5_W0W(31) | I2S_RCR5_FBT(31);

	// configure pin mux for 3 clock signals
	CORE_PIN23_CONFIG = PORT_PCR_MUX(6); // pin 23, PTC2, I2S0_TX_FS (LRCLK)
    4cc8:	ldr	r4, [pc, #84]	; (4d20 <AudioOutputI2S::config_i2s()+0xe0>)
	// configure receiver (sync'd to transmitter clocks)
	I2S0_RMR = 0;
	I2S0_RCR1 = I2S_RCR1_RFW(1);
	I2S0_RCR2 = I2S_RCR2_SYNC(1) | I2S_TCR2_BCP | I2S_RCR2_MSEL(1)
		| I2S_RCR2_BCD | I2S_RCR2_DIV(1);
	I2S0_RCR3 = I2S_RCR3_RCE;
    4cca:	str	r1, [r7, #120]	; 0x78
		| I2S_RCR4_FSE | I2S_RCR4_FSP | I2S_RCR4_FSD;
	I2S0_RCR5 = I2S_RCR5_WNW(31) | I2S_RCR5_W0W(31) | I2S_RCR5_FBT(31);

	// configure pin mux for 3 clock signals
	CORE_PIN23_CONFIG = PORT_PCR_MUX(6); // pin 23, PTC2, I2S0_TX_FS (LRCLK)
	CORE_PIN9_CONFIG  = PORT_PCR_MUX(6); // pin  9, PTC3, I2S0_TX_BCLK
    4ccc:	ldr	r0, [pc, #84]	; (4d24 <AudioOutputI2S::config_i2s()+0xe4>)
	CORE_PIN11_CONFIG = PORT_PCR_MUX(6); // pin 11, PTC6, I2S0_MCLK
    4cce:	ldr	r1, [pc, #88]	; (4d28 <AudioOutputI2S::config_i2s()+0xe8>)
	I2S0_RCR1 = I2S_RCR1_RFW(1);
	I2S0_RCR2 = I2S_RCR2_SYNC(1) | I2S_TCR2_BCP | I2S_RCR2_MSEL(1)
		| I2S_RCR2_BCD | I2S_RCR2_DIV(1);
	I2S0_RCR3 = I2S_RCR3_RCE;
	I2S0_RCR4 = I2S_RCR4_FRSZ(1) | I2S_RCR4_SYWD(31) | I2S_RCR4_MF
		| I2S_RCR4_FSE | I2S_RCR4_FSP | I2S_RCR4_FSD;
    4cd0:	str.w	r3, [r6, #-80]
	I2S0_RCR5 = I2S_RCR5_WNW(31) | I2S_RCR5_W0W(31) | I2S_RCR5_FBT(31);

	// configure pin mux for 3 clock signals
	CORE_PIN23_CONFIG = PORT_PCR_MUX(6); // pin 23, PTC2, I2S0_TX_FS (LRCLK)
    4cd4:	mov.w	r3, #1536	; 0x600
	I2S0_RCR2 = I2S_RCR2_SYNC(1) | I2S_TCR2_BCP | I2S_RCR2_MSEL(1)
		| I2S_RCR2_BCD | I2S_RCR2_DIV(1);
	I2S0_RCR3 = I2S_RCR3_RCE;
	I2S0_RCR4 = I2S_RCR4_FRSZ(1) | I2S_RCR4_SYWD(31) | I2S_RCR4_MF
		| I2S_RCR4_FSE | I2S_RCR4_FSP | I2S_RCR4_FSD;
	I2S0_RCR5 = I2S_RCR5_WNW(31) | I2S_RCR5_W0W(31) | I2S_RCR5_FBT(31);
    4cd8:	str	r2, [r5, #16]

	// configure pin mux for 3 clock signals
	CORE_PIN23_CONFIG = PORT_PCR_MUX(6); // pin 23, PTC2, I2S0_TX_FS (LRCLK)
    4cda:	str	r3, [r4, #0]
	CORE_PIN9_CONFIG  = PORT_PCR_MUX(6); // pin  9, PTC3, I2S0_TX_BCLK
    4cdc:	str	r3, [r0, #0]
	CORE_PIN11_CONFIG = PORT_PCR_MUX(6); // pin 11, PTC6, I2S0_MCLK
    4cde:	str	r3, [r1, #0]
    4ce0:	pop	{r4, r5, r6, r7, pc}
    4ce2:	bx	lr
    4ce4:	.word	0x4004803c
    4ce8:	.word	0x40048040
    4cec:	.word	0x4002f000
    4cf0:	.word	0x4002f080
    4cf4:	.word	0x4002f100
    4cf8:	.word	0x4002f104
    4cfc:	.word	0x4002f060
    4d00:	.word	0x4002f008
    4d04:	.word	0x4002f00c
    4d08:	.word	0x4002f010
    4d0c:	.word	0x4002f014
    4d10:	.word	0x4002f0e0
    4d14:	.word	0x4002f084
    4d18:	.word	0x00011f1b
    4d1c:	.word	0x1f1f1f00
    4d20:	.word	0x4004b008
    4d24:	.word	0x4004b00c
    4d28:	.word	0x4004b018
    4d2c:	.word	0x4002f004
    4d30:	.word	0x07000001
    4d34:	.word	0x4002f088

00004d38 <AudioOutputI2S::begin()>:

#endif

#if defined(KINETISK)
void AudioOutputI2S::begin(void)
{
    4d38:	push	{r3, r4, r5, r6, r7, lr}
	dma.begin(true); // Allocate the DMA channel first
    4d3a:	ldr	r4, [pc, #156]	; (4dd8 <AudioOutputI2S::begin()+0xa0>)

	dma.TCD->SADDR = i2s_tx_buffer;
	dma.TCD->SOFF = 2;
	dma.TCD->ATTR = DMA_TCD_ATTR_SSIZE(1) | DMA_TCD_ATTR_DSIZE(1);
	dma.TCD->NBYTES_MLNO = 2;
	dma.TCD->SLAST = -sizeof(i2s_tx_buffer);
    4d3c:	ldr	r6, [pc, #156]	; (4ddc <AudioOutputI2S::begin()+0xa4>)
#endif

#if defined(KINETISK)
void AudioOutputI2S::begin(void)
{
	dma.begin(true); // Allocate the DMA channel first
    4d3e:	mov	r0, r4
    4d40:	movs	r1, #1
    4d42:	bl	8874 <DMAChannel::begin(bool)>

	block_left_1st = NULL;
    4d46:	ldr	r2, [pc, #152]	; (4de0 <AudioOutputI2S::begin()+0xa8>)
	block_right_1st = NULL;
    4d48:	ldr	r3, [pc, #152]	; (4de4 <AudioOutputI2S::begin()+0xac>)
#if defined(KINETISK)
void AudioOutputI2S::begin(void)
{
	dma.begin(true); // Allocate the DMA channel first

	block_left_1st = NULL;
    4d4a:	movs	r5, #0
    4d4c:	str	r5, [r2, #0]
	block_right_1st = NULL;
    4d4e:	str	r5, [r3, #0]

	// TODO: should we set & clear the I2S_TCSR_SR bit here?
	config_i2s();
    4d50:	bl	4c40 <AudioOutputI2S::config_i2s()>
	CORE_PIN22_CONFIG = PORT_PCR_MUX(6); // pin 22, PTC1, I2S0_TXD0
    4d54:	ldr	r3, [pc, #144]	; (4de8 <AudioOutputI2S::begin()+0xb0>)

	dma.TCD->SADDR = i2s_tx_buffer;
    4d56:	ldr	r2, [pc, #148]	; (4dec <AudioOutputI2S::begin()+0xb4>)
	dma.TCD->SOFF = 2;
	dma.TCD->ATTR = DMA_TCD_ATTR_SSIZE(1) | DMA_TCD_ATTR_DSIZE(1);
	dma.TCD->NBYTES_MLNO = 2;
	dma.TCD->SLAST = -sizeof(i2s_tx_buffer);
	dma.TCD->DADDR = (void *)((uint32_t)&I2S0_TDR0 + 2);
    4d58:	ldr	r1, [pc, #148]	; (4df0 <AudioOutputI2S::begin()+0xb8>)
	block_left_1st = NULL;
	block_right_1st = NULL;

	// TODO: should we set & clear the I2S_TCSR_SR bit here?
	config_i2s();
	CORE_PIN22_CONFIG = PORT_PCR_MUX(6); // pin 22, PTC1, I2S0_TXD0
    4d5a:	mov.w	r0, #1536	; 0x600
    4d5e:	str	r0, [r3, #0]

	dma.TCD->SADDR = i2s_tx_buffer;
    4d60:	ldr	r3, [r4, #0]
	dma.TCD->SOFF = 2;
    4d62:	movs	r0, #2

	// TODO: should we set & clear the I2S_TCSR_SR bit here?
	config_i2s();
	CORE_PIN22_CONFIG = PORT_PCR_MUX(6); // pin 22, PTC1, I2S0_TXD0

	dma.TCD->SADDR = i2s_tx_buffer;
    4d64:	str	r2, [r3, #0]
	dma.TCD->SOFF = 2;
    4d66:	strh	r0, [r3, #4]
	// 32 bits.  If a channel is configured for 200 transfers

	// Use a hardware trigger to make the DMA channel run
	void triggerAtHardwareEvent(uint8_t source) {
		volatile uint8_t *mux;
		mux = (volatile uint8_t *)&(DMAMUX0_CHCFG0) + channel;
    4d68:	ldrb	r2, [r4, #4]
	dma.TCD->ATTR = DMA_TCD_ATTR_SSIZE(1) | DMA_TCD_ATTR_DSIZE(1);
	dma.TCD->NBYTES_MLNO = 2;
	dma.TCD->SLAST = -sizeof(i2s_tx_buffer);
	dma.TCD->DADDR = (void *)((uint32_t)&I2S0_TDR0 + 2);
    4d6a:	str	r1, [r3, #16]
    4d6c:	add.w	r2, r2, #1073741824	; 0x40000000
    4d70:	add.w	r2, r2, #135168	; 0x21000
	config_i2s();
	CORE_PIN22_CONFIG = PORT_PCR_MUX(6); // pin 22, PTC1, I2S0_TXD0

	dma.TCD->SADDR = i2s_tx_buffer;
	dma.TCD->SOFF = 2;
	dma.TCD->ATTR = DMA_TCD_ATTR_SSIZE(1) | DMA_TCD_ATTR_DSIZE(1);
    4d74:	movw	r7, #257	; 0x101
    4d78:	strh	r7, [r3, #6]
	dma.TCD->NBYTES_MLNO = 2;
	dma.TCD->SLAST = -sizeof(i2s_tx_buffer);
    4d7a:	str	r6, [r3, #12]
	dma.TCD->DADDR = (void *)((uint32_t)&I2S0_TDR0 + 2);
	dma.TCD->DOFF = 0;
	dma.TCD->CITER_ELINKNO = sizeof(i2s_tx_buffer) / 2;
    4d7c:	mov.w	r1, #256	; 0x100
	dma.TCD->DLASTSGA = 0;
	dma.TCD->BITER_ELINKNO = sizeof(i2s_tx_buffer) / 2;
	dma.TCD->CSR = DMA_TCD_CSR_INTHALF | DMA_TCD_CSR_INTMAJOR;
    4d80:	movs	r7, #6
		*mux = 0;
		*mux = (source & 63) | DMAMUX_ENABLE;
    4d82:	movs	r6, #141	; 0x8d
	dma.TCD->ATTR = DMA_TCD_ATTR_SSIZE(1) | DMA_TCD_ATTR_DSIZE(1);
	dma.TCD->NBYTES_MLNO = 2;
	dma.TCD->SLAST = -sizeof(i2s_tx_buffer);
	dma.TCD->DADDR = (void *)((uint32_t)&I2S0_TDR0 + 2);
	dma.TCD->DOFF = 0;
	dma.TCD->CITER_ELINKNO = sizeof(i2s_tx_buffer) / 2;
    4d84:	strh	r1, [r3, #22]
	dma.TCD->SOFF = 2;
	dma.TCD->ATTR = DMA_TCD_ATTR_SSIZE(1) | DMA_TCD_ATTR_DSIZE(1);
	dma.TCD->NBYTES_MLNO = 2;
	dma.TCD->SLAST = -sizeof(i2s_tx_buffer);
	dma.TCD->DADDR = (void *)((uint32_t)&I2S0_TDR0 + 2);
	dma.TCD->DOFF = 0;
    4d86:	strh	r5, [r3, #20]
	dma.TCD->CITER_ELINKNO = sizeof(i2s_tx_buffer) / 2;
	dma.TCD->DLASTSGA = 0;
	dma.TCD->BITER_ELINKNO = sizeof(i2s_tx_buffer) / 2;
    4d88:	strh	r1, [r3, #30]
	dma.TCD->NBYTES_MLNO = 2;
	dma.TCD->SLAST = -sizeof(i2s_tx_buffer);
	dma.TCD->DADDR = (void *)((uint32_t)&I2S0_TDR0 + 2);
	dma.TCD->DOFF = 0;
	dma.TCD->CITER_ELINKNO = sizeof(i2s_tx_buffer) / 2;
	dma.TCD->DLASTSGA = 0;
    4d8a:	str	r5, [r3, #24]
	dma.TCD->BITER_ELINKNO = sizeof(i2s_tx_buffer) / 2;
	dma.TCD->CSR = DMA_TCD_CSR_INTHALF | DMA_TCD_CSR_INTMAJOR;
    4d8c:	strh	r7, [r3, #28]
	CORE_PIN22_CONFIG = PORT_PCR_MUX(6); // pin 22, PTC1, I2S0_TXD0

	dma.TCD->SADDR = i2s_tx_buffer;
	dma.TCD->SOFF = 2;
	dma.TCD->ATTR = DMA_TCD_ATTR_SSIZE(1) | DMA_TCD_ATTR_DSIZE(1);
	dma.TCD->NBYTES_MLNO = 2;
    4d8e:	str	r0, [r3, #8]

	// Use a hardware trigger to make the DMA channel run
	void triggerAtHardwareEvent(uint8_t source) {
		volatile uint8_t *mux;
		mux = (volatile uint8_t *)&(DMAMUX0_CHCFG0) + channel;
		*mux = 0;
    4d90:	strb	r5, [r2, #0]
		*mux = (source & 63) | DMAMUX_ENABLE;
    4d92:	strb	r6, [r2, #0]
	dma.TCD->DLASTSGA = 0;
	dma.TCD->BITER_ELINKNO = sizeof(i2s_tx_buffer) / 2;
	dma.TCD->CSR = DMA_TCD_CSR_INTHALF | DMA_TCD_CSR_INTMAJOR;

	dma.triggerAtHardwareEvent(DMAMUX_SOURCE_I2S0_TX);
	update_responsibility = update_setup();
    4d94:	bl	982c <AudioStream::update_setup()>
    4d98:	ldrb	r2, [r4, #4]
    4d9a:	ldr	r3, [pc, #88]	; (4df4 <AudioOutputI2S::begin()+0xbc>)
	/***************************************/
	/**    Enable / Disable               **/
	/***************************************/

	void enable(void) {
		DMA_SERQ = channel;
    4d9c:	ldr	r1, [pc, #88]	; (4df8 <AudioOutputI2S::begin()+0xc0>)
    4d9e:	strb	r0, [r3, #0]
	// An interrupt routine can be run when the DMA channel completes
	// the entire transfer, and also optionally when half of the
	// transfer is completed.
	void attachInterrupt(void (*isr)(void)) {
		_VectorsRam[channel + IRQ_DMA_CH0 + 16] = isr;
		NVIC_ENABLE_IRQ(IRQ_DMA_CH0 + channel);
    4da0:	asrs	r3, r2, #5
    4da2:	lsls	r3, r3, #2
    4da4:	mov	r7, r2
    4da6:	add.w	r3, r3, #3758096384	; 0xe0000000
	/***************************************/
	/**    Enable / Disable               **/
	/***************************************/

	void enable(void) {
		DMA_SERQ = channel;
    4daa:	strb	r7, [r1, #0]
	dma.enable();


	I2S0_TCSR = I2S_TCSR_SR;
    4dac:	ldr	r5, [pc, #76]	; (4dfc <AudioOutputI2S::begin()+0xc4>)

	// An interrupt routine can be run when the DMA channel completes
	// the entire transfer, and also optionally when half of the
	// transfer is completed.
	void attachInterrupt(void (*isr)(void)) {
		_VectorsRam[channel + IRQ_DMA_CH0 + 16] = isr;
    4dae:	ldr	r6, [pc, #80]	; (4e00 <AudioOutputI2S::begin()+0xc8>)
	I2S0_TCSR = I2S_TCSR_TE | I2S_TCSR_BCE | I2S_TCSR_FRDE;
    4db0:	ldr	r4, [pc, #80]	; (4e04 <AudioOutputI2S::begin()+0xcc>)
    4db2:	add.w	r0, r2, #16
		NVIC_ENABLE_IRQ(IRQ_DMA_CH0 + channel);
    4db6:	movs	r1, #1
    4db8:	add.w	r3, r3, #57600	; 0xe100
    4dbc:	and.w	r2, r2, #31
    4dc0:	lsl.w	r2, r1, r2
	dma.triggerAtHardwareEvent(DMAMUX_SOURCE_I2S0_TX);
	update_responsibility = update_setup();
	dma.enable();


	I2S0_TCSR = I2S_TCSR_SR;
    4dc4:	mov.w	r7, #16777216	; 0x1000000

	// An interrupt routine can be run when the DMA channel completes
	// the entire transfer, and also optionally when half of the
	// transfer is completed.
	void attachInterrupt(void (*isr)(void)) {
		_VectorsRam[channel + IRQ_DMA_CH0 + 16] = isr;
    4dc8:	ldr	r1, [pc, #60]	; (4e08 <AudioOutputI2S::begin()+0xd0>)
    4dca:	str	r7, [r5, #0]
	I2S0_TCSR = I2S_TCSR_TE | I2S_TCSR_BCE | I2S_TCSR_FRDE;
    4dcc:	str	r4, [r5, #0]
    4dce:	str.w	r1, [r6, r0, lsl #2]
		NVIC_ENABLE_IRQ(IRQ_DMA_CH0 + channel);
    4dd2:	str	r2, [r3, #0]
    4dd4:	pop	{r3, r4, r5, r6, r7, pc}
    4dd6:	nop
    4dd8:	.word	0x20012754
    4ddc:	.word	0xfffffe00
    4de0:	.word	0x20012764
    4de4:	.word	0x2001275c
    4de8:	.word	0x4004b004
    4dec:	.word	0x20006fa0
    4df0:	.word	0x4002f022
    4df4:	.word	0x2001276c
    4df8:	.word	0x4000801b
    4dfc:	.word	0x4002f000
    4e00:	.word	0x20007200
    4e04:	.word	0x90000001
    4e08:	.word	0x00004aa9

00004e0c <_GLOBAL__sub_I__ZN14AudioOutputI2S14block_left_1stE>:
audio_block_t * AudioOutputI2S::block_left_2nd = NULL;
audio_block_t * AudioOutputI2S::block_right_2nd = NULL;
uint16_t  AudioOutputI2S::block_left_offset = 0;
uint16_t  AudioOutputI2S::block_right_offset = 0;
bool AudioOutputI2S::update_responsibility = false;
DMAChannel AudioOutputI2S::dma(false);
    4e0c:	ldr	r2, [pc, #8]	; (4e18 <_GLOBAL__sub_I__ZN14AudioOutputI2S14block_left_1stE+0xc>)
    4e0e:	ldr	r1, [pc, #12]	; (4e1c <_GLOBAL__sub_I__ZN14AudioOutputI2S14block_left_1stE+0x10>)
    4e10:	ldr	r0, [pc, #12]	; (4e20 <_GLOBAL__sub_I__ZN14AudioOutputI2S14block_left_1stE+0x14>)
    4e12:	b.w	b944 <__aeabi_atexit>
    4e16:	nop
    4e18:	.word	0x20007db0
    4e1c:	.word	0x00003021
    4e20:	.word	0x20012754

00004e24 <_GLOBAL__sub_I__ZN16AudioOutputSPDIF14block_left_1stE>:
audio_block_t * AudioOutputSPDIF::block_left_2nd = NULL;
audio_block_t * AudioOutputSPDIF::block_right_2nd = NULL;
uint16_t  AudioOutputSPDIF::block_left_offset = 0;
uint16_t  AudioOutputSPDIF::block_right_offset = 0;
bool AudioOutputSPDIF::update_responsibility = false;
DMAChannel AudioOutputSPDIF::dma(false);
    4e24:	ldr	r2, [pc, #8]	; (4e30 <_GLOBAL__sub_I__ZN16AudioOutputSPDIF14block_left_1stE+0xc>)
    4e26:	ldr	r1, [pc, #12]	; (4e34 <_GLOBAL__sub_I__ZN16AudioOutputSPDIF14block_left_1stE+0x10>)
    4e28:	ldr	r0, [pc, #12]	; (4e38 <_GLOBAL__sub_I__ZN16AudioOutputSPDIF14block_left_1stE+0x14>)
    4e2a:	b.w	b944 <__aeabi_atexit>
    4e2e:	nop
    4e30:	.word	0x20007db0
    4e34:	.word	0x00003021
    4e38:	.word	0x20012774

00004e3c <AudioEffectDelay::update()>:

#include <Arduino.h>
#include "effect_delay.h"

void AudioEffectDelay::update(void)
{
    4e3c:	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
	uint32_t head, tail, count, channel, index, prev, offset;
	const int16_t *src, *end;
	int16_t *dst;

	// grab incoming data and put it into the queue
	head = headindex;
    4e40:	ldrh	r7, [r0, #26]
	tail = tailindex;
    4e42:	ldrh	r4, [r0, #28]
	if (++head >= DELAY_QUEUE_SIZE) head = 0;
    4e44:	adds	r7, #1
    4e46:	cmp.w	r7, #832	; 0x340
    4e4a:	itte	cs
    4e4c:	movcs	r5, #0
    4e4e:	movcs	r7, r5
    4e50:	uxthcc	r5, r7
	if (head == tail) {
    4e52:	cmp	r7, r4

#include <Arduino.h>
#include "effect_delay.h"

void AudioEffectDelay::update(void)
{
    4e54:	mov	r6, r0

	// grab incoming data and put it into the queue
	head = headindex;
	tail = tailindex;
	if (++head >= DELAY_QUEUE_SIZE) head = 0;
	if (head == tail) {
    4e56:	beq.w	4f86 <AudioEffectDelay::update()+0x14a>
		if (queue[tail] != NULL) release(queue[tail]);
		if (++tail >= DELAY_QUEUE_SIZE) tail = 0;
	}
	queue[head] = receiveReadOnly();
    4e5a:	movs	r1, #0
    4e5c:	mov	r0, r6
    4e5e:	bl	96ec <AudioStream::receiveReadOnly(unsigned int)>
    4e62:	add.w	r3, r7, #16
	//		digitalWriteFast(2, LOW);
	//	}
	//}

	// discard unneeded blocks from the queue
	if (head >= tail) {
    4e66:	cmp	r7, r4
	if (++head >= DELAY_QUEUE_SIZE) head = 0;
	if (head == tail) {
		if (queue[tail] != NULL) release(queue[tail]);
		if (++tail >= DELAY_QUEUE_SIZE) tail = 0;
	}
	queue[head] = receiveReadOnly();
    4e68:	str.w	r0, [r6, r3, lsl #2]
	headindex = head;
    4e6c:	strh	r5, [r6, #26]
	//		digitalWriteFast(2, LOW);
	//	}
	//}

	// discard unneeded blocks from the queue
	if (head >= tail) {
    4e6e:	bcs.w	4fae <AudioEffectDelay::update()+0x172>
		count = head - tail;
	} else {
		count = DELAY_QUEUE_SIZE + head - tail;
    4e72:	add.w	r5, r7, #832	; 0x340
    4e76:	subs	r3, r5, r4
	}
	if (count > maxblocks) {
    4e78:	ldrh	r5, [r6, #30]
    4e7a:	cmp	r3, r5
    4e7c:	bls.n	4ea4 <AudioEffectDelay::update()+0x68>
		count -= maxblocks;
    4e7e:	subs	r5, r3, r5
		do {
			if (queue[tail] != NULL) {
				release(queue[tail]);
				queue[tail] = NULL;
    4e80:	mov.w	r9, #0
    4e84:	add.w	r8, r6, r4, lsl #2
			}
			if (++tail >= DELAY_QUEUE_SIZE) tail = 0;
    4e88:	adds	r4, #1
		count = DELAY_QUEUE_SIZE + head - tail;
	}
	if (count > maxblocks) {
		count -= maxblocks;
		do {
			if (queue[tail] != NULL) {
    4e8a:	ldr.w	r0, [r8, #64]	; 0x40
    4e8e:	cbz	r0, 4e98 <AudioEffectDelay::update()+0x5c>
				release(queue[tail]);
    4e90:	bl	9664 <AudioStream::release(audio_block_struct*)>
				queue[tail] = NULL;
    4e94:	str.w	r9, [r8, #64]	; 0x40
			}
			if (++tail >= DELAY_QUEUE_SIZE) tail = 0;
    4e98:	cmp.w	r4, #832	; 0x340
    4e9c:	it	cs
    4e9e:	movcs	r4, #0
	} else {
		count = DELAY_QUEUE_SIZE + head - tail;
	}
	if (count > maxblocks) {
		count -= maxblocks;
		do {
    4ea0:	subs	r5, #1
    4ea2:	bne.n	4e84 <AudioEffectDelay::update()+0x48>
		} while (--count > 0);
	}
	tailindex = tail;

	// transmit the delayed outputs using queue data
	for (channel = 0; channel < 8; channel++) {
    4ea4:	movs	r5, #0
				queue[tail] = NULL;
			}
			if (++tail >= DELAY_QUEUE_SIZE) tail = 0;
		} while (--count > 0);
	}
	tailindex = tail;
    4ea6:	strh	r4, [r6, #28]
    4ea8:	add.w	r8, r6, #32
				while (dst < end) {
					*dst++ = *src++; // TODO: optimize
				}
			} else {
				while (dst < end) {
					*dst++ = 0;
    4eac:	mov	r4, r5
    4eae:	b.n	4ecc <AudioEffectDelay::update()+0x90>
		} else {
			index = DELAY_QUEUE_SIZE + head - index;
		}
		if (offset == 0) {
			// delay falls on the block boundary
			if (queue[index]) {
    4eb0:	add.w	r9, r9, #16
    4eb4:	ldr.w	r1, [r6, r9, lsl #2]
    4eb8:	cbz	r1, 4ec2 <AudioEffectDelay::update()+0x86>
				transmit(queue[index], channel);
    4eba:	uxtb	r2, r5
    4ebc:	mov	r0, r6
    4ebe:	bl	96b8 <AudioStream::transmit(audio_block_struct*, unsigned char)>
		} while (--count > 0);
	}
	tailindex = tail;

	// transmit the delayed outputs using queue data
	for (channel = 0; channel < 8; channel++) {
    4ec2:	adds	r5, #1
    4ec4:	cmp	r5, #8
    4ec6:	add.w	r8, r8, #4
    4eca:	beq.n	4f82 <AudioEffectDelay::update()+0x146>
		if (!(activemask & (1<<channel))) continue;
    4ecc:	ldrb	r3, [r6, #24]
    4ece:	asrs	r3, r5
    4ed0:	lsls	r3, r3, #31
    4ed2:	bpl.n	4ec2 <AudioEffectDelay::update()+0x86>
		index =  position[channel] / AUDIO_BLOCK_SAMPLES;
    4ed4:	ldr.w	r2, [r8]
    4ed8:	mov.w	r9, r2, lsr #7
		offset = position[channel] % AUDIO_BLOCK_SAMPLES;
		if (head >= index) {
    4edc:	cmp	r7, r9
			index = head - index;
		} else {
			index = DELAY_QUEUE_SIZE + head - index;
    4ede:	it	cc
    4ee0:	addcc.w	r3, r7, #832	; 0x340

	// transmit the delayed outputs using queue data
	for (channel = 0; channel < 8; channel++) {
		if (!(activemask & (1<<channel))) continue;
		index =  position[channel] / AUDIO_BLOCK_SAMPLES;
		offset = position[channel] % AUDIO_BLOCK_SAMPLES;
    4ee4:	and.w	fp, r2, #127	; 0x7f
		if (head >= index) {
			index = head - index;
    4ee8:	ite	cs
    4eea:	rsbcs	r9, r9, r7
		} else {
			index = DELAY_QUEUE_SIZE + head - index;
    4eee:	rsbcc	r9, r9, r3
		}
		if (offset == 0) {
    4ef2:	cmp.w	fp, #0
    4ef6:	beq.n	4eb0 <AudioEffectDelay::update()+0x74>
			if (queue[index]) {
				transmit(queue[index], channel);
			}
		} else {
			// delay requires grabbing data from 2 blocks
			output = allocate();
    4ef8:	bl	95bc <AudioStream::allocate()>
			if (!output) continue;
    4efc:	mov	sl, r0
    4efe:	cmp	r0, #0
    4f00:	beq.n	4ec2 <AudioEffectDelay::update()+0x86>
			dst = output->data;
    4f02:	adds	r3, r0, #4
			if (index > 0) {
    4f04:	cmp.w	r9, #0
    4f08:	bne.n	4fb2 <AudioEffectDelay::update()+0x176>
				prev = index - 1;
			} else {
				prev = DELAY_QUEUE_SIZE-1;
    4f0a:	movw	r2, #831	; 0x33f
			}
			if (queue[prev]) {
    4f0e:	adds	r2, #16
    4f10:	ldr.w	r2, [r6, r2, lsl #2]
    4f14:	cmp	r2, #0
    4f16:	beq.n	4fc0 <AudioEffectDelay::update()+0x184>
				end = queue[prev]->data + AUDIO_BLOCK_SAMPLES;
    4f18:	add.w	lr, r2, #260	; 0x104
				src = end - offset;
    4f1c:	sub.w	fp, lr, fp, lsl #1
				while (src < end) {
    4f20:	cmp	lr, fp
    4f22:	bls.n	4f44 <AudioEffectDelay::update()+0x108>
    4f24:	add.w	r1, sl, #2
    4f28:	mov	r2, fp
					*dst++ = *src++; // TODO: optimize
    4f2a:	ldrsh.w	r0, [r2], #2
    4f2e:	strh.w	r0, [r1, #2]!
				prev = DELAY_QUEUE_SIZE-1;
			}
			if (queue[prev]) {
				end = queue[prev]->data + AUDIO_BLOCK_SAMPLES;
				src = end - offset;
				while (src < end) {
    4f32:	cmp	lr, r2
    4f34:	bhi.n	4f2a <AudioEffectDelay::update()+0xee>
    4f36:	mvn.w	r2, fp
    4f3a:	add	r2, lr
    4f3c:	bic.w	r2, r2, #1
    4f40:	adds	r2, #2
    4f42:	add	r3, r2
				while (dst < end) {
					*dst++ = 0;
				}
			}
			end = output->data + AUDIO_BLOCK_SAMPLES;
			if (queue[index]) {
    4f44:	add.w	r9, r9, #16
				end = dst + offset;
				while (dst < end) {
					*dst++ = 0;
				}
			}
			end = output->data + AUDIO_BLOCK_SAMPLES;
    4f48:	add.w	r0, sl, #260	; 0x104
			if (queue[index]) {
    4f4c:	ldr.w	r2, [r6, r9, lsl #2]
    4f50:	cmp	r2, #0
    4f52:	beq.n	4ff0 <AudioEffectDelay::update()+0x1b4>
				src = queue[index]->data;
				while (dst < end) {
    4f54:	cmp	r3, r0
					*dst++ = 0;
				}
			}
			end = output->data + AUDIO_BLOCK_SAMPLES;
			if (queue[index]) {
				src = queue[index]->data;
    4f56:	add.w	r2, r2, #4
				while (dst < end) {
    4f5a:	bcs.n	4f68 <AudioEffectDelay::update()+0x12c>
					*dst++ = *src++; // TODO: optimize
    4f5c:	ldrsh.w	r1, [r2], #2
    4f60:	strh.w	r1, [r3], #2
				}
			}
			end = output->data + AUDIO_BLOCK_SAMPLES;
			if (queue[index]) {
				src = queue[index]->data;
				while (dst < end) {
    4f64:	cmp	r0, r3
    4f66:	bhi.n	4f5c <AudioEffectDelay::update()+0x120>
			} else {
				while (dst < end) {
					*dst++ = 0;
				}
			}
			transmit(output, channel);
    4f68:	uxtb	r2, r5
    4f6a:	mov	r1, sl
    4f6c:	mov	r0, r6
    4f6e:	bl	96b8 <AudioStream::transmit(audio_block_struct*, unsigned char)>
		} while (--count > 0);
	}
	tailindex = tail;

	// transmit the delayed outputs using queue data
	for (channel = 0; channel < 8; channel++) {
    4f72:	adds	r5, #1
				while (dst < end) {
					*dst++ = 0;
				}
			}
			transmit(output, channel);
			release(output);
    4f74:	mov	r0, sl
    4f76:	bl	9664 <AudioStream::release(audio_block_struct*)>
		} while (--count > 0);
	}
	tailindex = tail;

	// transmit the delayed outputs using queue data
	for (channel = 0; channel < 8; channel++) {
    4f7a:	cmp	r5, #8
    4f7c:	add.w	r8, r8, #4
    4f80:	bne.n	4ecc <AudioEffectDelay::update()+0x90>
    4f82:	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    4f86:	add.w	r8, r0, r7, lsl #2
	// grab incoming data and put it into the queue
	head = headindex;
	tail = tailindex;
	if (++head >= DELAY_QUEUE_SIZE) head = 0;
	if (head == tail) {
		if (queue[tail] != NULL) release(queue[tail]);
    4f8a:	ldr.w	r0, [r8, #64]	; 0x40
    4f8e:	cbz	r0, 4f94 <AudioEffectDelay::update()+0x158>
    4f90:	bl	9664 <AudioStream::release(audio_block_struct*)>
		if (++tail >= DELAY_QUEUE_SIZE) tail = 0;
    4f94:	adds	r4, r7, #1
    4f96:	cmp.w	r4, #832	; 0x340
    4f9a:	bne.w	4e5a <AudioEffectDelay::update()+0x1e>
	}
	queue[head] = receiveReadOnly();
    4f9e:	movs	r1, #0
    4fa0:	mov	r0, r6
    4fa2:	bl	96ec <AudioStream::receiveReadOnly(unsigned int)>
	head = headindex;
	tail = tailindex;
	if (++head >= DELAY_QUEUE_SIZE) head = 0;
	if (head == tail) {
		if (queue[tail] != NULL) release(queue[tail]);
		if (++tail >= DELAY_QUEUE_SIZE) tail = 0;
    4fa6:	movs	r4, #0
	}
	queue[head] = receiveReadOnly();
    4fa8:	str.w	r0, [r8, #64]	; 0x40
	headindex = head;
    4fac:	strh	r5, [r6, #26]
	//	}
	//}

	// discard unneeded blocks from the queue
	if (head >= tail) {
		count = head - tail;
    4fae:	subs	r3, r7, r4
    4fb0:	b.n	4e78 <AudioEffectDelay::update()+0x3c>
			// delay requires grabbing data from 2 blocks
			output = allocate();
			if (!output) continue;
			dst = output->data;
			if (index > 0) {
				prev = index - 1;
    4fb2:	add.w	r2, r9, #4294967295
			} else {
				prev = DELAY_QUEUE_SIZE-1;
			}
			if (queue[prev]) {
    4fb6:	adds	r2, #16
    4fb8:	ldr.w	r2, [r6, r2, lsl #2]
    4fbc:	cmp	r2, #0
    4fbe:	bne.n	4f18 <AudioEffectDelay::update()+0xdc>
				src = end - offset;
				while (src < end) {
					*dst++ = *src++; // TODO: optimize
				}
			} else {
				end = dst + offset;
    4fc0:	add.w	r2, r3, fp, lsl #1
				while (dst < end) {
    4fc4:	cmp	r3, r2
    4fc6:	bcs.n	4f44 <AudioEffectDelay::update()+0x108>
    4fc8:	mov	r1, r3
					*dst++ = 0;
    4fca:	strh.w	r4, [r1], #2
				while (src < end) {
					*dst++ = *src++; // TODO: optimize
				}
			} else {
				end = dst + offset;
				while (dst < end) {
    4fce:	cmp	r2, r1
    4fd0:	bhi.n	4fca <AudioEffectDelay::update()+0x18e>
    4fd2:	rsb	r2, sl, r2
    4fd6:	subs	r2, #5
    4fd8:	bic.w	r2, r2, #1
					*dst++ = 0;
				}
			}
			end = output->data + AUDIO_BLOCK_SAMPLES;
			if (queue[index]) {
    4fdc:	add.w	r9, r9, #16
    4fe0:	adds	r2, #2
    4fe2:	add	r3, r2
    4fe4:	ldr.w	r2, [r6, r9, lsl #2]
				end = dst + offset;
				while (dst < end) {
					*dst++ = 0;
				}
			}
			end = output->data + AUDIO_BLOCK_SAMPLES;
    4fe8:	add.w	r0, sl, #260	; 0x104
			if (queue[index]) {
    4fec:	cmp	r2, #0
    4fee:	bne.n	4f54 <AudioEffectDelay::update()+0x118>
				src = queue[index]->data;
				while (dst < end) {
					*dst++ = *src++; // TODO: optimize
				}
			} else {
				while (dst < end) {
    4ff0:	cmp	r3, r0
    4ff2:	bcs.n	4f68 <AudioEffectDelay::update()+0x12c>
					*dst++ = 0;
    4ff4:	strh.w	r4, [r3], #2
				src = queue[index]->data;
				while (dst < end) {
					*dst++ = *src++; // TODO: optimize
				}
			} else {
				while (dst < end) {
    4ff8:	cmp	r0, r3
    4ffa:	bhi.n	4ff4 <AudioEffectDelay::update()+0x1b8>
    4ffc:	b.n	4f68 <AudioEffectDelay::update()+0x12c>
    4ffe:	nop

00005000 <TwoWire::available()>:
		return requestFrom((uint8_t)address, (uint8_t)quantity, (uint8_t)1);
	}
	virtual size_t write(uint8_t data);
	virtual size_t write(const uint8_t *data, size_t quantity);
	virtual int available(void) {
		return rxBufferLength - rxBufferIndex;
    5000:	ldrb.w	r2, [r0, #57]	; 0x39
    5004:	ldrb.w	r0, [r0, #56]	; 0x38
	}
    5008:	subs	r0, r2, r0
    500a:	bx	lr

0000500c <TwoWire::read()>:
	virtual int read(void) {
		if (rxBufferIndex >= rxBufferLength) return -1;
    500c:	ldrb.w	r3, [r0, #56]	; 0x38
    5010:	ldrb.w	r2, [r0, #57]	; 0x39
    5014:	cmp	r2, r3
    5016:	bls.n	5024 <TwoWire::read()+0x18>
		return rxBuffer[rxBufferIndex++];
    5018:	adds	r2, r3, #1
    501a:	add	r3, r0
    501c:	strb.w	r2, [r0, #56]	; 0x38
    5020:	ldrb	r0, [r3, #24]
    5022:	bx	lr
	virtual size_t write(const uint8_t *data, size_t quantity);
	virtual int available(void) {
		return rxBufferLength - rxBufferIndex;
	}
	virtual int read(void) {
		if (rxBufferIndex >= rxBufferLength) return -1;
    5024:	mov.w	r0, #4294967295
		return rxBuffer[rxBufferIndex++];
	}
    5028:	bx	lr
    502a:	nop

0000502c <TwoWire::peek()>:
	virtual int peek(void) {
		if (rxBufferIndex >= rxBufferLength) return -1;
    502c:	ldrb.w	r3, [r0, #56]	; 0x38
    5030:	ldrb.w	r2, [r0, #57]	; 0x39
    5034:	cmp	r2, r3
		return rxBuffer[rxBufferIndex];
    5036:	itte	hi
    5038:	addhi	r3, r3, r0
    503a:	ldrbhi	r0, [r3, #24]
	virtual int read(void) {
		if (rxBufferIndex >= rxBufferLength) return -1;
		return rxBuffer[rxBufferIndex++];
	}
	virtual int peek(void) {
		if (rxBufferIndex >= rxBufferLength) return -1;
    503c:	movls.w	r0, #4294967295
		return rxBuffer[rxBufferIndex];
	}
    5040:	bx	lr
    5042:	nop

00005044 <TwoWire::flush()>:
	virtual void flush(void) {
    5044:	bx	lr
    5046:	nop

00005048 <TwoWire::write(unsigned char const*, unsigned int)>:
	}
	return 0;
}

size_t TwoWire::write(const uint8_t *data, size_t quantity)
{
    5048:	push	{r3, r4, r5, lr}
    504a:	mov	r5, r0
	if (transmitting || slave_mode) {
    504c:	ldrh.w	r0, [r0, #94]	; 0x5e
    5050:	cbz	r0, 5078 <TwoWire::write(unsigned char const*, unsigned int)+0x30>
		size_t avail = BUFFER_LENGTH+1 - txBufferLength;
    5052:	ldrb.w	r3, [r5, #93]	; 0x5d
    5056:	mov	r4, r2
    5058:	rsb	r2, r3, #33	; 0x21
		if (quantity > avail) {
    505c:	cmp	r4, r2
    505e:	bhi.n	507a <TwoWire::write(unsigned char const*, unsigned int)+0x32>
			quantity = avail;
			setWriteError();
		}
		memcpy(txBuffer + txBufferLength, data, quantity);
    5060:	add.w	r0, r5, #59	; 0x3b
    5064:	add	r0, r3
    5066:	mov	r2, r4
    5068:	bl	6f10 <memcpy>
		txBufferLength += quantity;
    506c:	ldrb.w	r3, [r5, #93]	; 0x5d
    5070:	add	r3, r4
    5072:	strb.w	r3, [r5, #93]	; 0x5d
    5076:	mov	r0, r4
		return quantity;
	}
	return 0;
}
    5078:	pop	{r3, r4, r5, pc}
	int getWriteError() { return write_error; }
	void clearWriteError() { setWriteError(0); }
	int printf(const char *format, ...);
	int printf(const __FlashStringHelper *format, ...);
  protected:
	void setWriteError(int err = 1) { write_error = err; }
    507a:	movs	r0, #1
    507c:	mov	r4, r2
    507e:	strb	r0, [r5, #4]
    5080:	b.n	5060 <TwoWire::write(unsigned char const*, unsigned int)+0x18>
    5082:	nop

00005084 <TwoWire::write(unsigned char)>:
//  I2C0_C2      // I2C Control Register 2
//  I2C0_FLT     // I2C Programmable Input Glitch Filter register

size_t TwoWire::write(uint8_t data)
{
	if (transmitting || slave_mode) {
    5084:	ldrh.w	r3, [r0, #94]	; 0x5e
    5088:	cbz	r3, 50a6 <TwoWire::write(unsigned char)+0x22>
		if (txBufferLength >= BUFFER_LENGTH+1) {
    508a:	ldrb.w	r3, [r0, #93]	; 0x5d
    508e:	cmp	r3, #32
    5090:	bhi.n	50a2 <TwoWire::write(unsigned char)+0x1e>
			setWriteError();
			return 0;
		}
		txBuffer[txBufferLength++] = data;
    5092:	adds	r2, r0, r3
    5094:	adds	r3, #1
    5096:	strb.w	r3, [r0, #93]	; 0x5d
		return 1;
    509a:	movs	r0, #1
	if (transmitting || slave_mode) {
		if (txBufferLength >= BUFFER_LENGTH+1) {
			setWriteError();
			return 0;
		}
		txBuffer[txBufferLength++] = data;
    509c:	strb.w	r1, [r2, #59]	; 0x3b
    50a0:	bx	lr
    50a2:	movs	r3, #1
    50a4:	strb	r3, [r0, #4]
size_t TwoWire::write(uint8_t data)
{
	if (transmitting || slave_mode) {
		if (txBufferLength >= BUFFER_LENGTH+1) {
			setWriteError();
			return 0;
    50a6:	movs	r0, #0
    50a8:	bx	lr
    50aa:	nop

000050ac <TwoWire::begin()>:
void TwoWire::begin(void)
{
	//serial_begin(BAUD2DIV(115200));
	//serial_print("\nWire Begin\n");

	rxBufferIndex = 0;
    50ac:	movs	r3, #0
	txBufferLength = 0;
	transmitting = 0;
	user_onRequest = NULL;
	user_onReceive = NULL;
	slave_mode = 0;
	hardware.clock_gate_register |= hardware.clock_gate_mask;
    50ae:	ldr	r2, [r0, #20]
void TwoWire::begin(void)
{
	//serial_begin(BAUD2DIV(115200));
	//serial_print("\nWire Begin\n");

	rxBufferIndex = 0;
    50b0:	strb.w	r3, [r0, #56]	; 0x38
	rxBufferLength = 0;
    50b4:	strb.w	r3, [r0, #57]	; 0x39
	txBufferIndex = 0;
    50b8:	strb.w	r3, [r0, #92]	; 0x5c
	txBufferLength = 0;
    50bc:	strb.w	r3, [r0, #93]	; 0x5d
	transmitting = 0;
    50c0:	strb.w	r3, [r0, #94]	; 0x5e
	user_onRequest = NULL;
	user_onReceive = NULL;
	slave_mode = 0;
    50c4:	strb.w	r3, [r0, #95]	; 0x5f
	hardware.clock_gate_register |= hardware.clock_gate_mask;
    50c8:	ldmia	r2, {r1, r2}

void sda_rising_isr0(void);
void sda_rising_isr1(void);

void TwoWire::begin(void)
{
    50ca:	push	{r4, r5}
	txBufferLength = 0;
	transmitting = 0;
	user_onRequest = NULL;
	user_onReceive = NULL;
	slave_mode = 0;
	hardware.clock_gate_register |= hardware.clock_gate_mask;
    50cc:	ldr	r5, [r1, #0]
	size_t write(int n) {
		return write((uint8_t)n);
	}
	using Print::write;
private:
	KINETIS_I2C_t& port() { return (*(KINETIS_I2C_t *) port_addr); }
    50ce:	ldr	r4, [r0, #16]
	rxBufferIndex = 0;
	rxBufferLength = 0;
	txBufferIndex = 0;
	txBufferLength = 0;
	transmitting = 0;
	user_onRequest = NULL;
    50d0:	str	r3, [r0, #100]	; 0x64
	user_onReceive = NULL;
	slave_mode = 0;
	hardware.clock_gate_register |= hardware.clock_gate_mask;
    50d2:	orrs	r2, r5
	rxBufferLength = 0;
	txBufferIndex = 0;
	txBufferLength = 0;
	transmitting = 0;
	user_onRequest = NULL;
	user_onReceive = NULL;
    50d4:	str	r3, [r0, #104]	; 0x68
	slave_mode = 0;
	hardware.clock_gate_register |= hardware.clock_gate_mask;
    50d6:	str	r2, [r1, #0]
	port().C1 = 0;
    50d8:	strb	r3, [r4, #2]
	// would enable pullup resistors.  However, there seems
	// to be a bug in chip while I2C is enabled, where setting
	// those causes the port to be driven strongly high.
	uint32_t mux;
	volatile uint32_t *reg;
	reg = portConfigRegister(hardware.sda_pin[sda_pin_index]);
    50da:	ldr	r2, [r0, #20]
    50dc:	ldrb.w	r3, [r0, #97]	; 0x61
    50e0:	ldr	r1, [pc, #88]	; (513c <TwoWire::begin()+0x90>)
	//pinMode(4, OUTPUT);
}

void TwoWire::setClock(uint32_t frequency)
{
	if (!(hardware.clock_gate_register & hardware.clock_gate_mask)) return;
    50e2:	ldr	r4, [r2, #0]
	// would enable pullup resistors.  However, there seems
	// to be a bug in chip while I2C is enabled, where setting
	// those causes the port to be driven strongly high.
	uint32_t mux;
	volatile uint32_t *reg;
	reg = portConfigRegister(hardware.sda_pin[sda_pin_index]);
    50e4:	add	r3, r2
    50e6:	ldrb	r5, [r3, #8]
	mux = PORT_PCR_MUX(hardware.sda_mux[sda_pin_index]);
	*reg = mux|PORT_PCR_ODE|PORT_PCR_SRE|PORT_PCR_DSE;
    50e8:	ldrb	r3, [r3, #13]
	// would enable pullup resistors.  However, there seems
	// to be a bug in chip while I2C is enabled, where setting
	// those causes the port to be driven strongly high.
	uint32_t mux;
	volatile uint32_t *reg;
	reg = portConfigRegister(hardware.sda_pin[sda_pin_index]);
    50ea:	add.w	r5, r1, r5, lsl #3
	mux = PORT_PCR_MUX(hardware.sda_mux[sda_pin_index]);
	*reg = mux|PORT_PCR_ODE|PORT_PCR_SRE|PORT_PCR_DSE;
    50ee:	lsls	r3, r3, #8
	// would enable pullup resistors.  However, there seems
	// to be a bug in chip while I2C is enabled, where setting
	// those causes the port to be driven strongly high.
	uint32_t mux;
	volatile uint32_t *reg;
	reg = portConfigRegister(hardware.sda_pin[sda_pin_index]);
    50f0:	ldr	r5, [r5, #4]
	mux = PORT_PCR_MUX(hardware.sda_mux[sda_pin_index]);
	*reg = mux|PORT_PCR_ODE|PORT_PCR_SRE|PORT_PCR_DSE;
    50f2:	and.w	r3, r3, #1792	; 0x700
    50f6:	orr.w	r3, r3, #100	; 0x64
    50fa:	str	r3, [r5, #0]
	reg = portConfigRegister(hardware.scl_pin[scl_pin_index]);
    50fc:	ldrb.w	r3, [r0, #98]	; 0x62
    5100:	add	r3, r2
    5102:	ldrb	r5, [r3, #18]
	mux = PORT_PCR_MUX(hardware.scl_mux[scl_pin_index]);
	*reg = mux|PORT_PCR_ODE|PORT_PCR_SRE|PORT_PCR_DSE;
    5104:	ldrb	r3, [r3, #23]
	uint32_t mux;
	volatile uint32_t *reg;
	reg = portConfigRegister(hardware.sda_pin[sda_pin_index]);
	mux = PORT_PCR_MUX(hardware.sda_mux[sda_pin_index]);
	*reg = mux|PORT_PCR_ODE|PORT_PCR_SRE|PORT_PCR_DSE;
	reg = portConfigRegister(hardware.scl_pin[scl_pin_index]);
    5106:	add.w	r1, r1, r5, lsl #3
	mux = PORT_PCR_MUX(hardware.scl_mux[scl_pin_index]);
	*reg = mux|PORT_PCR_ODE|PORT_PCR_SRE|PORT_PCR_DSE;
    510a:	lsls	r3, r3, #8
	uint32_t mux;
	volatile uint32_t *reg;
	reg = portConfigRegister(hardware.sda_pin[sda_pin_index]);
	mux = PORT_PCR_MUX(hardware.sda_mux[sda_pin_index]);
	*reg = mux|PORT_PCR_ODE|PORT_PCR_SRE|PORT_PCR_DSE;
	reg = portConfigRegister(hardware.scl_pin[scl_pin_index]);
    510c:	ldr	r1, [r1, #4]
	mux = PORT_PCR_MUX(hardware.scl_mux[scl_pin_index]);
	*reg = mux|PORT_PCR_ODE|PORT_PCR_SRE|PORT_PCR_DSE;
    510e:	and.w	r3, r3, #1792	; 0x700
    5112:	orr.w	r3, r3, #100	; 0x64
    5116:	str	r3, [r1, #0]
	//pinMode(4, OUTPUT);
}

void TwoWire::setClock(uint32_t frequency)
{
	if (!(hardware.clock_gate_register & hardware.clock_gate_mask)) return;
    5118:	ldr	r1, [r4, #0]
    511a:	ldr	r3, [r2, #4]
    511c:	tst	r1, r3
    511e:	beq.n	512c <TwoWire::begin()+0x80>
    5120:	ldr	r3, [r0, #16]
		port().F = I2C_F_DIV64; // 1.0 MHz
	}
	port().FLT = 4;
#elif F_BUS == 60000000
	if (frequency < 400000) {
		port().F = 0x2C;	// 104 kHz
    5122:	movs	r2, #44	; 0x2c
    5124:	strb	r2, [r3, #1]
    5126:	ldr	r3, [r0, #16]
	} else if (frequency < 1000000) {
		port().F = 0x1C; // 416 kHz
	} else {
		port().F = 0x12; // 938 kHz
	}
	port().FLT = 4;
    5128:	movs	r2, #4
    512a:	strb	r2, [r3, #6]
    512c:	ldr	r3, [r0, #16]
	*reg = mux|PORT_PCR_ODE|PORT_PCR_SRE|PORT_PCR_DSE;
	reg = portConfigRegister(hardware.scl_pin[scl_pin_index]);
	mux = PORT_PCR_MUX(hardware.scl_mux[scl_pin_index]);
	*reg = mux|PORT_PCR_ODE|PORT_PCR_SRE|PORT_PCR_DSE;
	setClock(100000);
	port().C2 = I2C_C2_HDRS;
    512e:	movs	r2, #32
    5130:	strb	r2, [r3, #5]
    5132:	ldr	r3, [r0, #16]
	port().C1 = I2C_C1_IICEN;
    5134:	movs	r2, #128	; 0x80
    5136:	strb	r2, [r3, #2]
	//pinMode(3, OUTPUT);
	//pinMode(4, OUTPUT);
}
    5138:	pop	{r4, r5}
    513a:	bx	lr
    513c:	.word	0x0009df10

00005140 <TwoWire::isr()>:
	hardware.clock_gate_register &= ~hardware.clock_gate_mask;
}


void TwoWire::isr(void)
{
    5140:	push	{r3, r4, r5, lr}
    5142:	ldr	r2, [r0, #16]
	uint8_t status, c1, data;
	static uint8_t receiving=0;

	status = port().S;
    5144:	ldrb	r4, [r2, #3]
    5146:	uxtb	r4, r4
	//serial_print(".");
	if (status & I2C_S_ARBL) {
    5148:	lsls	r1, r4, #27
	hardware.clock_gate_register &= ~hardware.clock_gate_mask;
}


void TwoWire::isr(void)
{
    514a:	mov	r5, r0
	uint8_t status, c1, data;
	static uint8_t receiving=0;

	status = port().S;
	//serial_print(".");
	if (status & I2C_S_ARBL) {
    514c:	bpl.n	5198 <TwoWire::isr()+0x58>
		// Arbitration Lost
		port().S = I2C_S_ARBL;
    514e:	movs	r3, #16
    5150:	strb	r3, [r2, #3]
		if (receiving && rxBufferLength > 0) {
			// TODO: does this detect the STOP condition in slave receive mode?


		}
		if (!(status & I2C_S_IAAS)) return;
    5152:	lsls	r3, r4, #25
    5154:	bpl.n	5196 <TwoWire::isr()+0x56>
	}
	if (status & I2C_S_IAAS) {
		//serial_print("\n");
		// Addressed As A Slave
		if (status & I2C_S_SRW) {
    5156:	and.w	r4, r4, #4
    515a:	and.w	r3, r4, #255	; 0xff
    515e:	cmp	r4, #0
    5160:	beq.n	5218 <TwoWire::isr()+0xd8>
			//serial_print("T");
			// Begin Slave Transmit
			receiving = 0;
    5162:	ldr	r1, [pc, #264]	; (526c <TwoWire::isr()+0x12c>)
			txBufferLength = 0;
			if (user_onRequest != NULL) {
    5164:	ldr	r2, [r5, #100]	; 0x64
		//serial_print("\n");
		// Addressed As A Slave
		if (status & I2C_S_SRW) {
			//serial_print("T");
			// Begin Slave Transmit
			receiving = 0;
    5166:	movs	r3, #0
    5168:	strb	r3, [r1, #0]
			txBufferLength = 0;
    516a:	strb.w	r3, [r5, #93]	; 0x5d
			if (user_onRequest != NULL) {
    516e:	cmp	r2, #0
    5170:	beq.n	5240 <TwoWire::isr()+0x100>
				user_onRequest();
    5172:	blx	r2
			}
			if (txBufferLength == 0) {
    5174:	ldrb.w	r3, [r5, #93]	; 0x5d
    5178:	cmp	r3, #0
    517a:	beq.n	5240 <TwoWire::isr()+0x100>
    517c:	ldr	r3, [r5, #16]
				// when we should send nothing?  Arduino's AVR
				// implementation does this, but is it ok?
				txBufferLength = 1;
				txBuffer[0] = 0;
			}
			port().C1 = I2C_C1_IICEN | I2C_C1_IICIE | I2C_C1_TX;
    517e:	movs	r2, #208	; 0xd0
    5180:	strb	r2, [r3, #2]
    5182:	ldr	r3, [r5, #16]
			port().D = txBuffer[0];
    5184:	ldrb.w	r2, [r5, #59]	; 0x3b
    5188:	strb	r2, [r3, #4]
    518a:	ldr	r3, [r5, #16]
			txBufferIndex = 1;
    518c:	movs	r2, #1
    518e:	strb.w	r2, [r5, #92]	; 0x5c
		if (rxBufferLength < BUFFER_LENGTH && receiving) {
			rxBuffer[rxBufferLength++] = data;
		}
		//digitalWriteFast(4, LOW);
	}
	port().S = I2C_S_IICIF;
    5192:	movs	r2, #2
    5194:	strb	r2, [r3, #3]
    5196:	pop	{r3, r4, r5, pc}


		}
		if (!(status & I2C_S_IAAS)) return;
	}
	if (status & I2C_S_IAAS) {
    5198:	and.w	r3, r4, #64	; 0x40
    519c:	and.w	r0, r3, #255	; 0xff
    51a0:	cmp	r3, #0
    51a2:	bne.n	5156 <TwoWire::isr()+0x16>
		}
		port().S = I2C_S_IICIF;
		return;
	}
	#if defined(WIRE_HAS_STOP_INTERRUPT)
	c1 = port().FLT;
    51a4:	ldrb	r3, [r2, #6]
    51a6:	uxtb	r3, r3
	if ((c1 & I2C_FLT_STOPF) && (c1 & I2C_FLT_STOPIE)) {
    51a8:	and.w	r1, r3, #96	; 0x60
    51ac:	cmp	r1, #96	; 0x60
    51ae:	beq.n	524e <TwoWire::isr()+0x10e>
			rxBufferIndex = 0;
			user_onReceive(rxBufferLength);
		}
	}
	#endif
	c1 = port().C1;
    51b0:	ldrb	r3, [r2, #2]
	if (c1 & I2C_C1_TX) {
    51b2:	and.w	r3, r3, #16
    51b6:	and.w	r1, r3, #255	; 0xff
    51ba:	cbz	r3, 51ea <TwoWire::isr()+0xaa>
		// Continue Slave Transmit
		//serial_print("t");
		if ((status & I2C_S_RXAK) == 0) {
    51bc:	ands.w	r4, r4, #1
    51c0:	bne.n	5232 <TwoWire::isr()+0xf2>
			//serial_print(".");
			// Master ACK'd previous byte
			if (txBufferIndex < txBufferLength) {
    51c2:	ldrb.w	r3, [r5, #92]	; 0x5c
    51c6:	ldrb.w	r1, [r5, #93]	; 0x5d
    51ca:	cmp	r1, r3
    51cc:	bls.n	5266 <TwoWire::isr()+0x126>
				port().D = txBuffer[txBufferIndex++];
    51ce:	adds	r1, r3, #1
    51d0:	add	r3, r5
    51d2:	strb.w	r1, [r5, #92]	; 0x5c
    51d6:	ldrb.w	r3, [r3, #59]	; 0x3b
    51da:	strb	r3, [r2, #4]
    51dc:	ldr	r3, [r5, #16]
			} else {
				port().D = 0;
			}
			port().C1 = I2C_C1_IICEN | I2C_C1_IICIE | I2C_C1_TX;
    51de:	movs	r2, #208	; 0xd0
    51e0:	strb	r2, [r3, #2]
    51e2:	ldr	r3, [r5, #16]
		if (rxBufferLength < BUFFER_LENGTH && receiving) {
			rxBuffer[rxBufferLength++] = data;
		}
		//digitalWriteFast(4, LOW);
	}
	port().S = I2C_S_IICIF;
    51e4:	movs	r2, #2
    51e6:	strb	r2, [r3, #3]
    51e8:	b.n	5196 <TwoWire::isr()+0x56>
			port().C1 = I2C_C1_IICEN | I2C_C1_IICIE;
			data = port().D;
		}
	} else {
		// Continue Slave Receive
		irqcount = 0;
    51ea:	strb.w	r1, [r5, #96]	; 0x60
		#ifdef WIRE_HAS_STOP_INTERRUPT
		port().FLT |= I2C_FLT_STOPIE;
    51ee:	ldrb	r3, [r2, #6]
    51f0:	orr.w	r3, r3, #32
    51f4:	strb	r3, [r2, #6]
    51f6:	ldr	r3, [r5, #16]
		#endif
		#endif // WIRE_HAS_STOP_INTERRUPT
		//digitalWriteFast(4, HIGH);
		data = port().D;
		//serial_phex(data);
		if (rxBufferLength < BUFFER_LENGTH && receiving) {
    51f8:	ldrb.w	r1, [r5, #57]	; 0x39
			attachInterrupt(hardware.sda_pin[sda_pin_index], sda_rising_isr1, RISING);
		}
		#endif
		#endif // WIRE_HAS_STOP_INTERRUPT
		//digitalWriteFast(4, HIGH);
		data = port().D;
    51fc:	ldrb	r2, [r3, #4]
		//serial_phex(data);
		if (rxBufferLength < BUFFER_LENGTH && receiving) {
    51fe:	cmp	r1, #31
			attachInterrupt(hardware.sda_pin[sda_pin_index], sda_rising_isr1, RISING);
		}
		#endif
		#endif // WIRE_HAS_STOP_INTERRUPT
		//digitalWriteFast(4, HIGH);
		data = port().D;
    5200:	uxtb	r2, r2
		//serial_phex(data);
		if (rxBufferLength < BUFFER_LENGTH && receiving) {
    5202:	bhi.n	5192 <TwoWire::isr()+0x52>
    5204:	ldr	r0, [pc, #100]	; (526c <TwoWire::isr()+0x12c>)
    5206:	ldrb	r0, [r0, #0]
    5208:	cmp	r0, #0
    520a:	beq.n	5192 <TwoWire::isr()+0x52>
			rxBuffer[rxBufferLength++] = data;
    520c:	adds	r0, r5, r1
    520e:	adds	r1, #1
    5210:	strb.w	r1, [r5, #57]	; 0x39
    5214:	strb	r2, [r0, #24]
    5216:	b.n	5192 <TwoWire::isr()+0x52>
    5218:	ldr	r2, [r5, #16]
			txBufferIndex = 1;
		} else {
			// Begin Slave Receive
			//serial_print("R");
			receiving = 1;
			rxBufferLength = 0;
    521a:	strb.w	r3, [r5, #57]	; 0x39
			port().C1 = I2C_C1_IICEN | I2C_C1_IICIE;
    521e:	movs	r3, #192	; 0xc0
    5220:	strb	r3, [r2, #2]
    5222:	ldr	r3, [r5, #16]
			port().D = txBuffer[0];
			txBufferIndex = 1;
		} else {
			// Begin Slave Receive
			//serial_print("R");
			receiving = 1;
    5224:	ldr	r2, [pc, #68]	; (526c <TwoWire::isr()+0x12c>)
			rxBufferLength = 0;
			port().C1 = I2C_C1_IICEN | I2C_C1_IICIE;
			data = port().D;
    5226:	ldrb	r1, [r3, #4]
			port().D = txBuffer[0];
			txBufferIndex = 1;
		} else {
			// Begin Slave Receive
			//serial_print("R");
			receiving = 1;
    5228:	movs	r1, #1
    522a:	strb	r1, [r2, #0]
		if (rxBufferLength < BUFFER_LENGTH && receiving) {
			rxBuffer[rxBufferLength++] = data;
		}
		//digitalWriteFast(4, LOW);
	}
	port().S = I2C_S_IICIF;
    522c:	movs	r2, #2
    522e:	strb	r2, [r3, #3]
    5230:	b.n	5196 <TwoWire::isr()+0x56>
			}
			port().C1 = I2C_C1_IICEN | I2C_C1_IICIE | I2C_C1_TX;
		} else {
			//serial_print("*");
			// Master did not ACK previous byte
			port().C1 = I2C_C1_IICEN | I2C_C1_IICIE;
    5232:	movs	r3, #192	; 0xc0
    5234:	strb	r3, [r2, #2]
    5236:	ldr	r3, [r5, #16]
			data = port().D;
    5238:	ldrb	r2, [r3, #4]
		if (rxBufferLength < BUFFER_LENGTH && receiving) {
			rxBuffer[rxBufferLength++] = data;
		}
		//digitalWriteFast(4, LOW);
	}
	port().S = I2C_S_IICIF;
    523a:	movs	r2, #2
    523c:	strb	r2, [r3, #3]
    523e:	b.n	5196 <TwoWire::isr()+0x56>
			}
			if (txBufferLength == 0) {
				// is this correct, transmitting a single zero
				// when we should send nothing?  Arduino's AVR
				// implementation does this, but is it ok?
				txBufferLength = 1;
    5240:	movs	r2, #1
				txBuffer[0] = 0;
    5242:	movs	r3, #0
			}
			if (txBufferLength == 0) {
				// is this correct, transmitting a single zero
				// when we should send nothing?  Arduino's AVR
				// implementation does this, but is it ok?
				txBufferLength = 1;
    5244:	strb.w	r2, [r5, #93]	; 0x5d
				txBuffer[0] = 0;
    5248:	strb.w	r3, [r5, #59]	; 0x3b
    524c:	b.n	517c <TwoWire::isr()+0x3c>
		return;
	}
	#if defined(WIRE_HAS_STOP_INTERRUPT)
	c1 = port().FLT;
	if ((c1 & I2C_FLT_STOPF) && (c1 & I2C_FLT_STOPIE)) {
		port().FLT = c1 & ~I2C_FLT_STOPIE;
    524e:	and.w	r3, r3, #223	; 0xdf
    5252:	strb	r3, [r2, #6]
		if (user_onReceive != NULL) {
    5254:	ldr	r3, [r5, #104]	; 0x68
    5256:	cbz	r3, 5262 <TwoWire::isr()+0x122>
			rxBufferIndex = 0;
    5258:	strb.w	r0, [r5, #56]	; 0x38
			user_onReceive(rxBufferLength);
    525c:	ldrb.w	r0, [r5, #57]	; 0x39
    5260:	blx	r3
    5262:	ldr	r2, [r5, #16]
    5264:	b.n	51b0 <TwoWire::isr()+0x70>
			//serial_print(".");
			// Master ACK'd previous byte
			if (txBufferIndex < txBufferLength) {
				port().D = txBuffer[txBufferIndex++];
			} else {
				port().D = 0;
    5266:	strb	r4, [r2, #4]
    5268:	b.n	51dc <TwoWire::isr()+0x9c>
    526a:	nop
    526c:	.word	0x2001277c

00005270 <TwoWire::wait_idle()>:
	}
	return 0;
}

bool TwoWire::wait_idle(void)
{
    5270:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
	// do not remove this "redundant" code without
	// carefully verifying the case mentioned here:
	//
	// https://forum.pjrc.com/threads/17469-millis%28%29-on-teensy-3?p=104924&viewfull=1#post104924
	//
	volatile uint32_t ret = systick_millis_count; // single aligned 32 bit is atomic
    5274:	ldr	r7, [pc, #220]	; (5354 <L_1438_delayMicroseconds+0x18>)
				digitalWrite(scl_pin, HIGH);
				delayMicroseconds(5);
			}
			uint32_t mux;
			volatile uint32_t *reg;
			reg = portConfigRegister(hardware.sda_pin[sda_pin_index]);
    5276:	ldr.w	r9, [pc, #224]	; 5358 <L_1438_delayMicroseconds+0x1c>
    527a:	ldr	r3, [r7, #0]
    527c:	ldr	r2, [r0, #16]
	}
	return 0;
}

bool TwoWire::wait_idle(void)
{
    527e:	sub	sp, #8
    5280:	mov	r6, r0
    5282:	str	r3, [sp, #0]
	return ret;
    5284:	ldr.w	r8, [sp]
	bool reset=false;
    5288:	movs	r1, #0
#else
		"subs   %0, #1"				"\n\t"
		"bne    L_%=_delayMicroseconds"		"\n"
		: "+r" (n) :
#endif
	);
    528a:	mov.w	r5, #300	; 0x12c
	uint8_t i2c_status(void) {
		return port().S;
    528e:	ldrb	r3, [r2, #3]
	uint32_t wait_begin = millis();

	//Serial.print("busy:");
	while (i2c_status() & I2C_S_BUSY) {
    5290:	lsls	r3, r3, #26
    5292:	bpl.n	534c <L_1438_delayMicroseconds+0x10>
	// do not remove this "redundant" code without
	// carefully verifying the case mentioned here:
	//
	// https://forum.pjrc.com/threads/17469-millis%28%29-on-teensy-3?p=104924&viewfull=1#post104924
	//
	volatile uint32_t ret = systick_millis_count; // single aligned 32 bit is atomic
    5294:	ldr	r3, [r7, #0]
    5296:	str	r3, [sp, #4]
	return ret;
    5298:	ldr	r3, [sp, #4]
		//Serial.write('.') ;
		uint32_t waited = millis() - wait_begin;
    529a:	rsb	r3, r8, r3
#if 1
		if (waited > 15 && !reset) {
    529e:	cmp	r3, #15
    52a0:	bls.n	528e <TwoWire::wait_idle()+0x1e>
    52a2:	cbz	r1, 52b8 <TwoWire::wait_idle()+0x48>
			*reg = mux|PORT_PCR_ODE|PORT_PCR_SRE|PORT_PCR_DSE;
			delayMicroseconds(10);
			continue;
		}
#endif
		if (waited > 16) {
    52a4:	cmp	r3, #16
    52a6:	beq.n	528e <TwoWire::wait_idle()+0x1e>
			// bus stuck busy too long
			port().C1 = 0;
    52a8:	movs	r0, #0
    52aa:	strb	r0, [r2, #2]
	size_t write(int n) {
		return write((uint8_t)n);
	}
	using Print::write;
private:
	KINETIS_I2C_t& port() { return (*(KINETIS_I2C_t *) port_addr); }
    52ac:	ldr	r3, [r6, #16]
			port().C1 = I2C_C1_IICEN;
    52ae:	movs	r2, #128	; 0x80
    52b0:	strb	r2, [r3, #2]
			//return 4; // timeout waiting for bus
			return false;
		}
	}
	return true;
}
    52b2:	add	sp, #8
    52b4:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		uint32_t waited = millis() - wait_begin;
#if 1
		if (waited > 15 && !reset) {
			reset = true;
			//Serial.println("attempt forced reset");
			uint8_t sda_pin = hardware.sda_pin[sda_pin_index];
    52b8:	ldr	r2, [r6, #20]
    52ba:	ldrb.w	r3, [r6, #97]	; 0x61
    52be:	add	r3, r2
			pinMode(sda_pin, INPUT_DISABLE);
    52c0:	movs	r1, #5
    52c2:	ldrb	r0, [r3, #8]
    52c4:	bl	7854 <pinMode>
			uint8_t scl_pin = hardware.scl_pin[sda_pin_index];
    52c8:	ldr	r2, [r6, #20]
    52ca:	ldrb.w	r3, [r6, #97]	; 0x61
    52ce:	add	r3, r2
			pinMode(scl_pin, OUTPUT);
    52d0:	movs	r1, #1
		if (waited > 15 && !reset) {
			reset = true;
			//Serial.println("attempt forced reset");
			uint8_t sda_pin = hardware.sda_pin[sda_pin_index];
			pinMode(sda_pin, INPUT_DISABLE);
			uint8_t scl_pin = hardware.scl_pin[sda_pin_index];
    52d2:	ldrb.w	sl, [r3, #18]
			pinMode(scl_pin, OUTPUT);
    52d6:	mov	r0, sl
    52d8:	bl	7854 <pinMode>
    52dc:	movs	r4, #9
			for (int i=0; i < 9; i++) {
				digitalWrite(scl_pin, LOW);
    52de:	movs	r1, #0
    52e0:	mov	r0, sl
    52e2:	bl	782c <digitalWrite>
#else
		"subs   %0, #1"				"\n\t"
		"bne    L_%=_delayMicroseconds"		"\n"
		: "+r" (n) :
#endif
	);
    52e6:	mov	r3, r5

000052e8 <L_1373_delayMicroseconds>:
    52e8:	subs	r3, #1
    52ea:	bne.n	52e8 <L_1373_delayMicroseconds>
				delayMicroseconds(5);
				digitalWrite(scl_pin, HIGH);
    52ec:	movs	r1, #1
    52ee:	mov	r0, sl
    52f0:	bl	782c <digitalWrite>
    52f4:	mov	r3, r5

000052f6 <L_1387_delayMicroseconds>:
    52f6:	subs	r3, #1
    52f8:	bne.n	52f6 <L_1387_delayMicroseconds>
			//Serial.println("attempt forced reset");
			uint8_t sda_pin = hardware.sda_pin[sda_pin_index];
			pinMode(sda_pin, INPUT_DISABLE);
			uint8_t scl_pin = hardware.scl_pin[sda_pin_index];
			pinMode(scl_pin, OUTPUT);
			for (int i=0; i < 9; i++) {
    52fa:	subs	r4, #1
    52fc:	bne.n	52de <TwoWire::wait_idle()+0x6e>
				digitalWrite(scl_pin, HIGH);
				delayMicroseconds(5);
			}
			uint32_t mux;
			volatile uint32_t *reg;
			reg = portConfigRegister(hardware.sda_pin[sda_pin_index]);
    52fe:	ldr	r0, [r6, #20]
    5300:	ldrb.w	r1, [r6, #97]	; 0x61
    5304:	add	r1, r0
    5306:	mov.w	r2, #600	; 0x258
    530a:	ldrb	r4, [r1, #8]
			mux = PORT_PCR_MUX(hardware.sda_mux[sda_pin_index]);
			*reg = mux|PORT_PCR_ODE|PORT_PCR_SRE|PORT_PCR_DSE;
    530c:	ldrb	r3, [r1, #13]
				digitalWrite(scl_pin, HIGH);
				delayMicroseconds(5);
			}
			uint32_t mux;
			volatile uint32_t *reg;
			reg = portConfigRegister(hardware.sda_pin[sda_pin_index]);
    530e:	add.w	r1, r9, r4, lsl #3
			mux = PORT_PCR_MUX(hardware.sda_mux[sda_pin_index]);
			*reg = mux|PORT_PCR_ODE|PORT_PCR_SRE|PORT_PCR_DSE;
    5312:	lsls	r3, r3, #8
				digitalWrite(scl_pin, HIGH);
				delayMicroseconds(5);
			}
			uint32_t mux;
			volatile uint32_t *reg;
			reg = portConfigRegister(hardware.sda_pin[sda_pin_index]);
    5314:	ldr	r1, [r1, #4]
			mux = PORT_PCR_MUX(hardware.sda_mux[sda_pin_index]);
			*reg = mux|PORT_PCR_ODE|PORT_PCR_SRE|PORT_PCR_DSE;
    5316:	and.w	r3, r3, #1792	; 0x700
    531a:	orr.w	r3, r3, #100	; 0x64
    531e:	str	r3, [r1, #0]
			reg = portConfigRegister(hardware.scl_pin[scl_pin_index]);
    5320:	ldrb.w	r3, [r6, #98]	; 0x62
    5324:	add	r3, r0
    5326:	ldrb	r1, [r3, #18]
			mux = PORT_PCR_MUX(hardware.scl_mux[scl_pin_index]);
			*reg = mux|PORT_PCR_ODE|PORT_PCR_SRE|PORT_PCR_DSE;
    5328:	ldrb	r3, [r3, #23]
			uint32_t mux;
			volatile uint32_t *reg;
			reg = portConfigRegister(hardware.sda_pin[sda_pin_index]);
			mux = PORT_PCR_MUX(hardware.sda_mux[sda_pin_index]);
			*reg = mux|PORT_PCR_ODE|PORT_PCR_SRE|PORT_PCR_DSE;
			reg = portConfigRegister(hardware.scl_pin[scl_pin_index]);
    532a:	add.w	r1, r9, r1, lsl #3
			mux = PORT_PCR_MUX(hardware.scl_mux[scl_pin_index]);
			*reg = mux|PORT_PCR_ODE|PORT_PCR_SRE|PORT_PCR_DSE;
    532e:	lsls	r3, r3, #8
			uint32_t mux;
			volatile uint32_t *reg;
			reg = portConfigRegister(hardware.sda_pin[sda_pin_index]);
			mux = PORT_PCR_MUX(hardware.sda_mux[sda_pin_index]);
			*reg = mux|PORT_PCR_ODE|PORT_PCR_SRE|PORT_PCR_DSE;
			reg = portConfigRegister(hardware.scl_pin[scl_pin_index]);
    5330:	ldr	r1, [r1, #4]
			mux = PORT_PCR_MUX(hardware.scl_mux[scl_pin_index]);
			*reg = mux|PORT_PCR_ODE|PORT_PCR_SRE|PORT_PCR_DSE;
    5332:	and.w	r3, r3, #1792	; 0x700
    5336:	orr.w	r3, r3, #100	; 0x64
    533a:	str	r3, [r1, #0]

0000533c <L_1438_delayMicroseconds>:
    533c:	subs	r2, #1
    533e:	bne.n	533c <L_1438_delayMicroseconds>
    5340:	ldr	r2, [r6, #16]
	uint8_t i2c_status(void) {
		return port().S;
    5342:	ldrb	r3, [r2, #3]
{
	bool reset=false;
	uint32_t wait_begin = millis();

	//Serial.print("busy:");
	while (i2c_status() & I2C_S_BUSY) {
    5344:	lsls	r3, r3, #26
		//Serial.write('.') ;
		uint32_t waited = millis() - wait_begin;
#if 1
		if (waited > 15 && !reset) {
			reset = true;
    5346:	mov.w	r1, #1
{
	bool reset=false;
	uint32_t wait_begin = millis();

	//Serial.print("busy:");
	while (i2c_status() & I2C_S_BUSY) {
    534a:	bmi.n	5294 <TwoWire::wait_idle()+0x24>
			//Serial.println("abort");
			//return 4; // timeout waiting for bus
			return false;
		}
	}
	return true;
    534c:	movs	r0, #1
}
    534e:	add	sp, #8
    5350:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    5354:	.word	0x20012a14
    5358:	.word	0x0009df10

0000535c <TwoWire::endTransmission(unsigned char)>:

uint8_t TwoWire::endTransmission(uint8_t sendStop)
{
    535c:	push	{r4, r5, r6, r7, lr}
	size_t write(int n) {
		return write((uint8_t)n);
	}
	using Print::write;
private:
	KINETIS_I2C_t& port() { return (*(KINETIS_I2C_t *) port_addr); }
    535e:	ldr	r3, [r0, #16]
	uint8_t i, status, ret=0;
	uint32_t wait_begin;

	// clear the status flags
	port().S = I2C_S_IICIF | I2C_S_ARBL;
    5360:	movs	r2, #18
    5362:	strb	r2, [r3, #3]
    5364:	ldr	r2, [r0, #16]
	// now take control of the bus...
	if (port().C1 & I2C_C1_MST) {
    5366:	ldrb	r3, [r2, #2]
    5368:	and.w	r3, r3, #32
	}
	return true;
}

uint8_t TwoWire::endTransmission(uint8_t sendStop)
{
    536c:	sub	sp, #20
    536e:	mov	r4, r0
    5370:	mov	r5, r1
	uint32_t wait_begin;

	// clear the status flags
	port().S = I2C_S_IICIF | I2C_S_ARBL;
	// now take control of the bus...
	if (port().C1 & I2C_C1_MST) {
    5372:	cmp	r3, #0
    5374:	beq.n	5434 <TwoWire::endTransmission(unsigned char)+0xd8>
		// we are already the bus master, so send a repeated start
		//Serial.print("rstart:");
		port().C1 = I2C_C1_IICEN | I2C_C1_MST | I2C_C1_RSTA | I2C_C1_TX;
    5376:	movs	r3, #180	; 0xb4
    5378:	strb	r3, [r2, #2]
	// do not remove this "redundant" code without
	// carefully verifying the case mentioned here:
	//
	// https://forum.pjrc.com/threads/17469-millis%28%29-on-teensy-3?p=104924&viewfull=1#post104924
	//
	volatile uint32_t ret = systick_millis_count; // single aligned 32 bit is atomic
    537a:	ldr	r1, [pc, #240]	; (546c <TwoWire::endTransmission(unsigned char)+0x110>)
    537c:	ldr	r2, [r4, #16]
    537e:	ldr	r3, [r1, #0]
    5380:	str	r3, [sp, #0]
	return ret;
    5382:	ldr	r6, [sp, #0]
    5384:	b.n	5392 <TwoWire::endTransmission(unsigned char)+0x36>
	// do not remove this "redundant" code without
	// carefully verifying the case mentioned here:
	//
	// https://forum.pjrc.com/threads/17469-millis%28%29-on-teensy-3?p=104924&viewfull=1#post104924
	//
	volatile uint32_t ret = systick_millis_count; // single aligned 32 bit is atomic
    5386:	ldr	r3, [r1, #0]
    5388:	str	r3, [sp, #4]
	return ret;
    538a:	ldr	r3, [sp, #4]
	wait_begin = millis();
	while (1) {
		status = i2c_status();
		if ((status & I2C_S_BUSY)) break;
		//Serial.write('*') ;
		if (millis() - wait_begin > 4) {
    538c:	subs	r3, r3, r6
    538e:	cmp	r3, #4
    5390:	bhi.n	5418 <TwoWire::endTransmission(unsigned char)+0xbc>
	uint8_t i2c_status(void) {
		return port().S;
    5392:	ldrb	r3, [r2, #3]
	}
	// wait until start condition establishes control of the bus
	wait_begin = millis();
	while (1) {
		status = i2c_status();
		if ((status & I2C_S_BUSY)) break;
    5394:	and.w	r3, r3, #32
    5398:	and.w	r0, r3, #255	; 0xff
    539c:	cmp	r3, #0
    539e:	beq.n	5386 <TwoWire::endTransmission(unsigned char)+0x2a>
			//Serial.printf("endTransmission err2\n");
			return 4; // error generating start condition
		}
	}
	// transmit the address and data
	for (i=0; i < txBufferLength; i++) {
    53a0:	ldrb.w	r3, [r4, #93]	; 0x5d
    53a4:	cmp	r3, #0
    53a6:	beq.n	540c <TwoWire::endTransmission(unsigned char)+0xb0>
    53a8:	mov.w	lr, #0
				//Serial.println("abort3");
				//Serial.printf("endTransmission err3\n");
				return 4; // clock stretch too long
			}
		}
		port().S = I2C_S_IICIF;
    53ac:	mov.w	ip, #2
			return 4; // error generating start condition
		}
	}
	// transmit the address and data
	for (i=0; i < txBufferLength; i++) {
		port().D = txBuffer[i];
    53b0:	add.w	r3, r4, lr
    53b4:	ldrb.w	r3, [r3, #59]	; 0x3b
    53b8:	strb	r3, [r2, #4]
	// do not remove this "redundant" code without
	// carefully verifying the case mentioned here:
	//
	// https://forum.pjrc.com/threads/17469-millis%28%29-on-teensy-3?p=104924&viewfull=1#post104924
	//
	volatile uint32_t ret = systick_millis_count; // single aligned 32 bit is atomic
    53ba:	ldr	r3, [r1, #0]
    53bc:	str	r3, [sp, #12]
	return ret;
    53be:	ldr	r7, [sp, #12]
    53c0:	ldr	r0, [r4, #16]
    53c2:	b.n	53d4 <TwoWire::endTransmission(unsigned char)+0x78>
		//Serial.write('^');
		wait_begin = millis();
		while (1) {
			status = i2c_status();
			if ((status & I2C_S_IICIF)) break;
			if (!(status & I2C_S_BUSY)) break;
    53c4:	lsls	r3, r3, #26
    53c6:	bpl.n	53e4 <TwoWire::endTransmission(unsigned char)+0x88>
	// do not remove this "redundant" code without
	// carefully verifying the case mentioned here:
	//
	// https://forum.pjrc.com/threads/17469-millis%28%29-on-teensy-3?p=104924&viewfull=1#post104924
	//
	volatile uint32_t ret = systick_millis_count; // single aligned 32 bit is atomic
    53c8:	ldr	r3, [r1, #0]
    53ca:	str	r3, [sp, #8]
	return ret;
    53cc:	ldr	r3, [sp, #8]
			if (millis() - wait_begin > 5) {
    53ce:	subs	r3, r3, r7
    53d0:	cmp	r3, #5
    53d2:	bhi.n	5426 <TwoWire::endTransmission(unsigned char)+0xca>
    53d4:	ldrb	r3, [r0, #3]
    53d6:	uxtb	r3, r3
		port().D = txBuffer[i];
		//Serial.write('^');
		wait_begin = millis();
		while (1) {
			status = i2c_status();
			if ((status & I2C_S_IICIF)) break;
    53d8:	and.w	r2, r3, #2
    53dc:	and.w	r6, r2, #255	; 0xff
    53e0:	cmp	r2, #0
    53e2:	beq.n	53c4 <TwoWire::endTransmission(unsigned char)+0x68>
				//Serial.println("abort3");
				//Serial.printf("endTransmission err3\n");
				return 4; // clock stretch too long
			}
		}
		port().S = I2C_S_IICIF;
    53e4:	strb.w	ip, [r0, #3]
    53e8:	ldr	r6, [r4, #16]
    53ea:	ldrb	r3, [r6, #3]
    53ec:	uxtb	r3, r3
		//Serial.write('$');
		status = i2c_status();
		if ((status & I2C_S_ARBL)) {
    53ee:	lsls	r7, r3, #27
	size_t write(int n) {
		return write((uint8_t)n);
	}
	using Print::write;
private:
	KINETIS_I2C_t& port() { return (*(KINETIS_I2C_t *) port_addr); }
    53f0:	mov	r2, r6
    53f2:	bmi.n	5450 <TwoWire::endTransmission(unsigned char)+0xf4>
			port().C1 = I2C_C1_IICEN;
			//Serial.printf("endTransmission err4\n");
			ret = 4; // 4:other error
			break;
		}
		if (!(status & I2C_S_BUSY)) {
    53f4:	lsls	r7, r3, #26
    53f6:	bpl.n	5450 <TwoWire::endTransmission(unsigned char)+0xf4>
			port().C1 = I2C_C1_IICEN;
			//Serial.printf("endTransmission err5\n");
			ret = 4; // 4:other error
			break;
		}
		if (status & I2C_S_RXAK) {
    53f8:	lsls	r3, r3, #31
    53fa:	bmi.n	5460 <TwoWire::endTransmission(unsigned char)+0x104>
			//Serial.printf("endTransmission err2\n");
			return 4; // error generating start condition
		}
	}
	// transmit the address and data
	for (i=0; i < txBufferLength; i++) {
    53fc:	add.w	lr, lr, #1
    5400:	ldrb.w	r3, [r4, #93]	; 0x5d
    5404:	uxtb.w	lr, lr
    5408:	cmp	r3, lr
    540a:	bhi.n	53b0 <TwoWire::endTransmission(unsigned char)+0x54>
	return true;
}

uint8_t TwoWire::endTransmission(uint8_t sendStop)
{
	uint8_t i, status, ret=0;
    540c:	movs	r0, #0
			}
			sendStop = 1;
			break;
		}
	}
	if (sendStop) {
    540e:	cbnz	r5, 5458 <TwoWire::endTransmission(unsigned char)+0xfc>
		// send the stop condition
		port().C1 = I2C_C1_IICEN;
		// TODO: do we wait for this somehow?
	}
	transmitting = 0;
    5410:	movs	r3, #0
    5412:	strb.w	r3, [r4, #94]	; 0x5e
    5416:	b.n	5422 <TwoWire::endTransmission(unsigned char)+0xc6>
	while (1) {
		status = i2c_status();
		if ((status & I2C_S_BUSY)) break;
		//Serial.write('*') ;
		if (millis() - wait_begin > 4) {
			port().C1 = 0;
    5418:	strb	r0, [r2, #2]
    541a:	ldr	r3, [r4, #16]
			port().C1 = I2C_C1_IICEN;
    541c:	movs	r2, #128	; 0x80
    541e:	strb	r2, [r3, #2]
			//Serial.println("abort2");
			//Serial.printf("endTransmission err2\n");
			return 4; // error generating start condition
    5420:	movs	r0, #4
	}
	transmitting = 0;
	//Serial.print(" ret=");
	//Serial.println(ret);
	return ret;
}
    5422:	add	sp, #20
    5424:	pop	{r4, r5, r6, r7, pc}
		while (1) {
			status = i2c_status();
			if ((status & I2C_S_IICIF)) break;
			if (!(status & I2C_S_BUSY)) break;
			if (millis() - wait_begin > 5) {
				port().C1 = 0;
    5426:	strb	r6, [r0, #2]
    5428:	ldr	r3, [r4, #16]
				port().C1 = I2C_C1_IICEN;
    542a:	movs	r2, #128	; 0x80
				//Serial.println("abort3");
				//Serial.printf("endTransmission err3\n");
				return 4; // clock stretch too long
    542c:	movs	r0, #4
			status = i2c_status();
			if ((status & I2C_S_IICIF)) break;
			if (!(status & I2C_S_BUSY)) break;
			if (millis() - wait_begin > 5) {
				port().C1 = 0;
				port().C1 = I2C_C1_IICEN;
    542e:	strb	r2, [r3, #2]
	}
	transmitting = 0;
	//Serial.print(" ret=");
	//Serial.println(ret);
	return ret;
}
    5430:	add	sp, #20
    5432:	pop	{r4, r5, r6, r7, pc}
    5434:	and.w	r6, r3, #255	; 0xff
		// we are already the bus master, so send a repeated start
		//Serial.print("rstart:");
		port().C1 = I2C_C1_IICEN | I2C_C1_MST | I2C_C1_RSTA | I2C_C1_TX;
	} else {
		// we are not currently the bus master, so wait for bus ready
		if (!wait_idle()) {
    5438:	bl	5270 <TwoWire::wait_idle()>
    543c:	cbnz	r0, 5444 <TwoWire::endTransmission(unsigned char)+0xe8>
			//Serial.printf("endTransmission err1\n");
			return 4; // timeout waiting for bus
    543e:	movs	r0, #4
	}
	transmitting = 0;
	//Serial.print(" ret=");
	//Serial.println(ret);
	return ret;
}
    5440:	add	sp, #20
    5442:	pop	{r4, r5, r6, r7, pc}
    5444:	ldr	r3, [r4, #16]
		if (!wait_idle()) {
			//Serial.printf("endTransmission err1\n");
			return 4; // timeout waiting for bus
		}
		// become the bus master in transmit mode (send start)
		slave_mode = 0;
    5446:	strb.w	r6, [r4, #95]	; 0x5f
		port().C1 = I2C_C1_IICEN | I2C_C1_MST | I2C_C1_TX;
    544a:	movs	r2, #176	; 0xb0
    544c:	strb	r2, [r3, #2]
    544e:	b.n	537a <TwoWire::endTransmission(unsigned char)+0x1e>
			ret = 4; // 4:other error
			break;
		}
		if (!(status & I2C_S_BUSY)) {
			// suddenly lost control of the bus!
			port().C1 = I2C_C1_IICEN;
    5450:	movs	r3, #128	; 0x80
    5452:	strb	r3, [r6, #2]
			//Serial.printf("endTransmission err5\n");
			ret = 4; // 4:other error
    5454:	movs	r0, #4
    5456:	b.n	540e <TwoWire::endTransmission(unsigned char)+0xb2>
    5458:	ldr	r6, [r4, #16]
			break;
		}
	}
	if (sendStop) {
		// send the stop condition
		port().C1 = I2C_C1_IICEN;
    545a:	movs	r3, #128	; 0x80
    545c:	strb	r3, [r6, #2]
    545e:	b.n	5410 <TwoWire::endTransmission(unsigned char)+0xb4>
			if (i == 0) {
				//Serial.printf("endTransmission err6\n");
				ret = 2; // 2:received NACK on transmit of address
			} else {
				//Serial.printf("endTransmission err7\n");
				ret = 3; // 3:received NACK on transmit of data 
    5460:	cmp.w	lr, #0
    5464:	ite	eq
    5466:	moveq	r0, #2
    5468:	movne	r0, #3
    546a:	b.n	545a <TwoWire::endTransmission(unsigned char)+0xfe>
    546c:	.word	0x20012a14

00005470 <TwoWire::requestFrom(unsigned char, unsigned char, unsigned char)>:
	return ret;
}


uint8_t TwoWire::requestFrom(uint8_t address, uint8_t length, uint8_t sendStop)
{
    5470:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    5474:	ldr	r6, [r0, #16]
	uint8_t tmp __attribute__((unused));
	uint8_t status, count=0;
	uint32_t wait_begin;

	rxBufferIndex = 0;
    5476:	movs	r5, #0
	rxBufferLength = 0;
	//serial_print("requestFrom\n");
	// clear the status flags
	port().S = I2C_S_IICIF | I2C_S_ARBL;
    5478:	movs	r7, #18
{
	uint8_t tmp __attribute__((unused));
	uint8_t status, count=0;
	uint32_t wait_begin;

	rxBufferIndex = 0;
    547a:	strb.w	r5, [r0, #56]	; 0x38
	rxBufferLength = 0;
    547e:	strb.w	r5, [r0, #57]	; 0x39
	//serial_print("requestFrom\n");
	// clear the status flags
	port().S = I2C_S_IICIF | I2C_S_ARBL;
    5482:	strb	r7, [r6, #3]
    5484:	ldr.w	ip, [r0, #16]
	// now take control of the bus...
	if (port().C1 & I2C_C1_MST) {
    5488:	ldrb.w	lr, [ip, #2]
    548c:	and.w	lr, lr, #32
	return ret;
}


uint8_t TwoWire::requestFrom(uint8_t address, uint8_t length, uint8_t sendStop)
{
    5490:	sub	sp, #32
    5492:	mov	r4, r0
    5494:	mov	r8, r1
    5496:	mov	r5, r2
    5498:	mov	r6, r3
	rxBufferLength = 0;
	//serial_print("requestFrom\n");
	// clear the status flags
	port().S = I2C_S_IICIF | I2C_S_ARBL;
	// now take control of the bus...
	if (port().C1 & I2C_C1_MST) {
    549a:	cmp.w	lr, #0
    549e:	beq.n	5534 <TwoWire::requestFrom(unsigned char, unsigned char, unsigned char)+0xc4>
		// we are already the bus master, so send a repeated start
		port().C1 = I2C_C1_IICEN | I2C_C1_MST | I2C_C1_RSTA | I2C_C1_TX;
    54a0:	movs	r3, #180	; 0xb4
    54a2:	strb.w	r3, [ip, #2]
	// do not remove this "redundant" code without
	// carefully verifying the case mentioned here:
	//
	// https://forum.pjrc.com/threads/17469-millis%28%29-on-teensy-3?p=104924&viewfull=1#post104924
	//
	volatile uint32_t ret = systick_millis_count; // single aligned 32 bit is atomic
    54a6:	ldr	r3, [pc, #488]	; (5690 <L_2952_delayMicroseconds+0x1e>)
    54a8:	ldr	r1, [r4, #16]
    54aa:	ldr	r2, [r3, #0]
    54ac:	str	r2, [sp, #0]
	return ret;
    54ae:	ldr.w	lr, [sp]
    54b2:	b.n	54c2 <TwoWire::requestFrom(unsigned char, unsigned char, unsigned char)+0x52>
	// do not remove this "redundant" code without
	// carefully verifying the case mentioned here:
	//
	// https://forum.pjrc.com/threads/17469-millis%28%29-on-teensy-3?p=104924&viewfull=1#post104924
	//
	volatile uint32_t ret = systick_millis_count; // single aligned 32 bit is atomic
    54b4:	ldr	r2, [r3, #0]
    54b6:	str	r2, [sp, #4]
	return ret;
    54b8:	ldr	r0, [sp, #4]
	// wait until start condition establishes control of the bus
	wait_begin = millis();
	while (1) {
		status = i2c_status();
		if ((status & I2C_S_BUSY)) break;
		if (millis() - wait_begin > 4) {
    54ba:	rsb	r0, lr, r0
    54be:	cmp	r0, #4
    54c0:	bhi.n	5524 <TwoWire::requestFrom(unsigned char, unsigned char, unsigned char)+0xb4>
	uint8_t i2c_status(void) {
		return port().S;
    54c2:	ldrb	r0, [r1, #3]
    54c4:	and.w	r0, r0, #32

	// wait until start condition establishes control of the bus
	wait_begin = millis();
	while (1) {
		status = i2c_status();
		if ((status & I2C_S_BUSY)) break;
    54c8:	and.w	r7, r0, #255	; 0xff
    54cc:	cmp	r0, #0
    54ce:	beq.n	54b4 <TwoWire::requestFrom(unsigned char, unsigned char, unsigned char)+0x44>
			//Serial.printf("requestFrom err2\n");
			return 0; // error generating start condition
		}
	}
	// send the address
	port().D = (address << 1) | 1;
    54d0:	mov.w	r2, r8, lsl #1
    54d4:	orr.w	r2, r2, #1
    54d8:	uxtb	r2, r2
    54da:	strb	r2, [r1, #4]
	// do not remove this "redundant" code without
	// carefully verifying the case mentioned here:
	//
	// https://forum.pjrc.com/threads/17469-millis%28%29-on-teensy-3?p=104924&viewfull=1#post104924
	//
	volatile uint32_t ret = systick_millis_count; // single aligned 32 bit is atomic
    54dc:	ldr	r2, [r3, #0]
    54de:	str	r2, [sp, #8]
	return ret;
    54e0:	ldr.w	lr, [sp, #8]
    54e4:	ldr	r0, [r4, #16]
    54e6:	b.n	54f6 <TwoWire::requestFrom(unsigned char, unsigned char, unsigned char)+0x86>
	// do not remove this "redundant" code without
	// carefully verifying the case mentioned here:
	//
	// https://forum.pjrc.com/threads/17469-millis%28%29-on-teensy-3?p=104924&viewfull=1#post104924
	//
	volatile uint32_t ret = systick_millis_count; // single aligned 32 bit is atomic
    54e8:	ldr	r2, [r3, #0]
    54ea:	str	r2, [sp, #12]
	return ret;
    54ec:	ldr	r1, [sp, #12]
	wait_begin = millis();
	while (!(port().S & I2C_S_IICIF)) {
		if (millis() - wait_begin > 5) {
    54ee:	rsb	r1, lr, r1
    54f2:	cmp	r1, #5
    54f4:	bhi.n	554c <TwoWire::requestFrom(unsigned char, unsigned char, unsigned char)+0xdc>
		}
	}
	// send the address
	port().D = (address << 1) | 1;
	wait_begin = millis();
	while (!(port().S & I2C_S_IICIF)) {
    54f6:	ldrb	r1, [r0, #3]
    54f8:	and.w	r1, r1, #2
    54fc:	and.w	r7, r1, #255	; 0xff
    5500:	cmp	r1, #0
    5502:	beq.n	54e8 <TwoWire::requestFrom(unsigned char, unsigned char, unsigned char)+0x78>
			port().C1 = I2C_C1_IICEN;
			//Serial.printf("requestFrom err3\n");
			return 0; // clock stretch too long (during address)
		}
	}
	port().S = I2C_S_IICIF;
    5504:	mov.w	ip, #2
    5508:	strb.w	ip, [r0, #3]
	size_t write(int n) {
		return write((uint8_t)n);
	}
	using Print::write;
private:
	KINETIS_I2C_t& port() { return (*(KINETIS_I2C_t *) port_addr); }
    550c:	ldr	r2, [r4, #16]
	uint8_t i2c_status(void) {
		return port().S;
    550e:	ldrb	r1, [r2, #3]
	status = i2c_status();
	if ((status & I2C_S_RXAK) || (status & I2C_S_ARBL)) {
    5510:	ands.w	r7, r1, #17
    5514:	bne.n	555c <TwoWire::requestFrom(unsigned char, unsigned char, unsigned char)+0xec>
		// or we lost bus arbitration to another master
		port().C1 = I2C_C1_IICEN;
		//Serial.printf("requestFrom err4\n");
		return 0;
	}
	if (length == 0) {
    5516:	cbnz	r5, 5564 <TwoWire::requestFrom(unsigned char, unsigned char, unsigned char)+0xf4>
		// TODO: does anybody really do zero length reads?
		// if so, does this code really work?
		port().C1 = I2C_C1_IICEN | (sendStop ? 0 : I2C_C1_MST);
    5518:	cmp	r6, #0
    551a:	ite	eq
    551c:	moveq	r3, #160	; 0xa0
    551e:	movne	r3, #128	; 0x80
    5520:	strb	r3, [r2, #2]
		//Serial.printf("requestFrom err5\n");
		return 0;
    5522:	b.n	552c <TwoWire::requestFrom(unsigned char, unsigned char, unsigned char)+0xbc>
	wait_begin = millis();
	while (1) {
		status = i2c_status();
		if ((status & I2C_S_BUSY)) break;
		if (millis() - wait_begin > 4) {
			port().C1 = 0;
    5524:	strb	r7, [r1, #2]
	size_t write(int n) {
		return write((uint8_t)n);
	}
	using Print::write;
private:
	KINETIS_I2C_t& port() { return (*(KINETIS_I2C_t *) port_addr); }
    5526:	ldr	r3, [r4, #16]
			port().C1 = I2C_C1_IICEN;
    5528:	movs	r2, #128	; 0x80
    552a:	strb	r2, [r3, #2]
	__asm__("nop");
#endif
	if (sendStop) port().C1 = I2C_C1_IICEN;
	rxBufferLength = count;
	return count;
}
    552c:	mov	r0, r7
    552e:	add	sp, #32
    5530:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    5534:	and.w	r7, lr, #255	; 0xff
	if (port().C1 & I2C_C1_MST) {
		// we are already the bus master, so send a repeated start
		port().C1 = I2C_C1_IICEN | I2C_C1_MST | I2C_C1_RSTA | I2C_C1_TX;
	} else {
		// we are not currently the bus master, so wait for bus ready
		if (!wait_idle()) {
    5538:	bl	5270 <TwoWire::wait_idle()>
    553c:	cmp	r0, #0
    553e:	beq.n	552c <TwoWire::requestFrom(unsigned char, unsigned char, unsigned char)+0xbc>
    5540:	ldr	r3, [r4, #16]
			//Serial.printf("requestFrom err1\n");
			return 0; // timeout waiting for bus
		}
		// become the bus master in transmit mode (send start)
		slave_mode = 0;
    5542:	strb.w	r7, [r4, #95]	; 0x5f
		port().C1 = I2C_C1_IICEN | I2C_C1_MST | I2C_C1_TX;
    5546:	movs	r2, #176	; 0xb0
    5548:	strb	r2, [r3, #2]
    554a:	b.n	54a6 <TwoWire::requestFrom(unsigned char, unsigned char, unsigned char)+0x36>
	// send the address
	port().D = (address << 1) | 1;
	wait_begin = millis();
	while (!(port().S & I2C_S_IICIF)) {
		if (millis() - wait_begin > 5) {
			port().C1 = 0;
    554c:	strb	r7, [r0, #2]
    554e:	ldr	r3, [r4, #16]
			port().C1 = I2C_C1_IICEN;
    5550:	movs	r2, #128	; 0x80
	__asm__("nop");
#endif
	if (sendStop) port().C1 = I2C_C1_IICEN;
	rxBufferLength = count;
	return count;
}
    5552:	mov	r0, r7
	port().D = (address << 1) | 1;
	wait_begin = millis();
	while (!(port().S & I2C_S_IICIF)) {
		if (millis() - wait_begin > 5) {
			port().C1 = 0;
			port().C1 = I2C_C1_IICEN;
    5554:	strb	r2, [r3, #2]
	__asm__("nop");
#endif
	if (sendStop) port().C1 = I2C_C1_IICEN;
	rxBufferLength = count;
	return count;
}
    5556:	add	sp, #32
    5558:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	port().S = I2C_S_IICIF;
	status = i2c_status();
	if ((status & I2C_S_RXAK) || (status & I2C_S_ARBL)) {
		// the slave device did not acknowledge
		// or we lost bus arbitration to another master
		port().C1 = I2C_C1_IICEN;
    555c:	movs	r3, #128	; 0x80
    555e:	strb	r3, [r2, #2]
		//Serial.printf("requestFrom err4\n");
		return 0;
    5560:	movs	r7, #0
    5562:	b.n	552c <TwoWire::requestFrom(unsigned char, unsigned char, unsigned char)+0xbc>
		// TODO: does anybody really do zero length reads?
		// if so, does this code really work?
		port().C1 = I2C_C1_IICEN | (sendStop ? 0 : I2C_C1_MST);
		//Serial.printf("requestFrom err5\n");
		return 0;
	} else if (length == 1) {
    5564:	cmp	r5, #1
    5566:	beq.n	565a <TwoWire::requestFrom(unsigned char, unsigned char, unsigned char)+0x1ea>
		port().C1 = I2C_C1_IICEN | I2C_C1_MST | I2C_C1_TXAK;
	} else {
		port().C1 = I2C_C1_IICEN | I2C_C1_MST;
    5568:	movs	r1, #160	; 0xa0
    556a:	strb	r1, [r2, #2]
    556c:	ldr	r1, [r4, #16]
	}
	tmp = port().D; // initiate the first receive
    556e:	ldrb	r2, [r1, #4]
    5570:	mov	lr, r7
				rxBufferLength = count;
				//Serial.printf("requestFrom err6\n");
				return count; // clock stretch too long (during data)
			}
		}
		port().S = I2C_S_IICIF;
    5572:	mov	r7, ip
			// TODO: what is the proper thing to do here??
			//Serial.printf("requestFrom err7b\n");
			return count;
		}
		length--;
		if (length == 1) port().C1 = I2C_C1_IICEN | I2C_C1_MST | I2C_C1_TXAK;
    5574:	mov.w	ip, #168	; 0xa8
	// do not remove this "redundant" code without
	// carefully verifying the case mentioned here:
	//
	// https://forum.pjrc.com/threads/17469-millis%28%29-on-teensy-3?p=104924&viewfull=1#post104924
	//
	volatile uint32_t ret = systick_millis_count; // single aligned 32 bit is atomic
    5578:	ldr	r2, [r3, #0]
    557a:	str	r2, [sp, #16]
	return ret;
    557c:	ldr	r0, [sp, #16]
    557e:	b.n	558c <TwoWire::requestFrom(unsigned char, unsigned char, unsigned char)+0x11c>
	// do not remove this "redundant" code without
	// carefully verifying the case mentioned here:
	//
	// https://forum.pjrc.com/threads/17469-millis%28%29-on-teensy-3?p=104924&viewfull=1#post104924
	//
	volatile uint32_t ret = systick_millis_count; // single aligned 32 bit is atomic
    5580:	ldr	r2, [r3, #0]
    5582:	str	r2, [sp, #20]
	return ret;
    5584:	ldr	r2, [sp, #20]
	tmp = port().D; // initiate the first receive
	//delayMicroseconds(250);
	while (length > 1) {
		wait_begin = millis();
		while (!(port().S & I2C_S_IICIF)) {
			if (millis() - wait_begin > 5) {
    5586:	subs	r2, r2, r0
    5588:	cmp	r2, #5
    558a:	bhi.n	5628 <TwoWire::requestFrom(unsigned char, unsigned char, unsigned char)+0x1b8>
	}
	tmp = port().D; // initiate the first receive
	//delayMicroseconds(250);
	while (length > 1) {
		wait_begin = millis();
		while (!(port().S & I2C_S_IICIF)) {
    558c:	ldrb	r2, [r1, #3]
    558e:	and.w	r2, r2, #2
    5592:	and.w	r8, r2, #255	; 0xff
    5596:	cmp	r2, #0
    5598:	beq.n	5580 <TwoWire::requestFrom(unsigned char, unsigned char, unsigned char)+0x110>
				rxBufferLength = count;
				//Serial.printf("requestFrom err6\n");
				return count; // clock stretch too long (during data)
			}
		}
		port().S = I2C_S_IICIF;
    559a:	strb	r7, [r1, #3]
    559c:	ldr	r1, [r4, #16]
		status = port().S;
    559e:	ldrb	r2, [r1, #3]
    55a0:	uxtb	r2, r2
		if ((status & I2C_S_ARBL)) {
    55a2:	tst.w	r2, #16
    55a6:	mov	r0, r1
    55a8:	bne.n	5666 <TwoWire::requestFrom(unsigned char, unsigned char, unsigned char)+0x1f6>
			// or suddenly lost control of the bus!
			// TODO: what is the proper thing to do here??
			//Serial.printf("requestFrom err7a\n");
			return count;
		}
		if (!(status & I2C_S_BUSY)) {
    55aa:	lsls	r2, r2, #26
    55ac:	bpl.n	5666 <TwoWire::requestFrom(unsigned char, unsigned char, unsigned char)+0x1f6>
			// or suddenly lost control of the bus!
			// TODO: what is the proper thing to do here??
			//Serial.printf("requestFrom err7b\n");
			return count;
		}
		length--;
    55ae:	subs	r5, #1
    55b0:	uxtb	r5, r5
		if (length == 1) port().C1 = I2C_C1_IICEN | I2C_C1_MST | I2C_C1_TXAK;
    55b2:	cmp	r5, #1
    55b4:	beq.n	5650 <TwoWire::requestFrom(unsigned char, unsigned char, unsigned char)+0x1e0>
		if (count < BUFFER_LENGTH) {
    55b6:	cmp.w	lr, #31
    55ba:	bls.n	563a <TwoWire::requestFrom(unsigned char, unsigned char, unsigned char)+0x1ca>
			rxBuffer[count++] = port().D;
		} else {
			tmp = port().D;
    55bc:	ldrb	r2, [r1, #4]
	} else {
		port().C1 = I2C_C1_IICEN | I2C_C1_MST;
	}
	tmp = port().D; // initiate the first receive
	//delayMicroseconds(250);
	while (length > 1) {
    55be:	cmp	r5, #1
    55c0:	bne.n	5578 <TwoWire::requestFrom(unsigned char, unsigned char, unsigned char)+0x108>
	// do not remove this "redundant" code without
	// carefully verifying the case mentioned here:
	//
	// https://forum.pjrc.com/threads/17469-millis%28%29-on-teensy-3?p=104924&viewfull=1#post104924
	//
	volatile uint32_t ret = systick_millis_count; // single aligned 32 bit is atomic
    55c2:	ldr	r2, [r3, #0]
    55c4:	str	r2, [sp, #24]
	return ret;
    55c6:	ldr	r5, [sp, #24]
    55c8:	b.n	55d6 <TwoWire::requestFrom(unsigned char, unsigned char, unsigned char)+0x166>
	// do not remove this "redundant" code without
	// carefully verifying the case mentioned here:
	//
	// https://forum.pjrc.com/threads/17469-millis%28%29-on-teensy-3?p=104924&viewfull=1#post104924
	//
	volatile uint32_t ret = systick_millis_count; // single aligned 32 bit is atomic
    55ca:	ldr	r2, [r3, #0]
    55cc:	str	r2, [sp, #28]
	return ret;
    55ce:	ldr	r2, [sp, #28]
			tmp = port().D;
		}
	}
	wait_begin = millis();
	while (!(port().S & I2C_S_IICIF)) {
		if (millis() - wait_begin > 5) {
    55d0:	subs	r2, r2, r5
    55d2:	cmp	r2, #5
    55d4:	bhi.n	5684 <L_2952_delayMicroseconds+0x12>
		} else {
			tmp = port().D;
		}
	}
	wait_begin = millis();
	while (!(port().S & I2C_S_IICIF)) {
    55d6:	ldrb	r2, [r0, #3]
    55d8:	and.w	r2, r2, #2
    55dc:	and.w	r1, r2, #255	; 0xff
    55e0:	cmp	r2, #0
    55e2:	beq.n	55ca <TwoWire::requestFrom(unsigned char, unsigned char, unsigned char)+0x15a>
			rxBufferLength = count;
			//Serial.printf("requestFrom err8\n");
			return count; // clock stretch too long (during data)
		}
	}
	port().S = I2C_S_IICIF;
    55e4:	movs	r3, #2
    55e6:	strb	r3, [r0, #3]
    55e8:	ldr	r2, [r4, #16]
	status = port().S;
    55ea:	ldrb	r3, [r2, #3]
    55ec:	uxtb	r3, r3
	if ((status & I2C_S_ARBL)) {
    55ee:	lsls	r1, r3, #27
    55f0:	bmi.n	566a <TwoWire::requestFrom(unsigned char, unsigned char, unsigned char)+0x1fa>
		delayMicroseconds(5);
		port().C1 &= ~I2C_C1_TXAK;
		//Serial.printf("requestFrom err9a\n");
		return count;
	}
	if (!(status & I2C_S_BUSY)) {
    55f2:	lsls	r3, r3, #26
    55f4:	bpl.n	5666 <TwoWire::requestFrom(unsigned char, unsigned char, unsigned char)+0x1f6>
		// or suddenly lost control of the bus!
		// TODO: what is the proper thing to do here??
		//Serial.printf("requestFrom err9b\n");
		return count;
	}
	port().C1 = I2C_C1_IICEN | I2C_C1_MST | I2C_C1_TX;
    55f6:	movs	r3, #176	; 0xb0
	if (count < BUFFER_LENGTH) {
    55f8:	cmp.w	lr, #31
		// or suddenly lost control of the bus!
		// TODO: what is the proper thing to do here??
		//Serial.printf("requestFrom err9b\n");
		return count;
	}
	port().C1 = I2C_C1_IICEN | I2C_C1_MST | I2C_C1_TX;
    55fc:	strb	r3, [r2, #2]
	if (count < BUFFER_LENGTH) {
    55fe:	bhi.n	5688 <L_2952_delayMicroseconds+0x16>
    5600:	ldr	r2, [r4, #16]
		rxBuffer[count++] = port().D;
    5602:	add.w	r3, r4, lr
    5606:	ldrb	r2, [r2, #4]
    5608:	strb	r2, [r3, #24]
    560a:	add.w	lr, lr, #1
    560e:	uxtb.w	lr, lr
	} else {
		tmp = port().D;
	}
#if F_CPU > 120000000
	__asm__("nop");
    5612:	nop
	__asm__("nop");
    5614:	nop
	__asm__("nop");
    5616:	nop
#endif
	if (sendStop) port().C1 = I2C_C1_IICEN;
    5618:	cbz	r6, 5620 <TwoWire::requestFrom(unsigned char, unsigned char, unsigned char)+0x1b0>
    561a:	ldr	r3, [r4, #16]
    561c:	movs	r2, #128	; 0x80
    561e:	strb	r2, [r3, #2]
	rxBufferLength = count;
    5620:	strb.w	lr, [r4, #57]	; 0x39
	return count;
    5624:	mov	r7, lr
    5626:	b.n	552c <TwoWire::requestFrom(unsigned char, unsigned char, unsigned char)+0xbc>
	//delayMicroseconds(250);
	while (length > 1) {
		wait_begin = millis();
		while (!(port().S & I2C_S_IICIF)) {
			if (millis() - wait_begin > 5) {
				port().C1 = 0;
    5628:	strb.w	r8, [r1, #2]
    562c:	ldr	r3, [r4, #16]
	}
	wait_begin = millis();
	while (!(port().S & I2C_S_IICIF)) {
		if (millis() - wait_begin > 5) {
			port().C1 = 0;
			port().C1 = I2C_C1_IICEN;
    562e:	movs	r2, #128	; 0x80
    5630:	strb	r2, [r3, #2]
			rxBufferLength = count;
			//Serial.printf("requestFrom err8\n");
			return count; // clock stretch too long (during data)
    5632:	mov	r7, lr
	wait_begin = millis();
	while (!(port().S & I2C_S_IICIF)) {
		if (millis() - wait_begin > 5) {
			port().C1 = 0;
			port().C1 = I2C_C1_IICEN;
			rxBufferLength = count;
    5634:	strb.w	lr, [r4, #57]	; 0x39
			//Serial.printf("requestFrom err8\n");
			return count; // clock stretch too long (during data)
    5638:	b.n	552c <TwoWire::requestFrom(unsigned char, unsigned char, unsigned char)+0xbc>
			return count;
		}
		length--;
		if (length == 1) port().C1 = I2C_C1_IICEN | I2C_C1_MST | I2C_C1_TXAK;
		if (count < BUFFER_LENGTH) {
			rxBuffer[count++] = port().D;
    563a:	add.w	r2, r4, lr
    563e:	ldrb.w	r8, [r1, #4]
    5642:	strb.w	r8, [r2, #24]
    5646:	add.w	lr, lr, #1
    564a:	uxtb.w	lr, lr
    564e:	b.n	55be <TwoWire::requestFrom(unsigned char, unsigned char, unsigned char)+0x14e>
			// TODO: what is the proper thing to do here??
			//Serial.printf("requestFrom err7b\n");
			return count;
		}
		length--;
		if (length == 1) port().C1 = I2C_C1_IICEN | I2C_C1_MST | I2C_C1_TXAK;
    5650:	strb.w	ip, [r1, #2]
    5654:	ldr	r1, [r4, #16]
    5656:	mov	r0, r1
    5658:	b.n	55b6 <TwoWire::requestFrom(unsigned char, unsigned char, unsigned char)+0x146>
		// if so, does this code really work?
		port().C1 = I2C_C1_IICEN | (sendStop ? 0 : I2C_C1_MST);
		//Serial.printf("requestFrom err5\n");
		return 0;
	} else if (length == 1) {
		port().C1 = I2C_C1_IICEN | I2C_C1_MST | I2C_C1_TXAK;
    565a:	movs	r1, #168	; 0xa8
    565c:	strb	r1, [r2, #2]
    565e:	ldr	r0, [r4, #16]


uint8_t TwoWire::requestFrom(uint8_t address, uint8_t length, uint8_t sendStop)
{
	uint8_t tmp __attribute__((unused));
	uint8_t status, count=0;
    5660:	mov	lr, r7
	} else if (length == 1) {
		port().C1 = I2C_C1_IICEN | I2C_C1_MST | I2C_C1_TXAK;
	} else {
		port().C1 = I2C_C1_IICEN | I2C_C1_MST;
	}
	tmp = port().D; // initiate the first receive
    5662:	ldrb	r2, [r0, #4]
    5664:	b.n	55c2 <TwoWire::requestFrom(unsigned char, unsigned char, unsigned char)+0x152>
    5666:	mov	r7, lr
    5668:	b.n	552c <TwoWire::requestFrom(unsigned char, unsigned char, unsigned char)+0xbc>
	if ((status & I2C_S_ARBL)) {
		// we lost bus arbitration to another master
		// or suddenly lost control of the bus!
		// TODO: what is the proper thing to do here??
		//digitalWriteFast(13, HIGH);
		port().S = I2C_S_ARBL;
    566a:	movs	r1, #16
#else
		"subs   %0, #1"				"\n\t"
		"bne    L_%=_delayMicroseconds"		"\n"
		: "+r" (n) :
#endif
	);
    566c:	mov.w	r3, #300	; 0x12c
    5670:	strb	r1, [r2, #3]

00005672 <L_2952_delayMicroseconds>:
    5672:	subs	r3, #1
    5674:	bne.n	5672 <L_2952_delayMicroseconds>
    5676:	ldr	r2, [r4, #16]
		delayMicroseconds(5);
		port().C1 &= ~I2C_C1_TXAK;
    5678:	ldrb	r3, [r2, #2]
    567a:	and.w	r3, r3, #247	; 0xf7
		//Serial.printf("requestFrom err9a\n");
		return count;
    567e:	mov	r7, lr
		// or suddenly lost control of the bus!
		// TODO: what is the proper thing to do here??
		//digitalWriteFast(13, HIGH);
		port().S = I2C_S_ARBL;
		delayMicroseconds(5);
		port().C1 &= ~I2C_C1_TXAK;
    5680:	strb	r3, [r2, #2]
		//Serial.printf("requestFrom err9a\n");
		return count;
    5682:	b.n	552c <TwoWire::requestFrom(unsigned char, unsigned char, unsigned char)+0xbc>
		}
	}
	wait_begin = millis();
	while (!(port().S & I2C_S_IICIF)) {
		if (millis() - wait_begin > 5) {
			port().C1 = 0;
    5684:	strb	r1, [r0, #2]
    5686:	b.n	562c <TwoWire::requestFrom(unsigned char, unsigned char, unsigned char)+0x1bc>
    5688:	ldr	r3, [r4, #16]
	}
	port().C1 = I2C_C1_IICEN | I2C_C1_MST | I2C_C1_TX;
	if (count < BUFFER_LENGTH) {
		rxBuffer[count++] = port().D;
	} else {
		tmp = port().D;
    568a:	ldrb	r3, [r3, #4]
    568c:	b.n	5612 <TwoWire::requestFrom(unsigned char, unsigned char, unsigned char)+0x1a2>
    568e:	nop
    5690:	.word	0x20012a14

00005694 <i2c0_isr>:
#define MAKE_CONST(x) (__builtin_constant_p(x) ? (x) : (x))

#ifdef WIRE_IMPLEMENT_WIRE
constexpr uintptr_t i2c0_addr = uintptr_t(MAKE_CONST(&KINETIS_I2C0));
TwoWire Wire(i2c0_addr, TwoWire::i2c0_hardware);
void i2c0_isr(void) { Wire.isr(); }
    5694:	ldr	r0, [pc, #4]	; (569c <i2c0_isr+0x8>)
    5696:	b.w	5140 <TwoWire::isr()>
    569a:	nop
    569c:	.word	0x20007f20

000056a0 <i2c1_isr>:
#endif
#ifdef WIRE_IMPLEMENT_WIRE1
constexpr uintptr_t i2c1_addr = uintptr_t(MAKE_CONST(&KINETIS_I2C1));
TwoWire Wire1(i2c1_addr, TwoWire::i2c1_hardware);
void i2c1_isr(void) { Wire1.isr(); }
    56a0:	ldr	r0, [pc, #4]	; (56a8 <i2c1_isr+0x8>)
    56a2:	b.w	5140 <TwoWire::isr()>
    56a6:	nop
    56a8:	.word	0x20007f8c

000056ac <i2c2_isr>:
#endif
#ifdef WIRE_IMPLEMENT_WIRE2
constexpr uintptr_t i2c2_addr = uintptr_t(MAKE_CONST(&KINETIS_I2C2));
TwoWire Wire2(i2c2_addr, TwoWire::i2c2_hardware);
void i2c2_isr(void) { Wire2.isr(); }
    56ac:	ldr	r0, [pc, #4]	; (56b4 <i2c2_isr+0x8>)
    56ae:	b.w	5140 <TwoWire::isr()>
    56b2:	nop
    56b4:	.word	0x20007eb4

000056b8 <EventResponder::triggerEvent(int, void*)>:
	}

	// Trigger the event.  An optional status code and data may be provided.
	// The code triggering the event does NOT control which of the above
	// response methods will be used.
	virtual void triggerEvent(int status=0, void *data=nullptr) {
    56b8:	push	{r4}
		_status = status;
		_data = data;
		if (_type == EventTypeImmediate) {
    56ba:	ldrb	r4, [r0, #28]

	// Trigger the event.  An optional status code and data may be provided.
	// The code triggering the event does NOT control which of the above
	// response methods will be used.
	virtual void triggerEvent(int status=0, void *data=nullptr) {
		_status = status;
    56bc:	str	r1, [r0, #4]
		_data = data;
		if (_type == EventTypeImmediate) {
    56be:	cmp	r4, #2
	// Trigger the event.  An optional status code and data may be provided.
	// The code triggering the event does NOT control which of the above
	// response methods will be used.
	virtual void triggerEvent(int status=0, void *data=nullptr) {
		_status = status;
		_data = data;
    56c0:	str	r2, [r0, #12]
		if (_type == EventTypeImmediate) {
    56c2:	beq.n	56cc <EventResponder::triggerEvent(int, void*)+0x14>
			(*_function)(*this);
		} else {
			triggerEventNotImmediate();
		}
	}
    56c4:	ldr.w	r4, [sp], #4
		_status = status;
		_data = data;
		if (_type == EventTypeImmediate) {
			(*_function)(*this);
		} else {
			triggerEventNotImmediate();
    56c8:	b.w	8978 <EventResponder::triggerEventNotImmediate()>
	// response methods will be used.
	virtual void triggerEvent(int status=0, void *data=nullptr) {
		_status = status;
		_data = data;
		if (_type == EventTypeImmediate) {
			(*_function)(*this);
    56cc:	ldr	r3, [r0, #8]
		} else {
			triggerEventNotImmediate();
		}
	}
    56ce:	ldr.w	r4, [sp], #4
	// response methods will be used.
	virtual void triggerEvent(int status=0, void *data=nullptr) {
		_status = status;
		_data = data;
		if (_type == EventTypeImmediate) {
			(*_function)(*this);
    56d2:	bx	r3

000056d4 <_spi_dma_rxISR0()>:
};
SPIClass SPI((uintptr_t)&KINETISK_SPI0, (uintptr_t)&SPIClass::spi0_hardware);

#elif defined(__MK64FX512__) || defined(__MK66FX1M0__)
#ifdef SPI_HAS_TRANSFER_ASYNC
void _spi_dma_rxISR0(void) {SPI.dma_rxisr();}
    56d4:	push	{r4, r5, r6, r7}

//-------------------------------------------------------------------------
// DMA RX ISR
//-------------------------------------------------------------------------
void SPIClass::dma_rxisr(void) {
	_dmaRX->clearInterrupt();
    56d6:	ldr	r3, [pc, #280]	; (57f0 <_spi_dma_rxISR0()+0x11c>)
	void detachInterrupt(void) {
		NVIC_DISABLE_IRQ(IRQ_DMA_CH0 + channel);
	}

	void clearInterrupt(void) {
		DMA_CINT = channel;
    56d8:	ldr	r2, [pc, #280]	; (57f4 <_spi_dma_rxISR0()+0x120>)
    56da:	ldr	r0, [r3, #56]	; 0x38
    56dc:	ldr	r4, [r3, #52]	; 0x34
    56de:	ldrb	r1, [r0, #4]
    56e0:	strb	r1, [r2, #0]
	bool complete(void) {
		if (TCD->CSR & DMA_TCD_CSR_DONE) return true;
		return false;
	}
	void clearComplete(void) {
		DMA_CDNE = channel;
    56e2:	ldr	r1, [pc, #276]	; (57f8 <_spi_dma_rxISR0()+0x124>)
    56e4:	ldrb	r2, [r4, #4]
    56e6:	strb	r2, [r1, #0]
	_dmaTX->clearComplete();
	_dmaRX->clearComplete();

	uint8_t should_reenable_tx = true;	// should we re-enable TX maybe not if count will be 0...
	if (_dma_count_remaining) {
    56e8:	ldr	r2, [r3, #48]	; 0x30
    56ea:	ldrb	r0, [r0, #4]
    56ec:	strb	r0, [r1, #0]
    56ee:	cmp	r2, #0
    56f0:	beq.n	5780 <_spi_dma_rxISR0()+0xac>
		// What do I need to do to start it back up again...
		// We will use the BITR/CITR from RX as TX may have prefed some stuff
		if (_dma_count_remaining > hardware().max_dma_count) {
    56f2:	ldr	r1, [r3, #4]
    56f4:	ldr	r1, [r1, #12]
    56f6:	cmp	r2, r1
    56f8:	bhi.n	5778 <_spi_dma_rxISR0()+0xa4>
    56fa:	ldr	r1, [r4, #0]

#ifndef TRANSFER_COUNT_FIXED
inline void DMAChanneltransferCount(DMAChannel * dmac, unsigned int len) {
	// note does no validation of length...
	DMABaseClass::TCD_t *tcd = dmac->TCD;
	if (!(tcd->BITER & DMA_TCD_BITER_ELINK)) {
    56fc:	ldrh	r4, [r1, #30]
    56fe:	lsls	r4, r4, #16
		// What do I need to do to start it back up again...
		// We will use the BITR/CITR from RX as TX may have prefed some stuff
		if (_dma_count_remaining > hardware().max_dma_count) {
			_dma_count_remaining -= hardware().max_dma_count;
		} else {
			DMAChanneltransferCount(_dmaTX, _dma_count_remaining-1);
    5700:	add.w	r0, r2, #4294967295

#ifndef TRANSFER_COUNT_FIXED
inline void DMAChanneltransferCount(DMAChannel * dmac, unsigned int len) {
	// note does no validation of length...
	DMABaseClass::TCD_t *tcd = dmac->TCD;
	if (!(tcd->BITER & DMA_TCD_BITER_ELINK)) {
    5704:	bmi.n	57d2 <_spi_dma_rxISR0()+0xfe>
		tcd->BITER = len & 0x7fff;
    5706:	ubfx	r0, r0, #0, #15
    570a:	strh	r0, [r1, #30]
	} else {
		tcd->BITER = (tcd->BITER & 0xFE00) | (len & 0x1ff);
	}
	tcd->CITER = tcd->BITER; 
    570c:	ldrh	r0, [r1, #30]
    570e:	uxth	r0, r0
    5710:	strh	r0, [r1, #22]
    5712:	ldr	r1, [r3, #56]	; 0x38
    5714:	ldr	r1, [r1, #0]

#ifndef TRANSFER_COUNT_FIXED
inline void DMAChanneltransferCount(DMAChannel * dmac, unsigned int len) {
	// note does no validation of length...
	DMABaseClass::TCD_t *tcd = dmac->TCD;
	if (!(tcd->BITER & DMA_TCD_BITER_ELINK)) {
    5716:	ldrh	r0, [r1, #30]
    5718:	lsls	r0, r0, #16
    571a:	bmi.n	57c2 <_spi_dma_rxISR0()+0xee>
		tcd->BITER = len & 0x7fff;
    571c:	ubfx	r0, r2, #0, #15
    5720:	strh	r0, [r1, #30]
	} else {
		tcd->BITER = (tcd->BITER & 0xFE00) | (len & 0x1ff);
	}
	tcd->CITER = tcd->BITER; 
    5722:	ldrh	r0, [r1, #30]
		} else {
			DMAChanneltransferCount(_dmaTX, _dma_count_remaining-1);
			DMAChanneltransferCount(_dmaRX, _dma_count_remaining);
			if (_dma_count_remaining == 1) should_reenable_tx = false;

			_dma_count_remaining = 0;
    5724:	movs	r4, #0
	if (!(tcd->BITER & DMA_TCD_BITER_ELINK)) {
		tcd->BITER = len & 0x7fff;
	} else {
		tcd->BITER = (tcd->BITER & 0xFE00) | (len & 0x1ff);
	}
	tcd->CITER = tcd->BITER; 
    5726:	uxth	r0, r0
void SPIClass::dma_rxisr(void) {
	_dmaRX->clearInterrupt();
	_dmaTX->clearComplete();
	_dmaRX->clearComplete();

	uint8_t should_reenable_tx = true;	// should we re-enable TX maybe not if count will be 0...
    5728:	adds.w	r2, r2, #4294967295
	if (!(tcd->BITER & DMA_TCD_BITER_ELINK)) {
		tcd->BITER = len & 0x7fff;
	} else {
		tcd->BITER = (tcd->BITER & 0xFE00) | (len & 0x1ff);
	}
	tcd->CITER = tcd->BITER; 
    572c:	strh	r0, [r1, #22]
void SPIClass::dma_rxisr(void) {
	_dmaRX->clearInterrupt();
	_dmaTX->clearComplete();
	_dmaRX->clearComplete();

	uint8_t should_reenable_tx = true;	// should we re-enable TX maybe not if count will be 0...
    572e:	it	ne
    5730:	movne	r2, #1
		} else {
			DMAChanneltransferCount(_dmaTX, _dma_count_remaining-1);
			DMAChanneltransferCount(_dmaRX, _dma_count_remaining);
			if (_dma_count_remaining == 1) should_reenable_tx = false;

			_dma_count_remaining = 0;
    5732:	str	r4, [r3, #48]	; 0x30
		}
		// In some cases we need to again start the TX manually to get it to work...
		if (_dmaTX->TCD->SADDR == &_transferWriteFill) {
    5734:	ldr	r1, [r3, #52]	; 0x34
    5736:	ldr	r0, [pc, #184]	; (57f0 <_spi_dma_rxISR0()+0x11c>)
    5738:	ldr	r1, [r1, #0]
    573a:	ldr	r5, [r1, #0]
    573c:	add.w	r4, r0, #44	; 0x2c
    5740:	cmp	r5, r4
    5742:	beq.n	57b2 <_spi_dma_rxISR0()+0xde>
	// setCS() is a special function, not intended for use from normal Arduino
	// programs/sketches.  See the ILI3941_t3 library for an example.
	uint8_t setCS(uint8_t pin);

private:
	KINETISK_SPI_t & port() { return *(KINETISK_SPI_t *)port_addr; }
    5744:	ldr	r0, [r0, #0]
				port().PUSHR = (_transferWriteFill | SPI_PUSHR_CTAS(0) | SPI_PUSHR_CONT);
			} else  {
				port().PUSHR = (_transferWriteFill | SPI_PUSHR_CTAS(0) | SPI_PUSHR_CONT);
			}
		} else {
			if (port().CTAR0  & SPI_CTAR_FMSZ(8)) {
    5746:	ldr	r4, [r0, #12]
    5748:	tst.w	r4, #1073741824	; 0x40000000
				// 16 bit mode
				uint16_t w = *((uint16_t*)_dmaTX->TCD->SADDR);
    574c:	ldr	r4, [r1, #0]
				_dmaTX->TCD->SADDR = (volatile uint8_t*)(_dmaTX->TCD->SADDR) + 2;
    574e:	ldr	r5, [r1, #0]
				port().PUSHR = (_transferWriteFill | SPI_PUSHR_CTAS(0) | SPI_PUSHR_CONT);
			}
		} else {
			if (port().CTAR0  & SPI_CTAR_FMSZ(8)) {
				// 16 bit mode
				uint16_t w = *((uint16_t*)_dmaTX->TCD->SADDR);
    5750:	itete	ne
    5752:	ldrhne	r4, [r4, #0]
				_dmaTX->TCD->SADDR = (volatile uint8_t*)(_dmaTX->TCD->SADDR) + 2;
				port().PUSHR = (w | SPI_PUSHR_CTAS(0) | SPI_PUSHR_CONT);
			} else  {
				uint8_t w = *((uint8_t*)_dmaTX->TCD->SADDR);
    5754:	ldrbeq	r4, [r4, #0]
			}
		} else {
			if (port().CTAR0  & SPI_CTAR_FMSZ(8)) {
				// 16 bit mode
				uint16_t w = *((uint16_t*)_dmaTX->TCD->SADDR);
				_dmaTX->TCD->SADDR = (volatile uint8_t*)(_dmaTX->TCD->SADDR) + 2;
    5756:	addne	r5, #2
				port().PUSHR = (w | SPI_PUSHR_CTAS(0) | SPI_PUSHR_CONT);
			} else  {
				uint8_t w = *((uint8_t*)_dmaTX->TCD->SADDR);
				_dmaTX->TCD->SADDR = (volatile uint8_t*)(_dmaTX->TCD->SADDR) + 1;
    5758:	addeq	r5, #1
				port().PUSHR = (w | SPI_PUSHR_CTAS(0) | SPI_PUSHR_CONT);
    575a:	orr.w	r4, r4, #2147483648	; 0x80000000
				uint16_t w = *((uint16_t*)_dmaTX->TCD->SADDR);
				_dmaTX->TCD->SADDR = (volatile uint8_t*)(_dmaTX->TCD->SADDR) + 2;
				port().PUSHR = (w | SPI_PUSHR_CTAS(0) | SPI_PUSHR_CONT);
			} else  {
				uint8_t w = *((uint8_t*)_dmaTX->TCD->SADDR);
				_dmaTX->TCD->SADDR = (volatile uint8_t*)(_dmaTX->TCD->SADDR) + 1;
    575e:	str	r5, [r1, #0]
				port().PUSHR = (w | SPI_PUSHR_CTAS(0) | SPI_PUSHR_CONT);
    5760:	str	r4, [r0, #52]	; 0x34
    5762:	ldr	r1, [r3, #56]	; 0x38
	/***************************************/
	/**    Enable / Disable               **/
	/***************************************/

	void enable(void) {
		DMA_SERQ = channel;
    5764:	ldr	r3, [pc, #148]	; (57fc <_spi_dma_rxISR0()+0x128>)
    5766:	ldrb	r1, [r1, #4]
    5768:	strb	r1, [r3, #0]
			}
		}
		_dmaRX->enable();
    576a:	ldr	r1, [pc, #132]	; (57f0 <_spi_dma_rxISR0()+0x11c>)
		if (should_reenable_tx)
    576c:	cbz	r2, 5774 <_spi_dma_rxISR0()+0xa0>
    576e:	ldr	r2, [r1, #52]	; 0x34
    5770:	ldrb	r2, [r2, #4]
    5772:	strb	r2, [r3, #0]
};
SPIClass SPI((uintptr_t)&KINETISK_SPI0, (uintptr_t)&SPIClass::spi0_hardware);

#elif defined(__MK64FX512__) || defined(__MK66FX1M0__)
#ifdef SPI_HAS_TRANSFER_ASYNC
void _spi_dma_rxISR0(void) {SPI.dma_rxisr();}
    5774:	pop	{r4, r5, r6, r7}
    5776:	bx	lr
	uint8_t should_reenable_tx = true;	// should we re-enable TX maybe not if count will be 0...
	if (_dma_count_remaining) {
		// What do I need to do to start it back up again...
		// We will use the BITR/CITR from RX as TX may have prefed some stuff
		if (_dma_count_remaining > hardware().max_dma_count) {
			_dma_count_remaining -= hardware().max_dma_count;
    5778:	subs	r2, r2, r1
    577a:	str	r2, [r3, #48]	; 0x30
void SPIClass::dma_rxisr(void) {
	_dmaRX->clearInterrupt();
	_dmaTX->clearComplete();
	_dmaRX->clearComplete();

	uint8_t should_reenable_tx = true;	// should we re-enable TX maybe not if count will be 0...
    577c:	movs	r2, #1
    577e:	b.n	5734 <_spi_dma_rxISR0()+0x60>
		//port().MCR = SPI_MCR_MSTR | SPI_MCR_CLR_RXF | SPI_MCR_PCSIS(0x1F);  // clear out the queue
		port().SR = 0xFF0F0000;
		port().CTAR0  &= ~(SPI_CTAR_FMSZ(8)); 	// Hack restore back to 8 bits

		_dma_state = DMAState::completed;   // set back to 1 in case our call wants to start up dma again
		_dma_event_responder->triggerEvent();
    5780:	ldr	r0, [r3, #60]	; 0x3c
    5782:	ldr	r1, [r3, #0]
    5784:	ldr	r5, [r0, #0]
			_dmaTX->enable();
	} else {

		port().RSER = 0;
		//port().MCR = SPI_MCR_MSTR | SPI_MCR_CLR_RXF | SPI_MCR_PCSIS(0x1F);  // clear out the queue
		port().SR = 0xFF0F0000;
    5786:	ldr	r4, [pc, #120]	; (5800 <_spi_dma_rxISR0()+0x12c>)
		_dmaRX->enable();
		if (should_reenable_tx)
			_dmaTX->enable();
	} else {

		port().RSER = 0;
    5788:	str	r2, [r1, #48]	; 0x30
		//port().MCR = SPI_MCR_MSTR | SPI_MCR_CLR_RXF | SPI_MCR_PCSIS(0x1F);  // clear out the queue
		port().SR = 0xFF0F0000;
    578a:	str	r4, [r1, #44]	; 0x2c
		port().CTAR0  &= ~(SPI_CTAR_FMSZ(8)); 	// Hack restore back to 8 bits
    578c:	ldr	r4, [r1, #12]

		_dma_state = DMAState::completed;   // set back to 1 in case our call wants to start up dma again
		_dma_event_responder->triggerEvent();
    578e:	ldr	r5, [r5, #0]
    5790:	ldr	r6, [pc, #112]	; (5804 <_spi_dma_rxISR0()+0x130>)
	} else {

		port().RSER = 0;
		//port().MCR = SPI_MCR_MSTR | SPI_MCR_CLR_RXF | SPI_MCR_PCSIS(0x1F);  // clear out the queue
		port().SR = 0xFF0F0000;
		port().CTAR0  &= ~(SPI_CTAR_FMSZ(8)); 	// Hack restore back to 8 bits
    5792:	bic.w	r4, r4, #1073741824	; 0x40000000

		_dma_state = DMAState::completed;   // set back to 1 in case our call wants to start up dma again
    5796:	movs	r7, #3
    5798:	cmp	r5, r6
	} else {

		port().RSER = 0;
		//port().MCR = SPI_MCR_MSTR | SPI_MCR_CLR_RXF | SPI_MCR_PCSIS(0x1F);  // clear out the queue
		port().SR = 0xFF0F0000;
		port().CTAR0  &= ~(SPI_CTAR_FMSZ(8)); 	// Hack restore back to 8 bits
    579a:	str	r4, [r1, #12]

		_dma_state = DMAState::completed;   // set back to 1 in case our call wants to start up dma again
    579c:	strb.w	r7, [r3, #45]	; 0x2d
    57a0:	bne.n	57e2 <_spi_dma_rxISR0()+0x10e>
	// The code triggering the event does NOT control which of the above
	// response methods will be used.
	virtual void triggerEvent(int status=0, void *data=nullptr) {
		_status = status;
		_data = data;
		if (_type == EventTypeImmediate) {
    57a2:	ldrb	r3, [r0, #28]

	// Trigger the event.  An optional status code and data may be provided.
	// The code triggering the event does NOT control which of the above
	// response methods will be used.
	virtual void triggerEvent(int status=0, void *data=nullptr) {
		_status = status;
    57a4:	str	r2, [r0, #4]
		_data = data;
		if (_type == EventTypeImmediate) {
    57a6:	cmp	r3, #2
	// Trigger the event.  An optional status code and data may be provided.
	// The code triggering the event does NOT control which of the above
	// response methods will be used.
	virtual void triggerEvent(int status=0, void *data=nullptr) {
		_status = status;
		_data = data;
    57a8:	str	r2, [r0, #12]
		if (_type == EventTypeImmediate) {
    57aa:	beq.n	57ea <_spi_dma_rxISR0()+0x116>
};
SPIClass SPI((uintptr_t)&KINETISK_SPI0, (uintptr_t)&SPIClass::spi0_hardware);

#elif defined(__MK64FX512__) || defined(__MK66FX1M0__)
#ifdef SPI_HAS_TRANSFER_ASYNC
void _spi_dma_rxISR0(void) {SPI.dma_rxisr();}
    57ac:	pop	{r4, r5, r6, r7}
			(*_function)(*this);
		} else {
			triggerEventNotImmediate();
    57ae:	b.w	8978 <EventResponder::triggerEventNotImmediate()>
    57b2:	ldr	r1, [r0, #0]
			_dma_count_remaining = 0;
		}
		// In some cases we need to again start the TX manually to get it to work...
		if (_dmaTX->TCD->SADDR == &_transferWriteFill) {
			if (port().CTAR0  & SPI_CTAR_FMSZ(8)) {
				port().PUSHR = (_transferWriteFill | SPI_PUSHR_CTAS(0) | SPI_PUSHR_CONT);
    57b4:	ldrb.w	r0, [r0, #44]	; 0x2c

			_dma_count_remaining = 0;
		}
		// In some cases we need to again start the TX manually to get it to work...
		if (_dmaTX->TCD->SADDR == &_transferWriteFill) {
			if (port().CTAR0  & SPI_CTAR_FMSZ(8)) {
    57b8:	ldr	r4, [r1, #12]
				port().PUSHR = (_transferWriteFill | SPI_PUSHR_CTAS(0) | SPI_PUSHR_CONT);
    57ba:	orr.w	r0, r0, #2147483648	; 0x80000000
    57be:	str	r0, [r1, #52]	; 0x34
    57c0:	b.n	5762 <_spi_dma_rxISR0()+0x8e>
	// note does no validation of length...
	DMABaseClass::TCD_t *tcd = dmac->TCD;
	if (!(tcd->BITER & DMA_TCD_BITER_ELINK)) {
		tcd->BITER = len & 0x7fff;
	} else {
		tcd->BITER = (tcd->BITER & 0xFE00) | (len & 0x1ff);
    57c2:	ldrh	r4, [r1, #30]
    57c4:	ubfx	r0, r2, #0, #9
    57c8:	and.w	r4, r4, #65024	; 0xfe00
    57cc:	orrs	r0, r4
    57ce:	strh	r0, [r1, #30]
    57d0:	b.n	5722 <_spi_dma_rxISR0()+0x4e>
    57d2:	ldrh	r4, [r1, #30]
    57d4:	ubfx	r0, r0, #0, #9
    57d8:	and.w	r4, r4, #65024	; 0xfe00
    57dc:	orrs	r0, r4
    57de:	strh	r0, [r1, #30]
    57e0:	b.n	570c <_spi_dma_rxISR0()+0x38>
		//port().MCR = SPI_MCR_MSTR | SPI_MCR_CLR_RXF | SPI_MCR_PCSIS(0x1F);  // clear out the queue
		port().SR = 0xFF0F0000;
		port().CTAR0  &= ~(SPI_CTAR_FMSZ(8)); 	// Hack restore back to 8 bits

		_dma_state = DMAState::completed;   // set back to 1 in case our call wants to start up dma again
		_dma_event_responder->triggerEvent();
    57e2:	mov	r3, r5
    57e4:	mov	r1, r2
};
SPIClass SPI((uintptr_t)&KINETISK_SPI0, (uintptr_t)&SPIClass::spi0_hardware);

#elif defined(__MK64FX512__) || defined(__MK66FX1M0__)
#ifdef SPI_HAS_TRANSFER_ASYNC
void _spi_dma_rxISR0(void) {SPI.dma_rxisr();}
    57e6:	pop	{r4, r5, r6, r7}
		//port().MCR = SPI_MCR_MSTR | SPI_MCR_CLR_RXF | SPI_MCR_PCSIS(0x1F);  // clear out the queue
		port().SR = 0xFF0F0000;
		port().CTAR0  &= ~(SPI_CTAR_FMSZ(8)); 	// Hack restore back to 8 bits

		_dma_state = DMAState::completed;   // set back to 1 in case our call wants to start up dma again
		_dma_event_responder->triggerEvent();
    57e8:	bx	r3
	// response methods will be used.
	virtual void triggerEvent(int status=0, void *data=nullptr) {
		_status = status;
		_data = data;
		if (_type == EventTypeImmediate) {
			(*_function)(*this);
    57ea:	ldr	r3, [r0, #8]
};
SPIClass SPI((uintptr_t)&KINETISK_SPI0, (uintptr_t)&SPIClass::spi0_hardware);

#elif defined(__MK64FX512__) || defined(__MK66FX1M0__)
#ifdef SPI_HAS_TRANSFER_ASYNC
void _spi_dma_rxISR0(void) {SPI.dma_rxisr();}
    57ec:	pop	{r4, r5, r6, r7}
    57ee:	bx	r3
    57f0:	.word	0x20007ff8
    57f4:	.word	0x4000801f
    57f8:	.word	0x4000801c
    57fc:	.word	0x4000801b
    5800:	.word	0xff0f0000
    5804:	.word	0x000056b9

00005808 <_GLOBAL__sub_I__Z20getNextPathComponentPKcPjPc>:
 * \brief Raw access to SD and SDHC flash memory cards.
 */
class Sd2Card {
 public:
  /** Construct an instance of Sd2Card. */
  Sd2Card(void) : type_(0) {}
    5808:	ldr	r3, [pc, #24]	; (5824 <_GLOBAL__sub_I__Z20getNextPathComponentPKcPjPc+0x1c>)
 * \brief Access FAT16 and FAT32 files on SD and SDHC cards.
 */
class SdFile : public Print {
 public:
  /** Create an instance of SdFile. */
  SdFile(void) : type_(FAT_FILE_TYPE_CLOSED) {}
    580a:	ldr	r2, [pc, #28]	; (5828 <_GLOBAL__sub_I__Z20getNextPathComponentPKcPjPc+0x20>)
    580c:	str	r2, [r3, #44]	; 0x2c
 * \brief Access FAT16 and FAT32 volumes on SD and SDHC cards.
 */
class SdVolume {
 public:
  /** Create an instance of SdVolume */
  SdVolume(void) :allocSearchStart_(2), fatType_(0) {}
    580e:	movs	r1, #2
    5810:	movs	r2, #0
    5812:	str	r1, [r3, #4]
    5814:	strb	r2, [r3, #2]
    5816:	strb.w	r2, [r3, #36]	; 0x24
class __FlashStringHelper;

class Print
{
  public:
	constexpr Print() : write_error(0) {}
    581a:	strb.w	r2, [r3, #48]	; 0x30
 * \brief Access FAT16 and FAT32 files on SD and SDHC cards.
 */
class SdFile : public Print {
 public:
  /** Create an instance of SdFile. */
  SdFile(void) : type_(FAT_FILE_TYPE_CLOSED) {}
    581e:	strb.w	r2, [r3, #50]	; 0x32
    5822:	bx	lr
    5824:	.word	0x20012780
    5828:	.word	0x0009dc88

0000582c <SdVolume::cacheFlush()>:
  if (setStart) allocSearchStart_ = bgnCluster + 1;

  return true;
}
//------------------------------------------------------------------------------
uint8_t SdVolume::cacheFlush(void) {
    582c:	push	{r4, r5, r6, lr}
  if (cacheDirty_) {
    582e:	ldr	r4, [pc, #104]	; (5898 <SdVolume::cacheFlush()+0x6c>)
    5830:	ldrb	r3, [r4, #0]
    5832:	cbnz	r3, 5838 <SdVolume::cacheFlush()+0xc>
      }
      cacheMirrorBlock_ = 0;
    }
    cacheDirty_ = 0;
  }
  return true;
    5834:	movs	r0, #1
}
    5836:	pop	{r4, r5, r6, pc}
  return true;
}
//------------------------------------------------------------------------------
uint8_t SdVolume::cacheFlush(void) {
  if (cacheDirty_) {
    if (!sdCard_->writeBlock(cacheBlockNumber_, cacheBuffer_.data)) {
    5838:	ldr	r5, [pc, #96]	; (589c <SdVolume::cacheFlush()+0x70>)
    583a:	ldr	r3, [pc, #100]	; (58a0 <SdVolume::cacheFlush()+0x74>)
    583c:	ldr	r0, [r5, #0]
    583e:	ldr	r1, [r3, #0]
    return SD_readBlock(block, dst);
  }
  /** Return the card type: SD V1, SD V2 or SDHC */
  uint8_t writeBlock(uint32_t block, const uint8_t* src) {
    #if defined(__MK64FX512__) || defined(__MK66FX1M0__) || defined(__IMXRT1052__)
    if (chipSelectPin_ == BUILTIN_SDCARD) {
    5840:	ldrb	r3, [r0, #0]
    5842:	cmp	r3, #254	; 0xfe
    5844:	beq.n	5876 <SdVolume::cacheFlush()+0x4a>
      return (SDHC_CardWriteBlock(src, block) == 0) ? true : false;
    }
    #endif
    return SD_writeBlock(block, src);
    5846:	ldr	r2, [pc, #92]	; (58a4 <SdVolume::cacheFlush()+0x78>)
    5848:	bl	6444 <Sd2Card::SD_writeBlock(unsigned long, unsigned char const*)>
    584c:	cbz	r0, 5872 <SdVolume::cacheFlush()+0x46>
      return false;
    }
    // mirror FAT tables
    if (cacheMirrorBlock_) {
    584e:	ldr	r6, [pc, #88]	; (58a8 <SdVolume::cacheFlush()+0x7c>)
    5850:	ldr	r1, [r6, #0]
    5852:	cbnz	r1, 585c <SdVolume::cacheFlush()+0x30>
      if (!sdCard_->writeBlock(cacheMirrorBlock_, cacheBuffer_.data)) {
        return false;
      }
      cacheMirrorBlock_ = 0;
    }
    cacheDirty_ = 0;
    5854:	movs	r3, #0
    5856:	strb	r3, [r4, #0]
  }
  return true;
    5858:	movs	r0, #1
    585a:	pop	{r4, r5, r6, pc}
    if (!sdCard_->writeBlock(cacheBlockNumber_, cacheBuffer_.data)) {
      return false;
    }
    // mirror FAT tables
    if (cacheMirrorBlock_) {
      if (!sdCard_->writeBlock(cacheMirrorBlock_, cacheBuffer_.data)) {
    585c:	ldr	r0, [r5, #0]
    return SD_readBlock(block, dst);
  }
  /** Return the card type: SD V1, SD V2 or SDHC */
  uint8_t writeBlock(uint32_t block, const uint8_t* src) {
    #if defined(__MK64FX512__) || defined(__MK66FX1M0__) || defined(__IMXRT1052__)
    if (chipSelectPin_ == BUILTIN_SDCARD) {
    585e:	ldrb	r3, [r0, #0]
    5860:	cmp	r3, #254	; 0xfe
    5862:	beq.n	5884 <SdVolume::cacheFlush()+0x58>
      return (SDHC_CardWriteBlock(src, block) == 0) ? true : false;
    }
    #endif
    return SD_writeBlock(block, src);
    5864:	ldr	r2, [pc, #60]	; (58a4 <SdVolume::cacheFlush()+0x78>)
    5866:	bl	6444 <Sd2Card::SD_writeBlock(unsigned long, unsigned char const*)>
    586a:	cbz	r0, 5872 <SdVolume::cacheFlush()+0x46>
        return false;
      }
      cacheMirrorBlock_ = 0;
    586c:	movs	r3, #0
    586e:	str	r3, [r6, #0]
    5870:	b.n	5854 <SdVolume::cacheFlush()+0x28>
}
//------------------------------------------------------------------------------
uint8_t SdVolume::cacheFlush(void) {
  if (cacheDirty_) {
    if (!sdCard_->writeBlock(cacheBlockNumber_, cacheBuffer_.data)) {
      return false;
    5872:	movs	r0, #0
    5874:	pop	{r4, r5, r6, pc}
  }
  /** Return the card type: SD V1, SD V2 or SDHC */
  uint8_t writeBlock(uint32_t block, const uint8_t* src) {
    #if defined(__MK64FX512__) || defined(__MK66FX1M0__) || defined(__IMXRT1052__)
    if (chipSelectPin_ == BUILTIN_SDCARD) {
      return (SDHC_CardWriteBlock(src, block) == 0) ? true : false;
    5876:	ldr	r0, [pc, #44]	; (58a4 <SdVolume::cacheFlush()+0x78>)
    5878:	bl	5c00 <SDHC_CardWriteBlock(void const*, unsigned long)>
    587c:	clz	r0, r0
    5880:	lsrs	r0, r0, #5
    5882:	b.n	584c <SdVolume::cacheFlush()+0x20>
    5884:	ldr	r0, [pc, #28]	; (58a4 <SdVolume::cacheFlush()+0x78>)
    5886:	bl	5c00 <SDHC_CardWriteBlock(void const*, unsigned long)>
    588a:	clz	r0, r0
    588e:	lsrs	r0, r0, #5
    }
    // mirror FAT tables
    if (cacheMirrorBlock_) {
      if (!sdCard_->writeBlock(cacheMirrorBlock_, cacheBuffer_.data)) {
    5890:	cmp	r0, #0
    5892:	bne.n	586c <SdVolume::cacheFlush()+0x40>
    5894:	b.n	5872 <SdVolume::cacheFlush()+0x46>
    5896:	nop
    5898:	.word	0x200129dc
    589c:	.word	0x200127d8
    58a0:	.word	0x20008038
    58a4:	.word	0x200127dc
    58a8:	.word	0x200127d4

000058ac <SdVolume::cacheRawBlock(unsigned long, unsigned char)>:
    cacheDirty_ = 0;
  }
  return true;
}
//------------------------------------------------------------------------------
uint8_t SdVolume::cacheRawBlock(uint32_t blockNumber, uint8_t action) {
    58ac:	push	{r4, r5, r6, lr}
  if (cacheBlockNumber_ != blockNumber) {
    58ae:	ldr	r5, [pc, #72]	; (58f8 <SdVolume::cacheRawBlock(unsigned long, unsigned char)+0x4c>)
    58b0:	ldr	r3, [r5, #0]
    58b2:	cmp	r3, r0
    cacheDirty_ = 0;
  }
  return true;
}
//------------------------------------------------------------------------------
uint8_t SdVolume::cacheRawBlock(uint32_t blockNumber, uint8_t action) {
    58b4:	mov	r6, r1
  if (cacheBlockNumber_ != blockNumber) {
    58b6:	beq.n	58dc <SdVolume::cacheRawBlock(unsigned long, unsigned char)+0x30>
    58b8:	mov	r4, r0
    if (!cacheFlush()) return false;
    58ba:	bl	582c <SdVolume::cacheFlush()>
    58be:	cbnz	r0, 58c4 <SdVolume::cacheRawBlock(unsigned long, unsigned char)+0x18>
    58c0:	movs	r0, #0
    58c2:	pop	{r4, r5, r6, pc}
    if (!sdCard_->readBlock(blockNumber, cacheBuffer_.data)) return false;
    58c4:	ldr	r3, [pc, #52]	; (58fc <SdVolume::cacheRawBlock(unsigned long, unsigned char)+0x50>)
    58c6:	ldr	r0, [r3, #0]
  /* return the type of SD card detected during init() */
  uint8_t type(void) const {return type_;}
  /** Returns the current value, true or false, for partial block read. */
  uint8_t readBlock(uint32_t block, uint8_t* dst) {
    #if defined(__MK64FX512__) || defined(__MK66FX1M0__) || defined(__IMXRT1052__)
    if (chipSelectPin_ == BUILTIN_SDCARD) {
    58c8:	ldrb	r3, [r0, #0]
    58ca:	cmp	r3, #254	; 0xfe
    58cc:	beq.n	58e8 <SdVolume::cacheRawBlock(unsigned long, unsigned char)+0x3c>
      return (SDHC_CardReadBlock(dst, block) == 0) ? true : false;
    }
    #endif
    return SD_readBlock(block, dst);
    58ce:	ldr	r2, [pc, #48]	; (5900 <SdVolume::cacheRawBlock(unsigned long, unsigned char)+0x54>)
    58d0:	mov	r1, r4
    58d2:	bl	62b8 <Sd2Card::SD_readBlock(unsigned long, unsigned char*)>
    58d6:	cmp	r0, #0
    58d8:	beq.n	58c0 <SdVolume::cacheRawBlock(unsigned long, unsigned char)+0x14>
    cacheBlockNumber_ = blockNumber;
    58da:	str	r4, [r5, #0]
  }
  cacheDirty_ |= action;
    58dc:	ldr	r3, [pc, #36]	; (5904 <SdVolume::cacheRawBlock(unsigned long, unsigned char)+0x58>)
    58de:	ldrb	r1, [r3, #0]
    58e0:	orrs	r1, r6
    58e2:	strb	r1, [r3, #0]
  return true;
    58e4:	movs	r0, #1
}
    58e6:	pop	{r4, r5, r6, pc}
  uint8_t type(void) const {return type_;}
  /** Returns the current value, true or false, for partial block read. */
  uint8_t readBlock(uint32_t block, uint8_t* dst) {
    #if defined(__MK64FX512__) || defined(__MK66FX1M0__) || defined(__IMXRT1052__)
    if (chipSelectPin_ == BUILTIN_SDCARD) {
      return (SDHC_CardReadBlock(dst, block) == 0) ? true : false;
    58e8:	mov	r1, r4
    58ea:	ldr	r0, [pc, #20]	; (5900 <SdVolume::cacheRawBlock(unsigned long, unsigned char)+0x54>)
    58ec:	bl	5b40 <SDHC_CardReadBlock(void*, unsigned long)>
    58f0:	clz	r0, r0
    58f4:	lsrs	r0, r0, #5
    58f6:	b.n	58d6 <SdVolume::cacheRawBlock(unsigned long, unsigned char)+0x2a>
    58f8:	.word	0x20008038
    58fc:	.word	0x200127d8
    5900:	.word	0x200127dc
    5904:	.word	0x200129dc

00005908 <SdVolume::fatPut(unsigned long, unsigned long) [clone .part.3]>:
  }
  return true;
}
//------------------------------------------------------------------------------
// Store a FAT entry
uint8_t SdVolume::fatPut(uint32_t cluster, uint32_t value) {
    5908:	push	{r3, r4, r5, r6, r7, lr}
  // error if not in FAT
  if (cluster > (clusterCount_ + 1)) return false;

  // calculate block address for entry
  uint32_t lba = fatStartBlock_;
  lba += fatType_ == 16 ? cluster >> 8 : cluster >> 7;
    590a:	ldrb.w	r3, [r0, #32]

  // error if not in FAT
  if (cluster > (clusterCount_ + 1)) return false;

  // calculate block address for entry
  uint32_t lba = fatStartBlock_;
    590e:	ldr	r4, [r0, #28]
  lba += fatType_ == 16 ? cluster >> 8 : cluster >> 7;
    5910:	cmp	r3, #16

  if (lba != cacheBlockNumber_) {
    5912:	ldr	r3, [pc, #104]	; (597c <SdVolume::fatPut(unsigned long, unsigned long) [clone .part.3]+0x74>)
  }
  return true;
}
//------------------------------------------------------------------------------
// Store a FAT entry
uint8_t SdVolume::fatPut(uint32_t cluster, uint32_t value) {
    5914:	mov	r5, r0
    5916:	mov	r6, r1
    5918:	mov	r7, r2

  // calculate block address for entry
  uint32_t lba = fatStartBlock_;
  lba += fatType_ == 16 ? cluster >> 8 : cluster >> 7;

  if (lba != cacheBlockNumber_) {
    591a:	ldr	r3, [r3, #0]
  // error if not in FAT
  if (cluster > (clusterCount_ + 1)) return false;

  // calculate block address for entry
  uint32_t lba = fatStartBlock_;
  lba += fatType_ == 16 ? cluster >> 8 : cluster >> 7;
    591c:	beq.n	594c <SdVolume::fatPut(unsigned long, unsigned long) [clone .part.3]+0x44>
    591e:	add.w	r4, r4, r1, lsr #7

  if (lba != cacheBlockNumber_) {
    5922:	cmp	r4, r3
    5924:	bne.n	5954 <SdVolume::fatPut(unsigned long, unsigned long) [clone .part.3]+0x4c>
  }
  // store entry
  if (fatType_ == 16) {
    cacheBuffer_.fat16[cluster & 0XFF] = value;
  } else {
    cacheBuffer_.fat32[cluster & 0X7F] = value;
    5926:	and.w	r6, r6, #127	; 0x7f
    592a:	ldr	r2, [pc, #84]	; (5980 <SdVolume::fatPut(unsigned long, unsigned long) [clone .part.3]+0x78>)
    592c:	str.w	r7, [r2, r6, lsl #2]
           return dataStartBlock_ + ((cluster - 2) << clusterSizeShift_);}
  uint32_t blockNumber(uint32_t cluster, uint32_t position) const {
           return clusterStartBlock(cluster) + blockOfCluster(position);}
  static uint8_t cacheFlush(void);
  static uint8_t cacheRawBlock(uint32_t blockNumber, uint8_t action);
  static void cacheSetDirty(void) {cacheDirty_ |= CACHE_FOR_WRITE;}
    5930:	ldr	r1, [pc, #80]	; (5984 <SdVolume::fatPut(unsigned long, unsigned long) [clone .part.3]+0x7c>)
  }
  cacheSetDirty();

  // mirror second FAT
  if (fatCount_ > 1) cacheMirrorBlock_ = lba + blocksPerFat_;
    5932:	ldrb	r0, [r5, #24]
    5934:	ldrb	r2, [r1, #0]
    5936:	cmp	r0, #1
    5938:	orr.w	r2, r2, #1
    593c:	strb	r2, [r1, #0]
    593e:	bls.n	5972 <SdVolume::fatPut(unsigned long, unsigned long) [clone .part.3]+0x6a>
    5940:	ldr	r1, [r5, #8]
    5942:	ldr	r2, [pc, #68]	; (5988 <SdVolume::fatPut(unsigned long, unsigned long) [clone .part.3]+0x80>)
    5944:	add	r3, r1
    5946:	str	r3, [r2, #0]
  return true;
    5948:	movs	r0, #1
    594a:	pop	{r3, r4, r5, r6, r7, pc}
  // error if not in FAT
  if (cluster > (clusterCount_ + 1)) return false;

  // calculate block address for entry
  uint32_t lba = fatStartBlock_;
  lba += fatType_ == 16 ? cluster >> 8 : cluster >> 7;
    594c:	add.w	r4, r4, r1, lsr #8

  if (lba != cacheBlockNumber_) {
    5950:	cmp	r4, r3
    5952:	beq.n	5966 <SdVolume::fatPut(unsigned long, unsigned long) [clone .part.3]+0x5e>
    if (!cacheRawBlock(lba, CACHE_FOR_READ)) return false;
    5954:	movs	r1, #0
    5956:	mov	r0, r4
    5958:	bl	58ac <SdVolume::cacheRawBlock(unsigned long, unsigned char)>
    595c:	cbz	r0, 5974 <SdVolume::fatPut(unsigned long, unsigned long) [clone .part.3]+0x6c>
  }
  // store entry
  if (fatType_ == 16) {
    595e:	ldrb.w	r3, [r5, #32]
    5962:	cmp	r3, #16
    5964:	bne.n	5976 <SdVolume::fatPut(unsigned long, unsigned long) [clone .part.3]+0x6e>
    cacheBuffer_.fat16[cluster & 0XFF] = value;
    5966:	uxtb	r6, r6
    5968:	ldr	r2, [pc, #20]	; (5980 <SdVolume::fatPut(unsigned long, unsigned long) [clone .part.3]+0x78>)
    596a:	mov	r3, r4
    596c:	strh.w	r7, [r2, r6, lsl #1]
    5970:	b.n	5930 <SdVolume::fatPut(unsigned long, unsigned long) [clone .part.3]+0x28>
  }
  cacheSetDirty();

  // mirror second FAT
  if (fatCount_ > 1) cacheMirrorBlock_ = lba + blocksPerFat_;
  return true;
    5972:	movs	r0, #1
}
    5974:	pop	{r3, r4, r5, r6, r7, pc}

  if (lba != cacheBlockNumber_) {
    if (!cacheRawBlock(lba, CACHE_FOR_READ)) return false;
  }
  // store entry
  if (fatType_ == 16) {
    5976:	mov	r3, r4
    5978:	b.n	5926 <SdVolume::fatPut(unsigned long, unsigned long) [clone .part.3]+0x1e>
    597a:	nop
    597c:	.word	0x20008038
    5980:	.word	0x200127dc
    5984:	.word	0x200129dc
    5988:	.word	0x200127d4

0000598c <SdVolume::fatGet(unsigned long, unsigned long*) const>:
  return true;
}
//------------------------------------------------------------------------------
// Fetch a FAT entry
uint8_t SdVolume::fatGet(uint32_t cluster, uint32_t* value) const {
  if (cluster > (clusterCount_ + 1)) return false;
    598c:	ldr	r3, [r0, #12]
    598e:	adds	r3, #1
    5990:	cmp	r3, r1
    5992:	bcc.n	59c6 <SdVolume::fatGet(unsigned long, unsigned long*) const+0x3a>
  *size = s;
  return true;
}
//------------------------------------------------------------------------------
// Fetch a FAT entry
uint8_t SdVolume::fatGet(uint32_t cluster, uint32_t* value) const {
    5994:	push	{r4, r5, r6, lr}
  if (cluster > (clusterCount_ + 1)) return false;
  uint32_t lba = fatStartBlock_;
  lba += fatType_ == 16 ? cluster >> 8 : cluster >> 7;
    5996:	ldrb.w	r3, [r0, #32]
    599a:	cmp	r3, #16
  if (lba != cacheBlockNumber_) {
    599c:	ldr	r3, [pc, #84]	; (59f4 <SdVolume::fatGet(unsigned long, unsigned long*) const+0x68>)
    599e:	mov	r4, r0
    59a0:	mov	r6, r2
    59a2:	mov	r5, r1
}
//------------------------------------------------------------------------------
// Fetch a FAT entry
uint8_t SdVolume::fatGet(uint32_t cluster, uint32_t* value) const {
  if (cluster > (clusterCount_ + 1)) return false;
  uint32_t lba = fatStartBlock_;
    59a4:	ldr	r0, [r0, #28]
  lba += fatType_ == 16 ? cluster >> 8 : cluster >> 7;
  if (lba != cacheBlockNumber_) {
    59a6:	ldr	r3, [r3, #0]
//------------------------------------------------------------------------------
// Fetch a FAT entry
uint8_t SdVolume::fatGet(uint32_t cluster, uint32_t* value) const {
  if (cluster > (clusterCount_ + 1)) return false;
  uint32_t lba = fatStartBlock_;
  lba += fatType_ == 16 ? cluster >> 8 : cluster >> 7;
    59a8:	beq.n	59ca <SdVolume::fatGet(unsigned long, unsigned long*) const+0x3e>
    59aa:	add.w	r0, r0, r1, lsr #7
  if (lba != cacheBlockNumber_) {
    59ae:	cmp	r0, r3
    59b0:	bne.n	59d2 <SdVolume::fatGet(unsigned long, unsigned long*) const+0x46>
    if (!cacheRawBlock(lba, CACHE_FOR_READ)) return false;
  }
  if (fatType_ == 16) {
    *value = cacheBuffer_.fat16[cluster & 0XFF];
  } else {
    *value = cacheBuffer_.fat32[cluster & 0X7F] & FAT32MASK;
    59b2:	and.w	r1, r5, #127	; 0x7f
    59b6:	ldr	r3, [pc, #64]	; (59f8 <SdVolume::fatGet(unsigned long, unsigned long*) const+0x6c>)
    59b8:	ldr.w	r3, [r3, r1, lsl #2]
    59bc:	bic.w	r3, r3, #4026531840	; 0xf0000000
    59c0:	str	r3, [r6, #0]
    59c2:	movs	r0, #1
  }
  return true;
}
    59c4:	pop	{r4, r5, r6, pc}
  return true;
}
//------------------------------------------------------------------------------
// Fetch a FAT entry
uint8_t SdVolume::fatGet(uint32_t cluster, uint32_t* value) const {
  if (cluster > (clusterCount_ + 1)) return false;
    59c6:	movs	r0, #0
    *value = cacheBuffer_.fat16[cluster & 0XFF];
  } else {
    *value = cacheBuffer_.fat32[cluster & 0X7F] & FAT32MASK;
  }
  return true;
}
    59c8:	bx	lr
//------------------------------------------------------------------------------
// Fetch a FAT entry
uint8_t SdVolume::fatGet(uint32_t cluster, uint32_t* value) const {
  if (cluster > (clusterCount_ + 1)) return false;
  uint32_t lba = fatStartBlock_;
  lba += fatType_ == 16 ? cluster >> 8 : cluster >> 7;
    59ca:	add.w	r0, r0, r1, lsr #8
  if (lba != cacheBlockNumber_) {
    59ce:	cmp	r0, r3
    59d0:	beq.n	59e2 <SdVolume::fatGet(unsigned long, unsigned long*) const+0x56>
    if (!cacheRawBlock(lba, CACHE_FOR_READ)) return false;
    59d2:	movs	r1, #0
    59d4:	bl	58ac <SdVolume::cacheRawBlock(unsigned long, unsigned char)>
    59d8:	cbz	r0, 59f0 <SdVolume::fatGet(unsigned long, unsigned long*) const+0x64>
  }
  if (fatType_ == 16) {
    59da:	ldrb.w	r3, [r4, #32]
    59de:	cmp	r3, #16
    59e0:	bne.n	59b2 <SdVolume::fatGet(unsigned long, unsigned long*) const+0x26>
    *value = cacheBuffer_.fat16[cluster & 0XFF];
    59e2:	uxtb	r1, r5
    59e4:	ldr	r3, [pc, #16]	; (59f8 <SdVolume::fatGet(unsigned long, unsigned long*) const+0x6c>)
    59e6:	ldrh.w	r3, [r3, r1, lsl #1]
    59ea:	str	r3, [r6, #0]
    59ec:	movs	r0, #1
    59ee:	pop	{r4, r5, r6, pc}
  return true;
}
//------------------------------------------------------------------------------
// Fetch a FAT entry
uint8_t SdVolume::fatGet(uint32_t cluster, uint32_t* value) const {
  if (cluster > (clusterCount_ + 1)) return false;
    59f0:	movs	r0, #0
    59f2:	pop	{r4, r5, r6, pc}
    59f4:	.word	0x20008038
    59f8:	.word	0x200127dc

000059fc <SdVolume::allocContiguous(unsigned long, unsigned long*)>:
Sd2Card* SdVolume::sdCard_;          // pointer to SD card object
uint8_t  SdVolume::cacheDirty_ = 0;  // cacheFlush() will write block if true
uint32_t SdVolume::cacheMirrorBlock_ = 0;  // mirror  block for second FAT
//------------------------------------------------------------------------------
// find a contiguous group of clusters
uint8_t SdVolume::allocContiguous(uint32_t count, uint32_t* curCluster) {
    59fc:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}

  // flag to save place to start next search
  uint8_t setStart;

  // set search start cluster
  if (*curCluster) {
    5a00:	ldr	r7, [r2, #0]
Sd2Card* SdVolume::sdCard_;          // pointer to SD card object
uint8_t  SdVolume::cacheDirty_ = 0;  // cacheFlush() will write block if true
uint32_t SdVolume::cacheMirrorBlock_ = 0;  // mirror  block for second FAT
//------------------------------------------------------------------------------
// find a contiguous group of clusters
uint8_t SdVolume::allocContiguous(uint32_t count, uint32_t* curCluster) {
    5a02:	sub	sp, #12

  // flag to save place to start next search
  uint8_t setStart;

  // set search start cluster
  if (*curCluster) {
    5a04:	cbz	r7, 5a62 <SdVolume::allocContiguous(unsigned long, unsigned long*)+0x66>
    // try to make file contiguous
    bgnCluster = *curCluster + 1;
    5a06:	adds	r7, #1

    // don't save new start location
    setStart = false;
    5a08:	mov.w	sl, #0
  }
  // end of group
  uint32_t endCluster = bgnCluster;

  // last cluster of FAT
  uint32_t fatEnd = clusterCount_ + 1;
    5a0c:	ldr	r3, [r0, #12]
    5a0e:	add.w	r8, r3, #1

  // search the FAT for free clusters
  for (uint32_t n = 0;; n++, endCluster++) {
    // can't find space checked all clusters
    if (n >= clusterCount_) return false;
    5a12:	cbz	r3, 5a5a <SdVolume::allocContiguous(unsigned long, unsigned long*)+0x5e>
    5a14:	mov	fp, r1
    5a16:	mov	r6, r0
    5a18:	mov	r9, r2
    5a1a:	mov	r4, r7
    5a1c:	movs	r5, #0
    5a1e:	b.n	5a2c <SdVolume::allocContiguous(unsigned long, unsigned long*)+0x30>
    uint32_t f;
    if (!fatGet(endCluster, &f)) return false;

    if (f != 0) {
      // cluster in use try next cluster as bgnCluster
      bgnCluster = endCluster + 1;
    5a20:	mov	r4, r3
    5a22:	mov	r7, r3
  uint32_t fatEnd = clusterCount_ + 1;

  // search the FAT for free clusters
  for (uint32_t n = 0;; n++, endCluster++) {
    // can't find space checked all clusters
    if (n >= clusterCount_) return false;
    5a24:	ldr	r3, [r6, #12]

  // last cluster of FAT
  uint32_t fatEnd = clusterCount_ + 1;

  // search the FAT for free clusters
  for (uint32_t n = 0;; n++, endCluster++) {
    5a26:	adds	r5, #1
    // can't find space checked all clusters
    if (n >= clusterCount_) return false;
    5a28:	cmp	r3, r5
    5a2a:	bls.n	5a5a <SdVolume::allocContiguous(unsigned long, unsigned long*)+0x5e>

    // past end - start from beginning of FAT
    if (endCluster > fatEnd) {
    5a2c:	cmp	r8, r4
      bgnCluster = endCluster = 2;
    5a2e:	it	cc
    5a30:	movcc	r4, #2
    }
    uint32_t f;
    if (!fatGet(endCluster, &f)) return false;
    5a32:	mov	r1, r4
    5a34:	add	r2, sp, #4
    5a36:	mov	r0, r6
    // can't find space checked all clusters
    if (n >= clusterCount_) return false;

    // past end - start from beginning of FAT
    if (endCluster > fatEnd) {
      bgnCluster = endCluster = 2;
    5a38:	it	cc
    5a3a:	movcc	r7, r4
    }
    uint32_t f;
    if (!fatGet(endCluster, &f)) return false;
    5a3c:	bl	598c <SdVolume::fatGet(unsigned long, unsigned long*) const>
    5a40:	adds	r3, r4, #1

    if (f != 0) {
      // cluster in use try next cluster as bgnCluster
      bgnCluster = endCluster + 1;
    } else if ((endCluster - bgnCluster + 1) == count) {
    5a42:	subs	r1, r3, r7
    // past end - start from beginning of FAT
    if (endCluster > fatEnd) {
      bgnCluster = endCluster = 2;
    }
    uint32_t f;
    if (!fatGet(endCluster, &f)) return false;
    5a44:	cbz	r0, 5a5a <SdVolume::allocContiguous(unsigned long, unsigned long*)+0x5e>

    if (f != 0) {
    5a46:	ldr	r2, [sp, #4]
    5a48:	cmp	r2, #0
    5a4a:	bne.n	5a20 <SdVolume::allocContiguous(unsigned long, unsigned long*)+0x24>
      // cluster in use try next cluster as bgnCluster
      bgnCluster = endCluster + 1;
    } else if ((endCluster - bgnCluster + 1) == count) {
    5a4c:	cmp	fp, r1
    5a4e:	beq.n	5a72 <SdVolume::allocContiguous(unsigned long, unsigned long*)+0x76>
    5a50:	mov	r4, r3
  uint32_t fatEnd = clusterCount_ + 1;

  // search the FAT for free clusters
  for (uint32_t n = 0;; n++, endCluster++) {
    // can't find space checked all clusters
    if (n >= clusterCount_) return false;
    5a52:	ldr	r3, [r6, #12]

  // last cluster of FAT
  uint32_t fatEnd = clusterCount_ + 1;

  // search the FAT for free clusters
  for (uint32_t n = 0;; n++, endCluster++) {
    5a54:	adds	r5, #1
    // can't find space checked all clusters
    if (n >= clusterCount_) return false;
    5a56:	cmp	r3, r5
    5a58:	bhi.n	5a2c <SdVolume::allocContiguous(unsigned long, unsigned long*)+0x30>
      // done - found space
      break;
    }
  }
  // mark end of chain
  if (!fatPutEOC(endCluster)) return false;
    5a5a:	movs	r0, #0

  // remember possible next free cluster
  if (setStart) allocSearchStart_ = bgnCluster + 1;

  return true;
}
    5a5c:	add	sp, #12
    5a5e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  } else {
    // start at likely place for free cluster
    bgnCluster = allocSearchStart_;

    // save next search start if one cluster
    setStart = 1 == count;
    5a62:	sub.w	sl, r1, #1
    5a66:	clz	sl, sl

    // don't save new start location
    setStart = false;
  } else {
    // start at likely place for free cluster
    bgnCluster = allocSearchStart_;
    5a6a:	ldr	r7, [r0, #0]

    // save next search start if one cluster
    setStart = 1 == count;
    5a6c:	mov.w	sl, sl, lsr #5
    5a70:	b.n	5a0c <SdVolume::allocContiguous(unsigned long, unsigned long*)+0x10>
}
//------------------------------------------------------------------------------
// Store a FAT entry
uint8_t SdVolume::fatPut(uint32_t cluster, uint32_t value) {
  // error if reserved cluster
  if (cluster < 2) return false;
    5a72:	cmp	r4, #1
    5a74:	bls.n	5a5a <SdVolume::allocContiguous(unsigned long, unsigned long*)+0x5e>

  // error if not in FAT
  if (cluster > (clusterCount_ + 1)) return false;
    5a76:	ldr	r3, [r6, #12]
    5a78:	adds	r3, #1
    5a7a:	cmp	r4, r3
    5a7c:	bhi.n	5a5a <SdVolume::allocContiguous(unsigned long, unsigned long*)+0x5e>
    5a7e:	mvn.w	r2, #4026531840	; 0xf0000000
    5a82:	mov	r1, r4
    5a84:	mov	r0, r6
    5a86:	bl	5908 <SdVolume::fatPut(unsigned long, unsigned long) [clone .part.3]>
      // done - found space
      break;
    }
  }
  // mark end of chain
  if (!fatPutEOC(endCluster)) return false;
    5a8a:	cmp	r0, #0
    5a8c:	beq.n	5a5a <SdVolume::allocContiguous(unsigned long, unsigned long*)+0x5e>

  // link clusters
  while (endCluster > bgnCluster) {
    5a8e:	cmp	r7, r4
    5a90:	bcs.n	5abc <SdVolume::allocContiguous(unsigned long, unsigned long*)+0xc0>
    if (!fatPut(endCluster - 1, endCluster)) return false;
    5a92:	subs	r4, #1
}
//------------------------------------------------------------------------------
// Store a FAT entry
uint8_t SdVolume::fatPut(uint32_t cluster, uint32_t value) {
  // error if reserved cluster
  if (cluster < 2) return false;
    5a94:	cmp	r4, #1
    5a96:	bls.n	5a5a <SdVolume::allocContiguous(unsigned long, unsigned long*)+0x5e>

  // error if not in FAT
  if (cluster > (clusterCount_ + 1)) return false;
    5a98:	ldr	r3, [r6, #12]
    5a9a:	adds	r3, #1
    5a9c:	cmp	r4, r3
    5a9e:	bhi.n	5a5a <SdVolume::allocContiguous(unsigned long, unsigned long*)+0x5e>
    5aa0:	adds	r2, r4, #1
    5aa2:	mov	r1, r4
    5aa4:	mov	r0, r6
    5aa6:	bl	5908 <SdVolume::fatPut(unsigned long, unsigned long) [clone .part.3]>
  // mark end of chain
  if (!fatPutEOC(endCluster)) return false;

  // link clusters
  while (endCluster > bgnCluster) {
    if (!fatPut(endCluster - 1, endCluster)) return false;
    5aaa:	cmp	r0, #0
    5aac:	beq.n	5a5a <SdVolume::allocContiguous(unsigned long, unsigned long*)+0x5e>
  }
  // mark end of chain
  if (!fatPutEOC(endCluster)) return false;

  // link clusters
  while (endCluster > bgnCluster) {
    5aae:	cmp	r7, r4
    if (!fatPut(endCluster - 1, endCluster)) return false;
    5ab0:	add.w	r4, r4, #4294967295
  }
  // mark end of chain
  if (!fatPutEOC(endCluster)) return false;

  // link clusters
  while (endCluster > bgnCluster) {
    5ab4:	beq.n	5abc <SdVolume::allocContiguous(unsigned long, unsigned long*)+0xc0>
}
//------------------------------------------------------------------------------
// Store a FAT entry
uint8_t SdVolume::fatPut(uint32_t cluster, uint32_t value) {
  // error if reserved cluster
  if (cluster < 2) return false;
    5ab6:	cmp	r4, #1
    5ab8:	bne.n	5a98 <SdVolume::allocContiguous(unsigned long, unsigned long*)+0x9c>
    5aba:	b.n	5a5a <SdVolume::allocContiguous(unsigned long, unsigned long*)+0x5e>
  // link clusters
  while (endCluster > bgnCluster) {
    if (!fatPut(endCluster - 1, endCluster)) return false;
    endCluster--;
  }
  if (*curCluster != 0) {
    5abc:	ldr.w	r1, [r9]
    5ac0:	cbz	r1, 5ada <SdVolume::allocContiguous(unsigned long, unsigned long*)+0xde>
}
//------------------------------------------------------------------------------
// Store a FAT entry
uint8_t SdVolume::fatPut(uint32_t cluster, uint32_t value) {
  // error if reserved cluster
  if (cluster < 2) return false;
    5ac2:	cmp	r1, #1
    5ac4:	bls.n	5a5a <SdVolume::allocContiguous(unsigned long, unsigned long*)+0x5e>

  // error if not in FAT
  if (cluster > (clusterCount_ + 1)) return false;
    5ac6:	ldr	r3, [r6, #12]
    5ac8:	adds	r3, #1
    5aca:	cmp	r1, r3
    5acc:	bhi.n	5a5a <SdVolume::allocContiguous(unsigned long, unsigned long*)+0x5e>
    5ace:	mov	r2, r7
    5ad0:	mov	r0, r6
    5ad2:	bl	5908 <SdVolume::fatPut(unsigned long, unsigned long) [clone .part.3]>
    if (!fatPut(endCluster - 1, endCluster)) return false;
    endCluster--;
  }
  if (*curCluster != 0) {
    // connect chains
    if (!fatPut(*curCluster, bgnCluster)) return false;
    5ad6:	cmp	r0, #0
    5ad8:	beq.n	5a5a <SdVolume::allocContiguous(unsigned long, unsigned long*)+0x5e>
  }
  // return first cluster number to caller
  *curCluster = bgnCluster;
    5ada:	str.w	r7, [r9]

  // remember possible next free cluster
  if (setStart) allocSearchStart_ = bgnCluster + 1;
    5ade:	cmp.w	sl, #0
    5ae2:	beq.n	5ae8 <SdVolume::allocContiguous(unsigned long, unsigned long*)+0xec>
    5ae4:	adds	r7, #1
    5ae6:	str	r7, [r6, #0]

  return true;
    5ae8:	movs	r0, #1
    5aea:	b.n	5a5c <SdVolume::allocContiguous(unsigned long, unsigned long*)+0x60>

00005aec <sdhc_isr>:
//  Serial.printf("setSdclk: %d %d : %x %x\n\r", f_pll, m_sdClkKhz, sdclkfs, dvs);
}


void sdhc_isr(void)
{ SDHC_IRQSIGEN &= ~SDHC_IRQSIGEN_DMA_MASK;
    5aec:	ldr	r1, [pc, #60]	; (5b2c <sdhc_isr+0x40>)
  //
//  Serial.print("IRQ1: "); Serial.println(SDHC_IRQSTAT,HEX);
  while(!(SDHC_IRQSTAT & SDHC_IRQSTAT_TC));//  SDHC_IRQSTAT &= ~SDHC_IRQSTAT_TC;
    5aee:	ldr	r2, [pc, #64]	; (5b30 <sdhc_isr+0x44>)
//  Serial.printf("setSdclk: %d %d : %x %x\n\r", f_pll, m_sdClkKhz, sdclkfs, dvs);
}


void sdhc_isr(void)
{ SDHC_IRQSIGEN &= ~SDHC_IRQSIGEN_DMA_MASK;
    5af0:	ldr	r3, [r1, #0]
    5af2:	bic.w	r3, r3, #268435456	; 0x10000000
    5af6:	bic.w	r3, r3, #10
    5afa:	str	r3, [r1, #0]
  //
//  Serial.print("IRQ1: "); Serial.println(SDHC_IRQSTAT,HEX);
  while(!(SDHC_IRQSTAT & SDHC_IRQSTAT_TC));//  SDHC_IRQSTAT &= ~SDHC_IRQSTAT_TC;
    5afc:	ldr	r3, [r2, #0]
    5afe:	lsls	r1, r3, #30
    5b00:	bpl.n	5afc <sdhc_isr+0x10>

  #if defined(__IMXRT1052__)
    SDHC_MIX_CTRL &= ~(SDHC_MIX_CTRL_AC23EN | SDHC_MIX_CTRL_DMAEN) ;  
  #endif
  // for T3.6, seems not to hurt for T4  
  if(SDHC_SYSCTL & SDHC_SYSCTL_HCKEN) SDHC_SYSCTL &=  ~SDHC_SYSCTL_HCKEN;
    5b02:	ldr	r3, [pc, #48]	; (5b34 <sdhc_isr+0x48>)
    5b04:	ldr	r2, [r3, #0]
    5b06:	lsls	r2, r2, #30
    5b08:	bpl.n	5b12 <sdhc_isr+0x26>
    5b0a:	ldr	r2, [r3, #0]
    5b0c:	bic.w	r2, r2, #2
    5b10:	str	r2, [r3, #0]
  SDHC_PROCTL &= ~SDHC_PROCTL_D3CD; SDHC_PROCTL |=  SDHC_PROCTL_D3CD;
    5b12:	ldr	r3, [pc, #36]	; (5b38 <sdhc_isr+0x4c>)

  dmaDone=1;
    5b14:	ldr	r1, [pc, #36]	; (5b3c <sdhc_isr+0x50>)
  #if defined(__IMXRT1052__)
    SDHC_MIX_CTRL &= ~(SDHC_MIX_CTRL_AC23EN | SDHC_MIX_CTRL_DMAEN) ;  
  #endif
  // for T3.6, seems not to hurt for T4  
  if(SDHC_SYSCTL & SDHC_SYSCTL_HCKEN) SDHC_SYSCTL &=  ~SDHC_SYSCTL_HCKEN;
  SDHC_PROCTL &= ~SDHC_PROCTL_D3CD; SDHC_PROCTL |=  SDHC_PROCTL_D3CD;
    5b16:	ldr	r2, [r3, #0]
    5b18:	bic.w	r2, r2, #8
    5b1c:	str	r2, [r3, #0]
    5b1e:	ldr	r2, [r3, #0]

  dmaDone=1;
    5b20:	movs	r0, #1
  #if defined(__IMXRT1052__)
    SDHC_MIX_CTRL &= ~(SDHC_MIX_CTRL_AC23EN | SDHC_MIX_CTRL_DMAEN) ;  
  #endif
  // for T3.6, seems not to hurt for T4  
  if(SDHC_SYSCTL & SDHC_SYSCTL_HCKEN) SDHC_SYSCTL &=  ~SDHC_SYSCTL_HCKEN;
  SDHC_PROCTL &= ~SDHC_PROCTL_D3CD; SDHC_PROCTL |=  SDHC_PROCTL_D3CD;
    5b22:	orr.w	r2, r2, #8
    5b26:	str	r2, [r3, #0]

  dmaDone=1;
    5b28:	str	r0, [r1, #0]
    5b2a:	bx	lr
    5b2c:	.word	0x400b1038
    5b30:	.word	0x400b1030
    5b34:	.word	0x400b102c
    5b38:	.word	0x400b1028
    5b3c:	.word	0x200129e0

00005b40 <SDHC_CardReadBlock(void*, unsigned long)>:
int SDHC_CardReadBlock(void * buff, uint32_t sector)
{
  int result=0;
  uint32_t* pData = (uint32_t*)buff;
  /* check alignment for DMA */
  if (reinterpret_cast<uintptr_t>(static_cast<const void*>(buff)) % 4) {
    5b40:	lsls	r3, r0, #30
    5b42:	bne.n	5bce <SDHC_CardReadBlock(void*, unsigned long)+0x8e>
//              sector - index of sector
//
// RETURNS:     result of operation
//-----------------------------------------------------------------------------
int SDHC_CardReadBlock(void * buff, uint32_t sector)
{
    5b44:	push	{r4, r5, r6, r7, lr}
  if (reinterpret_cast<uintptr_t>(static_cast<const void*>(buff)) % 4) {
    return -1;
  }
//  Serial.print("Sector: "); Serial.println(sector); Serial.flush();
  // Check if this is ready
  if (sdCardDesc.status != 0) return SDHC_RESULT_NOT_READY;
    5b46:	ldr	r4, [pc, #140]	; (5bd4 <SDHC_CardReadBlock(void*, unsigned long)+0x94>)
    5b48:	ldrb	r3, [r4, #0]
    5b4a:	cbz	r3, 5b50 <SDHC_CardReadBlock(void*, unsigned long)+0x10>
    5b4c:	movs	r0, #3
    5b4e:	pop	{r4, r5, r6, r7, pc}

  while ((SDHC_PRSSTAT & SDHC_PRSSTAT_CIHB) || (SDHC_PRSSTAT & SDHC_PRSSTAT_CDIHB));
    5b50:	ldr	r2, [pc, #132]	; (5bd8 <SDHC_CardReadBlock(void*, unsigned long)+0x98>)
    5b52:	mov	r5, r2
    5b54:	ldr	r3, [r2, #0]
    5b56:	lsls	r6, r3, #31
    5b58:	bmi.n	5b54 <SDHC_CardReadBlock(void*, unsigned long)+0x14>
    5b5a:	ldr	r3, [r5, #0]
    5b5c:	lsls	r3, r3, #30
    5b5e:	bmi.n	5b54 <SDHC_CardReadBlock(void*, unsigned long)+0x14>

  // Convert LBA to BYTE address if needed
  if (!sdCardDesc.highCapacity)  sector *= 512;
    5b60:	ldrb	r3, [r4, #1]
    5b62:	cbnz	r3, 5b66 <SDHC_CardReadBlock(void*, unsigned long)+0x26>
    5b64:	lsls	r1, r1, #9

  // clear status
  SDHC_IRQSTAT = SDHC_IRQSTAT;
    5b66:	ldr	r3, [pc, #116]	; (5bdc <SDHC_CardReadBlock(void*, unsigned long)+0x9c>)
  
  // use dma: disabling polling
  uint32_t irqstat = SDHC_IRQSTATEN;
    5b68:	ldr	r4, [pc, #116]	; (5be0 <SDHC_CardReadBlock(void*, unsigned long)+0xa0>)

  // Convert LBA to BYTE address if needed
  if (!sdCardDesc.highCapacity)  sector *= 512;

  // clear status
  SDHC_IRQSTAT = SDHC_IRQSTAT;
    5b6a:	ldr	r2, [r3, #0]
    5b6c:	str	r2, [r3, #0]
  
  // use dma: disabling polling
  uint32_t irqstat = SDHC_IRQSTATEN;
    5b6e:	ldr	r3, [r4, #0]
  SDHC_IRQSTATEN = irqstat;
  
  uint32_t sigen = SDHC_IRQSIGEN;
  sigen |= SDHC_IRQSIGEN_DMA_MASK ;
  
  SDHC_SYSCTL |= SDHC_SYSCTL_HCKEN;
    5b70:	ldr	r6, [pc, #112]	; (5be4 <SDHC_CardReadBlock(void*, unsigned long)+0xa4>)
  irqstat &= ~(SDHC_IRQSTATEN_DCESEN | SDHC_IRQSTATEN_CCESEN) ;
  // enable status
  irqstat |= SDHC_IRQSTATEN_DMAESEN | SDHC_IRQSTATEN_DINTSEN | SDHC_IRQSTATEN_TCSEN ;
  SDHC_IRQSTATEN = irqstat;
  
  uint32_t sigen = SDHC_IRQSIGEN;
    5b72:	ldr	r5, [pc, #116]	; (5be8 <SDHC_CardReadBlock(void*, unsigned long)+0xa8>)
  #endif

  uint32_t xfertyp = SDHC_XFERTYP_CMDINX(SDHC_CMD17) | SDHC_XFERTYP_RSPTYP(SDHC_XFERTYP_RSPTYP_48) | SDHC_XFERTYP_DPSEL
                     | SDHC_XFERTYP_DTDSEL | SDHC_XFERTYP_DMAEN;

  dmaDone=0;
    5b74:	ldr	r2, [pc, #116]	; (5bec <SDHC_CardReadBlock(void*, unsigned long)+0xac>)
  SDHC_DSADDR  = (uint32_t)buff;
    5b76:	ldr	r7, [pc, #120]	; (5bf0 <SDHC_CardReadBlock(void*, unsigned long)+0xb0>)
  SDHC_CMDARG = sector;
    5b78:	ldr.w	lr, [pc, #128]	; 5bfc <SDHC_CardReadBlock(void*, unsigned long)+0xbc>
  SDHC_IRQSTAT = SDHC_IRQSTAT;
  
  // use dma: disabling polling
  uint32_t irqstat = SDHC_IRQSTATEN;
  irqstat &= ~(SDHC_IRQSTATEN_BRRSEN | SDHC_IRQSTATEN_BWRSEN | SDHC_IRQSTATEN_CCSEN) ;
  irqstat &= ~(SDHC_IRQSTATEN_DCESEN | SDHC_IRQSTATEN_CCESEN) ;
    5b7c:	bic.w	r3, r3, #2228224	; 0x220000
    5b80:	bic.w	r3, r3, #49	; 0x31
  // enable status
  irqstat |= SDHC_IRQSTATEN_DMAESEN | SDHC_IRQSTATEN_DINTSEN | SDHC_IRQSTATEN_TCSEN ;
    5b84:	orr.w	r3, r3, #268435456	; 0x10000000
    5b88:	orr.w	r3, r3, #10
  SDHC_IRQSTATEN = irqstat;
    5b8c:	str	r3, [r4, #0]
  
  uint32_t sigen = SDHC_IRQSIGEN;
    5b8e:	ldr	r3, [r5, #0]
  sigen |= SDHC_IRQSIGEN_DMA_MASK ;
  
  SDHC_SYSCTL |= SDHC_SYSCTL_HCKEN;
    5b90:	ldr	r4, [r6, #0]
    5b92:	orr.w	r4, r4, #2
    5b96:	str	r4, [r6, #0]
  #endif

  uint32_t xfertyp = SDHC_XFERTYP_CMDINX(SDHC_CMD17) | SDHC_XFERTYP_RSPTYP(SDHC_XFERTYP_RSPTYP_48) | SDHC_XFERTYP_DPSEL
                     | SDHC_XFERTYP_DTDSEL | SDHC_XFERTYP_DMAEN;

  dmaDone=0;
    5b98:	movs	r4, #0
    5b9a:	str	r4, [r2, #0]
  // enable status
  irqstat |= SDHC_IRQSTATEN_DMAESEN | SDHC_IRQSTATEN_DINTSEN | SDHC_IRQSTATEN_TCSEN ;
  SDHC_IRQSTATEN = irqstat;
  
  uint32_t sigen = SDHC_IRQSIGEN;
  sigen |= SDHC_IRQSIGEN_DMA_MASK ;
    5b9c:	orr.w	r3, r3, #268435456	; 0x10000000

  uint32_t xfertyp = SDHC_XFERTYP_CMDINX(SDHC_CMD17) | SDHC_XFERTYP_RSPTYP(SDHC_XFERTYP_RSPTYP_48) | SDHC_XFERTYP_DPSEL
                     | SDHC_XFERTYP_DTDSEL | SDHC_XFERTYP_DMAEN;

  dmaDone=0;
  SDHC_DSADDR  = (uint32_t)buff;
    5ba0:	str	r0, [r7, #0]
  SDHC_CMDARG = sector;
  SDHC_BLKATTR = SDHC_BLKATTR_BLKCNT(1) | SDHC_BLKATTR_BLKSIZE(512);
  SDHC_IRQSIGEN = sigen;
  SDHC_XFERTYP = xfertyp;
    5ba2:	ldr	r0, [pc, #80]	; (5bf4 <SDHC_CardReadBlock(void*, unsigned long)+0xb4>)
  uint32_t xfertyp = SDHC_XFERTYP_CMDINX(SDHC_CMD17) | SDHC_XFERTYP_RSPTYP(SDHC_XFERTYP_RSPTYP_48) | SDHC_XFERTYP_DPSEL
                     | SDHC_XFERTYP_DTDSEL | SDHC_XFERTYP_DMAEN;

  dmaDone=0;
  SDHC_DSADDR  = (uint32_t)buff;
  SDHC_CMDARG = sector;
    5ba4:	str.w	r1, [lr]
  // enable status
  irqstat |= SDHC_IRQSTATEN_DMAESEN | SDHC_IRQSTATEN_DINTSEN | SDHC_IRQSTATEN_TCSEN ;
  SDHC_IRQSTATEN = irqstat;
  
  uint32_t sigen = SDHC_IRQSIGEN;
  sigen |= SDHC_IRQSIGEN_DMA_MASK ;
    5ba8:	orr.w	r3, r3, #10
  dmaDone=0;
  SDHC_DSADDR  = (uint32_t)buff;
  SDHC_CMDARG = sector;
  SDHC_BLKATTR = SDHC_BLKATTR_BLKCNT(1) | SDHC_BLKATTR_BLKSIZE(512);
  SDHC_IRQSIGEN = sigen;
  SDHC_XFERTYP = xfertyp;
    5bac:	ldr	r4, [pc, #72]	; (5bf8 <SDHC_CardReadBlock(void*, unsigned long)+0xb8>)
                     | SDHC_XFERTYP_DTDSEL | SDHC_XFERTYP_DMAEN;

  dmaDone=0;
  SDHC_DSADDR  = (uint32_t)buff;
  SDHC_CMDARG = sector;
  SDHC_BLKATTR = SDHC_BLKATTR_BLKCNT(1) | SDHC_BLKATTR_BLKSIZE(512);
    5bae:	mov.w	r1, #66048	; 0x10200
    5bb2:	str.w	r1, [r6, #-40]
  SDHC_IRQSIGEN = sigen;
    5bb6:	str	r3, [r5, #0]
  SDHC_XFERTYP = xfertyp;
    5bb8:	str	r4, [r0, #0]
  //
  while(!dmaDone);
    5bba:	ldr	r3, [r2, #0]
    5bbc:	cmp	r3, #0
    5bbe:	beq.n	5bba <SDHC_CardReadBlock(void*, unsigned long)+0x7a>
  SDHC_IRQSTAT &= (SDHC_IRQSTAT_CC | SDHC_IRQSTAT_TC);
    5bc0:	ldr	r2, [pc, #24]	; (5bdc <SDHC_CardReadBlock(void*, unsigned long)+0x9c>)
    5bc2:	ldr	r3, [r2, #0]
    5bc4:	and.w	r3, r3, #3
    5bc8:	str	r3, [r2, #0]

  return result;
    5bca:	movs	r0, #0
    5bcc:	pop	{r4, r5, r6, r7, pc}
{
  int result=0;
  uint32_t* pData = (uint32_t*)buff;
  /* check alignment for DMA */
  if (reinterpret_cast<uintptr_t>(static_cast<const void*>(buff)) % 4) {
    return -1;
    5bce:	mov.w	r0, #4294967295
  //
  while(!dmaDone);
  SDHC_IRQSTAT &= (SDHC_IRQSTAT_CC | SDHC_IRQSTAT_TC);

  return result;
}
    5bd2:	bx	lr
    5bd4:	.word	0x200129e4
    5bd8:	.word	0x400b1024
    5bdc:	.word	0x400b1030
    5be0:	.word	0x400b1034
    5be4:	.word	0x400b102c
    5be8:	.word	0x400b1038
    5bec:	.word	0x200129e0
    5bf0:	.word	0x400b1000
    5bf4:	.word	0x400b100c
    5bf8:	.word	0x11220011
    5bfc:	.word	0x400b1008

00005c00 <SDHC_CardWriteBlock(void const*, unsigned long)>:
int SDHC_CardWriteBlock(const void * buff, uint32_t sector)
{
  int result=0;
  const uint32_t *pData = (const uint32_t *)buff;
  /* check alignment for DMA */
  if (reinterpret_cast<uintptr_t>(static_cast<const void*>(buff)) % 4) {
    5c00:	lsls	r3, r0, #30
    5c02:	bne.n	5cec <SDHC_CardWriteBlock(void const*, unsigned long)+0xec>
//              sector - index of sector
//
// RETURNS:     result of operation
//-----------------------------------------------------------------------------
int SDHC_CardWriteBlock(const void * buff, uint32_t sector)
{
    5c04:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  if (reinterpret_cast<uintptr_t>(static_cast<const void*>(buff)) % 4) {
    return -1;
  }

  // Check if this is ready
  if (sdCardDesc.status != 0) return SDHC_RESULT_NOT_READY;
    5c08:	ldr.w	lr, [pc, #280]	; 5d24 <SDHC_CardWriteBlock(void const*, unsigned long)+0x124>
    5c0c:	ldrb.w	r3, [lr]
    5c10:	cbz	r3, 5c18 <SDHC_CardWriteBlock(void const*, unsigned long)+0x18>
    5c12:	movs	r0, #3
    5c14:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

  while ((SDHC_PRSSTAT & SDHC_PRSSTAT_CIHB) || (SDHC_PRSSTAT & SDHC_PRSSTAT_CDIHB)) ;
    5c18:	ldr	r2, [pc, #216]	; (5cf4 <SDHC_CardWriteBlock(void const*, unsigned long)+0xf4>)
    5c1a:	mov	r4, r2
    5c1c:	ldr	r3, [r2, #0]
    5c1e:	lsls	r6, r3, #31
    5c20:	bmi.n	5c1c <SDHC_CardWriteBlock(void const*, unsigned long)+0x1c>
    5c22:	ldr	r3, [r4, #0]
    5c24:	lsls	r5, r3, #30
    5c26:	bmi.n	5c1c <SDHC_CardWriteBlock(void const*, unsigned long)+0x1c>

  // Convert LBA to uint8_t address if needed
  if (!sdCardDesc.highCapacity) sector *= 512;
    5c28:	ldrb.w	r3, [lr, #1]
    5c2c:	cbnz	r3, 5c30 <SDHC_CardWriteBlock(void const*, unsigned long)+0x30>
    5c2e:	lsls	r1, r1, #9

  // clear status
  SDHC_IRQSTAT = SDHC_IRQSTAT;
    5c30:	ldr	r3, [pc, #196]	; (5cf8 <SDHC_CardWriteBlock(void const*, unsigned long)+0xf8>)

  uint32_t irqstat = SDHC_IRQSTATEN;
    5c32:	ldr	r4, [pc, #200]	; (5cfc <SDHC_CardWriteBlock(void const*, unsigned long)+0xfc>)

  // Convert LBA to uint8_t address if needed
  if (!sdCardDesc.highCapacity) sector *= 512;

  // clear status
  SDHC_IRQSTAT = SDHC_IRQSTAT;
    5c34:	ldr	r2, [r3, #0]
    5c36:	str	r2, [r3, #0]

  uint32_t irqstat = SDHC_IRQSTATEN;
    5c38:	ldr	r3, [r4, #0]
  SDHC_IRQSTATEN = irqstat;
  
  uint32_t sigen = SDHC_IRQSIGEN;
  sigen |= SDHC_IRQSIGEN_DMA_MASK ;
  
  SDHC_SYSCTL |= SDHC_SYSCTL_HCKEN;
    5c3a:	ldr	r6, [pc, #196]	; (5d00 <SDHC_CardWriteBlock(void const*, unsigned long)+0x100>)
  // enable status
  irqstat |= /*SDHC_IRQSTATEN_DCESEN | SDHC_IRQSTATEN_CCESEN | */SDHC_IRQSTATEN_DMAESEN ; 
  irqstat |= SDHC_IRQSTATEN_DINTSEN | SDHC_IRQSTATEN_TCSEN ; 
  SDHC_IRQSTATEN = irqstat;
  
  uint32_t sigen = SDHC_IRQSIGEN;
    5c3c:	ldr	r5, [pc, #196]	; (5d04 <SDHC_CardWriteBlock(void const*, unsigned long)+0x104>)
  #endif

  uint32_t xfertyp = SDHC_XFERTYP_CMDINX(SDHC_CMD24) | SDHC_XFERTYP_RSPTYP(SDHC_XFERTYP_RSPTYP_48) | SDHC_XFERTYP_DPSEL
                     | SDHC_XFERTYP_DMAEN;

  dmaDone=0;
    5c3e:	ldr	r2, [pc, #200]	; (5d08 <SDHC_CardWriteBlock(void const*, unsigned long)+0x108>)
  SDHC_DSADDR  = (uint32_t)buff;
    5c40:	ldr	r7, [pc, #200]	; (5d0c <SDHC_CardWriteBlock(void const*, unsigned long)+0x10c>)
  SDHC_IRQSTAT = SDHC_IRQSTAT;

  uint32_t irqstat = SDHC_IRQSTATEN;
  // use dma: disabling polling
  irqstat &= ~(SDHC_IRQSTATEN_BRRSEN | SDHC_IRQSTATEN_BWRSEN | SDHC_IRQSTATEN_CCSEN) ;
  irqstat &= ~(SDHC_IRQSTATEN_DCESEN | SDHC_IRQSTATEN_CCESEN) ;
    5c42:	bic.w	r3, r3, #2228224	; 0x220000
    5c46:	bic.w	r3, r3, #49	; 0x31
  // enable status
  irqstat |= /*SDHC_IRQSTATEN_DCESEN | SDHC_IRQSTATEN_CCESEN | */SDHC_IRQSTATEN_DMAESEN ; 
  irqstat |= SDHC_IRQSTATEN_DINTSEN | SDHC_IRQSTATEN_TCSEN ; 
    5c4a:	orr.w	r3, r3, #268435456	; 0x10000000
    5c4e:	orr.w	r3, r3, #10
  SDHC_IRQSTATEN = irqstat;
    5c52:	str	r3, [r4, #0]
  
  uint32_t sigen = SDHC_IRQSIGEN;
    5c54:	ldr	r3, [r5, #0]
  sigen |= SDHC_IRQSIGEN_DMA_MASK ;
  
  SDHC_SYSCTL |= SDHC_SYSCTL_HCKEN;
    5c56:	ldr	r4, [r6, #0]
    5c58:	orr.w	r4, r4, #2
    5c5c:	str	r4, [r6, #0]
  #endif

  uint32_t xfertyp = SDHC_XFERTYP_CMDINX(SDHC_CMD24) | SDHC_XFERTYP_RSPTYP(SDHC_XFERTYP_RSPTYP_48) | SDHC_XFERTYP_DPSEL
                     | SDHC_XFERTYP_DMAEN;

  dmaDone=0;
    5c5e:	movs	r4, #0
    5c60:	str	r4, [r2, #0]
  irqstat |= /*SDHC_IRQSTATEN_DCESEN | SDHC_IRQSTATEN_CCESEN | */SDHC_IRQSTATEN_DMAESEN ; 
  irqstat |= SDHC_IRQSTATEN_DINTSEN | SDHC_IRQSTATEN_TCSEN ; 
  SDHC_IRQSTATEN = irqstat;
  
  uint32_t sigen = SDHC_IRQSIGEN;
  sigen |= SDHC_IRQSIGEN_DMA_MASK ;
    5c62:	orr.w	r3, r3, #268435456	; 0x10000000

  uint32_t xfertyp = SDHC_XFERTYP_CMDINX(SDHC_CMD24) | SDHC_XFERTYP_RSPTYP(SDHC_XFERTYP_RSPTYP_48) | SDHC_XFERTYP_DPSEL
                     | SDHC_XFERTYP_DMAEN;

  dmaDone=0;
  SDHC_DSADDR  = (uint32_t)buff;
    5c66:	str	r0, [r7, #0]
  SDHC_CMDARG = sector;
  SDHC_BLKATTR = SDHC_BLKATTR_BLKCNT(1) | SDHC_BLKATTR_BLKSIZE(512);
    5c68:	ldr	r4, [pc, #164]	; (5d10 <SDHC_CardWriteBlock(void const*, unsigned long)+0x110>)
  SDHC_IRQSIGEN = sigen;
  SDHC_XFERTYP = xfertyp;
    5c6a:	ldr	r0, [pc, #168]	; (5d14 <SDHC_CardWriteBlock(void const*, unsigned long)+0x114>)
  uint32_t xfertyp = SDHC_XFERTYP_CMDINX(SDHC_CMD24) | SDHC_XFERTYP_RSPTYP(SDHC_XFERTYP_RSPTYP_48) | SDHC_XFERTYP_DPSEL
                     | SDHC_XFERTYP_DMAEN;

  dmaDone=0;
  SDHC_DSADDR  = (uint32_t)buff;
  SDHC_CMDARG = sector;
    5c6c:	str.w	r1, [r6, #-36]
  irqstat |= /*SDHC_IRQSTATEN_DCESEN | SDHC_IRQSTATEN_CCESEN | */SDHC_IRQSTATEN_DMAESEN ; 
  irqstat |= SDHC_IRQSTATEN_DINTSEN | SDHC_IRQSTATEN_TCSEN ; 
  SDHC_IRQSTATEN = irqstat;
  
  uint32_t sigen = SDHC_IRQSIGEN;
  sigen |= SDHC_IRQSIGEN_DMA_MASK ;
    5c70:	orr.w	r3, r3, #10
                     | SDHC_XFERTYP_DMAEN;

  dmaDone=0;
  SDHC_DSADDR  = (uint32_t)buff;
  SDHC_CMDARG = sector;
  SDHC_BLKATTR = SDHC_BLKATTR_BLKCNT(1) | SDHC_BLKATTR_BLKSIZE(512);
    5c74:	mov.w	r6, #66048	; 0x10200
  SDHC_IRQSIGEN = sigen;
  SDHC_XFERTYP = xfertyp;
    5c78:	ldr	r1, [pc, #156]	; (5d18 <SDHC_CardWriteBlock(void const*, unsigned long)+0x118>)
                     | SDHC_XFERTYP_DMAEN;

  dmaDone=0;
  SDHC_DSADDR  = (uint32_t)buff;
  SDHC_CMDARG = sector;
  SDHC_BLKATTR = SDHC_BLKATTR_BLKCNT(1) | SDHC_BLKATTR_BLKSIZE(512);
    5c7a:	str	r6, [r4, #0]
  SDHC_IRQSIGEN = sigen;
    5c7c:	str	r3, [r5, #0]
  SDHC_XFERTYP = xfertyp;
    5c7e:	str	r1, [r0, #0]
  //
  while(!dmaDone);
    5c80:	ldr	r3, [r2, #0]
    5c82:	cmp	r3, #0
    5c84:	beq.n	5c80 <SDHC_CardWriteBlock(void const*, unsigned long)+0x80>
  SDHC_IRQSTAT &= (SDHC_IRQSTAT_CC | SDHC_IRQSTAT_TC);
    5c86:	ldr	r1, [pc, #112]	; (5cf8 <SDHC_CardWriteBlock(void const*, unsigned long)+0xf8>)

  while(SDHC_PRSSTAT & SDHC_PRSSTAT_DLA);
    5c88:	ldr	r2, [pc, #104]	; (5cf4 <SDHC_CardWriteBlock(void const*, unsigned long)+0xf4>)
  SDHC_BLKATTR = SDHC_BLKATTR_BLKCNT(1) | SDHC_BLKATTR_BLKSIZE(512);
  SDHC_IRQSIGEN = sigen;
  SDHC_XFERTYP = xfertyp;
  //
  while(!dmaDone);
  SDHC_IRQSTAT &= (SDHC_IRQSTAT_CC | SDHC_IRQSTAT_TC);
    5c8a:	ldr	r3, [r1, #0]
    5c8c:	and.w	r3, r3, #3
    5c90:	str	r3, [r1, #0]

  while(SDHC_PRSSTAT & SDHC_PRSSTAT_DLA);
    5c92:	ldr	r3, [r2, #0]
    5c94:	lsls	r1, r3, #29
    5c96:	bmi.n	5c92 <SDHC_CardWriteBlock(void const*, unsigned long)+0x92>

  //check for uSD status
  do
  { while ((SDHC_PRSSTAT & SDHC_PRSSTAT_CIHB) || (SDHC_PRSSTAT & SDHC_PRSSTAT_CDIHB)) ;
    5c98:	ldr	r1, [pc, #88]	; (5cf4 <SDHC_CardWriteBlock(void const*, unsigned long)+0xf4>)
    SDHC_IRQSTATEN |= SDHC_IRQSTATEN_CCSEN;
    SDHC_IRQSTAT=SDHC_IRQSTAT;
    5c9a:	ldr	r2, [pc, #92]	; (5cf8 <SDHC_CardWriteBlock(void const*, unsigned long)+0xf8>)
  while(SDHC_PRSSTAT & SDHC_PRSSTAT_DLA);

  //check for uSD status
  do
  { while ((SDHC_PRSSTAT & SDHC_PRSSTAT_CIHB) || (SDHC_PRSSTAT & SDHC_PRSSTAT_CDIHB)) ;
    SDHC_IRQSTATEN |= SDHC_IRQSTATEN_CCSEN;
    5c9c:	ldr	r7, [pc, #92]	; (5cfc <SDHC_CardWriteBlock(void const*, unsigned long)+0xfc>)
    SDHC_IRQSTAT=SDHC_IRQSTAT;
    // CMD13 to check uSD status
    xfertyp = (SDHC_XFERTYP_CMDINX(SDHC_CMD13) | SDHC_XFERTYP_RSPTYP(SDHC_XFERTYP_RSPTYP_48));
    //
    SDHC_CMDARG = sdCardDesc.address;
    5c9e:	ldr.w	r8, [pc, #136]	; 5d28 <SDHC_CardWriteBlock(void const*, unsigned long)+0x128>
    SDHC_XFERTYP = xfertyp;
    5ca2:	ldr.w	ip, [pc, #112]	; 5d14 <SDHC_CardWriteBlock(void const*, unsigned long)+0x114>
    while(!(SDHC_IRQSTAT & SDHC_IRQSTAT_CC)); SDHC_IRQSTAT &= SDHC_IRQSTAT_CC;
  } while(SDHC_CMDRSP0 & 0x200); // while data?
    5ca6:	ldr	r6, [pc, #116]	; (5d1c <SDHC_CardWriteBlock(void const*, unsigned long)+0x11c>)

  while(SDHC_PRSSTAT & SDHC_PRSSTAT_DLA);

  //check for uSD status
  do
  { while ((SDHC_PRSSTAT & SDHC_PRSSTAT_CIHB) || (SDHC_PRSSTAT & SDHC_PRSSTAT_CDIHB)) ;
    5ca8:	mov	r5, r1
    // CMD13 to check uSD status
    xfertyp = (SDHC_XFERTYP_CMDINX(SDHC_CMD13) | SDHC_XFERTYP_RSPTYP(SDHC_XFERTYP_RSPTYP_48));
    //
    SDHC_CMDARG = sdCardDesc.address;
    SDHC_XFERTYP = xfertyp;
    while(!(SDHC_IRQSTAT & SDHC_IRQSTAT_CC)); SDHC_IRQSTAT &= SDHC_IRQSTAT_CC;
    5caa:	mov	r4, r2

  while(SDHC_PRSSTAT & SDHC_PRSSTAT_DLA);

  //check for uSD status
  do
  { while ((SDHC_PRSSTAT & SDHC_PRSSTAT_CIHB) || (SDHC_PRSSTAT & SDHC_PRSSTAT_CDIHB)) ;
    5cac:	ldr	r3, [r1, #0]
    5cae:	lsls	r3, r3, #31
    5cb0:	bmi.n	5cac <SDHC_CardWriteBlock(void const*, unsigned long)+0xac>
    5cb2:	ldr	r3, [r5, #0]
    5cb4:	lsls	r0, r3, #30
    5cb6:	bmi.n	5cac <SDHC_CardWriteBlock(void const*, unsigned long)+0xac>
    SDHC_IRQSTATEN |= SDHC_IRQSTATEN_CCSEN;
    5cb8:	ldr	r0, [r7, #0]
    SDHC_IRQSTAT=SDHC_IRQSTAT;
    // CMD13 to check uSD status
    xfertyp = (SDHC_XFERTYP_CMDINX(SDHC_CMD13) | SDHC_XFERTYP_RSPTYP(SDHC_XFERTYP_RSPTYP_48));
    //
    SDHC_CMDARG = sdCardDesc.address;
    5cba:	ldr.w	r3, [lr, #4]
  while(SDHC_PRSSTAT & SDHC_PRSSTAT_DLA);

  //check for uSD status
  do
  { while ((SDHC_PRSSTAT & SDHC_PRSSTAT_CIHB) || (SDHC_PRSSTAT & SDHC_PRSSTAT_CDIHB)) ;
    SDHC_IRQSTATEN |= SDHC_IRQSTATEN_CCSEN;
    5cbe:	orr.w	r0, r0, #1
    5cc2:	str	r0, [r7, #0]
    SDHC_IRQSTAT=SDHC_IRQSTAT;
    5cc4:	ldr	r0, [r2, #0]
    5cc6:	str	r0, [r2, #0]
    // CMD13 to check uSD status
    xfertyp = (SDHC_XFERTYP_CMDINX(SDHC_CMD13) | SDHC_XFERTYP_RSPTYP(SDHC_XFERTYP_RSPTYP_48));
    //
    SDHC_CMDARG = sdCardDesc.address;
    SDHC_XFERTYP = xfertyp;
    5cc8:	ldr	r0, [pc, #84]	; (5d20 <SDHC_CardWriteBlock(void const*, unsigned long)+0x120>)
    SDHC_IRQSTATEN |= SDHC_IRQSTATEN_CCSEN;
    SDHC_IRQSTAT=SDHC_IRQSTAT;
    // CMD13 to check uSD status
    xfertyp = (SDHC_XFERTYP_CMDINX(SDHC_CMD13) | SDHC_XFERTYP_RSPTYP(SDHC_XFERTYP_RSPTYP_48));
    //
    SDHC_CMDARG = sdCardDesc.address;
    5cca:	str.w	r3, [r8]
    SDHC_XFERTYP = xfertyp;
    5cce:	str.w	r0, [ip]
    while(!(SDHC_IRQSTAT & SDHC_IRQSTAT_CC)); SDHC_IRQSTAT &= SDHC_IRQSTAT_CC;
    5cd2:	ldr	r3, [r2, #0]
    5cd4:	lsls	r3, r3, #31
    5cd6:	bpl.n	5cd2 <SDHC_CardWriteBlock(void const*, unsigned long)+0xd2>
    5cd8:	ldr	r3, [r4, #0]
    5cda:	and.w	r3, r3, #1
    5cde:	str	r3, [r4, #0]
  } while(SDHC_CMDRSP0 & 0x200); // while data?
    5ce0:	ldr	r0, [r6, #0]
  SDHC_IRQSTAT &= (SDHC_IRQSTAT_CC | SDHC_IRQSTAT_TC);

  while(SDHC_PRSSTAT & SDHC_PRSSTAT_DLA);

  //check for uSD status
  do
    5ce2:	ands.w	r0, r0, #512	; 0x200
    5ce6:	bne.n	5cac <SDHC_CardWriteBlock(void const*, unsigned long)+0xac>
    5ce8:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
{
  int result=0;
  const uint32_t *pData = (const uint32_t *)buff;
  /* check alignment for DMA */
  if (reinterpret_cast<uintptr_t>(static_cast<const void*>(buff)) % 4) {
    return -1;
    5cec:	mov.w	r0, #4294967295
    while(!(SDHC_IRQSTAT & SDHC_IRQSTAT_CC)); SDHC_IRQSTAT &= SDHC_IRQSTAT_CC;
  } while(SDHC_CMDRSP0 & 0x200); // while data?
//  } while(!(SDHC_CMDRSP0 & CARD_STATUS_READY_FOR_DATA ));

  return result;
}
    5cf0:	bx	lr
    5cf2:	nop
    5cf4:	.word	0x400b1024
    5cf8:	.word	0x400b1030
    5cfc:	.word	0x400b1034
    5d00:	.word	0x400b102c
    5d04:	.word	0x400b1038
    5d08:	.word	0x200129e0
    5d0c:	.word	0x400b1000
    5d10:	.word	0x400b1004
    5d14:	.word	0x400b100c
    5d18:	.word	0x18220001
    5d1c:	.word	0x400b1010
    5d20:	.word	0x0d020000
    5d24:	.word	0x200129e4
    5d28:	.word	0x400b1008

00005d2c <SdFile::sync() [clone .part.23] [clone .constprop.37]>:
 * \return The value one, true, is returned for success and
 * the value zero, false, is returned for failure.
 * Reasons for failure include a call to sync() before a file has been
 * opened or an I/O error.
 */
uint8_t SdFile::sync(void) {
    5d2c:	push	{r3, r4, r5, lr}
  // only allow open files and directories
  if (!isOpen()) return false;

  if (flags_ & F_FILE_DIR_DIRTY) {
    5d2e:	ldrsb.w	r3, [r0, #5]
    5d32:	cmp	r3, #0
    5d34:	blt.n	5d3e <SdFile::sync() [clone .part.23] [clone .constprop.37]+0x12>
    }
    // clear directory dirty
    flags_ &= ~F_FILE_DIR_DIRTY;
  }
  return SdVolume::cacheFlush();
}
    5d36:	ldmia.w	sp!, {r3, r4, r5, lr}
      d->lastAccessDate = d->lastWriteDate;
    }
    // clear directory dirty
    flags_ &= ~F_FILE_DIR_DIRTY;
  }
  return SdVolume::cacheFlush();
    5d3a:	b.w	582c <SdVolume::cacheFlush()>
    5d3e:	mov	r4, r0
}
//------------------------------------------------------------------------------
// cache a file's directory entry
// return pointer to cached entry or null for failure
dir_t* SdFile::cacheDirEntry(uint8_t action) {
  if (!SdVolume::cacheRawBlock(dirBlock_, action)) return NULL;
    5d40:	movs	r1, #1
    5d42:	ldr	r0, [r0, #16]
    5d44:	bl	58ac <SdVolume::cacheRawBlock(unsigned long, unsigned char)>
    5d48:	cbz	r0, 5d8a <SdFile::sync() [clone .part.23] [clone .constprop.37]+0x5e>
  return SdVolume::cacheBuffer_.dir + dirIndex_;
    5d4a:	ldrb	r5, [r4, #20]
    5d4c:	ldr	r3, [pc, #64]	; (5d90 <SdFile::sync() [clone .part.23] [clone .constprop.37]+0x64>)
  // only allow open files and directories
  if (!isOpen()) return false;

  if (flags_ & F_FILE_DIR_DIRTY) {
    dir_t* d = cacheDirEntry(SdVolume::CACHE_FOR_WRITE);
    if (!d) return false;
    5d4e:	adds.w	r5, r3, r5, lsl #5
    5d52:	beq.n	5d8a <SdFile::sync() [clone .part.23] [clone .constprop.37]+0x5e>

    // do not set filesize for dir files
    if (!isDir()) d->fileSize = fileSize_;
    5d54:	ldrb	r3, [r4, #6]
    // update first cluster fields
    d->firstClusterLow = firstCluster_ & 0XFFFF;
    d->firstClusterHigh = firstCluster_ >> 16;

    // set modify time if user supplied a callback date/time function
    if (dateTime_) {
    5d56:	ldr	r2, [pc, #60]	; (5d94 <SdFile::sync() [clone .part.23] [clone .constprop.37]+0x68>)
  if (flags_ & F_FILE_DIR_DIRTY) {
    dir_t* d = cacheDirEntry(SdVolume::CACHE_FOR_WRITE);
    if (!d) return false;

    // do not set filesize for dir files
    if (!isDir()) d->fileSize = fileSize_;
    5d58:	cmp	r3, #1
    5d5a:	itt	ls
    5d5c:	ldrls	r3, [r4, #24]
    5d5e:	strls	r3, [r5, #28]

    // update first cluster fields
    d->firstClusterLow = firstCluster_ & 0XFFFF;
    5d60:	ldr	r3, [r4, #28]
    d->firstClusterHigh = firstCluster_ >> 16;

    // set modify time if user supplied a callback date/time function
    if (dateTime_) {
    5d62:	ldr	r2, [r2, #0]

    // do not set filesize for dir files
    if (!isDir()) d->fileSize = fileSize_;

    // update first cluster fields
    d->firstClusterLow = firstCluster_ & 0XFFFF;
    5d64:	strh	r3, [r5, #26]
    d->firstClusterHigh = firstCluster_ >> 16;
    5d66:	lsrs	r3, r3, #16
    5d68:	strh	r3, [r5, #20]

    // set modify time if user supplied a callback date/time function
    if (dateTime_) {
    5d6a:	cbz	r2, 5d7a <SdFile::sync() [clone .part.23] [clone .constprop.37]+0x4e>
      dateTime_(&d->lastWriteDate, &d->lastWriteTime);
    5d6c:	add.w	r1, r5, #22
    5d70:	add.w	r0, r5, #24
    5d74:	blx	r2
      d->lastAccessDate = d->lastWriteDate;
    5d76:	ldrh	r3, [r5, #24]
    5d78:	strh	r3, [r5, #18]
    }
    // clear directory dirty
    flags_ &= ~F_FILE_DIR_DIRTY;
    5d7a:	ldrb	r3, [r4, #5]
    5d7c:	and.w	r3, r3, #127	; 0x7f
    5d80:	strb	r3, [r4, #5]
  }
  return SdVolume::cacheFlush();
}
    5d82:	ldmia.w	sp!, {r3, r4, r5, lr}
      d->lastAccessDate = d->lastWriteDate;
    }
    // clear directory dirty
    flags_ &= ~F_FILE_DIR_DIRTY;
  }
  return SdVolume::cacheFlush();
    5d86:	b.w	582c <SdVolume::cacheFlush()>
}
    5d8a:	movs	r0, #0
    5d8c:	pop	{r3, r4, r5, pc}
    5d8e:	nop
    5d90:	.word	0x200127dc
    5d94:	.word	0x200129f4

00005d98 <SdFile::addCluster()>:
// suppress cpplint warnings with NOLINT comment
void (*SdFile::oldDateTime_)(uint16_t& date, uint16_t& time) = NULL;  // NOLINT
#endif  // ALLOW_DEPRECATED_FUNCTIONS
//------------------------------------------------------------------------------
// add a cluster to a file
uint8_t SdFile::addCluster() {
    5d98:	push	{r4, lr}
  if (!vol_->allocContiguous(1, &curCluster_)) return false;
    5d9a:	add.w	r2, r0, #8
// suppress cpplint warnings with NOLINT comment
void (*SdFile::oldDateTime_)(uint16_t& date, uint16_t& time) = NULL;  // NOLINT
#endif  // ALLOW_DEPRECATED_FUNCTIONS
//------------------------------------------------------------------------------
// add a cluster to a file
uint8_t SdFile::addCluster() {
    5d9e:	mov	r4, r0
  if (!vol_->allocContiguous(1, &curCluster_)) return false;
    5da0:	movs	r1, #1
    5da2:	ldr	r0, [r0, #32]
    5da4:	bl	59fc <SdVolume::allocContiguous(unsigned long, unsigned long*)>
    5da8:	cbz	r0, 5dc0 <SdFile::addCluster()+0x28>

  // if first cluster of file link to directory entry
  if (firstCluster_ == 0) {
    5daa:	ldr	r3, [r4, #28]
    5dac:	cbnz	r3, 5dbe <SdFile::addCluster()+0x26>
    firstCluster_ = curCluster_;
    flags_ |= F_FILE_DIR_DIRTY;
    5dae:	ldrb	r3, [r4, #5]
uint8_t SdFile::addCluster() {
  if (!vol_->allocContiguous(1, &curCluster_)) return false;

  // if first cluster of file link to directory entry
  if (firstCluster_ == 0) {
    firstCluster_ = curCluster_;
    5db0:	ldr	r2, [r4, #8]
    5db2:	str	r2, [r4, #28]
    flags_ |= F_FILE_DIR_DIRTY;
    5db4:	orn	r3, r3, #127	; 0x7f
    5db8:	strb	r3, [r4, #5]
    5dba:	movs	r0, #1
    5dbc:	pop	{r4, pc}
  }
  return true;
    5dbe:	movs	r0, #1
}
    5dc0:	pop	{r4, pc}
    5dc2:	nop

00005dc4 <SdFile::seekSet(unsigned long)>:
 * \param[in] pos The new position in bytes from the beginning of the file.
 *
 * \return The value one, true, is returned for success and
 * the value zero, false, is returned for failure.
 */
uint8_t SdFile::seekSet(uint32_t pos) {
    5dc4:	push	{r3, r4, r5, r6, r7, lr}
    5dc6:	ldrb	r3, [r0, #6]
  // error if file not open or seek past end of file
  if (!isOpen() || pos > fileSize_) return false;
    5dc8:	cbz	r3, 5dd0 <SdFile::seekSet(unsigned long)+0xc>
    5dca:	ldr	r2, [r0, #24]
    5dcc:	cmp	r2, r1
    5dce:	bcs.n	5dd4 <SdFile::seekSet(unsigned long)+0x10>
    5dd0:	movs	r0, #0
    5dd2:	pop	{r3, r4, r5, r6, r7, pc}

  if (type_ == FAT_FILE_TYPE_ROOT16) {
    5dd4:	cmp	r3, #2
    5dd6:	mov	r7, r1
    5dd8:	mov	r5, r0
    5dda:	beq.n	5e12 <SdFile::seekSet(unsigned long)+0x4e>
    curPosition_ = pos;
    return true;
  }
  if (pos == 0) {
    5ddc:	cbz	r7, 5e20 <SdFile::seekSet(unsigned long)+0x5c>
    curCluster_ = 0;
    curPosition_ = 0;
    return true;
  }
  // calculate cluster index for cur and new position
  uint32_t nCur = (curPosition_ - 1) >> (vol_->clusterSizeShift_ + 9);
    5dde:	ldr	r3, [r5, #32]
    5de0:	ldr	r1, [r5, #12]
    5de2:	ldrb	r4, [r3, #16]
    5de4:	subs	r2, r1, #1
    5de6:	add.w	r3, r4, #9
  uint32_t nNew = (pos - 1) >> (vol_->clusterSizeShift_ + 9);
    5dea:	subs	r4, r7, #1
    curCluster_ = 0;
    curPosition_ = 0;
    return true;
  }
  // calculate cluster index for cur and new position
  uint32_t nCur = (curPosition_ - 1) >> (vol_->clusterSizeShift_ + 9);
    5dec:	lsrs	r2, r3
  uint32_t nNew = (pos - 1) >> (vol_->clusterSizeShift_ + 9);
    5dee:	lsrs	r4, r3

  if (nNew < nCur || curPosition_ == 0) {
    5df0:	cmp	r2, r4
    5df2:	bls.n	5e18 <SdFile::seekSet(unsigned long)+0x54>
    // must follow chain from first cluster
    curCluster_ = firstCluster_;
    5df4:	ldr	r3, [r5, #28]
    5df6:	str	r3, [r5, #8]
  } else {
    // advance from curPosition
    nNew -= nCur;
  }
  while (nNew--) {
    if (!vol_->fatGet(curCluster_, &curCluster_)) return false;
    5df8:	add.w	r6, r5, #8
    5dfc:	b.n	5e0c <SdFile::seekSet(unsigned long)+0x48>
    5dfe:	ldr	r1, [r5, #8]
    5e00:	ldr	r0, [r5, #32]
    5e02:	bl	598c <SdVolume::fatGet(unsigned long, unsigned long*) const>
    5e06:	subs	r4, #1
    5e08:	cmp	r0, #0
    5e0a:	beq.n	5dd0 <SdFile::seekSet(unsigned long)+0xc>
    5e0c:	mov	r2, r6
    curCluster_ = firstCluster_;
  } else {
    // advance from curPosition
    nNew -= nCur;
  }
  while (nNew--) {
    5e0e:	cmp	r4, #0
    5e10:	bne.n	5dfe <SdFile::seekSet(unsigned long)+0x3a>
    return true;
  }
  if (pos == 0) {
    // set position to start of file
    curCluster_ = 0;
    curPosition_ = 0;
    5e12:	str	r7, [r5, #12]
    return true;
    5e14:	movs	r0, #1
    5e16:	pop	{r3, r4, r5, r6, r7, pc}
  }
  // calculate cluster index for cur and new position
  uint32_t nCur = (curPosition_ - 1) >> (vol_->clusterSizeShift_ + 9);
  uint32_t nNew = (pos - 1) >> (vol_->clusterSizeShift_ + 9);

  if (nNew < nCur || curPosition_ == 0) {
    5e18:	cmp	r1, #0
    5e1a:	beq.n	5df4 <SdFile::seekSet(unsigned long)+0x30>
    // must follow chain from first cluster
    curCluster_ = firstCluster_;
  } else {
    // advance from curPosition
    nNew -= nCur;
    5e1c:	subs	r4, r4, r2
    5e1e:	b.n	5df8 <SdFile::seekSet(unsigned long)+0x34>
    curPosition_ = pos;
    return true;
  }
  if (pos == 0) {
    // set position to start of file
    curCluster_ = 0;
    5e20:	str	r7, [r5, #8]
    curPosition_ = 0;
    5e22:	str	r7, [r5, #12]
    return true;
    5e24:	movs	r0, #1
    5e26:	pop	{r3, r4, r5, r6, r7, pc}

00005e28 <SdFile::write(void const*, unsigned int)>:
 * \a nbyte.  If an error occurs, write() returns -1.  Possible errors
 * include write() is called before a file has been opened, write is called
 * for a read-only file, device is full, a corrupt file system or an I/O error.
 *
 */
size_t SdFile::write(const void* buf, size_t nbyte) {
    5e28:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    5e2c:	mov	fp, r1

  // number of bytes left to write  -  must be before goto statements
  size_t nToWrite = nbyte;

  // error if not a normal file or is read-only
  if (!isFile() || !(flags_ & O_WRITE)) goto writeErrorReturn;
    5e2e:	ldrb	r1, [r0, #6]
 * \a nbyte.  If an error occurs, write() returns -1.  Possible errors
 * include write() is called before a file has been opened, write is called
 * for a read-only file, device is full, a corrupt file system or an I/O error.
 *
 */
size_t SdFile::write(const void* buf, size_t nbyte) {
    5e30:	sub	sp, #20

  // number of bytes left to write  -  must be before goto statements
  size_t nToWrite = nbyte;

  // error if not a normal file or is read-only
  if (!isFile() || !(flags_ & O_WRITE)) goto writeErrorReturn;
    5e32:	cmp	r1, #1
 * \a nbyte.  If an error occurs, write() returns -1.  Possible errors
 * include write() is called before a file has been opened, write is called
 * for a read-only file, device is full, a corrupt file system or an I/O error.
 *
 */
size_t SdFile::write(const void* buf, size_t nbyte) {
    5e34:	mov	r7, r0
    5e36:	str	r2, [sp, #4]

  // number of bytes left to write  -  must be before goto statements
  size_t nToWrite = nbyte;

  // error if not a normal file or is read-only
  if (!isFile() || !(flags_ & O_WRITE)) goto writeErrorReturn;
    5e38:	beq.n	5e46 <SdFile::write(void const*, unsigned int)+0x1e>
	int getWriteError() { return write_error; }
	void clearWriteError() { setWriteError(0); }
	int printf(const char *format, ...);
	int printf(const __FlashStringHelper *format, ...);
  protected:
	void setWriteError(int err = 1) { write_error = err; }
    5e3a:	movs	r3, #1
    5e3c:	strb	r3, [r7, #4]

 writeErrorReturn:
  // return for write error
  //writeError = true;
  setWriteError();
  return 0;
    5e3e:	movs	r0, #0
}
    5e40:	add	sp, #20
    5e42:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

  // number of bytes left to write  -  must be before goto statements
  size_t nToWrite = nbyte;

  // error if not a normal file or is read-only
  if (!isFile() || !(flags_ & O_WRITE)) goto writeErrorReturn;
    5e46:	ldrb	r2, [r0, #5]
    5e48:	lsls	r1, r2, #30
    5e4a:	bpl.n	5e3a <SdFile::write(void const*, unsigned int)+0x12>

  // seek to end of file if append flag
  if ((flags_ & O_APPEND) && curPosition_ != fileSize_) {
    5e4c:	lsls	r3, r2, #29
    5e4e:	bpl.n	5e62 <SdFile::write(void const*, unsigned int)+0x3a>
    5e50:	ldr	r4, [r7, #12]
    5e52:	ldr	r1, [r7, #24]
    5e54:	cmp	r4, r1
    5e56:	beq.w	5fc2 <SdFile::write(void const*, unsigned int)+0x19a>
  }
  /**
   *  Set the files current position to end of file.  Useful to position
   *  a file for append. See seekSet().
   */
  uint8_t seekEnd(void) {return seekSet(fileSize_);}
    5e5a:	bl	5dc4 <SdFile::seekSet(unsigned long)>
    if (!seekEnd()) goto writeErrorReturn;
    5e5e:	cmp	r0, #0
    5e60:	beq.n	5e3a <SdFile::write(void const*, unsigned int)+0x12>
  }

  while (nToWrite > 0) {
    5e62:	ldr	r3, [sp, #4]
    5e64:	ldr	r4, [r7, #12]
    5e66:	cmp	r3, #0
    5e68:	beq.n	5f00 <SdFile::write(void const*, unsigned int)+0xd8>
        // rewrite part of block
        if (!SdVolume::cacheRawBlock(block, SdVolume::CACHE_FOR_WRITE)) {
          goto writeErrorReturn;
        }
      }
      uint8_t* dst = SdVolume::cacheBuffer_.data + blockOffset;
    5e6a:	ldr.w	r9, [pc, #420]	; 6010 <SdFile::write(void const*, unsigned int)+0x1e8>
      src += 512;
    } else {
      if (blockOffset == 0 && curPosition_ >= fileSize_) {
        // start of new block don't need to read into cache
        if (!SdVolume::cacheFlush()) goto writeErrorReturn;
        SdVolume::cacheBlockNumber_ = block;
    5e6e:	ldr.w	sl, [pc, #420]	; 6014 <SdFile::write(void const*, unsigned int)+0x1ec>
 * \a nbyte.  If an error occurs, write() returns -1.  Possible errors
 * include write() is called before a file has been opened, write is called
 * for a read-only file, device is full, a corrupt file system or an I/O error.
 *
 */
size_t SdFile::write(const void* buf, size_t nbyte) {
    5e72:	ldr.w	r8, [sp, #4]
  if ((flags_ & O_APPEND) && curPosition_ != fileSize_) {
    if (!seekEnd()) goto writeErrorReturn;
  }

  while (nToWrite > 0) {
    uint8_t blockOfCluster = vol_->blockOfCluster(curPosition_);
    5e76:	ldr	r0, [r7, #32]
  uint16_t rootDirEntryCount_;  // number of entries in FAT16 root dir
  uint32_t rootDirStart_;       // root start block for FAT16, cluster for FAT32
  //----------------------------------------------------------------------------
  uint8_t allocContiguous(uint32_t count, uint32_t* curCluster);
  uint8_t blockOfCluster(uint32_t position) const {
          return (position >> 9) & (blocksPerCluster_ - 1);}
    5e78:	ldrb	r6, [r0, #4]
    5e7a:	subs	r6, #1
    5e7c:	and.w	r6, r6, r4, lsr #9
    uint16_t blockOffset = curPosition_ & 0X1FF;
    if (blockOfCluster == 0 && blockOffset == 0) {
    5e80:	ands.w	r6, r6, #255	; 0xff
    if (!seekEnd()) goto writeErrorReturn;
  }

  while (nToWrite > 0) {
    uint8_t blockOfCluster = vol_->blockOfCluster(curPosition_);
    uint16_t blockOffset = curPosition_ & 0X1FF;
    5e84:	ubfx	r4, r4, #0, #9
    if (blockOfCluster == 0 && blockOffset == 0) {
    5e88:	bne.n	5f12 <SdFile::write(void const*, unsigned int)+0xea>
    5e8a:	cmp	r4, #0
    5e8c:	bne.n	5f12 <SdFile::write(void const*, unsigned int)+0xea>
      // start of new cluster
      if (curCluster_ == 0) {
    5e8e:	ldr	r1, [r7, #8]
    5e90:	cmp	r1, #0
    5e92:	bne.n	5f7c <SdFile::write(void const*, unsigned int)+0x154>
        if (firstCluster_ == 0) {
    5e94:	ldr	r2, [r7, #28]
    5e96:	cmp	r2, #0
    5e98:	beq.w	5fa2 <SdFile::write(void const*, unsigned int)+0x17a>
        if (!vol_->fatGet(curCluster_, &next)) return false;
        if (vol_->isEOC(next)) {
          // add cluster if at end of chain
          if (!addCluster()) goto writeErrorReturn;
        } else {
          curCluster_ = next;
    5e9c:	str	r2, [r7, #8]
        }
      }
    }
    // max space in block
    uint16_t n = 512 - blockOffset;
    5e9e:	rsb	r5, r4, #512	; 0x200
    5ea2:	uxth	r5, r5

    // lesser of space and amount to write
    if (n > nToWrite) n = nToWrite;
    5ea4:	cmp	r5, r8
    5ea6:	bls.n	5f1e <SdFile::write(void const*, unsigned int)+0xf6>

    // block for data write
    uint32_t block = vol_->clusterStartBlock(curCluster_) + blockOfCluster;
    5ea8:	ldrb	r5, [r0, #16]
    5eaa:	ldr	r1, [r0, #20]
    5eac:	subs	r2, #2
    5eae:	lsls	r2, r5
    5eb0:	add	r6, r1
    5eb2:	add	r6, r2
    }
    // max space in block
    uint16_t n = 512 - blockOffset;

    // lesser of space and amount to write
    if (n > nToWrite) n = nToWrite;
    5eb4:	uxth.w	r5, r8
        SdVolume::cacheBlockNumber_ = 0XFFFFFFFF;
      }
      if (!vol_->writeBlock(block, src)) goto writeErrorReturn;
      src += 512;
    } else {
      if (blockOffset == 0 && curPosition_ >= fileSize_) {
    5eb8:	cbnz	r4, 5ec2 <SdFile::write(void const*, unsigned int)+0x9a>
    5eba:	ldr	r0, [r7, #12]
    5ebc:	ldr	r2, [r7, #24]
    5ebe:	cmp	r0, r2
    5ec0:	bcs.n	5f62 <SdFile::write(void const*, unsigned int)+0x13a>
        if (!SdVolume::cacheFlush()) goto writeErrorReturn;
        SdVolume::cacheBlockNumber_ = block;
        SdVolume::cacheSetDirty();
      } else {
        // rewrite part of block
        if (!SdVolume::cacheRawBlock(block, SdVolume::CACHE_FOR_WRITE)) {
    5ec2:	mov	r0, r6
    5ec4:	movs	r1, #1
    5ec6:	bl	58ac <SdVolume::cacheRawBlock(unsigned long, unsigned char)>
    5eca:	cmp	r0, #0
    5ecc:	beq.n	5e3a <SdFile::write(void const*, unsigned int)+0x12>
          goto writeErrorReturn;
        }
      }
      uint8_t* dst = SdVolume::cacheBuffer_.data + blockOffset;
    5ece:	add	r4, r9
      uint8_t* end = dst + n;
    5ed0:	add.w	lr, r4, r5
      while (dst != end) *dst++ = *src++;
    5ed4:	cmp	r4, lr
    5ed6:	beq.n	5ef4 <SdFile::write(void const*, unsigned int)+0xcc>
    5ed8:	add.w	r1, fp, #4294967295
    5edc:	subs	r2, r4, #1
    5ede:	add.w	r6, lr, #4294967295
    5ee2:	ldrb.w	r0, [r1, #1]!
    5ee6:	strb.w	r0, [r2, #1]!
    5eea:	cmp	r6, r2
    5eec:	bne.n	5ee2 <SdFile::write(void const*, unsigned int)+0xba>
    5eee:	rsb	r4, r4, lr
    5ef2:	add	fp, r4
    }
    nToWrite -= n;
    curPosition_ += n;
    5ef4:	ldr	r4, [r7, #12]
  // seek to end of file if append flag
  if ((flags_ & O_APPEND) && curPosition_ != fileSize_) {
    if (!seekEnd()) goto writeErrorReturn;
  }

  while (nToWrite > 0) {
    5ef6:	subs.w	r8, r8, r5
      uint8_t* dst = SdVolume::cacheBuffer_.data + blockOffset;
      uint8_t* end = dst + n;
      while (dst != end) *dst++ = *src++;
    }
    nToWrite -= n;
    curPosition_ += n;
    5efa:	add	r4, r5
    5efc:	str	r4, [r7, #12]
  // seek to end of file if append flag
  if ((flags_ & O_APPEND) && curPosition_ != fileSize_) {
    if (!seekEnd()) goto writeErrorReturn;
  }

  while (nToWrite > 0) {
    5efe:	bne.n	5e76 <SdFile::write(void const*, unsigned int)+0x4e>
      while (dst != end) *dst++ = *src++;
    }
    nToWrite -= n;
    curPosition_ += n;
  }
  if (curPosition_ > fileSize_) {
    5f00:	ldr	r3, [r7, #24]
    5f02:	cmp	r3, r4
    5f04:	bcs.n	5fcc <SdFile::write(void const*, unsigned int)+0x1a4>
    // update fileSize and insure sync will update dir entry
    fileSize_ = curPosition_;
    flags_ |= F_FILE_DIR_DIRTY;
    5f06:	ldrb	r2, [r7, #5]
    nToWrite -= n;
    curPosition_ += n;
  }
  if (curPosition_ > fileSize_) {
    // update fileSize and insure sync will update dir entry
    fileSize_ = curPosition_;
    5f08:	str	r4, [r7, #24]
    flags_ |= F_FILE_DIR_DIRTY;
    5f0a:	orr.w	r2, r2, #128	; 0x80
    5f0e:	strb	r2, [r7, #5]
    5f10:	b.n	5fde <SdFile::write(void const*, unsigned int)+0x1b6>
          curCluster_ = next;
        }
      }
    }
    // max space in block
    uint16_t n = 512 - blockOffset;
    5f12:	rsb	r5, r4, #512	; 0x200
    5f16:	uxth	r5, r5

    // lesser of space and amount to write
    if (n > nToWrite) n = nToWrite;
    5f18:	cmp	r5, r8
    5f1a:	ldr	r2, [r7, #8]
    5f1c:	bhi.n	5ea8 <SdFile::write(void const*, unsigned int)+0x80>

    // block for data write
    uint32_t block = vol_->clusterStartBlock(curCluster_) + blockOfCluster;
    5f1e:	ldrb	r1, [r0, #16]
    5f20:	ldr	r0, [r0, #20]
    5f22:	subs	r2, #2
    5f24:	lsls	r2, r1
    5f26:	add	r6, r0
    if (n == 512) {
    5f28:	cmp.w	r5, #512	; 0x200

    // lesser of space and amount to write
    if (n > nToWrite) n = nToWrite;

    // block for data write
    uint32_t block = vol_->clusterStartBlock(curCluster_) + blockOfCluster;
    5f2c:	add	r6, r2
    if (n == 512) {
    5f2e:	bne.n	5eb8 <SdFile::write(void const*, unsigned int)+0x90>
      // full block - don't need to use cache
      // invalidate cache if block is in cache
      if (SdVolume::cacheBlockNumber_ == block) {
    5f30:	ldr.w	r2, [sl]
    5f34:	cmp	r6, r2
        SdVolume::cacheBlockNumber_ = 0XFFFFFFFF;
    5f36:	itt	eq
    5f38:	moveq.w	r2, #4294967295
    5f3c:	streq.w	r2, [sl]
  }
  uint8_t readBlock(uint32_t block, uint8_t* dst) {
    return sdCard_->readBlock(block, dst);
  }
  uint8_t writeBlock(uint32_t block, const uint8_t* dst) {
    return sdCard_->writeBlock(block, dst);
    5f40:	ldr	r2, [pc, #188]	; (6000 <SdFile::write(void const*, unsigned int)+0x1d8>)
    5f42:	ldr	r0, [r2, #0]
    return SD_readBlock(block, dst);
  }
  /** Return the card type: SD V1, SD V2 or SDHC */
  uint8_t writeBlock(uint32_t block, const uint8_t* src) {
    #if defined(__MK64FX512__) || defined(__MK66FX1M0__) || defined(__IMXRT1052__)
    if (chipSelectPin_ == BUILTIN_SDCARD) {
    5f44:	ldrb	r2, [r0, #0]
    5f46:	cmp	r2, #254	; 0xfe
      return (SDHC_CardWriteBlock(src, block) == 0) ? true : false;
    5f48:	mov	r1, r6
    return SD_readBlock(block, dst);
  }
  /** Return the card type: SD V1, SD V2 or SDHC */
  uint8_t writeBlock(uint32_t block, const uint8_t* src) {
    #if defined(__MK64FX512__) || defined(__MK66FX1M0__) || defined(__IMXRT1052__)
    if (chipSelectPin_ == BUILTIN_SDCARD) {
    5f4a:	beq.n	5fb4 <SdFile::write(void const*, unsigned int)+0x18c>
      return (SDHC_CardWriteBlock(src, block) == 0) ? true : false;
    }
    #endif
    return SD_writeBlock(block, src);
    5f4c:	mov	r2, fp
    5f4e:	bl	6444 <Sd2Card::SD_writeBlock(unsigned long, unsigned char const*)>
      }
      if (!vol_->writeBlock(block, src)) goto writeErrorReturn;
    5f52:	cmp	r0, #0
    5f54:	beq.w	5e3a <SdFile::write(void const*, unsigned int)+0x12>
      src += 512;
    5f58:	add.w	fp, fp, #512	; 0x200
    5f5c:	mov.w	r5, #512	; 0x200
    5f60:	b.n	5ef4 <SdFile::write(void const*, unsigned int)+0xcc>
    } else {
      if (blockOffset == 0 && curPosition_ >= fileSize_) {
        // start of new block don't need to read into cache
        if (!SdVolume::cacheFlush()) goto writeErrorReturn;
    5f62:	bl	582c <SdVolume::cacheFlush()>
    5f66:	cmp	r0, #0
    5f68:	beq.w	5e3a <SdFile::write(void const*, unsigned int)+0x12>
           return dataStartBlock_ + ((cluster - 2) << clusterSizeShift_);}
  uint32_t blockNumber(uint32_t cluster, uint32_t position) const {
           return clusterStartBlock(cluster) + blockOfCluster(position);}
  static uint8_t cacheFlush(void);
  static uint8_t cacheRawBlock(uint32_t blockNumber, uint8_t action);
  static void cacheSetDirty(void) {cacheDirty_ |= CACHE_FOR_WRITE;}
    5f6c:	ldr	r1, [pc, #148]	; (6004 <SdFile::write(void const*, unsigned int)+0x1dc>)
        SdVolume::cacheBlockNumber_ = block;
    5f6e:	str.w	r6, [sl]
    5f72:	ldrb	r2, [r1, #0]
    5f74:	orr.w	r2, r2, #1
    5f78:	strb	r2, [r1, #0]
    5f7a:	b.n	5ece <SdFile::write(void const*, unsigned int)+0xa6>
        } else {
          curCluster_ = firstCluster_;
        }
      } else {
        uint32_t next;
        if (!vol_->fatGet(curCluster_, &next)) return false;
    5f7c:	add	r2, sp, #12
    5f7e:	bl	598c <SdVolume::fatGet(unsigned long, unsigned long*) const>
    5f82:	cmp	r0, #0
    5f84:	beq.w	5e40 <SdFile::write(void const*, unsigned int)+0x18>
        if (vol_->isEOC(next)) {
    5f88:	ldr	r0, [r7, #32]
  uint8_t fatPutEOC(uint32_t cluster) {
    return fatPut(cluster, 0x0FFFFFFF);
  }
  uint8_t freeChain(uint32_t cluster);
  uint8_t isEOC(uint32_t cluster) const {
    return  cluster >= (fatType_ == 16 ? FAT16EOC_MIN : FAT32EOC_MIN);
    5f8a:	ldr	r3, [pc, #124]	; (6008 <SdFile::write(void const*, unsigned int)+0x1e0>)
    5f8c:	ldrb.w	r5, [r0, #32]
    5f90:	ldr	r2, [sp, #12]
    5f92:	movw	r1, #65528	; 0xfff8
    5f96:	cmp	r5, #16
    5f98:	it	ne
    5f9a:	movne	r1, r3
    5f9c:	cmp	r2, r1
    5f9e:	bcc.w	5e9c <SdFile::write(void const*, unsigned int)+0x74>
          // add cluster if at end of chain
          if (!addCluster()) goto writeErrorReturn;
    5fa2:	mov	r0, r7
    5fa4:	bl	5d98 <SdFile::addCluster()>
    5fa8:	cmp	r0, #0
    5faa:	beq.w	5e3a <SdFile::write(void const*, unsigned int)+0x12>
    5fae:	ldr	r0, [r7, #32]
    5fb0:	ldr	r2, [r7, #8]
    5fb2:	b.n	5e9e <SdFile::write(void const*, unsigned int)+0x76>
  }
  /** Return the card type: SD V1, SD V2 or SDHC */
  uint8_t writeBlock(uint32_t block, const uint8_t* src) {
    #if defined(__MK64FX512__) || defined(__MK66FX1M0__) || defined(__IMXRT1052__)
    if (chipSelectPin_ == BUILTIN_SDCARD) {
      return (SDHC_CardWriteBlock(src, block) == 0) ? true : false;
    5fb4:	mov	r0, fp
    5fb6:	bl	5c00 <SDHC_CardWriteBlock(void const*, unsigned long)>
    5fba:	clz	r0, r0
    5fbe:	lsrs	r0, r0, #5
    5fc0:	b.n	5f52 <SdFile::write(void const*, unsigned int)+0x12a>
  // seek to end of file if append flag
  if ((flags_ & O_APPEND) && curPosition_ != fileSize_) {
    if (!seekEnd()) goto writeErrorReturn;
  }

  while (nToWrite > 0) {
    5fc2:	ldr	r3, [sp, #4]
    5fc4:	cmp	r3, #0
    5fc6:	bne.w	5e6a <SdFile::write(void const*, unsigned int)+0x42>
    5fca:	b.n	5fde <SdFile::write(void const*, unsigned int)+0x1b6>
  }
  if (curPosition_ > fileSize_) {
    // update fileSize and insure sync will update dir entry
    fileSize_ = curPosition_;
    flags_ |= F_FILE_DIR_DIRTY;
  } else if (dateTime_ && nbyte) {
    5fcc:	ldr	r3, [pc, #60]	; (600c <SdFile::write(void const*, unsigned int)+0x1e4>)
    5fce:	ldrb	r2, [r7, #5]
    5fd0:	ldr	r3, [r3, #0]
    5fd2:	cbz	r3, 5fde <SdFile::write(void const*, unsigned int)+0x1b6>
    5fd4:	ldr	r3, [sp, #4]
    5fd6:	cbz	r3, 5fde <SdFile::write(void const*, unsigned int)+0x1b6>
    // insure sync will update modified date and time
    flags_ |= F_FILE_DIR_DIRTY;
    5fd8:	orr.w	r2, r2, #128	; 0x80
    5fdc:	strb	r2, [r7, #5]
  }

  if (flags_ & O_SYNC) {
    5fde:	lsls	r2, r2, #28
    5fe0:	bpl.n	5ff6 <SdFile::write(void const*, unsigned int)+0x1ce>
 * Reasons for failure include a call to sync() before a file has been
 * opened or an I/O error.
 */
uint8_t SdFile::sync(void) {
  // only allow open files and directories
  if (!isOpen()) return false;
    5fe2:	ldrb	r3, [r7, #6]
    5fe4:	cmp	r3, #0
    5fe6:	beq.w	5e3a <SdFile::write(void const*, unsigned int)+0x12>
    5fea:	mov	r0, r7
    5fec:	bl	5d2c <SdFile::sync() [clone .part.23] [clone .constprop.37]>
    // insure sync will update modified date and time
    flags_ |= F_FILE_DIR_DIRTY;
  }

  if (flags_ & O_SYNC) {
    if (!sync()) goto writeErrorReturn;
    5ff0:	cmp	r0, #0
    5ff2:	beq.w	5e3a <SdFile::write(void const*, unsigned int)+0x12>
        } else {
          curCluster_ = firstCluster_;
        }
      } else {
        uint32_t next;
        if (!vol_->fatGet(curCluster_, &next)) return false;
    5ff6:	ldr	r0, [sp, #4]
 writeErrorReturn:
  // return for write error
  //writeError = true;
  setWriteError();
  return 0;
}
    5ff8:	add	sp, #20
    5ffa:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    5ffe:	nop
    6000:	.word	0x200127d8
    6004:	.word	0x200129dc
    6008:	.word	0x0ffffff8
    600c:	.word	0x200129f4
    6010:	.word	0x200127dc
    6014:	.word	0x20008038

00006018 <SdFile::write(unsigned char)>:
/**
 * Write a byte to a file. Required by the Arduino Print class.
 *
 * Use SdFile::writeError to check for errors.
 */
size_t SdFile::write(uint8_t b) {
    6018:	push	{lr}
    601a:	sub	sp, #12
    601c:	add	r3, sp, #8
  return write(&b, 1);
    601e:	movs	r2, #1
/**
 * Write a byte to a file. Required by the Arduino Print class.
 *
 * Use SdFile::writeError to check for errors.
 */
size_t SdFile::write(uint8_t b) {
    6020:	strb.w	r1, [r3, #-1]!
  return write(&b, 1);
    6024:	mov	r1, r3
    6026:	bl	5e28 <SdFile::write(void const*, unsigned int)>
}
    602a:	add	sp, #12
    602c:	ldr.w	pc, [sp], #4

00006030 <Sd2Card::chipSelectHigh()>:
}
//------------------------------------------------------------------------------
#ifdef SPI_HAS_TRANSACTION
static uint8_t chip_select_asserted = 0;
#endif
void Sd2Card::chipSelectHigh(void) {
    6030:	push	{r4, lr}
  digitalWrite(chipSelectPin_, HIGH);
    6032:	movs	r1, #1
    6034:	ldrb	r0, [r0, #0]
    6036:	bl	782c <digitalWrite>
#ifdef SPI_HAS_TRANSACTION
  if (chip_select_asserted) {
    603a:	ldr	r2, [pc, #68]	; (6080 <Sd2Card::chipSelectHigh()+0x50>)
    603c:	ldrb	r3, [r2, #0]
    603e:	cbz	r3, 6072 <Sd2Card::chipSelectHigh()+0x42>
			pinMode(SPI_TRANSACTION_MISMATCH_LED, OUTPUT);
			digitalWrite(SPI_TRANSACTION_MISMATCH_LED, HIGH);
		}
		inTransactionFlag = 0;
		#endif
		if (interruptMasksUsed) {
    6040:	ldr	r1, [pc, #64]	; (6084 <Sd2Card::chipSelectHigh()+0x54>)
    6042:	ldrb	r3, [r1, #11]
    chip_select_asserted = 0;
    6044:	movs	r4, #0
    6046:	mov	r0, r3
    6048:	strb	r4, [r2, #0]
    604a:	cbz	r3, 6072 <Sd2Card::chipSelectHigh()+0x42>
			if (interruptMasksUsed & 0x01) {
    604c:	lsls	r2, r3, #31
    604e:	bpl.n	6058 <Sd2Card::chipSelectHigh()+0x28>
				NVIC_ISER0 = interruptSave[0];
    6050:	ldr	r2, [pc, #52]	; (6088 <Sd2Card::chipSelectHigh()+0x58>)
    6052:	ldr	r0, [r1, #28]
    6054:	str	r0, [r2, #0]
    6056:	mov	r0, r3
			}
			#if NVIC_NUM_INTERRUPTS > 32
			if (interruptMasksUsed & 0x02) {
    6058:	lsls	r4, r3, #30
    605a:	bpl.n	6064 <Sd2Card::chipSelectHigh()+0x34>
				NVIC_ISER1 = interruptSave[1];
    605c:	ldr	r3, [pc, #44]	; (608c <Sd2Card::chipSelectHigh()+0x5c>)
    605e:	ldr	r2, [r1, #32]
    6060:	ldrb	r0, [r1, #11]
    6062:	str	r2, [r3, #0]
			}
			#endif
			#if NVIC_NUM_INTERRUPTS > 64 && defined(NVIC_ISER2)
			if (interruptMasksUsed & 0x04) {
    6064:	lsls	r2, r0, #29
    6066:	bmi.n	6074 <Sd2Card::chipSelectHigh()+0x44>
				NVIC_ISER2 = interruptSave[2];
			}
			#endif
			#if NVIC_NUM_INTERRUPTS > 96 && defined(NVIC_ISER3)
			if (interruptMasksUsed & 0x08) {
    6068:	lsls	r3, r0, #28
    606a:	bpl.n	6072 <Sd2Card::chipSelectHigh()+0x42>
				NVIC_ISER3 = interruptSave[3];
    606c:	ldr	r3, [pc, #32]	; (6090 <Sd2Card::chipSelectHigh()+0x60>)
    606e:	ldr	r2, [r1, #40]	; 0x28
    6070:	str	r2, [r3, #0]
    6072:	pop	{r4, pc}
				NVIC_ISER1 = interruptSave[1];
			}
			#endif
			#if NVIC_NUM_INTERRUPTS > 64 && defined(NVIC_ISER2)
			if (interruptMasksUsed & 0x04) {
				NVIC_ISER2 = interruptSave[2];
    6074:	ldr	r3, [pc, #28]	; (6094 <Sd2Card::chipSelectHigh()+0x64>)
    6076:	ldr	r2, [r1, #36]	; 0x24
    6078:	ldrb	r0, [r1, #11]
    607a:	str	r2, [r3, #0]
    607c:	b.n	6068 <Sd2Card::chipSelectHigh()+0x38>
    607e:	nop
    6080:	.word	0x200129fc
    6084:	.word	0x20007ff8
    6088:	.word	0xe000e100
    608c:	.word	0xe000e104
    6090:	.word	0xe000e10c
    6094:	.word	0xe000e108

00006098 <Sd2Card::chipSelectLow()>:
#endif
}
//------------------------------------------------------------------------------
void Sd2Card::chipSelectLow(void) {
#ifdef SPI_HAS_TRANSACTION
  if (!chip_select_asserted) {
    6098:	ldr	r3, [pc, #140]	; (6128 <Sd2Card::chipSelectLow()+0x90>)
    609a:	ldrb	r2, [r3, #0]
    609c:	cbz	r2, 60a6 <Sd2Card::chipSelectLow()+0xe>
    chip_select_asserted = 1;
    SPI.beginTransaction(settings);
  }
#endif
  digitalWrite(chipSelectPin_, LOW);
    609e:	ldrb	r0, [r0, #0]
    60a0:	movs	r1, #0
    60a2:	b.w	782c <digitalWrite>
    SPI.endTransaction();
  }
#endif
}
//------------------------------------------------------------------------------
void Sd2Card::chipSelectLow(void) {
    60a6:	push	{r4, r5, r6}

	// Before using SPI.transfer() or asserting chip select pins,
	// this function is used to gain exclusive access to the SPI bus
	// and configure the correct settings.
	void beginTransaction(SPISettings settings) {
		if (interruptMasksUsed) {
    60a8:	ldr	r2, [pc, #128]	; (612c <Sd2Card::chipSelectLow()+0x94>)
    60aa:	ldr	r1, [pc, #132]	; (6130 <Sd2Card::chipSelectLow()+0x98>)
    60ac:	ldrb	r4, [r2, #11]
    60ae:	ldr	r1, [r1, #0]
#ifdef SPI_HAS_TRANSACTION
  if (!chip_select_asserted) {
    chip_select_asserted = 1;
    60b0:	movs	r5, #1
    60b2:	strb	r5, [r3, #0]
    60b4:	cmp	r4, #0
    60b6:	beq.n	6106 <Sd2Card::chipSelectLow()+0x6e>
			__disable_irq();
    60b8:	cpsid	i
			if (interruptMasksUsed & 0x01) {
    60ba:	ldrb	r4, [r2, #11]
    60bc:	lsls	r6, r4, #31
    60be:	mov	r3, r4
    60c0:	bpl.n	60d0 <Sd2Card::chipSelectLow()+0x38>
				interruptSave[0] = NVIC_ICER0 & interruptMask[0];
    60c2:	ldr	r5, [pc, #112]	; (6134 <Sd2Card::chipSelectLow()+0x9c>)
    60c4:	ldr	r3, [r2, #12]
    60c6:	ldr	r6, [r5, #0]
    60c8:	ands	r3, r6
    60ca:	str	r3, [r2, #28]
				NVIC_ICER0 = interruptSave[0];
    60cc:	str	r3, [r5, #0]
    60ce:	mov	r3, r4
			}
			#if NVIC_NUM_INTERRUPTS > 32
			if (interruptMasksUsed & 0x02) {
    60d0:	lsls	r5, r4, #30
    60d2:	bpl.n	60e2 <Sd2Card::chipSelectLow()+0x4a>
				interruptSave[1] = NVIC_ICER1 & interruptMask[1];
    60d4:	ldr	r5, [pc, #96]	; (6138 <Sd2Card::chipSelectLow()+0xa0>)
    60d6:	ldr	r4, [r2, #16]
    60d8:	ldr	r6, [r5, #0]
    60da:	ldrb	r3, [r2, #11]
    60dc:	ands	r4, r6
    60de:	str	r4, [r2, #32]
				NVIC_ICER1 = interruptSave[1];
    60e0:	str	r4, [r5, #0]
			}
			#endif
			#if NVIC_NUM_INTERRUPTS > 64 && defined(NVIC_ISER2)
			if (interruptMasksUsed & 0x04) {
    60e2:	lsls	r4, r3, #29
    60e4:	bpl.n	60f4 <Sd2Card::chipSelectLow()+0x5c>
				interruptSave[2] = NVIC_ICER2 & interruptMask[2];
    60e6:	ldr	r5, [pc, #84]	; (613c <Sd2Card::chipSelectLow()+0xa4>)
    60e8:	ldr	r4, [r2, #20]
    60ea:	ldr	r6, [r5, #0]
    60ec:	ldrb	r3, [r2, #11]
    60ee:	ands	r4, r6
    60f0:	str	r4, [r2, #36]	; 0x24
				NVIC_ICER2 = interruptSave[2];
    60f2:	str	r4, [r5, #0]
			}
			#endif
			#if NVIC_NUM_INTERRUPTS > 96 && defined(NVIC_ISER3)
			if (interruptMasksUsed & 0x08) {
    60f4:	lsls	r3, r3, #28
    60f6:	bpl.n	6104 <Sd2Card::chipSelectLow()+0x6c>
				interruptSave[3] = NVIC_ICER3 & interruptMask[3];
    60f8:	ldr	r4, [pc, #68]	; (6140 <Sd2Card::chipSelectLow()+0xa8>)
    60fa:	ldr	r3, [r2, #24]
    60fc:	ldr	r5, [r4, #0]
    60fe:	ands	r3, r5
    6100:	str	r3, [r2, #40]	; 0x28
				NVIC_ICER3 = interruptSave[3];
    6102:	str	r3, [r4, #0]
			}
			#endif
			__enable_irq();
    6104:	cpsie	i
	// setCS() is a special function, not intended for use from normal Arduino
	// programs/sketches.  See the ILI3941_t3 library for an example.
	uint8_t setCS(uint8_t pin);

private:
	KINETISK_SPI_t & port() { return *(KINETISK_SPI_t *)port_addr; }
    6106:	ldr	r3, [r2, #0]
			pinMode(SPI_TRANSACTION_MISMATCH_LED, OUTPUT);
			digitalWrite(SPI_TRANSACTION_MISMATCH_LED, HIGH);
		}
		inTransactionFlag = 1;
		#endif
		if (port().CTAR0 != settings.ctar) {
    6108:	ldr	r2, [r3, #12]
    610a:	cmp	r2, r1
    610c:	beq.n	611e <Sd2Card::chipSelectLow()+0x86>
			port().MCR = SPI_MCR_MDIS | SPI_MCR_HALT | SPI_MCR_PCSIS(0x3F);
    610e:	ldr	r4, [pc, #52]	; (6144 <Sd2Card::chipSelectLow()+0xac>)
    6110:	str	r4, [r3, #0]
			port().CTAR0 = settings.ctar;
			port().CTAR1 = settings.ctar| SPI_CTAR_FMSZ(8);
			port().MCR = SPI_MCR_MSTR | SPI_MCR_PCSIS(0x3F);
    6112:	ldr	r2, [pc, #52]	; (6148 <Sd2Card::chipSelectLow()+0xb0>)
		}
		inTransactionFlag = 1;
		#endif
		if (port().CTAR0 != settings.ctar) {
			port().MCR = SPI_MCR_MDIS | SPI_MCR_HALT | SPI_MCR_PCSIS(0x3F);
			port().CTAR0 = settings.ctar;
    6114:	str	r1, [r3, #12]
			port().CTAR1 = settings.ctar| SPI_CTAR_FMSZ(8);
    6116:	orr.w	r4, r1, #1073741824	; 0x40000000
    611a:	str	r4, [r3, #16]
			port().MCR = SPI_MCR_MSTR | SPI_MCR_PCSIS(0x3F);
    611c:	str	r2, [r3, #0]
    SPI.beginTransaction(settings);
  }
#endif
  digitalWrite(chipSelectPin_, LOW);
    611e:	ldrb	r0, [r0, #0]
    6120:	movs	r1, #0
}
    6122:	pop	{r4, r5, r6}
  if (!chip_select_asserted) {
    chip_select_asserted = 1;
    SPI.beginTransaction(settings);
  }
#endif
  digitalWrite(chipSelectPin_, LOW);
    6124:	b.w	782c <digitalWrite>
    6128:	.word	0x200129fc
    612c:	.word	0x20007ff8
    6130:	.word	0x200129f8
    6134:	.word	0xe000e180
    6138:	.word	0xe000e184
    613c:	.word	0xe000e188
    6140:	.word	0xe000e18c
    6144:	.word	0x003f4001
    6148:	.word	0x803f0000

0000614c <Sd2Card::waitNotBusy(unsigned int)>:
  return true;
#endif
}
//------------------------------------------------------------------------------
// wait for card to go not busy
uint8_t Sd2Card::waitNotBusy(unsigned int timeoutMillis) {
    614c:	push	{r4, r5, r6, r7}
	// do not remove this "redundant" code without
	// carefully verifying the case mentioned here:
	//
	// https://forum.pjrc.com/threads/17469-millis%28%29-on-teensy-3?p=104924&viewfull=1#post104924
	//
	volatile uint32_t ret = systick_millis_count; // single aligned 32 bit is atomic
    614e:	ldr	r0, [pc, #72]	; (6198 <Sd2Card::waitNotBusy(unsigned int)+0x4c>)
  SPI.begin();
}

/** SPI receive a byte */
static  uint8_t spiRec() {
  SPI0_MCR |= SPI_MCR_CLR_RXF;
    6150:	ldr	r2, [pc, #72]	; (619c <Sd2Card::waitNotBusy(unsigned int)+0x50>)
    6152:	ldr	r3, [r0, #0]
  return true;
#endif
}
//------------------------------------------------------------------------------
// wait for card to go not busy
uint8_t Sd2Card::waitNotBusy(unsigned int timeoutMillis) {
    6154:	sub	sp, #8
/** SPI receive a byte */
static  uint8_t spiRec() {
  SPI0_MCR |= SPI_MCR_CLR_RXF;
  SPI0_SR = SPI_SR_TCF;
  SPI0_PUSHR = 0xFF;
  while (!(SPI0_SR & SPI_SR_TCF)) {}
    6156:	mov	r6, r2
    6158:	str	r3, [sp, #0]
	return ret;
    615a:	ldr	r7, [sp, #0]
}

/** SPI receive a byte */
static  uint8_t spiRec() {
  SPI0_MCR |= SPI_MCR_CLR_RXF;
  SPI0_SR = SPI_SR_TCF;
    615c:	mov.w	r5, #2147483648	; 0x80000000
  SPI0_PUSHR = 0xFF;
    6160:	movs	r4, #255	; 0xff
  SPI.begin();
}

/** SPI receive a byte */
static  uint8_t spiRec() {
  SPI0_MCR |= SPI_MCR_CLR_RXF;
    6162:	ldr	r3, [r2, #0]
    6164:	orr.w	r3, r3, #1024	; 0x400
    6168:	str	r3, [r2, #0]
  SPI0_SR = SPI_SR_TCF;
    616a:	str	r5, [r2, #44]	; 0x2c
  SPI0_PUSHR = 0xFF;
    616c:	str	r4, [r2, #52]	; 0x34
  while (!(SPI0_SR & SPI_SR_TCF)) {}
    616e:	ldr	r3, [r2, #44]	; 0x2c
    6170:	cmp	r3, #0
    6172:	bge.n	616e <Sd2Card::waitNotBusy(unsigned int)+0x22>
  return SPI0_POPR;
    6174:	ldr	r3, [r6, #56]	; 0x38
// wait for card to go not busy
uint8_t Sd2Card::waitNotBusy(unsigned int timeoutMillis) {
  unsigned int t0 = millis();
  unsigned int d;
  do {
    if (spiRec() == 0XFF) return true;
    6176:	uxtb	r3, r3
    6178:	cmp	r3, #255	; 0xff
    617a:	beq.n	6190 <Sd2Card::waitNotBusy(unsigned int)+0x44>
	// do not remove this "redundant" code without
	// carefully verifying the case mentioned here:
	//
	// https://forum.pjrc.com/threads/17469-millis%28%29-on-teensy-3?p=104924&viewfull=1#post104924
	//
	volatile uint32_t ret = systick_millis_count; // single aligned 32 bit is atomic
    617c:	ldr	r3, [r0, #0]
    617e:	str	r3, [sp, #4]
	return ret;
    6180:	ldr	r3, [sp, #4]
    d = millis() - t0;
  }
  while (d < timeoutMillis);
    6182:	subs	r3, r3, r7
    6184:	cmp	r3, r1
    6186:	bcc.n	6162 <Sd2Card::waitNotBusy(unsigned int)+0x16>
  return false;
    6188:	movs	r0, #0
}
    618a:	add	sp, #8
    618c:	pop	{r4, r5, r6, r7}
    618e:	bx	lr
// wait for card to go not busy
uint8_t Sd2Card::waitNotBusy(unsigned int timeoutMillis) {
  unsigned int t0 = millis();
  unsigned int d;
  do {
    if (spiRec() == 0XFF) return true;
    6190:	movs	r0, #1
    d = millis() - t0;
  }
  while (d < timeoutMillis);
  return false;
}
    6192:	add	sp, #8
    6194:	pop	{r4, r5, r6, r7}
    6196:	bx	lr
    6198:	.word	0x20012a14
    619c:	.word	0x4002c000

000061a0 <Sd2Card::cardCommand(unsigned char, unsigned long)>:


//------------------------------------------------------------------------------
// send command and return error code.  Return zero for OK
uint8_t Sd2Card::cardCommand(uint8_t cmd, uint32_t arg)
{
    61a0:	push	{r3, r4, r5, r6, r7, lr}
    61a2:	mov	r5, r1
  // wait up to 300 ms if busy
  waitNotBusy(300);
    61a4:	mov.w	r1, #300	; 0x12c


//------------------------------------------------------------------------------
// send command and return error code.  Return zero for OK
uint8_t Sd2Card::cardCommand(uint8_t cmd, uint32_t arg)
{
    61a8:	mov	r6, r2
    61aa:	mov	r4, r0
  // wait up to 300 ms if busy
  waitNotBusy(300);
    61ac:	bl	614c <Sd2Card::waitNotBusy(unsigned int)>
    nf--;
  }
}
/** SPI send a byte */
static void spiSend(uint8_t b) {
  SPI0_MCR |= SPI_MCR_CLR_RXF;
    61b0:	ldr	r3, [pc, #160]	; (6254 <Sd2Card::cardCommand(unsigned char, unsigned long)+0xb4>)
    61b2:	ldr	r2, [r3, #0]
  SPI0_SR = SPI_SR_TCF;
    61b4:	mov.w	r0, #2147483648	; 0x80000000
    nf--;
  }
}
/** SPI send a byte */
static void spiSend(uint8_t b) {
  SPI0_MCR |= SPI_MCR_CLR_RXF;
    61b8:	orr.w	r2, r2, #1024	; 0x400
  SPI0_SR = SPI_SR_TCF;
  SPI0_PUSHR = b;
    61bc:	orr.w	r1, r5, #64	; 0x40
    nf--;
  }
}
/** SPI send a byte */
static void spiSend(uint8_t b) {
  SPI0_MCR |= SPI_MCR_CLR_RXF;
    61c0:	str	r2, [r3, #0]
  SPI0_SR = SPI_SR_TCF;
    61c2:	str	r0, [r3, #44]	; 0x2c
  SPI0_PUSHR = b;
  while (!(SPI0_SR & SPI_SR_TCF)) {}
    61c4:	mov	r2, r3
}
/** SPI send a byte */
static void spiSend(uint8_t b) {
  SPI0_MCR |= SPI_MCR_CLR_RXF;
  SPI0_SR = SPI_SR_TCF;
  SPI0_PUSHR = b;
    61c6:	str	r1, [r3, #52]	; 0x34
  while (!(SPI0_SR & SPI_SR_TCF)) {}
    61c8:	ldr	r3, [r2, #44]	; 0x2c
    61ca:	cmp	r3, #0
    61cc:	bge.n	61c8 <Sd2Card::cardCommand(unsigned char, unsigned long)+0x28>
    nf--;
  }
}
/** SPI send a byte */
static void spiSend(uint8_t b) {
  SPI0_MCR |= SPI_MCR_CLR_RXF;
    61ce:	ldr	r1, [pc, #132]	; (6254 <Sd2Card::cardCommand(unsigned char, unsigned long)+0xb4>)
  SPI0_SR = SPI_SR_TCF;
  SPI0_PUSHR = b;
  while (!(SPI0_SR & SPI_SR_TCF)) {}
    61d0:	movs	r0, #24
  }
}
/** SPI send a byte */
static void spiSend(uint8_t b) {
  SPI0_MCR |= SPI_MCR_CLR_RXF;
  SPI0_SR = SPI_SR_TCF;
    61d2:	mov.w	r7, #2147483648	; 0x80000000
    nf--;
  }
}
/** SPI send a byte */
static void spiSend(uint8_t b) {
  SPI0_MCR |= SPI_MCR_CLR_RXF;
    61d6:	ldr	r2, [r1, #0]
    61d8:	lsr.w	r3, r6, r0
    61dc:	orr.w	r2, r2, #1024	; 0x400
    61e0:	uxtb	r3, r3
    61e2:	str	r2, [r1, #0]
  SPI0_SR = SPI_SR_TCF;
    61e4:	str	r7, [r1, #44]	; 0x2c
  SPI0_PUSHR = b;
    61e6:	str	r3, [r1, #52]	; 0x34
  while (!(SPI0_SR & SPI_SR_TCF)) {}
    61e8:	ldr	r3, [r1, #44]	; 0x2c
    61ea:	cmp	r3, #0
    61ec:	bge.n	61e8 <Sd2Card::cardCommand(unsigned char, unsigned long)+0x48>
    61ee:	subs	r0, #8

  // send command
  spiSend(cmd | 0x40);

  // send argument
  for (int8_t s = 24; s >= 0; s -= 8) spiSend(arg >> s);
    61f0:	cmn.w	r0, #8
    61f4:	bne.n	61d6 <Sd2Card::cardCommand(unsigned char, unsigned long)+0x36>

  // send CRC
  uint8_t crc = 0XFF;
  if (cmd == CMD0) crc = 0X95;  // correct crc for CMD0 with arg 0
    61f6:	cbz	r5, 624e <Sd2Card::cardCommand(unsigned char, unsigned long)+0xae>
  if (cmd == CMD8) crc = 0X87;  // correct crc for CMD8 with arg 0X1AA
    61f8:	cmp	r5, #8
    61fa:	ite	eq
    61fc:	moveq	r1, #135	; 0x87
    61fe:	movne	r1, #255	; 0xff
    nf--;
  }
}
/** SPI send a byte */
static void spiSend(uint8_t b) {
  SPI0_MCR |= SPI_MCR_CLR_RXF;
    6200:	ldr	r3, [pc, #80]	; (6254 <Sd2Card::cardCommand(unsigned char, unsigned long)+0xb4>)
    6202:	ldr	r2, [r3, #0]
  SPI0_SR = SPI_SR_TCF;
    6204:	mov.w	r0, #2147483648	; 0x80000000
    nf--;
  }
}
/** SPI send a byte */
static void spiSend(uint8_t b) {
  SPI0_MCR |= SPI_MCR_CLR_RXF;
    6208:	orr.w	r2, r2, #1024	; 0x400
    620c:	str	r2, [r3, #0]
  SPI0_SR = SPI_SR_TCF;
    620e:	str	r0, [r3, #44]	; 0x2c
  SPI0_PUSHR = b;
  while (!(SPI0_SR & SPI_SR_TCF)) {}
    6210:	mov	r2, r3
}
/** SPI send a byte */
static void spiSend(uint8_t b) {
  SPI0_MCR |= SPI_MCR_CLR_RXF;
  SPI0_SR = SPI_SR_TCF;
  SPI0_PUSHR = b;
    6212:	str	r1, [r3, #52]	; 0x34
  while (!(SPI0_SR & SPI_SR_TCF)) {}
    6214:	ldr	r3, [r2, #44]	; 0x2c
    6216:	cmp	r3, #0
    6218:	bge.n	6214 <Sd2Card::cardCommand(unsigned char, unsigned long)+0x74>
  SPI.begin();
}

/** SPI receive a byte */
static  uint8_t spiRec() {
  SPI0_MCR |= SPI_MCR_CLR_RXF;
    621a:	ldr	r2, [pc, #56]	; (6254 <Sd2Card::cardCommand(unsigned char, unsigned long)+0xb4>)
/** SPI send a byte */
static void spiSend(uint8_t b) {
  SPI0_MCR |= SPI_MCR_CLR_RXF;
  SPI0_SR = SPI_SR_TCF;
  SPI0_PUSHR = b;
  while (!(SPI0_SR & SPI_SR_TCF)) {}
    621c:	movs	r7, #0
/** SPI receive a byte */
static  uint8_t spiRec() {
  SPI0_MCR |= SPI_MCR_CLR_RXF;
  SPI0_SR = SPI_SR_TCF;
  SPI0_PUSHR = 0xFF;
  while (!(SPI0_SR & SPI_SR_TCF)) {}
    621e:	mov	r6, r2
}

/** SPI receive a byte */
static  uint8_t spiRec() {
  SPI0_MCR |= SPI_MCR_CLR_RXF;
  SPI0_SR = SPI_SR_TCF;
    6220:	mov.w	r5, #2147483648	; 0x80000000
  SPI0_PUSHR = 0xFF;
    6224:	movs	r1, #255	; 0xff
  SPI.begin();
}

/** SPI receive a byte */
static  uint8_t spiRec() {
  SPI0_MCR |= SPI_MCR_CLR_RXF;
    6226:	ldr	r3, [r2, #0]
    6228:	orr.w	r3, r3, #1024	; 0x400
    622c:	str	r3, [r2, #0]
  SPI0_SR = SPI_SR_TCF;
    622e:	str	r5, [r2, #44]	; 0x2c
  SPI0_PUSHR = 0xFF;
    6230:	str	r1, [r2, #52]	; 0x34
  while (!(SPI0_SR & SPI_SR_TCF)) {}
    6232:	ldr	r3, [r2, #44]	; 0x2c
    6234:	cmp	r3, #0
    6236:	bge.n	6232 <Sd2Card::cardCommand(unsigned char, unsigned long)+0x92>
  return SPI0_POPR;
    6238:	ldr	r3, [r6, #56]	; 0x38
    623a:	uxtb	r0, r3
  if (cmd == CMD0) crc = 0X95;  // correct crc for CMD0 with arg 0
  if (cmd == CMD8) crc = 0X87;  // correct crc for CMD8 with arg 0X1AA
  spiSend(crc);

  // wait for response
  for (uint8_t i = 0; ((status_ = spiRec()) & 0X80) && i != 0XFF; i++);
    623c:	lsls	r3, r3, #24
    623e:	strb	r0, [r4, #1]
    6240:	bmi.n	6244 <Sd2Card::cardCommand(unsigned char, unsigned long)+0xa4>
  return status_;
}
    6242:	pop	{r3, r4, r5, r6, r7, pc}
    6244:	adds	r7, #1
  if (cmd == CMD0) crc = 0X95;  // correct crc for CMD0 with arg 0
  if (cmd == CMD8) crc = 0X87;  // correct crc for CMD8 with arg 0X1AA
  spiSend(crc);

  // wait for response
  for (uint8_t i = 0; ((status_ = spiRec()) & 0X80) && i != 0XFF; i++);
    6246:	cmp.w	r7, #256	; 0x100
    624a:	bne.n	6226 <Sd2Card::cardCommand(unsigned char, unsigned long)+0x86>
  return status_;
}
    624c:	pop	{r3, r4, r5, r6, r7, pc}
    624e:	movs	r1, #149	; 0x95
    6250:	b.n	6200 <Sd2Card::cardCommand(unsigned char, unsigned long)+0x60>
    6252:	nop
    6254:	.word	0x4002c000

00006258 <Sd2Card::waitStartBlock()>:
  while (d < timeoutMillis);
  return false;
}
//------------------------------------------------------------------------------
/** Wait for start block token */
uint8_t Sd2Card::waitStartBlock(void) {
    6258:	push	{r4, r5, r6, r7}
	// do not remove this "redundant" code without
	// carefully verifying the case mentioned here:
	//
	// https://forum.pjrc.com/threads/17469-millis%28%29-on-teensy-3?p=104924&viewfull=1#post104924
	//
	volatile uint32_t ret = systick_millis_count; // single aligned 32 bit is atomic
    625a:	ldr	r1, [pc, #84]	; (62b0 <Sd2Card::waitStartBlock()+0x58>)
  SPI.begin();
}

/** SPI receive a byte */
static  uint8_t spiRec() {
  SPI0_MCR |= SPI_MCR_CLR_RXF;
    625c:	ldr	r2, [pc, #84]	; (62b4 <Sd2Card::waitStartBlock()+0x5c>)
    625e:	ldr	r3, [r1, #0]
  while (d < timeoutMillis);
  return false;
}
//------------------------------------------------------------------------------
/** Wait for start block token */
uint8_t Sd2Card::waitStartBlock(void) {
    6260:	sub	sp, #8
/** SPI receive a byte */
static  uint8_t spiRec() {
  SPI0_MCR |= SPI_MCR_CLR_RXF;
  SPI0_SR = SPI_SR_TCF;
  SPI0_PUSHR = 0xFF;
  while (!(SPI0_SR & SPI_SR_TCF)) {}
    6262:	mov	r6, r2
    6264:	str	r3, [sp, #0]
	return ret;
    6266:	ldr	r7, [sp, #0]
}

/** SPI receive a byte */
static  uint8_t spiRec() {
  SPI0_MCR |= SPI_MCR_CLR_RXF;
  SPI0_SR = SPI_SR_TCF;
    6268:	mov.w	r5, #2147483648	; 0x80000000
  SPI0_PUSHR = 0xFF;
    626c:	movs	r4, #255	; 0xff
  SPI.begin();
}

/** SPI receive a byte */
static  uint8_t spiRec() {
  SPI0_MCR |= SPI_MCR_CLR_RXF;
    626e:	ldr	r3, [r2, #0]
    6270:	orr.w	r3, r3, #1024	; 0x400
    6274:	str	r3, [r2, #0]
  SPI0_SR = SPI_SR_TCF;
    6276:	str	r5, [r2, #44]	; 0x2c
  SPI0_PUSHR = 0xFF;
    6278:	str	r4, [r2, #52]	; 0x34
  while (!(SPI0_SR & SPI_SR_TCF)) {}
    627a:	ldr	r3, [r2, #44]	; 0x2c
    627c:	cmp	r3, #0
    627e:	bge.n	627a <Sd2Card::waitStartBlock()+0x22>
  return SPI0_POPR;
    6280:	ldr	r3, [r6, #56]	; 0x38
    6282:	uxtb	r3, r3
}
//------------------------------------------------------------------------------
/** Wait for start block token */
uint8_t Sd2Card::waitStartBlock(void) {
  unsigned int t0 = millis();
  while ((status_ = spiRec()) == 0XFF) {
    6284:	cmp	r3, #255	; 0xff
    6286:	strb	r3, [r0, #1]
    6288:	bne.n	62a0 <Sd2Card::waitStartBlock()+0x48>
	// do not remove this "redundant" code without
	// carefully verifying the case mentioned here:
	//
	// https://forum.pjrc.com/threads/17469-millis%28%29-on-teensy-3?p=104924&viewfull=1#post104924
	//
	volatile uint32_t ret = systick_millis_count; // single aligned 32 bit is atomic
    628a:	ldr	r3, [r1, #0]
    628c:	str	r3, [sp, #4]
	return ret;
    628e:	ldr	r3, [sp, #4]
    unsigned int d = millis() - t0;
    if (d > SD_READ_TIMEOUT) {
    6290:	subs	r3, r3, r7
    6292:	cmp.w	r3, #300	; 0x12c
    6296:	bls.n	626e <Sd2Card::waitStartBlock()+0x16>
      return false; // SD_CARD_ERROR_READ_TIMEOUT
    6298:	movs	r0, #0
  }
  if (status_ != DATA_START_BLOCK) {
    return false; // SD_CARD_ERROR_READ
  }
  return true;
}
    629a:	add	sp, #8
    629c:	pop	{r4, r5, r6, r7}
    629e:	bx	lr
uint8_t Sd2Card::waitStartBlock(void) {
  unsigned int t0 = millis();
  while ((status_ = spiRec()) == 0XFF) {
    unsigned int d = millis() - t0;
    if (d > SD_READ_TIMEOUT) {
      return false; // SD_CARD_ERROR_READ_TIMEOUT
    62a0:	sub.w	r0, r3, #254	; 0xfe
    62a4:	clz	r0, r0
    62a8:	lsrs	r0, r0, #5
  }
  if (status_ != DATA_START_BLOCK) {
    return false; // SD_CARD_ERROR_READ
  }
  return true;
}
    62aa:	add	sp, #8
    62ac:	pop	{r4, r5, r6, r7}
    62ae:	bx	lr
    62b0:	.word	0x20012a14
    62b4:	.word	0x4002c000

000062b8 <Sd2Card::SD_readBlock(unsigned long, unsigned char*)>:

 * \return The value one, true, is returned for success and
 * the value zero, false, is returned for failure.
 */
uint8_t Sd2Card::SD_readBlock(uint32_t block, uint8_t* dst)
{
    62b8:	push	{r3, r4, r5, r6, r7, lr}
  // use address if not SDHC card
  if (type_ != SD_CARD_TYPE_SDHC) block <<= 9;
    62ba:	ldrb	r3, [r0, #2]
    62bc:	cmp	r3, #3

 * \return The value one, true, is returned for success and
 * the value zero, false, is returned for failure.
 */
uint8_t Sd2Card::SD_readBlock(uint32_t block, uint8_t* dst)
{
    62be:	mov	r6, r1
    62c0:	mov	r4, r0
  // use address if not SDHC card
  if (type_ != SD_CARD_TYPE_SDHC) block <<= 9;
    62c2:	it	ne
    62c4:	lslne	r6, r1, #9

 * \return The value one, true, is returned for success and
 * the value zero, false, is returned for failure.
 */
uint8_t Sd2Card::SD_readBlock(uint32_t block, uint8_t* dst)
{
    62c6:	mov	r5, r2
  // use address if not SDHC card
  if (type_ != SD_CARD_TYPE_SDHC) block <<= 9;
  chipSelectLow();
    62c8:	bl	6098 <Sd2Card::chipSelectLow()>
  if (cardCommand(CMD17, block)) {
    62cc:	mov	r2, r6
    62ce:	movs	r1, #17
    62d0:	mov	r0, r4
    62d2:	bl	61a0 <Sd2Card::cardCommand(unsigned char, unsigned long)>
    62d6:	cbnz	r0, 62e0 <Sd2Card::SD_readBlock(unsigned long, unsigned char*)+0x28>
    goto fail; // SD_CARD_ERROR_CMD17
  }
  if (!waitStartBlock()) {
    62d8:	mov	r0, r4
    62da:	bl	6258 <Sd2Card::waitStartBlock()>
    62de:	cbnz	r0, 62ea <Sd2Card::SD_readBlock(unsigned long, unsigned char*)+0x32>
#endif
  chipSelectHigh();
  return true;

 fail:
  chipSelectHigh();
    62e0:	mov	r0, r4
    62e2:	bl	6030 <Sd2Card::chipSelectHigh()>
  return false;
    62e6:	movs	r0, #0
}
    62e8:	pop	{r3, r4, r5, r6, r7, pc}
  return SPI0_POPR;
}
/** SPI receive multiple bytes */
static uint8_t spiRec(uint8_t* buf, size_t len) {
  // clear any data in RX FIFO
  SPI0_MCR = SPI_MCR_MSTR | SPI_MCR_CLR_RXF | SPI_MCR_PCSIS(0x1F);
    62ea:	ldr	r3, [pc, #128]	; (636c <Sd2Card::SD_readBlock(unsigned long, unsigned char*)+0xb4>)
    len--;
  }
  // initial number of words to push into TX FIFO
  int nf = len/2 < SPI_INITIAL_FIFO_DEPTH ? len/2 : SPI_INITIAL_FIFO_DEPTH;
  for (int i = 0; i < nf; i++) {
    SPI0_PUSHR = SPI_PUSHR_CONT | SPI_PUSHR_CTAS(1) | 0XFFFF;
    62ec:	ldr	r1, [pc, #128]	; (6370 <Sd2Card::SD_readBlock(unsigned long, unsigned char*)+0xb8>)
  return SPI0_POPR;
}
/** SPI receive multiple bytes */
static uint8_t spiRec(uint8_t* buf, size_t len) {
  // clear any data in RX FIFO
  SPI0_MCR = SPI_MCR_MSTR | SPI_MCR_CLR_RXF | SPI_MCR_PCSIS(0x1F);
    62ee:	ldr	r2, [pc, #132]	; (6374 <Sd2Card::SD_readBlock(unsigned long, unsigned char*)+0xbc>)
    62f0:	str	r2, [r3, #0]
    SPI0_PUSHR = SPI_PUSHR_CONT | SPI_PUSHR_CTAS(1) | 0XFFFF;
  }
  uint8_t* limit = buf + len - 2*nf;
  while (buf < limit) {
    while (!(SPI0_SR & SPI_SR_RXCTR)) {}
    SPI0_PUSHR = SPI_PUSHR_CONT | SPI_PUSHR_CTAS(1) | 0XFFFF;
    62f2:	mov	lr, r1
    len--;
  }
  // initial number of words to push into TX FIFO
  int nf = len/2 < SPI_INITIAL_FIFO_DEPTH ? len/2 : SPI_INITIAL_FIFO_DEPTH;
  for (int i = 0; i < nf; i++) {
    SPI0_PUSHR = SPI_PUSHR_CONT | SPI_PUSHR_CTAS(1) | 0XFFFF;
    62f4:	str	r1, [r3, #52]	; 0x34
  }
  uint8_t* limit = buf + len - 2*nf;
  while (buf < limit) {
    while (!(SPI0_SR & SPI_SR_RXCTR)) {}
    62f6:	mov	r2, r3
    len--;
  }
  // initial number of words to push into TX FIFO
  int nf = len/2 < SPI_INITIAL_FIFO_DEPTH ? len/2 : SPI_INITIAL_FIFO_DEPTH;
  for (int i = 0; i < nf; i++) {
    SPI0_PUSHR = SPI_PUSHR_CONT | SPI_PUSHR_CTAS(1) | 0XFFFF;
    62f8:	str	r1, [r3, #52]	; 0x34
  }
  uint8_t* limit = buf + len - 2*nf;
  while (buf < limit) {
    while (!(SPI0_SR & SPI_SR_RXCTR)) {}
    62fa:	mov	r6, r3
    len--;
  }
  // initial number of words to push into TX FIFO
  int nf = len/2 < SPI_INITIAL_FIFO_DEPTH ? len/2 : SPI_INITIAL_FIFO_DEPTH;
  for (int i = 0; i < nf; i++) {
    SPI0_PUSHR = SPI_PUSHR_CONT | SPI_PUSHR_CTAS(1) | 0XFFFF;
    62fc:	str	r1, [r3, #52]	; 0x34
  }
  uint8_t* limit = buf + len - 2*nf;
    62fe:	add.w	r0, r5, #506	; 0x1fa
    6302:	adds	r1, r5, #2
    6304:	add.w	r7, r5, #508	; 0x1fc
  while (buf < limit) {
    while (!(SPI0_SR & SPI_SR_RXCTR)) {}
    6308:	ldr	r3, [r2, #44]	; 0x2c
    630a:	tst.w	r3, #240	; 0xf0
    630e:	beq.n	6308 <Sd2Card::SD_readBlock(unsigned long, unsigned char*)+0x50>
    SPI0_PUSHR = SPI_PUSHR_CONT | SPI_PUSHR_CTAS(1) | 0XFFFF;
    6310:	str.w	lr, [r6, #52]	; 0x34
    uint16_t w = SPI0_POPR;
    6314:	ldr	r3, [r6, #56]	; 0x38
    *buf++ = w >> 8;
    *buf++ = w & 0XFF;
    6316:	strb.w	r3, [r1, #-1]
  uint8_t* limit = buf + len - 2*nf;
  while (buf < limit) {
    while (!(SPI0_SR & SPI_SR_RXCTR)) {}
    SPI0_PUSHR = SPI_PUSHR_CONT | SPI_PUSHR_CTAS(1) | 0XFFFF;
    uint16_t w = SPI0_POPR;
    *buf++ = w >> 8;
    631a:	asrs	r3, r3, #8
    631c:	strb.w	r3, [r1, #-2]
    6320:	adds	r1, #2
  int nf = len/2 < SPI_INITIAL_FIFO_DEPTH ? len/2 : SPI_INITIAL_FIFO_DEPTH;
  for (int i = 0; i < nf; i++) {
    SPI0_PUSHR = SPI_PUSHR_CONT | SPI_PUSHR_CTAS(1) | 0XFFFF;
  }
  uint8_t* limit = buf + len - 2*nf;
  while (buf < limit) {
    6322:	cmp	r7, r1
    6324:	bne.n	6308 <Sd2Card::SD_readBlock(unsigned long, unsigned char*)+0x50>
    uint16_t w = SPI0_POPR;
    *buf++ = w >> 8;
    *buf++ = w & 0XFF;
  }
  // limit for rest of RX data
  limit += 2*nf;
    6326:	add.w	r5, r5, #512	; 0x200
  while (buf < limit) {
    632a:	cmp	r0, r5
    632c:	bcs.n	634a <Sd2Card::SD_readBlock(unsigned long, unsigned char*)+0x92>
    while (!(SPI0_SR & SPI_SR_RXCTR)) {}
    632e:	ldr	r2, [pc, #60]	; (636c <Sd2Card::SD_readBlock(unsigned long, unsigned char*)+0xb4>)
    6330:	mov	r6, r2
    6332:	ldr	r3, [r2, #44]	; 0x2c
    6334:	tst.w	r3, #240	; 0xf0
    6338:	beq.n	6332 <Sd2Card::SD_readBlock(unsigned long, unsigned char*)+0x7a>
    uint16_t w = SPI0_POPR;
    633a:	ldr	r3, [r6, #56]	; 0x38
    *buf++ = w >> 8;
    633c:	asrs	r1, r3, #8
    633e:	strb.w	r1, [r0], #2
    *buf++ = w >> 8;
    *buf++ = w & 0XFF;
  }
  // limit for rest of RX data
  limit += 2*nf;
  while (buf < limit) {
    6342:	cmp	r0, r5
    while (!(SPI0_SR & SPI_SR_RXCTR)) {}
    uint16_t w = SPI0_POPR;
    *buf++ = w >> 8;
    *buf++ = w & 0XFF;
    6344:	strb.w	r3, [r0, #-1]
    *buf++ = w >> 8;
    *buf++ = w & 0XFF;
  }
  // limit for rest of RX data
  limit += 2*nf;
  while (buf < limit) {
    6348:	bcc.n	6332 <Sd2Card::SD_readBlock(unsigned long, unsigned char*)+0x7a>
  }
  return 0;
}
static void spiRecIgnore(size_t len) {
  // clear any data in RX FIFO
  SPI0_MCR = SPI_MCR_MSTR | SPI_MCR_CLR_RXF | SPI_MCR_PCSIS(0x1F);
    634a:	ldr	r3, [pc, #32]	; (636c <Sd2Card::SD_readBlock(unsigned long, unsigned char*)+0xb4>)
    634c:	ldr	r1, [pc, #36]	; (6374 <Sd2Card::SD_readBlock(unsigned long, unsigned char*)+0xbc>)
    len--;
  }
  // initial number of words to push into TX FIFO
  int nf = len/2 < SPI_INITIAL_FIFO_DEPTH ? len/2 : SPI_INITIAL_FIFO_DEPTH;
  for (int i = 0; i < nf; i++) {
    SPI0_PUSHR = SPI_PUSHR_CONT | SPI_PUSHR_CTAS(1) | 0XFFFF;
    634e:	ldr	r2, [pc, #32]	; (6370 <Sd2Card::SD_readBlock(unsigned long, unsigned char*)+0xb8>)
  }
  return 0;
}
static void spiRecIgnore(size_t len) {
  // clear any data in RX FIFO
  SPI0_MCR = SPI_MCR_MSTR | SPI_MCR_CLR_RXF | SPI_MCR_PCSIS(0x1F);
    6350:	str	r1, [r3, #0]
    SPI0_POPR;
    len -= 2;
  }
  // limit for rest of RX data
  while (nf > 0) {
    while (!(SPI0_SR & SPI_SR_RXCTR)) {}
    6352:	mov	r1, r3
    len--;
  }
  // initial number of words to push into TX FIFO
  int nf = len/2 < SPI_INITIAL_FIFO_DEPTH ? len/2 : SPI_INITIAL_FIFO_DEPTH;
  for (int i = 0; i < nf; i++) {
    SPI0_PUSHR = SPI_PUSHR_CONT | SPI_PUSHR_CTAS(1) | 0XFFFF;
    6354:	str	r2, [r3, #52]	; 0x34
    SPI0_POPR;
    len -= 2;
  }
  // limit for rest of RX data
  while (nf > 0) {
    while (!(SPI0_SR & SPI_SR_RXCTR)) {}
    6356:	ldr	r3, [r1, #44]	; 0x2c
    6358:	ldr	r2, [pc, #16]	; (636c <Sd2Card::SD_readBlock(unsigned long, unsigned char*)+0xb4>)
    635a:	tst.w	r3, #240	; 0xf0
    635e:	beq.n	6356 <Sd2Card::SD_readBlock(unsigned long, unsigned char*)+0x9e>
  dst[511] = SPDR;
  // skip CRC bytes
  spiRec();
  spiRec();
#endif
  chipSelectHigh();
    6360:	mov	r0, r4
    len -= 2;
  }
  // limit for rest of RX data
  while (nf > 0) {
    while (!(SPI0_SR & SPI_SR_RXCTR)) {}
    SPI0_POPR;
    6362:	ldr	r3, [r2, #56]	; 0x38
  dst[511] = SPDR;
  // skip CRC bytes
  spiRec();
  spiRec();
#endif
  chipSelectHigh();
    6364:	bl	6030 <Sd2Card::chipSelectHigh()>
  return true;
    6368:	movs	r0, #1
    636a:	pop	{r3, r4, r5, r6, r7, pc}
    636c:	.word	0x4002c000
    6370:	.word	0x9000ffff
    6374:	.word	0x801f0400

00006378 <Sd2Card::writeData(unsigned char, unsigned char const*)>:
  chipSelectHigh();
  return false;
}
//------------------------------------------------------------------------------
// send one block of data for write block or write multiple blocks
uint8_t Sd2Card::writeData(uint8_t token, const uint8_t* src) {
    6378:	push	{r4, r5, r6, r7}
public:
	inline SPDRemulation & operator = (int val) __attribute__((always_inline)) {
		//serial_print("SPDR = ");
		//serial_phex(val);
		//serial_print("\n");
		SPI0_MCR |= SPI_MCR_CLR_RXF; // discard any received data
    637a:	ldr	r6, [pc, #196]	; (6440 <Sd2Card::writeData(unsigned char, unsigned char const*)+0xc8>)
    637c:	ldr	r3, [r6, #0]
		SPI0_SR = SPI_SR_TCF;
    637e:	mov.w	r7, #2147483648	; 0x80000000
public:
	inline SPDRemulation & operator = (int val) __attribute__((always_inline)) {
		//serial_print("SPDR = ");
		//serial_phex(val);
		//serial_print("\n");
		SPI0_MCR |= SPI_MCR_CLR_RXF; // discard any received data
    6382:	orr.w	r3, r3, #1024	; 0x400
    6386:	str	r3, [r6, #0]
		SPI0_SR = SPI_SR_TCF;
    6388:	mov	r5, r7
    638a:	str	r7, [r6, #44]	; 0x2c
		// a difference when digitalWrite is used to manually control the CS
		// pin, and perhaps it could matter at high clocks if faster register
		// access is used?  But does it really matter?  Do any SPI chips in
		// practice really perform differently if CS negates early, after the
		// final bit is clocked, but before the end of the whole clock cycle?
		if ((val & (1<<SPIF)) && (SPI0_SR & SPI_SR_TCF)) ret = (1<<SPIF);
    638c:	mov	r4, r6
		//serial_print("\n");
		SPI0_MCR |= SPI_MCR_CLR_RXF; // discard any received data
		SPI0_SR = SPI_SR_TCF;
		//SPI0_SR = SPI_SR_EOQF;
		//SPI0_PUSHR = (val & 255) | SPI0_PUSHR_EOQ;
		SPI0_PUSHR = (val & 255);
    638e:	str	r1, [r6, #52]	; 0x34
		// a difference when digitalWrite is used to manually control the CS
		// pin, and perhaps it could matter at high clocks if faster register
		// access is used?  But does it really matter?  Do any SPI chips in
		// practice really perform differently if CS negates early, after the
		// final bit is clocked, but before the end of the whole clock cycle?
		if ((val & (1<<SPIF)) && (SPI0_SR & SPI_SR_TCF)) ret = (1<<SPIF);
    6390:	mov	r3, r6
    6392:	adds	r1, r2, #1
    6394:	addw	r7, r2, #513	; 0x201
    6398:	ldr	r2, [r4, #44]	; 0x2c
    639a:	cmp	r2, #0
    639c:	bge.n	6398 <Sd2Card::writeData(unsigned char, unsigned char const*)+0x20>
public:
	inline SPDRemulation & operator = (int val) __attribute__((always_inline)) {
		//serial_print("SPDR = ");
		//serial_phex(val);
		//serial_print("\n");
		SPI0_MCR |= SPI_MCR_CLR_RXF; // discard any received data
    639e:	ldr	r2, [r3, #0]
  SPDR = token;

  // send two byte per iteration
  for (uint16_t i = 0; i < 512; i += 2) {
    while (!(SPSR & (1 << SPIF)));
    SPDR = src[i];
    63a0:	ldrb.w	r6, [r1, #-1]
    63a4:	orr.w	r2, r2, #1024	; 0x400
    63a8:	str	r2, [r3, #0]
		SPI0_SR = SPI_SR_TCF;
    63aa:	str	r5, [r3, #44]	; 0x2c
		//SPI0_SR = SPI_SR_EOQF;
		//SPI0_PUSHR = (val & 255) | SPI0_PUSHR_EOQ;
		SPI0_PUSHR = (val & 255);
    63ac:	str	r6, [r3, #52]	; 0x34
		// a difference when digitalWrite is used to manually control the CS
		// pin, and perhaps it could matter at high clocks if faster register
		// access is used?  But does it really matter?  Do any SPI chips in
		// practice really perform differently if CS negates early, after the
		// final bit is clocked, but before the end of the whole clock cycle?
		if ((val & (1<<SPIF)) && (SPI0_SR & SPI_SR_TCF)) ret = (1<<SPIF);
    63ae:	ldr	r2, [r4, #44]	; 0x2c
    63b0:	cmp	r2, #0
    63b2:	bge.n	63ae <Sd2Card::writeData(unsigned char, unsigned char const*)+0x36>
public:
	inline SPDRemulation & operator = (int val) __attribute__((always_inline)) {
		//serial_print("SPDR = ");
		//serial_phex(val);
		//serial_print("\n");
		SPI0_MCR |= SPI_MCR_CLR_RXF; // discard any received data
    63b4:	ldr	r2, [r3, #0]
    while (!(SPSR & (1 << SPIF)));
    SPDR = src[i+1];
    63b6:	ldrb.w	r6, [r1], #2
    63ba:	orr.w	r2, r2, #1024	; 0x400

  // send data - optimized loop
  SPDR = token;

  // send two byte per iteration
  for (uint16_t i = 0; i < 512; i += 2) {
    63be:	cmp	r7, r1
    63c0:	str	r2, [r3, #0]
		SPI0_SR = SPI_SR_TCF;
    63c2:	str	r5, [r3, #44]	; 0x2c
		//SPI0_SR = SPI_SR_EOQF;
		//SPI0_PUSHR = (val & 255) | SPI0_PUSHR_EOQ;
		SPI0_PUSHR = (val & 255);
    63c4:	str	r6, [r3, #52]	; 0x34
    63c6:	bne.n	6398 <Sd2Card::writeData(unsigned char, unsigned char const*)+0x20>
		// a difference when digitalWrite is used to manually control the CS
		// pin, and perhaps it could matter at high clocks if faster register
		// access is used?  But does it really matter?  Do any SPI chips in
		// practice really perform differently if CS negates early, after the
		// final bit is clocked, but before the end of the whole clock cycle?
		if ((val & (1<<SPIF)) && (SPI0_SR & SPI_SR_TCF)) ret = (1<<SPIF);
    63c8:	ldr	r1, [pc, #116]	; (6440 <Sd2Card::writeData(unsigned char, unsigned char const*)+0xc8>)
    63ca:	ldr	r2, [r1, #44]	; 0x2c
    63cc:	ldr	r3, [pc, #112]	; (6440 <Sd2Card::writeData(unsigned char, unsigned char const*)+0xc8>)
    63ce:	cmp	r2, #0
    63d0:	bge.n	63ca <Sd2Card::writeData(unsigned char, unsigned char const*)+0x52>
    nf--;
  }
}
/** SPI send a byte */
static void spiSend(uint8_t b) {
  SPI0_MCR |= SPI_MCR_CLR_RXF;
    63d2:	ldr	r2, [r3, #0]
  SPI0_SR = SPI_SR_TCF;
    63d4:	mov.w	r5, #2147483648	; 0x80000000
    nf--;
  }
}
/** SPI send a byte */
static void spiSend(uint8_t b) {
  SPI0_MCR |= SPI_MCR_CLR_RXF;
    63d8:	orr.w	r2, r2, #1024	; 0x400
  SPI0_SR = SPI_SR_TCF;
  SPI0_PUSHR = b;
    63dc:	movs	r4, #255	; 0xff
    nf--;
  }
}
/** SPI send a byte */
static void spiSend(uint8_t b) {
  SPI0_MCR |= SPI_MCR_CLR_RXF;
    63de:	str	r2, [r3, #0]
  SPI0_SR = SPI_SR_TCF;
  SPI0_PUSHR = b;
  while (!(SPI0_SR & SPI_SR_TCF)) {}
    63e0:	mov	r1, r3
  }
}
/** SPI send a byte */
static void spiSend(uint8_t b) {
  SPI0_MCR |= SPI_MCR_CLR_RXF;
  SPI0_SR = SPI_SR_TCF;
    63e2:	str	r5, [r3, #44]	; 0x2c
  SPI0_PUSHR = b;
    63e4:	str	r4, [r3, #52]	; 0x34
  while (!(SPI0_SR & SPI_SR_TCF)) {}
    63e6:	ldr	r3, [r1, #44]	; 0x2c
    63e8:	ldr	r2, [pc, #84]	; (6440 <Sd2Card::writeData(unsigned char, unsigned char const*)+0xc8>)
    63ea:	cmp	r3, #0
    63ec:	bge.n	63e6 <Sd2Card::writeData(unsigned char, unsigned char const*)+0x6e>
    nf--;
  }
}
/** SPI send a byte */
static void spiSend(uint8_t b) {
  SPI0_MCR |= SPI_MCR_CLR_RXF;
    63ee:	ldr	r3, [r2, #0]
  SPI0_SR = SPI_SR_TCF;
    63f0:	mov.w	r5, #2147483648	; 0x80000000
    nf--;
  }
}
/** SPI send a byte */
static void spiSend(uint8_t b) {
  SPI0_MCR |= SPI_MCR_CLR_RXF;
    63f4:	orr.w	r3, r3, #1024	; 0x400
  SPI0_SR = SPI_SR_TCF;
  SPI0_PUSHR = b;
    63f8:	movs	r4, #255	; 0xff
    nf--;
  }
}
/** SPI send a byte */
static void spiSend(uint8_t b) {
  SPI0_MCR |= SPI_MCR_CLR_RXF;
    63fa:	str	r3, [r2, #0]
  SPI0_SR = SPI_SR_TCF;
  SPI0_PUSHR = b;
  while (!(SPI0_SR & SPI_SR_TCF)) {}
    63fc:	mov	r1, r2
  }
}
/** SPI send a byte */
static void spiSend(uint8_t b) {
  SPI0_MCR |= SPI_MCR_CLR_RXF;
  SPI0_SR = SPI_SR_TCF;
    63fe:	str	r5, [r2, #44]	; 0x2c
  SPI0_PUSHR = b;
    6400:	str	r4, [r2, #52]	; 0x34
  while (!(SPI0_SR & SPI_SR_TCF)) {}
    6402:	ldr	r3, [r1, #44]	; 0x2c
    6404:	ldr	r2, [pc, #56]	; (6440 <Sd2Card::writeData(unsigned char, unsigned char const*)+0xc8>)
    6406:	cmp	r3, #0
    6408:	bge.n	6402 <Sd2Card::writeData(unsigned char, unsigned char const*)+0x8a>
  SPI.begin();
}

/** SPI receive a byte */
static  uint8_t spiRec() {
  SPI0_MCR |= SPI_MCR_CLR_RXF;
    640a:	ldr	r3, [r2, #0]
  SPI0_SR = SPI_SR_TCF;
    640c:	mov.w	r5, #2147483648	; 0x80000000
  SPI.begin();
}

/** SPI receive a byte */
static  uint8_t spiRec() {
  SPI0_MCR |= SPI_MCR_CLR_RXF;
    6410:	orr.w	r3, r3, #1024	; 0x400
  SPI0_SR = SPI_SR_TCF;
  SPI0_PUSHR = 0xFF;
    6414:	movs	r4, #255	; 0xff
  SPI.begin();
}

/** SPI receive a byte */
static  uint8_t spiRec() {
  SPI0_MCR |= SPI_MCR_CLR_RXF;
    6416:	str	r3, [r2, #0]
  SPI0_SR = SPI_SR_TCF;
  SPI0_PUSHR = 0xFF;
  while (!(SPI0_SR & SPI_SR_TCF)) {}
    6418:	mov	r1, r2
}

/** SPI receive a byte */
static  uint8_t spiRec() {
  SPI0_MCR |= SPI_MCR_CLR_RXF;
  SPI0_SR = SPI_SR_TCF;
    641a:	str	r5, [r2, #44]	; 0x2c
  SPI0_PUSHR = 0xFF;
    641c:	str	r4, [r2, #52]	; 0x34
  while (!(SPI0_SR & SPI_SR_TCF)) {}
    641e:	ldr	r3, [r1, #44]	; 0x2c
    6420:	ldr	r2, [pc, #28]	; (6440 <Sd2Card::writeData(unsigned char, unsigned char const*)+0xc8>)
    6422:	cmp	r3, #0
    6424:	bge.n	641e <Sd2Card::writeData(unsigned char, unsigned char const*)+0xa6>
  return SPI0_POPR;
    6426:	ldr	r3, [r2, #56]	; 0x38
    6428:	uxtb	r3, r3
    642a:	and.w	r2, r3, #31
  }
#endif  // OPTIMIZE_HARDWARE_SPI
  spiSend(0xff);  // dummy crc
  spiSend(0xff);  // dummy crc

  status_ = spiRec();
    642e:	strb	r3, [r0, #1]
    6430:	sub.w	r0, r2, #5
    6434:	clz	r0, r0
    6438:	lsrs	r0, r0, #5
  if ((status_ & DATA_RES_MASK) != DATA_RES_ACCEPTED) {
    return false; // SD_CARD_ERROR_WRITE
  }
  return true;
}
    643a:	pop	{r4, r5, r6, r7}
    643c:	bx	lr
    643e:	nop
    6440:	.word	0x4002c000

00006444 <Sd2Card::SD_writeBlock(unsigned long, unsigned char const*)>:
 * \param[in] blockNumber Logical block to be written.
 * \param[in] src Pointer to the location of the data to be written.
 * \return The value one, true, is returned for success and
 * the value zero, false, is returned for failure.
 */
uint8_t Sd2Card::SD_writeBlock(uint32_t blockNumber, const uint8_t* src) {
    6444:	push	{r4, r5, r6, lr}
    6446:	mov	r4, r0
#if SD_PROTECT_BLOCK_ZERO
  // don't allow write to first block
  if (blockNumber == 0) {
    6448:	cbz	r1, 6468 <Sd2Card::SD_writeBlock(unsigned long, unsigned char const*)+0x24>
    goto fail; // SD_CARD_ERROR_WRITE_BLOCK_ZERO
  }
#endif  // SD_PROTECT_BLOCK_ZERO

  // use address if not SDHC card
  if (type_ != SD_CARD_TYPE_SDHC) blockNumber <<= 9;
    644a:	ldrb	r3, [r0, #2]
    644c:	cmp	r3, #3
    644e:	mov	r5, r1
    6450:	it	ne
    6452:	lslne	r5, r1, #9
    6454:	mov	r6, r2
  chipSelectLow();
    6456:	bl	6098 <Sd2Card::chipSelectLow()>
  if (cardCommand(CMD24, blockNumber)) {
    645a:	mov	r2, r5
    645c:	movs	r1, #24
    645e:	mov	r0, r4
    6460:	bl	61a0 <Sd2Card::cardCommand(unsigned char, unsigned long)>
    6464:	mov	r5, r0
    6466:	cbz	r0, 6472 <Sd2Card::SD_writeBlock(unsigned long, unsigned char const*)+0x2e>
  }
  chipSelectHigh();
  return true;

 fail:
  chipSelectHigh();
    6468:	mov	r0, r4
    646a:	bl	6030 <Sd2Card::chipSelectHigh()>
  return false;
    646e:	movs	r0, #0
}
    6470:	pop	{r4, r5, r6, pc}
  if (type_ != SD_CARD_TYPE_SDHC) blockNumber <<= 9;
  chipSelectLow();
  if (cardCommand(CMD24, blockNumber)) {
    goto fail; // SD_CARD_ERROR_CMD24
  }
  if (!writeData(DATA_START_BLOCK, src)) goto fail;
    6472:	mov	r2, r6
    6474:	movs	r1, #254	; 0xfe
    6476:	mov	r0, r4
    6478:	bl	6378 <Sd2Card::writeData(unsigned char, unsigned char const*)>
    647c:	cmp	r0, #0
    647e:	beq.n	6468 <Sd2Card::SD_writeBlock(unsigned long, unsigned char const*)+0x24>

  // wait for flash programming to complete
  if (!waitNotBusy(SD_WRITE_TIMEOUT)) {
    6480:	mov.w	r1, #600	; 0x258
    6484:	mov	r0, r4
    6486:	bl	614c <Sd2Card::waitNotBusy(unsigned int)>
    648a:	cmp	r0, #0
    648c:	beq.n	6468 <Sd2Card::SD_writeBlock(unsigned long, unsigned char const*)+0x24>
    goto fail; // SD_CARD_ERROR_WRITE_TIMEOUT
  }
  // response is r2 so get and check two bytes for nonzero
  if (cardCommand(CMD13, 0) || spiRec()) {
    648e:	mov	r2, r5
    6490:	movs	r1, #13
    6492:	mov	r0, r4
    6494:	bl	61a0 <Sd2Card::cardCommand(unsigned char, unsigned long)>
    6498:	cmp	r0, #0
    649a:	bne.n	6468 <Sd2Card::SD_writeBlock(unsigned long, unsigned char const*)+0x24>
  SPI.begin();
}

/** SPI receive a byte */
static  uint8_t spiRec() {
  SPI0_MCR |= SPI_MCR_CLR_RXF;
    649c:	ldr	r3, [pc, #44]	; (64cc <Sd2Card::SD_writeBlock(unsigned long, unsigned char const*)+0x88>)
    649e:	ldr	r2, [r3, #0]
  SPI0_SR = SPI_SR_TCF;
    64a0:	mov.w	r5, #2147483648	; 0x80000000
  SPI.begin();
}

/** SPI receive a byte */
static  uint8_t spiRec() {
  SPI0_MCR |= SPI_MCR_CLR_RXF;
    64a4:	orr.w	r2, r2, #1024	; 0x400
  SPI0_SR = SPI_SR_TCF;
  SPI0_PUSHR = 0xFF;
    64a8:	movs	r0, #255	; 0xff
  SPI.begin();
}

/** SPI receive a byte */
static  uint8_t spiRec() {
  SPI0_MCR |= SPI_MCR_CLR_RXF;
    64aa:	str	r2, [r3, #0]
  SPI0_SR = SPI_SR_TCF;
  SPI0_PUSHR = 0xFF;
  while (!(SPI0_SR & SPI_SR_TCF)) {}
    64ac:	mov	r1, r3
}

/** SPI receive a byte */
static  uint8_t spiRec() {
  SPI0_MCR |= SPI_MCR_CLR_RXF;
  SPI0_SR = SPI_SR_TCF;
    64ae:	str	r5, [r3, #44]	; 0x2c
  SPI0_PUSHR = 0xFF;
    64b0:	str	r0, [r3, #52]	; 0x34
  while (!(SPI0_SR & SPI_SR_TCF)) {}
    64b2:	ldr	r3, [r1, #44]	; 0x2c
    64b4:	ldr	r2, [pc, #20]	; (64cc <Sd2Card::SD_writeBlock(unsigned long, unsigned char const*)+0x88>)
    64b6:	cmp	r3, #0
    64b8:	bge.n	64b2 <Sd2Card::SD_writeBlock(unsigned long, unsigned char const*)+0x6e>
  return SPI0_POPR;
    64ba:	ldr	r3, [r2, #56]	; 0x38
  // wait for flash programming to complete
  if (!waitNotBusy(SD_WRITE_TIMEOUT)) {
    goto fail; // SD_CARD_ERROR_WRITE_TIMEOUT
  }
  // response is r2 so get and check two bytes for nonzero
  if (cardCommand(CMD13, 0) || spiRec()) {
    64bc:	tst.w	r3, #255	; 0xff
    64c0:	bne.n	6468 <Sd2Card::SD_writeBlock(unsigned long, unsigned char const*)+0x24>
    goto fail; // SD_CARD_ERROR_WRITE_PROGRAMMING
  }
  chipSelectHigh();
    64c2:	mov	r0, r4
    64c4:	bl	6030 <Sd2Card::chipSelectHigh()>
  return true;
    64c8:	movs	r0, #1
    64ca:	pop	{r4, r5, r6, pc}
    64cc:	.word	0x4002c000

000064d0 <_GLOBAL__sub_I__ZN7Sd2Card11cardCommandEhm>:
		}
		if (dataMode & 0x04) {
			c |= SPI_CTAR_CPHA;
			t = (t & 0xFFFF0FFF) | ((t & 0xF000) >> 4);
		}
		ctar = c | t;
    64d0:	ldr	r3, [pc, #4]	; (64d8 <_GLOBAL__sub_I__ZN7Sd2Card11cardCommandEhm+0x8>)
    64d2:	ldr	r2, [pc, #8]	; (64dc <_GLOBAL__sub_I__ZN7Sd2Card11cardCommandEhm+0xc>)
    64d4:	str	r2, [r3, #0]
    64d6:	bx	lr
    64d8:	.word	0x200129f8
    64dc:	.word	0x38002003

000064e0 <seesaw_NeoPixel::seesaw_NeoPixel(unsigned short, unsigned char, unsigned short, TwoWire*)>:

#include "seesaw_neopixel.h"
#include "Adafruit_seesaw.h"

// Constructor when length, pin and type are known at compile-time:
seesaw_NeoPixel::seesaw_NeoPixel(uint16_t n, uint8_t p, neoPixelType t, TwoWire *Wi) : 
    64e0:	push	{r3, r4, r5, r6, r7, lr}
    64e2:	mov	r4, r0
    64e4:	mov	r7, r1
  Adafruit_seesaw(Wi),
  begun(false), numLEDs(n), pin(p), brightness(0), pixels(NULL), endTime(0), type(t)
    64e6:	ldr	r1, [sp, #24]

#include "seesaw_neopixel.h"
#include "Adafruit_seesaw.h"

// Constructor when length, pin and type are known at compile-time:
seesaw_NeoPixel::seesaw_NeoPixel(uint16_t n, uint8_t p, neoPixelType t, TwoWire *Wi) : 
    64e8:	mov	r6, r2
    64ea:	mov	r5, r3
  Adafruit_seesaw(Wi),
  begun(false), numLEDs(n), pin(p), brightness(0), pixels(NULL), endTime(0), type(t)
    64ec:	bl	6700 <Adafruit_seesaw::Adafruit_seesaw(TwoWire*)>
    64f0:	movs	r1, #0
    64f2:	ldr	r0, [pc, #20]	; (6508 <seesaw_NeoPixel::seesaw_NeoPixel(unsigned short, unsigned char, unsigned short, TwoWire*)+0x28>)
    64f4:	strb	r6, [r4, #20]
    64f6:	strb	r1, [r4, #21]
    64f8:	str	r0, [r4, #0]
    64fa:	strh	r7, [r4, #16]
    64fc:	strh	r5, [r4, #36]	; 0x24
    64fe:	strb	r1, [r4, #15]
    6500:	str	r1, [r4, #24]
    6502:	str	r1, [r4, #32]
{
}
    6504:	mov	r0, r4
    6506:	pop	{r3, r4, r5, r6, r7, pc}
    6508:	.word	0x0009d80c

0000650c <seesaw_NeoPixel::~seesaw_NeoPixel()>:
  begun(false), numLEDs(0), numBytes(0), pin(-1), brightness(0), pixels(NULL),
  rOffset(1), gOffset(0), bOffset(2), wOffset(1), endTime(0)
{
}

seesaw_NeoPixel::~seesaw_NeoPixel() {
    650c:	push	{r4, lr}
    650e:	mov	r4, r0
  if(pixels)   free(pixels);
    6510:	ldr	r0, [r0, #24]
  begun(false), numLEDs(0), numBytes(0), pin(-1), brightness(0), pixels(NULL),
  rOffset(1), gOffset(0), bOffset(2), wOffset(1), endTime(0)
{
}

seesaw_NeoPixel::~seesaw_NeoPixel() {
    6512:	ldr	r3, [pc, #12]	; (6520 <seesaw_NeoPixel::~seesaw_NeoPixel()+0x14>)
    6514:	str	r3, [r4, #0]
  if(pixels)   free(pixels);
    6516:	cbz	r0, 651c <seesaw_NeoPixel::~seesaw_NeoPixel()+0x10>
    6518:	bl	ba38 <free>
}
    651c:	mov	r0, r4
    651e:	pop	{r4, pc}
    6520:	.word	0x0009d80c

00006524 <seesaw_NeoPixel::updateLength(unsigned short)>:
  setPin(pin);

  return true;
}

void seesaw_NeoPixel::updateLength(uint16_t n) {
    6524:	push	{r4, r5, r6, lr}
    6526:	mov	r5, r0
  if(pixels) free(pixels); // Free existing data (if any)
    6528:	ldr	r0, [r0, #24]
  setPin(pin);

  return true;
}

void seesaw_NeoPixel::updateLength(uint16_t n) {
    652a:	sub	sp, #16
    652c:	mov	r6, r1
  if(pixels) free(pixels); // Free existing data (if any)
    652e:	cbz	r0, 6534 <seesaw_NeoPixel::updateLength(unsigned short)+0x10>
    6530:	bl	ba38 <free>

  // Allocate new data -- note: ALL PIXELS ARE CLEARED
  numBytes = n * ((wOffset == rOffset) ? 3 : 4);
    6534:	ldrb	r3, [r5, #31]
    6536:	ldrb	r4, [r5, #28]
    6538:	cmp	r3, r4
    653a:	ite	ne
    653c:	movne	r4, #4
    653e:	moveq	r4, #3
    6540:	smulbb	r4, r4, r6
    6544:	uxth	r4, r4
    6546:	strh	r4, [r5, #18]
  if((pixels = (uint8_t *)malloc(numBytes))) {
    6548:	mov	r0, r4
    654a:	movs	r1, #1
    654c:	bl	b950 <calloc>
    6550:	str	r0, [r5, #24]
    6552:	cbz	r0, 6576 <seesaw_NeoPixel::updateLength(unsigned short)+0x52>
    memset(pixels, 0, numBytes);
    numLEDs = n;
    6554:	strh	r6, [r5, #16]
    6556:	lsrs	r6, r4, #8
    6558:	uxtb	r4, r4
  } else {
    numLEDs = numBytes = 0;
  }

  uint8_t buf[] = {(uint8_t)(numBytes >> 8), (uint8_t)(numBytes & 0xFF)};
  this->write(SEESAW_NEOPIXEL_BASE, SEESAW_NEOPIXEL_BUF_LENGTH, buf, 2);
    655a:	movs	r3, #2
    655c:	str	r3, [sp, #0]
    655e:	mov	r0, r5
    6560:	add	r3, sp, #12
    6562:	movs	r2, #3
    6564:	movs	r1, #14
    numLEDs = n;
  } else {
    numLEDs = numBytes = 0;
  }

  uint8_t buf[] = {(uint8_t)(numBytes >> 8), (uint8_t)(numBytes & 0xFF)};
    6566:	strb.w	r6, [sp, #12]
    656a:	strb.w	r4, [sp, #13]
  this->write(SEESAW_NEOPIXEL_BASE, SEESAW_NEOPIXEL_BUF_LENGTH, buf, 2);
    656e:	bl	68c4 <Adafruit_seesaw::write(unsigned char, unsigned char, unsigned char*, unsigned char)>
}
    6572:	add	sp, #16
    6574:	pop	{r4, r5, r6, pc}
  numBytes = n * ((wOffset == rOffset) ? 3 : 4);
  if((pixels = (uint8_t *)malloc(numBytes))) {
    memset(pixels, 0, numBytes);
    numLEDs = n;
  } else {
    numLEDs = numBytes = 0;
    6576:	mov	r4, r0
    6578:	strh	r0, [r5, #18]
    657a:	strh	r0, [r5, #16]
    657c:	mov	r6, r0
    657e:	b.n	655a <seesaw_NeoPixel::updateLength(unsigned short)+0x36>

00006580 <seesaw_NeoPixel::updateType(unsigned short)>:

  uint8_t buf[] = {(uint8_t)(numBytes >> 8), (uint8_t)(numBytes & 0xFF)};
  this->write(SEESAW_NEOPIXEL_BASE, SEESAW_NEOPIXEL_BUF_LENGTH, buf, 2);
}

void seesaw_NeoPixel::updateType(neoPixelType t) {
    6580:	push	{r3, r4, r5, r6, r7, lr}

  wOffset = (t >> 6) & 0b11; // See notes in header file
  rOffset = (t >> 4) & 0b11; // regarding R/G/B/W offsets
  gOffset = (t >> 2) & 0b11;
  bOffset =  t       & 0b11;
  is800KHz = (t < 256);      // 400 KHz flag is 1<<8
    6582:	cmp	r1, #255	; 0xff
}

void seesaw_NeoPixel::updateType(neoPixelType t) {
  boolean oldThreeBytesPerPixel = (wOffset == rOffset); // false if RGBW

  wOffset = (t >> 6) & 0b11; // See notes in header file
    6584:	ubfx	r3, r1, #6, #2
  uint8_t buf[] = {(uint8_t)(numBytes >> 8), (uint8_t)(numBytes & 0xFF)};
  this->write(SEESAW_NEOPIXEL_BASE, SEESAW_NEOPIXEL_BUF_LENGTH, buf, 2);
}

void seesaw_NeoPixel::updateType(neoPixelType t) {
  boolean oldThreeBytesPerPixel = (wOffset == rOffset); // false if RGBW
    6588:	ldrb	r5, [r0, #31]
    658a:	ldrb	r6, [r0, #28]

  wOffset = (t >> 6) & 0b11; // See notes in header file
    658c:	strb	r3, [r0, #31]
  rOffset = (t >> 4) & 0b11; // regarding R/G/B/W offsets
    658e:	ubfx	lr, r1, #4, #2
  gOffset = (t >> 2) & 0b11;
  bOffset =  t       & 0b11;
    6592:	and.w	r2, r1, #3
  is800KHz = (t < 256);      // 400 KHz flag is 1<<8
    6596:	ite	hi
    6598:	movhi	r3, #0
    659a:	movls	r3, #1

  uint8_t buf[] = {(uint8_t)(numBytes >> 8), (uint8_t)(numBytes & 0xFF)};
  this->write(SEESAW_NEOPIXEL_BASE, SEESAW_NEOPIXEL_BUF_LENGTH, buf, 2);
}

void seesaw_NeoPixel::updateType(neoPixelType t) {
    659c:	mov	r4, r0
  boolean oldThreeBytesPerPixel = (wOffset == rOffset); // false if RGBW

  wOffset = (t >> 6) & 0b11; // See notes in header file
  rOffset = (t >> 4) & 0b11; // regarding R/G/B/W offsets
  gOffset = (t >> 2) & 0b11;
    659e:	ubfx	r7, r1, #2, #2
  bOffset =  t       & 0b11;
    65a2:	strb	r2, [r0, #30]
  is800KHz = (t < 256);      // 400 KHz flag is 1<<8
    65a4:	strb	r3, [r0, #14]

void seesaw_NeoPixel::updateType(neoPixelType t) {
  boolean oldThreeBytesPerPixel = (wOffset == rOffset); // false if RGBW

  wOffset = (t >> 6) & 0b11; // See notes in header file
  rOffset = (t >> 4) & 0b11; // regarding R/G/B/W offsets
    65a6:	strb.w	lr, [r0, #28]
  gOffset = (t >> 2) & 0b11;
    65aa:	strb	r7, [r0, #29]
  bOffset =  t       & 0b11;
  is800KHz = (t < 256);      // 400 KHz flag is 1<<8

  this->write8(SEESAW_NEOPIXEL_BASE, SEESAW_NEOPIXEL_SPEED, is800KHz);
    65ac:	movs	r2, #2
    65ae:	movs	r1, #14
  uint8_t buf[] = {(uint8_t)(numBytes >> 8), (uint8_t)(numBytes & 0xFF)};
  this->write(SEESAW_NEOPIXEL_BASE, SEESAW_NEOPIXEL_BUF_LENGTH, buf, 2);
}

void seesaw_NeoPixel::updateType(neoPixelType t) {
  boolean oldThreeBytesPerPixel = (wOffset == rOffset); // false if RGBW
    65b0:	subs	r5, r5, r6
  rOffset = (t >> 4) & 0b11; // regarding R/G/B/W offsets
  gOffset = (t >> 2) & 0b11;
  bOffset =  t       & 0b11;
  is800KHz = (t < 256);      // 400 KHz flag is 1<<8

  this->write8(SEESAW_NEOPIXEL_BASE, SEESAW_NEOPIXEL_SPEED, is800KHz);
    65b2:	bl	6998 <Adafruit_seesaw::write8(unsigned char, unsigned char, unsigned char)>

  // If bytes-per-pixel has changed (and pixel data was previously
  // allocated), re-allocate to new size.  Will clear any data.
  if(pixels) {
    65b6:	ldr	r3, [r4, #24]
  uint8_t buf[] = {(uint8_t)(numBytes >> 8), (uint8_t)(numBytes & 0xFF)};
  this->write(SEESAW_NEOPIXEL_BASE, SEESAW_NEOPIXEL_BUF_LENGTH, buf, 2);
}

void seesaw_NeoPixel::updateType(neoPixelType t) {
  boolean oldThreeBytesPerPixel = (wOffset == rOffset); // false if RGBW
    65b8:	clz	r5, r5
    65bc:	lsrs	r5, r5, #5

  this->write8(SEESAW_NEOPIXEL_BASE, SEESAW_NEOPIXEL_SPEED, is800KHz);

  // If bytes-per-pixel has changed (and pixel data was previously
  // allocated), re-allocate to new size.  Will clear any data.
  if(pixels) {
    65be:	cbz	r3, 65dc <seesaw_NeoPixel::updateType(unsigned short)+0x5c>
    boolean newThreeBytesPerPixel = (wOffset == rOffset);
    if(newThreeBytesPerPixel != oldThreeBytesPerPixel) updateLength(numLEDs);
    65c0:	ldrb	r3, [r4, #31]
    65c2:	ldrb	r2, [r4, #28]
    65c4:	subs	r3, r3, r2
    65c6:	clz	r3, r3
    65ca:	lsrs	r3, r3, #5
    65cc:	cmp	r3, r5
    65ce:	beq.n	65dc <seesaw_NeoPixel::updateType(unsigned short)+0x5c>
    65d0:	ldrh	r1, [r4, #16]
    65d2:	mov	r0, r4
  }
}
    65d4:	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}

  // If bytes-per-pixel has changed (and pixel data was previously
  // allocated), re-allocate to new size.  Will clear any data.
  if(pixels) {
    boolean newThreeBytesPerPixel = (wOffset == rOffset);
    if(newThreeBytesPerPixel != oldThreeBytesPerPixel) updateLength(numLEDs);
    65d8:	b.w	6524 <seesaw_NeoPixel::updateLength(unsigned short)>
    65dc:	pop	{r3, r4, r5, r6, r7, pc}
    65de:	nop

000065e0 <seesaw_NeoPixel::begin(unsigned char, signed char)>:

seesaw_NeoPixel::~seesaw_NeoPixel() {
  if(pixels)   free(pixels);
}

bool seesaw_NeoPixel::begin(uint8_t addr, int8_t flow) {
    65e0:	push	{r4, r5, r6, lr}
  if(!Adafruit_seesaw::begin(addr, flow)) return false;
    65e2:	movs	r3, #1

seesaw_NeoPixel::~seesaw_NeoPixel() {
  if(pixels)   free(pixels);
}

bool seesaw_NeoPixel::begin(uint8_t addr, int8_t flow) {
    65e4:	mov	r4, r0
  if(!Adafruit_seesaw::begin(addr, flow)) return false;
    65e6:	bl	69b0 <Adafruit_seesaw::begin(unsigned char, signed char, bool)>
    65ea:	mov	r5, r0
    65ec:	cbz	r0, 6610 <seesaw_NeoPixel::begin(unsigned char, signed char)+0x30>

  updateType(type);
    65ee:	ldrh	r1, [r4, #36]	; 0x24
    65f0:	mov	r0, r4
    65f2:	bl	6580 <seesaw_NeoPixel::updateType(unsigned short)>
  updateLength(numLEDs);
    65f6:	ldrh	r1, [r4, #16]
    65f8:	mov	r0, r4
    65fa:	bl	6524 <seesaw_NeoPixel::updateLength(unsigned short)>
  setPin(pin);
    65fe:	ldrsb.w	r6, [r4, #20]
  endTime = micros(); // Save EOD time for latch on next call
}

// Set the output pin number
void seesaw_NeoPixel::setPin(uint8_t p) {
  this->write8(SEESAW_NEOPIXEL_BASE, SEESAW_NEOPIXEL_PIN, p);
    6602:	movs	r2, #1
    6604:	uxtb	r3, r6
    6606:	movs	r1, #14
    6608:	mov	r0, r4
    660a:	bl	6998 <Adafruit_seesaw::write8(unsigned char, unsigned char, unsigned char)>
  pin = p;
    660e:	strb	r6, [r4, #20]
  updateType(type);
  updateLength(numLEDs);
  setPin(pin);

  return true;
}
    6610:	mov	r0, r5
    6612:	pop	{r4, r5, r6, pc}

00006614 <seesaw_NeoPixel::show()>:
  }
}

void seesaw_NeoPixel::show(void) {

  if(!pixels) return;
    6614:	ldr	r3, [r0, #24]
    6616:	cbz	r3, 663c <seesaw_NeoPixel::show()+0x28>
    boolean newThreeBytesPerPixel = (wOffset == rOffset);
    if(newThreeBytesPerPixel != oldThreeBytesPerPixel) updateLength(numLEDs);
  }
}

void seesaw_NeoPixel::show(void) {
    6618:	push	{r4, lr}
    661a:	mov	r4, r0
    Color(uint8_t r, uint8_t g, uint8_t b),
    Color(uint8_t r, uint8_t g, uint8_t b, uint8_t w);
  uint32_t
    getPixelColor(uint16_t n) const;
  inline bool
    canShow(void) { return (micros() - endTime) >= 300L; }
    661c:	bl	7860 <micros>
  // put a delay at the end of the function, the ending time is noted and
  // the function will simply hold off (if needed) on issuing the
  // subsequent round of data until the latch time has elapsed.  This
  // allows the mainline code to start generating the next frame of data
  // rather than stalling for the latch.
  while(!canShow());
    6620:	ldr	r3, [r4, #32]
    6622:	subs	r0, r0, r3
    6624:	cmp.w	r0, #300	; 0x12c
    6628:	bcc.n	661c <seesaw_NeoPixel::show()+0x8>

  this->writeEmpty(SEESAW_NEOPIXEL_BASE, SEESAW_NEOPIXEL_SHOW);
    662a:	movs	r2, #5
    662c:	movs	r1, #14
    662e:	mov	r0, r4
    6630:	bl	6b08 <Adafruit_seesaw::writeEmpty(unsigned char, unsigned char)>
 
  endTime = micros(); // Save EOD time for latch on next call
    6634:	bl	7860 <micros>
    6638:	str	r0, [r4, #32]
    663a:	pop	{r4, pc}
    663c:	bx	lr
    663e:	nop

00006640 <seesaw_NeoPixel::setPixelColor(unsigned short, unsigned long)>:
  }
}

// Set pixel color from 'packed' 32-bit RGB color:
void seesaw_NeoPixel::setPixelColor(uint16_t n, uint32_t c) {
  if(n < numLEDs) {
    6640:	ldrh	r3, [r0, #16]
    6642:	cmp	r3, r1
    6644:	bls.n	66d4 <seesaw_NeoPixel::setPixelColor(unsigned short, unsigned long)+0x94>
    this->write(SEESAW_NEOPIXEL_BASE, SEESAW_NEOPIXEL_BUF, writeBuf, len + 2 );
  }
}

// Set pixel color from 'packed' 32-bit RGB color:
void seesaw_NeoPixel::setPixelColor(uint16_t n, uint32_t c) {
    6646:	push	{r4, r5, r6, r7, lr}
  if(n < numLEDs) {
    uint8_t *p,
      r = (uint8_t)(c >> 16),
      g = (uint8_t)(c >>  8),
      b = (uint8_t)c;
    if(brightness) { // See notes in setBrightness()
    6648:	ldrb	r4, [r0, #21]

// Set pixel color from 'packed' 32-bit RGB color:
void seesaw_NeoPixel::setPixelColor(uint16_t n, uint32_t c) {
  if(n < numLEDs) {
    uint8_t *p,
      r = (uint8_t)(c >> 16),
    664a:	lsrs	r6, r2, #16
      g = (uint8_t)(c >>  8),
    664c:	lsrs	r5, r2, #8
    this->write(SEESAW_NEOPIXEL_BASE, SEESAW_NEOPIXEL_BUF, writeBuf, len + 2 );
  }
}

// Set pixel color from 'packed' 32-bit RGB color:
void seesaw_NeoPixel::setPixelColor(uint16_t n, uint32_t c) {
    664e:	sub	sp, #20
    uint8_t *p,
      r = (uint8_t)(c >> 16),
      g = (uint8_t)(c >>  8),
      b = (uint8_t)c;
    if(brightness) { // See notes in setBrightness()
      r = (r * brightness) >> 8;
    6650:	uxtb	r6, r6
      g = (g * brightness) >> 8;
    6652:	uxtb	r5, r5
      b = (b * brightness) >> 8;
    6654:	uxtb.w	lr, r2
  if(n < numLEDs) {
    uint8_t *p,
      r = (uint8_t)(c >> 16),
      g = (uint8_t)(c >>  8),
      b = (uint8_t)c;
    if(brightness) { // See notes in setBrightness()
    6658:	cbz	r4, 6672 <seesaw_NeoPixel::setPixelColor(unsigned short, unsigned long)+0x32>
      r = (r * brightness) >> 8;
    665a:	mul.w	r6, r4, r6
      g = (g * brightness) >> 8;
    665e:	mul.w	r5, r4, r5
      b = (b * brightness) >> 8;
    6662:	mul.w	lr, r4, lr
    uint8_t *p,
      r = (uint8_t)(c >> 16),
      g = (uint8_t)(c >>  8),
      b = (uint8_t)c;
    if(brightness) { // See notes in setBrightness()
      r = (r * brightness) >> 8;
    6666:	ubfx	r6, r6, #8, #8
      g = (g * brightness) >> 8;
    666a:	ubfx	r5, r5, #8, #8
      b = (b * brightness) >> 8;
    666e:	ubfx	lr, lr, #8, #8
    }
    if(wOffset == rOffset) {
    6672:	ldrb	r7, [r0, #31]
    6674:	ldrb	r3, [r0, #28]
    6676:	cmp	r3, r7
    6678:	beq.n	66e0 <seesaw_NeoPixel::setPixelColor(unsigned short, unsigned long)+0xa0>
      p = &pixels[n * 3];
    } else {
      p = &pixels[n * 4];
    667a:	ldr	r3, [r0, #24]
    667c:	add.w	r3, r3, r1, lsl #2
      uint8_t w = (uint8_t)(c >> 24);
    6680:	lsrs	r2, r2, #24
      p[wOffset] = brightness ? ((w * brightness) >> 8) : w;
    6682:	add	r7, r3
    6684:	cbnz	r4, 66d6 <seesaw_NeoPixel::setPixelColor(unsigned short, unsigned long)+0x96>
    }
    if(wOffset == rOffset) {
      p = &pixels[n * 3];
    } else {
      p = &pixels[n * 4];
      uint8_t w = (uint8_t)(c >> 24);
    6686:	uxtb	r2, r2
      p[wOffset] = brightness ? ((w * brightness) >> 8) : w;
    6688:	strb	r2, [r7, #0]
    668a:	ldrb	r7, [r0, #28]
    }
    p[rOffset] = r;
    668c:	strb	r6, [r3, r7]
    p[gOffset] = g;
    668e:	ldrb	r2, [r0, #29]
    6690:	strb	r5, [r3, r2]
    p[bOffset] = b;
    6692:	ldrb	r2, [r0, #30]
    6694:	strb.w	lr, [r3, r2]

    uint8_t len = (wOffset == rOffset ? 3 : 4);
    6698:	ldrb	r4, [r0, #31]
    669a:	ldrb	r2, [r0, #28]
    669c:	cmp	r4, r2
    669e:	beq.n	66ea <seesaw_NeoPixel::setPixelColor(unsigned short, unsigned long)+0xaa>
    66a0:	movs	r2, #4
    66a2:	mov	r5, r2
    66a4:	movs	r6, #6
    uint16_t offset = n * len;
    66a6:	smulbb	r1, r1, r5
    66aa:	uxth	r5, r1
    66ac:	mov	r4, r0

    uint8_t writeBuf[6];
    writeBuf[0] = (offset >> 8);
    writeBuf[1] = offset;
    memcpy(&writeBuf[2], p, len);
    66ae:	mov	r1, r3

    uint8_t len = (wOffset == rOffset ? 3 : 4);
    uint16_t offset = n * len;

    uint8_t writeBuf[6];
    writeBuf[0] = (offset >> 8);
    66b0:	asrs	r7, r5, #8
    writeBuf[1] = offset;
    memcpy(&writeBuf[2], p, len);
    66b2:	add.w	r0, sp, #10
    uint8_t len = (wOffset == rOffset ? 3 : 4);
    uint16_t offset = n * len;

    uint8_t writeBuf[6];
    writeBuf[0] = (offset >> 8);
    writeBuf[1] = offset;
    66b6:	strb.w	r5, [sp, #9]

    uint8_t len = (wOffset == rOffset ? 3 : 4);
    uint16_t offset = n * len;

    uint8_t writeBuf[6];
    writeBuf[0] = (offset >> 8);
    66ba:	strb.w	r7, [sp, #8]
    writeBuf[1] = offset;
    memcpy(&writeBuf[2], p, len);
    66be:	bl	6f10 <memcpy>

    this->write(SEESAW_NEOPIXEL_BASE, SEESAW_NEOPIXEL_BUF, writeBuf, len + 2 );
    66c2:	str	r6, [sp, #0]
    66c4:	mov	r0, r4
    66c6:	add	r3, sp, #8
    66c8:	movs	r2, #4
    66ca:	movs	r1, #14
    66cc:	bl	68c4 <Adafruit_seesaw::write(unsigned char, unsigned char, unsigned char*, unsigned char)>
  }
}
    66d0:	add	sp, #20
    66d2:	pop	{r4, r5, r6, r7, pc}
    66d4:	bx	lr
    if(wOffset == rOffset) {
      p = &pixels[n * 3];
    } else {
      p = &pixels[n * 4];
      uint8_t w = (uint8_t)(c >> 24);
      p[wOffset] = brightness ? ((w * brightness) >> 8) : w;
    66d6:	mul.w	r2, r4, r2
    66da:	ubfx	r2, r2, #8, #8
    66de:	b.n	6688 <seesaw_NeoPixel::setPixelColor(unsigned short, unsigned long)+0x48>
      r = (r * brightness) >> 8;
      g = (g * brightness) >> 8;
      b = (b * brightness) >> 8;
    }
    if(wOffset == rOffset) {
      p = &pixels[n * 3];
    66e0:	ldr	r2, [r0, #24]
    66e2:	add.w	r3, r1, r1, lsl #1
    66e6:	add	r3, r2
    66e8:	b.n	668c <seesaw_NeoPixel::setPixelColor(unsigned short, unsigned long)+0x4c>
    }
    p[rOffset] = r;
    p[gOffset] = g;
    p[bOffset] = b;

    uint8_t len = (wOffset == rOffset ? 3 : 4);
    66ea:	movs	r2, #3
    66ec:	mov	r5, r2
    66ee:	movs	r6, #5
    66f0:	b.n	66a6 <seesaw_NeoPixel::setPixelColor(unsigned short, unsigned long)+0x66>
    66f2:	nop

000066f4 <seesaw_NeoPixel::Color(unsigned char, unsigned char, unsigned char)>:
}

// Convert separate R,G,B into packed 32-bit RGB color.
// Packed format is always RGB, regardless of LED strand color order.
uint32_t seesaw_NeoPixel::Color(uint8_t r, uint8_t g, uint8_t b) {
  return ((uint32_t)r << 16) | ((uint32_t)g <<  8) | b;
    66f4:	orr.w	r2, r2, r1, lsl #8
}
    66f8:	orr.w	r0, r2, r0, lsl #16
    66fc:	bx	lr
    66fe:	nop

00006700 <Adafruit_seesaw::Adafruit_seesaw(TwoWire*)>:
class __FlashStringHelper;

class Print
{
  public:
	constexpr Print() : write_error(0) {}
    6700:	movs	r2, #0
 *****************************************************************************************
 *  @brief      Create a seesaw object on a given I2C bus
 *
 *  @param      i2c_bus the I2C bus connected to the seesaw, defaults to "Wire"
 ****************************************************************************************/
Adafruit_seesaw::Adafruit_seesaw(TwoWire *i2c_bus)
    6702:	ldr	r3, [pc, #16]	; (6714 <Adafruit_seesaw::Adafruit_seesaw(TwoWire*)+0x14>)
    6704:	strb	r2, [r0, #4]
    6706:	str	r3, [r0, #0]
{
  if (i2c_bus == NULL) {
    6708:	cbz	r1, 670e <Adafruit_seesaw::Adafruit_seesaw(TwoWire*)+0xe>
    _i2cbus = &Wire;
  } else {
    _i2cbus = i2c_bus;
    670a:	str	r1, [r0, #8]
  }
}
    670c:	bx	lr
 *  @param      i2c_bus the I2C bus connected to the seesaw, defaults to "Wire"
 ****************************************************************************************/
Adafruit_seesaw::Adafruit_seesaw(TwoWire *i2c_bus)
{
  if (i2c_bus == NULL) {
    _i2cbus = &Wire;
    670e:	ldr	r3, [pc, #8]	; (6718 <Adafruit_seesaw::Adafruit_seesaw(TwoWire*)+0x18>)
    6710:	str	r3, [r0, #8]
    6712:	bx	lr
    6714:	.word	0x0009dca4
    6718:	.word	0x20007f20

0000671c <Adafruit_seesaw::read(unsigned char, unsigned char, unsigned char*, unsigned char, unsigned short)>:
 *				out the data. This is required for some seesaw functions (ex. reading ADC data)
 *
 *  @return     none
 ****************************************************************************************/
void Adafruit_seesaw::read(uint8_t regHigh, uint8_t regLow, uint8_t *buf, uint8_t num, uint16_t delay)
{
    671c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    6720:	sub	sp, #20
    6722:	ldrb.w	r9, [sp, #56]	; 0x38
    6726:	ldrh.w	r4, [sp, #60]	; 0x3c
	uint8_t pos = 0;
	
	//on arduino we need to read in 32 byte chunks
	while(pos < num){
    672a:	cmp.w	r9, #0
    672e:	beq.n	6824 <L_241_delayMicroseconds+0x82>
    6730:	rsb	r4, r4, r4, lsl #4
    6734:	mov	r7, r3
    6736:	ldr.w	r8, [pc, #248]	; 6830 <L_241_delayMicroseconds+0x8e>
    673a:	str	r2, [sp, #12]
    673c:	lsls	r3, r4, #2
    673e:	str	r1, [sp, #8]
    6740:	mov	r5, r0
    6742:	str	r3, [sp, #4]
    6744:	movs	r4, #0
	void end();
	void setClock(uint32_t frequency);
	void setSDA(uint8_t pin);
	void setSCL(uint8_t pin);
	void beginTransmission(uint8_t address) {
		txBuffer[0] = (address << 1);
    6746:	ldrb	r2, [r5, #5]
		
		uint8_t read_now = min(32, num - pos);
		_i2cbus->beginTransmission((uint8_t)_i2caddr);
    6748:	ldr	r3, [r5, #8]
		_i2cbus->write((uint8_t)regHigh);
    674a:	ldr	r1, [sp, #8]
    674c:	lsls	r2, r2, #1
    674e:	strb.w	r2, [r3, #59]	; 0x3b
		transmitting = 1;
    6752:	mov.w	r2, #1
    6756:	strb.w	r2, [r3, #94]	; 0x5e
		txBufferLength = 1;
    675a:	strb.w	r2, [r3, #93]	; 0x5d
    675e:	ldr	r0, [r5, #8]
    6760:	ldr	r3, [r0, #0]
    6762:	rsb	r6, r4, r9
    6766:	cmp	r6, #32
    6768:	ldr	r3, [r3, #0]
    676a:	it	ge
    676c:	movge	r6, #32
    676e:	blx	r3
		_i2cbus->write((uint8_t)regLow);
    6770:	ldr	r0, [r5, #8]
    6772:	ldr	r1, [sp, #12]
    6774:	ldr	r3, [r0, #0]
    6776:	ldr	r3, [r3, #0]
    6778:	blx	r3
		if(_flow != -1) while(!::digitalRead(_flow));
    677a:	ldrsb.w	r0, [r5, #12]
    677e:	adds	r2, r0, #1
	uint8_t pos = 0;
	
	//on arduino we need to read in 32 byte chunks
	while(pos < num){
		
		uint8_t read_now = min(32, num - pos);
    6780:	uxtb	r6, r6
		_i2cbus->beginTransmission((uint8_t)_i2caddr);
		_i2cbus->write((uint8_t)regHigh);
		_i2cbus->write((uint8_t)regLow);
		if(_flow != -1) while(!::digitalRead(_flow));
    6782:	bne.n	678a <Adafruit_seesaw::read(unsigned char, unsigned char, unsigned char*, unsigned char, unsigned short)+0x6e>
    6784:	b.n	6794 <Adafruit_seesaw::read(unsigned char, unsigned char, unsigned char*, unsigned char, unsigned short)+0x78>
    6786:	ldrsb.w	r0, [r5, #12]
    678a:	uxtb	r0, r0
    678c:	bl	7838 <digitalRead>
    6790:	cmp	r0, #0
    6792:	beq.n	6786 <Adafruit_seesaw::read(unsigned char, unsigned char, unsigned char*, unsigned char, unsigned short)+0x6a>
	void beginTransmission(int address) {
		beginTransmission((uint8_t)address);
	}
	uint8_t endTransmission(uint8_t sendStop);
	uint8_t endTransmission(void) {
		return endTransmission(1);
    6794:	movs	r1, #1
    6796:	ldr	r0, [r5, #8]
    6798:	bl	535c <TwoWire::endTransmission(unsigned char)>
	uint32_t n = usec;
#elif F_CPU == 2000000
	uint32_t n = usec >> 1;
#endif
    // changed because a delay of 1 micro Sec @ 2MHz will be 0
	if (n == 0) return;
    679c:	ldr	r3, [sp, #4]
    679e:	cbz	r3, 67a6 <L_241_delayMicroseconds+0x4>
#else
		"subs   %0, #1"				"\n\t"
		"bne    L_%=_delayMicroseconds"		"\n"
		: "+r" (n) :
#endif
	);
    67a0:	ldr	r3, [sp, #4]

000067a2 <L_241_delayMicroseconds>:
    67a2:	subs	r3, #1
    67a4:	bne.n	67a2 <L_241_delayMicroseconds>
		_i2cbus->endTransmission();

		//TODO: tune this
		delayMicroseconds(delay);

		if(_flow != -1) while(!::digitalRead(_flow));
    67a6:	ldrsb.w	r0, [r5, #12]
    67aa:	adds	r3, r0, #1
    67ac:	bne.n	67b4 <L_241_delayMicroseconds+0x12>
    67ae:	b.n	67be <L_241_delayMicroseconds+0x1c>
    67b0:	ldrsb.w	r0, [r5, #12]
    67b4:	uxtb	r0, r0
    67b6:	bl	7838 <digitalRead>
    67ba:	cmp	r0, #0
    67bc:	beq.n	67b0 <L_241_delayMicroseconds+0xe>
	}
	uint8_t requestFrom(uint8_t address, uint8_t quantity, uint8_t sendStop);
	uint8_t requestFrom(uint8_t address, uint8_t quantity) {
		return requestFrom(address, quantity, (uint8_t)1);
    67be:	movs	r3, #1
    67c0:	mov	r2, r6
    67c2:	ldrb	r1, [r5, #5]
    67c4:	ldr	r0, [r5, #8]
    67c6:	bl	5470 <TwoWire::requestFrom(unsigned char, unsigned char, unsigned char)>
		_i2cbus->requestFrom((uint8_t)_i2caddr, read_now);
		
		for(int i=0; i<read_now; i++){
    67ca:	cbz	r6, 6820 <L_241_delayMicroseconds+0x7e>
    67cc:	mov.w	fp, #0
    67d0:	b.n	67f8 <L_241_delayMicroseconds+0x56>
	virtual size_t write(const uint8_t *data, size_t quantity);
	virtual int available(void) {
		return rxBufferLength - rxBufferIndex;
	}
	virtual int read(void) {
		if (rxBufferIndex >= rxBufferLength) return -1;
    67d2:	ldrb.w	r3, [r0, #56]	; 0x38
    67d6:	ldrb.w	r2, [r0, #57]	; 0x39
    67da:	cmp	r2, r3
		return rxBuffer[rxBufferIndex++];
    67dc:	add.w	lr, r3, #1
    67e0:	add.w	r1, r0, r3
	virtual size_t write(const uint8_t *data, size_t quantity);
	virtual int available(void) {
		return rxBufferLength - rxBufferIndex;
	}
	virtual int read(void) {
		if (rxBufferIndex >= rxBufferLength) return -1;
    67e4:	bls.n	682a <L_241_delayMicroseconds+0x88>
		return rxBuffer[rxBufferIndex++];
    67e6:	strb.w	lr, [r0, #56]	; 0x38
    67ea:	ldrb	r0, [r1, #24]
			buf[pos] = _i2cbus->read();
    67ec:	strb.w	r0, [r7, sl]
		delayMicroseconds(delay);

		if(_flow != -1) while(!::digitalRead(_flow));
		_i2cbus->requestFrom((uint8_t)_i2caddr, read_now);
		
		for(int i=0; i<read_now; i++){
    67f0:	add.w	fp, fp, #1
    67f4:	cmp	fp, r6
    67f6:	beq.n	681a <L_241_delayMicroseconds+0x78>
			buf[pos] = _i2cbus->read();
    67f8:	ldr	r0, [r5, #8]
    67fa:	ldr	r3, [r0, #0]
    67fc:	ldr	r3, [r3, #20]
    67fe:	add.w	sl, r4, fp
    6802:	cmp	r3, r8
    6804:	uxtb.w	sl, sl
    6808:	beq.n	67d2 <L_241_delayMicroseconds+0x30>
    680a:	blx	r3
		delayMicroseconds(delay);

		if(_flow != -1) while(!::digitalRead(_flow));
		_i2cbus->requestFrom((uint8_t)_i2caddr, read_now);
		
		for(int i=0; i<read_now; i++){
    680c:	add.w	fp, fp, #1
    6810:	uxtb	r0, r0
    6812:	cmp	fp, r6
			buf[pos] = _i2cbus->read();
    6814:	strb.w	r0, [r7, sl]
		delayMicroseconds(delay);

		if(_flow != -1) while(!::digitalRead(_flow));
		_i2cbus->requestFrom((uint8_t)_i2caddr, read_now);
		
		for(int i=0; i<read_now; i++){
    6818:	bne.n	67f8 <L_241_delayMicroseconds+0x56>
    681a:	add	r4, fp
    681c:	and.w	r4, r4, #255	; 0xff
void Adafruit_seesaw::read(uint8_t regHigh, uint8_t regLow, uint8_t *buf, uint8_t num, uint16_t delay)
{
	uint8_t pos = 0;
	
	//on arduino we need to read in 32 byte chunks
	while(pos < num){
    6820:	cmp	r9, r4
    6822:	bhi.n	6746 <Adafruit_seesaw::read(unsigned char, unsigned char, unsigned char*, unsigned char, unsigned short)+0x2a>
		for(int i=0; i<read_now; i++){
			buf[pos] = _i2cbus->read();
			pos++;
		}
	}
}
    6824:	add	sp, #20
    6826:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	virtual size_t write(const uint8_t *data, size_t quantity);
	virtual int available(void) {
		return rxBufferLength - rxBufferIndex;
	}
	virtual int read(void) {
		if (rxBufferIndex >= rxBufferLength) return -1;
    682a:	movs	r0, #255	; 0xff
    682c:	b.n	67ec <L_241_delayMicroseconds+0x4a>
    682e:	nop
    6830:	.word	0x0000500d

00006834 <Adafruit_seesaw::analogRead(unsigned char)>:
 *				On the default seesaw firmware on the SAMD09 breakout, pins 2, 3, and 4 are ADC-enabled.
 *
 *  @return     the analog value. This is an integer between 0 and 1023
 ****************************************************************************************/
uint16_t Adafruit_seesaw::analogRead(uint8_t pin)
{
    6834:	push	{r4, lr}
	uint8_t buf[2];
	uint8_t p;
	switch(pin){
    6836:	subs	r1, #2
 *				On the default seesaw firmware on the SAMD09 breakout, pins 2, 3, and 4 are ADC-enabled.
 *
 *  @return     the analog value. This is an integer between 0 and 1023
 ****************************************************************************************/
uint16_t Adafruit_seesaw::analogRead(uint8_t pin)
{
    6838:	sub	sp, #16
	uint8_t buf[2];
	uint8_t p;
	switch(pin){
    683a:	cmp	r1, #3
    683c:	bhi.n	687e <Adafruit_seesaw::analogRead(unsigned char)+0x4a>
    683e:	tbb	[pc, r1]
    6842:	.short	0x0218
    6844:	.short	0x1a1c
    6846:	movs	r2, #8
		default:
			return 0;
			break;
	}

	this->read(SEESAW_ADC_BASE, SEESAW_ADC_CHANNEL_OFFSET + p, buf, 2, 500);
    6848:	movs	r1, #2
    684a:	mov.w	r3, #500	; 0x1f4
    684e:	stmia.w	sp, {r1, r3}
    6852:	add	r3, sp, #12
    6854:	movs	r1, #9
    6856:	bl	671c <Adafruit_seesaw::read(unsigned char, unsigned char, unsigned char*, unsigned char, unsigned short)>
	uint16_t ret = ((uint16_t)buf[0] << 8) | buf[1];
    685a:	ldrb.w	r4, [sp, #12]
    685e:	ldrb.w	r3, [sp, #13]
  	delay(1);
    6862:	movs	r0, #1
			return 0;
			break;
	}

	this->read(SEESAW_ADC_BASE, SEESAW_ADC_CHANNEL_OFFSET + p, buf, 2, 500);
	uint16_t ret = ((uint16_t)buf[0] << 8) | buf[1];
    6864:	orr.w	r4, r3, r4, lsl #8
  	delay(1);
    6868:	bl	78a8 <delay>
	return ret;
    686c:	mov	r0, r4
}
    686e:	add	sp, #16
    6870:	pop	{r4, pc}
 ****************************************************************************************/
uint16_t Adafruit_seesaw::analogRead(uint8_t pin)
{
	uint8_t buf[2];
	uint8_t p;
	switch(pin){
    6872:	movs	r2, #7
    6874:	b.n	6848 <Adafruit_seesaw::analogRead(unsigned char)+0x14>
		case ADC_INPUT_0_PIN: p = 0; break;
		case ADC_INPUT_1_PIN: p = 1; break;
		case ADC_INPUT_2_PIN: p = 2; break;
		case ADC_INPUT_3_PIN: p = 3; break;
    6876:	movs	r2, #10
    6878:	b.n	6848 <Adafruit_seesaw::analogRead(unsigned char)+0x14>
	uint8_t buf[2];
	uint8_t p;
	switch(pin){
		case ADC_INPUT_0_PIN: p = 0; break;
		case ADC_INPUT_1_PIN: p = 1; break;
		case ADC_INPUT_2_PIN: p = 2; break;
    687a:	movs	r2, #9
    687c:	b.n	6848 <Adafruit_seesaw::analogRead(unsigned char)+0x14>
		case ADC_INPUT_3_PIN: p = 3; break;
		default:
			return 0;
    687e:	movs	r0, #0
    6880:	b.n	686e <Adafruit_seesaw::analogRead(unsigned char)+0x3a>
    6882:	nop

00006884 <Adafruit_seesaw::readKeypad(keyEventRaw*, unsigned char)>:
 *  @param		count the number of events to read
 *
 *  @return     none
 ****************************************************************************************/
void Adafruit_seesaw::readKeypad(keyEventRaw *buf, uint8_t count)
{
    6884:	push	{r4, lr}
    6886:	sub	sp, #8
	return this->read(SEESAW_KEYPAD_BASE, SEESAW_KEYPAD_FIFO, (uint8_t *)buf, count, 1000);
    6888:	mov.w	r4, #1000	; 0x3e8
    688c:	str	r2, [sp, #0]
    688e:	movs	r2, #16
    6890:	mov	r3, r1
    6892:	str	r4, [sp, #4]
    6894:	mov	r1, r2
    6896:	bl	671c <Adafruit_seesaw::read(unsigned char, unsigned char, unsigned char*, unsigned char, unsigned short)>
}
    689a:	add	sp, #8
    689c:	pop	{r4, pc}
    689e:	nop

000068a0 <Adafruit_seesaw::getKeypadCount()>:
 *****************************************************************************************
 *  @brief      Get the number of events currently in the fifo
 *  @return     the number of events in the fifo
 ****************************************************************************************/
uint8_t Adafruit_seesaw::getKeypadCount()
{
    68a0:	push	{lr}
 *  @return     the value between 0 and 255 read from the passed register
 ****************************************************************************************/
uint8_t Adafruit_seesaw::read8(byte regHigh, byte regLow, uint16_t delay)
{
	uint8_t ret;
	this->read(regHigh, regLow, &ret, 1, delay);
    68a2:	movs	r2, #1
 *****************************************************************************************
 *  @brief      Get the number of events currently in the fifo
 *  @return     the number of events in the fifo
 ****************************************************************************************/
uint8_t Adafruit_seesaw::getKeypadCount()
{
    68a4:	sub	sp, #20
 *  @return     the value between 0 and 255 read from the passed register
 ****************************************************************************************/
uint8_t Adafruit_seesaw::read8(byte regHigh, byte regLow, uint16_t delay)
{
	uint8_t ret;
	this->read(regHigh, regLow, &ret, 1, delay);
    68a6:	mov.w	r3, #500	; 0x1f4
    68aa:	stmia.w	sp, {r2, r3}
    68ae:	movs	r1, #16
    68b0:	add.w	r3, sp, #15
    68b4:	movs	r2, #4
    68b6:	bl	671c <Adafruit_seesaw::read(unsigned char, unsigned char, unsigned char*, unsigned char, unsigned short)>
 *  @return     the number of events in the fifo
 ****************************************************************************************/
uint8_t Adafruit_seesaw::getKeypadCount()
{
	return this->read8(SEESAW_KEYPAD_BASE, SEESAW_KEYPAD_COUNT, 500);
}
    68ba:	ldrb.w	r0, [sp, #15]
    68be:	add	sp, #20
    68c0:	ldr.w	pc, [sp], #4

000068c4 <Adafruit_seesaw::write(unsigned char, unsigned char, unsigned char*, unsigned char)>:
 *	@param		num the number of bytes to write.
 *
 *  @return     none
 ****************************************************************************************/
void Adafruit_seesaw::write(uint8_t regHigh, uint8_t regLow, uint8_t *buf, uint8_t num)
{ 
    68c4:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	void end();
	void setClock(uint32_t frequency);
	void setSDA(uint8_t pin);
	void setSCL(uint8_t pin);
	void beginTransmission(uint8_t address) {
		txBuffer[0] = (address << 1);
    68c8:	ldrb	r5, [r0, #5]
    68ca:	ldrb.w	r6, [sp, #24]
    68ce:	mov	r4, r0
		transmitting = 1;
    68d0:	movs	r7, #1
	_i2cbus->beginTransmission((uint8_t)_i2caddr);
    68d2:	ldr	r0, [r0, #8]
	void end();
	void setClock(uint32_t frequency);
	void setSDA(uint8_t pin);
	void setSCL(uint8_t pin);
	void beginTransmission(uint8_t address) {
		txBuffer[0] = (address << 1);
    68d4:	lsls	r5, r7
		transmitting = 1;
    68d6:	strb.w	r7, [r0, #94]	; 0x5e
	void end();
	void setClock(uint32_t frequency);
	void setSDA(uint8_t pin);
	void setSCL(uint8_t pin);
	void beginTransmission(uint8_t address) {
		txBuffer[0] = (address << 1);
    68da:	strb.w	r5, [r0, #59]	; 0x3b
		transmitting = 1;
		txBufferLength = 1;
    68de:	strb.w	r7, [r0, #93]	; 0x5d
	_i2cbus->write((uint8_t)regHigh);
    68e2:	ldr	r0, [r4, #8]
    68e4:	ldr	r5, [r0, #0]
    68e6:	ldr.w	r8, [r5]
 *	@param		num the number of bytes to write.
 *
 *  @return     none
 ****************************************************************************************/
void Adafruit_seesaw::write(uint8_t regHigh, uint8_t regLow, uint8_t *buf, uint8_t num)
{ 
    68ea:	mov	r7, r3
    68ec:	mov	r5, r2
	_i2cbus->beginTransmission((uint8_t)_i2caddr);
	_i2cbus->write((uint8_t)regHigh);
    68ee:	blx	r8
	_i2cbus->write((uint8_t)regLow);
    68f0:	ldr	r0, [r4, #8]
    68f2:	ldr	r3, [r0, #0]
    68f4:	mov	r1, r5
    68f6:	ldr	r3, [r3, #0]
    68f8:	blx	r3
	_i2cbus->write((uint8_t *)buf, num);
    68fa:	ldr	r0, [r4, #8]
    68fc:	ldr	r5, [r0, #0]
    68fe:	mov	r2, r6
    6900:	ldr	r3, [r5, #4]
    6902:	mov	r1, r7
    6904:	blx	r3
	if(_flow != -1) while(!::digitalRead(_flow));
    6906:	ldrsb.w	r0, [r4, #12]
    690a:	adds	r3, r0, #1
    690c:	bne.n	6914 <Adafruit_seesaw::write(unsigned char, unsigned char, unsigned char*, unsigned char)+0x50>
    690e:	b.n	691e <Adafruit_seesaw::write(unsigned char, unsigned char, unsigned char*, unsigned char)+0x5a>
    6910:	ldrsb.w	r0, [r4, #12]
    6914:	uxtb	r0, r0
    6916:	bl	7838 <digitalRead>
    691a:	cmp	r0, #0
    691c:	beq.n	6910 <Adafruit_seesaw::write(unsigned char, unsigned char, unsigned char*, unsigned char)+0x4c>
	void beginTransmission(int address) {
		beginTransmission((uint8_t)address);
	}
	uint8_t endTransmission(uint8_t sendStop);
	uint8_t endTransmission(void) {
		return endTransmission(1);
    691e:	ldr	r0, [r4, #8]
    6920:	movs	r1, #1
	_i2cbus->endTransmission();
}
    6922:	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    6926:	b.w	535c <TwoWire::endTransmission(unsigned char)>
    692a:	nop

0000692c <Adafruit_seesaw::setPWMFreq(unsigned char, unsigned short)>:
 *	@param		freq the frequency to set.
 *
 *  @return     none
 ****************************************************************************************/
void Adafruit_seesaw::setPWMFreq(uint8_t pin, uint16_t freq)
{
    692c:	subs	r1, #4
    692e:	uxtb	r1, r1
    6930:	cmp	r1, #3
    6932:	bhi.n	6962 <Adafruit_seesaw::setPWMFreq(unsigned char, unsigned short)+0x36>
    6934:	push	{r4, r5, r6, lr}
    6936:	ldr	r3, [pc, #44]	; (6964 <Adafruit_seesaw::setPWMFreq(unsigned char, unsigned short)+0x38>)
    6938:	ldrsb	r5, [r3, r1]
		case PWM_2_PIN: p = 2; break;
		case PWM_3_PIN: p = 3; break;
		default:
			break;
	}
	if(p > -1){
    693a:	cmp	r5, #0
 *	@param		freq the frequency to set.
 *
 *  @return     none
 ****************************************************************************************/
void Adafruit_seesaw::setPWMFreq(uint8_t pin, uint16_t freq)
{
    693c:	sub	sp, #16
		case PWM_2_PIN: p = 2; break;
		case PWM_3_PIN: p = 3; break;
		default:
			break;
	}
	if(p > -1){
    693e:	blt.n	695e <Adafruit_seesaw::setPWMFreq(unsigned char, unsigned short)+0x32>
		uint8_t cmd[] = {(uint8_t)p, (uint8_t)(freq >> 8), (uint8_t)freq};
		this->write(SEESAW_TIMER_BASE, SEESAW_TIMER_FREQ, cmd, 3);
    6940:	movs	r3, #3
    6942:	mov	r4, r2
		case PWM_3_PIN: p = 3; break;
		default:
			break;
	}
	if(p > -1){
		uint8_t cmd[] = {(uint8_t)p, (uint8_t)(freq >> 8), (uint8_t)freq};
    6944:	asrs	r6, r2, #8
		this->write(SEESAW_TIMER_BASE, SEESAW_TIMER_FREQ, cmd, 3);
    6946:	str	r3, [sp, #0]
    6948:	movs	r2, #2
    694a:	add	r3, sp, #12
    694c:	movs	r1, #8
		case PWM_3_PIN: p = 3; break;
		default:
			break;
	}
	if(p > -1){
		uint8_t cmd[] = {(uint8_t)p, (uint8_t)(freq >> 8), (uint8_t)freq};
    694e:	strb.w	r5, [sp, #12]
    6952:	strb.w	r4, [sp, #14]
    6956:	strb.w	r6, [sp, #13]
		this->write(SEESAW_TIMER_BASE, SEESAW_TIMER_FREQ, cmd, 3);
    695a:	bl	68c4 <Adafruit_seesaw::write(unsigned char, unsigned char, unsigned char*, unsigned char)>
	}
}
    695e:	add	sp, #16
    6960:	pop	{r4, r5, r6, pc}
    6962:	bx	lr
    6964:	.word	0x0009dc98

00006968 <Adafruit_seesaw::setKeypadEvent(unsigned char, unsigned char, bool)>:
 *  @param		enable passing true will enable the passed event, passing false will disable it.
 *
 *  @return     none
 ****************************************************************************************/
void Adafruit_seesaw::setKeypadEvent(uint8_t key, uint8_t edge, bool enable)
{
    6968:	push	{r4, r5, lr}
	keyState ks;
	ks.bit.STATE = enable;
	ks.bit.ACTIVE = (1 << edge);
    696a:	movs	r5, #1
 *  @param		enable passing true will enable the passed event, passing false will disable it.
 *
 *  @return     none
 ****************************************************************************************/
void Adafruit_seesaw::setKeypadEvent(uint8_t key, uint8_t edge, bool enable)
{
    696c:	sub	sp, #20
	keyState ks;
	ks.bit.STATE = enable;
    696e:	mov.w	r4, #0
	ks.bit.ACTIVE = (1 << edge);
    6972:	lsl.w	r2, r5, r2
 *  @return     none
 ****************************************************************************************/
void Adafruit_seesaw::setKeypadEvent(uint8_t key, uint8_t edge, bool enable)
{
	keyState ks;
	ks.bit.STATE = enable;
    6976:	bfi	r4, r3, #0, #1
	ks.bit.ACTIVE = (1 << edge);
	uint8_t cmd[] = {key, ks.reg};
	this->write(SEESAW_KEYPAD_BASE, SEESAW_KEYPAD_EVENT, cmd, 2);
    697a:	movs	r3, #2
void Adafruit_seesaw::setKeypadEvent(uint8_t key, uint8_t edge, bool enable)
{
	keyState ks;
	ks.bit.STATE = enable;
	ks.bit.ACTIVE = (1 << edge);
	uint8_t cmd[] = {key, ks.reg};
    697c:	strb.w	r1, [sp, #12]
 ****************************************************************************************/
void Adafruit_seesaw::setKeypadEvent(uint8_t key, uint8_t edge, bool enable)
{
	keyState ks;
	ks.bit.STATE = enable;
	ks.bit.ACTIVE = (1 << edge);
    6980:	bfi	r4, r2, #1, #4
	uint8_t cmd[] = {key, ks.reg};
	this->write(SEESAW_KEYPAD_BASE, SEESAW_KEYPAD_EVENT, cmd, 2);
    6984:	str	r3, [sp, #0]
    6986:	mov	r2, r5
    6988:	add	r3, sp, #12
    698a:	movs	r1, #16
void Adafruit_seesaw::setKeypadEvent(uint8_t key, uint8_t edge, bool enable)
{
	keyState ks;
	ks.bit.STATE = enable;
	ks.bit.ACTIVE = (1 << edge);
	uint8_t cmd[] = {key, ks.reg};
    698c:	strb.w	r4, [sp, #13]
	this->write(SEESAW_KEYPAD_BASE, SEESAW_KEYPAD_EVENT, cmd, 2);
    6990:	bl	68c4 <Adafruit_seesaw::write(unsigned char, unsigned char, unsigned char*, unsigned char)>
}
    6994:	add	sp, #20
    6996:	pop	{r4, r5, pc}

00006998 <Adafruit_seesaw::write8(unsigned char, unsigned char, unsigned char)>:
 *	@param		value the value between 0 and 255 to write
 *
 *  @return     none
 ****************************************************************************************/
void Adafruit_seesaw::write8(byte regHigh, byte regLow, byte value)
{
    6998:	push	{r4, r5, lr}
    699a:	sub	sp, #20
    699c:	add	r4, sp, #16
	this->write(regHigh, regLow, &value, 1);
    699e:	movs	r5, #1
 *	@param		value the value between 0 and 255 to write
 *
 *  @return     none
 ****************************************************************************************/
void Adafruit_seesaw::write8(byte regHigh, byte regLow, byte value)
{
    69a0:	strb.w	r3, [r4, #-1]!
	this->write(regHigh, regLow, &value, 1);
    69a4:	str	r5, [sp, #0]
    69a6:	mov	r3, r4
    69a8:	bl	68c4 <Adafruit_seesaw::write(unsigned char, unsigned char, unsigned char*, unsigned char)>
}
    69ac:	add	sp, #20
    69ae:	pop	{r4, r5, pc}

000069b0 <Adafruit_seesaw::begin(unsigned char, signed char, bool)>:
 *  @param		reset pass true to reset the seesaw on startup. Defaults to true.
 *
 *  @return     true if we could connect to the seesaw, false otherwise
 ****************************************************************************************/
bool Adafruit_seesaw::begin(uint8_t addr, int8_t flow, bool reset)
{
    69b0:	push	{r4, r5, lr}
    69b2:	mov	r5, r3
	_i2caddr = addr;
	_flow = flow;

	if(_flow != -1) ::pinMode(_flow, INPUT);
    69b4:	adds	r3, r2, #1
 *  @param		reset pass true to reset the seesaw on startup. Defaults to true.
 *
 *  @return     true if we could connect to the seesaw, false otherwise
 ****************************************************************************************/
bool Adafruit_seesaw::begin(uint8_t addr, int8_t flow, bool reset)
{
    69b6:	sub	sp, #20
    69b8:	mov	r4, r0
	_i2caddr = addr;
    69ba:	strb	r1, [r0, #5]
	_flow = flow;
    69bc:	strb	r2, [r0, #12]

	if(_flow != -1) ::pinMode(_flow, INPUT);
    69be:	beq.n	69c8 <Adafruit_seesaw::begin(unsigned char, signed char, bool)+0x18>
    69c0:	uxtb	r0, r2
    69c2:	movs	r1, #0
    69c4:	bl	7854 <pinMode>
 *
 *  @return     none
 ****************************************************************************************/
void Adafruit_seesaw::_i2c_init()
{
  _i2cbus->begin();
    69c8:	ldr	r0, [r4, #8]
    69ca:	bl	50ac <TwoWire::begin()>

	if(_flow != -1) ::pinMode(_flow, INPUT);

	_i2c_init();

	if(reset){
    69ce:	cbnz	r5, 69f6 <Adafruit_seesaw::begin(unsigned char, signed char, bool)+0x46>
 *  @return     the value between 0 and 255 read from the passed register
 ****************************************************************************************/
uint8_t Adafruit_seesaw::read8(byte regHigh, byte regLow, uint16_t delay)
{
	uint8_t ret;
	this->read(regHigh, regLow, &ret, 1, delay);
    69d0:	movs	r2, #1
    69d2:	movs	r3, #125	; 0x7d
    69d4:	mov	r0, r4
    69d6:	stmia.w	sp, {r2, r3}
    69da:	movs	r1, #0
    69dc:	add.w	r3, sp, #15
    69e0:	bl	671c <Adafruit_seesaw::read(unsigned char, unsigned char, unsigned char*, unsigned char, unsigned short)>
	
	return ret;
    69e4:	ldrb.w	r0, [sp, #15]
	uint8_t c = this->read8(SEESAW_STATUS_BASE, SEESAW_STATUS_HW_ID);
	if (c != SEESAW_HW_ID_CODE) {
	  return false;
	}
	return true;
}
    69e8:	sub.w	r0, r0, #85	; 0x55
    69ec:	clz	r0, r0
    69f0:	lsrs	r0, r0, #5
    69f2:	add	sp, #20
    69f4:	pop	{r4, r5, pc}
    69f6:	add	r3, sp, #16
    69f8:	movs	r2, #255	; 0xff
    69fa:	strb.w	r2, [r3, #-2]!
 *
 *  @return     none
 ****************************************************************************************/
void Adafruit_seesaw::write8(byte regHigh, byte regLow, byte value)
{
	this->write(regHigh, regLow, &value, 1);
    69fe:	movs	r2, #1
    6a00:	str	r2, [sp, #0]
    6a02:	mov	r0, r4
    6a04:	movs	r2, #127	; 0x7f
    6a06:	movs	r1, #0
    6a08:	bl	68c4 <Adafruit_seesaw::write(unsigned char, unsigned char, unsigned char*, unsigned char)>

	_i2c_init();

	if(reset){
		SWReset();
		delay(500);
    6a0c:	mov.w	r0, #500	; 0x1f4
    6a10:	bl	78a8 <delay>
    6a14:	b.n	69d0 <Adafruit_seesaw::begin(unsigned char, signed char, bool)+0x20>
    6a16:	nop

00006a18 <Adafruit_seesaw::enableKeypadInterrupt()>:
/**
 *****************************************************************************************
 *  @brief      enable the keypad interrupt that fires when events are in the fifo.
 ****************************************************************************************/
void Adafruit_seesaw::enableKeypadInterrupt()
{
    6a18:	push	{lr}
    6a1a:	sub	sp, #20
    6a1c:	add	r3, sp, #16
    6a1e:	movs	r2, #1
    6a20:	strb.w	r2, [r3, #-1]!
 *
 *  @return     none
 ****************************************************************************************/
void Adafruit_seesaw::write8(byte regHigh, byte regLow, byte value)
{
	this->write(regHigh, regLow, &value, 1);
    6a24:	movs	r1, #16
    6a26:	str	r2, [sp, #0]
    6a28:	movs	r2, #2
    6a2a:	bl	68c4 <Adafruit_seesaw::write(unsigned char, unsigned char, unsigned char*, unsigned char)>
 *  @brief      enable the keypad interrupt that fires when events are in the fifo.
 ****************************************************************************************/
void Adafruit_seesaw::enableKeypadInterrupt()
{
	this->write8(SEESAW_KEYPAD_BASE, SEESAW_KEYPAD_INTENSET, 0x01);
}
    6a2e:	add	sp, #20
    6a30:	ldr.w	pc, [sp], #4

00006a34 <Adafruit_seesaw::write(unsigned char)>:
 * 
 *  @param      character the character to write.
 *
 *  @return     none
 ****************************************************************************************/
size_t Adafruit_seesaw::write(uint8_t character) {
    6a34:	push	{r4, lr}
    6a36:	sub	sp, #16
    6a38:	add	r3, sp, #16
 *
 *  @return     none
 ****************************************************************************************/
void Adafruit_seesaw::write8(byte regHigh, byte regLow, byte value)
{
	this->write(regHigh, regLow, &value, 1);
    6a3a:	movs	r4, #1
    6a3c:	strb.w	r1, [r3, #-1]!
    6a40:	movs	r2, #5
    6a42:	movs	r1, #2
    6a44:	str	r4, [sp, #0]
    6a46:	bl	68c4 <Adafruit_seesaw::write(unsigned char, unsigned char, unsigned char*, unsigned char)>
 *  @return     none
 ****************************************************************************************/
size_t Adafruit_seesaw::write(uint8_t character) {
	//TODO: add support for multiple sercoms
	this->write8(SEESAW_SERCOM0_BASE, SEESAW_SERCOM_DATA, character);
	delay(1); //TODO: this can be optimized... it's only needed for longer writes
    6a4a:	mov	r0, r4
    6a4c:	bl	78a8 <delay>
	return 1;
}
    6a50:	mov	r0, r4
    6a52:	add	sp, #16
    6a54:	pop	{r4, pc}
    6a56:	nop

00006a58 <Adafruit_seesaw::write(char const*)>:
 * 
 *  @param      str the string to write
 *
 *  @return     none
 ****************************************************************************************/
size_t Adafruit_seesaw::write(const char *str) {
    6a58:	push	{r4, lr}
	uint8_t buf[32];
	uint8_t len = 0;
	while(*str){
    6a5a:	ldrb	r2, [r1, #0]
 * 
 *  @param      str the string to write
 *
 *  @return     none
 ****************************************************************************************/
size_t Adafruit_seesaw::write(const char *str) {
    6a5c:	sub	sp, #40	; 0x28
	uint8_t buf[32];
	uint8_t len = 0;
	while(*str){
    6a5e:	cbz	r2, 6a8a <Adafruit_seesaw::write(char const*)+0x32>
    6a60:	movs	r3, #0
		buf[len] = *str;
    6a62:	add	r4, sp, #40	; 0x28
    6a64:	add	r4, r3
		str++;
		len++;
    6a66:	adds	r3, #1
 ****************************************************************************************/
size_t Adafruit_seesaw::write(const char *str) {
	uint8_t buf[32];
	uint8_t len = 0;
	while(*str){
		buf[len] = *str;
    6a68:	strb.w	r2, [r4, #-32]
 *  @return     none
 ****************************************************************************************/
size_t Adafruit_seesaw::write(const char *str) {
	uint8_t buf[32];
	uint8_t len = 0;
	while(*str){
    6a6c:	ldrb.w	r2, [r1, #1]!
		buf[len] = *str;
		str++;
		len++;
    6a70:	uxtb	r3, r3
 *  @return     none
 ****************************************************************************************/
size_t Adafruit_seesaw::write(const char *str) {
	uint8_t buf[32];
	uint8_t len = 0;
	while(*str){
    6a72:	cmp	r2, #0
    6a74:	bne.n	6a62 <Adafruit_seesaw::write(char const*)+0xa>
    6a76:	mov	r4, r3
		buf[len] = *str;
		str++;
		len++;
	}
	this->write(SEESAW_SERCOM0_BASE, SEESAW_SERCOM_DATA, buf, len);
    6a78:	str	r3, [sp, #0]
    6a7a:	movs	r2, #5
    6a7c:	add	r3, sp, #8
    6a7e:	movs	r1, #2
    6a80:	bl	68c4 <Adafruit_seesaw::write(unsigned char, unsigned char, unsigned char*, unsigned char)>
	return len;
}
    6a84:	mov	r0, r4
    6a86:	add	sp, #40	; 0x28
    6a88:	pop	{r4, pc}
 *  @return     none
 ****************************************************************************************/
size_t Adafruit_seesaw::write(const char *str) {
	uint8_t buf[32];
	uint8_t len = 0;
	while(*str){
    6a8a:	mov	r4, r2
 *
 *  @return     none
 ****************************************************************************************/
size_t Adafruit_seesaw::write(const char *str) {
	uint8_t buf[32];
	uint8_t len = 0;
    6a8c:	mov	r3, r2
    6a8e:	b.n	6a78 <Adafruit_seesaw::write(char const*)+0x20>

00006a90 <Adafruit_seesaw::analogWrite(unsigned char, unsigned short, unsigned char)>:
 *	@param		width the width of the value to write. Defaults to 8. If 16 is passed a 16 bit value will be written.
 *
 *  @return     none
 ****************************************************************************************/
void Adafruit_seesaw::analogWrite(uint8_t pin, uint16_t value, uint8_t width)
{
    6a90:	subs	r1, #4
    6a92:	uxtb	r1, r1
    6a94:	cmp	r1, #3
    6a96:	bhi.n	6adc <Adafruit_seesaw::analogWrite(unsigned char, unsigned short, unsigned char)+0x4c>
    6a98:	push	{r4, r5, r6, lr}
    6a9a:	ldr	r4, [pc, #100]	; (6b00 <Adafruit_seesaw::analogWrite(unsigned char, unsigned short, unsigned char)+0x70>)
    6a9c:	ldrsb	r5, [r4, r1]
		case PWM_2_PIN: p = 2; break;
		case PWM_3_PIN: p = 3; break;
		default:
			break;
	}
	if(p > -1){
    6a9e:	cmp	r5, #0
 *	@param		width the width of the value to write. Defaults to 8. If 16 is passed a 16 bit value will be written.
 *
 *  @return     none
 ****************************************************************************************/
void Adafruit_seesaw::analogWrite(uint8_t pin, uint16_t value, uint8_t width)
{
    6aa0:	sub	sp, #16
		case PWM_2_PIN: p = 2; break;
		case PWM_3_PIN: p = 3; break;
		default:
			break;
	}
	if(p > -1){
    6aa2:	blt.n	6ad8 <Adafruit_seesaw::analogWrite(unsigned char, unsigned short, unsigned char)+0x48>
		if(width == 16){
    6aa4:	cmp	r3, #16
    6aa6:	mov	r4, r2
    6aa8:	beq.n	6ade <Adafruit_seesaw::analogWrite(unsigned char, unsigned short, unsigned char)+0x4e>
	// more conversation:
	// https://forum.pjrc.com/threads/44503-map()-function-improvements
	if ((in_max - in_min) > (out_max - out_min)) {
		return (x - in_min) * (out_max - out_min+1) / (in_max - in_min+1) + out_min;
	} else {
		return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;
    6aaa:	ldr	r3, [pc, #88]	; (6b04 <Adafruit_seesaw::analogWrite(unsigned char, unsigned short, unsigned char)+0x74>)
			this->write(SEESAW_TIMER_BASE, SEESAW_TIMER_PWM, cmd, 3);
		}
		else 
		{
			uint16_t mappedVal = map(value, 0, 255, 0, 65535);
			uint8_t cmd[] = {(uint8_t)p, (uint8_t)(mappedVal >> 8), (uint8_t)mappedVal};
    6aac:	strb.w	r5, [sp, #12]
    6ab0:	rsb	r2, r2, r2, lsl #16
    6ab4:	smull	r3, r4, r3, r2
    6ab8:	add	r4, r2
    6aba:	asrs	r2, r2, #31
    6abc:	rsb	r4, r2, r4, asr #7
			this->write(SEESAW_TIMER_BASE, SEESAW_TIMER_PWM, cmd, 3);
    6ac0:	movs	r3, #3
			this->write(SEESAW_TIMER_BASE, SEESAW_TIMER_PWM, cmd, 3);
		}
		else 
		{
			uint16_t mappedVal = map(value, 0, 255, 0, 65535);
			uint8_t cmd[] = {(uint8_t)p, (uint8_t)(mappedVal >> 8), (uint8_t)mappedVal};
    6ac2:	asrs	r5, r4, #8
			this->write(SEESAW_TIMER_BASE, SEESAW_TIMER_PWM, cmd, 3);
    6ac4:	str	r3, [sp, #0]
    6ac6:	movs	r2, #1
    6ac8:	add	r3, sp, #12
    6aca:	movs	r1, #8
			this->write(SEESAW_TIMER_BASE, SEESAW_TIMER_PWM, cmd, 3);
		}
		else 
		{
			uint16_t mappedVal = map(value, 0, 255, 0, 65535);
			uint8_t cmd[] = {(uint8_t)p, (uint8_t)(mappedVal >> 8), (uint8_t)mappedVal};
    6acc:	strb.w	r4, [sp, #14]
    6ad0:	strb.w	r5, [sp, #13]
			this->write(SEESAW_TIMER_BASE, SEESAW_TIMER_PWM, cmd, 3);
    6ad4:	bl	68c4 <Adafruit_seesaw::write(unsigned char, unsigned char, unsigned char*, unsigned char)>
		}
	}
}
    6ad8:	add	sp, #16
    6ada:	pop	{r4, r5, r6, pc}
    6adc:	bx	lr
			break;
	}
	if(p > -1){
		if(width == 16){
			uint8_t cmd[] = {(uint8_t)p, (uint8_t)(value >> 8), (uint8_t)value};
			this->write(SEESAW_TIMER_BASE, SEESAW_TIMER_PWM, cmd, 3);
    6ade:	movs	r3, #3
		default:
			break;
	}
	if(p > -1){
		if(width == 16){
			uint8_t cmd[] = {(uint8_t)p, (uint8_t)(value >> 8), (uint8_t)value};
    6ae0:	asrs	r6, r2, #8
			this->write(SEESAW_TIMER_BASE, SEESAW_TIMER_PWM, cmd, 3);
    6ae2:	str	r3, [sp, #0]
    6ae4:	movs	r2, #1
    6ae6:	add	r3, sp, #12
    6ae8:	movs	r1, #8
		default:
			break;
	}
	if(p > -1){
		if(width == 16){
			uint8_t cmd[] = {(uint8_t)p, (uint8_t)(value >> 8), (uint8_t)value};
    6aea:	strb.w	r5, [sp, #12]
    6aee:	strb.w	r4, [sp, #14]
    6af2:	strb.w	r6, [sp, #13]
			this->write(SEESAW_TIMER_BASE, SEESAW_TIMER_PWM, cmd, 3);
    6af6:	bl	68c4 <Adafruit_seesaw::write(unsigned char, unsigned char, unsigned char*, unsigned char)>
			uint16_t mappedVal = map(value, 0, 255, 0, 65535);
			uint8_t cmd[] = {(uint8_t)p, (uint8_t)(mappedVal >> 8), (uint8_t)mappedVal};
			this->write(SEESAW_TIMER_BASE, SEESAW_TIMER_PWM, cmd, 3);
		}
	}
}
    6afa:	add	sp, #16
    6afc:	pop	{r4, r5, r6, pc}
    6afe:	nop
    6b00:	.word	0x0009dc98
    6b04:	.word	0x80808081

00006b08 <Adafruit_seesaw::writeEmpty(unsigned char, unsigned char)>:
 *	@param		regLow the function address register (ex. SEESAW_STATUS_SWRST)
 *
 *  @return     none
 ****************************************************************************************/
void Adafruit_seesaw::writeEmpty(uint8_t regHigh, uint8_t regLow)
{
    6b08:	push	{r3, r4, r5, lr}
    6b0a:	mov	r4, r0
	void end();
	void setClock(uint32_t frequency);
	void setSDA(uint8_t pin);
	void setSCL(uint8_t pin);
	void beginTransmission(uint8_t address) {
		txBuffer[0] = (address << 1);
    6b0c:	ldrb	r0, [r0, #5]
    _i2cbus->beginTransmission((uint8_t)_i2caddr);
    6b0e:	ldr	r3, [r4, #8]
		transmitting = 1;
    6b10:	movs	r5, #1
	void end();
	void setClock(uint32_t frequency);
	void setSDA(uint8_t pin);
	void setSCL(uint8_t pin);
	void beginTransmission(uint8_t address) {
		txBuffer[0] = (address << 1);
    6b12:	lsls	r0, r5
		transmitting = 1;
    6b14:	strb.w	r5, [r3, #94]	; 0x5e
		txBufferLength = 1;
    6b18:	strb.w	r5, [r3, #93]	; 0x5d
	void end();
	void setClock(uint32_t frequency);
	void setSDA(uint8_t pin);
	void setSCL(uint8_t pin);
	void beginTransmission(uint8_t address) {
		txBuffer[0] = (address << 1);
    6b1c:	strb.w	r0, [r3, #59]	; 0x3b
    _i2cbus->write((uint8_t)regHigh);
    6b20:	ldr	r0, [r4, #8]
    6b22:	ldr	r3, [r0, #0]
    6b24:	ldr	r3, [r3, #0]
 *	@param		regLow the function address register (ex. SEESAW_STATUS_SWRST)
 *
 *  @return     none
 ****************************************************************************************/
void Adafruit_seesaw::writeEmpty(uint8_t regHigh, uint8_t regLow)
{
    6b26:	mov	r5, r2
    _i2cbus->beginTransmission((uint8_t)_i2caddr);
    _i2cbus->write((uint8_t)regHigh);
    6b28:	blx	r3
    _i2cbus->write((uint8_t)regLow);
    6b2a:	ldr	r0, [r4, #8]
    6b2c:	ldr	r3, [r0, #0]
    6b2e:	mov	r1, r5
    6b30:	ldr	r3, [r3, #0]
    6b32:	blx	r3
    if(_flow != -1) while(!::digitalRead(_flow));
    6b34:	ldrsb.w	r0, [r4, #12]
    6b38:	adds	r3, r0, #1
    6b3a:	bne.n	6b42 <Adafruit_seesaw::writeEmpty(unsigned char, unsigned char)+0x3a>
    6b3c:	b.n	6b4c <Adafruit_seesaw::writeEmpty(unsigned char, unsigned char)+0x44>
    6b3e:	ldrsb.w	r0, [r4, #12]
    6b42:	uxtb	r0, r0
    6b44:	bl	7838 <digitalRead>
    6b48:	cmp	r0, #0
    6b4a:	beq.n	6b3e <Adafruit_seesaw::writeEmpty(unsigned char, unsigned char)+0x36>
	void beginTransmission(int address) {
		beginTransmission((uint8_t)address);
	}
	uint8_t endTransmission(uint8_t sendStop);
	uint8_t endTransmission(void) {
		return endTransmission(1);
    6b4c:	ldr	r0, [r4, #8]
    6b4e:	movs	r1, #1
    _i2cbus->endTransmission();
}
    6b50:	ldmia.w	sp!, {r3, r4, r5, lr}
    6b54:	b.w	535c <TwoWire::endTransmission(unsigned char)>

00006b58 <Adafruit_NeoTrellis::Adafruit_NeoTrellis(unsigned char)>:
/*! 
    @brief  Class constructor
    @param  addr the I2C address this neotrellis object uses
*/
/**************************************************************************/
Adafruit_NeoTrellis::Adafruit_NeoTrellis(uint8_t addr) : pixels(NEO_TRELLIS_NUM_KEYS, NEO_TRELLIS_NEOPIX_PIN, NEO_GRB + NEO_KHZ800)
    6b58:	push	{r4, r5, r6, lr}
    6b5a:	mov	r5, r0
    6b5c:	sub	sp, #8
    6b5e:	mov	r6, r1
    6b60:	movs	r1, #0
    6b62:	bl	6700 <Adafruit_seesaw::Adafruit_seesaw(TwoWire*)>
    6b66:	mov	r0, r5
    6b68:	ldr	r3, [pc, #44]	; (6b98 <Adafruit_NeoTrellis::Adafruit_NeoTrellis(unsigned char)+0x40>)
    6b6a:	str.w	r3, [r0], #16
    6b6e:	movs	r4, #0
    6b70:	movs	r3, #82	; 0x52
    6b72:	movs	r2, #3
    6b74:	movs	r1, #16
    6b76:	str	r4, [sp, #0]
    6b78:	bl	64e0 <seesaw_NeoPixel::seesaw_NeoPixel(unsigned short, unsigned char, unsigned short, TwoWire*)>
{
    for(int i=0; i<NEO_TRELLIS_NUM_KEYS; i++){
        _callbacks[i] = NULL;
    6b7c:	mov	r2, r4
    6b7e:	add.w	r3, r5, #56	; 0x38
    6b82:	add.w	r1, r5, #120	; 0x78
    6b86:	str.w	r2, [r3, #4]!
    @param  addr the I2C address this neotrellis object uses
*/
/**************************************************************************/
Adafruit_NeoTrellis::Adafruit_NeoTrellis(uint8_t addr) : pixels(NEO_TRELLIS_NUM_KEYS, NEO_TRELLIS_NEOPIX_PIN, NEO_GRB + NEO_KHZ800)
{
    for(int i=0; i<NEO_TRELLIS_NUM_KEYS; i++){
    6b8a:	cmp	r3, r1
    6b8c:	bne.n	6b86 <Adafruit_NeoTrellis::Adafruit_NeoTrellis(unsigned char)+0x2e>
        _callbacks[i] = NULL;
    }
    this->_addr = addr;
}
    6b8e:	mov	r0, r5
Adafruit_NeoTrellis::Adafruit_NeoTrellis(uint8_t addr) : pixels(NEO_TRELLIS_NUM_KEYS, NEO_TRELLIS_NEOPIX_PIN, NEO_GRB + NEO_KHZ800)
{
    for(int i=0; i<NEO_TRELLIS_NUM_KEYS; i++){
        _callbacks[i] = NULL;
    }
    this->_addr = addr;
    6b90:	strb.w	r6, [r5, #56]	; 0x38
}
    6b94:	add	sp, #8
    6b96:	pop	{r4, r5, r6, pc}
    6b98:	.word	0x0009d834

00006b9c <Adafruit_NeoTrellis::begin(unsigned char, signed char)>:
    @param  flow optional flow control pin
    @returns true on success, false on error.
*/
/**************************************************************************/
bool Adafruit_NeoTrellis::begin(uint8_t addr, int8_t flow)
{
    6b9c:	push	{r4, r5, r6, lr}
    6b9e:	mov	r5, r1
    _addr = addr;
    6ba0:	strb.w	r1, [r0, #56]	; 0x38
    @param  flow optional flow control pin
    @returns true on success, false on error.
*/
/**************************************************************************/
bool Adafruit_NeoTrellis::begin(uint8_t addr, int8_t flow)
{
    6ba4:	mov	r4, r0
    6ba6:	mov	r6, r2
    _addr = addr;
    
    bool ret = pixels.begin(addr, flow);
    6ba8:	adds	r0, #16
    6baa:	bl	65e0 <seesaw_NeoPixel::begin(unsigned char, signed char)>
    
    ret = Adafruit_seesaw::begin(addr, flow, false);
    6bae:	mov	r1, r5
    6bb0:	mov	r2, r6
    6bb2:	mov	r0, r4
    6bb4:	movs	r3, #0
    6bb6:	bl	69b0 <Adafruit_seesaw::begin(unsigned char, signed char, bool)>
    if(!ret) return ret;
    6bba:	mov	r5, r0
    6bbc:	cbz	r0, 6bc4 <Adafruit_NeoTrellis::begin(unsigned char, signed char)+0x28>

    enableKeypadInterrupt();
    6bbe:	mov	r0, r4
    6bc0:	bl	6a18 <Adafruit_seesaw::enableKeypadInterrupt()>

    return ret;
}
    6bc4:	mov	r0, r5
    6bc6:	pop	{r4, r5, r6, pc}

00006bc8 <Adafruit_MultiTrellis::Adafruit_MultiTrellis(Adafruit_NeoTrellis*, unsigned char, unsigned char)>:
            of your matrix.
    @param  cols the number of individual neotrellis boards in the X direction
            of your matrix.
*/
/**************************************************************************/
Adafruit_MultiTrellis::Adafruit_MultiTrellis(Adafruit_NeoTrellis *trelli, uint8_t rows, uint8_t cols)
    6bc8:	push	{r4}
{
    this->_rows = rows;
    6bca:	strb	r2, [r0, #0]
    this->_cols = cols;
    6bcc:	strb	r3, [r0, #1]
    this->_trelli = trelli;
    6bce:	str	r1, [r0, #4]
}
    6bd0:	ldr.w	r4, [sp], #4
    6bd4:	bx	lr
    6bd6:	nop

00006bd8 <Adafruit_MultiTrellis::begin()>:
*/
/**************************************************************************/
bool Adafruit_MultiTrellis::begin()
{
    Adafruit_NeoTrellis *t;
    for(int n=0; n<_rows; n++){
    6bd8:	ldrb	r2, [r0, #0]
    6bda:	cbz	r2, 6c20 <Adafruit_MultiTrellis::begin()+0x48>
    @brief  begin communication with the matrix of neotrellis boards.
    @returns true on success, false otherwise.
*/
/**************************************************************************/
bool Adafruit_MultiTrellis::begin()
{
    6bdc:	push	{r4, r5, r6, lr}
    6bde:	ldrb	r3, [r0, #1]
    6be0:	mov	r5, r0
    Adafruit_NeoTrellis *t;
    for(int n=0; n<_rows; n++){
    6be2:	movs	r6, #0
        for(int m=0; m<_cols; m++){
    6be4:	movs	r4, #0
    6be6:	cbnz	r3, 6bf0 <Adafruit_MultiTrellis::begin()+0x18>
    6be8:	b.n	6c16 <Adafruit_MultiTrellis::begin()+0x3e>
    6bea:	ldrb	r3, [r5, #1]
    6bec:	cmp	r3, r4
    6bee:	ble.n	6c14 <Adafruit_MultiTrellis::begin()+0x3c>
            t = (_trelli+n*_cols) + m;
    6bf0:	ldr	r2, [r5, #4]
    6bf2:	mla	r3, r3, r6, r4
    6bf6:	rsb	r3, r3, r3, lsl #5
    6bfa:	add.w	r3, r2, r3, lsl #2
            if(!t->begin(t->_addr))
    6bfe:	mov	r0, r3
    6c00:	ldrb.w	r1, [r3, #56]	; 0x38
    6c04:	mov.w	r2, #4294967295
    6c08:	bl	6b9c <Adafruit_NeoTrellis::begin(unsigned char, signed char)>
/**************************************************************************/
bool Adafruit_MultiTrellis::begin()
{
    Adafruit_NeoTrellis *t;
    for(int n=0; n<_rows; n++){
        for(int m=0; m<_cols; m++){
    6c0c:	adds	r4, #1
            t = (_trelli+n*_cols) + m;
            if(!t->begin(t->_addr))
    6c0e:	cmp	r0, #0
    6c10:	bne.n	6bea <Adafruit_MultiTrellis::begin()+0x12>
                return false;
        }
    }

    return true;
}
    6c12:	pop	{r4, r5, r6, pc}
    6c14:	ldrb	r2, [r5, #0]
*/
/**************************************************************************/
bool Adafruit_MultiTrellis::begin()
{
    Adafruit_NeoTrellis *t;
    for(int n=0; n<_rows; n++){
    6c16:	adds	r6, #1
    6c18:	cmp	r2, r6
    6c1a:	bgt.n	6be4 <Adafruit_MultiTrellis::begin()+0xc>
            if(!t->begin(t->_addr))
                return false;
        }
    }

    return true;
    6c1c:	movs	r0, #1
    6c1e:	pop	{r4, r5, r6, pc}
    6c20:	movs	r0, #1
}
    6c22:	bx	lr

00006c24 <Adafruit_MultiTrellis::registerCallback(unsigned char, unsigned char, void (*(*)(keyEvent))(keyEvent))>:
    @param  cb the function to be called when an event from the specified key is
            detected.
*/
/**************************************************************************/
void Adafruit_MultiTrellis::registerCallback(uint8_t x, uint8_t y, TrellisCallback (*cb)(keyEvent))
{
    6c24:	push	{r4, r5, r6}
    Adafruit_NeoTrellis *t = (_trelli+y/NEO_TRELLIS_NUM_ROWS*_cols) + x/NEO_TRELLIS_NUM_COLS;
    6c26:	ldrb	r4, [r0, #1]
    @param  cb the callback function that should be called when an event on that key happens
*/
/**************************************************************************/
void Adafruit_NeoTrellis::registerCallback(uint8_t key, TrellisCallback (*cb)(keyEvent))
{
    _callbacks[key] = cb;
    6c28:	ldr	r5, [r0, #4]
            detected.
*/
/**************************************************************************/
void Adafruit_MultiTrellis::registerCallback(uint8_t x, uint8_t y, TrellisCallback (*cb)(keyEvent))
{
    Adafruit_NeoTrellis *t = (_trelli+y/NEO_TRELLIS_NUM_ROWS*_cols) + x/NEO_TRELLIS_NUM_COLS;
    6c2a:	lsrs	r6, r2, #2
    @param  cb the callback function that should be called when an event on that key happens
*/
/**************************************************************************/
void Adafruit_NeoTrellis::registerCallback(uint8_t key, TrellisCallback (*cb)(keyEvent))
{
    _callbacks[key] = cb;
    6c2c:	lsrs	r0, r1, #2
    6c2e:	mla	r0, r6, r4, r0
    6c32:	and.w	r2, r2, #3
    6c36:	rsb	r0, r0, r0, lsl #5
    6c3a:	and.w	r1, r1, #3
    6c3e:	add.w	r0, r5, r0, lsl #2
    6c42:	add.w	r1, r1, r2, lsl #2
    6c46:	add.w	r1, r0, r1, lsl #2
    Adafruit_NeoTrellis *t = (_trelli+y/NEO_TRELLIS_NUM_ROWS*_cols) + x/NEO_TRELLIS_NUM_COLS;
    int xkey = NEO_TRELLIS_X(x);
    int ykey = NEO_TRELLIS_Y(y%NEO_TRELLIS_NUM_ROWS*NEO_TRELLIS_NUM_COLS);

    t->registerCallback(NEO_TRELLIS_XY(xkey, ykey), cb);
}
    6c4a:	pop	{r4, r5, r6}
    @param  cb the callback function that should be called when an event on that key happens
*/
/**************************************************************************/
void Adafruit_NeoTrellis::registerCallback(uint8_t key, TrellisCallback (*cb)(keyEvent))
{
    _callbacks[key] = cb;
    6c4c:	str	r3, [r1, #60]	; 0x3c
    Adafruit_NeoTrellis *t = (_trelli+y/NEO_TRELLIS_NUM_ROWS*_cols) + x/NEO_TRELLIS_NUM_COLS;
    int xkey = NEO_TRELLIS_X(x);
    int ykey = NEO_TRELLIS_Y(y%NEO_TRELLIS_NUM_ROWS*NEO_TRELLIS_NUM_COLS);

    t->registerCallback(NEO_TRELLIS_XY(xkey, ykey), cb);
}
    6c4e:	bx	lr

00006c50 <Adafruit_MultiTrellis::activateKey(unsigned char, unsigned char, unsigned char, bool)>:
            or SEESAW_KEYPAD_EDGE_RISING.
    @param  enable pass true to enable the key on the passed edge, false to disable.
*/
/**************************************************************************/
void Adafruit_MultiTrellis::activateKey(uint8_t x, uint8_t y, uint8_t edge, bool enable)
{
    6c50:	push	{r4, r5, r6}
    Adafruit_NeoTrellis *t = (_trelli+y/NEO_TRELLIS_NUM_ROWS*_cols) + x/NEO_TRELLIS_NUM_COLS;
    int xkey = NEO_TRELLIS_X(x);
    int ykey = NEO_TRELLIS_Y(y%NEO_TRELLIS_NUM_ROWS*NEO_TRELLIS_NUM_COLS);

    t->activateKey(NEO_TRELLIS_XY(xkey, ykey), edge, enable);
    6c52:	and.w	r5, r2, #3
    @param  enable pass true to enable the key on the passed edge, false to disable.
*/
/**************************************************************************/
void Adafruit_MultiTrellis::activateKey(uint8_t x, uint8_t y, uint8_t edge, bool enable)
{
    Adafruit_NeoTrellis *t = (_trelli+y/NEO_TRELLIS_NUM_ROWS*_cols) + x/NEO_TRELLIS_NUM_COLS;
    6c56:	ldrb	r6, [r0, #1]
    @param  enable pass true to enable the passed event, false to disable it.
*/
/**************************************************************************/
void Adafruit_NeoTrellis::activateKey(uint8_t key, uint8_t edge, bool enable)
{
    setKeypadEvent(NEO_TRELLIS_KEY(key), edge, enable);
    6c58:	ldr	r0, [r0, #4]
{
    Adafruit_NeoTrellis *t = (_trelli+y/NEO_TRELLIS_NUM_ROWS*_cols) + x/NEO_TRELLIS_NUM_COLS;
    int xkey = NEO_TRELLIS_X(x);
    int ykey = NEO_TRELLIS_Y(y%NEO_TRELLIS_NUM_ROWS*NEO_TRELLIS_NUM_COLS);

    t->activateKey(NEO_TRELLIS_XY(xkey, ykey), edge, enable);
    6c5a:	and.w	r4, r1, #3
    6c5e:	add.w	r4, r4, r5, lsl #2
    @param  enable pass true to enable the key on the passed edge, false to disable.
*/
/**************************************************************************/
void Adafruit_MultiTrellis::activateKey(uint8_t x, uint8_t y, uint8_t edge, bool enable)
{
    Adafruit_NeoTrellis *t = (_trelli+y/NEO_TRELLIS_NUM_ROWS*_cols) + x/NEO_TRELLIS_NUM_COLS;
    6c62:	lsrs	r2, r2, #2
    @param  enable pass true to enable the passed event, false to disable it.
*/
/**************************************************************************/
void Adafruit_NeoTrellis::activateKey(uint8_t key, uint8_t edge, bool enable)
{
    setKeypadEvent(NEO_TRELLIS_KEY(key), edge, enable);
    6c64:	lsrs	r1, r1, #2
    6c66:	mla	r5, r2, r6, r1
    6c6a:	lsrs	r1, r4, #2
    6c6c:	and.w	r4, r4, #3
    6c70:	rsb	r5, r5, r5, lsl #5
    6c74:	add.w	r1, r4, r1, lsl #3
    6c78:	mov	r2, r3
    6c7a:	add.w	r0, r0, r5, lsl #2
    6c7e:	ldrb.w	r3, [sp, #12]
    6c82:	uxtb	r1, r1
    Adafruit_NeoTrellis *t = (_trelli+y/NEO_TRELLIS_NUM_ROWS*_cols) + x/NEO_TRELLIS_NUM_COLS;
    int xkey = NEO_TRELLIS_X(x);
    int ykey = NEO_TRELLIS_Y(y%NEO_TRELLIS_NUM_ROWS*NEO_TRELLIS_NUM_COLS);

    t->activateKey(NEO_TRELLIS_XY(xkey, ykey), edge, enable);
}
    6c84:	pop	{r4, r5, r6}
    @param  enable pass true to enable the passed event, false to disable it.
*/
/**************************************************************************/
void Adafruit_NeoTrellis::activateKey(uint8_t key, uint8_t edge, bool enable)
{
    setKeypadEvent(NEO_TRELLIS_KEY(key), edge, enable);
    6c86:	b.w	6968 <Adafruit_seesaw::setKeypadEvent(unsigned char, unsigned char, bool)>
    6c8a:	nop

00006c8c <Adafruit_MultiTrellis::setPixelColor(unsigned char, unsigned char, unsigned long)>:
            for example, full brightness red would be 0xFF0000, and full brightness
            blue would be 0x0000FF.
*/
/**************************************************************************/
void Adafruit_MultiTrellis::setPixelColor(uint8_t x, uint8_t y, uint32_t color)
{
    6c8c:	push	{r4, r5, r6}
    Adafruit_NeoTrellis *t = (_trelli+y/NEO_TRELLIS_NUM_ROWS*_cols) + x/NEO_TRELLIS_NUM_COLS;
    6c8e:	ldrb	r5, [r0, #1]
    int xkey = NEO_TRELLIS_X(x);
    int ykey = NEO_TRELLIS_Y(y%NEO_TRELLIS_NUM_ROWS*NEO_TRELLIS_NUM_COLS);

    t->pixels.setPixelColor(NEO_TRELLIS_XY(xkey, ykey), color);
    6c90:	ldr	r0, [r0, #4]
            blue would be 0x0000FF.
*/
/**************************************************************************/
void Adafruit_MultiTrellis::setPixelColor(uint8_t x, uint8_t y, uint32_t color)
{
    Adafruit_NeoTrellis *t = (_trelli+y/NEO_TRELLIS_NUM_ROWS*_cols) + x/NEO_TRELLIS_NUM_COLS;
    6c92:	lsrs	r6, r2, #2
    int xkey = NEO_TRELLIS_X(x);
    int ykey = NEO_TRELLIS_Y(y%NEO_TRELLIS_NUM_ROWS*NEO_TRELLIS_NUM_COLS);

    t->pixels.setPixelColor(NEO_TRELLIS_XY(xkey, ykey), color);
    6c94:	lsrs	r4, r1, #2
    6c96:	mla	r4, r6, r5, r4
    6c9a:	rsb	r4, r4, r4, lsl #5
    6c9e:	and.w	r5, r2, #3
    6ca2:	add.w	r0, r0, r4, lsl #2
    6ca6:	and.w	r1, r1, #3
    6caa:	add.w	r1, r1, r5, lsl #2
    6cae:	mov	r2, r3
    6cb0:	adds	r0, #16
}
    6cb2:	pop	{r4, r5, r6}
{
    Adafruit_NeoTrellis *t = (_trelli+y/NEO_TRELLIS_NUM_ROWS*_cols) + x/NEO_TRELLIS_NUM_COLS;
    int xkey = NEO_TRELLIS_X(x);
    int ykey = NEO_TRELLIS_Y(y%NEO_TRELLIS_NUM_ROWS*NEO_TRELLIS_NUM_COLS);

    t->pixels.setPixelColor(NEO_TRELLIS_XY(xkey, ykey), color);
    6cb4:	b.w	6640 <seesaw_NeoPixel::setPixelColor(unsigned short, unsigned long)>

00006cb8 <Adafruit_MultiTrellis::setPixelColor(unsigned short, unsigned long)>:
            for example, full brightness red would be 0xFF0000, and full brightness
            blue would be 0x0000FF.
*/
/**************************************************************************/
void Adafruit_MultiTrellis::setPixelColor(uint16_t num, uint32_t color)
{
    6cb8:	push	{r4}
    uint8_t x = num % (NEO_TRELLIS_NUM_COLS*_cols);
    6cba:	ldrb	r4, [r0, #1]
    6cbc:	lsls	r3, r4, #2
    uint8_t y = num / (NEO_TRELLIS_NUM_COLS*_cols);

    setPixelColor(x, y, color);
    6cbe:	sdiv	r4, r1, r3
    6cc2:	mls	r1, r3, r4, r1
    6cc6:	uxtb	r1, r1
    6cc8:	mov	r3, r2
    6cca:	uxtb	r2, r4
}
    6ccc:	ldr.w	r4, [sp], #4
void Adafruit_MultiTrellis::setPixelColor(uint16_t num, uint32_t color)
{
    uint8_t x = num % (NEO_TRELLIS_NUM_COLS*_cols);
    uint8_t y = num / (NEO_TRELLIS_NUM_COLS*_cols);

    setPixelColor(x, y, color);
    6cd0:	b.w	6c8c <Adafruit_MultiTrellis::setPixelColor(unsigned char, unsigned char, unsigned long)>

00006cd4 <Adafruit_MultiTrellis::show()>:
*/
/**************************************************************************/
void Adafruit_MultiTrellis::show()
{
    Adafruit_NeoTrellis *t;
    for(int n=0; n<_rows; n++){
    6cd4:	ldrb	r3, [r0, #0]
    6cd6:	cbz	r3, 6d0a <Adafruit_MultiTrellis::show()+0x36>
/*! 
    @brief  call show for all connected neotrellis boards to show all neopixels
*/
/**************************************************************************/
void Adafruit_MultiTrellis::show()
{
    6cd8:	push	{r4, r5, r6, lr}
    6cda:	mov	r5, r0
    6cdc:	ldrb	r0, [r0, #1]
    Adafruit_NeoTrellis *t;
    for(int n=0; n<_rows; n++){
    6cde:	movs	r6, #0
        for(int m=0; m<_cols; m++){
    6ce0:	movs	r4, #0
    6ce2:	cbz	r0, 6d02 <Adafruit_MultiTrellis::show()+0x2e>
            t = (_trelli+n*_cols) + m;
            t->pixels.show();
    6ce4:	mla	r0, r0, r6, r4
    6ce8:	ldr	r3, [r5, #4]
    6cea:	rsb	r0, r0, r0, lsl #5
    6cee:	add.w	r0, r3, r0, lsl #2
    6cf2:	adds	r0, #16
    6cf4:	bl	6614 <seesaw_NeoPixel::show()>
/**************************************************************************/
void Adafruit_MultiTrellis::show()
{
    Adafruit_NeoTrellis *t;
    for(int n=0; n<_rows; n++){
        for(int m=0; m<_cols; m++){
    6cf8:	ldrb	r0, [r5, #1]
    6cfa:	adds	r4, #1
    6cfc:	cmp	r0, r4
    6cfe:	bgt.n	6ce4 <Adafruit_MultiTrellis::show()+0x10>
    6d00:	ldrb	r3, [r5, #0]
*/
/**************************************************************************/
void Adafruit_MultiTrellis::show()
{
    Adafruit_NeoTrellis *t;
    for(int n=0; n<_rows; n++){
    6d02:	adds	r6, #1
    6d04:	cmp	r3, r6
    6d06:	bgt.n	6ce0 <Adafruit_MultiTrellis::show()+0xc>
    6d08:	pop	{r4, r5, r6, pc}
    6d0a:	bx	lr

00006d0c <Adafruit_MultiTrellis::read()>:
*/
/**************************************************************************/
void Adafruit_MultiTrellis::read()
{
    Adafruit_NeoTrellis *t;
    for(int n=0; n<_rows; n++){
    6d0c:	ldrb	r3, [r0, #0]
    6d0e:	cmp	r3, #0
    6d10:	beq.w	6e16 <L_1310_delayMicroseconds+0xba>
/*! 
    @brief  read all events currently stored in the seesaw fifo and call any callbacks.
*/
/**************************************************************************/
void Adafruit_MultiTrellis::read()
{
    6d14:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    6d18:	sub	sp, #20
    6d1a:	add	r7, sp, #0
    Adafruit_NeoTrellis *t;
    for(int n=0; n<_rows; n++){
    6d1c:	movs	r2, #0
    6d1e:	ldrb	r4, [r0, #1]
    6d20:	str	r2, [r7, #8]
    6d22:	mov	fp, r0
        for(int m=0; m<_cols; m++){
    6d24:	cmp	r4, #0
    6d26:	beq.n	6e04 <L_1310_delayMicroseconds+0xa8>
    6d28:	ldr	r3, [r7, #8]
    6d2a:	lsls	r3, r3, #2
    6d2c:	str	r3, [r7, #12]
    6d2e:	mov.w	r8, #0
    6d32:	b.n	6d40 <Adafruit_MultiTrellis::read()+0x34>
    6d34:	ldrb.w	r4, [fp, #1]
    6d38:	add.w	r8, r8, #1
    6d3c:	cmp	r4, r8
    6d3e:	ble.n	6e00 <L_1310_delayMicroseconds+0xa4>
            t = (_trelli+n*_cols) + m;
    6d40:	ldr	r3, [r7, #8]
    6d42:	mla	r4, r4, r3, r8
    6d46:	ldr.w	r3, [fp, #4]
    6d4a:	rsb	r4, r4, r4, lsl #5
    6d4e:	add.w	r4, r3, r4, lsl #2

            uint8_t count = t->getKeypadCount();
    6d52:	mov	r0, r4
    6d54:	bl	68a0 <Adafruit_seesaw::getKeypadCount()>
    6d58:	movw	r3, #30000	; 0x7530

00006d5c <L_1310_delayMicroseconds>:
    6d5c:	subs	r3, #1
    6d5e:	bne.n	6d5c <L_1310_delayMicroseconds>
            delayMicroseconds(500);
            if(count > 0){
    6d60:	cmp	r0, #0
    6d62:	beq.n	6d34 <Adafruit_MultiTrellis::read()+0x28>
                count = count + 2;
    6d64:	adds	r0, #2
    6d66:	uxtb	r6, r0
                keyEventRaw e[count];
    6d68:	adds	r3, r6, #7
    6d6a:	bic.w	r3, r3, #7

                        evt.bit.NUM = y*NEO_TRELLIS_NUM_COLS*_cols + x;

                        t->_callbacks[e[i].bit.NUM](evt);
                    }
                }
    6d6e:	str.w	sp, [r7, #4]

            uint8_t count = t->getKeypadCount();
            delayMicroseconds(500);
            if(count > 0){
                count = count + 2;
                keyEventRaw e[count];
    6d72:	sub.w	sp, sp, r3
                t->readKeypad(e, count);
    6d76:	mov	r1, sp
    6d78:	mov	r2, r6
    6d7a:	mov	r0, r4

            uint8_t count = t->getKeypadCount();
            delayMicroseconds(500);
            if(count > 0){
                count = count + 2;
                keyEventRaw e[count];
    6d7c:	mov	r5, sp
                t->readKeypad(e, count);
    6d7e:	bl	6884 <Adafruit_seesaw::readKeypad(keyEventRaw*, unsigned char)>
                for(int i=0; i<count; i++){
    6d82:	cbz	r6, 6df0 <L_1310_delayMicroseconds+0x94>
    6d84:	mov.w	r3, r8, lsl #2
    6d88:	str.w	r8, [r7]
    6d8c:	mov.w	sl, #0
    6d90:	mov	r8, r6
    6d92:	mov	r6, r4
    6d94:	mov	r4, r3
                    //call any callbacks associated with the key
                    e[i].bit.NUM = NEO_TRELLIS_SEESAW_KEY(e[i].bit.NUM);
    6d96:	ldrb.w	r0, [r5, sl]
    6d9a:	lsrs	r2, r0, #2
    6d9c:	asrs	r3, r2, #3
    6d9e:	and.w	r2, r2, #7
    6da2:	add.w	r3, r2, r3, lsl #2
    6da6:	bfi	r0, r3, #2, #6
                    if(e[i].bit.NUM < NEO_TRELLIS_NUM_KEYS && t->_callbacks[e[i].bit.NUM] != NULL){
    6daa:	cmp	r3, #15
    6dac:	add.w	r2, r6, r3, lsl #2
                count = count + 2;
                keyEventRaw e[count];
                t->readKeypad(e, count);
                for(int i=0; i<count; i++){
                    //call any callbacks associated with the key
                    e[i].bit.NUM = NEO_TRELLIS_SEESAW_KEY(e[i].bit.NUM);
    6db0:	strb.w	r0, [r5, sl]
                    if(e[i].bit.NUM < NEO_TRELLIS_NUM_KEYS && t->_callbacks[e[i].bit.NUM] != NULL){
    6db4:	bhi.n	6de4 <L_1310_delayMicroseconds+0x88>
                        int y = NEO_TRELLIS_Y(e[i].bit.NUM);

                        x = x + m*NEO_TRELLIS_NUM_COLS;
                        y = y + n*NEO_TRELLIS_NUM_ROWS;

                        evt.bit.NUM = y*NEO_TRELLIS_NUM_COLS*_cols + x;
    6db6:	ldr	r1, [r7, #12]
                keyEventRaw e[count];
                t->readKeypad(e, count);
                for(int i=0; i<count; i++){
                    //call any callbacks associated with the key
                    e[i].bit.NUM = NEO_TRELLIS_SEESAW_KEY(e[i].bit.NUM);
                    if(e[i].bit.NUM < NEO_TRELLIS_NUM_KEYS && t->_callbacks[e[i].bit.NUM] != NULL){
    6db8:	ldr	r2, [r2, #60]	; 0x3c
                        //update the event with the multitrellis number
                        keyEvent evt = { e[i].bit.EDGE, e[i].bit.NUM };
                        int x = NEO_TRELLIS_X(e[i].bit.NUM);
    6dba:	and.w	r0, r3, #3
                        int y = NEO_TRELLIS_Y(e[i].bit.NUM);

                        x = x + m*NEO_TRELLIS_NUM_COLS;
                        y = y + n*NEO_TRELLIS_NUM_ROWS;

                        evt.bit.NUM = y*NEO_TRELLIS_NUM_COLS*_cols + x;
    6dbe:	add	r0, r4
    6dc0:	add.w	r3, r1, r3, asr #2
                keyEventRaw e[count];
                t->readKeypad(e, count);
                for(int i=0; i<count; i++){
                    //call any callbacks associated with the key
                    e[i].bit.NUM = NEO_TRELLIS_SEESAW_KEY(e[i].bit.NUM);
                    if(e[i].bit.NUM < NEO_TRELLIS_NUM_KEYS && t->_callbacks[e[i].bit.NUM] != NULL){
    6dc4:	cbz	r2, 6de4 <L_1310_delayMicroseconds+0x88>
                        int y = NEO_TRELLIS_Y(e[i].bit.NUM);

                        x = x + m*NEO_TRELLIS_NUM_COLS;
                        y = y + n*NEO_TRELLIS_NUM_ROWS;

                        evt.bit.NUM = y*NEO_TRELLIS_NUM_COLS*_cols + x;
    6dc6:	ldrb.w	lr, [fp, #1]
                for(int i=0; i<count; i++){
                    //call any callbacks associated with the key
                    e[i].bit.NUM = NEO_TRELLIS_SEESAW_KEY(e[i].bit.NUM);
                    if(e[i].bit.NUM < NEO_TRELLIS_NUM_KEYS && t->_callbacks[e[i].bit.NUM] != NULL){
                        //update the event with the multitrellis number
                        keyEvent evt = { e[i].bit.EDGE, e[i].bit.NUM };
    6dca:	ldrb.w	ip, [r5, sl]
                        int y = NEO_TRELLIS_Y(e[i].bit.NUM);

                        x = x + m*NEO_TRELLIS_NUM_COLS;
                        y = y + n*NEO_TRELLIS_NUM_ROWS;

                        evt.bit.NUM = y*NEO_TRELLIS_NUM_COLS*_cols + x;
    6dce:	mov.w	lr, lr, lsl #2
    6dd2:	smulbb	r3, lr, r3
    6dd6:	add	r0, r3
                for(int i=0; i<count; i++){
                    //call any callbacks associated with the key
                    e[i].bit.NUM = NEO_TRELLIS_SEESAW_KEY(e[i].bit.NUM);
                    if(e[i].bit.NUM < NEO_TRELLIS_NUM_KEYS && t->_callbacks[e[i].bit.NUM] != NULL){
                        //update the event with the multitrellis number
                        keyEvent evt = { e[i].bit.EDGE, e[i].bit.NUM };
    6dd8:	bfi	r9, ip, #0, #2
                        int y = NEO_TRELLIS_Y(e[i].bit.NUM);

                        x = x + m*NEO_TRELLIS_NUM_COLS;
                        y = y + n*NEO_TRELLIS_NUM_ROWS;

                        evt.bit.NUM = y*NEO_TRELLIS_NUM_COLS*_cols + x;
    6ddc:	bfi	r9, r0, #2, #14

                        t->_callbacks[e[i].bit.NUM](evt);
    6de0:	mov	r0, r9
    6de2:	blx	r2
            delayMicroseconds(500);
            if(count > 0){
                count = count + 2;
                keyEventRaw e[count];
                t->readKeypad(e, count);
                for(int i=0; i<count; i++){
    6de4:	add.w	sl, sl, #1
    6de8:	cmp	r8, sl
    6dea:	bgt.n	6d96 <L_1310_delayMicroseconds+0x3a>
    6dec:	ldr.w	r8, [r7]
/**************************************************************************/
void Adafruit_MultiTrellis::read()
{
    Adafruit_NeoTrellis *t;
    for(int n=0; n<_rows; n++){
        for(int m=0; m<_cols; m++){
    6df0:	ldrb.w	r4, [fp, #1]
    6df4:	ldr.w	sp, [r7, #4]
    6df8:	add.w	r8, r8, #1
    6dfc:	cmp	r4, r8
    6dfe:	bgt.n	6d40 <Adafruit_MultiTrellis::read()+0x34>
    6e00:	ldrb.w	r3, [fp]
*/
/**************************************************************************/
void Adafruit_MultiTrellis::read()
{
    Adafruit_NeoTrellis *t;
    for(int n=0; n<_rows; n++){
    6e04:	ldr	r2, [r7, #8]
    6e06:	adds	r2, #1
    6e08:	cmp	r3, r2
    6e0a:	str	r2, [r7, #8]
    6e0c:	bgt.n	6d24 <Adafruit_MultiTrellis::read()+0x18>
                    }
                }
            }
        }
    }
    6e0e:	adds	r7, #20
    6e10:	mov	sp, r7
    6e12:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    6e16:	bx	lr

00006e18 <memcpy_tointerleaveLR>:
	@ r0: dst
	@ r1: srcL
	@ r2: srcR

#if AUDIO_BLOCK_SAMPLES > 8
	push	{r4-r11,r14}
    6e18:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
	add r14,r0,#(AUDIO_BLOCK_SAMPLES*2)
    6e1c:	add.w	lr, r0, #256	; 0x100

00006e20 <.loopLR>:
	.align 2
.loopLR:
	//Load 2*4 words
	ldmia r1!, {r5,r7,r9,r11}  //1+4
    6e20:	ldmia.w	r1!, {r5, r7, r9, fp}
	ldmia r2!, {r6,r8,r10,r12} //1+4	
    6e24:	ldmia.w	r2!, {r6, r8, sl, ip}

	pkhbt r3,r5,r6,LSL #16	//1
    6e28:	pkhbt	r3, r5, r6, lsl #16
	pkhtb r4,r6,r5,ASR #16	//1
    6e2c:	pkhtb	r4, r6, r5, asr #16

	pkhbt r5,r7,r8,LSL #16	//1
    6e30:	pkhbt	r5, r7, r8, lsl #16
	pkhtb r6,r8,r7,ASR #16	//1
    6e34:	pkhtb	r6, r8, r7, asr #16

	pkhbt r7,r9,r10,LSL #16	//1
    6e38:	pkhbt	r7, r9, sl, lsl #16
	pkhtb r8,r10,r9,ASR #16	//1
    6e3c:	pkhtb	r8, sl, r9, asr #16

	pkhbt r9,r11,r12,LSL #16	//1
    6e40:	pkhbt	r9, fp, ip, lsl #16
	pkhtb r10,r12,r11,ASR #16	//1
    6e44:	pkhtb	sl, ip, fp, asr #16

	//Write 8 Words
	stmia r0!, {r3,r4,r5,r6,r7,r8,r9,r10}	//1+8 -> 5+5+8+9 = 27 Cycles to interleave 32 bytes. 
    6e48:	stmia.w	r0!, {r3, r4, r5, r6, r7, r8, r9, sl}
	
	cmp r14, r0
    6e4c:	cmp	lr, r0
	bne .loopLR
    6e4e:	bne.n	6e20 <.loopLR>

	pop	{r4-r11,r14}	
    6e50:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
	pkhtb r6,r8,r7,ASR #16

	stmia r0!, {r3,r4,r5,r6}
	pop	{r4-r8,r14}	
#endif
	BX lr
    6e54:	bx	lr

00006e56 <memcpy_tointerleaveL>:
	memcpy_tointerleaveL:

	@ r0: dst
	@ r1: srcL
	
	mov r2, #0
    6e56:	mov.w	r2, #0
	
#if AUDIO_BLOCK_SAMPLES > 8
	push	{r4-r11}
    6e5a:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}
	add r12,r0,#(AUDIO_BLOCK_SAMPLES*2)
    6e5e:	add.w	ip, r0, #256	; 0x100
    6e62:	nop

00006e64 <.loopL>:
	.align 2
.loopL:

	//Load 4 words
	ldmia r1!, {r5,r7,r9,r11}  //1+4
    6e64:	ldmia.w	r1!, {r5, r7, r9, fp}

	pkhbt r3,r5,r2	//1
    6e68:	pkhbt	r3, r5, r2
	pkhtb r4,r2,r5,ASR #16	//1
    6e6c:	pkhtb	r4, r2, r5, asr #16

	pkhbt r5,r7,r2	//1
    6e70:	pkhbt	r5, r7, r2
	pkhtb r6,r2,r7,ASR #16	//1
    6e74:	pkhtb	r6, r2, r7, asr #16

	pkhbt r7,r9,r2	//1
    6e78:	pkhbt	r7, r9, r2
	pkhtb r8,r2,r9,ASR #16	//1
    6e7c:	pkhtb	r8, r2, r9, asr #16

	pkhbt r9,r11,r2	//1
    6e80:	pkhbt	r9, fp, r2
	pkhtb r10,r2,r11,ASR #16	//1
    6e84:	pkhtb	sl, r2, fp, asr #16

	//Write 8 Words
	stmia r0!, {r3,r4,r5,r6,r7,r8,r9,r10}	//1+8
    6e88:	stmia.w	r0!, {r3, r4, r5, r6, r7, r8, r9, sl}

	cmp r12, r0
    6e8c:	cmp	ip, r0
	bne .loopL
    6e8e:	bne.n	6e64 <.loopL>

	pop	{r4-r11}
    6e90:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}

	stmia r0!, {r3,r4,r5,r6}
	
	pop	{r4-r7}
#endif	
	BX lr
    6e94:	bx	lr

00006e96 <memcpy_tointerleaveR>:
	memcpy_tointerleaveR:

	@ r0: dst
	@ r1: srcR

	mov r2, #0
    6e96:	mov.w	r2, #0
#if AUDIO_BLOCK_SAMPLES > 8
	push	{r4-r11}
    6e9a:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}
	add r12,r0,#(AUDIO_BLOCK_SAMPLES*2)
    6e9e:	add.w	ip, r0, #256	; 0x100
    6ea2:	nop

00006ea4 <.loopR>:
	.align 2
.loopR:

	//Load 4 words
	ldmia r1!, {r5,r7,r9,r11}
    6ea4:	ldmia.w	r1!, {r5, r7, r9, fp}

	pkhbt r3,r2,r5,LSL #16
    6ea8:	pkhbt	r3, r2, r5, lsl #16
	pkhtb r4,r5,r2
    6eac:	pkhbt	r4, r2, r5

	pkhbt r5,r2,r7,LSL #16
    6eb0:	pkhbt	r5, r2, r7, lsl #16
	pkhtb r6,r7,r2
    6eb4:	pkhbt	r6, r2, r7

	pkhbt r7,r2,r9,LSL #16
    6eb8:	pkhbt	r7, r2, r9, lsl #16
	pkhtb r8,r9,r2
    6ebc:	pkhbt	r8, r2, r9

	pkhbt r9,r2,r11,LSL #16
    6ec0:	pkhbt	r9, r2, fp, lsl #16
	pkhtb r10,r11,r2
    6ec4:	pkhbt	sl, r2, fp

	//Write 8 Words
	stmia r0!, {r3,r4,r5,r6,r7,r8,r9,r10}
    6ec8:	stmia.w	r0!, {r3, r4, r5, r6, r7, r8, r9, sl}

	cmp r12, r0
    6ecc:	cmp	ip, r0
	bne .loopR
    6ece:	bne.n	6ea4 <.loopR>

	pop	{r4-r11}
    6ed0:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}
	stmia r0!, {r3,r4,r5,r6}

	pop	{r4-r7}

#endif	
	BX lr
    6ed4:	bx	lr

00006ed6 <memcpy_tointerleaveQuad>:
	@ r1: src1
	@ r2: src2
	@ r3: src3
	@ r4: src4

	push	{r4-r11}
    6ed6:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}
	ldr r4, [sp, #(0+32)] //5th parameter is saved on the stack
    6eda:	ldr	r4, [sp, #32]
	add r11,r0,#(AUDIO_BLOCK_SAMPLES*4)
    6edc:	add.w	fp, r0, #512	; 0x200

00006ee0 <.loopQuad>:
	.align 2
.loopQuad:

	ldr r5, [r1],4
    6ee0:	ldr.w	r5, [r1], #4
	ldr r6, [r3],4
    6ee4:	ldr.w	r6, [r3], #4
	pkhbt r7,r5,r6,LSL #16
    6ee8:	pkhbt	r7, r5, r6, lsl #16
	pkhtb r9,r6,r5,ASR #16
    6eec:	pkhtb	r9, r6, r5, asr #16
	ldr r5, [r2],4
    6ef0:	ldr.w	r5, [r2], #4
	ldr r6, [r4],4
    6ef4:	ldr.w	r6, [r4], #4
	pkhbt r8,r5,r6,LSL #16
    6ef8:	pkhbt	r8, r5, r6, lsl #16
	pkhtb r10,r6,r5,ASR #16
    6efc:	pkhtb	sl, r6, r5, asr #16

	stmia r0!, {r7-r10}
    6f00:	stmia.w	r0!, {r7, r8, r9, sl}

	cmp r11, r0
    6f04:	cmp	fp, r0
	bne .loopQuad
    6f06:	bne.n	6ee0 <.loopQuad>

	pop	{r4-r11}
    6f08:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}
	BX lr
    6f0c:	bx	lr
    6f0e:	nop

00006f10 <memcpy>:
	@ r1: src
	@ r2: len
#ifdef __ARM_FEATURE_UNALIGNED
	/* In case of UNALIGNED access supported, ip is not used in
	   function body.  */
	mov	ip, r0
    6f10:	mov	ip, r0
#else
	push	{r0}
#endif
	orr	r3, r1, r0
    6f12:	orr.w	r3, r1, r0
	ands	r3, r3, #3
    6f16:	ands.w	r3, r3, #3
	bne	.Lmisaligned_copy
    6f1a:	bne.n	6ff8 <memcpy+0xe8>

.Lbig_block:
	subs	r2, __OPT_BIG_BLOCK_SIZE
    6f1c:	subs	r2, #64	; 0x40
	blo	.Lmid_block
    6f1e:	bcc.n	6fa4 <memcpy+0x94>
.Lbig_block_loop:
	BEGIN_UNROLL_BIG_BLOCK
#ifdef __ARM_ARCH_7EM__
	ldr	r3, [r1], #4
	str	r3, [r0], #4
	END_UNROLL
    6f20:	ldr.w	r3, [r1], #4
    6f24:	str.w	r3, [r0], #4
    6f28:	ldr.w	r3, [r1], #4
    6f2c:	str.w	r3, [r0], #4
    6f30:	ldr.w	r3, [r1], #4
    6f34:	str.w	r3, [r0], #4
    6f38:	ldr.w	r3, [r1], #4
    6f3c:	str.w	r3, [r0], #4
    6f40:	ldr.w	r3, [r1], #4
    6f44:	str.w	r3, [r0], #4
    6f48:	ldr.w	r3, [r1], #4
    6f4c:	str.w	r3, [r0], #4
    6f50:	ldr.w	r3, [r1], #4
    6f54:	str.w	r3, [r0], #4
    6f58:	ldr.w	r3, [r1], #4
    6f5c:	str.w	r3, [r0], #4
    6f60:	ldr.w	r3, [r1], #4
    6f64:	str.w	r3, [r0], #4
    6f68:	ldr.w	r3, [r1], #4
    6f6c:	str.w	r3, [r0], #4
    6f70:	ldr.w	r3, [r1], #4
    6f74:	str.w	r3, [r0], #4
    6f78:	ldr.w	r3, [r1], #4
    6f7c:	str.w	r3, [r0], #4
    6f80:	ldr.w	r3, [r1], #4
    6f84:	str.w	r3, [r0], #4
    6f88:	ldr.w	r3, [r1], #4
    6f8c:	str.w	r3, [r0], #4
    6f90:	ldr.w	r3, [r1], #4
    6f94:	str.w	r3, [r0], #4
    6f98:	ldr.w	r3, [r1], #4
    6f9c:	str.w	r3, [r0], #4
	str	r3, [r0, \offset]
	END_UNROLL
	adds	r0, __OPT_BIG_BLOCK_SIZE
	adds	r1, __OPT_BIG_BLOCK_SIZE
#endif
	subs	r2, __OPT_BIG_BLOCK_SIZE
    6fa0:	subs	r2, #64	; 0x40
	bhs .Lbig_block_loop
    6fa2:	bcs.n	6f20 <memcpy+0x10>

.Lmid_block:
	adds	r2, __OPT_BIG_BLOCK_SIZE - __OPT_MID_BLOCK_SIZE
    6fa4:	adds	r2, #48	; 0x30
	blo	.Lcopy_word_by_word
    6fa6:	bcc.n	6fcc <memcpy+0xbc>
.Lmid_block_loop:
	BEGIN_UNROLL_MID_BLOCK
#ifdef __ARM_ARCH_7EM__
	ldr	r3, [r1], #4
	str	r3, [r0], #4
	END_UNROLL
    6fa8:	ldr.w	r3, [r1], #4
    6fac:	str.w	r3, [r0], #4
    6fb0:	ldr.w	r3, [r1], #4
    6fb4:	str.w	r3, [r0], #4
    6fb8:	ldr.w	r3, [r1], #4
    6fbc:	str.w	r3, [r0], #4
    6fc0:	ldr.w	r3, [r1], #4
    6fc4:	str.w	r3, [r0], #4
	str	r3, [r0, \offset]
	END_UNROLL
	adds    r0, __OPT_MID_BLOCK_SIZE
	adds    r1, __OPT_MID_BLOCK_SIZE
#endif
	subs	r2, __OPT_MID_BLOCK_SIZE
    6fc8:	subs	r2, #16
	bhs	.Lmid_block_loop
    6fca:	bcs.n	6fa8 <memcpy+0x98>

.Lcopy_word_by_word:
	adds	r2, __OPT_MID_BLOCK_SIZE - 4
    6fcc:	adds	r2, #12
	blo	.Lcopy_less_than_4
    6fce:	bcc.n	6fdc <memcpy+0xcc>

	/* Kernel loop for small block copy */
	.align 2
.Lcopy_word_by_word_loop:
	ldr	r3, [r1], #4
    6fd0:	ldr.w	r3, [r1], #4
	str	r3, [r0], #4
    6fd4:	str.w	r3, [r0], #4
	subs	r2, #4
    6fd8:	subs	r2, #4
	bhs	.Lcopy_word_by_word_loop
    6fda:	bcs.n	6fd0 <memcpy+0xc0>

.Lcopy_less_than_4:
	adds	r2, #4
    6fdc:	adds	r2, #4
	beq	.Ldone
    6fde:	beq.n	6ff2 <memcpy+0xe2>

	lsls	r2, r2, #31
    6fe0:	lsls	r2, r2, #31
	itt ne
    6fe2:	itt	ne
	ldrbne  r3, [r1], #1
    6fe4:	ldrbne.w	r3, [r1], #1
	strbne  r3, [r0], #1
    6fe8:	strbne.w	r3, [r0], #1

	bcc	.Ldone
    6fec:	bcc.n	6ff2 <memcpy+0xe2>
#ifdef __ARM_FEATURE_UNALIGNED
	ldrh	r3, [r1]
    6fee:	ldrh	r3, [r1, #0]
	strh	r3, [r0]
    6ff0:	strh	r3, [r0, #0]
	strb	r3, [r0, #1]
#endif /* __ARM_FEATURE_UNALIGNED */

.Ldone:
#ifdef __ARM_FEATURE_UNALIGNED
	mov	r0, ip
    6ff2:	mov	r0, ip
#else
	pop	{r0}
#endif
	bx	lr
    6ff4:	bx	lr
    6ff6:	nop
#define Ldst_aligned Lbig_block

	/* Copy word by word using LDR when alignment can be done in hardware,
	i.e., SCTLR.A is set, supporting unaligned access in LDR and STR.  */

	cmp	r2, #8
    6ff8:	cmp	r2, #8
	blo	.Lbyte_copy
    6ffa:	bcc.n	7024 <memcpy+0x114>

	/* if src is aligned, just go to the big block loop.  */
	lsls	r3, r1, #30
    6ffc:	lsls	r3, r1, #30
	beq	.Ldst_aligned
    6ffe:	beq.n	6f1c <memcpy+0xc>
	handling of aligned src and misaligned dst need more overhead than
	otherwise.  By doing this the worst case is when initial src is aligned,
	additional up to 4 byte additional copy will executed, which is
	acceptable.  */

	ands	r3, r0, #3
    7000:	ands.w	r3, r0, #3
	beq	.Ldst_aligned
    7004:	beq.n	6f1c <memcpy+0xc>

	rsb	r3, #4
    7006:	rsb	r3, r3, #4
	subs	r2, r3
    700a:	subs	r2, r2, r3

	lsls    r3, r3, #31
    700c:	lsls	r3, r3, #31
	itt ne
    700e:	itt	ne
	ldrbne  r3, [r1], #1
    7010:	ldrbne.w	r3, [r1], #1
	strbne  r3, [r0], #1
    7014:	strbne.w	r3, [r0], #1

	bcc .Ldst_aligned
    7018:	bcc.n	6f1c <memcpy+0xc>

#ifdef __ARM_FEATURE_UNALIGNED
	ldrh    r3, [r1], #2
    701a:	ldrh.w	r3, [r1], #2
	strh    r3, [r0], #2
    701e:	strh.w	r3, [r0], #2
	b	.Ldst_aligned
    7022:	b.n	6f1c <memcpy+0xc>
	pop	{r4, r5}

#endif /* __ARM_FEATURE_UNALIGNED */

.Lbyte_copy:
	subs	r2, #4
    7024:	subs	r2, #4
	blo	.Lcopy_less_than_4
    7026:	bcc.n	6fdc <memcpy+0xcc>

.Lbyte_copy_loop:
	subs    r2, #1
    7028:	subs	r2, #1
	ldrb    r3, [r1], #1
    702a:	ldrb.w	r3, [r1], #1
	strb    r3, [r0], #1
    702e:	strb.w	r3, [r0], #1
	bhs	.Lbyte_copy_loop
    7032:	bcs.n	7028 <memcpy+0x118>

	ldrb	r3, [r1]
    7034:	ldrb	r3, [r1, #0]
	strb	r3, [r0]
    7036:	strb	r3, [r0, #0]
	ldrb	r3, [r1, #1]
    7038:	ldrb	r3, [r1, #1]
	strb	r3, [r0, #1]
    703a:	strb	r3, [r0, #1]
	ldrb	r3, [r1, #2]
    703c:	ldrb	r3, [r1, #2]
	strb	r3, [r0, #2]
    703e:	strb	r3, [r0, #2]

#ifdef __ARM_FEATURE_UNALIGNED
	mov	r0, ip
    7040:	mov	r0, ip
#else
	pop	{r0}
#endif
	bx	lr
    7042:	bx	lr

00007044 <usb_serial_getchar>:

#define TRANSMIT_FLUSH_TIMEOUT	5   /* in milliseconds */

// get the next character, or -1 if nothing received
int usb_serial_getchar(void)
{
    7044:	push	{r3, r4, r5, lr}
	unsigned int i;
	int c;

	if (!rx_packet) {
    7046:	ldr	r5, [pc, #60]	; (7084 <usb_serial_getchar+0x40>)
    7048:	ldr	r0, [r5, #0]
    704a:	cbz	r0, 706c <usb_serial_getchar+0x28>
		if (!usb_configuration) return -1;
		rx_packet = usb_rx(CDC_RX_ENDPOINT);
		if (!rx_packet) return -1;
	}
	i = rx_packet->index;
    704c:	ldrh	r3, [r0, #2]
	c = rx_packet->buf[i++];
	if (i >= rx_packet->len) {
    704e:	ldrh	r2, [r0, #0]
		if (!usb_configuration) return -1;
		rx_packet = usb_rx(CDC_RX_ENDPOINT);
		if (!rx_packet) return -1;
	}
	i = rx_packet->index;
	c = rx_packet->buf[i++];
    7050:	adds	r1, r0, r3
    7052:	adds	r3, #1
	if (i >= rx_packet->len) {
    7054:	cmp	r3, r2
		if (!usb_configuration) return -1;
		rx_packet = usb_rx(CDC_RX_ENDPOINT);
		if (!rx_packet) return -1;
	}
	i = rx_packet->index;
	c = rx_packet->buf[i++];
    7056:	ldrb	r4, [r1, #8]
	if (i >= rx_packet->len) {
    7058:	bcs.n	7060 <usb_serial_getchar+0x1c>
		usb_free(rx_packet);
		rx_packet = NULL;
	} else {
		rx_packet->index = i;
    705a:	strh	r3, [r0, #2]
	}
	return c;
    705c:	mov	r0, r4
}
    705e:	pop	{r3, r4, r5, pc}
		if (!rx_packet) return -1;
	}
	i = rx_packet->index;
	c = rx_packet->buf[i++];
	if (i >= rx_packet->len) {
		usb_free(rx_packet);
    7060:	bl	7af8 <usb_free>
		rx_packet = NULL;
    7064:	movs	r3, #0
	} else {
		rx_packet->index = i;
	}
	return c;
    7066:	mov	r0, r4
	}
	i = rx_packet->index;
	c = rx_packet->buf[i++];
	if (i >= rx_packet->len) {
		usb_free(rx_packet);
		rx_packet = NULL;
    7068:	str	r3, [r5, #0]
    706a:	pop	{r3, r4, r5, pc}
{
	unsigned int i;
	int c;

	if (!rx_packet) {
		if (!usb_configuration) return -1;
    706c:	ldr	r3, [pc, #24]	; (7088 <usb_serial_getchar+0x44>)
    706e:	ldrb	r3, [r3, #0]
    7070:	cbz	r3, 707e <usb_serial_getchar+0x3a>
		rx_packet = usb_rx(CDC_RX_ENDPOINT);
    7072:	movs	r0, #2
    7074:	bl	7b44 <usb_rx>
    7078:	str	r0, [r5, #0]
		if (!rx_packet) return -1;
    707a:	cmp	r0, #0
    707c:	bne.n	704c <usb_serial_getchar+0x8>
{
	unsigned int i;
	int c;

	if (!rx_packet) {
		if (!usb_configuration) return -1;
    707e:	mov.w	r0, #4294967295
    7082:	pop	{r3, r4, r5, pc}
    7084:	.word	0x20012a08
    7088:	.word	0x20012b38

0000708c <usb_serial_peekchar>:
	return c;
}

// peek at the next character, or -1 if nothing received
int usb_serial_peekchar(void)
{
    708c:	push	{r4, lr}
	if (!rx_packet) {
    708e:	ldr	r4, [pc, #36]	; (70b4 <usb_serial_peekchar+0x28>)
    7090:	ldr	r0, [r4, #0]
    7092:	cbz	r0, 709c <usb_serial_peekchar+0x10>
		if (!usb_configuration) return -1;
		rx_packet = usb_rx(CDC_RX_ENDPOINT);
		if (!rx_packet) return -1;
	}
	if (!rx_packet) return -1;
	return rx_packet->buf[rx_packet->index];
    7094:	ldrh	r3, [r0, #2]
    7096:	add	r0, r3
    7098:	ldrb	r0, [r0, #8]
}
    709a:	pop	{r4, pc}

// peek at the next character, or -1 if nothing received
int usb_serial_peekchar(void)
{
	if (!rx_packet) {
		if (!usb_configuration) return -1;
    709c:	ldr	r3, [pc, #24]	; (70b8 <usb_serial_peekchar+0x2c>)
    709e:	ldrb	r3, [r3, #0]
    70a0:	cbz	r3, 70ae <usb_serial_peekchar+0x22>
		rx_packet = usb_rx(CDC_RX_ENDPOINT);
    70a2:	movs	r0, #2
    70a4:	bl	7b44 <usb_rx>
    70a8:	str	r0, [r4, #0]
		if (!rx_packet) return -1;
    70aa:	cmp	r0, #0
    70ac:	bne.n	7094 <usb_serial_peekchar+0x8>

// peek at the next character, or -1 if nothing received
int usb_serial_peekchar(void)
{
	if (!rx_packet) {
		if (!usb_configuration) return -1;
    70ae:	mov.w	r0, #4294967295
    70b2:	pop	{r4, pc}
    70b4:	.word	0x20012a08
    70b8:	.word	0x20012b38

000070bc <usb_serial_available>:
// number of bytes available in the receive buffer
int usb_serial_available(void)
{
	int count;
	count = usb_rx_byte_count(CDC_RX_ENDPOINT);
	if (rx_packet) count += rx_packet->len - rx_packet->index;
    70bc:	ldr	r3, [pc, #16]	; (70d0 <usb_serial_available+0x14>)
static inline uint32_t usb_rx_byte_count(uint32_t endpoint) __attribute__((always_inline));
static inline uint32_t usb_rx_byte_count(uint32_t endpoint)
{
        endpoint--;
        if (endpoint >= NUM_ENDPOINTS) return 0;
        return usb_rx_byte_count_data[endpoint];
    70be:	ldr	r2, [pc, #20]	; (70d4 <usb_serial_available+0x18>)
    70c0:	ldr	r3, [r3, #0]

// number of bytes available in the receive buffer
int usb_serial_available(void)
{
	int count;
	count = usb_rx_byte_count(CDC_RX_ENDPOINT);
    70c2:	ldrh	r0, [r2, #2]
	if (rx_packet) count += rx_packet->len - rx_packet->index;
    70c4:	cbz	r3, 70ce <usb_serial_available+0x12>
    70c6:	ldrh	r2, [r3, #0]
    70c8:	ldrh	r3, [r3, #2]
    70ca:	subs	r3, r2, r3
    70cc:	add	r0, r3
	return count;
}
    70ce:	bx	lr
    70d0:	.word	0x20012a08
    70d4:	.word	0x20012f68

000070d8 <usb_serial_flush_input>:
// discard any buffered input
void usb_serial_flush_input(void)
{
	usb_packet_t *rx;

	if (!usb_configuration) return;
    70d8:	ldr	r3, [pc, #44]	; (7108 <usb_serial_flush_input+0x30>)
    70da:	ldrb	r3, [r3, #0]
    70dc:	cbz	r3, 7106 <usb_serial_flush_input+0x2e>
	return count;
}

// discard any buffered input
void usb_serial_flush_input(void)
{
    70de:	push	{r4, lr}
	usb_packet_t *rx;

	if (!usb_configuration) return;
	if (rx_packet) {
    70e0:	ldr	r4, [pc, #40]	; (710c <usb_serial_flush_input+0x34>)
    70e2:	ldr	r0, [r4, #0]
    70e4:	cbz	r0, 70fa <usb_serial_flush_input+0x22>
		usb_free(rx_packet);
    70e6:	bl	7af8 <usb_free>
		rx_packet = NULL;
    70ea:	movs	r3, #0
	}
	while (1) {
		rx = usb_rx(CDC_RX_ENDPOINT);
    70ec:	movs	r0, #2
	usb_packet_t *rx;

	if (!usb_configuration) return;
	if (rx_packet) {
		usb_free(rx_packet);
		rx_packet = NULL;
    70ee:	str	r3, [r4, #0]
	}
	while (1) {
		rx = usb_rx(CDC_RX_ENDPOINT);
    70f0:	bl	7b44 <usb_rx>
		if (!rx) break;
    70f4:	cbz	r0, 7104 <usb_serial_flush_input+0x2c>
		usb_free(rx);
    70f6:	bl	7af8 <usb_free>
	if (rx_packet) {
		usb_free(rx_packet);
		rx_packet = NULL;
	}
	while (1) {
		rx = usb_rx(CDC_RX_ENDPOINT);
    70fa:	movs	r0, #2
    70fc:	bl	7b44 <usb_rx>
		if (!rx) break;
    7100:	cmp	r0, #0
    7102:	bne.n	70f6 <usb_serial_flush_input+0x1e>
    7104:	pop	{r4, pc}
    7106:	bx	lr
    7108:	.word	0x20012b38
    710c:	.word	0x20012a08

00007110 <usb_serial_write>:
	return usb_serial_write(&c, 1);
}


int usb_serial_write(const void *buffer, uint32_t size)
{
    7110:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
	uint32_t len;
	uint32_t wait_count;
	const uint8_t *src = (const uint8_t *)buffer;
	uint8_t *dest;

	tx_noautoflush = 1;
    7114:	ldr.w	r9, [pc, #248]	; 7210 <usb_serial_write+0x100>
	return usb_serial_write(&c, 1);
}


int usb_serial_write(const void *buffer, uint32_t size)
{
    7118:	sub	sp, #12
	uint32_t len;
	uint32_t wait_count;
	const uint8_t *src = (const uint8_t *)buffer;
	uint8_t *dest;

	tx_noautoflush = 1;
    711a:	movs	r2, #1
    711c:	strb.w	r2, [r9]
	while (size > 0) {
    7120:	str	r1, [sp, #4]
    7122:	cbz	r1, 7180 <usb_serial_write+0x70>
    7124:	ldr.w	r8, [pc, #236]	; 7214 <usb_serial_write+0x104>
		if (!tx_packet) {
			wait_count = 0;
			while (1) {
				if (!usb_configuration) {
    7128:	ldr	r7, [pc, #212]	; (7200 <usb_serial_write+0xf0>)
	uint32_t wait_count;
	const uint8_t *src = (const uint8_t *)buffer;
	uint8_t *dest;

	tx_noautoflush = 1;
	while (size > 0) {
    712a:	ldr	r6, [sp, #4]
    712c:	mov	fp, r0
		if (!tx_packet) {
    712e:	ldr.w	r0, [r8]
    7132:	cbz	r0, 71a2 <usb_serial_write+0x92>
    7134:	ldr	r5, [pc, #204]	; (7204 <usb_serial_write+0xf4>)
				}
				yield();
			}
		}
		transmit_previous_timeout = 0;
		len = CDC_TX_SIZE - tx_packet->index;
    7136:	ldrh	r4, [r0, #2]
    7138:	rsb	r1, r4, #64	; 0x40
    713c:	cmp	r1, r6
    713e:	it	cs
    7140:	movcs	r1, r6
		if (len > size) len = size;
		dest = tx_packet->buf + tx_packet->index;
		tx_packet->index += len;
    7142:	add.w	lr, r4, r1
					return -1;
				}
				yield();
			}
		}
		transmit_previous_timeout = 0;
    7146:	movs	r2, #0
		len = CDC_TX_SIZE - tx_packet->index;
		if (len > size) len = size;
		dest = tx_packet->buf + tx_packet->index;
		tx_packet->index += len;
    7148:	uxth.w	lr, lr
					return -1;
				}
				yield();
			}
		}
		transmit_previous_timeout = 0;
    714c:	strb	r2, [r5, #0]
		len = CDC_TX_SIZE - tx_packet->index;
		if (len > size) len = size;
		dest = tx_packet->buf + tx_packet->index;
		tx_packet->index += len;
		size -= len;
    714e:	subs	r6, r6, r1
		}
		transmit_previous_timeout = 0;
		len = CDC_TX_SIZE - tx_packet->index;
		if (len > size) len = size;
		dest = tx_packet->buf + tx_packet->index;
		tx_packet->index += len;
    7150:	strh.w	lr, [r0, #2]
			}
		}
		transmit_previous_timeout = 0;
		len = CDC_TX_SIZE - tx_packet->index;
		if (len > size) len = size;
		dest = tx_packet->buf + tx_packet->index;
    7154:	add.w	r2, r0, #8
		tx_packet->index += len;
		size -= len;
		while (len-- > 0) *dest++ = *src++;
    7158:	cbz	r1, 7170 <usb_serial_write+0x60>
    715a:	subs	r4, #1
    715c:	add	r2, r4
    715e:	add	r1, fp
    7160:	ldrb.w	r4, [fp], #1
    7164:	strb.w	r4, [r2, #1]!
    7168:	cmp	fp, r1
    716a:	bne.n	7160 <usb_serial_write+0x50>
    716c:	ldrh.w	lr, [r0, #2]
		if (tx_packet->index >= CDC_TX_SIZE) {
    7170:	cmp.w	lr, #63	; 0x3f
    7174:	bhi.n	718e <usb_serial_write+0x7e>
			tx_packet->len = CDC_TX_SIZE;
			usb_tx(CDC_TX_ENDPOINT, tx_packet);
			tx_packet = NULL;
		}
		usb_cdc_transmit_flush_timer = TRANSMIT_FLUSH_TIMEOUT;
    7176:	ldr	r2, [pc, #144]	; (7208 <usb_serial_write+0xf8>)
    7178:	movs	r1, #5
    717a:	strb	r1, [r2, #0]
	uint32_t wait_count;
	const uint8_t *src = (const uint8_t *)buffer;
	uint8_t *dest;

	tx_noautoflush = 1;
	while (size > 0) {
    717c:	cmp	r6, #0
    717e:	bne.n	712e <usb_serial_write+0x1e>
			tx_packet = NULL;
		}
		usb_cdc_transmit_flush_timer = TRANSMIT_FLUSH_TIMEOUT;
	}
	tx_noautoflush = 0;
	return ret;
    7180:	ldr	r0, [sp, #4]
			usb_tx(CDC_TX_ENDPOINT, tx_packet);
			tx_packet = NULL;
		}
		usb_cdc_transmit_flush_timer = TRANSMIT_FLUSH_TIMEOUT;
	}
	tx_noautoflush = 0;
    7182:	movs	r3, #0
    7184:	strb.w	r3, [r9]
	return ret;
}
    7188:	add	sp, #12
    718a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
		dest = tx_packet->buf + tx_packet->index;
		tx_packet->index += len;
		size -= len;
		while (len-- > 0) *dest++ = *src++;
		if (tx_packet->index >= CDC_TX_SIZE) {
			tx_packet->len = CDC_TX_SIZE;
    718e:	movs	r2, #64	; 0x40
    7190:	strh	r2, [r0, #0]
			usb_tx(CDC_TX_ENDPOINT, tx_packet);
    7192:	mov	r1, r0
    7194:	movs	r0, #3
    7196:	bl	7c3c <usb_tx>
			tx_packet = NULL;
    719a:	movs	r2, #0
    719c:	str.w	r2, [r8]
    71a0:	b.n	7176 <usb_serial_write+0x66>
	tx_noautoflush = 1;
	while (size > 0) {
		if (!tx_packet) {
			wait_count = 0;
			while (1) {
				if (!usb_configuration) {
    71a2:	ldrb	r2, [r7, #0]
    71a4:	cbz	r2, 71f0 <usb_serial_write+0xe0>
    71a6:	ldr	r4, [pc, #100]	; (720c <usb_serial_write+0xfc>)
    71a8:	ldr	r5, [pc, #88]	; (7204 <usb_serial_write+0xf4>)
					tx_noautoflush = 0;
					return -1;
				}
				if (usb_tx_packet_count(CDC_TX_ENDPOINT) < TX_PACKET_LIMIT) {
					tx_noautoflush = 1;
    71aa:	mov.w	sl, #1
    71ae:	b.n	71c0 <usb_serial_write+0xb0>
					tx_packet = usb_malloc();
					if (tx_packet) break;
					tx_noautoflush = 0;
				}
				if (++wait_count > TX_TIMEOUT || transmit_previous_timeout) {
    71b0:	subs	r4, #1
    71b2:	beq.n	71e2 <usb_serial_write+0xd2>
    71b4:	ldrb	r2, [r5, #0]
    71b6:	cbnz	r2, 71e2 <usb_serial_write+0xd2>
					transmit_previous_timeout = 1;
					return -1;
				}
				yield();
    71b8:	bl	8b50 <yield>
	tx_noautoflush = 1;
	while (size > 0) {
		if (!tx_packet) {
			wait_count = 0;
			while (1) {
				if (!usb_configuration) {
    71bc:	ldrb	r2, [r7, #0]
    71be:	cbz	r2, 71f0 <usb_serial_write+0xe0>
					tx_noautoflush = 0;
					return -1;
				}
				if (usb_tx_packet_count(CDC_TX_ENDPOINT) < TX_PACKET_LIMIT) {
    71c0:	movs	r0, #3
    71c2:	bl	7b80 <usb_tx_packet_count>
    71c6:	cmp	r0, #7
    71c8:	bhi.n	71b0 <usb_serial_write+0xa0>
					tx_noautoflush = 1;
    71ca:	strb.w	sl, [r9]
					tx_packet = usb_malloc();
    71ce:	bl	7ab8 <usb_malloc>
    71d2:	str.w	r0, [r8]
					if (tx_packet) break;
    71d6:	cmp	r0, #0
    71d8:	bne.n	7136 <usb_serial_write+0x26>
					tx_noautoflush = 0;
    71da:	ldr	r3, [pc, #52]	; (7210 <usb_serial_write+0x100>)
				}
				if (++wait_count > TX_TIMEOUT || transmit_previous_timeout) {
    71dc:	subs	r4, #1
				}
				if (usb_tx_packet_count(CDC_TX_ENDPOINT) < TX_PACKET_LIMIT) {
					tx_noautoflush = 1;
					tx_packet = usb_malloc();
					if (tx_packet) break;
					tx_noautoflush = 0;
    71de:	strb	r0, [r3, #0]
				}
				if (++wait_count > TX_TIMEOUT || transmit_previous_timeout) {
    71e0:	bne.n	71b4 <usb_serial_write+0xa4>
					transmit_previous_timeout = 1;
    71e2:	movs	r3, #1
					return -1;
    71e4:	mov.w	r0, #4294967295
					tx_packet = usb_malloc();
					if (tx_packet) break;
					tx_noautoflush = 0;
				}
				if (++wait_count > TX_TIMEOUT || transmit_previous_timeout) {
					transmit_previous_timeout = 1;
    71e8:	strb	r3, [r5, #0]
		}
		usb_cdc_transmit_flush_timer = TRANSMIT_FLUSH_TIMEOUT;
	}
	tx_noautoflush = 0;
	return ret;
}
    71ea:	add	sp, #12
    71ec:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	while (size > 0) {
		if (!tx_packet) {
			wait_count = 0;
			while (1) {
				if (!usb_configuration) {
					tx_noautoflush = 0;
    71f0:	movs	r3, #0
					return -1;
    71f2:	mov.w	r0, #4294967295
	while (size > 0) {
		if (!tx_packet) {
			wait_count = 0;
			while (1) {
				if (!usb_configuration) {
					tx_noautoflush = 0;
    71f6:	strb.w	r3, [r9]
		}
		usb_cdc_transmit_flush_timer = TRANSMIT_FLUSH_TIMEOUT;
	}
	tx_noautoflush = 0;
	return ret;
}
    71fa:	add	sp, #12
    71fc:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    7200:	.word	0x20012b38
    7204:	.word	0x20012a04
    7208:	.word	0x200129fd
    720c:	.word	0x00014821
    7210:	.word	0x200129fe
    7214:	.word	0x20012a00

00007218 <usb_serial_putchar>:
static uint8_t transmit_previous_timeout=0;


// transmit a character.  0 returned on success, -1 on error
int usb_serial_putchar(uint8_t c)
{
    7218:	push	{lr}
    721a:	sub	sp, #12
    721c:	add	r3, sp, #8
	return usb_serial_write(&c, 1);
    721e:	movs	r1, #1
static uint8_t transmit_previous_timeout=0;


// transmit a character.  0 returned on success, -1 on error
int usb_serial_putchar(uint8_t c)
{
    7220:	strb.w	r0, [r3, #-1]!
	return usb_serial_write(&c, 1);
    7224:	mov	r0, r3
    7226:	bl	7110 <usb_serial_write>
}
    722a:	add	sp, #12
    722c:	ldr.w	pc, [sp], #4

00007230 <usb_serial_write_buffer_free>:
	tx_noautoflush = 0;
	return ret;
}

int usb_serial_write_buffer_free(void)
{
    7230:	push	{r3, r4, r5, lr}
	uint32_t len;

	tx_noautoflush = 1;
	if (!tx_packet) {
    7232:	ldr	r5, [pc, #56]	; (726c <usb_serial_write_buffer_free+0x3c>)

int usb_serial_write_buffer_free(void)
{
	uint32_t len;

	tx_noautoflush = 1;
    7234:	ldr	r4, [pc, #56]	; (7270 <usb_serial_write_buffer_free+0x40>)
	if (!tx_packet) {
    7236:	ldr	r0, [r5, #0]

int usb_serial_write_buffer_free(void)
{
	uint32_t len;

	tx_noautoflush = 1;
    7238:	movs	r3, #1
    723a:	strb	r3, [r4, #0]
	if (!tx_packet) {
    723c:	cbz	r0, 724a <usb_serial_write_buffer_free+0x1a>
		  (tx_packet = usb_malloc()) == NULL) {
			tx_noautoflush = 0;
			return 0;
		}
	}
	len = CDC_TX_SIZE - tx_packet->index;
    723e:	ldrh	r0, [r0, #2]
	// space we just promised the user could write without blocking?
	// But does this come with other performance downsides?  Could it lead to
	// buffer data never actually transmitting in some usage cases?  More
	// investigation is needed.
	// https://github.com/PaulStoffregen/cores/issues/10#issuecomment-61514955
	tx_noautoflush = 0;
    7240:	movs	r3, #0
    7242:	strb	r3, [r4, #0]
		  (tx_packet = usb_malloc()) == NULL) {
			tx_noautoflush = 0;
			return 0;
		}
	}
	len = CDC_TX_SIZE - tx_packet->index;
    7244:	rsb	r0, r0, #64	; 0x40
	// buffer data never actually transmitting in some usage cases?  More
	// investigation is needed.
	// https://github.com/PaulStoffregen/cores/issues/10#issuecomment-61514955
	tx_noautoflush = 0;
	return len;
}
    7248:	pop	{r3, r4, r5, pc}
{
	uint32_t len;

	tx_noautoflush = 1;
	if (!tx_packet) {
		if (!usb_configuration ||
    724a:	ldr	r3, [pc, #40]	; (7274 <usb_serial_write_buffer_free+0x44>)
    724c:	ldrb	r3, [r3, #0]
    724e:	cbnz	r3, 7256 <usb_serial_write_buffer_free+0x26>
		  usb_tx_packet_count(CDC_TX_ENDPOINT) >= TX_PACKET_LIMIT ||
		  (tx_packet = usb_malloc()) == NULL) {
			tx_noautoflush = 0;
    7250:	movs	r0, #0
    7252:	strb	r0, [r4, #0]
			return 0;
    7254:	pop	{r3, r4, r5, pc}
	uint32_t len;

	tx_noautoflush = 1;
	if (!tx_packet) {
		if (!usb_configuration ||
		  usb_tx_packet_count(CDC_TX_ENDPOINT) >= TX_PACKET_LIMIT ||
    7256:	movs	r0, #3
    7258:	bl	7b80 <usb_tx_packet_count>
{
	uint32_t len;

	tx_noautoflush = 1;
	if (!tx_packet) {
		if (!usb_configuration ||
    725c:	cmp	r0, #7
    725e:	bhi.n	7250 <usb_serial_write_buffer_free+0x20>
		  usb_tx_packet_count(CDC_TX_ENDPOINT) >= TX_PACKET_LIMIT ||
		  (tx_packet = usb_malloc()) == NULL) {
    7260:	bl	7ab8 <usb_malloc>
    7264:	str	r0, [r5, #0]
	uint32_t len;

	tx_noautoflush = 1;
	if (!tx_packet) {
		if (!usb_configuration ||
		  usb_tx_packet_count(CDC_TX_ENDPOINT) >= TX_PACKET_LIMIT ||
    7266:	cmp	r0, #0
    7268:	bne.n	723e <usb_serial_write_buffer_free+0xe>
    726a:	b.n	7250 <usb_serial_write_buffer_free+0x20>
    726c:	.word	0x20012a00
    7270:	.word	0x200129fe
    7274:	.word	0x20012b38

00007278 <usb_serial_flush_output>:
	tx_noautoflush = 0;
	return len;
}

void usb_serial_flush_output(void)
{
    7278:	push	{r3, r4, r5, r6, r7, lr}
	if (!usb_configuration) return;
    727a:	ldr	r3, [pc, #68]	; (72c0 <usb_serial_flush_output+0x48>)
    727c:	ldrb	r3, [r3, #0]
    727e:	cbz	r3, 72a4 <usb_serial_flush_output+0x2c>
	tx_noautoflush = 1;
	if (tx_packet) {
    7280:	ldr	r6, [pc, #64]	; (72c4 <usb_serial_flush_output+0x4c>)
}

void usb_serial_flush_output(void)
{
	if (!usb_configuration) return;
	tx_noautoflush = 1;
    7282:	ldr	r5, [pc, #68]	; (72c8 <usb_serial_flush_output+0x50>)
	if (tx_packet) {
    7284:	ldr	r4, [r6, #0]
}

void usb_serial_flush_output(void)
{
	if (!usb_configuration) return;
	tx_noautoflush = 1;
    7286:	movs	r7, #1
    7288:	strb	r7, [r5, #0]
	if (tx_packet) {
    728a:	cbz	r4, 72a6 <usb_serial_flush_output+0x2e>
		usb_cdc_transmit_flush_timer = 0;
    728c:	ldr	r2, [pc, #60]	; (72cc <usb_serial_flush_output+0x54>)
		tx_packet->len = tx_packet->index;
    728e:	ldrh	r3, [r4, #2]
void usb_serial_flush_output(void)
{
	if (!usb_configuration) return;
	tx_noautoflush = 1;
	if (tx_packet) {
		usb_cdc_transmit_flush_timer = 0;
    7290:	movs	r7, #0
    7292:	strb	r7, [r2, #0]
		tx_packet->len = tx_packet->index;
		usb_tx(CDC_TX_ENDPOINT, tx_packet);
    7294:	mov	r1, r4
{
	if (!usb_configuration) return;
	tx_noautoflush = 1;
	if (tx_packet) {
		usb_cdc_transmit_flush_timer = 0;
		tx_packet->len = tx_packet->index;
    7296:	strh	r3, [r4, #0]
		usb_tx(CDC_TX_ENDPOINT, tx_packet);
    7298:	movs	r0, #3
    729a:	bl	7c3c <usb_tx>
		tx_packet = NULL;
    729e:	str	r7, [r6, #0]
			usb_tx(CDC_TX_ENDPOINT, tx);
		} else {
			usb_cdc_transmit_flush_timer = 1;
		}
	}
	tx_noautoflush = 0;
    72a0:	movs	r3, #0
    72a2:	strb	r3, [r5, #0]
    72a4:	pop	{r3, r4, r5, r6, r7, pc}
		usb_cdc_transmit_flush_timer = 0;
		tx_packet->len = tx_packet->index;
		usb_tx(CDC_TX_ENDPOINT, tx_packet);
		tx_packet = NULL;
	} else {
		usb_packet_t *tx = usb_malloc();
    72a6:	bl	7ab8 <usb_malloc>
		if (tx) {
			usb_cdc_transmit_flush_timer = 0;
    72aa:	ldr	r3, [pc, #32]	; (72cc <usb_serial_flush_output+0x54>)
		tx_packet->len = tx_packet->index;
		usb_tx(CDC_TX_ENDPOINT, tx_packet);
		tx_packet = NULL;
	} else {
		usb_packet_t *tx = usb_malloc();
		if (tx) {
    72ac:	cbz	r0, 72ba <usb_serial_flush_output+0x42>
			usb_cdc_transmit_flush_timer = 0;
			usb_tx(CDC_TX_ENDPOINT, tx);
    72ae:	mov	r1, r0
    72b0:	movs	r0, #3
		usb_tx(CDC_TX_ENDPOINT, tx_packet);
		tx_packet = NULL;
	} else {
		usb_packet_t *tx = usb_malloc();
		if (tx) {
			usb_cdc_transmit_flush_timer = 0;
    72b2:	strb	r4, [r3, #0]
			usb_tx(CDC_TX_ENDPOINT, tx);
    72b4:	bl	7c3c <usb_tx>
    72b8:	b.n	72a0 <usb_serial_flush_output+0x28>
		} else {
			usb_cdc_transmit_flush_timer = 1;
    72ba:	strb	r7, [r3, #0]
    72bc:	b.n	72a0 <usb_serial_flush_output+0x28>
    72be:	nop
    72c0:	.word	0x20012b38
    72c4:	.word	0x20012a00
    72c8:	.word	0x200129fe
    72cc:	.word	0x200129fd

000072d0 <usb_serial_flush_callback>:
	}
	tx_noautoflush = 0;
}

void usb_serial_flush_callback(void)
{
    72d0:	push	{r3, r4, r5, lr}
	if (tx_noautoflush) return;
    72d2:	ldr	r3, [pc, #56]	; (730c <usb_serial_flush_callback+0x3c>)
    72d4:	ldrb	r3, [r3, #0]
    72d6:	cbnz	r3, 72f6 <usb_serial_flush_callback+0x26>
	if (tx_packet) {
    72d8:	ldr	r4, [pc, #52]	; (7310 <usb_serial_flush_callback+0x40>)
    72da:	ldr	r1, [r4, #0]
    72dc:	cbz	r1, 72f8 <usb_serial_flush_callback+0x28>
    72de:	and.w	r5, r3, #255	; 0xff
		tx_packet->len = tx_packet->index;
    72e2:	ldrh	r3, [r1, #2]
    72e4:	strh	r3, [r1, #0]
		usb_tx(CDC_TX_ENDPOINT, tx_packet);
    72e6:	movs	r0, #3
    72e8:	bl	7c3c <usb_tx>
		tx_packet = NULL;
    72ec:	str	r5, [r4, #0]
    72ee:	pop	{r3, r4, r5, pc}
	} else {
		usb_packet_t *tx = usb_malloc();
		if (tx) {
			usb_tx(CDC_TX_ENDPOINT, tx);
		} else {
			usb_cdc_transmit_flush_timer = 1;
    72f0:	ldr	r3, [pc, #32]	; (7314 <usb_serial_flush_callback+0x44>)
    72f2:	movs	r2, #1
    72f4:	strb	r2, [r3, #0]
    72f6:	pop	{r3, r4, r5, pc}
	if (tx_packet) {
		tx_packet->len = tx_packet->index;
		usb_tx(CDC_TX_ENDPOINT, tx_packet);
		tx_packet = NULL;
	} else {
		usb_packet_t *tx = usb_malloc();
    72f8:	bl	7ab8 <usb_malloc>
		if (tx) {
    72fc:	cmp	r0, #0
    72fe:	beq.n	72f0 <usb_serial_flush_callback+0x20>
			usb_tx(CDC_TX_ENDPOINT, tx);
    7300:	mov	r1, r0
		} else {
			usb_cdc_transmit_flush_timer = 1;
		}
	}
}
    7302:	ldmia.w	sp!, {r3, r4, r5, lr}
		usb_tx(CDC_TX_ENDPOINT, tx_packet);
		tx_packet = NULL;
	} else {
		usb_packet_t *tx = usb_malloc();
		if (tx) {
			usb_tx(CDC_TX_ENDPOINT, tx);
    7306:	movs	r0, #3
    7308:	b.w	7c3c <usb_tx>
    730c:	.word	0x200129fe
    7310:	.word	0x20012a00
    7314:	.word	0x200129fd

00007318 <wait_for_cal>:
{
	uint16_t sum;

	//serial_print("wait_for_cal\n");
#if defined(HAS_KINETIS_ADC0) && defined(HAS_KINETIS_ADC1)
	while ((ADC0_SC3 & ADC_SC3_CAL) || (ADC1_SC3 & ADC_SC3_CAL)) {
    7318:	ldr	r2, [pc, #220]	; (73f8 <wait_for_cal+0xe0>)
    731a:	ldr	r1, [pc, #224]	; (73fc <wait_for_cal+0xe4>)
    731c:	ldr	r3, [r2, #0]
    731e:	lsls	r3, r3, #24
    7320:	bmi.n	731c <wait_for_cal+0x4>
    7322:	ldr	r3, [r1, #0]
    7324:	ands.w	r3, r3, #128	; 0x80
    7328:	bne.n	731c <wait_for_cal+0x4>
#elif defined(HAS_KINETIS_ADC0)
	while (ADC0_SC3 & ADC_SC3_CAL) {
		// wait
	}
#endif
	__disable_irq();
    732a:	cpsid	i
	if (calibrating) {
    732c:	ldr	r1, [pc, #208]	; (7400 <wait_for_cal+0xe8>)
    732e:	ldrb	r2, [r1, #0]
    7330:	cmp	r2, #0
    7332:	beq.n	73f4 <wait_for_cal+0xdc>
		//serial_print("\n");
		sum = ADC0_CLPS + ADC0_CLP4 + ADC0_CLP3 + ADC0_CLP2 + ADC0_CLP1 + ADC0_CLP0;
    7334:	ldr	r2, [pc, #204]	; (7404 <wait_for_cal+0xec>)
    7336:	ldr	r0, [pc, #208]	; (7408 <wait_for_cal+0xf0>)
	}
	calibrating = 1;
}

static void wait_for_cal(void)
{
    7338:	push	{r4, r5, r6, r7}
	}
#endif
	__disable_irq();
	if (calibrating) {
		//serial_print("\n");
		sum = ADC0_CLPS + ADC0_CLP4 + ADC0_CLP3 + ADC0_CLP2 + ADC0_CLP1 + ADC0_CLP0;
    733a:	ldr	r4, [pc, #208]	; (740c <wait_for_cal+0xf4>)
    733c:	ldr	r7, [r2, #0]
    733e:	ldr	r6, [r0, #0]
    7340:	ldr	r5, [r4, #0]
    7342:	ldr	r4, [r2, #12]
    7344:	adds	r0, #12
		sum = (sum / 2) | 0x8000;
    7346:	add	r6, r7
	}
#endif
	__disable_irq();
	if (calibrating) {
		//serial_print("\n");
		sum = ADC0_CLPS + ADC0_CLP4 + ADC0_CLP3 + ADC0_CLP2 + ADC0_CLP1 + ADC0_CLP0;
    7348:	adds	r2, #20
    734a:	ldr	r0, [r0, #0]
    734c:	ldr	r2, [r2, #0]
		sum = (sum / 2) | 0x8000;
		ADC0_PG = sum;
    734e:	ldr	r7, [pc, #192]	; (7410 <wait_for_cal+0xf8>)
#endif
	__disable_irq();
	if (calibrating) {
		//serial_print("\n");
		sum = ADC0_CLPS + ADC0_CLP4 + ADC0_CLP3 + ADC0_CLP2 + ADC0_CLP1 + ADC0_CLP0;
		sum = (sum / 2) | 0x8000;
    7350:	add	r5, r6
    7352:	add	r4, r5
    7354:	add	r0, r4
    7356:	add	r2, r0
    7358:	ubfx	r2, r2, #1, #15
		ADC0_PG = sum;
		//serial_print("ADC0_PG = ");
		//serial_phex16(sum);
		//serial_print("\n");
		sum = ADC0_CLMS + ADC0_CLM4 + ADC0_CLM3 + ADC0_CLM2 + ADC0_CLM1 + ADC0_CLM0;
    735c:	ldr	r6, [pc, #180]	; (7414 <wait_for_cal+0xfc>)
    735e:	ldr	r0, [pc, #184]	; (7418 <wait_for_cal+0x100>)
    7360:	ldr	r5, [pc, #184]	; (741c <wait_for_cal+0x104>)
    7362:	ldr	r4, [pc, #188]	; (7420 <wait_for_cal+0x108>)
	__disable_irq();
	if (calibrating) {
		//serial_print("\n");
		sum = ADC0_CLPS + ADC0_CLP4 + ADC0_CLP3 + ADC0_CLP2 + ADC0_CLP1 + ADC0_CLP0;
		sum = (sum / 2) | 0x8000;
		ADC0_PG = sum;
    7364:	orr.w	r2, r2, #32768	; 0x8000
    7368:	str	r2, [r7, #0]
		//serial_print("ADC0_PG = ");
		//serial_phex16(sum);
		//serial_print("\n");
		sum = ADC0_CLMS + ADC0_CLM4 + ADC0_CLM3 + ADC0_CLM2 + ADC0_CLM1 + ADC0_CLM0;
    736a:	ldr	r7, [r6, #0]
    736c:	ldr	r6, [r0, #0]
    736e:	ldr	r5, [r5, #0]
    7370:	ldr	r2, [pc, #176]	; (7424 <wait_for_cal+0x10c>)
    7372:	ldr	r4, [r4, #0]
    7374:	adds	r0, #12
		sum = (sum / 2) | 0x8000;
    7376:	add	r6, r7
		sum = (sum / 2) | 0x8000;
		ADC0_PG = sum;
		//serial_print("ADC0_PG = ");
		//serial_phex16(sum);
		//serial_print("\n");
		sum = ADC0_CLMS + ADC0_CLM4 + ADC0_CLM3 + ADC0_CLM2 + ADC0_CLM1 + ADC0_CLM0;
    7378:	ldr	r0, [r0, #0]
    737a:	ldr	r2, [r2, #0]
		sum = (sum / 2) | 0x8000;
		ADC0_MG = sum;
    737c:	ldr	r7, [pc, #168]	; (7428 <wait_for_cal+0x110>)
		ADC0_PG = sum;
		//serial_print("ADC0_PG = ");
		//serial_phex16(sum);
		//serial_print("\n");
		sum = ADC0_CLMS + ADC0_CLM4 + ADC0_CLM3 + ADC0_CLM2 + ADC0_CLM1 + ADC0_CLM0;
		sum = (sum / 2) | 0x8000;
    737e:	add	r5, r6
    7380:	add	r4, r5
    7382:	add	r0, r4
    7384:	add	r2, r0
    7386:	ubfx	r2, r2, #1, #15
		ADC0_MG = sum;
		//serial_print("ADC0_MG = ");
		//serial_phex16(sum);
		//serial_print("\n");
#ifdef HAS_KINETIS_ADC1
		sum = ADC1_CLPS + ADC1_CLP4 + ADC1_CLP3 + ADC1_CLP2 + ADC1_CLP1 + ADC1_CLP0;
    738a:	ldr	r6, [pc, #160]	; (742c <wait_for_cal+0x114>)
    738c:	ldr	r0, [pc, #160]	; (7430 <wait_for_cal+0x118>)
    738e:	ldr	r5, [pc, #164]	; (7434 <wait_for_cal+0x11c>)
    7390:	ldr	r4, [pc, #164]	; (7438 <wait_for_cal+0x120>)
		//serial_print("ADC0_PG = ");
		//serial_phex16(sum);
		//serial_print("\n");
		sum = ADC0_CLMS + ADC0_CLM4 + ADC0_CLM3 + ADC0_CLM2 + ADC0_CLM1 + ADC0_CLM0;
		sum = (sum / 2) | 0x8000;
		ADC0_MG = sum;
    7392:	orr.w	r2, r2, #32768	; 0x8000
    7396:	str	r2, [r7, #0]
		//serial_print("ADC0_MG = ");
		//serial_phex16(sum);
		//serial_print("\n");
#ifdef HAS_KINETIS_ADC1
		sum = ADC1_CLPS + ADC1_CLP4 + ADC1_CLP3 + ADC1_CLP2 + ADC1_CLP1 + ADC1_CLP0;
    7398:	ldr	r7, [r6, #0]
    739a:	ldr	r6, [r0, #0]
    739c:	ldr	r5, [r5, #0]
    739e:	ldr	r2, [pc, #156]	; (743c <wait_for_cal+0x124>)
    73a0:	ldr	r4, [r4, #0]
    73a2:	adds	r0, #12
		sum = (sum / 2) | 0x8000;
    73a4:	add	r6, r7
		ADC0_MG = sum;
		//serial_print("ADC0_MG = ");
		//serial_phex16(sum);
		//serial_print("\n");
#ifdef HAS_KINETIS_ADC1
		sum = ADC1_CLPS + ADC1_CLP4 + ADC1_CLP3 + ADC1_CLP2 + ADC1_CLP1 + ADC1_CLP0;
    73a6:	ldr	r0, [r0, #0]
    73a8:	ldr	r2, [r2, #0]
		sum = (sum / 2) | 0x8000;
		ADC1_PG = sum;
    73aa:	ldr	r7, [pc, #148]	; (7440 <wait_for_cal+0x128>)
		//serial_print("ADC0_MG = ");
		//serial_phex16(sum);
		//serial_print("\n");
#ifdef HAS_KINETIS_ADC1
		sum = ADC1_CLPS + ADC1_CLP4 + ADC1_CLP3 + ADC1_CLP2 + ADC1_CLP1 + ADC1_CLP0;
		sum = (sum / 2) | 0x8000;
    73ac:	add	r5, r6
    73ae:	add	r4, r5
    73b0:	add	r0, r4
    73b2:	add	r2, r0
    73b4:	ubfx	r2, r2, #1, #15
		ADC1_PG = sum;
		sum = ADC1_CLMS + ADC1_CLM4 + ADC1_CLM3 + ADC1_CLM2 + ADC1_CLM1 + ADC1_CLM0;
    73b8:	ldr	r6, [pc, #136]	; (7444 <wait_for_cal+0x12c>)
    73ba:	ldr	r0, [pc, #140]	; (7448 <wait_for_cal+0x130>)
    73bc:	ldr	r5, [pc, #140]	; (744c <wait_for_cal+0x134>)
    73be:	ldr	r4, [pc, #144]	; (7450 <wait_for_cal+0x138>)
		//serial_phex16(sum);
		//serial_print("\n");
#ifdef HAS_KINETIS_ADC1
		sum = ADC1_CLPS + ADC1_CLP4 + ADC1_CLP3 + ADC1_CLP2 + ADC1_CLP1 + ADC1_CLP0;
		sum = (sum / 2) | 0x8000;
		ADC1_PG = sum;
    73c0:	orr.w	r2, r2, #32768	; 0x8000
    73c4:	str	r2, [r7, #0]
		sum = ADC1_CLMS + ADC1_CLM4 + ADC1_CLM3 + ADC1_CLM2 + ADC1_CLM1 + ADC1_CLM0;
    73c6:	ldr	r7, [r6, #0]
    73c8:	ldr	r6, [r0, #0]
    73ca:	ldr	r5, [r5, #0]
    73cc:	ldr	r2, [pc, #132]	; (7454 <wait_for_cal+0x13c>)
    73ce:	ldr	r4, [r4, #0]
    73d0:	adds	r0, #12
		sum = (sum / 2) | 0x8000;
    73d2:	add	r6, r7
		//serial_print("\n");
#ifdef HAS_KINETIS_ADC1
		sum = ADC1_CLPS + ADC1_CLP4 + ADC1_CLP3 + ADC1_CLP2 + ADC1_CLP1 + ADC1_CLP0;
		sum = (sum / 2) | 0x8000;
		ADC1_PG = sum;
		sum = ADC1_CLMS + ADC1_CLM4 + ADC1_CLM3 + ADC1_CLM2 + ADC1_CLM1 + ADC1_CLM0;
    73d4:	ldr	r0, [r0, #0]
    73d6:	ldr	r2, [r2, #0]
		sum = (sum / 2) | 0x8000;
    73d8:	add	r5, r6
    73da:	add	r4, r5
    73dc:	add	r0, r4
    73de:	add	r2, r0
    73e0:	ubfx	r2, r2, #1, #15
		ADC1_MG = sum;
    73e4:	ldr	r0, [pc, #112]	; (7458 <wait_for_cal+0x140>)
    73e6:	orr.w	r2, r2, #32768	; 0x8000
    73ea:	str	r2, [r0, #0]
#endif
		calibrating = 0;
    73ec:	strb	r3, [r1, #0]
	}
	__enable_irq();
    73ee:	cpsie	i
}
    73f0:	pop	{r4, r5, r6, r7}
    73f2:	bx	lr
		sum = (sum / 2) | 0x8000;
		ADC1_MG = sum;
#endif
		calibrating = 0;
	}
	__enable_irq();
    73f4:	cpsie	i
    73f6:	bx	lr
    73f8:	.word	0x4003b024
    73fc:	.word	0x400bb024
    7400:	.word	0x20012a0e
    7404:	.word	0x4003b038
    7408:	.word	0x4003b03c
    740c:	.word	0x4003b040
    7410:	.word	0x4003b02c
    7414:	.word	0x4003b058
    7418:	.word	0x4003b05c
    741c:	.word	0x4003b060
    7420:	.word	0x4003b064
    7424:	.word	0x4003b06c
    7428:	.word	0x4003b030
    742c:	.word	0x400bb038
    7430:	.word	0x400bb03c
    7434:	.word	0x400bb040
    7438:	.word	0x400bb044
    743c:	.word	0x400bb04c
    7440:	.word	0x400bb02c
    7444:	.word	0x400bb058
    7448:	.word	0x400bb05c
    744c:	.word	0x400bb060
    7450:	.word	0x400bb064
    7454:	.word	0x400bb06c
    7458:	.word	0x400bb030

0000745c <analog_init>:
#else
#error "F_BUS must be 128, 120, 108, 96, 90, 80, 72, 64, 60, 56, 54, 48, 40, 36, 24, 4 or 2 MHz"
#endif

void analog_init(void)
{
    745c:	push	{r4, r5}
	uint32_t num;

	#if defined(__MK20DX128__) || defined(__MK20DX256__) || defined(__MK64FX512__) || defined(__MK66FX1M0__)
	VREF_TRM = 0x60;
    745e:	ldr	r0, [pc, #164]	; (7504 <analog_init+0xa8>)
	VREF_SC = 0xE1;		// enable 1.2 volt ref
    7460:	ldr	r2, [pc, #164]	; (7508 <analog_init+0xac>)
	#endif

	if (analog_config_bits == 8) {
    7462:	ldr	r3, [pc, #168]	; (750c <analog_init+0xb0>)
		ADC0_CFG1 = ADC_CFG1_8BIT + ADC_CFG1_MODE(0);
    7464:	ldr	r5, [pc, #168]	; (7510 <analog_init+0xb4>)
void analog_init(void)
{
	uint32_t num;

	#if defined(__MK20DX128__) || defined(__MK20DX256__) || defined(__MK64FX512__) || defined(__MK66FX1M0__)
	VREF_TRM = 0x60;
    7466:	movs	r4, #96	; 0x60
	VREF_SC = 0xE1;		// enable 1.2 volt ref
    7468:	movs	r1, #225	; 0xe1
void analog_init(void)
{
	uint32_t num;

	#if defined(__MK20DX128__) || defined(__MK20DX256__) || defined(__MK64FX512__) || defined(__MK66FX1M0__)
	VREF_TRM = 0x60;
    746a:	strb	r4, [r0, #0]
	VREF_SC = 0xE1;		// enable 1.2 volt ref
    746c:	strb	r1, [r2, #0]
	#endif

	if (analog_config_bits == 8) {
    746e:	ldrb	r3, [r3, #0]
		ADC0_CFG1 = ADC_CFG1_8BIT + ADC_CFG1_MODE(0);
		ADC0_CFG2 = ADC_CFG2_MUXSEL + ADC_CFG2_ADLSTS(3);
    7470:	ldr	r4, [pc, #160]	; (7514 <analog_init+0xb8>)
	#if defined(__MK20DX128__) || defined(__MK20DX256__) || defined(__MK64FX512__) || defined(__MK66FX1M0__)
	VREF_TRM = 0x60;
	VREF_SC = 0xE1;		// enable 1.2 volt ref
	#endif

	if (analog_config_bits == 8) {
    7472:	cmp	r3, #8
    7474:	beq.n	74d8 <analog_init+0x7c>
		ADC0_CFG2 = ADC_CFG2_MUXSEL + ADC_CFG2_ADLSTS(3);
		#ifdef HAS_KINETIS_ADC1
		ADC1_CFG1 = ADC_CFG1_8BIT + ADC_CFG1_MODE(0);
		ADC1_CFG2 = ADC_CFG2_MUXSEL + ADC_CFG2_ADLSTS(3);
		#endif
	} else if (analog_config_bits == 10) {
    7476:	cmp	r3, #10
		ADC0_CFG1 = ADC_CFG1_10BIT + ADC_CFG1_MODE(2) + ADC_CFG1_ADLSMP;
		ADC0_CFG2 = ADC_CFG2_MUXSEL + ADC_CFG2_ADLSTS(3);
		#ifdef HAS_KINETIS_ADC1
		ADC1_CFG1 = ADC_CFG1_10BIT + ADC_CFG1_MODE(2) + ADC_CFG1_ADLSMP;
    7478:	ldr	r0, [pc, #156]	; (7518 <analog_init+0xbc>)
		ADC1_CFG2 = ADC_CFG2_MUXSEL + ADC_CFG2_ADLSTS(3);
    747a:	ldr	r1, [pc, #160]	; (751c <analog_init+0xc0>)
		ADC0_CFG2 = ADC_CFG2_MUXSEL + ADC_CFG2_ADLSTS(3);
		#ifdef HAS_KINETIS_ADC1
		ADC1_CFG1 = ADC_CFG1_8BIT + ADC_CFG1_MODE(0);
		ADC1_CFG2 = ADC_CFG2_MUXSEL + ADC_CFG2_ADLSTS(3);
		#endif
	} else if (analog_config_bits == 10) {
    747c:	beq.n	74ee <analog_init+0x92>
		ADC0_CFG2 = ADC_CFG2_MUXSEL + ADC_CFG2_ADLSTS(3);
		#ifdef HAS_KINETIS_ADC1
		ADC1_CFG1 = ADC_CFG1_10BIT + ADC_CFG1_MODE(2) + ADC_CFG1_ADLSMP;
		ADC1_CFG2 = ADC_CFG2_MUXSEL + ADC_CFG2_ADLSTS(3);
		#endif
	} else if (analog_config_bits == 12) {
    747e:	cmp	r3, #12
		ADC0_CFG1 = ADC_CFG1_12BIT + ADC_CFG1_MODE(1) + ADC_CFG1_ADLSMP;
    7480:	ite	eq
    7482:	moveq	r2, #53	; 0x35
		#ifdef HAS_KINETIS_ADC1
		ADC1_CFG1 = ADC_CFG1_12BIT + ADC_CFG1_MODE(1) + ADC_CFG1_ADLSMP;
		ADC1_CFG2 = ADC_CFG2_MUXSEL + ADC_CFG2_ADLSTS(2);
		#endif
	} else {
		ADC0_CFG1 = ADC_CFG1_16BIT + ADC_CFG1_MODE(3) + ADC_CFG1_ADLSMP;
    7484:	movne	r2, #93	; 0x5d
		ADC0_CFG2 = ADC_CFG2_MUXSEL + ADC_CFG2_ADLSTS(2);
    7486:	movs	r3, #18
		#ifdef HAS_KINETIS_ADC1
		ADC1_CFG1 = ADC_CFG1_12BIT + ADC_CFG1_MODE(1) + ADC_CFG1_ADLSMP;
		ADC1_CFG2 = ADC_CFG2_MUXSEL + ADC_CFG2_ADLSTS(2);
		#endif
	} else {
		ADC0_CFG1 = ADC_CFG1_16BIT + ADC_CFG1_MODE(3) + ADC_CFG1_ADLSMP;
    7488:	str	r2, [r5, #0]
		ADC0_CFG2 = ADC_CFG2_MUXSEL + ADC_CFG2_ADLSTS(2);
    748a:	str	r3, [r4, #0]
		#ifdef HAS_KINETIS_ADC1
		ADC1_CFG1 = ADC_CFG1_16BIT + ADC_CFG1_MODE(3) + ADC_CFG1_ADLSMP;
    748c:	str	r2, [r0, #0]
		ADC1_CFG2 = ADC_CFG2_MUXSEL + ADC_CFG2_ADLSTS(2);
    748e:	str	r3, [r1, #0]
		ADC0_SC2 = ADC_SC2_REFSEL(1); // 1.2V ref
	} else {
		ADC0_SC2 = ADC_SC2_REFSEL(0); // vcc/ext ref
	}
	#elif defined(__MK20DX256__) || defined(__MK64FX512__) || defined(__MK66FX1M0__)
	if (analog_reference_internal) {
    7490:	ldr	r3, [pc, #140]	; (7520 <analog_init+0xc4>)
		ADC0_SC2 = ADC_SC2_REFSEL(1); // 1.2V ref
    7492:	ldr	r1, [pc, #144]	; (7524 <analog_init+0xc8>)
		ADC0_SC2 = ADC_SC2_REFSEL(1); // 1.2V ref
	} else {
		ADC0_SC2 = ADC_SC2_REFSEL(0); // vcc/ext ref
	}
	#elif defined(__MK20DX256__) || defined(__MK64FX512__) || defined(__MK66FX1M0__)
	if (analog_reference_internal) {
    7494:	ldrb	r3, [r3, #0]
		ADC0_SC2 = ADC_SC2_REFSEL(1); // 1.2V ref
		ADC1_SC2 = ADC_SC2_REFSEL(1); // 1.2V ref
    7496:	ldr	r2, [pc, #144]	; (7528 <analog_init+0xcc>)
		ADC0_SC2 = ADC_SC2_REFSEL(1); // 1.2V ref
	} else {
		ADC0_SC2 = ADC_SC2_REFSEL(0); // vcc/ext ref
	}
	#elif defined(__MK20DX256__) || defined(__MK64FX512__) || defined(__MK66FX1M0__)
	if (analog_reference_internal) {
    7498:	cbz	r3, 74ca <analog_init+0x6e>
		ADC0_SC2 = ADC_SC2_REFSEL(1); // 1.2V ref
    749a:	movs	r3, #1
    749c:	str	r3, [r1, #0]
		ADC1_SC2 = ADC_SC2_REFSEL(1); // 1.2V ref
    749e:	str	r3, [r2, #0]
	} else {
		ADC0_SC2 = ADC_SC2_REFSEL(1); // vcc
	}
	#endif

	num = analog_num_average;
    74a0:	ldr	r3, [pc, #136]	; (752c <analog_init+0xd0>)
	if (num <= 1) {
		ADC0_SC3 = ADC_SC3_CAL;  // begin cal
    74a2:	ldr	r1, [pc, #140]	; (7530 <analog_init+0xd4>)
	} else {
		ADC0_SC2 = ADC_SC2_REFSEL(1); // vcc
	}
	#endif

	num = analog_num_average;
    74a4:	ldrb	r3, [r3, #0]
	if (num <= 1) {
		ADC0_SC3 = ADC_SC3_CAL;  // begin cal
		#ifdef HAS_KINETIS_ADC1
		ADC1_SC3 = ADC_SC3_CAL;  // begin cal
    74a6:	ldr	r2, [pc, #140]	; (7534 <analog_init+0xd8>)
		ADC0_SC2 = ADC_SC2_REFSEL(1); // vcc
	}
	#endif

	num = analog_num_average;
	if (num <= 1) {
    74a8:	cmp	r3, #1
    74aa:	bls.n	74fa <analog_init+0x9e>
		ADC0_SC3 = ADC_SC3_CAL;  // begin cal
		#ifdef HAS_KINETIS_ADC1
		ADC1_SC3 = ADC_SC3_CAL;  // begin cal
		#endif
	} else if (num <= 4) {
    74ac:	cmp	r3, #4
    74ae:	bls.n	74d0 <analog_init+0x74>
		ADC0_SC3 = ADC_SC3_CAL + ADC_SC3_AVGE + ADC_SC3_AVGS(0);
		#ifdef HAS_KINETIS_ADC1
		ADC1_SC3 = ADC_SC3_CAL + ADC_SC3_AVGE + ADC_SC3_AVGS(0);
		#endif
	} else if (num <= 8) {
    74b0:	cmp	r3, #8
    74b2:	bls.n	74f2 <analog_init+0x96>
		ADC0_SC3 = ADC_SC3_CAL + ADC_SC3_AVGE + ADC_SC3_AVGS(1);
		#ifdef HAS_KINETIS_ADC1
		ADC1_SC3 = ADC_SC3_CAL + ADC_SC3_AVGE + ADC_SC3_AVGS(1);
		#endif
	} else if (num <= 16) {
    74b4:	cmp	r3, #16
		ADC0_SC3 = ADC_SC3_CAL + ADC_SC3_AVGE + ADC_SC3_AVGS(2);
    74b6:	ite	ls
    74b8:	movls	r3, #134	; 0x86
		#ifdef HAS_KINETIS_ADC1
		ADC1_SC3 = ADC_SC3_CAL + ADC_SC3_AVGE + ADC_SC3_AVGS(2);
		#endif
	} else {
		ADC0_SC3 = ADC_SC3_CAL + ADC_SC3_AVGE + ADC_SC3_AVGS(3);
    74ba:	movhi	r3, #135	; 0x87
    74bc:	str	r3, [r1, #0]
		#ifdef HAS_KINETIS_ADC1
		ADC1_SC3 = ADC_SC3_CAL + ADC_SC3_AVGE + ADC_SC3_AVGS(3);
    74be:	str	r3, [r2, #0]
		#endif
	}
	calibrating = 1;
    74c0:	ldr	r3, [pc, #116]	; (7538 <analog_init+0xdc>)
    74c2:	movs	r2, #1
    74c4:	strb	r2, [r3, #0]
}
    74c6:	pop	{r4, r5}
    74c8:	bx	lr
	#elif defined(__MK20DX256__) || defined(__MK64FX512__) || defined(__MK66FX1M0__)
	if (analog_reference_internal) {
		ADC0_SC2 = ADC_SC2_REFSEL(1); // 1.2V ref
		ADC1_SC2 = ADC_SC2_REFSEL(1); // 1.2V ref
	} else {
		ADC0_SC2 = ADC_SC2_REFSEL(0); // vcc/ext ref
    74ca:	str	r3, [r1, #0]
		ADC1_SC2 = ADC_SC2_REFSEL(0); // vcc/ext ref
    74cc:	str	r3, [r2, #0]
    74ce:	b.n	74a0 <analog_init+0x44>
		ADC0_SC3 = ADC_SC3_CAL;  // begin cal
		#ifdef HAS_KINETIS_ADC1
		ADC1_SC3 = ADC_SC3_CAL;  // begin cal
		#endif
	} else if (num <= 4) {
		ADC0_SC3 = ADC_SC3_CAL + ADC_SC3_AVGE + ADC_SC3_AVGS(0);
    74d0:	movs	r3, #132	; 0x84
    74d2:	str	r3, [r1, #0]
		#ifdef HAS_KINETIS_ADC1
		ADC1_SC3 = ADC_SC3_CAL + ADC_SC3_AVGE + ADC_SC3_AVGS(0);
    74d4:	str	r3, [r2, #0]
    74d6:	b.n	74c0 <analog_init+0x64>

	if (analog_config_bits == 8) {
		ADC0_CFG1 = ADC_CFG1_8BIT + ADC_CFG1_MODE(0);
		ADC0_CFG2 = ADC_CFG2_MUXSEL + ADC_CFG2_ADLSTS(3);
		#ifdef HAS_KINETIS_ADC1
		ADC1_CFG1 = ADC_CFG1_8BIT + ADC_CFG1_MODE(0);
    74d8:	add.w	r0, r0, #290816	; 0x47000
		ADC1_CFG2 = ADC_CFG2_MUXSEL + ADC_CFG2_ADLSTS(3);
    74dc:	ldr	r1, [pc, #60]	; (751c <analog_init+0xc0>)

	if (analog_config_bits == 8) {
		ADC0_CFG1 = ADC_CFG1_8BIT + ADC_CFG1_MODE(0);
		ADC0_CFG2 = ADC_CFG2_MUXSEL + ADC_CFG2_ADLSTS(3);
		#ifdef HAS_KINETIS_ADC1
		ADC1_CFG1 = ADC_CFG1_8BIT + ADC_CFG1_MODE(0);
    74de:	adds	r0, #8
	VREF_TRM = 0x60;
	VREF_SC = 0xE1;		// enable 1.2 volt ref
	#endif

	if (analog_config_bits == 8) {
		ADC0_CFG1 = ADC_CFG1_8BIT + ADC_CFG1_MODE(0);
    74e0:	movs	r2, #33	; 0x21
		ADC1_CFG1 = ADC_CFG1_8BIT + ADC_CFG1_MODE(0);
		ADC1_CFG2 = ADC_CFG2_MUXSEL + ADC_CFG2_ADLSTS(3);
		#endif
	} else if (analog_config_bits == 10) {
		ADC0_CFG1 = ADC_CFG1_10BIT + ADC_CFG1_MODE(2) + ADC_CFG1_ADLSMP;
		ADC0_CFG2 = ADC_CFG2_MUXSEL + ADC_CFG2_ADLSTS(3);
    74e2:	movs	r3, #19
		#ifdef HAS_KINETIS_ADC1
		ADC1_CFG1 = ADC_CFG1_8BIT + ADC_CFG1_MODE(0);
		ADC1_CFG2 = ADC_CFG2_MUXSEL + ADC_CFG2_ADLSTS(3);
		#endif
	} else if (analog_config_bits == 10) {
		ADC0_CFG1 = ADC_CFG1_10BIT + ADC_CFG1_MODE(2) + ADC_CFG1_ADLSMP;
    74e4:	str	r2, [r5, #0]
		ADC0_CFG2 = ADC_CFG2_MUXSEL + ADC_CFG2_ADLSTS(3);
    74e6:	str	r3, [r4, #0]
		#ifdef HAS_KINETIS_ADC1
		ADC1_CFG1 = ADC_CFG1_10BIT + ADC_CFG1_MODE(2) + ADC_CFG1_ADLSMP;
    74e8:	str	r2, [r0, #0]
		ADC1_CFG2 = ADC_CFG2_MUXSEL + ADC_CFG2_ADLSTS(3);
    74ea:	str	r3, [r1, #0]
    74ec:	b.n	7490 <analog_init+0x34>
		#ifdef HAS_KINETIS_ADC1
		ADC1_CFG1 = ADC_CFG1_8BIT + ADC_CFG1_MODE(0);
		ADC1_CFG2 = ADC_CFG2_MUXSEL + ADC_CFG2_ADLSTS(3);
		#endif
	} else if (analog_config_bits == 10) {
		ADC0_CFG1 = ADC_CFG1_10BIT + ADC_CFG1_MODE(2) + ADC_CFG1_ADLSMP;
    74ee:	movs	r2, #57	; 0x39
    74f0:	b.n	74e2 <analog_init+0x86>
		ADC0_SC3 = ADC_SC3_CAL + ADC_SC3_AVGE + ADC_SC3_AVGS(0);
		#ifdef HAS_KINETIS_ADC1
		ADC1_SC3 = ADC_SC3_CAL + ADC_SC3_AVGE + ADC_SC3_AVGS(0);
		#endif
	} else if (num <= 8) {
		ADC0_SC3 = ADC_SC3_CAL + ADC_SC3_AVGE + ADC_SC3_AVGS(1);
    74f2:	movs	r3, #133	; 0x85
    74f4:	str	r3, [r1, #0]
		#ifdef HAS_KINETIS_ADC1
		ADC1_SC3 = ADC_SC3_CAL + ADC_SC3_AVGE + ADC_SC3_AVGS(1);
    74f6:	str	r3, [r2, #0]
    74f8:	b.n	74c0 <analog_init+0x64>
	}
	#endif

	num = analog_num_average;
	if (num <= 1) {
		ADC0_SC3 = ADC_SC3_CAL;  // begin cal
    74fa:	movs	r3, #128	; 0x80
    74fc:	str	r3, [r1, #0]
		#ifdef HAS_KINETIS_ADC1
		ADC1_SC3 = ADC_SC3_CAL;  // begin cal
    74fe:	str	r3, [r2, #0]
    7500:	b.n	74c0 <analog_init+0x64>
    7502:	nop
    7504:	.word	0x40074000
    7508:	.word	0x40074001
    750c:	.word	0x2000803c
    7510:	.word	0x4003b008
    7514:	.word	0x4003b00c
    7518:	.word	0x400bb008
    751c:	.word	0x400bb00c
    7520:	.word	0x20012a11
    7524:	.word	0x4003b020
    7528:	.word	0x400bb020
    752c:	.word	0x2000803d
    7530:	.word	0x4003b024
    7534:	.word	0x400bb024
    7538:	.word	0x20012a0e

0000753c <analogRead>:
	uint8_t channel;

	//serial_phex(pin);
	//serial_print(" ");

	if (pin >= sizeof(pin2sc1a)) return 0;
    753c:	cmp	r0, #71	; 0x47
    753e:	bhi.n	75a0 <analogRead+0x64>
	channel = pin2sc1a[pin];
    7540:	ldr	r3, [pc, #204]	; (7610 <analogRead+0xd4>)
#ifdef HAS_KINETIS_ADC1
static volatile uint8_t analogReadBusyADC1 = 0;
#endif

int analogRead(uint8_t pin)
{
    7542:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}

	//serial_phex(pin);
	//serial_print(" ");

	if (pin >= sizeof(pin2sc1a)) return 0;
	channel = pin2sc1a[pin];
    7546:	ldrb	r6, [r3, r0]
	if (channel == 255) return 0;
    7548:	cmp	r6, #255	; 0xff
    754a:	beq.n	75a4 <analogRead+0x68>

	if (calibrating) wait_for_cal();
    754c:	ldr	r3, [pc, #196]	; (7614 <analogRead+0xd8>)
    754e:	ldrb	r3, [r3, #0]
    7550:	cmp	r3, #0
    7552:	bne.n	75aa <analogRead+0x6e>

#ifdef HAS_KINETIS_ADC1
	if (channel & 0x80) goto beginADC1;
    7554:	lsls	r2, r6, #24
    7556:	bmi.n	75b2 <analogRead+0x76>
#endif

	__disable_irq();
    7558:	cpsid	i
    755a:	ldr	r5, [pc, #188]	; (7618 <analogRead+0xdc>)
		channel &= 0x3F;
	} else {
		ADC0_CFG2 |= ADC_CFG2_MUXSEL;
	}
#endif
	ADC0_SC1A = channel;
    755c:	ldr	r4, [pc, #188]	; (761c <analogRead+0xe0>)
	analogReadBusyADC0 = 1;
    755e:	mov	r7, r5
    7560:	movs	r3, #1
		channel &= 0x3F;
	} else {
		ADC0_CFG2 |= ADC_CFG2_MUXSEL;
	}
#endif
	ADC0_SC1A = channel;
    7562:	str	r6, [r4, #0]
	analogReadBusyADC0 = 1;
    7564:	strb	r3, [r5, #0]
	__enable_irq();
    7566:	cpsie	i
	while (1) {
		__disable_irq();
    7568:	cpsid	i
		if ((ADC0_SC1A & ADC_SC1_COCO)) {
    756a:	ldr	r3, [r4, #0]
    756c:	lsls	r3, r3, #24
    756e:	bmi.n	758a <analogRead+0x4e>
			return result;
		}
		// detect if analogRead was used from an interrupt
		// if so, our analogRead got canceled, so it must
		// be restarted.
		if (!analogReadBusyADC0) goto startADC0;
    7570:	ldrb	r3, [r7, #0]
    7572:	cbnz	r3, 757c <analogRead+0x40>
    7574:	b.n	7560 <analogRead+0x24>
    7576:	ldrb	r3, [r5, #0]
    7578:	cmp	r3, #0
    757a:	beq.n	7560 <analogRead+0x24>
		__enable_irq();
    757c:	cpsie	i
		yield();
    757e:	bl	8b50 <yield>
#endif
	ADC0_SC1A = channel;
	analogReadBusyADC0 = 1;
	__enable_irq();
	while (1) {
		__disable_irq();
    7582:	cpsid	i
		if ((ADC0_SC1A & ADC_SC1_COCO)) {
    7584:	ldr	r3, [r4, #0]
    7586:	lsls	r0, r3, #24
    7588:	bpl.n	7576 <analogRead+0x3a>
			result = ADC0_RA;
    758a:	ldr	r3, [pc, #148]	; (7620 <analogRead+0xe4>)
	analogReadBusyADC1 = 1;
	__enable_irq();
	while (1) {
		__disable_irq();
		if ((ADC1_SC1A & ADC_SC1_COCO)) {
			result = ADC1_RA;
    758c:	ldr	r3, [r3, #0]
			analogReadBusyADC1 = 0;
    758e:	movs	r2, #0
    7590:	strb	r2, [r5, #0]
			__enable_irq();
    7592:	cpsie	i
			result >>= analog_right_shift;
    7594:	ldr	r2, [pc, #140]	; (7624 <analogRead+0xe8>)
    7596:	ldrb	r0, [r2, #0]
    7598:	asr.w	r0, r3, r0
			return result;
    759c:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	uint8_t channel;

	//serial_phex(pin);
	//serial_print(" ");

	if (pin >= sizeof(pin2sc1a)) return 0;
    75a0:	movs	r0, #0
		if (!analogReadBusyADC1) goto startADC1;
		__enable_irq();
		yield();
	}
#endif
}
    75a2:	bx	lr
	uint8_t channel;

	//serial_phex(pin);
	//serial_print(" ");

	if (pin >= sizeof(pin2sc1a)) return 0;
    75a4:	movs	r0, #0
		if (!analogReadBusyADC1) goto startADC1;
		__enable_irq();
		yield();
	}
#endif
}
    75a6:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

	if (pin >= sizeof(pin2sc1a)) return 0;
	channel = pin2sc1a[pin];
	if (channel == 255) return 0;

	if (calibrating) wait_for_cal();
    75aa:	bl	7318 <wait_for_cal>

#ifdef HAS_KINETIS_ADC1
	if (channel & 0x80) goto beginADC1;
    75ae:	lsls	r2, r6, #24
    75b0:	bpl.n	7558 <analogRead+0x1c>
		yield();
	}

#ifdef HAS_KINETIS_ADC1
beginADC1:
	__disable_irq();
    75b2:	cpsid	i
    75b4:	ldr	r5, [pc, #112]	; (7628 <analogRead+0xec>)
	//serial_print("startADC1\n");
	// ADC1_CFG2[MUXSEL] bit selects between ADCx_SEn channels a and b.
	if (channel & 0x40) {
		ADC1_CFG2 &= ~ADC_CFG2_MUXSEL;
	} else {
		ADC1_CFG2 |= ADC_CFG2_MUXSEL;
    75b6:	ldr.w	r8, [pc, #124]	; 7634 <analogRead+0xf8>
	}
	ADC1_SC1A = channel & 0x3F;
    75ba:	ldr	r4, [pc, #112]	; (762c <analogRead+0xf0>)
    75bc:	and.w	r7, r6, #64	; 0x40
    75c0:	uxtb	r7, r7
    75c2:	and.w	r6, r6, #63	; 0x3f
	__disable_irq();
startADC1:
	//serial_print("startADC1\n");
	// ADC1_CFG2[MUXSEL] bit selects between ADCx_SEn channels a and b.
	if (channel & 0x40) {
		ADC1_CFG2 &= ~ADC_CFG2_MUXSEL;
    75c6:	ldr.w	r3, [r8]
beginADC1:
	__disable_irq();
startADC1:
	//serial_print("startADC1\n");
	// ADC1_CFG2[MUXSEL] bit selects between ADCx_SEn channels a and b.
	if (channel & 0x40) {
    75ca:	cbz	r7, 7604 <analogRead+0xc8>
		ADC1_CFG2 &= ~ADC_CFG2_MUXSEL;
    75cc:	bic.w	r3, r3, #16
    75d0:	str.w	r3, [r8]
	} else {
		ADC1_CFG2 |= ADC_CFG2_MUXSEL;
	}
	ADC1_SC1A = channel & 0x3F;
	analogReadBusyADC1 = 1;
    75d4:	movs	r3, #1
	if (channel & 0x40) {
		ADC1_CFG2 &= ~ADC_CFG2_MUXSEL;
	} else {
		ADC1_CFG2 |= ADC_CFG2_MUXSEL;
	}
	ADC1_SC1A = channel & 0x3F;
    75d6:	str	r6, [r4, #0]
	analogReadBusyADC1 = 1;
    75d8:	ldr	r2, [pc, #76]	; (7628 <analogRead+0xec>)
    75da:	strb	r3, [r5, #0]
	__enable_irq();
    75dc:	cpsie	i
	while (1) {
		__disable_irq();
    75de:	cpsid	i
		if ((ADC1_SC1A & ADC_SC1_COCO)) {
    75e0:	ldr	r3, [r4, #0]
    75e2:	lsls	r1, r3, #24
    75e4:	bmi.n	7600 <analogRead+0xc4>
			return result;
		}
		// detect if analogRead was used from an interrupt
		// if so, our analogRead got canceled, so it must
		// be restarted.
		if (!analogReadBusyADC1) goto startADC1;
    75e6:	ldrb	r3, [r2, #0]
    75e8:	cbnz	r3, 75f2 <analogRead+0xb6>
    75ea:	b.n	75c6 <analogRead+0x8a>
    75ec:	ldrb	r3, [r5, #0]
    75ee:	cmp	r3, #0
    75f0:	beq.n	75c6 <analogRead+0x8a>
		__enable_irq();
    75f2:	cpsie	i
		yield();
    75f4:	bl	8b50 <yield>
	}
	ADC1_SC1A = channel & 0x3F;
	analogReadBusyADC1 = 1;
	__enable_irq();
	while (1) {
		__disable_irq();
    75f8:	cpsid	i
		if ((ADC1_SC1A & ADC_SC1_COCO)) {
    75fa:	ldr	r3, [r4, #0]
    75fc:	lsls	r3, r3, #24
    75fe:	bpl.n	75ec <analogRead+0xb0>
			result = ADC1_RA;
    7600:	ldr	r3, [pc, #44]	; (7630 <analogRead+0xf4>)
    7602:	b.n	758c <analogRead+0x50>
	//serial_print("startADC1\n");
	// ADC1_CFG2[MUXSEL] bit selects between ADCx_SEn channels a and b.
	if (channel & 0x40) {
		ADC1_CFG2 &= ~ADC_CFG2_MUXSEL;
	} else {
		ADC1_CFG2 |= ADC_CFG2_MUXSEL;
    7604:	orr.w	r3, r3, #16
    7608:	str.w	r3, [r8]
    760c:	b.n	75d4 <analogRead+0x98>
    760e:	nop
    7610:	.word	0x0009dec8
    7614:	.word	0x20012a0e
    7618:	.word	0x20012a10
    761c:	.word	0x4003b000
    7620:	.word	0x4003b010
    7624:	.word	0x20012a0d
    7628:	.word	0x20012a0f
    762c:	.word	0x400bb000
    7630:	.word	0x400bb010
    7634:	.word	0x400bb00c

00007638 <fault_isr>:
void _init_Teensyduino_internal_(void) __attribute__((noinline));
void __libc_init_array(void);


void fault_isr(void)
{
    7638:	push	{r3, lr}
        asm("ldr %0, [sp, #0]" : "=r" (addr) ::);
#endif
	while (1) {
		// keep polling some communication while in fault
		// mode, so we don't completely die.
		if (SIM_SCGC4 & SIM_SCGC4_USBOTG) usb_isr();
    763a:	ldr	r4, [pc, #64]	; (767c <fault_isr+0x44>)
    763c:	b.n	7650 <fault_isr+0x18>
		if (SIM_SCGC4 & SIM_SCGC4_UART0) uart0_status_isr();
    763e:	ldr	r3, [r4, #0]
    7640:	lsls	r1, r3, #21
    7642:	bmi.n	7660 <fault_isr+0x28>
		if (SIM_SCGC4 & SIM_SCGC4_UART1) uart1_status_isr();
    7644:	ldr	r3, [r4, #0]
    7646:	lsls	r2, r3, #20
    7648:	bmi.n	766a <fault_isr+0x32>
		if (SIM_SCGC4 & SIM_SCGC4_UART2) uart2_status_isr();
    764a:	ldr	r3, [r4, #0]
    764c:	lsls	r3, r3, #19
    764e:	bmi.n	7674 <fault_isr+0x3c>
        asm("ldr %0, [sp, #0]" : "=r" (addr) ::);
#endif
	while (1) {
		// keep polling some communication while in fault
		// mode, so we don't completely die.
		if (SIM_SCGC4 & SIM_SCGC4_USBOTG) usb_isr();
    7650:	ldr	r3, [r4, #0]
    7652:	lsls	r0, r3, #13
    7654:	bpl.n	763e <fault_isr+0x6>
    7656:	bl	7cc0 <usb_isr>
		if (SIM_SCGC4 & SIM_SCGC4_UART0) uart0_status_isr();
    765a:	ldr	r3, [r4, #0]
    765c:	lsls	r1, r3, #21
    765e:	bpl.n	7644 <fault_isr+0xc>
    7660:	bl	9c24 <uart0_status_isr>
		if (SIM_SCGC4 & SIM_SCGC4_UART1) uart1_status_isr();
    7664:	ldr	r3, [r4, #0]
    7666:	lsls	r2, r3, #20
    7668:	bpl.n	764a <fault_isr+0x12>
    766a:	bl	9a00 <uart1_status_isr>
		if (SIM_SCGC4 & SIM_SCGC4_UART2) uart2_status_isr();
    766e:	ldr	r3, [r4, #0]
    7670:	lsls	r3, r3, #19
    7672:	bpl.n	7650 <fault_isr+0x18>
    7674:	bl	9f50 <uart2_status_isr>
    7678:	b.n	7650 <fault_isr+0x18>
    767a:	nop
    767c:	.word	0x40048034

00007680 <unused_isr>:
	}
}

void unused_isr(void)
{
    7680:	push	{r3, lr}
	fault_isr();
    7682:	bl	7638 <fault_isr>
    7686:	nop

00007688 <startup_early_hook>:
extern void rtc_set(unsigned long t);


static void startup_default_early_hook(void) {
#if defined(KINETISK)
	WDOG_STCTRLH = WDOG_STCTRLH_ALLOWUPDATE;
    7688:	ldr	r3, [pc, #4]	; (7690 <startup_early_hook+0x8>)
    768a:	movs	r2, #16
    768c:	strh	r2, [r3, #0]
    768e:	bx	lr
    7690:	.word	0x40052000

00007694 <startup_late_hook>:
#elif defined(KINETISL)
	SIM_COPC = 0;  // disable the watchdog
#endif
}
static void startup_default_late_hook(void) {}
    7694:	bx	lr
    7696:	nop

00007698 <_sbrk>:

void * _sbrk(int incr)
{
	char *prev, *stack;

	prev = __brkval;
    7698:	ldr	r1, [pc, #36]	; (76c0 <_sbrk+0x28>)

#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wunused-parameter"

void * _sbrk(int incr)
{
    769a:	push	{r3, lr}
	char *prev, *stack;

	prev = __brkval;
    769c:	ldr	r3, [r1, #0]
	if (incr != 0) {
    769e:	cbz	r0, 76ae <_sbrk+0x16>
		__asm__ volatile("mov %0, sp" : "=r" (stack) ::);
    76a0:	mov	r2, sp
		if (prev + incr >= stack - STACK_MARGIN) {
    76a2:	add	r0, r3
    76a4:	sub.w	r2, r2, #8192	; 0x2000
    76a8:	cmp	r0, r2
    76aa:	bcs.n	76b2 <_sbrk+0x1a>
			errno = ENOMEM;
			return (void *)-1;
		}
		__brkval = prev + incr;
    76ac:	str	r0, [r1, #0]
	}
	return prev;
    76ae:	mov	r0, r3
}
    76b0:	pop	{r3, pc}

	prev = __brkval;
	if (incr != 0) {
		__asm__ volatile("mov %0, sp" : "=r" (stack) ::);
		if (prev + incr >= stack - STACK_MARGIN) {
			errno = ENOMEM;
    76b2:	bl	b9cc <__errno>
    76b6:	movs	r3, #12
    76b8:	str	r3, [r0, #0]
			return (void *)-1;
    76ba:	mov.w	r0, #4294967295
    76be:	pop	{r3, pc}
    76c0:	.word	0x20008040

000076c4 <__cxa_pure_virtual>:
	while (1);
}

__attribute__((weak)) 
void __cxa_pure_virtual()
{
    76c4:	b.n	76c4 <__cxa_pure_virtual>
    76c6:	nop

000076c8 <__cxa_guard_acquire>:
}

__attribute__((weak)) 
int __cxa_guard_acquire (char *g) 
{
	return !(*g);
    76c8:	ldrb	r0, [r0, #0]
}
    76ca:	clz	r0, r0
    76ce:	lsrs	r0, r0, #5
    76d0:	bx	lr
    76d2:	nop

000076d4 <__cxa_guard_release>:

__attribute__((weak)) 
void __cxa_guard_release(char *g)
{
	*g = 1;
    76d4:	movs	r3, #1
    76d6:	strb	r3, [r0, #0]
    76d8:	bx	lr
    76da:	nop

000076dc <kinetis_hsrun_disable>:


#if defined(HAS_KINETIS_HSRUN) && F_CPU > 120000000
int kinetis_hsrun_disable(void)
{
	if (SMC_PMSTAT == SMC_PMSTAT_HSRUN) {
    76dc:	ldr	r2, [pc, #32]	; (7700 <kinetis_hsrun_disable+0x24>)
    76de:	ldrb	r3, [r2, #0]
    76e0:	cmp	r3, #128	; 0x80
    76e2:	beq.n	76e8 <kinetis_hsrun_disable+0xc>
		// Then turn off HSRUN mode
		SMC_PMCTRL = SMC_PMCTRL_RUNM(0);
		while (SMC_PMSTAT == SMC_PMSTAT_HSRUN) ; // wait
		return 1;
	}
	return 0;
    76e4:	movs	r0, #0
}
    76e6:	bx	lr
		#elif F_CPU == 192000000 && F_BUS == 64000000
			SIM_CLKDIV1 = SIM_CLKDIV1_OUTDIVS(2, 2, 2, 8); // ok
		#elif F_CPU == 192000000 && F_BUS == 96000000
			SIM_CLKDIV1 = SIM_CLKDIV1_OUTDIVS(1, 1, 1, 7); // ok
		#elif F_CPU == 180000000 && F_BUS == 60000000
			SIM_CLKDIV1 = SIM_CLKDIV1_OUTDIVS(2, 2, 2, 8); // ok
    76e8:	ldr	r1, [pc, #24]	; (7704 <kinetis_hsrun_disable+0x28>)
			SIM_CLKDIV1 = SIM_CLKDIV1_OUTDIVS(1, 1, 1, 5); // ok
		#else
			return 0;
		#endif
		// Then turn off HSRUN mode
		SMC_PMCTRL = SMC_PMCTRL_RUNM(0);
    76ea:	ldr	r3, [pc, #28]	; (7708 <kinetis_hsrun_disable+0x2c>)
		#elif F_CPU == 192000000 && F_BUS == 64000000
			SIM_CLKDIV1 = SIM_CLKDIV1_OUTDIVS(2, 2, 2, 8); // ok
		#elif F_CPU == 192000000 && F_BUS == 96000000
			SIM_CLKDIV1 = SIM_CLKDIV1_OUTDIVS(1, 1, 1, 7); // ok
		#elif F_CPU == 180000000 && F_BUS == 60000000
			SIM_CLKDIV1 = SIM_CLKDIV1_OUTDIVS(2, 2, 2, 8); // ok
    76ec:	ldr	r0, [pc, #28]	; (770c <kinetis_hsrun_disable+0x30>)
    76ee:	str	r0, [r1, #0]
			SIM_CLKDIV1 = SIM_CLKDIV1_OUTDIVS(1, 1, 1, 5); // ok
		#else
			return 0;
		#endif
		// Then turn off HSRUN mode
		SMC_PMCTRL = SMC_PMCTRL_RUNM(0);
    76f0:	movs	r1, #0
    76f2:	strb	r1, [r3, #0]
		while (SMC_PMSTAT == SMC_PMSTAT_HSRUN) ; // wait
    76f4:	ldrb	r3, [r2, #0]
    76f6:	cmp	r3, #128	; 0x80
    76f8:	beq.n	76f4 <kinetis_hsrun_disable+0x18>
		return 1;
    76fa:	movs	r0, #1
    76fc:	bx	lr
    76fe:	nop
    7700:	.word	0x4007e003
    7704:	.word	0x40048044
    7708:	.word	0x4007e001
    770c:	.word	0x22280000

00007710 <kinetis_hsrun_enable>:
	return 0;
}

int kinetis_hsrun_enable(void)
{
	if (SMC_PMSTAT == SMC_PMSTAT_RUN) {
    7710:	ldr	r2, [pc, #36]	; (7738 <kinetis_hsrun_enable+0x28>)
    7712:	ldrb	r3, [r2, #0]
    7714:	cmp	r3, #1
    7716:	beq.n	771c <kinetis_hsrun_enable+0xc>
		#else
			return 0;
		#endif
		return 1;
	}
	return 0;
    7718:	movs	r0, #0
}
    771a:	bx	lr

int kinetis_hsrun_enable(void)
{
	if (SMC_PMSTAT == SMC_PMSTAT_RUN) {
		// Turn HSRUN mode on
		SMC_PMCTRL = SMC_PMCTRL_RUNM(3);
    771c:	add.w	r3, r3, #1073741824	; 0x40000000
    7720:	add.w	r3, r3, #516096	; 0x7e000
    7724:	movs	r1, #96	; 0x60
    7726:	strb	r1, [r3, #0]
		while (SMC_PMSTAT != SMC_PMSTAT_HSRUN) {;} // wait
    7728:	ldrb	r3, [r2, #0]
    772a:	cmp	r3, #128	; 0x80
    772c:	bne.n	7728 <kinetis_hsrun_enable+0x18>
		#elif F_CPU == 192000000 && F_BUS == 64000000
			SIM_CLKDIV1 = SIM_CLKDIV1_OUTDIVS(0, 2, 0, 6);
		#elif F_CPU == 192000000 && F_BUS == 96000000
			SIM_CLKDIV1 = SIM_CLKDIV1_OUTDIVS(0, 1, 0, 6);
		#elif F_CPU == 180000000 && F_BUS == 60000000
			SIM_CLKDIV1 = SIM_CLKDIV1_OUTDIVS(0, 2, 0, 6);
    772e:	ldr	r3, [pc, #12]	; (773c <kinetis_hsrun_enable+0x2c>)
    7730:	ldr	r2, [pc, #12]	; (7740 <kinetis_hsrun_enable+0x30>)
    7732:	str	r2, [r3, #0]
		#elif F_CPU == 144000000 && F_BUS == 72000000
			SIM_CLKDIV1 = SIM_CLKDIV1_OUTDIVS(0, 1, 0, 4);
		#else
			return 0;
		#endif
		return 1;
    7734:	movs	r0, #1
    7736:	bx	lr
    7738:	.word	0x4007e003
    773c:	.word	0x40048044
    7740:	.word	0x02060000

00007744 <digitalWrite.part.1>:



// TODO: startup code needs to initialize all pins to GPIO mode, input by default

void digitalWrite(uint8_t pin, uint8_t val)
    7744:	push	{r4}
{
	if (pin >= CORE_NUM_DIGITAL) return;
#ifdef KINETISK
	if (*portModeRegister(pin)) {
    7746:	ldr	r3, [pc, #68]	; (778c <digitalWrite.part.1+0x48>)
    7748:	ldr.w	r2, [r3, r0, lsl #3]
    774c:	ldrb.w	r4, [r2, #640]	; 0x280
    7750:	cbz	r4, 7760 <digitalWrite.part.1+0x1c>
		if (val) {
			*portSetRegister(pin) = 1;
    7752:	movs	r3, #1
void digitalWrite(uint8_t pin, uint8_t val)
{
	if (pin >= CORE_NUM_DIGITAL) return;
#ifdef KINETISK
	if (*portModeRegister(pin)) {
		if (val) {
    7754:	cbz	r1, 7776 <digitalWrite.part.1+0x32>
			*portSetRegister(pin) = 1;
    7756:	strb.w	r3, [r2, #128]	; 0x80
			*config &= ~(PORT_PCR_PE);
			//*config = PORT_PCR_MUX(1);
		}
	}

}
    775a:	ldr.w	r4, [sp], #4
    775e:	bx	lr
		} else {
			*portClearRegister(pin) = digitalPinToBitMask(pin);
		}
#endif
	} else {
		volatile uint32_t *config = portConfigRegister(pin);
    7760:	add.w	r3, r3, r0, lsl #3
    7764:	ldr	r3, [r3, #4]
		if (val) {
			// TODO use bitband for atomic read-mod-write
			*config |= (PORT_PCR_PE | PORT_PCR_PS);
    7766:	ldr	r2, [r3, #0]
			*portClearRegister(pin) = digitalPinToBitMask(pin);
		}
#endif
	} else {
		volatile uint32_t *config = portConfigRegister(pin);
		if (val) {
    7768:	cbnz	r1, 7780 <digitalWrite.part.1+0x3c>
			// TODO use bitband for atomic read-mod-write
			*config |= (PORT_PCR_PE | PORT_PCR_PS);
			//*config = PORT_PCR_MUX(1) | PORT_PCR_PE | PORT_PCR_PS;
		} else {
			// TODO use bitband for atomic read-mod-write
			*config &= ~(PORT_PCR_PE);
    776a:	bic.w	r2, r2, #2
    776e:	str	r2, [r3, #0]
			//*config = PORT_PCR_MUX(1);
		}
	}

}
    7770:	ldr.w	r4, [sp], #4
    7774:	bx	lr
#ifdef KINETISK
	if (*portModeRegister(pin)) {
		if (val) {
			*portSetRegister(pin) = 1;
		} else {
			*portClearRegister(pin) = 1;
    7776:	strb.w	r3, [r2, #256]	; 0x100
			*config &= ~(PORT_PCR_PE);
			//*config = PORT_PCR_MUX(1);
		}
	}

}
    777a:	ldr.w	r4, [sp], #4
    777e:	bx	lr
#endif
	} else {
		volatile uint32_t *config = portConfigRegister(pin);
		if (val) {
			// TODO use bitband for atomic read-mod-write
			*config |= (PORT_PCR_PE | PORT_PCR_PS);
    7780:	orr.w	r2, r2, #3
    7784:	str	r2, [r3, #0]
			*config &= ~(PORT_PCR_PE);
			//*config = PORT_PCR_MUX(1);
		}
	}

}
    7786:	ldr.w	r4, [sp], #4
    778a:	bx	lr
    778c:	.word	0x0009df10

00007790 <pinMode.part.2>:
void pinMode(uint8_t pin, uint8_t mode)
{
	volatile uint32_t *config;

	if (pin >= CORE_NUM_DIGITAL) return;
	config = portConfigRegister(pin);
    7790:	ldr	r2, [pc, #112]	; (7804 <pinMode.part.2+0x74>)
    7792:	add.w	r3, r2, r0, lsl #3

	if (mode == OUTPUT || mode == OUTPUT_OPENDRAIN) {
    7796:	cmp	r1, #1
void pinMode(uint8_t pin, uint8_t mode)
{
	volatile uint32_t *config;

	if (pin >= CORE_NUM_DIGITAL) return;
	config = portConfigRegister(pin);
    7798:	ldr	r3, [r3, #4]

	if (mode == OUTPUT || mode == OUTPUT_OPENDRAIN) {
    779a:	beq.n	77c0 <pinMode.part.2+0x30>
    779c:	cmp	r1, #4
    779e:	beq.n	77d8 <pinMode.part.2+0x48>
		} else {
		    *config &= ~PORT_PCR_ODE;
                }
	} else {
#ifdef KINETISK
		*portModeRegister(pin) = 0;
    77a0:	ldr.w	r0, [r2, r0, lsl #3]
    77a4:	movs	r2, #0
    77a6:	strb.w	r2, [r0, #640]	; 0x280
#else
		*portModeRegister(pin) &= ~digitalPinToBitMask(pin);
#endif
		if (mode == INPUT) {
    77aa:	cbz	r1, 77b8 <pinMode.part.2+0x28>
			*config = PORT_PCR_MUX(1);
		} else if (mode == INPUT_PULLUP) {
    77ac:	cmp	r1, #2
    77ae:	beq.n	77f2 <pinMode.part.2+0x62>
			*config = PORT_PCR_MUX(1) | PORT_PCR_PE | PORT_PCR_PS;
		} else if (mode == INPUT_PULLDOWN) {
    77b0:	cmp	r1, #3
    77b2:	beq.n	77fa <pinMode.part.2+0x6a>
#endif
		*config = PORT_PCR_SRE | PORT_PCR_DSE | PORT_PCR_MUX(1);
		if (mode == OUTPUT_OPENDRAIN) {
		    *config |= PORT_PCR_ODE;
		} else {
		    *config &= ~PORT_PCR_ODE;
    77b4:	str	r2, [r3, #0]
    77b6:	bx	lr
		*portModeRegister(pin) = 0;
#else
		*portModeRegister(pin) &= ~digitalPinToBitMask(pin);
#endif
		if (mode == INPUT) {
			*config = PORT_PCR_MUX(1);
    77b8:	mov.w	r2, #256	; 0x100
    77bc:	str	r2, [r3, #0]
    77be:	bx	lr
	if (pin >= CORE_NUM_DIGITAL) return;
	config = portConfigRegister(pin);

	if (mode == OUTPUT || mode == OUTPUT_OPENDRAIN) {
#ifdef KINETISK
		*portModeRegister(pin) = 1;
    77c0:	ldr.w	r0, [r2, r0, lsl #3]
#else
		*portModeRegister(pin) |= digitalPinToBitMask(pin); // TODO: atomic
#endif
		*config = PORT_PCR_SRE | PORT_PCR_DSE | PORT_PCR_MUX(1);
    77c4:	mov.w	r2, #324	; 0x144
	if (pin >= CORE_NUM_DIGITAL) return;
	config = portConfigRegister(pin);

	if (mode == OUTPUT || mode == OUTPUT_OPENDRAIN) {
#ifdef KINETISK
		*portModeRegister(pin) = 1;
    77c8:	strb.w	r1, [r0, #640]	; 0x280
#else
		*portModeRegister(pin) |= digitalPinToBitMask(pin); // TODO: atomic
#endif
		*config = PORT_PCR_SRE | PORT_PCR_DSE | PORT_PCR_MUX(1);
    77cc:	str	r2, [r3, #0]
		if (mode == OUTPUT_OPENDRAIN) {
		    *config |= PORT_PCR_ODE;
		} else {
		    *config &= ~PORT_PCR_ODE;
    77ce:	ldr	r2, [r3, #0]
    77d0:	bic.w	r2, r2, #32
    77d4:	str	r2, [r3, #0]
    77d6:	bx	lr
	if (pin >= CORE_NUM_DIGITAL) return;
	config = portConfigRegister(pin);

	if (mode == OUTPUT || mode == OUTPUT_OPENDRAIN) {
#ifdef KINETISK
		*portModeRegister(pin) = 1;
    77d8:	ldr.w	r1, [r2, r0, lsl #3]
#else
		*portModeRegister(pin) |= digitalPinToBitMask(pin); // TODO: atomic
#endif
		*config = PORT_PCR_SRE | PORT_PCR_DSE | PORT_PCR_MUX(1);
    77dc:	mov.w	r2, #324	; 0x144
	if (pin >= CORE_NUM_DIGITAL) return;
	config = portConfigRegister(pin);

	if (mode == OUTPUT || mode == OUTPUT_OPENDRAIN) {
#ifdef KINETISK
		*portModeRegister(pin) = 1;
    77e0:	movs	r0, #1
    77e2:	strb.w	r0, [r1, #640]	; 0x280
#else
		*portModeRegister(pin) |= digitalPinToBitMask(pin); // TODO: atomic
#endif
		*config = PORT_PCR_SRE | PORT_PCR_DSE | PORT_PCR_MUX(1);
    77e6:	str	r2, [r3, #0]
		if (mode == OUTPUT_OPENDRAIN) {
		    *config |= PORT_PCR_ODE;
    77e8:	ldr	r2, [r3, #0]
    77ea:	orr.w	r2, r2, #32
    77ee:	str	r2, [r3, #0]
    77f0:	bx	lr
		*portModeRegister(pin) &= ~digitalPinToBitMask(pin);
#endif
		if (mode == INPUT) {
			*config = PORT_PCR_MUX(1);
		} else if (mode == INPUT_PULLUP) {
			*config = PORT_PCR_MUX(1) | PORT_PCR_PE | PORT_PCR_PS;
    77f2:	movw	r2, #259	; 0x103
    77f6:	str	r2, [r3, #0]
    77f8:	bx	lr
		} else if (mode == INPUT_PULLDOWN) {
			*config = PORT_PCR_MUX(1) | PORT_PCR_PE;
    77fa:	mov.w	r2, #258	; 0x102
    77fe:	str	r2, [r3, #0]
    7800:	bx	lr
    7802:	nop
    7804:	.word	0x0009df10

00007808 <rtc_set>:
{
	return RTC_TSR;
}

void rtc_set(unsigned long t)
{
    7808:	push	{r4, r5}
	RTC_SR = 0;
    780a:	ldr	r3, [pc, #20]	; (7820 <rtc_set+0x18>)
	RTC_TPR = 0;
    780c:	ldr	r5, [pc, #20]	; (7824 <rtc_set+0x1c>)
	RTC_TSR = t;
    780e:	ldr	r4, [pc, #24]	; (7828 <rtc_set+0x20>)
	return RTC_TSR;
}

void rtc_set(unsigned long t)
{
	RTC_SR = 0;
    7810:	movs	r2, #0
	RTC_TPR = 0;
	RTC_TSR = t;
	RTC_SR = RTC_SR_TCE;
    7812:	movs	r1, #16
	return RTC_TSR;
}

void rtc_set(unsigned long t)
{
	RTC_SR = 0;
    7814:	str	r2, [r3, #0]
	RTC_TPR = 0;
    7816:	str	r2, [r5, #0]
	RTC_TSR = t;
    7818:	str	r0, [r4, #0]
	RTC_SR = RTC_SR_TCE;
    781a:	str	r1, [r3, #0]
}
    781c:	pop	{r4, r5}
    781e:	bx	lr
    7820:	.word	0x4003d014
    7824:	.word	0x4003d004
    7828:	.word	0x4003d000

0000782c <digitalWrite>:

// TODO: startup code needs to initialize all pins to GPIO mode, input by default

void digitalWrite(uint8_t pin, uint8_t val)
{
	if (pin >= CORE_NUM_DIGITAL) return;
    782c:	cmp	r0, #63	; 0x3f
    782e:	bhi.n	7834 <digitalWrite+0x8>
    7830:	b.w	7744 <digitalWrite.part.1>
    7834:	bx	lr
    7836:	nop

00007838 <digitalRead>:

}

uint8_t digitalRead(uint8_t pin)
{
	if (pin >= CORE_NUM_DIGITAL) return 0;
    7838:	cmp	r0, #63	; 0x3f
    783a:	bhi.n	784a <digitalRead+0x12>
#ifdef KINETISK
	return *portInputRegister(pin);
    783c:	ldr	r3, [pc, #16]	; (7850 <digitalRead+0x18>)
    783e:	ldr.w	r3, [r3, r0, lsl #3]
    7842:	ldrb.w	r0, [r3, #512]	; 0x200
    7846:	uxtb	r0, r0
    7848:	bx	lr

}

uint8_t digitalRead(uint8_t pin)
{
	if (pin >= CORE_NUM_DIGITAL) return 0;
    784a:	movs	r0, #0
#ifdef KINETISK
	return *portInputRegister(pin);
#else
	return (*portInputRegister(pin) & digitalPinToBitMask(pin)) ? 1 : 0;
#endif
}
    784c:	bx	lr
    784e:	nop
    7850:	.word	0x0009df10

00007854 <pinMode>:

void pinMode(uint8_t pin, uint8_t mode)
{
	volatile uint32_t *config;

	if (pin >= CORE_NUM_DIGITAL) return;
    7854:	cmp	r0, #63	; 0x3f
    7856:	bhi.n	785c <pinMode+0x8>
    7858:	b.w	7790 <pinMode.part.2>
    785c:	bx	lr
    785e:	nop

00007860 <micros>:

uint32_t micros(void)
{
	uint32_t count, current, istatus;

	__disable_irq();
    7860:	cpsid	i
	current = SYST_CVR;
	count = systick_millis_count;
    7862:	ldr	r1, [pc, #52]	; (7898 <micros+0x38>)
uint32_t micros(void)
{
	uint32_t count, current, istatus;

	__disable_irq();
	current = SYST_CVR;
    7864:	ldr	r3, [pc, #52]	; (789c <micros+0x3c>)
	count = systick_millis_count;
	istatus = SCB_ICSR;	// bit 26 indicates if systick exception pending
    7866:	ldr	r2, [pc, #56]	; (78a0 <micros+0x40>)
uint32_t micros(void)
{
	uint32_t count, current, istatus;

	__disable_irq();
	current = SYST_CVR;
    7868:	ldr	r3, [r3, #0]
	count = systick_millis_count;
    786a:	ldr	r0, [r1, #0]
	istatus = SCB_ICSR;	// bit 26 indicates if systick exception pending
    786c:	ldr	r2, [r2, #0]
	__enable_irq();
    786e:	cpsie	i
	 //systick_current = current;
	 //systick_count = count;
	 //systick_istatus = istatus & SCB_ICSR_PENDSTSET ? 1 : 0;
	if ((istatus & SCB_ICSR_PENDSTSET) && current > 50) count++;
    7870:	lsls	r2, r2, #5
    7872:	bpl.n	787a <micros+0x1a>
    7874:	cmp	r3, #50	; 0x32
    7876:	it	hi
    7878:	addhi	r0, #1
#if defined(KINETISL) && F_CPU == 48000000
	return count * 1000 + ((current * (uint32_t)87381) >> 22);
#elif defined(KINETISL) && F_CPU == 24000000
	return count * 1000 + ((current * (uint32_t)174763) >> 22);
#endif
	return count * 1000 + current / (F_CPU / 1000000);
    787a:	rsb	r3, r3, #179200	; 0x2bc00
    787e:	ldr	r1, [pc, #36]	; (78a4 <micros+0x44>)
    7880:	addw	r3, r3, #799	; 0x31f
    7884:	mov.w	r2, #1000	; 0x3e8
    7888:	lsrs	r3, r3, #2
    788a:	umull	r1, r3, r1, r3
    788e:	mul.w	r0, r2, r0
}
    7892:	add.w	r0, r0, r3, lsr #2
    7896:	bx	lr
    7898:	.word	0x20012a14
    789c:	.word	0xe000e018
    78a0:	.word	0xe000ed04
    78a4:	.word	0x16c16c17

000078a8 <delay>:

void delay(uint32_t ms)
{
    78a8:	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    78ac:	mov	r5, r0

uint32_t micros(void)
{
	uint32_t count, current, istatus;

	__disable_irq();
    78ae:	cpsid	i
	current = SYST_CVR;
	count = systick_millis_count;
    78b0:	ldr	r7, [pc, #136]	; (793c <delay+0x94>)
uint32_t micros(void)
{
	uint32_t count, current, istatus;

	__disable_irq();
	current = SYST_CVR;
    78b2:	ldr	r3, [pc, #140]	; (7940 <delay+0x98>)
	count = systick_millis_count;
	istatus = SCB_ICSR;	// bit 26 indicates if systick exception pending
    78b4:	ldr	r2, [pc, #140]	; (7944 <delay+0x9c>)
uint32_t micros(void)
{
	uint32_t count, current, istatus;

	__disable_irq();
	current = SYST_CVR;
    78b6:	ldr	r3, [r3, #0]
	count = systick_millis_count;
    78b8:	ldr	r4, [r7, #0]
	istatus = SCB_ICSR;	// bit 26 indicates if systick exception pending
    78ba:	ldr	r2, [r2, #0]
	__enable_irq();
    78bc:	cpsie	i
	 //systick_current = current;
	 //systick_count = count;
	 //systick_istatus = istatus & SCB_ICSR_PENDSTSET ? 1 : 0;
	if ((istatus & SCB_ICSR_PENDSTSET) && current > 50) count++;
    78be:	lsls	r2, r2, #5
    78c0:	bpl.n	78c8 <delay+0x20>
    78c2:	cmp	r3, #50	; 0x32
    78c4:	it	hi
    78c6:	addhi	r4, #1

void delay(uint32_t ms)
{
	uint32_t start = micros();

	if (ms > 0) {
    78c8:	cbz	r5, 7938 <delay+0x90>
#if defined(KINETISL) && F_CPU == 48000000
	return count * 1000 + ((current * (uint32_t)87381) >> 22);
#elif defined(KINETISL) && F_CPU == 24000000
	return count * 1000 + ((current * (uint32_t)174763) >> 22);
#endif
	return count * 1000 + current / (F_CPU / 1000000);
    78ca:	rsb	r3, r3, #179200	; 0x2bc00
    78ce:	addw	r3, r3, #799	; 0x31f
    78d2:	ldr	r6, [pc, #116]	; (7948 <delay+0xa0>)
uint32_t micros(void)
{
	uint32_t count, current, istatus;

	__disable_irq();
	current = SYST_CVR;
    78d4:	ldr.w	r9, [pc, #104]	; 7940 <delay+0x98>
	count = systick_millis_count;
	istatus = SCB_ICSR;	// bit 26 indicates if systick exception pending
    78d8:	ldr.w	r8, [pc, #104]	; 7944 <delay+0x9c>
#if defined(KINETISL) && F_CPU == 48000000
	return count * 1000 + ((current * (uint32_t)87381) >> 22);
#elif defined(KINETISL) && F_CPU == 24000000
	return count * 1000 + ((current * (uint32_t)174763) >> 22);
#endif
	return count * 1000 + current / (F_CPU / 1000000);
    78dc:	lsrs	r3, r3, #2
    78de:	mov.w	r2, #1000	; 0x3e8
    78e2:	umull	r1, r3, r6, r3
    78e6:	mul.w	r4, r2, r4
    78ea:	add.w	r4, r4, r3, lsr #2

uint32_t micros(void)
{
	uint32_t count, current, istatus;

	__disable_irq();
    78ee:	cpsid	i
	current = SYST_CVR;
    78f0:	ldr.w	r1, [r9]
	count = systick_millis_count;
    78f4:	ldr	r2, [r7, #0]
	istatus = SCB_ICSR;	// bit 26 indicates if systick exception pending
    78f6:	ldr.w	lr, [r8]
	__enable_irq();
    78fa:	cpsie	i
{
	uint32_t start = micros();

	if (ms > 0) {
		while (1) {
			while ((micros() - start) >= 1000) {
    78fc:	rsb	r3, r1, #179200	; 0x2bc00
    7900:	addw	r3, r3, #799	; 0x31f
    7904:	lsrs	r3, r3, #2
    7906:	umull	r0, r3, r6, r3
	istatus = SCB_ICSR;	// bit 26 indicates if systick exception pending
	__enable_irq();
	 //systick_current = current;
	 //systick_count = count;
	 //systick_istatus = istatus & SCB_ICSR_PENDSTSET ? 1 : 0;
	if ((istatus & SCB_ICSR_PENDSTSET) && current > 50) count++;
    790a:	tst.w	lr, #67108864	; 0x4000000
{
	uint32_t start = micros();

	if (ms > 0) {
		while (1) {
			while ((micros() - start) >= 1000) {
    790e:	rsb	r3, r4, r3, lsr #2
    7912:	mov.w	r0, #1000	; 0x3e8
	istatus = SCB_ICSR;	// bit 26 indicates if systick exception pending
	__enable_irq();
	 //systick_current = current;
	 //systick_count = count;
	 //systick_istatus = istatus & SCB_ICSR_PENDSTSET ? 1 : 0;
	if ((istatus & SCB_ICSR_PENDSTSET) && current > 50) count++;
    7916:	beq.n	791e <delay+0x76>
    7918:	cmp	r1, #50	; 0x32
    791a:	it	hi
    791c:	addhi	r2, #1
{
	uint32_t start = micros();

	if (ms > 0) {
		while (1) {
			while ((micros() - start) >= 1000) {
    791e:	mla	r3, r0, r2, r3
    7922:	cmp.w	r3, #1000	; 0x3e8
    7926:	bcc.n	7932 <delay+0x8a>
				ms--;
				if (ms == 0) return;
    7928:	subs	r5, #1
    792a:	beq.n	7938 <delay+0x90>
				start += 1000;
    792c:	add.w	r4, r4, #1000	; 0x3e8
    7930:	b.n	78ee <delay+0x46>
			}
			yield();
    7932:	bl	8b50 <yield>
		}
    7936:	b.n	78ee <delay+0x46>
    7938:	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    793c:	.word	0x20012a14
    7940:	.word	0xe000e018
    7944:	.word	0xe000ed04
    7948:	.word	0x16c16c17

0000794c <_init_Teensyduino_internal_>:
#endif

//void init_pins(void)
__attribute__((noinline))
void _init_Teensyduino_internal_(void)
{
    794c:	push	{r3, r4, r5, r6, r7, lr}
#if defined(__MK20DX128__) || defined(__MK20DX256__) || defined(__MK64FX512__) || defined(__MK66FX1M0__)
	NVIC_ENABLE_IRQ(IRQ_PORTA);
    794e:	ldr	r3, [pc, #312]	; (7a88 <_init_Teensyduino_internal_+0x13c>)
	NVIC_ENABLE_IRQ(IRQ_PORTA);
	NVIC_ENABLE_IRQ(IRQ_PORTCD);
#endif
	//SIM_SCGC6 |= SIM_SCGC6_FTM0;	// TODO: use bitband for atomic read-mod-write
	//SIM_SCGC6 |= SIM_SCGC6_FTM1;
	FTM0_CNT = 0;
    7950:	ldr	r0, [pc, #312]	; (7a8c <_init_Teensyduino_internal_+0x140>)
	FTM0_MOD = DEFAULT_FTM_MOD;
    7952:	ldr.w	ip, [pc, #348]	; 7ab0 <_init_Teensyduino_internal_+0x164>
	FTM0_C0SC = 0x28; // MSnB:MSnA = 10, ELSnB:ELSnA = 10
	FTM0_C1SC = 0x28;
    7956:	ldr	r4, [pc, #312]	; (7a90 <_init_Teensyduino_internal_+0x144>)
	FTM0_C2SC = 0x28;
    7958:	ldr	r1, [pc, #312]	; (7a94 <_init_Teensyduino_internal_+0x148>)
#endif
	//SIM_SCGC6 |= SIM_SCGC6_FTM0;	// TODO: use bitband for atomic read-mod-write
	//SIM_SCGC6 |= SIM_SCGC6_FTM1;
	FTM0_CNT = 0;
	FTM0_MOD = DEFAULT_FTM_MOD;
	FTM0_C0SC = 0x28; // MSnB:MSnA = 10, ELSnB:ELSnA = 10
    795a:	ldr.w	lr, [pc, #344]	; 7ab4 <_init_Teensyduino_internal_+0x168>
	FTM0_C1SC = 0x28;
	FTM0_C2SC = 0x28;
	FTM0_C3SC = 0x28;
    795e:	ldr	r6, [pc, #312]	; (7a98 <_init_Teensyduino_internal_+0x14c>)
	FTM0_C4SC = 0x28;
    7960:	ldr	r5, [pc, #312]	; (7a9c <_init_Teensyduino_internal_+0x150>)
	FTM0_C5SC = 0x28;
    7962:	ldr	r7, [pc, #316]	; (7aa0 <_init_Teensyduino_internal_+0x154>)
//void init_pins(void)
__attribute__((noinline))
void _init_Teensyduino_internal_(void)
{
#if defined(__MK20DX128__) || defined(__MK20DX256__) || defined(__MK64FX512__) || defined(__MK66FX1M0__)
	NVIC_ENABLE_IRQ(IRQ_PORTA);
    7964:	mov.w	r2, #134217728	; 0x8000000
    7968:	str	r2, [r3, #0]
	NVIC_ENABLE_IRQ(IRQ_PORTB);
    796a:	mov.w	r2, #268435456	; 0x10000000
    796e:	str	r2, [r3, #0]
	NVIC_ENABLE_IRQ(IRQ_PORTC);
    7970:	mov.w	r2, #536870912	; 0x20000000
    7974:	str	r2, [r3, #0]
	NVIC_ENABLE_IRQ(IRQ_PORTD);
    7976:	mov.w	r2, #1073741824	; 0x40000000
    797a:	str	r2, [r3, #0]
	NVIC_ENABLE_IRQ(IRQ_PORTE);
    797c:	mov.w	r2, #2147483648	; 0x80000000
    7980:	str	r2, [r3, #0]
	NVIC_ENABLE_IRQ(IRQ_PORTA);
	NVIC_ENABLE_IRQ(IRQ_PORTCD);
#endif
	//SIM_SCGC6 |= SIM_SCGC6_FTM0;	// TODO: use bitband for atomic read-mod-write
	//SIM_SCGC6 |= SIM_SCGC6_FTM1;
	FTM0_CNT = 0;
    7982:	movs	r2, #0
    7984:	str	r2, [r0, #0]
	FTM0_MOD = DEFAULT_FTM_MOD;
	FTM0_C0SC = 0x28; // MSnB:MSnA = 10, ELSnB:ELSnA = 10
    7986:	movs	r3, #40	; 0x28
	NVIC_ENABLE_IRQ(IRQ_PORTCD);
#endif
	//SIM_SCGC6 |= SIM_SCGC6_FTM0;	// TODO: use bitband for atomic read-mod-write
	//SIM_SCGC6 |= SIM_SCGC6_FTM1;
	FTM0_CNT = 0;
	FTM0_MOD = DEFAULT_FTM_MOD;
    7988:	movw	r0, #61439	; 0xefff
    798c:	str.w	r0, [ip]
	FTM0_C0SC = 0x28; // MSnB:MSnA = 10, ELSnB:ELSnA = 10
    7990:	str.w	r3, [lr]
	FTM0_C1SC = 0x28;
    7994:	str	r3, [r4, #0]
	FTM0_C7SC = 0x28;
#endif
#if defined(__MK64FX512__) || defined(__MK66FX1M0__)
	FTM3_C0SC = 0x28;
	FTM3_C1SC = 0x28;
	FTM3_C2SC = 0x28;
    7996:	add.w	lr, lr, #528384	; 0x81000
	//SIM_SCGC6 |= SIM_SCGC6_FTM1;
	FTM0_CNT = 0;
	FTM0_MOD = DEFAULT_FTM_MOD;
	FTM0_C0SC = 0x28; // MSnB:MSnA = 10, ELSnB:ELSnA = 10
	FTM0_C1SC = 0x28;
	FTM0_C2SC = 0x28;
    799a:	str	r3, [r1, #0]
	FTM0_C3SC = 0x28;
    799c:	str	r3, [r6, #0]
	FTM0_C4SC = 0x28;
    799e:	str	r3, [r5, #0]
#if defined(__MK20DX128__) || defined(__MK20DX256__) || defined(__MK64FX512__) || defined(__MK66FX1M0__)
	FTM0_C6SC = 0x28;
	FTM0_C7SC = 0x28;
#endif
#if defined(__MK64FX512__) || defined(__MK66FX1M0__)
	FTM3_C0SC = 0x28;
    79a0:	add.w	r6, r6, #524288	; 0x80000
	FTM0_C0SC = 0x28; // MSnB:MSnA = 10, ELSnB:ELSnA = 10
	FTM0_C1SC = 0x28;
	FTM0_C2SC = 0x28;
	FTM0_C3SC = 0x28;
	FTM0_C4SC = 0x28;
	FTM0_C5SC = 0x28;
    79a4:	str	r3, [r7, #0]
	FTM0_C6SC = 0x28;
	FTM0_C7SC = 0x28;
#endif
#if defined(__MK64FX512__) || defined(__MK66FX1M0__)
	FTM3_C0SC = 0x28;
	FTM3_C1SC = 0x28;
    79a6:	add.w	r5, r5, #524288	; 0x80000
	FTM0_C2SC = 0x28;
	FTM0_C3SC = 0x28;
	FTM0_C4SC = 0x28;
	FTM0_C5SC = 0x28;
#if defined(__MK20DX128__) || defined(__MK20DX256__) || defined(__MK64FX512__) || defined(__MK66FX1M0__)
	FTM0_C6SC = 0x28;
    79aa:	str	r3, [r4, #40]	; 0x28
#endif
#if defined(__MK64FX512__) || defined(__MK66FX1M0__)
	FTM3_C0SC = 0x28;
	FTM3_C1SC = 0x28;
	FTM3_C2SC = 0x28;
	FTM3_C3SC = 0x28;
    79ac:	add.w	r7, r7, #524288	; 0x80000
	FTM0_C3SC = 0x28;
	FTM0_C4SC = 0x28;
	FTM0_C5SC = 0x28;
#if defined(__MK20DX128__) || defined(__MK20DX256__) || defined(__MK64FX512__) || defined(__MK66FX1M0__)
	FTM0_C6SC = 0x28;
	FTM0_C7SC = 0x28;
    79b0:	str	r3, [r1, #40]	; 0x28
	FTM3_C0SC = 0x28;
	FTM3_C1SC = 0x28;
	FTM3_C2SC = 0x28;
	FTM3_C3SC = 0x28;
	FTM3_C4SC = 0x28;
	FTM3_C5SC = 0x28;
    79b2:	add.w	r4, r4, #528384	; 0x81000
#if defined(__MK64FX512__) || defined(__MK66FX1M0__)
	FTM3_C0SC = 0x28;
	FTM3_C1SC = 0x28;
	FTM3_C2SC = 0x28;
	FTM3_C3SC = 0x28;
	FTM3_C4SC = 0x28;
    79b6:	add.w	r1, r1, #528384	; 0x81000
#if defined(__MK20DX128__) || defined(__MK20DX256__) || defined(__MK64FX512__) || defined(__MK66FX1M0__)
	FTM0_C6SC = 0x28;
	FTM0_C7SC = 0x28;
#endif
#if defined(__MK64FX512__) || defined(__MK66FX1M0__)
	FTM3_C0SC = 0x28;
    79ba:	addw	r6, r6, #4072	; 0xfe8
	FTM3_C1SC = 0x28;
    79be:	addw	r5, r5, #4072	; 0xfe8
	FTM3_C2SC = 0x28;
	FTM3_C3SC = 0x28;
    79c2:	add.w	r7, r7, #4080	; 0xff0
	FTM3_C4SC = 0x28;
    79c6:	adds	r1, #16
	FTM0_C7SC = 0x28;
#endif
#if defined(__MK64FX512__) || defined(__MK66FX1M0__)
	FTM3_C0SC = 0x28;
	FTM3_C1SC = 0x28;
	FTM3_C2SC = 0x28;
    79c8:	add.w	lr, lr, #16
	FTM3_C3SC = 0x28;
	FTM3_C4SC = 0x28;
	FTM3_C5SC = 0x28;
    79cc:	adds	r4, #32
#if defined(__MK20DX128__) || defined(__MK20DX256__) || defined(__MK64FX512__) || defined(__MK66FX1M0__)
	FTM0_C6SC = 0x28;
	FTM0_C7SC = 0x28;
#endif
#if defined(__MK64FX512__) || defined(__MK66FX1M0__)
	FTM3_C0SC = 0x28;
    79ce:	str	r3, [r6, #0]
	FTM3_C1SC = 0x28;
    79d0:	str	r3, [r5, #0]
	FTM3_C2SC = 0x28;
    79d2:	str.w	r3, [lr]
	FTM3_C3SC = 0x28;
    79d6:	str	r3, [r7, #0]
	FTM3_C4SC = 0x28;
    79d8:	str	r3, [r1, #0]
	FTM3_C5SC = 0x28;
    79da:	str	r3, [r4, #0]
	FTM3_C6SC = 0x28;
	FTM3_C7SC = 0x28;
#endif
	FTM0_SC = FTM_SC_CLKS(1) | FTM_SC_PS(DEFAULT_FTM_PRESCALE);
    79dc:	ldr	r4, [pc, #196]	; (7aa4 <_init_Teensyduino_internal_+0x158>)
	FTM3_C1SC = 0x28;
	FTM3_C2SC = 0x28;
	FTM3_C3SC = 0x28;
	FTM3_C4SC = 0x28;
	FTM3_C5SC = 0x28;
	FTM3_C6SC = 0x28;
    79de:	str	r3, [r7, #24]
	FTM3_C7SC = 0x28;
    79e0:	str	r3, [r1, #24]
#endif
	FTM0_SC = FTM_SC_CLKS(1) | FTM_SC_PS(DEFAULT_FTM_PRESCALE);
    79e2:	movs	r1, #9
    79e4:	str	r1, [r4, #0]
	FTM1_CNT = 0;
    79e6:	sub.w	r7, r7, #524288	; 0x80000
	FTM1_MOD = DEFAULT_FTM_MOD;
    79ea:	add.w	r4, r4, #4096	; 0x1000
	FTM3_C5SC = 0x28;
	FTM3_C6SC = 0x28;
	FTM3_C7SC = 0x28;
#endif
	FTM0_SC = FTM_SC_CLKS(1) | FTM_SC_PS(DEFAULT_FTM_PRESCALE);
	FTM1_CNT = 0;
    79ee:	subs	r7, #32
	FTM1_MOD = DEFAULT_FTM_MOD;
    79f0:	adds	r4, #8
	FTM3_C5SC = 0x28;
	FTM3_C6SC = 0x28;
	FTM3_C7SC = 0x28;
#endif
	FTM0_SC = FTM_SC_CLKS(1) | FTM_SC_PS(DEFAULT_FTM_PRESCALE);
	FTM1_CNT = 0;
    79f2:	str	r2, [r7, #0]
	FTM1_MOD = DEFAULT_FTM_MOD;
    79f4:	str	r0, [r4, #0]
	FTM1_C0SC = 0x28;
    79f6:	str	r3, [r7, #8]
	FTM1_C1SC = 0x28;
    79f8:	str	r3, [r4, #12]
	FTM1_SC = FTM_SC_CLKS(1) | FTM_SC_PS(DEFAULT_FTM_PRESCALE);
    79fa:	str.w	r1, [r7, #-4]
#if defined(__MK20DX256__) || defined(__MK64FX512__) || defined(__MK66FX1M0__) || defined(__MKL26Z64__)
	FTM2_CNT = 0;
    79fe:	add.w	r4, r4, #518144	; 0x7e800
	FTM2_MOD = DEFAULT_FTM_MOD;
    7a02:	add.w	r7, r7, #520192	; 0x7f000
    7a06:	adds	r7, #4
	FTM1_MOD = DEFAULT_FTM_MOD;
	FTM1_C0SC = 0x28;
	FTM1_C1SC = 0x28;
	FTM1_SC = FTM_SC_CLKS(1) | FTM_SC_PS(DEFAULT_FTM_PRESCALE);
#if defined(__MK20DX256__) || defined(__MK64FX512__) || defined(__MK66FX1M0__) || defined(__MKL26Z64__)
	FTM2_CNT = 0;
    7a08:	addw	r4, r4, #2044	; 0x7fc
    7a0c:	str	r2, [r4, #0]
	FTM2_MOD = DEFAULT_FTM_MOD;
    7a0e:	str	r0, [r7, #0]
	FTM2_C0SC = 0x28;
    7a10:	str	r3, [r4, #8]
	FTM2_C1SC = 0x28;
    7a12:	str	r3, [r7, #12]
	FTM2_SC = FTM_SC_CLKS(1) | FTM_SC_PS(DEFAULT_FTM_PRESCALE);
    7a14:	str.w	r1, [r4, #-4]
	FTM1_C1SC = 0x28;
	FTM1_SC = FTM_SC_CLKS(1) | FTM_SC_PS(DEFAULT_FTM_PRESCALE);
#if defined(__MK20DX256__) || defined(__MK64FX512__) || defined(__MK66FX1M0__) || defined(__MKL26Z64__)
	FTM2_CNT = 0;
	FTM2_MOD = DEFAULT_FTM_MOD;
	FTM2_C0SC = 0x28;
    7a18:	adds	r4, #8
	FTM2_C1SC = 0x28;
	FTM2_SC = FTM_SC_CLKS(1) | FTM_SC_PS(DEFAULT_FTM_PRESCALE);
#endif
#if defined(__MK64FX512__) || defined(__MK66FX1M0__)
	FTM3_CNT = 0;
	FTM3_MOD = DEFAULT_FTM_MOD;
    7a1a:	addw	r4, r4, #4092	; 0xffc
	FTM2_C0SC = 0x28;
	FTM2_C1SC = 0x28;
	FTM2_SC = FTM_SC_CLKS(1) | FTM_SC_PS(DEFAULT_FTM_PRESCALE);
#endif
#if defined(__MK64FX512__) || defined(__MK66FX1M0__)
	FTM3_CNT = 0;
    7a1e:	str.w	r2, [r7, #4092]	; 0xffc
	FTM3_MOD = DEFAULT_FTM_MOD;
    7a22:	str	r0, [r4, #0]
	FTM3_C0SC = 0x28;
	FTM3_C1SC = 0x28;
	FTM3_SC = FTM_SC_CLKS(1) | FTM_SC_PS(DEFAULT_FTM_PRESCALE);
#endif
#if defined(__MK66FX1M0__)
	SIM_SCGC2 |= SIM_SCGC2_TPM1;
    7a24:	sub.w	r4, r4, #460800	; 0x70800
    7a28:	subw	r4, r4, #2012	; 0x7dc
	FTM2_SC = FTM_SC_CLKS(1) | FTM_SC_PS(DEFAULT_FTM_PRESCALE);
#endif
#if defined(__MK64FX512__) || defined(__MK66FX1M0__)
	FTM3_CNT = 0;
	FTM3_MOD = DEFAULT_FTM_MOD;
	FTM3_C0SC = 0x28;
    7a2c:	str	r3, [r6, #0]
	FTM3_C1SC = 0x28;
    7a2e:	str	r3, [r5, #0]
	FTM3_SC = FTM_SC_CLKS(1) | FTM_SC_PS(DEFAULT_FTM_PRESCALE);
    7a30:	str.w	r1, [r7, #4088]	; 0xff8
#endif
#if defined(__MK66FX1M0__)
	SIM_SCGC2 |= SIM_SCGC2_TPM1;
    7a34:	ldr	r1, [r4, #0]
	SIM_SOPT2 |= SIM_SOPT2_TPMSRC(2);
    7a36:	ldr	r0, [pc, #112]	; (7aa8 <_init_Teensyduino_internal_+0x15c>)
	FTM3_C0SC = 0x28;
	FTM3_C1SC = 0x28;
	FTM3_SC = FTM_SC_CLKS(1) | FTM_SC_PS(DEFAULT_FTM_PRESCALE);
#endif
#if defined(__MK66FX1M0__)
	SIM_SCGC2 |= SIM_SCGC2_TPM1;
    7a38:	orr.w	r1, r1, #512	; 0x200
    7a3c:	str	r1, [r4, #0]
	SIM_SOPT2 |= SIM_SOPT2_TPMSRC(2);
    7a3e:	ldr	r1, [r0, #0]
	TPM1_CNT = 0;
	TPM1_MOD = 32767;
	TPM1_C0SC = 0x28;
	TPM1_C1SC = 0x28;
	TPM1_SC = FTM_SC_CLKS(1) | FTM_SC_PS(0);
    7a40:	ldr	r4, [pc, #104]	; (7aac <_init_Teensyduino_internal_+0x160>)
	FTM3_SC = FTM_SC_CLKS(1) | FTM_SC_PS(DEFAULT_FTM_PRESCALE);
#endif
#if defined(__MK66FX1M0__)
	SIM_SCGC2 |= SIM_SCGC2_TPM1;
	SIM_SOPT2 |= SIM_SOPT2_TPMSRC(2);
	TPM1_CNT = 0;
    7a42:	add.w	lr, lr, #65280	; 0xff00
    7a46:	add.w	lr, lr, #232	; 0xe8
	TPM1_MOD = 32767;
    7a4a:	add.w	r7, r7, #69632	; 0x11000
	TPM1_C0SC = 0x28;
    7a4e:	add.w	r6, r6, #65536	; 0x10000
	TPM1_C1SC = 0x28;
    7a52:	add.w	r5, r5, #65536	; 0x10000
	FTM3_C1SC = 0x28;
	FTM3_SC = FTM_SC_CLKS(1) | FTM_SC_PS(DEFAULT_FTM_PRESCALE);
#endif
#if defined(__MK66FX1M0__)
	SIM_SCGC2 |= SIM_SCGC2_TPM1;
	SIM_SOPT2 |= SIM_SOPT2_TPMSRC(2);
    7a56:	orr.w	r1, r1, #33554432	; 0x2000000
    7a5a:	str	r1, [r0, #0]
	TPM1_CNT = 0;
    7a5c:	str.w	r2, [lr]
	TPM1_MOD = 32767;
    7a60:	movw	r1, #32767	; 0x7fff
	TPM1_C0SC = 0x28;
	TPM1_C1SC = 0x28;
	TPM1_SC = FTM_SC_CLKS(1) | FTM_SC_PS(0);
    7a64:	movs	r2, #8
#endif
#if defined(__MK66FX1M0__)
	SIM_SCGC2 |= SIM_SCGC2_TPM1;
	SIM_SOPT2 |= SIM_SOPT2_TPMSRC(2);
	TPM1_CNT = 0;
	TPM1_MOD = 32767;
    7a66:	str	r1, [r7, #0]
	TPM1_C0SC = 0x28;
    7a68:	str	r3, [r6, #0]
	TPM1_C1SC = 0x28;
    7a6a:	str	r3, [r5, #0]
	TPM1_SC = FTM_SC_CLKS(1) | FTM_SC_PS(0);
    7a6c:	str	r2, [r4, #0]
#endif
	analog_init();
    7a6e:	bl	745c <analog_init>
	// for background about this startup delay, please see these conversations
	// https://forum.pjrc.com/threads/36606-startup-time-(400ms)?p=113980&viewfull=1#post113980
	// https://forum.pjrc.com/threads/31290-Teensey-3-2-Teensey-Loader-1-24-Issues?p=87273&viewfull=1#post87273
#if TEENSYDUINO >= 142
	delay(25);
    7a72:	movs	r0, #25
    7a74:	bl	78a8 <delay>
	usb_init();
    7a78:	bl	87a4 <usb_init>
	delay(275);
    7a7c:	movw	r0, #275	; 0x113
#else
	delay(50);
	usb_init();
	delay(350);
#endif
}
    7a80:	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
	// https://forum.pjrc.com/threads/36606-startup-time-(400ms)?p=113980&viewfull=1#post113980
	// https://forum.pjrc.com/threads/31290-Teensey-3-2-Teensey-Loader-1-24-Issues?p=87273&viewfull=1#post87273
#if TEENSYDUINO >= 142
	delay(25);
	usb_init();
	delay(275);
    7a84:	b.w	78a8 <delay>
    7a88:	.word	0xe000e104
    7a8c:	.word	0x40038004
    7a90:	.word	0x40038014
    7a94:	.word	0x4003801c
    7a98:	.word	0x40038024
    7a9c:	.word	0x4003802c
    7aa0:	.word	0x40038034
    7aa4:	.word	0x40038000
    7aa8:	.word	0x40048004
    7aac:	.word	0x400c9000
    7ab0:	.word	0x40038008
    7ab4:	.word	0x4003800c

00007ab8 <usb_malloc>:
usb_packet_t * usb_malloc(void)
{
	unsigned int n, avail;
	uint8_t *p;

	__disable_irq();
    7ab8:	cpsid	i
	avail = usb_buffer_available;
    7aba:	ldr	r0, [pc, #52]	; (7af0 <usb_malloc+0x38>)
    7abc:	ldr	r2, [r0, #0]
	n = __builtin_clz(avail); // clz = count leading zeros
    7abe:	clz	r3, r2
	if (n >= NUM_USB_BUFFERS) {
    7ac2:	cmp	r3, #29
    7ac4:	bgt.n	7ae8 <usb_malloc+0x30>
	}
	//serial_print("malloc:");
	//serial_phex(n);
	//serial_print("\n");

	usb_buffer_available = avail & ~(0x80000000 >> n);
    7ac6:	mov.w	r1, #2147483648	; 0x80000000
    7aca:	lsrs	r1, r3
    7acc:	bic.w	r2, r2, r1
    7ad0:	str	r2, [r0, #0]
	__enable_irq();
    7ad2:	cpsie	i
	p = usb_buffer_memory + (n * sizeof(usb_packet_t));
    7ad4:	ldr	r0, [pc, #28]	; (7af4 <usb_malloc+0x3c>)
    7ad6:	add.w	r3, r3, r3, lsl #3
    7ada:	lsls	r3, r3, #3
    7adc:	adds	r2, r0, r3
	//serial_print("malloc:");
	//serial_phex32((int)p);
	//serial_print("\n");
	*(uint32_t *)p = 0;
    7ade:	movs	r1, #0
    7ae0:	str	r1, [r0, r3]
	*(uint32_t *)(p + 4) = 0;
	return (usb_packet_t *)p;
    7ae2:	mov	r0, r2
	p = usb_buffer_memory + (n * sizeof(usb_packet_t));
	//serial_print("malloc:");
	//serial_phex32((int)p);
	//serial_print("\n");
	*(uint32_t *)p = 0;
	*(uint32_t *)(p + 4) = 0;
    7ae4:	str	r1, [r2, #4]
	return (usb_packet_t *)p;
}
    7ae6:	bx	lr

	__disable_irq();
	avail = usb_buffer_available;
	n = __builtin_clz(avail); // clz = count leading zeros
	if (n >= NUM_USB_BUFFERS) {
		__enable_irq();
    7ae8:	cpsie	i
		return NULL;
    7aea:	movs	r0, #0
    7aec:	bx	lr
    7aee:	nop
    7af0:	.word	0x20008044
    7af4:	.word	0x2000753c

00007af8 <usb_free>:
void usb_free(usb_packet_t *p)
{
	unsigned int n, mask;

	//serial_print("free:");
	n = ((uint8_t *)p - usb_buffer_memory) / sizeof(usb_packet_t);
    7af8:	ldr	r3, [pc, #52]	; (7b30 <usb_free+0x38>)
    7afa:	ldr	r2, [pc, #56]	; (7b34 <usb_free+0x3c>)
    7afc:	subs	r3, r0, r3
    7afe:	umull	r2, r3, r2, r3
    7b02:	lsrs	r3, r3, #4
	if (n >= NUM_USB_BUFFERS) return;
    7b04:	cmp	r3, #29
    7b06:	bhi.n	7b22 <usb_free+0x2a>
	//serial_phex(n);
	//serial_print("\n");

	// if any endpoints are starving for memory to receive
	// packets, give this memory to them immediately!
	if (usb_rx_memory_needed && usb_configuration) {
    7b08:	ldr	r2, [pc, #44]	; (7b38 <usb_free+0x40>)
    7b0a:	ldrb	r2, [r2, #0]
    7b0c:	cbnz	r2, 7b24 <usb_free+0x2c>
		usb_rx_memory(p);
		return;
	}

	mask = (0x80000000 >> n);
	__disable_irq();
    7b0e:	cpsid	i
	usb_buffer_available |= mask;
    7b10:	ldr	r0, [pc, #40]	; (7b3c <usb_free+0x44>)
    7b12:	mov.w	r1, #2147483648	; 0x80000000
    7b16:	ldr	r2, [r0, #0]
    7b18:	lsr.w	r3, r1, r3
    7b1c:	orrs	r2, r3
    7b1e:	str	r2, [r0, #0]
	__enable_irq();
    7b20:	cpsie	i
    7b22:	bx	lr
	//serial_phex(n);
	//serial_print("\n");

	// if any endpoints are starving for memory to receive
	// packets, give this memory to them immediately!
	if (usb_rx_memory_needed && usb_configuration) {
    7b24:	ldr	r2, [pc, #24]	; (7b40 <usb_free+0x48>)
    7b26:	ldrb	r2, [r2, #0]
    7b28:	cmp	r2, #0
    7b2a:	beq.n	7b0e <usb_free+0x16>
		//serial_print("give to rx:");
		//serial_phex32((int)p);
		//serial_print("\n");
		usb_rx_memory(p);
    7b2c:	b.w	7bac <usb_rx_memory>
    7b30:	.word	0x2000753c
    7b34:	.word	0x38e38e39
    7b38:	.word	0x20012b2d
    7b3c:	.word	0x20008044
    7b40:	.word	0x20012b38

00007b44 <usb_rx>:


usb_packet_t *usb_rx(uint32_t endpoint)
{
	usb_packet_t *ret;
	endpoint--;
    7b44:	subs	r3, r0, #1
	if (endpoint >= NUM_ENDPOINTS) return NULL;
    7b46:	cmp	r3, #7
    7b48:	bhi.n	7b74 <usb_rx+0x30>
	__disable_irq();
    7b4a:	cpsid	i
	ret = rx_first[endpoint];
    7b4c:	ldr	r1, [pc, #40]	; (7b78 <usb_rx+0x34>)
    7b4e:	ldr.w	r0, [r1, r3, lsl #2]
	if (ret) {
    7b52:	cbz	r0, 7b70 <usb_rx+0x2c>




usb_packet_t *usb_rx(uint32_t endpoint)
{
    7b54:	push	{r4, r5, r6}
	if (endpoint >= NUM_ENDPOINTS) return NULL;
	__disable_irq();
	ret = rx_first[endpoint];
	if (ret) {
		rx_first[endpoint] = ret->next;
		usb_rx_byte_count_data[endpoint] -= ret->len;
    7b56:	ldr	r4, [pc, #36]	; (7b7c <usb_rx+0x38>)
    7b58:	ldrh	r5, [r0, #0]
    7b5a:	ldrh.w	r2, [r4, r3, lsl #1]
	endpoint--;
	if (endpoint >= NUM_ENDPOINTS) return NULL;
	__disable_irq();
	ret = rx_first[endpoint];
	if (ret) {
		rx_first[endpoint] = ret->next;
    7b5e:	ldr	r6, [r0, #4]
    7b60:	str.w	r6, [r1, r3, lsl #2]
		usb_rx_byte_count_data[endpoint] -= ret->len;
    7b64:	subs	r2, r2, r5
    7b66:	strh.w	r2, [r4, r3, lsl #1]
	}
	__enable_irq();
    7b6a:	cpsie	i
	//serial_phex(endpoint);
	//serial_print(", packet=");
	//serial_phex32(ret);
	//serial_print("\n");
	return ret;
}
    7b6c:	pop	{r4, r5, r6}
    7b6e:	bx	lr
	ret = rx_first[endpoint];
	if (ret) {
		rx_first[endpoint] = ret->next;
		usb_rx_byte_count_data[endpoint] -= ret->len;
	}
	__enable_irq();
    7b70:	cpsie	i
	//serial_phex(endpoint);
	//serial_print(", packet=");
	//serial_phex32(ret);
	//serial_print("\n");
	return ret;
}
    7b72:	bx	lr

usb_packet_t *usb_rx(uint32_t endpoint)
{
	usb_packet_t *ret;
	endpoint--;
	if (endpoint >= NUM_ENDPOINTS) return NULL;
    7b74:	movs	r0, #0
    7b76:	bx	lr
    7b78:	.word	0x20012a80
    7b7c:	.word	0x20012f68

00007b80 <usb_tx_packet_count>:
uint32_t usb_tx_packet_count(uint32_t endpoint)
{
	const usb_packet_t *p;
	uint32_t count=0;

	endpoint--;
    7b80:	subs	r0, #1
	if (endpoint >= NUM_ENDPOINTS) return 0;
    7b82:	cmp	r0, #7
    7b84:	bhi.n	7b9e <usb_tx_packet_count+0x1e>
	__disable_irq();
    7b86:	cpsid	i
	for (p = tx_first[endpoint]; p; p = p->next) count++;
    7b88:	ldr	r3, [pc, #28]	; (7ba8 <usb_tx_packet_count+0x28>)
    7b8a:	ldr.w	r3, [r3, r0, lsl #2]
    7b8e:	cbz	r3, 7ba2 <usb_tx_packet_count+0x22>
    7b90:	movs	r0, #0
    7b92:	ldr	r3, [r3, #4]
    7b94:	adds	r0, #1
    7b96:	cmp	r3, #0
    7b98:	bne.n	7b92 <usb_tx_packet_count+0x12>
	__enable_irq();
    7b9a:	cpsie	i
	return count;
    7b9c:	bx	lr
{
	const usb_packet_t *p;
	uint32_t count=0;

	endpoint--;
	if (endpoint >= NUM_ENDPOINTS) return 0;
    7b9e:	movs	r0, #0
	__disable_irq();
	for (p = tx_first[endpoint]; p; p = p->next) count++;
	__enable_irq();
	return count;
}
    7ba0:	bx	lr
}

uint32_t usb_tx_packet_count(uint32_t endpoint)
{
	const usb_packet_t *p;
	uint32_t count=0;
    7ba2:	mov	r0, r3
    7ba4:	b.n	7b9a <usb_tx_packet_count+0x1a>
    7ba6:	nop
    7ba8:	.word	0x20012ae4

00007bac <usb_rx_memory>:
// user is creating data very quickly, their consumption could starve reception
// without this prioritization.  The packet buffer (input) is assigned to the
// first endpoint needing memory.
//
void usb_rx_memory(usb_packet_t *packet)
{
    7bac:	push	{r4, r5, r6, r7, lr}
    7bae:	mov	lr, r0
	unsigned int i;
	const uint8_t *cfg;

	cfg = usb_endpoint_config_table;
	//serial_print("rx_mem:");
	__disable_irq();
    7bb0:	cpsid	i
    7bb2:	movs	r2, #2
    7bb4:	movs	r3, #1
void usb_rx_memory(usb_packet_t *packet)
{
	unsigned int i;
	const uint8_t *cfg;

	cfg = usb_endpoint_config_table;
    7bb6:	ldr	r1, [pc, #112]	; (7c28 <usb_rx_memory+0x7c>)
	for (i=1; i <= NUM_ENDPOINTS; i++) {
#ifdef AUDIO_INTERFACE
		if (i == AUDIO_RX_ENDPOINT) continue;
#endif
		if (*cfg++ & USB_ENDPT_EPRXEN) {
			if (table[index(i, RX, EVEN)].desc == 0) {
    7bb8:	ldr	r7, [pc, #112]	; (7c2c <usb_rx_memory+0x80>)
    7bba:	b.n	7bc2 <usb_rx_memory+0x16>
    7bbc:	mov	r1, r5
    7bbe:	adds	r3, #1
    7bc0:	adds	r2, #1
	cfg = usb_endpoint_config_table;
	//serial_print("rx_mem:");
	__disable_irq();
	for (i=1; i <= NUM_ENDPOINTS; i++) {
#ifdef AUDIO_INTERFACE
		if (i == AUDIO_RX_ENDPOINT) continue;
    7bc2:	cmp	r3, #7
#endif
		if (*cfg++ & USB_ENDPT_EPRXEN) {
    7bc4:	add.w	r5, r1, #1
	cfg = usb_endpoint_config_table;
	//serial_print("rx_mem:");
	__disable_irq();
	for (i=1; i <= NUM_ENDPOINTS; i++) {
#ifdef AUDIO_INTERFACE
		if (i == AUDIO_RX_ENDPOINT) continue;
    7bc8:	beq.n	7bbe <usb_rx_memory+0x12>
#endif
		if (*cfg++ & USB_ENDPT_EPRXEN) {
    7bca:	ldrb	r1, [r1, #0]
			if (table[index(i, RX, EVEN)].desc == 0) {
    7bcc:	ldr	r0, [pc, #92]	; (7c2c <usb_rx_memory+0x80>)
    7bce:	lsls	r4, r3, #2
	__disable_irq();
	for (i=1; i <= NUM_ENDPOINTS; i++) {
#ifdef AUDIO_INTERFACE
		if (i == AUDIO_RX_ENDPOINT) continue;
#endif
		if (*cfg++ & USB_ENDPT_EPRXEN) {
    7bd0:	lsls	r1, r1, #28
				__enable_irq();
				//serial_phex(i);
				//serial_print(",even\n");
				return;
			}
			if (table[index(i, RX, ODD)].desc == 0) {
    7bd2:	orr.w	r6, r4, #1
	__disable_irq();
	for (i=1; i <= NUM_ENDPOINTS; i++) {
#ifdef AUDIO_INTERFACE
		if (i == AUDIO_RX_ENDPOINT) continue;
#endif
		if (*cfg++ & USB_ENDPT_EPRXEN) {
    7bd6:	bpl.n	7be4 <usb_rx_memory+0x38>
			if (table[index(i, RX, EVEN)].desc == 0) {
    7bd8:	ldr.w	r1, [r7, r4, lsl #3]
    7bdc:	cbz	r1, 7bfa <usb_rx_memory+0x4e>
				__enable_irq();
				//serial_phex(i);
				//serial_print(",even\n");
				return;
			}
			if (table[index(i, RX, ODD)].desc == 0) {
    7bde:	ldr.w	r1, [r7, r6, lsl #3]
    7be2:	cbz	r1, 7c16 <usb_rx_memory+0x6a>
	const uint8_t *cfg;

	cfg = usb_endpoint_config_table;
	//serial_print("rx_mem:");
	__disable_irq();
	for (i=1; i <= NUM_ENDPOINTS; i++) {
    7be4:	cmp	r2, #9
    7be6:	bne.n	7bbc <usb_rx_memory+0x10>
				//serial_print(",odd\n");
				return;
			}
		}
	}
	__enable_irq();
    7be8:	cpsie	i
	// we should never reach this point.  If we get here, it means
	// usb_rx_memory_needed was set greater than zero, but no memory
	// was actually needed.
	usb_rx_memory_needed = 0;
    7bea:	ldr	r3, [pc, #68]	; (7c30 <usb_rx_memory+0x84>)
    7bec:	movs	r2, #0
    7bee:	strb	r2, [r3, #0]
	usb_free(packet);
    7bf0:	mov	r0, lr
	return;
}
    7bf2:	ldmia.w	sp!, {r4, r5, r6, r7, lr}
	__enable_irq();
	// we should never reach this point.  If we get here, it means
	// usb_rx_memory_needed was set greater than zero, but no memory
	// was actually needed.
	usb_rx_memory_needed = 0;
	usb_free(packet);
    7bf6:	b.w	7af8 <usb_free>
#endif
		if (*cfg++ & USB_ENDPT_EPRXEN) {
			if (table[index(i, RX, EVEN)].desc == 0) {
				table[index(i, RX, EVEN)].addr = packet->buf;
				table[index(i, RX, EVEN)].desc = BDT_DESC(64, 0);
				usb_rx_memory_needed--;
    7bfa:	ldr	r1, [pc, #52]	; (7c30 <usb_rx_memory+0x84>)
		if (i == AUDIO_RX_ENDPOINT) continue;
#endif
		if (*cfg++ & USB_ENDPT_EPRXEN) {
			if (table[index(i, RX, EVEN)].desc == 0) {
				table[index(i, RX, EVEN)].addr = packet->buf;
				table[index(i, RX, EVEN)].desc = BDT_DESC(64, 0);
    7bfc:	ldr	r5, [pc, #52]	; (7c34 <usb_rx_memory+0x88>)
				usb_rx_memory_needed--;
    7bfe:	ldrb	r2, [r1, #0]
		if (i == AUDIO_RX_ENDPOINT) continue;
#endif
		if (*cfg++ & USB_ENDPT_EPRXEN) {
			if (table[index(i, RX, EVEN)].desc == 0) {
				table[index(i, RX, EVEN)].addr = packet->buf;
				table[index(i, RX, EVEN)].desc = BDT_DESC(64, 0);
    7c00:	str.w	r5, [r0, r4, lsl #3]
#ifdef AUDIO_INTERFACE
		if (i == AUDIO_RX_ENDPOINT) continue;
#endif
		if (*cfg++ & USB_ENDPT_EPRXEN) {
			if (table[index(i, RX, EVEN)].desc == 0) {
				table[index(i, RX, EVEN)].addr = packet->buf;
    7c04:	add.w	r3, r0, r3, lsl #5
				//serial_phex(i);
				//serial_print(",even\n");
				return;
			}
			if (table[index(i, RX, ODD)].desc == 0) {
				table[index(i, RX, ODD)].addr = packet->buf;
    7c08:	add.w	r0, lr, #8
				table[index(i, RX, ODD)].desc = BDT_DESC(64, 1);
				usb_rx_memory_needed--;
    7c0c:	subs	r2, #1
				//serial_phex(i);
				//serial_print(",even\n");
				return;
			}
			if (table[index(i, RX, ODD)].desc == 0) {
				table[index(i, RX, ODD)].addr = packet->buf;
    7c0e:	str	r0, [r3, #4]
				table[index(i, RX, ODD)].desc = BDT_DESC(64, 1);
				usb_rx_memory_needed--;
    7c10:	strb	r2, [r1, #0]
				__enable_irq();
    7c12:	cpsie	i
				//serial_phex(i);
				//serial_print(",odd\n");
				return;
    7c14:	pop	{r4, r5, r6, r7, pc}
				return;
			}
			if (table[index(i, RX, ODD)].desc == 0) {
				table[index(i, RX, ODD)].addr = packet->buf;
				table[index(i, RX, ODD)].desc = BDT_DESC(64, 1);
				usb_rx_memory_needed--;
    7c16:	ldr	r1, [pc, #24]	; (7c30 <usb_rx_memory+0x84>)
				//serial_print(",even\n");
				return;
			}
			if (table[index(i, RX, ODD)].desc == 0) {
				table[index(i, RX, ODD)].addr = packet->buf;
				table[index(i, RX, ODD)].desc = BDT_DESC(64, 1);
    7c18:	ldr	r3, [pc, #28]	; (7c38 <usb_rx_memory+0x8c>)
    7c1a:	str.w	r3, [r0, r6, lsl #3]
				usb_rx_memory_needed--;
    7c1e:	ldrb	r2, [r1, #0]
				//serial_phex(i);
				//serial_print(",even\n");
				return;
			}
			if (table[index(i, RX, ODD)].desc == 0) {
				table[index(i, RX, ODD)].addr = packet->buf;
    7c20:	add.w	r3, r0, r6, lsl #3
    7c24:	b.n	7c08 <usb_rx_memory+0x5c>
    7c26:	nop
    7c28:	.word	0x0009e16c
    7c2c:	.word	0x1fff0000
    7c30:	.word	0x20012b2d
    7c34:	.word	0x00400088
    7c38:	.word	0x004000c8

00007c3c <usb_tx>:
void usb_tx(uint32_t endpoint, usb_packet_t *packet)
{
	bdt_t *b = &table[index(endpoint, TX, EVEN)];
	uint8_t next;

	endpoint--;
    7c3c:	subs	r3, r0, #1
	if (endpoint >= NUM_ENDPOINTS) return;
    7c3e:	cmp	r3, #7
    7c40:	bhi.n	7c7e <usb_tx+0x42>
//#define index(endpoint, tx, odd) (((endpoint) << 2) | ((tx) << 1) | (odd))
//#define stat2bufferdescriptor(stat) (table + ((stat) >> 2))

void usb_tx(uint32_t endpoint, usb_packet_t *packet)
{
	bdt_t *b = &table[index(endpoint, TX, EVEN)];
    7c42:	ldr	r2, [pc, #108]	; (7cb0 <usb_tx+0x74>)
    7c44:	lsls	r0, r0, #5
    7c46:	orr.w	r0, r0, #16

//#define index(endpoint, tx, odd) (((endpoint) << 2) | ((tx) << 1) | (odd))
//#define stat2bufferdescriptor(stat) (table + ((stat) >> 2))

void usb_tx(uint32_t endpoint, usb_packet_t *packet)
{
    7c4a:	push	{r4, r5}
	bdt_t *b = &table[index(endpoint, TX, EVEN)];
    7c4c:	add	r0, r2
	uint8_t next;

	endpoint--;
	if (endpoint >= NUM_ENDPOINTS) return;
	__disable_irq();
    7c4e:	cpsid	i
	//serial_print("txstate=");
	//serial_phex(tx_state[endpoint]);
	//serial_print("\n");
	switch (tx_state[endpoint]) {
    7c50:	ldr	r4, [pc, #96]	; (7cb4 <usb_tx+0x78>)
    7c52:	ldrb	r2, [r4, r3]
    7c54:	cmp	r2, #3
    7c56:	bhi.n	7c90 <usb_tx+0x54>
    7c58:	tbb	[pc, r2]
    7c5c:	.word	0x17151202
	  case TX_STATE_BOTH_FREE_EVEN_FIRST:
		next = TX_STATE_ODD_FREE;
    7c60:	movs	r2, #3
		__enable_irq();
		return;
	}
	tx_state[endpoint] = next;
	b->addr = packet->buf;
	b->desc = BDT_DESC(packet->len, ((uint32_t)b & 8) ? DATA1 : DATA0);
    7c62:	ldrh	r5, [r1, #0]
		}
		tx_last[endpoint] = packet;
		__enable_irq();
		return;
	}
	tx_state[endpoint] = next;
    7c64:	strb	r2, [r4, r3]
	b->addr = packet->buf;
	b->desc = BDT_DESC(packet->len, ((uint32_t)b & 8) ? DATA1 : DATA0);
    7c66:	tst.w	r0, #8
    7c6a:	ite	ne
    7c6c:	movne	r3, #200	; 0xc8
    7c6e:	moveq	r3, #136	; 0x88
    7c70:	orr.w	r3, r3, r5, lsl #16
		tx_last[endpoint] = packet;
		__enable_irq();
		return;
	}
	tx_state[endpoint] = next;
	b->addr = packet->buf;
    7c74:	adds	r1, #8
	b->desc = BDT_DESC(packet->len, ((uint32_t)b & 8) ? DATA1 : DATA0);
    7c76:	str	r3, [r0, #0]
		tx_last[endpoint] = packet;
		__enable_irq();
		return;
	}
	tx_state[endpoint] = next;
	b->addr = packet->buf;
    7c78:	str	r1, [r0, #4]
	b->desc = BDT_DESC(packet->len, ((uint32_t)b & 8) ? DATA1 : DATA0);
	__enable_irq();
    7c7a:	cpsie	i
}
    7c7c:	pop	{r4, r5}
    7c7e:	bx	lr
	switch (tx_state[endpoint]) {
	  case TX_STATE_BOTH_FREE_EVEN_FIRST:
		next = TX_STATE_ODD_FREE;
		break;
	  case TX_STATE_BOTH_FREE_ODD_FIRST:
		b++;
    7c80:	adds	r0, #8
		next = TX_STATE_EVEN_FREE;
    7c82:	movs	r2, #2
		break;
    7c84:	b.n	7c62 <usb_tx+0x26>
	  case TX_STATE_EVEN_FREE:
		next = TX_STATE_NONE_FREE_ODD_FIRST;
    7c86:	movs	r2, #5
    7c88:	b.n	7c62 <usb_tx+0x26>
		break;
	  case TX_STATE_ODD_FREE:
		b++;
    7c8a:	adds	r0, #8
		next = TX_STATE_NONE_FREE_EVEN_FIRST;
    7c8c:	movs	r2, #4
		break;
    7c8e:	b.n	7c62 <usb_tx+0x26>
	  default:
		if (tx_first[endpoint] == NULL) {
    7c90:	ldr	r2, [pc, #36]	; (7cb8 <usb_tx+0x7c>)
    7c92:	ldr.w	r0, [r2, r3, lsl #2]
    7c96:	cbz	r0, 7ca8 <usb_tx+0x6c>
			tx_first[endpoint] = packet;
		} else {
			tx_last[endpoint]->next = packet;
    7c98:	ldr	r2, [pc, #32]	; (7cbc <usb_tx+0x80>)
    7c9a:	ldr.w	r0, [r2, r3, lsl #2]
    7c9e:	str	r1, [r0, #4]
		}
		tx_last[endpoint] = packet;
    7ca0:	str.w	r1, [r2, r3, lsl #2]
		__enable_irq();
    7ca4:	cpsie	i
		return;
    7ca6:	b.n	7c7c <usb_tx+0x40>
		b++;
		next = TX_STATE_NONE_FREE_EVEN_FIRST;
		break;
	  default:
		if (tx_first[endpoint] == NULL) {
			tx_first[endpoint] = packet;
    7ca8:	str.w	r1, [r2, r3, lsl #2]
    7cac:	ldr	r2, [pc, #12]	; (7cbc <usb_tx+0x80>)
    7cae:	b.n	7ca0 <usb_tx+0x64>
    7cb0:	.word	0x1fff0000
    7cb4:	.word	0x20012b3c
    7cb8:	.word	0x20012ae4
    7cbc:	.word	0x20012b04

00007cc0 <usb_isr>:
}



void usb_isr(void)
{
    7cc0:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
	//serial_print("isr");
	//status = USB0_ISTAT;
	//serial_phex(status);
	//serial_print("\n");
	restart:
	status = USB0_ISTAT;
    7cc4:	ldr.w	sl, [pc, #836]	; 800c <usb_isr+0x34c>
		USB0_ISTAT = USB_ISTAT_SOFTOK;
	}

	if ((status & USB_ISTAT_TOKDNE /* 08 */ )) {
		uint8_t endpoint;
		stat = USB0_STAT;
    7cc8:	ldr.w	fp, [pc, #836]	; 8010 <usb_isr+0x350>
}



void usb_isr(void)
{
    7ccc:	sub	sp, #36	; 0x24
    7cce:	b.n	7d64 <usb_isr+0xa4>
		//serial_print(stat & 0x04 ? ",odd\n" : ",even\n");
		endpoint = stat >> 4;
		if (endpoint == 0) {
			usb_control(stat);
		} else {
			bdt_t *b = stat2bufferdescriptor(stat);
    7cd0:	ldr.w	r8, [pc, #832]	; 8014 <usb_isr+0x354>
    7cd4:	mov.w	r9, r3, lsr #2
    7cd8:	add.w	r7, r8, r9, lsl #3
			serial_print(((uint32_t)b & 8) ? ", odd" : ", even");
			serial_print(", count:");
			serial_phex(b->desc >> 16);
			serial_print("\n");
#endif
			endpoint--;	// endpoint is index to zero-based arrays
    7cdc:	subs	r4, #1
		endpoint = stat >> 4;
		if (endpoint == 0) {
			usb_control(stat);
		} else {
			bdt_t *b = stat2bufferdescriptor(stat);
			usb_packet_t *packet = (usb_packet_t *)((uint8_t *)(b->addr) - 8);
    7cde:	ldr	r2, [r7, #4]
			serial_print(((uint32_t)b & 8) ? ", odd" : ", even");
			serial_print(", count:");
			serial_phex(b->desc >> 16);
			serial_print("\n");
#endif
			endpoint--;	// endpoint is index to zero-based arrays
    7ce0:	uxtb	r4, r4

#ifdef AUDIO_INTERFACE
			if ((endpoint == AUDIO_TX_ENDPOINT-1) && (stat & 0x08)) {
    7ce2:	cmp	r4, #5
		endpoint = stat >> 4;
		if (endpoint == 0) {
			usb_control(stat);
		} else {
			bdt_t *b = stat2bufferdescriptor(stat);
			usb_packet_t *packet = (usb_packet_t *)((uint8_t *)(b->addr) - 8);
    7ce4:	sub.w	r0, r2, #8
			serial_print("\n");
#endif
			endpoint--;	// endpoint is index to zero-based arrays

#ifdef AUDIO_INTERFACE
			if ((endpoint == AUDIO_TX_ENDPOINT-1) && (stat & 0x08)) {
    7ce8:	beq.w	7f2c <usb_isr+0x26c>
					b = (bdt_t *)((uint32_t)b ^ 8);
					b->addr = usb_audio_transmit_buffer;
					b->desc = (len << 16) | BDT_OWN;
					tx_state[endpoint] ^= 1;
				}
			} else if ((endpoint == AUDIO_RX_ENDPOINT-1) && !(stat & 0x08)) {
    7cec:	cmp	r4, #6
    7cee:	beq.w	7f6a <usb_isr+0x2aa>
				usb_audio_receive_callback(b->desc >> 16);
				b->addr = usb_audio_receive_buffer;
				b->desc = (AUDIO_RX_SIZE << 16) | BDT_OWN;
			} else if ((endpoint == AUDIO_SYNC_ENDPOINT-1) && (stat & 0x08)) {
    7cf2:	cmp	r4, #7
    7cf4:	beq.w	7f9a <usb_isr+0x2da>
				b->addr = &usb_audio_sync_feedback;
				b->desc = (3 << 16) | BDT_OWN;
				tx_state[endpoint] ^= 1;
			} else
#endif
			if (stat & 0x08) { // transmit
    7cf8:	lsls	r6, r3, #28
    7cfa:	bmi.w	7f6e <usb_isr+0x2ae>
						  TX_STATE_ODD_FREE : TX_STATE_EVEN_FREE;
						break;
					}
				}
			} else { // receive
				packet->len = b->desc >> 16;
    7cfe:	ldr.w	r3, [r8, r9, lsl #3]
    7d02:	lsrs	r3, r3, #16
    7d04:	uxth	r1, r3
    7d06:	strh.w	r1, [r2, #-8]
				if (packet->len > 0) {
    7d0a:	cmp	r3, #0
    7d0c:	beq.w	7f58 <usb_isr+0x298>
					packet->index = 0;
					packet->next = NULL;
					if (rx_first[endpoint] == NULL) {
    7d10:	ldr	r5, [pc, #676]	; (7fb8 <usb_isr+0x2f8>)
    7d12:	ldr.w	r6, [r5, r4, lsl #2]
					}
				}
			} else { // receive
				packet->len = b->desc >> 16;
				if (packet->len > 0) {
					packet->index = 0;
    7d16:	movs	r3, #0
    7d18:	strh.w	r3, [r2, #-6]
					packet->next = NULL;
    7d1c:	str.w	r3, [r2, #-4]
					if (rx_first[endpoint] == NULL) {
    7d20:	cmp	r6, #0
    7d22:	beq.w	815c <usb_isr+0x49c>
						//serial_print("rx Nth, epidx=");
						//serial_phex(endpoint);
						//serial_print(", packet=");
						//serial_phex32((uint32_t)packet);
						//serial_print("\n");
						rx_last[endpoint]->next = packet;
    7d26:	ldr	r6, [pc, #660]	; (7fbc <usb_isr+0x2fc>)
    7d28:	ldr.w	r3, [r6, r4, lsl #2]
    7d2c:	str	r0, [r3, #4]
					}
					rx_last[endpoint] = packet;
					usb_rx_byte_count_data[endpoint] += packet->len;
    7d2e:	ldr	r5, [pc, #656]	; (7fc0 <usb_isr+0x300>)
						//serial_print(", packet=");
						//serial_phex32((uint32_t)packet);
						//serial_print("\n");
						rx_last[endpoint]->next = packet;
					}
					rx_last[endpoint] = packet;
    7d30:	str.w	r0, [r6, r4, lsl #2]
					usb_rx_byte_count_data[endpoint] += packet->len;
    7d34:	ldrh.w	r3, [r5, r4, lsl #1]
    7d38:	add	r1, r3
    7d3a:	strh.w	r1, [r5, r4, lsl #1]
					// TODO: implement a per-endpoint maximum # of allocated
					// packets, so a flood of incoming data on 1 endpoint
					// doesn't starve the others if the user isn't reading
					// it regularly
					packet = usb_malloc();
    7d3e:	bl	7ab8 <usb_malloc>
					if (packet) {
    7d42:	cmp	r0, #0
    7d44:	beq.w	814e <usb_isr+0x48e>
						b->addr = packet->buf;
						b->desc = BDT_DESC(64,
    7d48:	ldr	r2, [pc, #632]	; (7fc4 <usb_isr+0x304>)
    7d4a:	ldr	r3, [pc, #636]	; (7fc8 <usb_isr+0x308>)
    7d4c:	tst.w	r7, #8
					// packets, so a flood of incoming data on 1 endpoint
					// doesn't starve the others if the user isn't reading
					// it regularly
					packet = usb_malloc();
					if (packet) {
						b->addr = packet->buf;
    7d50:	add.w	r0, r0, #8
						b->desc = BDT_DESC(64,
    7d54:	it	ne
    7d56:	movne	r3, r2
					// packets, so a flood of incoming data on 1 endpoint
					// doesn't starve the others if the user isn't reading
					// it regularly
					packet = usb_malloc();
					if (packet) {
						b->addr = packet->buf;
    7d58:	str	r0, [r7, #4]
						b->desc = BDT_DESC(64,
    7d5a:	str.w	r3, [r8, r9, lsl #3]
					b->desc = BDT_DESC(64, ((uint32_t)b & 8) ? DATA1 : DATA0);
				}
			}

		}
		USB0_ISTAT = USB_ISTAT_TOKDNE;
    7d5e:	movs	r3, #8
    7d60:	strb.w	r3, [sl]
	//serial_print("isr");
	//status = USB0_ISTAT;
	//serial_phex(status);
	//serial_print("\n");
	restart:
	status = USB0_ISTAT;
    7d64:	ldrb.w	r4, [sl]
    7d68:	uxtb	r4, r4

	if ((status & USB_ISTAT_SOFTOK /* 04 */ )) {
    7d6a:	lsls	r3, r4, #29
    7d6c:	bpl.n	7da8 <usb_isr+0xe8>
		if (usb_configuration) {
    7d6e:	ldr	r3, [pc, #604]	; (7fcc <usb_isr+0x30c>)
    7d70:	ldrb	r3, [r3, #0]
    7d72:	cbz	r3, 7da2 <usb_isr+0xe2>
			t = usb_reboot_timer;
    7d74:	ldr	r1, [pc, #600]	; (7fd0 <usb_isr+0x310>)
    7d76:	ldrb	r2, [r1, #0]
			if (t) {
    7d78:	and.w	r3, r2, #255	; 0xff
    7d7c:	cbz	r2, 7d88 <usb_isr+0xc8>
				usb_reboot_timer = --t;
    7d7e:	subs	r3, #1
    7d80:	uxtb	r3, r3
    7d82:	strb	r3, [r1, #0]
				if (!t) _reboot_Teensyduino_();
    7d84:	cbnz	r3, 7d88 <usb_isr+0xc8>


void _reboot_Teensyduino_(void)
{
	// TODO: initialize R0 with a code....
	__asm__ volatile("bkpt");
    7d86:	bkpt	0x0000
			if (t) {
				usb_reboot_timer = --t;
				if (!t) _reboot_Teensyduino_();
			}
#ifdef CDC_DATA_INTERFACE
			t = usb_cdc_transmit_flush_timer;
    7d88:	ldr	r1, [pc, #584]	; (7fd4 <usb_isr+0x314>)
    7d8a:	ldrb	r2, [r1, #0]
			if (t) {
    7d8c:	and.w	r3, r2, #255	; 0xff
    7d90:	cbz	r2, 7d9e <usb_isr+0xde>
				usb_cdc_transmit_flush_timer = --t;
    7d92:	subs	r3, #1
    7d94:	uxtb	r3, r3
    7d96:	strb	r3, [r1, #0]
				if (t == 0) usb_serial_flush_callback();
    7d98:	cmp	r3, #0
    7d9a:	beq.w	80fa <usb_isr+0x43a>
				usb_seremu_transmit_flush_timer = --t;
				if (t == 0) usb_seremu_flush_callback();
			}
#endif
#ifdef MIDI_INTERFACE
                        usb_midi_flush_output();
    7d9e:	bl	9f04 <usb_midi_flush_output>
#endif
#ifdef MULTITOUCH_INTERFACE
			usb_touchscreen_update_callback();
#endif
		}
		USB0_ISTAT = USB_ISTAT_SOFTOK;
    7da2:	movs	r3, #4
    7da4:	strb.w	r3, [sl]
	}

	if ((status & USB_ISTAT_TOKDNE /* 08 */ )) {
    7da8:	and.w	r3, r4, #8
    7dac:	and.w	r2, r3, #255	; 0xff
    7db0:	cmp	r3, #0
    7db2:	beq.w	8032 <usb_isr+0x372>
		uint8_t endpoint;
		stat = USB0_STAT;
    7db6:	ldrb.w	r3, [fp]
    7dba:	uxtb	r3, r3
		//serial_print("token: ep=");
		//serial_phex(stat >> 4);
		//serial_print(stat & 0x08 ? ",tx" : ",rx");
		//serial_print(stat & 0x04 ? ",odd\n" : ",even\n");
		endpoint = stat >> 4;
		if (endpoint == 0) {
    7dbc:	lsrs	r4, r3, #4
    7dbe:	bne.n	7cd0 <usb_isr+0x10>
	bdt_t *b;
	uint32_t pid, size;
	uint8_t *buf;
	const uint8_t *data;

	b = stat2bufferdescriptor(stat);
    7dc0:	lsrs	r5, r3, #2
    7dc2:	ldr.w	r9, [pc, #592]	; 8014 <usb_isr+0x354>
	//serial_phex(pid);
	//serial_print(", count:");
	//serial_phex(count);
	//serial_print("\n");

	switch (pid) {
    7dc6:	ldr.w	r2, [r9, r5, lsl #3]
	bdt_t *b;
	uint32_t pid, size;
	uint8_t *buf;
	const uint8_t *data;

	b = stat2bufferdescriptor(stat);
    7dca:	add.w	r1, r9, r5, lsl #3
	//serial_phex(pid);
	//serial_print(", count:");
	//serial_phex(count);
	//serial_print("\n");

	switch (pid) {
    7dce:	ubfx	r2, r2, #2, #4
    7dd2:	subs	r2, #1
	const uint8_t *data;

	b = stat2bufferdescriptor(stat);
	pid = BDT_PID(b->desc);
	//count = b->desc >> 16;
	buf = b->addr;
    7dd4:	ldr	r1, [r1, #4]
	//serial_phex(pid);
	//serial_print(", count:");
	//serial_phex(count);
	//serial_print("\n");

	switch (pid) {
    7dd6:	cmp	r2, #12
    7dd8:	bhi.n	7ed4 <usb_isr+0x214>
    7dda:	tbb	[pc, r2]
    7dde:	.short	0x7f7f
    7de0:	.word	0x7b7b7b7b
    7de4:	.word	0x7b4a7b7b
    7de8:	.short	0x7b7b
    7dea:	.byte	0x07
    7deb:	.byte	0x00
	case 0x0D: // Setup received from host
		//serial_print("PID=Setup\n");
		//if (count != 8) ; // panic?
		// grab the 8 byte setup info
		setup.word1 = *(uint32_t *)(buf);
    7dec:	ldr	r2, [r1, #0]
		setup.word2 = *(uint32_t *)(buf + 4);
    7dee:	ldr	r6, [pc, #488]	; (7fd8 <usb_isr+0x318>)
    7df0:	ldr	r1, [r1, #4]
		b->desc = BDT_DESC(EP0_SIZE, DATA1);
		//table[index(0, RX, EVEN)].desc = BDT_DESC(EP0_SIZE, 1);
		//table[index(0, RX, ODD)].desc = BDT_DESC(EP0_SIZE, 1);

		// clear any leftover pending IN transactions
		ep0_tx_ptr = NULL;
    7df2:	ldr	r3, [pc, #488]	; (7fdc <usb_isr+0x31c>)
		// grab the 8 byte setup info
		setup.word1 = *(uint32_t *)(buf);
		setup.word2 = *(uint32_t *)(buf + 4);

		// give the buffer back
		b->desc = BDT_DESC(EP0_SIZE, DATA1);
    7df4:	ldr	r0, [pc, #460]	; (7fc4 <usb_isr+0x304>)
			//serial_print("leftover tx odd\n");
		//}
		table[index(0, TX, EVEN)].desc = 0;
		table[index(0, TX, ODD)].desc = 0;
		// first IN after Setup is always DATA1
		ep0_tx_data_toggle = 1;
    7df6:	ldr	r4, [pc, #488]	; (7fe0 <usb_isr+0x320>)
	case 0x0D: // Setup received from host
		//serial_print("PID=Setup\n");
		//if (count != 8) ; // panic?
		// grab the 8 byte setup info
		setup.word1 = *(uint32_t *)(buf);
		setup.word2 = *(uint32_t *)(buf + 4);
    7df8:	str	r1, [r6, #4]
	volatile uint8_t *reg;
	uint8_t epconf;
	const uint8_t *cfg;
	int i;

	switch (setup.wRequestAndType) {
    7dfa:	uxth	r1, r2
		// grab the 8 byte setup info
		setup.word1 = *(uint32_t *)(buf);
		setup.word2 = *(uint32_t *)(buf + 4);

		// give the buffer back
		b->desc = BDT_DESC(EP0_SIZE, DATA1);
    7dfc:	str.w	r0, [r9, r5, lsl #3]
	switch (pid) {
	case 0x0D: // Setup received from host
		//serial_print("PID=Setup\n");
		//if (count != 8) ; // panic?
		// grab the 8 byte setup info
		setup.word1 = *(uint32_t *)(buf);
    7e00:	str	r2, [r6, #0]
			//serial_print("leftover tx odd\n");
		//}
		table[index(0, TX, EVEN)].desc = 0;
		table[index(0, TX, ODD)].desc = 0;
		// first IN after Setup is always DATA1
		ep0_tx_data_toggle = 1;
    7e02:	movs	r0, #1
		b->desc = BDT_DESC(EP0_SIZE, DATA1);
		//table[index(0, RX, EVEN)].desc = BDT_DESC(EP0_SIZE, 1);
		//table[index(0, RX, ODD)].desc = BDT_DESC(EP0_SIZE, 1);

		// clear any leftover pending IN transactions
		ep0_tx_ptr = NULL;
    7e04:	movs	r2, #0
	volatile uint8_t *reg;
	uint8_t epconf;
	const uint8_t *cfg;
	int i;

	switch (setup.wRequestAndType) {
    7e06:	cmp.w	r1, #2176	; 0x880
		b->desc = BDT_DESC(EP0_SIZE, DATA1);
		//table[index(0, RX, EVEN)].desc = BDT_DESC(EP0_SIZE, 1);
		//table[index(0, RX, ODD)].desc = BDT_DESC(EP0_SIZE, 1);

		// clear any leftover pending IN transactions
		ep0_tx_ptr = NULL;
    7e0a:	str	r3, [sp, #4]
    7e0c:	str	r2, [r3, #0]
			//serial_print("leftover tx even\n");
		//}
		//if (table[index(0, TX, ODD)].desc & 0x80) {
			//serial_print("leftover tx odd\n");
		//}
		table[index(0, TX, EVEN)].desc = 0;
    7e0e:	str.w	r2, [r9, #16]
		table[index(0, TX, ODD)].desc = 0;
    7e12:	str.w	r2, [r9, #24]
static uint8_t reply_buffer[8];

static void usb_setup(void)
{
	const uint8_t *data = NULL;
	uint32_t datalen = 0;
    7e16:	str	r2, [sp, #28]
			//serial_print("leftover tx odd\n");
		//}
		table[index(0, TX, EVEN)].desc = 0;
		table[index(0, TX, ODD)].desc = 0;
		// first IN after Setup is always DATA1
		ep0_tx_data_toggle = 1;
    7e18:	strb	r0, [r4, #0]
	volatile uint8_t *reg;
	uint8_t epconf;
	const uint8_t *cfg;
	int i;

	switch (setup.wRequestAndType) {
    7e1a:	beq.w	84ba <usb_isr+0x7fa>
    7e1e:	bls.w	8074 <usb_isr+0x3b4>
    7e22:	movw	r5, #8993	; 0x2321
    7e26:	cmp	r1, r5
    7e28:	beq.w	8420 <usb_isr+0x760>
    7e2c:	bhi.w	82c0 <usb_isr+0x600>
    7e30:	movw	r2, #2817	; 0xb01
    7e34:	cmp	r1, r2
    7e36:	beq.w	83ce <usb_isr+0x70e>
    7e3a:	bhi.w	837c <usb_isr+0x6bc>
    7e3e:	cmp.w	r1, #2304	; 0x900
    7e42:	beq.w	8500 <usb_isr+0x840>
    7e46:	movw	r2, #2689	; 0xa81
    7e4a:	cmp	r1, r2
    7e4c:	bne.w	8258 <usb_isr+0x598>
		}
		break;
	  case 0x0A81: // GET_INTERFACE (alternate setting)
		datalen = 1;
		data = reply_buffer;
		if (setup.wIndex == AUDIO_INTERFACE+1) {
    7e50:	ldr	r3, [pc, #388]	; (7fd8 <usb_isr+0x318>)
			endpoint0_stall();
			return;
		}
		break;
	  case 0x0A81: // GET_INTERFACE (alternate setting)
		datalen = 1;
    7e52:	str	r0, [sp, #28]
		data = reply_buffer;
		if (setup.wIndex == AUDIO_INTERFACE+1) {
    7e54:	ldrh	r2, [r3, #4]
    7e56:	cmp	r2, #4
    7e58:	beq.w	86ce <usb_isr+0xa0e>
			reply_buffer[0] = usb_audio_transmit_setting;
		} else if (setup.wIndex == AUDIO_INTERFACE+2) {
    7e5c:	cmp	r2, #5
    7e5e:	bne.w	8258 <usb_isr+0x598>
			reply_buffer[0] = usb_audio_receive_setting;
    7e62:	ldr	r2, [pc, #384]	; (7fe4 <usb_isr+0x324>)
    7e64:	ldr	r1, [pc, #384]	; (7fe8 <usb_isr+0x328>)
    7e66:	ldr	r3, [pc, #368]	; (7fd8 <usb_isr+0x318>)
    7e68:	ldrb	r2, [r2, #0]
    7e6a:	ldrh	r7, [r3, #6]
    7e6c:	strb	r2, [r1, #0]
    7e6e:	movs	r0, #1
    7e70:	b.n	82f8 <usb_isr+0x638>
		//serial_print("PID=IN:");
		//serial_phex(stat);
		//serial_print("\n");

		// send remaining data, if any...
		data = ep0_tx_ptr;
    7e72:	ldr	r3, [pc, #360]	; (7fdc <usb_isr+0x31c>)
    7e74:	str	r3, [sp, #4]
    7e76:	ldr	r1, [r3, #0]
		if (data) {
    7e78:	cbz	r1, 7ec8 <usb_isr+0x208>
			size = ep0_tx_len;
    7e7a:	ldr	r3, [pc, #368]	; (7fec <usb_isr+0x32c>)
	serial_phex16(len);
	serial_print(ep0_tx_bdt_bank ? ", odd" : ", even");
	serial_print(ep0_tx_data_toggle ? ", d1\n" : ", d0\n");
#endif
	table[index(0, TX, ep0_tx_bdt_bank)].addr = (void *)data;
	table[index(0, TX, ep0_tx_bdt_bank)].desc = BDT_DESC(len, ep0_tx_data_toggle);
    7e7c:	ldr	r4, [pc, #352]	; (7fe0 <usb_isr+0x320>)
	serial_print(",");
	serial_phex16(len);
	serial_print(ep0_tx_bdt_bank ? ", odd" : ", even");
	serial_print(ep0_tx_data_toggle ? ", d1\n" : ", d0\n");
#endif
	table[index(0, TX, ep0_tx_bdt_bank)].addr = (void *)data;
    7e7e:	ldr	r2, [pc, #368]	; (7ff0 <usb_isr+0x330>)
		//serial_print("\n");

		// send remaining data, if any...
		data = ep0_tx_ptr;
		if (data) {
			size = ep0_tx_len;
    7e80:	ldrh	r0, [r3, #0]
	serial_phex16(len);
	serial_print(ep0_tx_bdt_bank ? ", odd" : ", even");
	serial_print(ep0_tx_data_toggle ? ", d1\n" : ", d0\n");
#endif
	table[index(0, TX, ep0_tx_bdt_bank)].addr = (void *)data;
	table[index(0, TX, ep0_tx_bdt_bank)].desc = BDT_DESC(len, ep0_tx_data_toggle);
    7e82:	ldrb	r5, [r4, #0]
	serial_print(",");
	serial_phex16(len);
	serial_print(ep0_tx_bdt_bank ? ", odd" : ", even");
	serial_print(ep0_tx_data_toggle ? ", d1\n" : ", d0\n");
#endif
	table[index(0, TX, ep0_tx_bdt_bank)].addr = (void *)data;
    7e84:	ldrb	r6, [r2, #0]
    7e86:	cmp	r0, #64	; 0x40
    7e88:	mov	r7, r0
    7e8a:	orr.w	ip, r6, #2
    7e8e:	it	cs
    7e90:	movcs	r7, #64	; 0x40
	table[index(0, TX, ep0_tx_bdt_bank)].desc = BDT_DESC(len, ep0_tx_data_toggle);
    7e92:	cmp	r5, #0
	ep0_tx_data_toggle ^= 1;
    7e94:	eor.w	r5, r5, #1
    7e98:	strb	r5, [r4, #0]
		if (data) {
			size = ep0_tx_len;
			if (size > EP0_SIZE) size = EP0_SIZE;
			endpoint0_transmit(data, size);
			data += size;
			ep0_tx_len -= size;
    7e9a:	sub.w	r0, r0, r7
	serial_phex16(len);
	serial_print(ep0_tx_bdt_bank ? ", odd" : ", even");
	serial_print(ep0_tx_data_toggle ? ", d1\n" : ", d0\n");
#endif
	table[index(0, TX, ep0_tx_bdt_bank)].addr = (void *)data;
	table[index(0, TX, ep0_tx_bdt_bank)].desc = BDT_DESC(len, ep0_tx_data_toggle);
    7e9e:	ite	eq
    7ea0:	moveq	r4, #136	; 0x88
    7ea2:	movne	r4, #200	; 0xc8
	serial_print(",");
	serial_phex16(len);
	serial_print(ep0_tx_bdt_bank ? ", odd" : ", even");
	serial_print(ep0_tx_data_toggle ? ", d1\n" : ", d0\n");
#endif
	table[index(0, TX, ep0_tx_bdt_bank)].addr = (void *)data;
    7ea4:	add.w	r5, r9, ip, lsl #3
		if (data) {
			size = ep0_tx_len;
			if (size > EP0_SIZE) size = EP0_SIZE;
			endpoint0_transmit(data, size);
			data += size;
			ep0_tx_len -= size;
    7ea8:	uxth	r0, r0
	serial_print(ep0_tx_data_toggle ? ", d1\n" : ", d0\n");
#endif
	table[index(0, TX, ep0_tx_bdt_bank)].addr = (void *)data;
	table[index(0, TX, ep0_tx_bdt_bank)].desc = BDT_DESC(len, ep0_tx_data_toggle);
	ep0_tx_data_toggle ^= 1;
	ep0_tx_bdt_bank ^= 1;
    7eaa:	eor.w	r6, r6, #1
	serial_phex16(len);
	serial_print(ep0_tx_bdt_bank ? ", odd" : ", even");
	serial_print(ep0_tx_data_toggle ? ", d1\n" : ", d0\n");
#endif
	table[index(0, TX, ep0_tx_bdt_bank)].addr = (void *)data;
	table[index(0, TX, ep0_tx_bdt_bank)].desc = BDT_DESC(len, ep0_tx_data_toggle);
    7eae:	orr.w	r4, r4, r7, lsl #16
	serial_print(",");
	serial_phex16(len);
	serial_print(ep0_tx_bdt_bank ? ", odd" : ", even");
	serial_print(ep0_tx_data_toggle ? ", d1\n" : ", d0\n");
#endif
	table[index(0, TX, ep0_tx_bdt_bank)].addr = (void *)data;
    7eb2:	str	r1, [r5, #4]
		if (data) {
			size = ep0_tx_len;
			if (size > EP0_SIZE) size = EP0_SIZE;
			endpoint0_transmit(data, size);
			data += size;
			ep0_tx_len -= size;
    7eb4:	strh	r0, [r3, #0]
	serial_phex16(len);
	serial_print(ep0_tx_bdt_bank ? ", odd" : ", even");
	serial_print(ep0_tx_data_toggle ? ", d1\n" : ", d0\n");
#endif
	table[index(0, TX, ep0_tx_bdt_bank)].addr = (void *)data;
	table[index(0, TX, ep0_tx_bdt_bank)].desc = BDT_DESC(len, ep0_tx_data_toggle);
    7eb6:	str.w	r4, [r9, ip, lsl #3]
		data = ep0_tx_ptr;
		if (data) {
			size = ep0_tx_len;
			if (size > EP0_SIZE) size = EP0_SIZE;
			endpoint0_transmit(data, size);
			data += size;
    7eba:	add	r1, r7
	serial_print(ep0_tx_data_toggle ? ", d1\n" : ", d0\n");
#endif
	table[index(0, TX, ep0_tx_bdt_bank)].addr = (void *)data;
	table[index(0, TX, ep0_tx_bdt_bank)].desc = BDT_DESC(len, ep0_tx_data_toggle);
	ep0_tx_data_toggle ^= 1;
	ep0_tx_bdt_bank ^= 1;
    7ebc:	strb	r6, [r2, #0]
			size = ep0_tx_len;
			if (size > EP0_SIZE) size = EP0_SIZE;
			endpoint0_transmit(data, size);
			data += size;
			ep0_tx_len -= size;
			ep0_tx_ptr = (ep0_tx_len > 0 || size == EP0_SIZE) ? data : NULL;
    7ebe:	cmp	r0, #0
    7ec0:	beq.w	80e0 <usb_isr+0x420>
    7ec4:	ldr	r3, [sp, #4]
    7ec6:	str	r1, [r3, #0]
		}

		if (setup.bRequest == 5 && setup.bmRequestType == 0) {
    7ec8:	ldr	r3, [pc, #268]	; (7fd8 <usb_isr+0x318>)
    7eca:	ldrh	r2, [r3, #0]
    7ecc:	cmp.w	r2, #1280	; 0x500
    7ed0:	beq.w	80e8 <usb_isr+0x428>
	//default:
		//serial_print("PID=unknown:");
		//serial_phex(pid);
		//serial_print("\n");
	}
	USB0_CTL = USB_CTL_USBENSOFEN; // clear TXSUSPENDTOKENBUSY bit
    7ed4:	ldr	r2, [pc, #284]	; (7ff4 <usb_isr+0x334>)
    7ed6:	movs	r3, #1
    7ed8:	strb	r3, [r2, #0]
    7eda:	b.n	7d5e <usb_isr+0x9e>
		break;
	case 0x01:  // OUT transaction received from host
	case 0x02:
		//serial_print("PID=OUT\n");
#ifdef CDC_STATUS_INTERFACE
		if (setup.wRequestAndType == 0x2021 /*CDC_SET_LINE_CODING*/) {
    7edc:	ldr	r2, [pc, #248]	; (7fd8 <usb_isr+0x318>)
    7ede:	ldrh	r0, [r2, #0]
    7ee0:	movw	r2, #8225	; 0x2021
    7ee4:	cmp	r0, r2
    7ee6:	beq.w	8184 <usb_isr+0x4c4>
			usb_reboot_timer = 5;
			endpoint0_transmit(NULL, 0);
		}
#endif
#ifdef AUDIO_INTERFACE
		if (usb_audio_set_feature(&setup, buf)) {
    7eea:	ldr	r0, [pc, #236]	; (7fd8 <usb_isr+0x318>)
    7eec:	bl	92e8 <usb_audio_set_feature>
    7ef0:	cbz	r0, 7f1e <usb_isr+0x25e>
	serial_print(",");
	serial_phex16(len);
	serial_print(ep0_tx_bdt_bank ? ", odd" : ", even");
	serial_print(ep0_tx_data_toggle ? ", d1\n" : ", d0\n");
#endif
	table[index(0, TX, ep0_tx_bdt_bank)].addr = (void *)data;
    7ef2:	ldr	r2, [pc, #252]	; (7ff0 <usb_isr+0x330>)
	table[index(0, TX, ep0_tx_bdt_bank)].desc = BDT_DESC(len, ep0_tx_data_toggle);
    7ef4:	ldr	r4, [pc, #232]	; (7fe0 <usb_isr+0x320>)
	serial_print(",");
	serial_phex16(len);
	serial_print(ep0_tx_bdt_bank ? ", odd" : ", even");
	serial_print(ep0_tx_data_toggle ? ", d1\n" : ", d0\n");
#endif
	table[index(0, TX, ep0_tx_bdt_bank)].addr = (void *)data;
    7ef6:	ldrb	r1, [r2, #0]
	table[index(0, TX, ep0_tx_bdt_bank)].desc = BDT_DESC(len, ep0_tx_data_toggle);
    7ef8:	ldrb	r0, [r4, #0]
	ep0_tx_data_toggle ^= 1;
	ep0_tx_bdt_bank ^= 1;
    7efa:	eor.w	r6, r1, #1
	serial_phex16(len);
	serial_print(ep0_tx_bdt_bank ? ", odd" : ", even");
	serial_print(ep0_tx_data_toggle ? ", d1\n" : ", d0\n");
#endif
	table[index(0, TX, ep0_tx_bdt_bank)].addr = (void *)data;
	table[index(0, TX, ep0_tx_bdt_bank)].desc = BDT_DESC(len, ep0_tx_data_toggle);
    7efe:	cmp	r0, #0
	serial_print(",");
	serial_phex16(len);
	serial_print(ep0_tx_bdt_bank ? ", odd" : ", even");
	serial_print(ep0_tx_data_toggle ? ", d1\n" : ", d0\n");
#endif
	table[index(0, TX, ep0_tx_bdt_bank)].addr = (void *)data;
    7f00:	orr.w	r1, r1, #2
	table[index(0, TX, ep0_tx_bdt_bank)].desc = BDT_DESC(len, ep0_tx_data_toggle);
	ep0_tx_data_toggle ^= 1;
	ep0_tx_bdt_bank ^= 1;
    7f04:	strb	r6, [r2, #0]
	serial_phex16(len);
	serial_print(ep0_tx_bdt_bank ? ", odd" : ", even");
	serial_print(ep0_tx_data_toggle ? ", d1\n" : ", d0\n");
#endif
	table[index(0, TX, ep0_tx_bdt_bank)].addr = (void *)data;
	table[index(0, TX, ep0_tx_bdt_bank)].desc = BDT_DESC(len, ep0_tx_data_toggle);
    7f06:	ite	eq
    7f08:	moveq	r2, #136	; 0x88
    7f0a:	movne	r2, #200	; 0xc8
    7f0c:	str.w	r2, [r9, r1, lsl #3]
	serial_print(",");
	serial_phex16(len);
	serial_print(ep0_tx_bdt_bank ? ", odd" : ", even");
	serial_print(ep0_tx_data_toggle ? ", d1\n" : ", d0\n");
#endif
	table[index(0, TX, ep0_tx_bdt_bank)].addr = (void *)data;
    7f10:	add.w	r1, r9, r1, lsl #3
	table[index(0, TX, ep0_tx_bdt_bank)].desc = BDT_DESC(len, ep0_tx_data_toggle);
	ep0_tx_data_toggle ^= 1;
    7f14:	eor.w	r0, r0, #1
	serial_print(",");
	serial_phex16(len);
	serial_print(ep0_tx_bdt_bank ? ", odd" : ", even");
	serial_print(ep0_tx_data_toggle ? ", d1\n" : ", d0\n");
#endif
	table[index(0, TX, ep0_tx_bdt_bank)].addr = (void *)data;
    7f18:	movs	r2, #0
	table[index(0, TX, ep0_tx_bdt_bank)].desc = BDT_DESC(len, ep0_tx_data_toggle);
	ep0_tx_data_toggle ^= 1;
    7f1a:	strb	r0, [r4, #0]
	serial_print(",");
	serial_phex16(len);
	serial_print(ep0_tx_bdt_bank ? ", odd" : ", even");
	serial_print(ep0_tx_data_toggle ? ", d1\n" : ", d0\n");
#endif
	table[index(0, TX, ep0_tx_bdt_bank)].addr = (void *)data;
    7f1c:	str	r2, [r1, #4]
		if (usb_audio_set_feature(&setup, buf)) {
			endpoint0_transmit(NULL, 0);
		}
#endif
		// give the buffer back
		b->desc = BDT_DESC(EP0_SIZE, DATA1);
    7f1e:	ldr	r2, [pc, #164]	; (7fc4 <usb_isr+0x304>)
    7f20:	str.w	r2, [r9, r5, lsl #3]
	//default:
		//serial_print("PID=unknown:");
		//serial_phex(pid);
		//serial_print("\n");
	}
	USB0_CTL = USB_CTL_USBENSOFEN; // clear TXSUSPENDTOKENBUSY bit
    7f24:	ldr	r2, [pc, #204]	; (7ff4 <usb_isr+0x334>)
    7f26:	movs	r3, #1
    7f28:	strb	r3, [r2, #0]
    7f2a:	b.n	7d5e <usb_isr+0x9e>
			serial_print("\n");
#endif
			endpoint--;	// endpoint is index to zero-based arrays

#ifdef AUDIO_INTERFACE
			if ((endpoint == AUDIO_TX_ENDPOINT-1) && (stat & 0x08)) {
    7f2c:	lsls	r1, r3, #28
    7f2e:	bpl.w	7cfe <usb_isr+0x3e>
				unsigned int len;
				len = usb_audio_transmit_callback();
    7f32:	bl	918c <usb_audio_transmit_callback>
				if (len > 0) {
    7f36:	cmp	r0, #0
    7f38:	beq.w	7d5e <usb_isr+0x9e>
					b = (bdt_t *)((uint32_t)b ^ 8);
    7f3c:	eor.w	r7, r7, #8
					b->addr = usb_audio_transmit_buffer;
					b->desc = (len << 16) | BDT_OWN;
    7f40:	lsls	r0, r0, #16
			if ((endpoint == AUDIO_TX_ENDPOINT-1) && (stat & 0x08)) {
				unsigned int len;
				len = usb_audio_transmit_callback();
				if (len > 0) {
					b = (bdt_t *)((uint32_t)b ^ 8);
					b->addr = usb_audio_transmit_buffer;
    7f42:	ldr	r3, [pc, #180]	; (7ff8 <usb_isr+0x338>)
					b->desc = (len << 16) | BDT_OWN;
					tx_state[endpoint] ^= 1;
    7f44:	ldr	r2, [pc, #180]	; (7ffc <usb_isr+0x33c>)
			if ((endpoint == AUDIO_TX_ENDPOINT-1) && (stat & 0x08)) {
				unsigned int len;
				len = usb_audio_transmit_callback();
				if (len > 0) {
					b = (bdt_t *)((uint32_t)b ^ 8);
					b->addr = usb_audio_transmit_buffer;
    7f46:	str	r3, [r7, #4]
					b->desc = (len << 16) | BDT_OWN;
    7f48:	orr.w	r0, r0, #128	; 0x80
    7f4c:	str	r0, [r7, #0]
					tx_state[endpoint] ^= 1;
    7f4e:	ldrb	r3, [r2, #5]
    7f50:	eor.w	r3, r3, #1
    7f54:	strb	r3, [r2, #5]
    7f56:	b.n	7d5e <usb_isr+0x9e>
						//serial_phex(endpoint + 1);
						b->desc = 0;
						usb_rx_memory_needed++;
					}
				} else {
					b->desc = BDT_DESC(64, ((uint32_t)b & 8) ? DATA1 : DATA0);
    7f58:	ldr	r2, [pc, #104]	; (7fc4 <usb_isr+0x304>)
    7f5a:	ldr	r3, [pc, #108]	; (7fc8 <usb_isr+0x308>)
    7f5c:	tst.w	r7, #8
    7f60:	it	ne
    7f62:	movne	r3, r2
    7f64:	str.w	r3, [r8, r9, lsl #3]
    7f68:	b.n	7d5e <usb_isr+0x9e>
					b = (bdt_t *)((uint32_t)b ^ 8);
					b->addr = usb_audio_transmit_buffer;
					b->desc = (len << 16) | BDT_OWN;
					tx_state[endpoint] ^= 1;
				}
			} else if ((endpoint == AUDIO_RX_ENDPOINT-1) && !(stat & 0x08)) {
    7f6a:	lsls	r3, r3, #28
    7f6c:	bpl.n	805e <usb_isr+0x39e>
				b->desc = (3 << 16) | BDT_OWN;
				tx_state[endpoint] ^= 1;
			} else
#endif
			if (stat & 0x08) { // transmit
				usb_free(packet);
    7f6e:	bl	7af8 <usb_free>
				packet = tx_first[endpoint];
    7f72:	ldr	r2, [pc, #140]	; (8000 <usb_isr+0x340>)
				if (packet) {
					//serial_print("tx packet\n");
					tx_first[endpoint] = packet->next;
					b->addr = packet->buf;
					switch (tx_state[endpoint]) {
    7f74:	ldr	r5, [pc, #132]	; (7ffc <usb_isr+0x33c>)
				tx_state[endpoint] ^= 1;
			} else
#endif
			if (stat & 0x08) { // transmit
				usb_free(packet);
				packet = tx_first[endpoint];
    7f76:	ldr.w	r3, [r2, r4, lsl #2]
				if (packet) {
    7f7a:	cmp	r3, #0
    7f7c:	beq.w	8164 <usb_isr+0x4a4>
					//serial_print("tx packet\n");
					tx_first[endpoint] = packet->next;
    7f80:	ldr	r1, [r3, #4]
					b->addr = packet->buf;
					switch (tx_state[endpoint]) {
    7f82:	ldrb	r0, [r5, r4]
			if (stat & 0x08) { // transmit
				usb_free(packet);
				packet = tx_first[endpoint];
				if (packet) {
					//serial_print("tx packet\n");
					tx_first[endpoint] = packet->next;
    7f84:	str.w	r1, [r2, r4, lsl #2]
					b->addr = packet->buf;
    7f88:	add.w	r2, r3, #8
    7f8c:	str	r2, [r7, #4]
					switch (tx_state[endpoint]) {
    7f8e:	cmp	r0, #3
    7f90:	bhi.n	801c <usb_isr+0x35c>
    7f92:	tbb	[pc, r0]
    7f96:	.short	0x41a2
    7f98:	.short	0x9c9f
				}
			} else if ((endpoint == AUDIO_RX_ENDPOINT-1) && !(stat & 0x08)) {
				usb_audio_receive_callback(b->desc >> 16);
				b->addr = usb_audio_receive_buffer;
				b->desc = (AUDIO_RX_SIZE << 16) | BDT_OWN;
			} else if ((endpoint == AUDIO_SYNC_ENDPOINT-1) && (stat & 0x08)) {
    7f9a:	lsls	r5, r3, #28
    7f9c:	bpl.w	7cfe <usb_isr+0x3e>
				b = (bdt_t *)((uint32_t)b ^ 8);
    7fa0:	eor.w	r7, r7, #8
				b->addr = &usb_audio_sync_feedback;
    7fa4:	ldr	r2, [pc, #92]	; (8004 <usb_isr+0x344>)
    7fa6:	str	r2, [r7, #4]
				b->desc = (3 << 16) | BDT_OWN;
    7fa8:	ldr	r3, [pc, #92]	; (8008 <usb_isr+0x348>)
				tx_state[endpoint] ^= 1;
    7faa:	ldr	r2, [pc, #80]	; (7ffc <usb_isr+0x33c>)
				b->addr = usb_audio_receive_buffer;
				b->desc = (AUDIO_RX_SIZE << 16) | BDT_OWN;
			} else if ((endpoint == AUDIO_SYNC_ENDPOINT-1) && (stat & 0x08)) {
				b = (bdt_t *)((uint32_t)b ^ 8);
				b->addr = &usb_audio_sync_feedback;
				b->desc = (3 << 16) | BDT_OWN;
    7fac:	str	r3, [r7, #0]
				tx_state[endpoint] ^= 1;
    7fae:	ldrb	r3, [r2, #7]
    7fb0:	eor.w	r3, r3, #1
    7fb4:	strb	r3, [r2, #7]
    7fb6:	b.n	7d5e <usb_isr+0x9e>
    7fb8:	.word	0x20012a80
    7fbc:	.word	0x20012a1c
    7fc0:	.word	0x20012f68
    7fc4:	.word	0x004000c8
    7fc8:	.word	0x00400088
    7fcc:	.word	0x20012b38
    7fd0:	.word	0x20012aa1
    7fd4:	.word	0x200129fd
    7fd8:	.word	0x20012b24
    7fdc:	.word	0x20012a18
    7fe0:	.word	0x20012aa0
    7fe4:	.word	0x20012b6f
    7fe8:	.word	0x20012b30
    7fec:	.word	0x20012a3c
    7ff0:	.word	0x20012b2c
    7ff4:	.word	0x40072094
    7ff8:	.word	0x20007488
    7ffc:	.word	0x20012b3c
    8000:	.word	0x20012ae4
    8004:	.word	0x200073d0
    8008:	.word	0x00030080
    800c:	.word	0x40072080
    8010:	.word	0x40072090
    8014:	.word	0x1fff0000
					switch (tx_state[endpoint]) {
					  case TX_STATE_BOTH_FREE_EVEN_FIRST:
						tx_state[endpoint] = TX_STATE_ODD_FREE;
						break;
					  case TX_STATE_BOTH_FREE_ODD_FIRST:
						tx_state[endpoint] = TX_STATE_EVEN_FREE;
    8018:	movs	r2, #2
    801a:	strb	r2, [r5, r4]
						tx_state[endpoint] = TX_STATE_NONE_FREE_EVEN_FIRST;
						break;
					  default:
						break;
					}
					b->desc = BDT_DESC(packet->len,
    801c:	ldrh	r2, [r3, #0]
    801e:	tst.w	r7, #8
    8022:	ite	eq
    8024:	moveq	r3, #136	; 0x88
    8026:	movne	r3, #200	; 0xc8
    8028:	orr.w	r3, r3, r2, lsl #16
    802c:	str.w	r3, [r8, r9, lsl #3]
    8030:	b.n	7d5e <usb_isr+0x9e>
		goto restart;
	}



	if (status & USB_ISTAT_USBRST /* 01 */ ) {
    8032:	lsls	r0, r4, #31
    8034:	bmi.n	8100 <usb_isr+0x440>
		USB0_CTL = USB_CTL_USBENSOFEN;
		return;
	}


	if ((status & USB_ISTAT_STALL /* 80 */ )) {
    8036:	lsls	r1, r4, #24
    8038:	bmi.w	81da <usb_isr+0x51a>
		//serial_print("stall:\n");
		USB0_ENDPT0 = USB_ENDPT_EPRXEN | USB_ENDPT_EPTXEN | USB_ENDPT_EPHSHK;
		USB0_ISTAT = USB_ISTAT_STALL;
	}
	if ((status & USB_ISTAT_ERROR /* 02 */ )) {
    803c:	lsls	r2, r4, #30
    803e:	bpl.n	804e <usb_isr+0x38e>
		uint8_t err = USB0_ERRSTAT;
    8040:	ldr	r2, [pc, #552]	; (826c <usb_isr+0x5ac>)
		USB0_ERRSTAT = err;
		//serial_print("err:");
		//serial_phex(err);
		//serial_print("\n");
		USB0_ISTAT = USB_ISTAT_ERROR;
    8042:	ldr	r1, [pc, #556]	; (8270 <usb_isr+0x5b0>)
		//serial_print("stall:\n");
		USB0_ENDPT0 = USB_ENDPT_EPRXEN | USB_ENDPT_EPTXEN | USB_ENDPT_EPHSHK;
		USB0_ISTAT = USB_ISTAT_STALL;
	}
	if ((status & USB_ISTAT_ERROR /* 02 */ )) {
		uint8_t err = USB0_ERRSTAT;
    8044:	ldrb	r3, [r2, #0]
		USB0_ERRSTAT = err;
		//serial_print("err:");
		//serial_phex(err);
		//serial_print("\n");
		USB0_ISTAT = USB_ISTAT_ERROR;
    8046:	movs	r0, #2
		//serial_print("stall:\n");
		USB0_ENDPT0 = USB_ENDPT_EPRXEN | USB_ENDPT_EPTXEN | USB_ENDPT_EPHSHK;
		USB0_ISTAT = USB_ISTAT_STALL;
	}
	if ((status & USB_ISTAT_ERROR /* 02 */ )) {
		uint8_t err = USB0_ERRSTAT;
    8048:	uxtb	r3, r3
		USB0_ERRSTAT = err;
    804a:	strb	r3, [r2, #0]
		//serial_print("err:");
		//serial_phex(err);
		//serial_print("\n");
		USB0_ISTAT = USB_ISTAT_ERROR;
    804c:	strb	r0, [r1, #0]
	}

	if ((status & USB_ISTAT_SLEEP /* 10 */ )) {
    804e:	lsls	r3, r4, #27
    8050:	bpl.n	8058 <usb_isr+0x398>
		//serial_print("sleep\n");
		USB0_ISTAT = USB_ISTAT_SLEEP;
    8052:	ldr	r3, [pc, #540]	; (8270 <usb_isr+0x5b0>)
    8054:	movs	r2, #16
    8056:	strb	r2, [r3, #0]
	}

}
    8058:	add	sp, #36	; 0x24
    805a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
					b->addr = usb_audio_transmit_buffer;
					b->desc = (len << 16) | BDT_OWN;
					tx_state[endpoint] ^= 1;
				}
			} else if ((endpoint == AUDIO_RX_ENDPOINT-1) && !(stat & 0x08)) {
				usb_audio_receive_callback(b->desc >> 16);
    805e:	ldr.w	r0, [r8, r9, lsl #3]
    8062:	lsrs	r0, r0, #16
    8064:	bl	900c <usb_audio_receive_callback>
				b->addr = usb_audio_receive_buffer;
    8068:	ldr	r2, [pc, #520]	; (8274 <usb_isr+0x5b4>)
				b->desc = (AUDIO_RX_SIZE << 16) | BDT_OWN;
    806a:	ldr	r3, [pc, #524]	; (8278 <usb_isr+0x5b8>)
					b->desc = (len << 16) | BDT_OWN;
					tx_state[endpoint] ^= 1;
				}
			} else if ((endpoint == AUDIO_RX_ENDPOINT-1) && !(stat & 0x08)) {
				usb_audio_receive_callback(b->desc >> 16);
				b->addr = usb_audio_receive_buffer;
    806c:	str	r2, [r7, #4]
				b->desc = (AUDIO_RX_SIZE << 16) | BDT_OWN;
    806e:	str.w	r3, [r8, r9, lsl #3]
    8072:	b.n	7d5e <usb_isr+0x9e>
	volatile uint8_t *reg;
	uint8_t epconf;
	const uint8_t *cfg;
	int i;

	switch (setup.wRequestAndType) {
    8074:	movw	r0, #770	; 0x302
    8078:	cmp	r1, r0
    807a:	beq.w	84ca <usb_isr+0x80a>
    807e:	bhi.w	81ee <usb_isr+0x52e>
    8082:	cmp.w	r1, #258	; 0x102
    8086:	beq.w	8494 <usb_isr+0x7d4>
    808a:	bhi.w	8248 <usb_isr+0x588>
    808e:	cmp	r1, #128	; 0x80
    8090:	beq.w	84f0 <usb_isr+0x830>
    8094:	cmp	r1, #130	; 0x82
    8096:	bne.w	8258 <usb_isr+0x598>
    809a:	ldr	r3, [pc, #480]	; (827c <usb_isr+0x5bc>)
    809c:	ldrh	r1, [r3, #4]
    809e:	and.w	r1, r1, #127	; 0x7f
		datalen = 2;
		data = reply_buffer;
		break;
	  case 0x0082: // GET_STATUS (endpoint)
		i = setup.wIndex & 0x7F;
		if (i > NUM_ENDPOINTS) {
    80a2:	cmp	r1, #8
    80a4:	bhi.w	8258 <usb_isr+0x598>
			endpoint0_stall();
			return;
		}
		reply_buffer[0] = 0;
		reply_buffer[1] = 0;
		if (*(uint8_t *)(&USB0_ENDPT0 + i * 4) & 0x02) reply_buffer[0] = 1;
    80a8:	ldr	r0, [pc, #468]	; (8280 <usb_isr+0x5c0>)
		if (i > NUM_ENDPOINTS) {
			// TODO: do we need to handle IN vs OUT here?
			endpoint0_stall();
			return;
		}
		reply_buffer[0] = 0;
    80aa:	ldr	r5, [pc, #472]	; (8284 <usb_isr+0x5c4>)
    80ac:	ldr	r3, [pc, #460]	; (827c <usb_isr+0x5bc>)
    80ae:	strb	r2, [r5, #0]
		reply_buffer[1] = 0;
		if (*(uint8_t *)(&USB0_ENDPT0 + i * 4) & 0x02) reply_buffer[0] = 1;
    80b0:	lsls	r1, r1, #2
    80b2:	add	r0, r1
			// TODO: do we need to handle IN vs OUT here?
			endpoint0_stall();
			return;
		}
		reply_buffer[0] = 0;
		reply_buffer[1] = 0;
    80b4:	strb	r2, [r5, #1]
		if (*(uint8_t *)(&USB0_ENDPT0 + i * 4) & 0x02) reply_buffer[0] = 1;
    80b6:	ldrb	r2, [r0, #0]
    80b8:	ldrh	r7, [r3, #6]
		data = reply_buffer;
    80ba:	ldr	r1, [pc, #456]	; (8284 <usb_isr+0x5c4>)
			endpoint0_stall();
			return;
		}
		reply_buffer[0] = 0;
		reply_buffer[1] = 0;
		if (*(uint8_t *)(&USB0_ENDPT0 + i * 4) & 0x02) reply_buffer[0] = 1;
    80bc:	lsls	r0, r2, #30
    80be:	it	mi
    80c0:	movmi	r2, #1
		data = reply_buffer;
		datalen = 2;
    80c2:	mov.w	r0, #2
			endpoint0_stall();
			return;
		}
		reply_buffer[0] = 0;
		reply_buffer[1] = 0;
		if (*(uint8_t *)(&USB0_ENDPT0 + i * 4) & 0x02) reply_buffer[0] = 1;
    80c6:	it	mi
    80c8:	strbmi	r2, [r5, #0]
		data = reply_buffer;
		datalen = 2;
    80ca:	str	r0, [sp, #28]
    80cc:	b.n	82f8 <usb_isr+0x638>
						break;
					  case TX_STATE_EVEN_FREE:
						tx_state[endpoint] = TX_STATE_NONE_FREE_ODD_FIRST;
						break;
					  case TX_STATE_ODD_FREE:
						tx_state[endpoint] = TX_STATE_NONE_FREE_EVEN_FIRST;
    80ce:	movs	r2, #4
    80d0:	strb	r2, [r5, r4]
						break;
    80d2:	b.n	801c <usb_isr+0x35c>
						break;
					  case TX_STATE_BOTH_FREE_ODD_FIRST:
						tx_state[endpoint] = TX_STATE_EVEN_FREE;
						break;
					  case TX_STATE_EVEN_FREE:
						tx_state[endpoint] = TX_STATE_NONE_FREE_ODD_FIRST;
    80d4:	movs	r2, #5
    80d6:	strb	r2, [r5, r4]
						break;
    80d8:	b.n	801c <usb_isr+0x35c>
					//serial_print("tx packet\n");
					tx_first[endpoint] = packet->next;
					b->addr = packet->buf;
					switch (tx_state[endpoint]) {
					  case TX_STATE_BOTH_FREE_EVEN_FIRST:
						tx_state[endpoint] = TX_STATE_ODD_FREE;
    80da:	movs	r2, #3
    80dc:	strb	r2, [r5, r4]
						break;
    80de:	b.n	801c <usb_isr+0x35c>
			size = ep0_tx_len;
			if (size > EP0_SIZE) size = EP0_SIZE;
			endpoint0_transmit(data, size);
			data += size;
			ep0_tx_len -= size;
			ep0_tx_ptr = (ep0_tx_len > 0 || size == EP0_SIZE) ? data : NULL;
    80e0:	cmp	r7, #64	; 0x40
    80e2:	it	ne
    80e4:	movne	r1, #0
    80e6:	b.n	7ec4 <usb_isr+0x204>
		}

		if (setup.bRequest == 5 && setup.bmRequestType == 0) {
			setup.bRequest = 0;
    80e8:	movs	r1, #0
			//serial_print("set address: ");
			//serial_phex16(setup.wValue);
			//serial_print("\n");
			USB0_ADDR = setup.wValue;
    80ea:	ldrb	r2, [r3, #2]
			ep0_tx_len -= size;
			ep0_tx_ptr = (ep0_tx_len > 0 || size == EP0_SIZE) ? data : NULL;
		}

		if (setup.bRequest == 5 && setup.bmRequestType == 0) {
			setup.bRequest = 0;
    80ec:	strb	r1, [r3, #1]
			//serial_print("set address: ");
			//serial_phex16(setup.wValue);
			//serial_print("\n");
			USB0_ADDR = setup.wValue;
    80ee:	ldr	r3, [pc, #408]	; (8288 <usb_isr+0x5c8>)
    80f0:	strb	r2, [r3, #0]
	//default:
		//serial_print("PID=unknown:");
		//serial_phex(pid);
		//serial_print("\n");
	}
	USB0_CTL = USB_CTL_USBENSOFEN; // clear TXSUSPENDTOKENBUSY bit
    80f2:	ldr	r2, [pc, #408]	; (828c <usb_isr+0x5cc>)
    80f4:	movs	r3, #1
    80f6:	strb	r3, [r2, #0]
    80f8:	b.n	7d5e <usb_isr+0x9e>
			}
#ifdef CDC_DATA_INTERFACE
			t = usb_cdc_transmit_flush_timer;
			if (t) {
				usb_cdc_transmit_flush_timer = --t;
				if (t == 0) usb_serial_flush_callback();
    80fa:	bl	72d0 <usb_serial_flush_callback>
    80fe:	b.n	7d9e <usb_isr+0xde>
		// initialize BDT toggle bits
		USB0_CTL = USB_CTL_ODDRST;
		ep0_tx_bdt_bank = 0;

		// set up buffers to receive Setup and OUT packets
		table[index(0, RX, EVEN)].desc = BDT_DESC(EP0_SIZE, 0);
    8100:	ldr	r3, [pc, #396]	; (8290 <usb_isr+0x5d0>)

	if (status & USB_ISTAT_USBRST /* 01 */ ) {
		//serial_print("reset\n");

		// initialize BDT toggle bits
		USB0_CTL = USB_CTL_ODDRST;
    8102:	ldr	r0, [pc, #392]	; (828c <usb_isr+0x5cc>)
		ep0_tx_bdt_bank = 0;
    8104:	ldr	r1, [pc, #396]	; (8294 <usb_isr+0x5d4>)
		// set up buffers to receive Setup and OUT packets
		table[index(0, RX, EVEN)].desc = BDT_DESC(EP0_SIZE, 0);
		table[index(0, RX, EVEN)].addr = ep0_rx0_buf;
		table[index(0, RX, ODD)].desc = BDT_DESC(EP0_SIZE, 0);
		table[index(0, RX, ODD)].addr = ep0_rx1_buf;
		table[index(0, TX, EVEN)].desc = 0;
    8106:	str	r2, [r3, #16]

	if (status & USB_ISTAT_USBRST /* 01 */ ) {
		//serial_print("reset\n");

		// initialize BDT toggle bits
		USB0_CTL = USB_CTL_ODDRST;
    8108:	mov.w	lr, #2
    810c:	strb.w	lr, [r0]
		table[index(0, RX, ODD)].addr = ep0_rx1_buf;
		table[index(0, TX, EVEN)].desc = 0;
		table[index(0, TX, ODD)].desc = 0;

		// activate endpoint 0
		USB0_ENDPT0 = USB_ENDPT_EPRXEN | USB_ENDPT_EPTXEN | USB_ENDPT_EPHSHK;
    8110:	ldr	r7, [pc, #364]	; (8280 <usb_isr+0x5c0>)
	if (status & USB_ISTAT_USBRST /* 01 */ ) {
		//serial_print("reset\n");

		// initialize BDT toggle bits
		USB0_CTL = USB_CTL_ODDRST;
		ep0_tx_bdt_bank = 0;
    8112:	strb	r2, [r1, #0]

		// set up buffers to receive Setup and OUT packets
		table[index(0, RX, EVEN)].desc = BDT_DESC(EP0_SIZE, 0);
    8114:	ldr	r1, [pc, #384]	; (8298 <usb_isr+0x5d8>)
    8116:	str	r1, [r3, #0]
		table[index(0, RX, EVEN)].addr = ep0_rx0_buf;
		table[index(0, RX, ODD)].desc = BDT_DESC(EP0_SIZE, 0);
    8118:	str	r1, [r3, #8]

		// activate endpoint 0
		USB0_ENDPT0 = USB_ENDPT_EPRXEN | USB_ENDPT_EPTXEN | USB_ENDPT_EPHSHK;

		// clear all ending interrupts
		USB0_ERRSTAT = 0xFF;
    811a:	ldr	r6, [pc, #336]	; (826c <usb_isr+0x5ac>)
		USB0_ISTAT = 0xFF;
    811c:	ldr	r5, [pc, #336]	; (8270 <usb_isr+0x5b0>)

		// set the address to zero during enumeration
		USB0_ADDR = 0;
    811e:	ldr	r4, [pc, #360]	; (8288 <usb_isr+0x5c8>)
		table[index(0, RX, EVEN)].desc = BDT_DESC(EP0_SIZE, 0);
		table[index(0, RX, EVEN)].addr = ep0_rx0_buf;
		table[index(0, RX, ODD)].desc = BDT_DESC(EP0_SIZE, 0);
		table[index(0, RX, ODD)].addr = ep0_rx1_buf;
		table[index(0, TX, EVEN)].desc = 0;
		table[index(0, TX, ODD)].desc = 0;
    8120:	str	r2, [r3, #24]

		// activate endpoint 0
		USB0_ENDPT0 = USB_ENDPT_EPRXEN | USB_ENDPT_EPTXEN | USB_ENDPT_EPHSHK;
    8122:	movs	r1, #13
    8124:	strb	r1, [r7, #0]

		// clear all ending interrupts
		USB0_ERRSTAT = 0xFF;
    8126:	movs	r1, #255	; 0xff
    8128:	strb	r1, [r6, #0]

		// set the address to zero during enumeration
		USB0_ADDR = 0;

		// enable other interrupts
		USB0_ERREN = 0xFF;
    812a:	ldr.w	lr, [pc, #400]	; 82bc <usb_isr+0x5fc>
		// activate endpoint 0
		USB0_ENDPT0 = USB_ENDPT_EPRXEN | USB_ENDPT_EPTXEN | USB_ENDPT_EPHSHK;

		// clear all ending interrupts
		USB0_ERRSTAT = 0xFF;
		USB0_ISTAT = 0xFF;
    812e:	strb	r1, [r5, #0]

		// set the address to zero during enumeration
		USB0_ADDR = 0;
    8130:	strb	r2, [r4, #0]
		USB0_CTL = USB_CTL_ODDRST;
		ep0_tx_bdt_bank = 0;

		// set up buffers to receive Setup and OUT packets
		table[index(0, RX, EVEN)].desc = BDT_DESC(EP0_SIZE, 0);
		table[index(0, RX, EVEN)].addr = ep0_rx0_buf;
    8132:	ldr	r5, [pc, #360]	; (829c <usb_isr+0x5dc>)
		table[index(0, RX, ODD)].desc = BDT_DESC(EP0_SIZE, 0);
		table[index(0, RX, ODD)].addr = ep0_rx1_buf;
    8134:	ldr	r2, [pc, #360]	; (82a0 <usb_isr+0x5e0>)

		// set the address to zero during enumeration
		USB0_ADDR = 0;

		// enable other interrupts
		USB0_ERREN = 0xFF;
    8136:	strb.w	r1, [lr]
		USB0_INTEN = USB_INTEN_TOKDNEEN |
    813a:	movs	r7, #159	; 0x9f
			USB_INTEN_ERROREN |
			USB_INTEN_USBRSTEN |
			USB_INTEN_SLEEPEN;

		// is this necessary?
		USB0_CTL = USB_CTL_USBENSOFEN;
    813c:	movs	r4, #1
		// set the address to zero during enumeration
		USB0_ADDR = 0;

		// enable other interrupts
		USB0_ERREN = 0xFF;
		USB0_INTEN = USB_INTEN_TOKDNEEN |
    813e:	strb.w	r7, [r6, #-4]
		USB0_CTL = USB_CTL_ODDRST;
		ep0_tx_bdt_bank = 0;

		// set up buffers to receive Setup and OUT packets
		table[index(0, RX, EVEN)].desc = BDT_DESC(EP0_SIZE, 0);
		table[index(0, RX, EVEN)].addr = ep0_rx0_buf;
    8142:	str	r5, [r3, #4]
			USB_INTEN_ERROREN |
			USB_INTEN_USBRSTEN |
			USB_INTEN_SLEEPEN;

		// is this necessary?
		USB0_CTL = USB_CTL_USBENSOFEN;
    8144:	strb	r4, [r0, #0]

		// set up buffers to receive Setup and OUT packets
		table[index(0, RX, EVEN)].desc = BDT_DESC(EP0_SIZE, 0);
		table[index(0, RX, EVEN)].addr = ep0_rx0_buf;
		table[index(0, RX, ODD)].desc = BDT_DESC(EP0_SIZE, 0);
		table[index(0, RX, ODD)].addr = ep0_rx1_buf;
    8146:	str	r2, [r3, #12]
	if ((status & USB_ISTAT_SLEEP /* 10 */ )) {
		//serial_print("sleep\n");
		USB0_ISTAT = USB_ISTAT_SLEEP;
	}

}
    8148:	add	sp, #36	; 0x24
    814a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
							((uint32_t)b & 8) ? DATA1 : DATA0);
					} else {
						//serial_print("starving ");
						//serial_phex(endpoint + 1);
						b->desc = 0;
						usb_rx_memory_needed++;
    814e:	ldr	r2, [pc, #340]	; (82a4 <usb_isr+0x5e4>)
						b->desc = BDT_DESC(64,
							((uint32_t)b & 8) ? DATA1 : DATA0);
					} else {
						//serial_print("starving ");
						//serial_phex(endpoint + 1);
						b->desc = 0;
    8150:	str.w	r0, [r8, r9, lsl #3]
						usb_rx_memory_needed++;
    8154:	ldrb	r3, [r2, #0]
    8156:	adds	r3, #1
    8158:	strb	r3, [r2, #0]
    815a:	b.n	7d5e <usb_isr+0x9e>
						//serial_print("rx 1st, epidx=");
						//serial_phex(endpoint);
						//serial_print(", packet=");
						//serial_phex32((uint32_t)packet);
						//serial_print("\n");
						rx_first[endpoint] = packet;
    815c:	str.w	r0, [r5, r4, lsl #2]
    8160:	ldr	r6, [pc, #324]	; (82a8 <usb_isr+0x5e8>)
    8162:	b.n	7d2e <usb_isr+0x6e>
					}
					b->desc = BDT_DESC(packet->len,
						((uint32_t)b & 8) ? DATA1 : DATA0);
				} else {
					//serial_print("tx no packet\n");
					switch (tx_state[endpoint]) {
    8164:	ldrb	r3, [r5, r4]
    8166:	cmp	r3, #3
    8168:	bhi.w	83c0 <usb_isr+0x700>
    816c:	add	r2, pc, #4	; (adr r2, 8174 <usb_isr+0x4b4>)
    816e:	ldr.w	pc, [r2, r3, lsl #2]
    8172:	nop
    8174:	.word	0x00007d5f
    8178:	.word	0x00007d5f
    817c:	.word	0x0000823b
    8180:	.word	0x00008235
			int i;
			uint8_t *dst = (uint8_t *)usb_cdc_line_coding;
			//serial_print("set line coding ");
			for (i=0; i<7; i++) {
				//serial_phex(*buf);
				*dst++ = *buf++;
    8184:	ldr	r2, [pc, #292]	; (82ac <usb_isr+0x5ec>)
    8186:	ldrb	r4, [r1, #0]
    8188:	ldrb	r0, [r1, #1]
    818a:	strb	r4, [r2, #0]
    818c:	strb	r0, [r2, #1]
    818e:	ldrb	r4, [r1, #2]
    8190:	ldrb	r0, [r1, #3]
    8192:	strb	r4, [r2, #2]
    8194:	strb	r0, [r2, #3]
    8196:	ldrb	r4, [r1, #4]
			}
			//serial_phex32(usb_cdc_line_coding[0]);
			//serial_print("\n");
			if (usb_cdc_line_coding[0] == 134) usb_reboot_timer = 15;
    8198:	ldr	r0, [r2, #0]
			int i;
			uint8_t *dst = (uint8_t *)usb_cdc_line_coding;
			//serial_print("set line coding ");
			for (i=0; i<7; i++) {
				//serial_phex(*buf);
				*dst++ = *buf++;
    819a:	strb	r4, [r2, #4]
    819c:	ldrb	r4, [r1, #5]
    819e:	strb	r4, [r2, #5]
			}
			//serial_phex32(usb_cdc_line_coding[0]);
			//serial_print("\n");
			if (usb_cdc_line_coding[0] == 134) usb_reboot_timer = 15;
    81a0:	cmp	r0, #134	; 0x86
			int i;
			uint8_t *dst = (uint8_t *)usb_cdc_line_coding;
			//serial_print("set line coding ");
			for (i=0; i<7; i++) {
				//serial_phex(*buf);
				*dst++ = *buf++;
    81a2:	ldrb	r4, [r1, #6]
    81a4:	strb	r4, [r2, #6]
    81a6:	add.w	r1, r1, #7
			}
			//serial_phex32(usb_cdc_line_coding[0]);
			//serial_print("\n");
			if (usb_cdc_line_coding[0] == 134) usb_reboot_timer = 15;
    81aa:	beq.n	8240 <usb_isr+0x580>
	serial_print(",");
	serial_phex16(len);
	serial_print(ep0_tx_bdt_bank ? ", odd" : ", even");
	serial_print(ep0_tx_data_toggle ? ", d1\n" : ", d0\n");
#endif
	table[index(0, TX, ep0_tx_bdt_bank)].addr = (void *)data;
    81ac:	ldr	r2, [pc, #228]	; (8294 <usb_isr+0x5d4>)
	table[index(0, TX, ep0_tx_bdt_bank)].desc = BDT_DESC(len, ep0_tx_data_toggle);
    81ae:	ldr	r4, [pc, #256]	; (82b0 <usb_isr+0x5f0>)
	serial_print(",");
	serial_phex16(len);
	serial_print(ep0_tx_bdt_bank ? ", odd" : ", even");
	serial_print(ep0_tx_data_toggle ? ", d1\n" : ", d0\n");
#endif
	table[index(0, TX, ep0_tx_bdt_bank)].addr = (void *)data;
    81b0:	ldrb	r0, [r2, #0]
	table[index(0, TX, ep0_tx_bdt_bank)].desc = BDT_DESC(len, ep0_tx_data_toggle);
    81b2:	ldrb	r6, [r4, #0]
	ep0_tx_data_toggle ^= 1;
	ep0_tx_bdt_bank ^= 1;
    81b4:	eor.w	r7, r0, #1
	serial_phex16(len);
	serial_print(ep0_tx_bdt_bank ? ", odd" : ", even");
	serial_print(ep0_tx_data_toggle ? ", d1\n" : ", d0\n");
#endif
	table[index(0, TX, ep0_tx_bdt_bank)].addr = (void *)data;
	table[index(0, TX, ep0_tx_bdt_bank)].desc = BDT_DESC(len, ep0_tx_data_toggle);
    81b8:	cmp	r6, #0
	serial_print(",");
	serial_phex16(len);
	serial_print(ep0_tx_bdt_bank ? ", odd" : ", even");
	serial_print(ep0_tx_data_toggle ? ", d1\n" : ", d0\n");
#endif
	table[index(0, TX, ep0_tx_bdt_bank)].addr = (void *)data;
    81ba:	orr.w	r0, r0, #2
	table[index(0, TX, ep0_tx_bdt_bank)].desc = BDT_DESC(len, ep0_tx_data_toggle);
	ep0_tx_data_toggle ^= 1;
	ep0_tx_bdt_bank ^= 1;
    81be:	strb	r7, [r2, #0]
	serial_phex16(len);
	serial_print(ep0_tx_bdt_bank ? ", odd" : ", even");
	serial_print(ep0_tx_data_toggle ? ", d1\n" : ", d0\n");
#endif
	table[index(0, TX, ep0_tx_bdt_bank)].addr = (void *)data;
	table[index(0, TX, ep0_tx_bdt_bank)].desc = BDT_DESC(len, ep0_tx_data_toggle);
    81c0:	ite	eq
    81c2:	moveq	r2, #136	; 0x88
    81c4:	movne	r2, #200	; 0xc8
    81c6:	str.w	r2, [r9, r0, lsl #3]
	serial_print(",");
	serial_phex16(len);
	serial_print(ep0_tx_bdt_bank ? ", odd" : ", even");
	serial_print(ep0_tx_data_toggle ? ", d1\n" : ", d0\n");
#endif
	table[index(0, TX, ep0_tx_bdt_bank)].addr = (void *)data;
    81ca:	add.w	r0, r9, r0, lsl #3
	table[index(0, TX, ep0_tx_bdt_bank)].desc = BDT_DESC(len, ep0_tx_data_toggle);
	ep0_tx_data_toggle ^= 1;
    81ce:	eor.w	r6, r6, #1
	serial_print(",");
	serial_phex16(len);
	serial_print(ep0_tx_bdt_bank ? ", odd" : ", even");
	serial_print(ep0_tx_data_toggle ? ", d1\n" : ", d0\n");
#endif
	table[index(0, TX, ep0_tx_bdt_bank)].addr = (void *)data;
    81d2:	movs	r2, #0
	table[index(0, TX, ep0_tx_bdt_bank)].desc = BDT_DESC(len, ep0_tx_data_toggle);
	ep0_tx_data_toggle ^= 1;
    81d4:	strb	r6, [r4, #0]
	serial_print(",");
	serial_phex16(len);
	serial_print(ep0_tx_bdt_bank ? ", odd" : ", even");
	serial_print(ep0_tx_data_toggle ? ", d1\n" : ", d0\n");
#endif
	table[index(0, TX, ep0_tx_bdt_bank)].addr = (void *)data;
    81d6:	str	r2, [r0, #4]
    81d8:	b.n	7eea <usb_isr+0x22a>
	}


	if ((status & USB_ISTAT_STALL /* 80 */ )) {
		//serial_print("stall:\n");
		USB0_ENDPT0 = USB_ENDPT_EPRXEN | USB_ENDPT_EPTXEN | USB_ENDPT_EPHSHK;
    81da:	ldr	r1, [pc, #164]	; (8280 <usb_isr+0x5c0>)
		USB0_ISTAT = USB_ISTAT_STALL;
    81dc:	ldr	r3, [pc, #144]	; (8270 <usb_isr+0x5b0>)
    81de:	movs	r2, #128	; 0x80
	}


	if ((status & USB_ISTAT_STALL /* 80 */ )) {
		//serial_print("stall:\n");
		USB0_ENDPT0 = USB_ENDPT_EPRXEN | USB_ENDPT_EPTXEN | USB_ENDPT_EPHSHK;
    81e0:	movs	r0, #13
    81e2:	strb	r0, [r1, #0]
		USB0_ISTAT = USB_ISTAT_STALL;
    81e4:	strb	r2, [r3, #0]
	}
	if ((status & USB_ISTAT_ERROR /* 02 */ )) {
    81e6:	lsls	r2, r4, #30
    81e8:	bpl.w	804e <usb_isr+0x38e>
    81ec:	b.n	8040 <usb_isr+0x380>
	volatile uint8_t *reg;
	uint8_t epconf;
	const uint8_t *cfg;
	int i;

	switch (setup.wRequestAndType) {
    81ee:	cmp.w	r1, #1280	; 0x500
    81f2:	beq.w	8420 <usb_isr+0x760>
    81f6:	bls.w	8696 <usb_isr+0x9d6>
    81fa:	sub.w	r1, r1, #1664	; 0x680
    81fe:	cmp	r1, #1
    8200:	bhi.n	8258 <usb_isr+0x598>
	  case 0x0681:
		//serial_print("desc:");
		//serial_phex16(setup.wValue);
		//serial_print("\n");
		for (list = usb_descriptor_list; 1; list++) {
			if (list->addr == NULL) break;
    8202:	ldr	r2, [pc, #176]	; (82b4 <usb_isr+0x5f4>)
    8204:	ldr	r1, [r2, #4]
    8206:	cbz	r1, 8258 <usb_isr+0x598>
    8208:	ldr	r3, [pc, #112]	; (827c <usb_isr+0x5bc>)
    820a:	ldrh	r5, [r3, #2]
			//if (setup.wValue == list->wValue &&
			//(setup.wIndex == list->wIndex) || ((setup.wValue >> 8) == 3)) {
			if (setup.wValue == list->wValue && setup.wIndex == list->wIndex) {
    820c:	ldrh	r6, [r3, #4]
    820e:	b.n	8216 <usb_isr+0x556>
	  case 0x0680: // GET_DESCRIPTOR
	  case 0x0681:
		//serial_print("desc:");
		//serial_phex16(setup.wValue);
		//serial_print("\n");
		for (list = usb_descriptor_list; 1; list++) {
    8210:	adds	r2, #12
			if (list->addr == NULL) break;
    8212:	ldr	r1, [r2, #4]
    8214:	cbz	r1, 8258 <usb_isr+0x598>
			//if (setup.wValue == list->wValue &&
			//(setup.wIndex == list->wIndex) || ((setup.wValue >> 8) == 3)) {
			if (setup.wValue == list->wValue && setup.wIndex == list->wIndex) {
    8216:	ldrh	r3, [r2, #0]
    8218:	cmp	r3, r5
    821a:	bne.n	8210 <usb_isr+0x550>
    821c:	ldrh	r3, [r2, #2]
    821e:	cmp	r3, r6
    8220:	bne.n	8210 <usb_isr+0x550>
				data = list->addr;
				if ((setup.wValue >> 8) == 3) {
    8222:	lsrs	r5, r5, #8
    8224:	cmp	r5, #3
    8226:	beq.w	871c <usb_isr+0xa5c>
    822a:	ldr	r3, [pc, #80]	; (827c <usb_isr+0x5bc>)
					// for string descriptors, use the descriptor's
					// length field, allowing runtime configured
					// length.
					datalen = *(list->addr);
				} else {
					datalen = list->length;
    822c:	ldrh	r0, [r2, #8]
    822e:	str	r0, [sp, #28]
    8230:	ldrh	r7, [r3, #6]
    8232:	b.n	82f8 <usb_isr+0x638>
						break;
					  case TX_STATE_EVEN_FREE:
						tx_state[endpoint] = TX_STATE_BOTH_FREE_EVEN_FIRST;
						break;
					  case TX_STATE_ODD_FREE:
						tx_state[endpoint] = TX_STATE_BOTH_FREE_ODD_FIRST;
    8234:	movs	r3, #1
    8236:	strb	r3, [r5, r4]
						break;
    8238:	b.n	7d5e <usb_isr+0x9e>
					switch (tx_state[endpoint]) {
					  case TX_STATE_BOTH_FREE_EVEN_FIRST:
					  case TX_STATE_BOTH_FREE_ODD_FIRST:
						break;
					  case TX_STATE_EVEN_FREE:
						tx_state[endpoint] = TX_STATE_BOTH_FREE_EVEN_FIRST;
    823a:	movs	r3, #0
    823c:	strb	r3, [r5, r4]
						break;
    823e:	b.n	7d5e <usb_isr+0x9e>
				//serial_phex(*buf);
				*dst++ = *buf++;
			}
			//serial_phex32(usb_cdc_line_coding[0]);
			//serial_print("\n");
			if (usb_cdc_line_coding[0] == 134) usb_reboot_timer = 15;
    8240:	ldr	r2, [pc, #116]	; (82b8 <usb_isr+0x5f8>)
    8242:	movs	r0, #15
    8244:	strb	r0, [r2, #0]
    8246:	b.n	81ac <usb_isr+0x4ec>
	volatile uint8_t *reg;
	uint8_t epconf;
	const uint8_t *cfg;
	int i;

	switch (setup.wRequestAndType) {
    8248:	movw	r3, #289	; 0x121
    824c:	cmp	r1, r3
    824e:	beq.n	825e <usb_isr+0x59e>
    8250:	movw	r3, #545	; 0x221
    8254:	cmp	r1, r3
    8256:	beq.n	825e <usb_isr+0x59e>
volatile uint8_t usb_reboot_timer = 0;


static void endpoint0_stall(void)
{
	USB0_ENDPT0 = USB_ENDPT_EPSTALL | USB_ENDPT_EPRXEN | USB_ENDPT_EPTXEN | USB_ENDPT_EPHSHK;
    8258:	ldr	r2, [pc, #36]	; (8280 <usb_isr+0x5c0>)
    825a:	movs	r3, #15
    825c:	strb	r3, [r2, #0]
		serial_print("\n");
#endif
		// actually "do" the setup request
		usb_setup();
		// unfreeze the USB, now that we're ready
		USB0_CTL = USB_CTL_USBENSOFEN; // clear TXSUSPENDTOKENBUSY bit
    825e:	ldr	r2, [pc, #44]	; (828c <usb_isr+0x5cc>)
    8260:	movs	r3, #1
    8262:	strb	r3, [r2, #0]
	//default:
		//serial_print("PID=unknown:");
		//serial_phex(pid);
		//serial_print("\n");
	}
	USB0_CTL = USB_CTL_USBENSOFEN; // clear TXSUSPENDTOKENBUSY bit
    8264:	ldr	r2, [pc, #36]	; (828c <usb_isr+0x5cc>)
    8266:	movs	r3, #1
    8268:	strb	r3, [r2, #0]
    826a:	b.n	7d5e <usb_isr+0x9e>
    826c:	.word	0x40072088
    8270:	.word	0x40072080
    8274:	.word	0x200073d4
    8278:	.word	0x00b40080
    827c:	.word	0x20012b24
    8280:	.word	0x400720c0
    8284:	.word	0x20012b30
    8288:	.word	0x40072098
    828c:	.word	0x40072094
    8290:	.word	0x1fff0000
    8294:	.word	0x20012b2c
    8298:	.word	0x00400088
    829c:	.word	0x20012a40
    82a0:	.word	0x20012aa4
    82a4:	.word	0x20012b2d
    82a8:	.word	0x20012a1c
    82ac:	.word	0x20012f5c
    82b0:	.word	0x20012aa0
    82b4:	.word	0x0009e174
    82b8:	.word	0x20012aa1
    82bc:	.word	0x4007208c
	volatile uint8_t *reg;
	uint8_t epconf;
	const uint8_t *cfg;
	int i;

	switch (setup.wRequestAndType) {
    82c0:	movw	r0, #33441	; 0x82a1
    82c4:	cmp	r1, r0
    82c6:	beq.w	847a <usb_isr+0x7ba>
    82ca:	bhi.w	8468 <usb_isr+0x7a8>
    82ce:	movw	r0, #33185	; 0x81a1
    82d2:	cmp	r1, r0
    82d4:	beq.w	847a <usb_isr+0x7ba>
    82d8:	movw	r0, #33186	; 0x81a2
    82dc:	cmp	r1, r0
    82de:	bne.n	8258 <usb_isr+0x598>
	  		return;
	  	}
		break;

	  case 0x81A2: // GET_CUR (wValue=0, wIndex=interface, wLength=len)
		if (setup.wLength >= 3) {
    82e0:	ldr	r3, [pc, #696]	; (859c <usb_isr+0x8dc>)
    82e2:	ldrh	r7, [r3, #6]
    82e4:	cmp	r7, #2
    82e6:	bls.n	8258 <usb_isr+0x598>
			reply_buffer[0] = 44100 & 255;
    82e8:	ldr	r1, [pc, #692]	; (85a0 <usb_isr+0x8e0>)
    82ea:	movs	r0, #68	; 0x44
			reply_buffer[1] = 44100 >> 8;
			reply_buffer[2] = 0;
    82ec:	strb	r2, [r1, #2]
	  	}
		break;

	  case 0x81A2: // GET_CUR (wValue=0, wIndex=interface, wLength=len)
		if (setup.wLength >= 3) {
			reply_buffer[0] = 44100 & 255;
    82ee:	strb	r0, [r1, #0]
			reply_buffer[1] = 44100 >> 8;
    82f0:	movs	r2, #172	; 0xac
			reply_buffer[2] = 0;
			datalen = 3;
    82f2:	movs	r0, #3
		break;

	  case 0x81A2: // GET_CUR (wValue=0, wIndex=interface, wLength=len)
		if (setup.wLength >= 3) {
			reply_buffer[0] = 44100 & 255;
			reply_buffer[1] = 44100 >> 8;
    82f4:	strb	r2, [r1, #1]
			reply_buffer[2] = 0;
			datalen = 3;
    82f6:	str	r0, [sp, #28]
	//serial_phex32(data);
	//serial_print(",");
	//serial_phex16(datalen);
	//serial_print("\n");

	if (datalen > setup.wLength) datalen = setup.wLength;
    82f8:	cmp	r7, r0
    82fa:	bcs.w	8424 <usb_isr+0x764>
    82fe:	cmp	r7, #64	; 0x40
    8300:	mov	r6, r7
    8302:	ldrb.w	lr, [r4]
    8306:	str	r7, [sp, #28]
    8308:	it	cs
    830a:	movcs	r6, #64	; 0x40
    830c:	adds	r2, r1, r6
    830e:	eor.w	r8, lr, #1
    8312:	subs	r0, r7, r6
    8314:	lsls	r3, r6, #16
    8316:	str	r2, [sp, #8]
	serial_print(",");
	serial_phex16(len);
	serial_print(ep0_tx_bdt_bank ? ", odd" : ", even");
	serial_print(ep0_tx_data_toggle ? ", d1\n" : ", d0\n");
#endif
	table[index(0, TX, ep0_tx_bdt_bank)].addr = (void *)data;
    8318:	ldr	r2, [pc, #648]	; (85a4 <usb_isr+0x8e4>)
	table[index(0, TX, ep0_tx_bdt_bank)].desc = BDT_DESC(len, ep0_tx_data_toggle);
	ep0_tx_data_toggle ^= 1;
    831a:	strb.w	r8, [r4]
	serial_print(",");
	serial_phex16(len);
	serial_print(ep0_tx_bdt_bank ? ", odd" : ", even");
	serial_print(ep0_tx_data_toggle ? ", d1\n" : ", d0\n");
#endif
	table[index(0, TX, ep0_tx_bdt_bank)].addr = (void *)data;
    831e:	ldrb	r5, [r2, #0]
	table[index(0, TX, ep0_tx_bdt_bank)].desc = BDT_DESC(len, ep0_tx_data_toggle);
    8320:	cmp.w	lr, #0
	serial_print(",");
	serial_phex16(len);
	serial_print(ep0_tx_bdt_bank ? ", odd" : ", even");
	serial_print(ep0_tx_data_toggle ? ", d1\n" : ", d0\n");
#endif
	table[index(0, TX, ep0_tx_bdt_bank)].addr = (void *)data;
    8324:	orr.w	ip, r5, #2
	table[index(0, TX, ep0_tx_bdt_bank)].desc = BDT_DESC(len, ep0_tx_data_toggle);
    8328:	ite	eq
    832a:	moveq	r7, #136	; 0x88
    832c:	movne	r7, #200	; 0xc8
    832e:	orrs	r7, r3
	serial_print(",");
	serial_phex16(len);
	serial_print(ep0_tx_bdt_bank ? ", odd" : ", even");
	serial_print(ep0_tx_data_toggle ? ", d1\n" : ", d0\n");
#endif
	table[index(0, TX, ep0_tx_bdt_bank)].addr = (void *)data;
    8330:	add.w	r3, r9, ip, lsl #3
	table[index(0, TX, ep0_tx_bdt_bank)].desc = BDT_DESC(len, ep0_tx_data_toggle);
    8334:	str.w	r7, [r9, ip, lsl #3]
	ep0_tx_data_toggle ^= 1;
	ep0_tx_bdt_bank ^= 1;
    8338:	eor.w	r7, r5, #1
	serial_print(",");
	serial_phex16(len);
	serial_print(ep0_tx_bdt_bank ? ", odd" : ", even");
	serial_print(ep0_tx_data_toggle ? ", d1\n" : ", d0\n");
#endif
	table[index(0, TX, ep0_tx_bdt_bank)].addr = (void *)data;
    833c:	str	r1, [r3, #4]
	table[index(0, TX, ep0_tx_bdt_bank)].desc = BDT_DESC(len, ep0_tx_data_toggle);
	ep0_tx_data_toggle ^= 1;
	ep0_tx_bdt_bank ^= 1;
    833e:	strb	r7, [r2, #0]
	serial_print(ep0_tx_bdt_bank ? ", odd" : ", even");
	serial_print(ep0_tx_data_toggle ? ", d1\n" : ", d0\n");
#endif
	table[index(0, TX, ep0_tx_bdt_bank)].addr = (void *)data;
	table[index(0, TX, ep0_tx_bdt_bank)].desc = BDT_DESC(len, ep0_tx_data_toggle);
	ep0_tx_data_toggle ^= 1;
    8340:	ldr	r1, [pc, #612]	; (85a8 <usb_isr+0x8e8>)
	size = datalen;
	if (size > EP0_SIZE) size = EP0_SIZE;
	endpoint0_transmit(data, size);
	data += size;
	datalen -= size;
	if (datalen == 0 && size < EP0_SIZE) return;
    8342:	cmp	r0, #0
    8344:	beq.n	83e8 <usb_isr+0x728>

	size = datalen;
	if (size > EP0_SIZE) size = EP0_SIZE;
    8346:	cmp	r0, #64	; 0x40
    8348:	bls.n	83ee <usb_isr+0x72e>
	serial_print(",");
	serial_phex16(len);
	serial_print(ep0_tx_bdt_bank ? ", odd" : ", even");
	serial_print(ep0_tx_data_toggle ? ", d1\n" : ", d0\n");
#endif
	table[index(0, TX, ep0_tx_bdt_bank)].addr = (void *)data;
    834a:	ldr	r3, [pc, #608]	; (85ac <usb_isr+0x8ec>)
    834c:	ldr	r4, [sp, #8]
    834e:	orr.w	r7, r7, #2
    8352:	add.w	r3, r3, r7, lsl #3
    8356:	str	r4, [r3, #4]
	table[index(0, TX, ep0_tx_bdt_bank)].desc = BDT_DESC(len, ep0_tx_data_toggle);
    8358:	cmp.w	r8, #0
    835c:	beq.n	843e <usb_isr+0x77e>
	ep0_tx_data_toggle ^= 1;
    835e:	strb.w	lr, [r1]
	serial_phex16(len);
	serial_print(ep0_tx_bdt_bank ? ", odd" : ", even");
	serial_print(ep0_tx_data_toggle ? ", d1\n" : ", d0\n");
#endif
	table[index(0, TX, ep0_tx_bdt_bank)].addr = (void *)data;
	table[index(0, TX, ep0_tx_bdt_bank)].desc = BDT_DESC(len, ep0_tx_data_toggle);
    8362:	ldr	r1, [pc, #584]	; (85ac <usb_isr+0x8ec>)
    8364:	ldr	r3, [pc, #584]	; (85b0 <usb_isr+0x8f0>)
	ep0_tx_data_toggle ^= 1;
	ep0_tx_bdt_bank ^= 1;
    8366:	strb	r5, [r2, #0]
	serial_phex16(len);
	serial_print(ep0_tx_bdt_bank ? ", odd" : ", even");
	serial_print(ep0_tx_data_toggle ? ", d1\n" : ", d0\n");
#endif
	table[index(0, TX, ep0_tx_bdt_bank)].addr = (void *)data;
	table[index(0, TX, ep0_tx_bdt_bank)].desc = BDT_DESC(len, ep0_tx_data_toggle);
    8368:	str.w	r3, [r1, r7, lsl #3]
	if (datalen == 0 && size < EP0_SIZE) return;

	size = datalen;
	if (size > EP0_SIZE) size = EP0_SIZE;
	endpoint0_transmit(data, size);
	data += size;
    836c:	mov	r2, r4
    836e:	subs	r0, #64	; 0x40
    8370:	adds	r2, #64	; 0x40
	datalen -= size;
	if (datalen == 0 && size < EP0_SIZE) return;

	ep0_tx_ptr = data;
	ep0_tx_len = datalen;
    8372:	ldr	r3, [pc, #576]	; (85b4 <usb_isr+0x8f4>)
	endpoint0_transmit(data, size);
	data += size;
	datalen -= size;
	if (datalen == 0 && size < EP0_SIZE) return;

	ep0_tx_ptr = data;
    8374:	ldr	r1, [sp, #4]
	ep0_tx_len = datalen;
    8376:	strh	r0, [r3, #0]
	endpoint0_transmit(data, size);
	data += size;
	datalen -= size;
	if (datalen == 0 && size < EP0_SIZE) return;

	ep0_tx_ptr = data;
    8378:	str	r2, [r1, #0]
    837a:	b.n	825e <usb_isr+0x59e>
	volatile uint8_t *reg;
	uint8_t epconf;
	const uint8_t *cfg;
	int i;

	switch (setup.wRequestAndType) {
    837c:	movw	r2, #8225	; 0x2021
    8380:	cmp	r1, r2
    8382:	beq.w	825e <usb_isr+0x59e>
    8386:	movw	r2, #8737	; 0x2221
    838a:	cmp	r1, r2
    838c:	bne.w	8258 <usb_isr+0x598>
		//serial_print("desc: not found\n");
		endpoint0_stall();
		return;
#if defined(CDC_STATUS_INTERFACE)
	  case 0x2221: // CDC_SET_CONTROL_LINE_STATE
		usb_cdc_line_rtsdtr_millis = systick_millis_count;
    8390:	ldr	r5, [pc, #548]	; (85b8 <usb_isr+0x8f8>)
		usb_cdc_line_rtsdtr = setup.wValue;
    8392:	ldr	r3, [pc, #520]	; (859c <usb_isr+0x8dc>)
		//serial_print("desc: not found\n");
		endpoint0_stall();
		return;
#if defined(CDC_STATUS_INTERFACE)
	  case 0x2221: // CDC_SET_CONTROL_LINE_STATE
		usb_cdc_line_rtsdtr_millis = systick_millis_count;
    8394:	ldr	r0, [pc, #548]	; (85bc <usb_isr+0x8fc>)
		usb_cdc_line_rtsdtr = setup.wValue;
    8396:	ldr	r2, [pc, #552]	; (85c0 <usb_isr+0x900>)
		//serial_print("desc: not found\n");
		endpoint0_stall();
		return;
#if defined(CDC_STATUS_INTERFACE)
	  case 0x2221: // CDC_SET_CONTROL_LINE_STATE
		usb_cdc_line_rtsdtr_millis = systick_millis_count;
    8398:	ldr	r5, [r5, #0]
		usb_cdc_line_rtsdtr = setup.wValue;
    839a:	ldrb	r1, [r3, #2]
		//serial_print("desc: not found\n");
		endpoint0_stall();
		return;
#if defined(CDC_STATUS_INTERFACE)
	  case 0x2221: // CDC_SET_CONTROL_LINE_STATE
		usb_cdc_line_rtsdtr_millis = systick_millis_count;
    839c:	str	r5, [r0, #0]
		usb_cdc_line_rtsdtr = setup.wValue;
    839e:	strb	r1, [r2, #0]
	serial_print(",");
	serial_phex16(len);
	serial_print(ep0_tx_bdt_bank ? ", odd" : ", even");
	serial_print(ep0_tx_data_toggle ? ", d1\n" : ", d0\n");
#endif
	table[index(0, TX, ep0_tx_bdt_bank)].addr = (void *)data;
    83a0:	ldr	r2, [pc, #512]	; (85a4 <usb_isr+0x8e4>)
    83a2:	ldrb	r5, [r2, #0]
    83a4:	orr.w	r1, r5, #2
	table[index(0, TX, ep0_tx_bdt_bank)].desc = BDT_DESC(len, ep0_tx_data_toggle);
	ep0_tx_data_toggle ^= 1;
	ep0_tx_bdt_bank ^= 1;
    83a8:	eor.w	r7, r5, #1
	serial_print(",");
	serial_phex16(len);
	serial_print(ep0_tx_bdt_bank ? ", odd" : ", even");
	serial_print(ep0_tx_data_toggle ? ", d1\n" : ", d0\n");
#endif
	table[index(0, TX, ep0_tx_bdt_bank)].addr = (void *)data;
    83ac:	add.w	r0, r9, r1, lsl #3
	table[index(0, TX, ep0_tx_bdt_bank)].desc = BDT_DESC(len, ep0_tx_data_toggle);
	ep0_tx_data_toggle ^= 1;
	ep0_tx_bdt_bank ^= 1;
    83b0:	strb	r7, [r2, #0]
	serial_phex16(len);
	serial_print(ep0_tx_bdt_bank ? ", odd" : ", even");
	serial_print(ep0_tx_data_toggle ? ", d1\n" : ", d0\n");
#endif
	table[index(0, TX, ep0_tx_bdt_bank)].addr = (void *)data;
	table[index(0, TX, ep0_tx_bdt_bank)].desc = BDT_DESC(len, ep0_tx_data_toggle);
    83b2:	movs	r5, #200	; 0xc8
	serial_print(",");
	serial_phex16(len);
	serial_print(ep0_tx_bdt_bank ? ", odd" : ", even");
	serial_print(ep0_tx_data_toggle ? ", d1\n" : ", d0\n");
#endif
	table[index(0, TX, ep0_tx_bdt_bank)].addr = (void *)data;
    83b4:	movs	r2, #0
	table[index(0, TX, ep0_tx_bdt_bank)].desc = BDT_DESC(len, ep0_tx_data_toggle);
    83b6:	str.w	r5, [r9, r1, lsl #3]
	serial_print(",");
	serial_phex16(len);
	serial_print(ep0_tx_bdt_bank ? ", odd" : ", even");
	serial_print(ep0_tx_data_toggle ? ", d1\n" : ", d0\n");
#endif
	table[index(0, TX, ep0_tx_bdt_bank)].addr = (void *)data;
    83ba:	str	r2, [r0, #4]
	table[index(0, TX, ep0_tx_bdt_bank)].desc = BDT_DESC(len, ep0_tx_data_toggle);
	ep0_tx_data_toggle ^= 1;
    83bc:	strb	r2, [r4, #0]
    83be:	b.n	825e <usb_isr+0x59e>
						break;
					  case TX_STATE_ODD_FREE:
						tx_state[endpoint] = TX_STATE_BOTH_FREE_ODD_FIRST;
						break;
					  default:
						tx_state[endpoint] = ((uint32_t)b & 8) ?
    83c0:	tst.w	r7, #8
    83c4:	ite	eq
    83c6:	moveq	r3, #2
    83c8:	movne	r3, #3
    83ca:	strb	r3, [r5, r4]
						  TX_STATE_ODD_FREE : TX_STATE_EVEN_FREE;
						break;
    83cc:	b.n	7d5e <usb_isr+0x9e>
	  // case 0xC940:
#endif

#if defined(AUDIO_INTERFACE)
	  case 0x0B01: // SET_INTERFACE (alternate setting)
		if (setup.wIndex == AUDIO_INTERFACE+1) {
    83ce:	ldr	r3, [pc, #460]	; (859c <usb_isr+0x8dc>)
    83d0:	ldrh	r2, [r3, #4]
    83d2:	cmp	r2, #4
    83d4:	beq.w	86da <usb_isr+0xa1a>
					b->addr = usb_audio_transmit_buffer;
					b->desc = (176 << 16) | BDT_OWN;
					tx_state[AUDIO_TX_ENDPOINT-1] = state ^ 1;
				}
			}
		} else if (setup.wIndex == AUDIO_INTERFACE+2) {
    83d8:	cmp	r2, #5
    83da:	bne.w	8258 <usb_isr+0x598>
			usb_audio_receive_setting = setup.wValue;
    83de:	ldr	r3, [pc, #444]	; (859c <usb_isr+0x8dc>)
    83e0:	ldr	r2, [pc, #480]	; (85c4 <usb_isr+0x904>)
    83e2:	ldrh	r1, [r3, #2]
    83e4:	strb	r1, [r2, #0]
    83e6:	b.n	83a0 <usb_isr+0x6e0>
	size = datalen;
	if (size > EP0_SIZE) size = EP0_SIZE;
	endpoint0_transmit(data, size);
	data += size;
	datalen -= size;
	if (datalen == 0 && size < EP0_SIZE) return;
    83e8:	cmp	r6, #64	; 0x40
    83ea:	bne.w	825e <usb_isr+0x59e>
	serial_print(",");
	serial_phex16(len);
	serial_print(ep0_tx_bdt_bank ? ", odd" : ", even");
	serial_print(ep0_tx_data_toggle ? ", d1\n" : ", d0\n");
#endif
	table[index(0, TX, ep0_tx_bdt_bank)].addr = (void *)data;
    83ee:	orr.w	r7, r7, #2
    83f2:	add.w	r3, r9, r7, lsl #3
    83f6:	ldr	r6, [sp, #8]
    83f8:	str	r6, [r3, #4]
    83fa:	ldr	r1, [pc, #432]	; (85ac <usb_isr+0x8ec>)
	table[index(0, TX, ep0_tx_bdt_bank)].desc = BDT_DESC(len, ep0_tx_data_toggle);
    83fc:	lsls	r3, r0, #16
    83fe:	cmp.w	r8, #0
    8402:	bne.n	8454 <usb_isr+0x794>
    8404:	orr.w	r3, r3, #136	; 0x88
	if (datalen == 0 && size < EP0_SIZE) return;

	size = datalen;
	if (size > EP0_SIZE) size = EP0_SIZE;
	endpoint0_transmit(data, size);
	data += size;
    8408:	add	r6, r0
	serial_phex16(len);
	serial_print(ep0_tx_bdt_bank ? ", odd" : ", even");
	serial_print(ep0_tx_data_toggle ? ", d1\n" : ", d0\n");
#endif
	table[index(0, TX, ep0_tx_bdt_bank)].addr = (void *)data;
	table[index(0, TX, ep0_tx_bdt_bank)].desc = BDT_DESC(len, ep0_tx_data_toggle);
    840a:	str.w	r3, [r1, r7, lsl #3]
	ep0_tx_data_toggle ^= 1;
	ep0_tx_bdt_bank ^= 1;
    840e:	strb	r5, [r2, #0]
	serial_print(ep0_tx_bdt_bank ? ", odd" : ", even");
	serial_print(ep0_tx_data_toggle ? ", d1\n" : ", d0\n");
#endif
	table[index(0, TX, ep0_tx_bdt_bank)].addr = (void *)data;
	table[index(0, TX, ep0_tx_bdt_bank)].desc = BDT_DESC(len, ep0_tx_data_toggle);
	ep0_tx_data_toggle ^= 1;
    8410:	strb.w	lr, [r4]
	if (datalen == 0 && size < EP0_SIZE) return;

	size = datalen;
	if (size > EP0_SIZE) size = EP0_SIZE;
	endpoint0_transmit(data, size);
	data += size;
    8414:	mov	r2, r6
	datalen -= size;
	if (datalen == 0 && size < EP0_SIZE) return;
    8416:	cmp	r0, #64	; 0x40
    8418:	bne.w	825e <usb_isr+0x59e>
    841c:	movs	r0, #0
    841e:	b.n	8372 <usb_isr+0x6b2>
	volatile uint8_t *reg;
	uint8_t epconf;
	const uint8_t *cfg;
	int i;

	switch (setup.wRequestAndType) {
    8420:	movs	r0, #0

static uint8_t reply_buffer[8];

static void usb_setup(void)
{
	const uint8_t *data = NULL;
    8422:	mov	r1, r0
    8424:	cmp	r0, #64	; 0x40
    8426:	mov	r6, r0
    8428:	ldrb.w	lr, [r4]
    842c:	it	cs
    842e:	movcs	r6, #64	; 0x40
    8430:	adds	r2, r1, r6
    8432:	eor.w	r8, lr, #1
    8436:	subs	r0, r0, r6
    8438:	lsls	r3, r6, #16
    843a:	str	r2, [sp, #8]
    843c:	b.n	8318 <usb_isr+0x658>
	serial_print(ep0_tx_bdt_bank ? ", odd" : ", even");
	serial_print(ep0_tx_data_toggle ? ", d1\n" : ", d0\n");
#endif
	table[index(0, TX, ep0_tx_bdt_bank)].addr = (void *)data;
	table[index(0, TX, ep0_tx_bdt_bank)].desc = BDT_DESC(len, ep0_tx_data_toggle);
	ep0_tx_data_toggle ^= 1;
    843e:	strb.w	lr, [r1]
	ep0_tx_bdt_bank ^= 1;
    8442:	strb	r5, [r2, #0]
	serial_phex16(len);
	serial_print(ep0_tx_bdt_bank ? ", odd" : ", even");
	serial_print(ep0_tx_data_toggle ? ", d1\n" : ", d0\n");
#endif
	table[index(0, TX, ep0_tx_bdt_bank)].addr = (void *)data;
	table[index(0, TX, ep0_tx_bdt_bank)].desc = BDT_DESC(len, ep0_tx_data_toggle);
    8444:	ldr	r1, [pc, #356]	; (85ac <usb_isr+0x8ec>)
	if (datalen == 0 && size < EP0_SIZE) return;

	size = datalen;
	if (size > EP0_SIZE) size = EP0_SIZE;
	endpoint0_transmit(data, size);
	data += size;
    8446:	ldr	r2, [sp, #8]
	serial_phex16(len);
	serial_print(ep0_tx_bdt_bank ? ", odd" : ", even");
	serial_print(ep0_tx_data_toggle ? ", d1\n" : ", d0\n");
#endif
	table[index(0, TX, ep0_tx_bdt_bank)].addr = (void *)data;
	table[index(0, TX, ep0_tx_bdt_bank)].desc = BDT_DESC(len, ep0_tx_data_toggle);
    8448:	ldr	r3, [pc, #380]	; (85c8 <usb_isr+0x908>)
    844a:	str.w	r3, [r1, r7, lsl #3]
    844e:	subs	r0, #64	; 0x40
	if (datalen == 0 && size < EP0_SIZE) return;

	size = datalen;
	if (size > EP0_SIZE) size = EP0_SIZE;
	endpoint0_transmit(data, size);
	data += size;
    8450:	adds	r2, #64	; 0x40
    8452:	b.n	8372 <usb_isr+0x6b2>
	serial_print(ep0_tx_data_toggle ? ", d1\n" : ", d0\n");
#endif
	table[index(0, TX, ep0_tx_bdt_bank)].addr = (void *)data;
	table[index(0, TX, ep0_tx_bdt_bank)].desc = BDT_DESC(len, ep0_tx_data_toggle);
	ep0_tx_data_toggle ^= 1;
	ep0_tx_bdt_bank ^= 1;
    8454:	strb	r5, [r2, #0]
	if (datalen == 0 && size < EP0_SIZE) return;

	size = datalen;
	if (size > EP0_SIZE) size = EP0_SIZE;
	endpoint0_transmit(data, size);
	data += size;
    8456:	ldr	r2, [sp, #8]
	serial_print(ep0_tx_bdt_bank ? ", odd" : ", even");
	serial_print(ep0_tx_data_toggle ? ", d1\n" : ", d0\n");
#endif
	table[index(0, TX, ep0_tx_bdt_bank)].addr = (void *)data;
	table[index(0, TX, ep0_tx_bdt_bank)].desc = BDT_DESC(len, ep0_tx_data_toggle);
	ep0_tx_data_toggle ^= 1;
    8458:	strb.w	lr, [r4]
	serial_phex16(len);
	serial_print(ep0_tx_bdt_bank ? ", odd" : ", even");
	serial_print(ep0_tx_data_toggle ? ", d1\n" : ", d0\n");
#endif
	table[index(0, TX, ep0_tx_bdt_bank)].addr = (void *)data;
	table[index(0, TX, ep0_tx_bdt_bank)].desc = BDT_DESC(len, ep0_tx_data_toggle);
    845c:	orr.w	r3, r3, #200	; 0xc8
	if (datalen == 0 && size < EP0_SIZE) return;

	size = datalen;
	if (size > EP0_SIZE) size = EP0_SIZE;
	endpoint0_transmit(data, size);
	data += size;
    8460:	add	r2, r0
	serial_phex16(len);
	serial_print(ep0_tx_bdt_bank ? ", odd" : ", even");
	serial_print(ep0_tx_data_toggle ? ", d1\n" : ", d0\n");
#endif
	table[index(0, TX, ep0_tx_bdt_bank)].addr = (void *)data;
	table[index(0, TX, ep0_tx_bdt_bank)].desc = BDT_DESC(len, ep0_tx_data_toggle);
    8462:	str.w	r3, [r1, r7, lsl #3]
    8466:	b.n	8416 <usb_isr+0x756>
	volatile uint8_t *reg;
	uint8_t epconf;
	const uint8_t *cfg;
	int i;

	switch (setup.wRequestAndType) {
    8468:	movw	r2, #33697	; 0x83a1
    846c:	cmp	r1, r2
    846e:	beq.n	847a <usb_isr+0x7ba>
    8470:	movw	r2, #33953	; 0x84a1
    8474:	cmp	r1, r2
    8476:	bne.w	8258 <usb_isr+0x598>
		return;
	  case 0x81A1: // GET FEATURE
	  case 0x82A1:
	  case 0x83A1:
	  case 0x84A1:
	  	if (usb_audio_get_feature(&setup, reply_buffer, &datalen)) {
    847a:	ldr	r5, [pc, #288]	; (859c <usb_isr+0x8dc>)
    847c:	ldr	r1, [pc, #288]	; (85a0 <usb_isr+0x8e0>)
    847e:	mov	r0, r5
    8480:	add	r2, sp, #28
    8482:	bl	9280 <usb_audio_get_feature>
    8486:	cmp	r0, #0
    8488:	beq.w	8258 <usb_isr+0x598>
    848c:	ldrh	r7, [r5, #6]
    848e:	ldr	r0, [sp, #28]
	  		data = reply_buffer;
    8490:	ldr	r1, [pc, #268]	; (85a0 <usb_isr+0x8e0>)
    8492:	b.n	82f8 <usb_isr+0x638>
    8494:	ldr	r3, [pc, #260]	; (859c <usb_isr+0x8dc>)
    8496:	ldrh	r2, [r3, #4]
    8498:	and.w	r2, r2, #127	; 0x7f
		data = reply_buffer;
		datalen = 2;
		break;
	  case 0x0102: // CLEAR_FEATURE (endpoint)
		i = setup.wIndex & 0x7F;
		if (i > NUM_ENDPOINTS || setup.wValue != 0) {
    849c:	cmp	r2, #8
    849e:	bhi.w	8258 <usb_isr+0x598>
    84a2:	ldrh	r1, [r3, #2]
    84a4:	cmp	r1, #0
    84a6:	bne.w	8258 <usb_isr+0x598>
			// TODO: do we need to handle IN vs OUT here?
			endpoint0_stall();
			return;
		}
		(*(uint8_t *)(&USB0_ENDPT0 + i * 4)) &= ~0x02;
    84aa:	ldr	r1, [pc, #288]	; (85cc <usb_isr+0x90c>)
    84ac:	lsls	r2, r2, #2
    84ae:	add	r1, r2
    84b0:	ldrb	r2, [r1, #0]
    84b2:	bic.w	r2, r2, #2
    84b6:	strb	r2, [r1, #0]
    84b8:	b.n	83a0 <usb_isr+0x6e0>
			}
#endif
		}
		break;
	  case 0x0880: // GET_CONFIGURATION
		reply_buffer[0] = usb_configuration;
    84ba:	ldr	r3, [pc, #276]	; (85d0 <usb_isr+0x910>)
    84bc:	ldr	r1, [pc, #224]	; (85a0 <usb_isr+0x8e0>)
    84be:	ldrb	r2, [r3, #0]
    84c0:	ldr	r3, [pc, #216]	; (859c <usb_isr+0x8dc>)
		datalen = 1;
    84c2:	str	r0, [sp, #28]
    84c4:	ldrh	r7, [r3, #6]
			}
#endif
		}
		break;
	  case 0x0880: // GET_CONFIGURATION
		reply_buffer[0] = usb_configuration;
    84c6:	strb	r2, [r1, #0]
    84c8:	b.n	82f8 <usb_isr+0x638>
    84ca:	ldr	r3, [pc, #208]	; (859c <usb_isr+0x8dc>)
    84cc:	ldrh	r2, [r3, #4]
    84ce:	and.w	r2, r2, #127	; 0x7f
		(*(uint8_t *)(&USB0_ENDPT0 + i * 4)) &= ~0x02;
		// TODO: do we need to clear the data toggle here?
		break;
	  case 0x0302: // SET_FEATURE (endpoint)
		i = setup.wIndex & 0x7F;
		if (i > NUM_ENDPOINTS || setup.wValue != 0) {
    84d2:	cmp	r2, #8
    84d4:	bhi.w	8258 <usb_isr+0x598>
    84d8:	ldrh	r1, [r3, #2]
    84da:	cmp	r1, #0
    84dc:	bne.w	8258 <usb_isr+0x598>
			// TODO: do we need to handle IN vs OUT here?
			endpoint0_stall();
			return;
		}
		(*(uint8_t *)(&USB0_ENDPT0 + i * 4)) |= 0x02;
    84e0:	ldr	r1, [pc, #232]	; (85cc <usb_isr+0x90c>)
    84e2:	lsls	r2, r2, #2
    84e4:	add	r1, r2
    84e6:	ldrb	r2, [r1, #0]
    84e8:	orr.w	r2, r2, #2
    84ec:	strb	r2, [r1, #0]
    84ee:	b.n	83a0 <usb_isr+0x6e0>
		reply_buffer[0] = usb_configuration;
		datalen = 1;
		data = reply_buffer;
		break;
	  case 0x0080: // GET_STATUS (device)
		reply_buffer[0] = 0;
    84f0:	ldr	r1, [pc, #172]	; (85a0 <usb_isr+0x8e0>)
    84f2:	ldr	r3, [pc, #168]	; (859c <usb_isr+0x8dc>)
    84f4:	strb	r2, [r1, #0]
		reply_buffer[1] = 0;
		datalen = 2;
    84f6:	movs	r0, #2
    84f8:	ldrh	r7, [r3, #6]
		datalen = 1;
		data = reply_buffer;
		break;
	  case 0x0080: // GET_STATUS (device)
		reply_buffer[0] = 0;
		reply_buffer[1] = 0;
    84fa:	strb	r2, [r1, #1]
		datalen = 2;
    84fc:	str	r0, [sp, #28]
    84fe:	b.n	82f8 <usb_isr+0x638>
	switch (setup.wRequestAndType) {
	  case 0x0500: // SET_ADDRESS
		break;
	  case 0x0900: // SET_CONFIGURATION
		//serial_print("configure\n");
		usb_configuration = setup.wValue;
    8500:	ldr	r3, [pc, #152]	; (859c <usb_isr+0x8dc>)
    8502:	ldr	r5, [pc, #168]	; (85ac <usb_isr+0x8ec>)
    8504:	ldrb	r2, [r3, #2]
    8506:	ldr	r3, [pc, #200]	; (85d0 <usb_isr+0x910>)
    8508:	add.w	r6, r5, #256	; 0x100
    850c:	strb	r2, [r3, #0]
    850e:	b.n	8516 <usb_isr+0x856>
    8510:	adds	r5, #8
		reg = &USB0_ENDPT1;
		cfg = usb_endpoint_config_table;
		// clear all BDT entries, free any allocated memory...
		for (i=4; i < (NUM_ENDPOINTS+1)*4; i++) {
    8512:	cmp	r6, r5
    8514:	beq.n	8526 <usb_isr+0x866>
			if (table[i].desc & BDT_OWN) {
    8516:	ldr	r3, [r5, #32]
    8518:	lsls	r7, r3, #24
    851a:	bpl.n	8510 <usb_isr+0x850>
				usb_free((usb_packet_t *)((uint8_t *)(table[i].addr) - 8));
    851c:	ldr	r0, [r5, #36]	; 0x24
    851e:	subs	r0, #8
    8520:	bl	7af8 <usb_free>
    8524:	b.n	8510 <usb_isr+0x850>
    8526:	ldr	r1, [pc, #172]	; (85d4 <usb_isr+0x914>)
    8528:	ldr	r3, [pc, #172]	; (85d8 <usb_isr+0x918>)
    852a:	ldr	r2, [pc, #176]	; (85dc <usb_isr+0x91c>)
    852c:	str	r1, [sp, #8]
    852e:	ldr	r1, [pc, #176]	; (85e0 <usb_isr+0x920>)
    8530:	ldr	r6, [pc, #176]	; (85e4 <usb_isr+0x924>)
    8532:	ldr	r5, [pc, #180]	; (85e8 <usb_isr+0x928>)
			  case TX_STATE_NONE_FREE_EVEN_FIRST:
				tx_state[i] = TX_STATE_BOTH_FREE_EVEN_FIRST;
				break;
			  case TX_STATE_ODD_FREE:
			  case TX_STATE_NONE_FREE_ODD_FIRST:
				tx_state[i] = TX_STATE_BOTH_FREE_ODD_FIRST;
    8534:	str	r4, [sp, #20]
    8536:	str	r6, [sp, #12]
    8538:	str	r5, [sp, #16]
		//serial_print("configure\n");
		usb_configuration = setup.wValue;
		reg = &USB0_ENDPT1;
		cfg = usb_endpoint_config_table;
		// clear all BDT entries, free any allocated memory...
		for (i=4; i < (NUM_ENDPOINTS+1)*4; i++) {
    853a:	mov.w	r8, #0
			  case TX_STATE_NONE_FREE_EVEN_FIRST:
				tx_state[i] = TX_STATE_BOTH_FREE_EVEN_FIRST;
				break;
			  case TX_STATE_ODD_FREE:
			  case TX_STATE_NONE_FREE_ODD_FIRST:
				tx_state[i] = TX_STATE_BOTH_FREE_ODD_FIRST;
    853e:	mov	r4, r2
    8540:	mov	r6, r1
    8542:	mov	r5, r3
			}
		}
		// free all queued packets
		for (i=0; i < NUM_ENDPOINTS; i++) {
			usb_packet_t *p, *n;
			p = rx_first[i];
    8544:	ldr	r0, [r5, #0]
			while (p) {
    8546:	cbz	r0, 8554 <usb_isr+0x894>
				n = p->next;
    8548:	ldr	r7, [r0, #4]
				usb_free(p);
    854a:	bl	7af8 <usb_free>
		}
		// free all queued packets
		for (i=0; i < NUM_ENDPOINTS; i++) {
			usb_packet_t *p, *n;
			p = rx_first[i];
			while (p) {
    854e:	mov	r0, r7
    8550:	cmp	r7, #0
    8552:	bne.n	8548 <usb_isr+0x888>
				n = p->next;
				usb_free(p);
				p = n;
			}
			rx_first[i] = NULL;
    8554:	movs	r3, #0
    8556:	str	r3, [r5, #0]
			rx_last[i] = NULL;
    8558:	ldr	r3, [sp, #12]
			p = tx_first[i];
    855a:	ldr	r0, [r4, #0]
				n = p->next;
				usb_free(p);
				p = n;
			}
			rx_first[i] = NULL;
			rx_last[i] = NULL;
    855c:	mov	r2, r3
    855e:	movs	r3, #0
    8560:	str.w	r3, [r2, r8, lsl #2]
			p = tx_first[i];
			while (p) {
    8564:	cbz	r0, 8572 <usb_isr+0x8b2>
				n = p->next;
    8566:	ldr	r7, [r0, #4]
				usb_free(p);
    8568:	bl	7af8 <usb_free>
				p = n;
			}
			rx_first[i] = NULL;
			rx_last[i] = NULL;
			p = tx_first[i];
			while (p) {
    856c:	mov	r0, r7
    856e:	cmp	r7, #0
    8570:	bne.n	8566 <usb_isr+0x8a6>
				n = p->next;
				usb_free(p);
				p = n;
			}
			tx_first[i] = NULL;
    8572:	movs	r2, #0
    8574:	str	r2, [r4, #0]
			tx_last[i] = NULL;
    8576:	ldr	r2, [sp, #8]
			usb_rx_byte_count_data[i] = 0;
			switch (tx_state[i]) {
    8578:	ldrb	r3, [r6, #0]
				n = p->next;
				usb_free(p);
				p = n;
			}
			tx_first[i] = NULL;
			tx_last[i] = NULL;
    857a:	mov	r1, r2
    857c:	movs	r2, #0
    857e:	str.w	r2, [r1, #4]!
			usb_rx_byte_count_data[i] = 0;
    8582:	ldr	r2, [sp, #16]
				n = p->next;
				usb_free(p);
				p = n;
			}
			tx_first[i] = NULL;
			tx_last[i] = NULL;
    8584:	str	r1, [sp, #8]
			usb_rx_byte_count_data[i] = 0;
			switch (tx_state[i]) {
    8586:	subs	r3, #2
				usb_free(p);
				p = n;
			}
			tx_first[i] = NULL;
			tx_last[i] = NULL;
			usb_rx_byte_count_data[i] = 0;
    8588:	mov.w	r1, #0
    858c:	strh.w	r1, [r2, r8, lsl #1]
			switch (tx_state[i]) {
    8590:	cmp	r3, #3
    8592:	bhi.n	85f2 <usb_isr+0x932>
    8594:	tbb	[pc, r3]
    8598:	.word	0x2a762a76
    859c:	.word	0x20012b24
    85a0:	.word	0x20012b30
    85a4:	.word	0x20012b2c
    85a8:	.word	0x20012aa0
    85ac:	.word	0x1fff0000
    85b0:	.word	0x004000c8
    85b4:	.word	0x20012a3c
    85b8:	.word	0x20012a14
    85bc:	.word	0x20012f64
    85c0:	.word	0x20012a0c
    85c4:	.word	0x20012b6f
    85c8:	.word	0x00400088
    85cc:	.word	0x400720c0
    85d0:	.word	0x20012b38
    85d4:	.word	0x20012b00
    85d8:	.word	0x20012a80
    85dc:	.word	0x20012ae4
    85e0:	.word	0x20012b3c
    85e4:	.word	0x20012a1c
    85e8:	.word	0x20012f68
			  case TX_STATE_NONE_FREE_EVEN_FIRST:
				tx_state[i] = TX_STATE_BOTH_FREE_EVEN_FIRST;
				break;
			  case TX_STATE_ODD_FREE:
			  case TX_STATE_NONE_FREE_ODD_FIRST:
				tx_state[i] = TX_STATE_BOTH_FREE_ODD_FIRST;
    85ec:	mov.w	r3, #1
    85f0:	strb	r3, [r6, #0]
			if (table[i].desc & BDT_OWN) {
				usb_free((usb_packet_t *)((uint8_t *)(table[i].addr) - 8));
			}
		}
		// free all queued packets
		for (i=0; i < NUM_ENDPOINTS; i++) {
    85f2:	add.w	r8, r8, #1
    85f6:	cmp.w	r8, #8
    85fa:	add.w	r5, r5, #4
    85fe:	add.w	r4, r4, #4
    8602:	add.w	r6, r6, #1
    8606:	bne.n	8544 <usb_isr+0x884>
	  case 0x0500: // SET_ADDRESS
		break;
	  case 0x0900: // SET_CONFIGURATION
		//serial_print("configure\n");
		usb_configuration = setup.wValue;
		reg = &USB0_ENDPT1;
    8608:	ldr	r3, [pc, #340]	; (8760 <usb_isr+0xaa0>)
				break;
			  default:
				break;
			}
		}
		usb_rx_memory_needed = 0;
    860a:	ldr	r1, [pc, #344]	; (8764 <usb_isr+0xaa4>)
    860c:	ldr	r4, [sp, #20]
    860e:	str	r4, [sp, #8]
    8610:	movs	r2, #0
		break;
	  case 0x0900: // SET_CONFIGURATION
		//serial_print("configure\n");
		usb_configuration = setup.wValue;
		reg = &USB0_ENDPT1;
		cfg = usb_endpoint_config_table;
    8612:	ldr.w	r8, [pc, #392]	; 879c <usb_isr+0xadc>
				break;
			  default:
				break;
			}
		}
		usb_rx_memory_needed = 0;
    8616:	strb	r2, [r1, #0]
    8618:	movs	r7, #2
    861a:	movs	r6, #1
    861c:	mov	r4, r3
    861e:	b.n	8644 <usb_isr+0x984>
    8620:	lsls	r5, r6, #2
				} else {
					table[index(i, RX, ODD)].desc = 0;
					usb_rx_memory_needed++;
				}
			}
			table[index(i, TX, EVEN)].desc = 0;
    8622:	orr.w	r2, r5, #2
			table[index(i, TX, ODD)].desc = 0;
    8626:	orr.w	r5, r5, #3
				} else {
					table[index(i, RX, ODD)].desc = 0;
					usb_rx_memory_needed++;
				}
			}
			table[index(i, TX, EVEN)].desc = 0;
    862a:	movs	r1, #0
			table[index(i, TX, ODD)].desc = 0;
#ifdef AUDIO_INTERFACE
			if (i == AUDIO_SYNC_ENDPOINT) {
    862c:	cmp	r6, #8
				} else {
					table[index(i, RX, ODD)].desc = 0;
					usb_rx_memory_needed++;
				}
			}
			table[index(i, TX, EVEN)].desc = 0;
    862e:	str.w	r1, [r9, r2, lsl #3]
			table[index(i, TX, ODD)].desc = 0;
    8632:	str.w	r1, [r9, r5, lsl #3]
				} else {
					table[index(i, RX, ODD)].desc = 0;
					usb_rx_memory_needed++;
				}
			}
			table[index(i, TX, EVEN)].desc = 0;
    8636:	ldr	r5, [pc, #304]	; (8768 <usb_isr+0xaa8>)
			table[index(i, TX, ODD)].desc = 0;
#ifdef AUDIO_INTERFACE
			if (i == AUDIO_SYNC_ENDPOINT) {
    8638:	beq.w	8746 <usb_isr+0xa86>
			  default:
				break;
			}
		}
		usb_rx_memory_needed = 0;
		for (i=1; i <= NUM_ENDPOINTS; i++) {
    863c:	cmp	r7, #9
    863e:	beq.n	868c <usb_isr+0x9cc>
    8640:	adds	r6, #1
    8642:	adds	r7, #1
			epconf = *cfg++;
    8644:	ldrb.w	r2, [r8], #1
			*reg = epconf;
    8648:	strb.w	r2, [r4], #4
			reg += 4;
#ifdef AUDIO_INTERFACE
			if (i == AUDIO_RX_ENDPOINT) {
    864c:	cmp	r6, #7
    864e:	beq.n	8726 <usb_isr+0xa66>
				table[index(i, RX, EVEN)].desc = (AUDIO_RX_SIZE<<16) | BDT_OWN;
				table[index(i, RX, ODD)].addr = usb_audio_receive_buffer;
				table[index(i, RX, ODD)].desc = (AUDIO_RX_SIZE<<16) | BDT_OWN;
			} else
#endif
			if (epconf & USB_ENDPT_EPRXEN) {
    8650:	lsls	r5, r2, #28
    8652:	bpl.n	8620 <usb_isr+0x960>
				usb_packet_t *p;
				p = usb_malloc();
    8654:	bl	7ab8 <usb_malloc>
				if (p) {
    8658:	cbz	r0, 86be <usb_isr+0x9fe>
					table[index(i, RX, EVEN)].addr = p->buf;
    865a:	lsls	r5, r6, #2
    865c:	add.w	r2, r9, r6, lsl #5
					table[index(i, RX, EVEN)].desc = BDT_DESC(64, 0);
    8660:	ldr	r3, [pc, #264]	; (876c <usb_isr+0xaac>)
    8662:	str.w	r3, [r9, r5, lsl #3]
#endif
			if (epconf & USB_ENDPT_EPRXEN) {
				usb_packet_t *p;
				p = usb_malloc();
				if (p) {
					table[index(i, RX, EVEN)].addr = p->buf;
    8666:	adds	r0, #8
    8668:	str	r0, [r2, #4]
					table[index(i, RX, EVEN)].desc = BDT_DESC(64, 0);
				} else {
					table[index(i, RX, EVEN)].desc = 0;
					usb_rx_memory_needed++;
				}
				p = usb_malloc();
    866a:	bl	7ab8 <usb_malloc>
				if (p) {
    866e:	cbz	r0, 86ac <usb_isr+0x9ec>
					table[index(i, RX, ODD)].addr = p->buf;
    8670:	orr.w	r2, r5, #1
    8674:	add.w	r1, r9, r2, lsl #3
    8678:	adds	r0, #8
					table[index(i, RX, ODD)].desc = BDT_DESC(64, 1);
    867a:	ldr	r3, [pc, #244]	; (8770 <usb_isr+0xab0>)
    867c:	str.w	r3, [r9, r2, lsl #3]
					table[index(i, RX, EVEN)].desc = 0;
					usb_rx_memory_needed++;
				}
				p = usb_malloc();
				if (p) {
					table[index(i, RX, ODD)].addr = p->buf;
    8680:	str	r0, [r1, #4]
    8682:	b.n	8622 <usb_isr+0x962>
			tx_last[i] = NULL;
			usb_rx_byte_count_data[i] = 0;
			switch (tx_state[i]) {
			  case TX_STATE_EVEN_FREE:
			  case TX_STATE_NONE_FREE_EVEN_FIRST:
				tx_state[i] = TX_STATE_BOTH_FREE_EVEN_FIRST;
    8684:	mov.w	r3, #0
    8688:	strb	r3, [r6, #0]
    868a:	b.n	85f2 <usb_isr+0x932>
    868c:	ldr	r3, [pc, #228]	; (8774 <usb_isr+0xab4>)
    868e:	ldr	r4, [sp, #8]
    8690:	ldrh	r7, [r3, #6]
    8692:	ldr	r0, [sp, #28]
    8694:	b.n	82f8 <usb_isr+0x638>
	volatile uint8_t *reg;
	uint8_t epconf;
	const uint8_t *cfg;
	int i;

	switch (setup.wRequestAndType) {
    8696:	movw	r3, #801	; 0x321
    869a:	cmp	r1, r3
    869c:	beq.w	825e <usb_isr+0x59e>
    86a0:	movw	r3, #1057	; 0x421
    86a4:	cmp	r1, r3
    86a6:	beq.w	825e <usb_isr+0x59e>
    86aa:	b.n	8258 <usb_isr+0x598>
				if (p) {
					table[index(i, RX, ODD)].addr = p->buf;
					table[index(i, RX, ODD)].desc = BDT_DESC(64, 1);
				} else {
					table[index(i, RX, ODD)].desc = 0;
					usb_rx_memory_needed++;
    86ac:	ldr	r3, [pc, #180]	; (8764 <usb_isr+0xaa4>)
    86ae:	ldrb	r2, [r3, #0]
				p = usb_malloc();
				if (p) {
					table[index(i, RX, ODD)].addr = p->buf;
					table[index(i, RX, ODD)].desc = BDT_DESC(64, 1);
				} else {
					table[index(i, RX, ODD)].desc = 0;
    86b0:	orr.w	r1, r5, #1
					usb_rx_memory_needed++;
    86b4:	adds	r2, #1
				p = usb_malloc();
				if (p) {
					table[index(i, RX, ODD)].addr = p->buf;
					table[index(i, RX, ODD)].desc = BDT_DESC(64, 1);
				} else {
					table[index(i, RX, ODD)].desc = 0;
    86b6:	str.w	r0, [r9, r1, lsl #3]
					usb_rx_memory_needed++;
    86ba:	strb	r2, [r3, #0]
    86bc:	b.n	8622 <usb_isr+0x962>
				if (p) {
					table[index(i, RX, EVEN)].addr = p->buf;
					table[index(i, RX, EVEN)].desc = BDT_DESC(64, 0);
				} else {
					table[index(i, RX, EVEN)].desc = 0;
					usb_rx_memory_needed++;
    86be:	ldr	r3, [pc, #164]	; (8764 <usb_isr+0xaa4>)
    86c0:	ldrb	r2, [r3, #0]
				p = usb_malloc();
				if (p) {
					table[index(i, RX, EVEN)].addr = p->buf;
					table[index(i, RX, EVEN)].desc = BDT_DESC(64, 0);
				} else {
					table[index(i, RX, EVEN)].desc = 0;
    86c2:	lsls	r5, r6, #2
					usb_rx_memory_needed++;
    86c4:	adds	r2, #1
				p = usb_malloc();
				if (p) {
					table[index(i, RX, EVEN)].addr = p->buf;
					table[index(i, RX, EVEN)].desc = BDT_DESC(64, 0);
				} else {
					table[index(i, RX, EVEN)].desc = 0;
    86c6:	str.w	r0, [r9, r5, lsl #3]
					usb_rx_memory_needed++;
    86ca:	strb	r2, [r3, #0]
    86cc:	b.n	866a <usb_isr+0x9aa>
		break;
	  case 0x0A81: // GET_INTERFACE (alternate setting)
		datalen = 1;
		data = reply_buffer;
		if (setup.wIndex == AUDIO_INTERFACE+1) {
			reply_buffer[0] = usb_audio_transmit_setting;
    86ce:	ldr	r2, [pc, #168]	; (8778 <usb_isr+0xab8>)
    86d0:	ldr	r1, [pc, #168]	; (877c <usb_isr+0xabc>)
    86d2:	ldrb	r2, [r2, #0]
    86d4:	ldrh	r7, [r3, #6]
    86d6:	strb	r2, [r1, #0]
    86d8:	b.n	82f8 <usb_isr+0x638>
#endif

#if defined(AUDIO_INTERFACE)
	  case 0x0B01: // SET_INTERFACE (alternate setting)
		if (setup.wIndex == AUDIO_INTERFACE+1) {
			usb_audio_transmit_setting = setup.wValue;
    86da:	ldrb	r2, [r3, #2]
    86dc:	ldr	r1, [pc, #152]	; (8778 <usb_isr+0xab8>)
    86de:	strb	r2, [r1, #0]
			if (usb_audio_transmit_setting > 0) {
    86e0:	cmp	r2, #0
    86e2:	beq.w	83a0 <usb_isr+0x6e0>
				bdt_t *b = &table[index(AUDIO_TX_ENDPOINT, TX, EVEN)];
				uint8_t state = tx_state[AUDIO_TX_ENDPOINT-1];
    86e6:	ldr	r5, [pc, #152]	; (8780 <usb_isr+0xac0>)
#if defined(AUDIO_INTERFACE)
	  case 0x0B01: // SET_INTERFACE (alternate setting)
		if (setup.wIndex == AUDIO_INTERFACE+1) {
			usb_audio_transmit_setting = setup.wValue;
			if (usb_audio_transmit_setting > 0) {
				bdt_t *b = &table[index(AUDIO_TX_ENDPOINT, TX, EVEN)];
    86e8:	ldr	r2, [pc, #152]	; (8784 <usb_isr+0xac4>)
				uint8_t state = tx_state[AUDIO_TX_ENDPOINT-1];
    86ea:	ldrb	r7, [r5, #5]
#if defined(AUDIO_INTERFACE)
	  case 0x0B01: // SET_INTERFACE (alternate setting)
		if (setup.wIndex == AUDIO_INTERFACE+1) {
			usb_audio_transmit_setting = setup.wValue;
			if (usb_audio_transmit_setting > 0) {
				bdt_t *b = &table[index(AUDIO_TX_ENDPOINT, TX, EVEN)];
    86ec:	sub.w	r6, r2, #8
    86f0:	cmp	r7, #0
    86f2:	it	ne
    86f4:	movne	r6, r2
				uint8_t state = tx_state[AUDIO_TX_ENDPOINT-1];
				if (state) b++;
				if (!(b->desc & BDT_OWN)) {
    86f6:	ldr	r2, [r6, #0]
    86f8:	ands.w	r1, r2, #128	; 0x80
    86fc:	bne.w	83a0 <usb_isr+0x6e0>
					memset(usb_audio_transmit_buffer, 0, 176);
    8700:	ldr.w	r8, [pc, #156]	; 87a0 <usb_isr+0xae0>
    8704:	movs	r2, #176	; 0xb0
    8706:	mov	r0, r8
    8708:	bl	c110 <memset>
					b->addr = usb_audio_transmit_buffer;
					b->desc = (176 << 16) | BDT_OWN;
					tx_state[AUDIO_TX_ENDPOINT-1] = state ^ 1;
    870c:	eor.w	r7, r7, #1
				uint8_t state = tx_state[AUDIO_TX_ENDPOINT-1];
				if (state) b++;
				if (!(b->desc & BDT_OWN)) {
					memset(usb_audio_transmit_buffer, 0, 176);
					b->addr = usb_audio_transmit_buffer;
					b->desc = (176 << 16) | BDT_OWN;
    8710:	ldr	r2, [pc, #116]	; (8788 <usb_isr+0xac8>)
				bdt_t *b = &table[index(AUDIO_TX_ENDPOINT, TX, EVEN)];
				uint8_t state = tx_state[AUDIO_TX_ENDPOINT-1];
				if (state) b++;
				if (!(b->desc & BDT_OWN)) {
					memset(usb_audio_transmit_buffer, 0, 176);
					b->addr = usb_audio_transmit_buffer;
    8712:	str.w	r8, [r6, #4]
					b->desc = (176 << 16) | BDT_OWN;
					tx_state[AUDIO_TX_ENDPOINT-1] = state ^ 1;
    8716:	strb	r7, [r5, #5]
				uint8_t state = tx_state[AUDIO_TX_ENDPOINT-1];
				if (state) b++;
				if (!(b->desc & BDT_OWN)) {
					memset(usb_audio_transmit_buffer, 0, 176);
					b->addr = usb_audio_transmit_buffer;
					b->desc = (176 << 16) | BDT_OWN;
    8718:	str	r2, [r6, #0]
    871a:	b.n	83a0 <usb_isr+0x6e0>
    871c:	ldr	r3, [pc, #84]	; (8774 <usb_isr+0xab4>)
				data = list->addr;
				if ((setup.wValue >> 8) == 3) {
					// for string descriptors, use the descriptor's
					// length field, allowing runtime configured
					// length.
					datalen = *(list->addr);
    871e:	ldrb	r0, [r1, #0]
    8720:	ldrh	r7, [r3, #6]
    8722:	str	r0, [sp, #28]
    8724:	b.n	82f8 <usb_isr+0x638>
			epconf = *cfg++;
			*reg = epconf;
			reg += 4;
#ifdef AUDIO_INTERFACE
			if (i == AUDIO_RX_ENDPOINT) {
				table[index(i, RX, EVEN)].addr = usb_audio_receive_buffer;
    8726:	ldr	r2, [pc, #100]	; (878c <usb_isr+0xacc>)
				table[index(i, RX, EVEN)].desc = (AUDIO_RX_SIZE<<16) | BDT_OWN;
    8728:	ldr	r1, [pc, #100]	; (8790 <usb_isr+0xad0>)
			epconf = *cfg++;
			*reg = epconf;
			reg += 4;
#ifdef AUDIO_INTERFACE
			if (i == AUDIO_RX_ENDPOINT) {
				table[index(i, RX, EVEN)].addr = usb_audio_receive_buffer;
    872a:	str.w	r2, [r9, #228]	; 0xe4
				table[index(i, RX, EVEN)].desc = (AUDIO_RX_SIZE<<16) | BDT_OWN;
				table[index(i, RX, ODD)].addr = usb_audio_receive_buffer;
    872e:	str.w	r2, [r9, #236]	; 0xec
				} else {
					table[index(i, RX, ODD)].desc = 0;
					usb_rx_memory_needed++;
				}
			}
			table[index(i, TX, EVEN)].desc = 0;
    8732:	movs	r2, #0
			*reg = epconf;
			reg += 4;
#ifdef AUDIO_INTERFACE
			if (i == AUDIO_RX_ENDPOINT) {
				table[index(i, RX, EVEN)].addr = usb_audio_receive_buffer;
				table[index(i, RX, EVEN)].desc = (AUDIO_RX_SIZE<<16) | BDT_OWN;
    8734:	str.w	r1, [r9, #224]	; 0xe0
				table[index(i, RX, ODD)].addr = usb_audio_receive_buffer;
				table[index(i, RX, ODD)].desc = (AUDIO_RX_SIZE<<16) | BDT_OWN;
    8738:	str.w	r1, [r9, #232]	; 0xe8
				} else {
					table[index(i, RX, ODD)].desc = 0;
					usb_rx_memory_needed++;
				}
			}
			table[index(i, TX, EVEN)].desc = 0;
    873c:	str.w	r2, [r9, #240]	; 0xf0
			table[index(i, TX, ODD)].desc = 0;
    8740:	str.w	r2, [r9, #248]	; 0xf8
    8744:	b.n	8640 <usb_isr+0x980>
#ifdef AUDIO_INTERFACE
			if (i == AUDIO_SYNC_ENDPOINT) {
				table[index(i, TX, EVEN)].addr = &usb_audio_sync_feedback;
    8746:	add.w	r6, r5, r2, lsl #3
    874a:	ldr	r7, [pc, #40]	; (8774 <usb_isr+0xab4>)
				table[index(i, TX, EVEN)].desc = (3<<16) | BDT_OWN;
    874c:	ldr	r0, [pc, #68]	; (8794 <usb_isr+0xad4>)
			}
			table[index(i, TX, EVEN)].desc = 0;
			table[index(i, TX, ODD)].desc = 0;
#ifdef AUDIO_INTERFACE
			if (i == AUDIO_SYNC_ENDPOINT) {
				table[index(i, TX, EVEN)].addr = &usb_audio_sync_feedback;
    874e:	ldr	r3, [pc, #72]	; (8798 <usb_isr+0xad8>)
				table[index(i, TX, EVEN)].desc = (3<<16) | BDT_OWN;
    8750:	str.w	r0, [r5, r2, lsl #3]
    8754:	ldr	r4, [sp, #8]
    8756:	ldrh	r7, [r7, #6]
			}
			table[index(i, TX, EVEN)].desc = 0;
			table[index(i, TX, ODD)].desc = 0;
#ifdef AUDIO_INTERFACE
			if (i == AUDIO_SYNC_ENDPOINT) {
				table[index(i, TX, EVEN)].addr = &usb_audio_sync_feedback;
    8758:	str	r3, [r6, #4]
    875a:	ldr	r0, [sp, #28]
    875c:	b.n	82f8 <usb_isr+0x638>
    875e:	nop
    8760:	.word	0x400720c4
    8764:	.word	0x20012b2d
    8768:	.word	0x1fff0000
    876c:	.word	0x00400088
    8770:	.word	0x004000c8
    8774:	.word	0x20012b24
    8778:	.word	0x20012b6e
    877c:	.word	0x20012b30
    8780:	.word	0x20012b3c
    8784:	.word	0x1fff00d8
    8788:	.word	0x00b00080
    878c:	.word	0x200073d4
    8790:	.word	0x00b40080
    8794:	.word	0x00030080
    8798:	.word	0x200073d0
    879c:	.word	0x0009e16c
    87a0:	.word	0x20007488

000087a4 <usb_init>:
}



void usb_init(void)
{
    87a4:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    87a8:	ldr	r4, [pc, #156]	; (8848 <usb_init+0xa4>)
	int i;

	//serial_begin(BAUD2DIV(115200));
	//serial_print("usb_init\n");

	usb_init_serialnumber();
    87aa:	bl	9e34 <usb_init_serialnumber>

	for (i=0; i <= NUM_ENDPOINTS*4; i++) {
		table[i].desc = 0;
    87ae:	movs	r2, #0
    87b0:	add.w	r0, r4, #264	; 0x108
	int i;

	//serial_begin(BAUD2DIV(115200));
	//serial_print("usb_init\n");

	usb_init_serialnumber();
    87b4:	mov	r3, r4

	for (i=0; i <= NUM_ENDPOINTS*4; i++) {
		table[i].desc = 0;
    87b6:	str	r2, [r3, #0]
		table[i].addr = 0;
    87b8:	str	r2, [r3, #4]
    87ba:	adds	r3, #8
	//serial_begin(BAUD2DIV(115200));
	//serial_print("usb_init\n");

	usb_init_serialnumber();

	for (i=0; i <= NUM_ENDPOINTS*4; i++) {
    87bc:	cmp	r3, r0
		table[i].desc = 0;
    87be:	mov.w	r1, #0
	//serial_begin(BAUD2DIV(115200));
	//serial_print("usb_init\n");

	usb_init_serialnumber();

	for (i=0; i <= NUM_ENDPOINTS*4; i++) {
    87c2:	bne.n	87b6 <usb_init+0x12>
	// this basically follows the flowchart in the Kinetis
	// Quick Reference User Guide, Rev. 1, 03/2012, page 141

	// assume 48 MHz clock already running
	// SIM - enable clock
	SIM_SCGC4 |= SIM_SCGC4_USBOTG;
    87c4:	ldr	r0, [pc, #132]	; (884c <usb_init+0xa8>)
#ifdef HAS_KINETIS_MPU
	MPU_RGDAAC0 |= 0x03000000;
    87c6:	ldr	r2, [pc, #136]	; (8850 <usb_init+0xac>)
	// this basically follows the flowchart in the Kinetis
	// Quick Reference User Guide, Rev. 1, 03/2012, page 141

	// assume 48 MHz clock already running
	// SIM - enable clock
	SIM_SCGC4 |= SIM_SCGC4_USBOTG;
    87c8:	ldr	r3, [r0, #0]
#ifdef HAS_KINETIS_MPU
	MPU_RGDAAC0 |= 0x03000000;
#endif
#if F_CPU == 180000000 || F_CPU == 216000000 || F_CPU == 256000000
	// if using IRC48M, turn on the USB clock recovery hardware
	USB0_CLK_RECOVER_IRC_EN = USB_CLK_RECOVER_IRC_EN_IRC_EN | USB_CLK_RECOVER_IRC_EN_REG_EN;
    87ca:	ldr.w	lr, [pc, #156]	; 8868 <usb_init+0xc4>
	USB0_CLK_RECOVER_CTRL = USB_CLK_RECOVER_CTRL_CLOCK_RECOVER_EN |
    87ce:	ldr	r6, [pc, #132]	; (8854 <usb_init+0xb0>)
	// reset USB module
	//USB0_USBTRC0 = USB_USBTRC_USBRESET;
	//while ((USB0_USBTRC0 & USB_USBTRC_USBRESET) != 0) ; // wait for reset to end

	// set desc table base addr
	USB0_BDTPAGE1 = ((uint32_t)table) >> 8;
    87d0:	ldr	r5, [pc, #132]	; (8858 <usb_init+0xb4>)
	USB0_BDTPAGE2 = ((uint32_t)table) >> 16;
    87d2:	ldr	r7, [pc, #136]	; (885c <usb_init+0xb8>)
	USB0_BDTPAGE3 = ((uint32_t)table) >> 24;

	// clear all ISR flags
	USB0_ISTAT = 0xFF;
    87d4:	ldr.w	ip, [pc, #148]	; 886c <usb_init+0xc8>
	USB0_ERRSTAT = 0xFF;
    87d8:	ldr.w	r8, [pc, #148]	; 8870 <usb_init+0xcc>
	// this basically follows the flowchart in the Kinetis
	// Quick Reference User Guide, Rev. 1, 03/2012, page 141

	// assume 48 MHz clock already running
	// SIM - enable clock
	SIM_SCGC4 |= SIM_SCGC4_USBOTG;
    87dc:	orr.w	r3, r3, #262144	; 0x40000
    87e0:	str	r3, [r0, #0]
#ifdef HAS_KINETIS_MPU
	MPU_RGDAAC0 |= 0x03000000;
    87e2:	ldr	r3, [r2, #0]
    87e4:	orr.w	r3, r3, #50331648	; 0x3000000
    87e8:	str	r3, [r2, #0]
#endif
#if F_CPU == 180000000 || F_CPU == 216000000 || F_CPU == 256000000
	// if using IRC48M, turn on the USB clock recovery hardware
	USB0_CLK_RECOVER_IRC_EN = USB_CLK_RECOVER_IRC_EN_IRC_EN | USB_CLK_RECOVER_IRC_EN_REG_EN;
    87ea:	movs	r3, #3
    87ec:	strb.w	r3, [lr]
	USB0_CLK_RECOVER_CTRL = USB_CLK_RECOVER_CTRL_CLOCK_RECOVER_EN |
    87f0:	movs	r3, #160	; 0xa0
    87f2:	strb	r3, [r6, #0]
	USB0_BDTPAGE3 = ((uint32_t)table) >> 24;

	// clear all ISR flags
	USB0_ISTAT = 0xFF;
	USB0_ERRSTAT = 0xFF;
	USB0_OTGISTAT = 0xFF;
    87f4:	add.w	r2, r2, #411648	; 0x64800
	// reset USB module
	//USB0_USBTRC0 = USB_USBTRC_USBRESET;
	//while ((USB0_USBTRC0 & USB_USBTRC_USBRESET) != 0) ; // wait for reset to end

	// set desc table base addr
	USB0_BDTPAGE1 = ((uint32_t)table) >> 8;
    87f8:	ubfx	r3, r4, #8, #8
	USB0_BDTPAGE2 = ((uint32_t)table) >> 16;
	USB0_BDTPAGE3 = ((uint32_t)table) >> 24;
    87fc:	add.w	r0, r0, #172032	; 0x2a000
	// reset USB module
	//USB0_USBTRC0 = USB_USBTRC_USBRESET;
	//while ((USB0_USBTRC0 & USB_USBTRC_USBRESET) != 0) ; // wait for reset to end

	// set desc table base addr
	USB0_BDTPAGE1 = ((uint32_t)table) >> 8;
    8800:	strb	r3, [r5, #0]
	USB0_BDTPAGE2 = ((uint32_t)table) >> 16;
	USB0_BDTPAGE3 = ((uint32_t)table) >> 24;
    8802:	adds	r0, #128	; 0x80
	//USB0_USBTRC0 = USB_USBTRC_USBRESET;
	//while ((USB0_USBTRC0 & USB_USBTRC_USBRESET) != 0) ; // wait for reset to end

	// set desc table base addr
	USB0_BDTPAGE1 = ((uint32_t)table) >> 8;
	USB0_BDTPAGE2 = ((uint32_t)table) >> 16;
    8804:	ubfx	r3, r4, #16, #8
	USB0_BDTPAGE3 = ((uint32_t)table) >> 24;

	// clear all ISR flags
	USB0_ISTAT = 0xFF;
	USB0_ERRSTAT = 0xFF;
	USB0_OTGISTAT = 0xFF;
    8808:	adds	r2, #16
	//USB0_USBTRC0 = USB_USBTRC_USBRESET;
	//while ((USB0_USBTRC0 & USB_USBTRC_USBRESET) != 0) ; // wait for reset to end

	// set desc table base addr
	USB0_BDTPAGE1 = ((uint32_t)table) >> 8;
	USB0_BDTPAGE2 = ((uint32_t)table) >> 16;
    880a:	strb	r3, [r7, #0]
	USB0_BDTPAGE3 = ((uint32_t)table) >> 24;
    880c:	lsrs	r4, r4, #24

	// clear all ISR flags
	USB0_ISTAT = 0xFF;
    880e:	movs	r3, #255	; 0xff
	//while ((USB0_USBTRC0 & USB_USBTRC_USBRESET) != 0) ; // wait for reset to end

	// set desc table base addr
	USB0_BDTPAGE1 = ((uint32_t)table) >> 8;
	USB0_BDTPAGE2 = ((uint32_t)table) >> 16;
	USB0_BDTPAGE3 = ((uint32_t)table) >> 24;
    8810:	strb	r4, [r0, #0]

	// enable reset interrupt
	USB0_INTEN = USB_INTEN_USBRSTEN;

	// enable interrupt in NVIC...
	NVIC_SET_PRIORITY(IRQ_USBOTG, 112);
    8812:	ldr	r5, [pc, #76]	; (8860 <usb_init+0xbc>)
	USB0_BDTPAGE1 = ((uint32_t)table) >> 8;
	USB0_BDTPAGE2 = ((uint32_t)table) >> 16;
	USB0_BDTPAGE3 = ((uint32_t)table) >> 24;

	// clear all ISR flags
	USB0_ISTAT = 0xFF;
    8814:	strb.w	r3, [ip]
	// enable reset interrupt
	USB0_INTEN = USB_INTEN_USBRSTEN;

	// enable interrupt in NVIC...
	NVIC_SET_PRIORITY(IRQ_USBOTG, 112);
	NVIC_ENABLE_IRQ(IRQ_USBOTG);
    8818:	ldr	r0, [pc, #72]	; (8864 <usb_init+0xc0>)
	USB0_BDTPAGE2 = ((uint32_t)table) >> 16;
	USB0_BDTPAGE3 = ((uint32_t)table) >> 24;

	// clear all ISR flags
	USB0_ISTAT = 0xFF;
	USB0_ERRSTAT = 0xFF;
    881a:	strb.w	r3, [r8]
	USB0_OTGISTAT = 0xFF;
    881e:	strb	r3, [r2, #0]

	//USB0_USBTRC0 |= 0x40; // undocumented bit

	// enable USB
	USB0_CTL = USB_CTL_USBENSOFEN;
    8820:	movs	r3, #1
    8822:	strb.w	r3, [r6, #-172]
	// enable reset interrupt
	USB0_INTEN = USB_INTEN_USBRSTEN;

	// enable interrupt in NVIC...
	NVIC_SET_PRIORITY(IRQ_USBOTG, 112);
	NVIC_ENABLE_IRQ(IRQ_USBOTG);
    8826:	mov.w	r4, #2097152	; 0x200000

	//USB0_USBTRC0 |= 0x40; // undocumented bit

	// enable USB
	USB0_CTL = USB_CTL_USBENSOFEN;
	USB0_USBCTRL = 0;
    882a:	strb.w	r1, [lr, #-68]

	// enable reset interrupt
	USB0_INTEN = USB_INTEN_USBRSTEN;

	// enable interrupt in NVIC...
	NVIC_SET_PRIORITY(IRQ_USBOTG, 112);
    882e:	movs	r6, #112	; 0x70
	NVIC_ENABLE_IRQ(IRQ_USBOTG);

	// enable d+ pullup
	USB0_CONTROL = USB_CONTROL_DPPULLUPNONOTG;
    8830:	movs	r1, #16
	// enable USB
	USB0_CTL = USB_CTL_USBENSOFEN;
	USB0_USBCTRL = 0;

	// enable reset interrupt
	USB0_INTEN = USB_INTEN_USBRSTEN;
    8832:	strb.w	r3, [r7, #-44]

	// enable interrupt in NVIC...
	NVIC_SET_PRIORITY(IRQ_USBOTG, 112);
    8836:	strb	r6, [r5, #0]
	NVIC_ENABLE_IRQ(IRQ_USBOTG);
    8838:	str	r4, [r0, #0]

	// enable d+ pullup
	USB0_CONTROL = USB_CONTROL_DPPULLUPNONOTG;
    883a:	strb.w	r1, [r2, #248]	; 0xf8

	//USB0_USBTRC0 |= 0x40; // undocumented bit

	// enable USB
	USB0_CTL = USB_CTL_USBENSOFEN;
	USB0_USBCTRL = 0;
    883e:	sub.w	lr, lr, #68	; 0x44
	// enable interrupt in NVIC...
	NVIC_SET_PRIORITY(IRQ_USBOTG, 112);
	NVIC_ENABLE_IRQ(IRQ_USBOTG);

	// enable d+ pullup
	USB0_CONTROL = USB_CONTROL_DPPULLUPNONOTG;
    8842:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    8846:	nop
    8848:	.word	0x1fff0000
    884c:	.word	0x40048034
    8850:	.word	0x4000d800
    8854:	.word	0x40072140
    8858:	.word	0x4007209c
    885c:	.word	0x400720b0
    8860:	.word	0xe000e435
    8864:	.word	0xe000e104
    8868:	.word	0x40072144
    886c:	.word	0x40072080
    8870:	.word	0x40072088

00008874 <DMAChannel::begin(bool)>:
/**                     Teensy 3.0 & 3.1                       **/
/****************************************************************/
#if defined(KINETISK)

void DMAChannel::begin(bool force_initialization)
{
    8874:	push	{r4, r5, r6, r7, lr}
	uint32_t ch = 0;

	__disable_irq();
    8876:	cpsid	i
	if (!force_initialization && TCD && channel < DMA_MAX_CHANNELS
    8878:	cbnz	r1, 88a2 <DMAChannel::begin(bool)+0x2e>
    887a:	ldr	r2, [r0, #0]
    887c:	cbz	r2, 88a2 <DMAChannel::begin(bool)+0x2e>
    887e:	ldrb	r3, [r0, #4]
    8880:	cmp	r3, #15
    8882:	bhi.n	88a2 <DMAChannel::begin(bool)+0x2e>
	  && (dma_channel_allocated_mask & (1 << channel))
    8884:	ldr	r4, [pc, #160]	; (8928 <DMAChannel::begin(bool)+0xb4>)
    8886:	ldrh	r1, [r4, #0]
    8888:	asr.w	r5, r1, r3
    888c:	lsls	r5, r5, #31
    888e:	bpl.n	88a6 <DMAChannel::begin(bool)+0x32>
	  && (uint32_t)TCD == (uint32_t)(0x40009000 + channel * 32)) {
    8890:	add.w	r3, r3, #33554432	; 0x2000000
    8894:	add.w	r3, r3, #1152	; 0x480
    8898:	cmp.w	r2, r3, lsl #5
    889c:	bne.n	88a6 <DMAChannel::begin(bool)+0x32>
		// DMA channel already allocated
		__enable_irq();
    889e:	cpsie	i
		return;
    88a0:	pop	{r4, r5, r6, r7, pc}
    88a2:	ldr	r4, [pc, #132]	; (8928 <DMAChannel::begin(bool)+0xb4>)
    88a4:	ldrh	r1, [r4, #0]
/**                     Teensy 3.0 & 3.1                       **/
/****************************************************************/
#if defined(KINETISK)

void DMAChannel::begin(bool force_initialization)
{
    88a6:	movs	r3, #0
		// DMA channel already allocated
		__enable_irq();
		return;
	}
	while (1) {
		if (!(dma_channel_allocated_mask & (1 << ch))) {
    88a8:	asr.w	r2, r1, r3
    88ac:	ands.w	r2, r2, #1
    88b0:	beq.n	88c2 <DMAChannel::begin(bool)+0x4e>
			dma_channel_allocated_mask |= (1 << ch);
			__enable_irq();
			break;
		}
		if (++ch >= DMA_MAX_CHANNELS) {
    88b2:	adds	r3, #1
    88b4:	cmp	r3, #16
    88b6:	bne.n	88a8 <DMAChannel::begin(bool)+0x34>
			__enable_irq();
    88b8:	cpsie	i
			TCD = (TCD_t *)0;
    88ba:	movs	r2, #0
			channel = DMA_MAX_CHANNELS;
    88bc:	strb	r3, [r0, #4]
			__enable_irq();
			break;
		}
		if (++ch >= DMA_MAX_CHANNELS) {
			__enable_irq();
			TCD = (TCD_t *)0;
    88be:	str	r2, [r0, #0]
    88c0:	pop	{r4, r5, r6, r7, pc}
		__enable_irq();
		return;
	}
	while (1) {
		if (!(dma_channel_allocated_mask & (1 << ch))) {
			dma_channel_allocated_mask |= (1 << ch);
    88c2:	movs	r5, #1
    88c4:	lsls	r5, r3
    88c6:	orrs	r1, r5
    88c8:	strh	r1, [r4, #0]
			__enable_irq();
    88ca:	cpsie	i
			return; // no more channels available
			// attempts to use this object will hardfault
		}
	}
	channel = ch;
	SIM_SCGC7 |= SIM_SCGC7_DMA;
    88cc:	ldr	r6, [pc, #92]	; (892c <DMAChannel::begin(bool)+0xb8>)
	SIM_SCGC6 |= SIM_SCGC6_DMAMUX;
    88ce:	ldr	r5, [pc, #96]	; (8930 <DMAChannel::begin(bool)+0xbc>)
#if DMA_NUM_CHANNELS <= 16
	DMA_CR = DMA_CR_EMLM | DMA_CR_EDBG; // minor loop mapping is available
#else
	DMA_CR = DMA_CR_GRP1PRI| DMA_CR_EMLM | DMA_CR_EDBG;
    88d0:	ldr	r7, [pc, #96]	; (8934 <DMAChannel::begin(bool)+0xc0>)
#endif
	DMA_CERQ = ch;
    88d2:	ldr.w	lr, [pc, #104]	; 893c <DMAChannel::begin(bool)+0xc8>
			channel = DMA_MAX_CHANNELS;
			return; // no more channels available
			// attempts to use this object will hardfault
		}
	}
	channel = ch;
    88d6:	uxtb	r1, r3
    88d8:	strb	r1, [r0, #4]
	SIM_SCGC7 |= SIM_SCGC7_DMA;
    88da:	ldr	r4, [r6, #0]
    88dc:	orr.w	r4, r4, #2
    88e0:	str	r4, [r6, #0]
	SIM_SCGC6 |= SIM_SCGC6_DMAMUX;
    88e2:	ldr	r4, [r5, #0]
    88e4:	orr.w	r4, r4, #2
    88e8:	str	r4, [r5, #0]
	DMA_CR = DMA_CR_EMLM | DMA_CR_EDBG; // minor loop mapping is available
#else
	DMA_CR = DMA_CR_GRP1PRI| DMA_CR_EMLM | DMA_CR_EDBG;
#endif
	DMA_CERQ = ch;
	DMA_CERR = ch;
    88ea:	sub.w	r6, r6, #262144	; 0x40000
	SIM_SCGC7 |= SIM_SCGC7_DMA;
	SIM_SCGC6 |= SIM_SCGC6_DMAMUX;
#if DMA_NUM_CHANNELS <= 16
	DMA_CR = DMA_CR_EMLM | DMA_CR_EDBG; // minor loop mapping is available
#else
	DMA_CR = DMA_CR_GRP1PRI| DMA_CR_EMLM | DMA_CR_EDBG;
    88ee:	movw	r4, #1154	; 0x482
#endif
	DMA_CERQ = ch;
	DMA_CERR = ch;
	DMA_CEEI = ch;
    88f2:	sub.w	r5, r5, #262144	; 0x40000
	DMA_CINT = ch;
	TCD = (TCD_t *)(0x40009000 + ch * 32);
    88f6:	add.w	r3, r3, #33554432	; 0x2000000
	SIM_SCGC7 |= SIM_SCGC7_DMA;
	SIM_SCGC6 |= SIM_SCGC6_DMAMUX;
#if DMA_NUM_CHANNELS <= 16
	DMA_CR = DMA_CR_EMLM | DMA_CR_EDBG; // minor loop mapping is available
#else
	DMA_CR = DMA_CR_GRP1PRI| DMA_CR_EMLM | DMA_CR_EDBG;
    88fa:	str	r4, [r7, #0]
#endif
	DMA_CERQ = ch;
	DMA_CERR = ch;
	DMA_CEEI = ch;
	DMA_CINT = ch;
	TCD = (TCD_t *)(0x40009000 + ch * 32);
    88fc:	add.w	r3, r3, #1152	; 0x480
	DMA_CR = DMA_CR_EMLM | DMA_CR_EDBG; // minor loop mapping is available
#else
	DMA_CR = DMA_CR_GRP1PRI| DMA_CR_EMLM | DMA_CR_EDBG;
#endif
	DMA_CERQ = ch;
	DMA_CERR = ch;
    8900:	subs	r6, #34	; 0x22
	DMA_CEEI = ch;
    8902:	subs	r5, #36	; 0x24
	DMA_CINT = ch;
    8904:	ldr	r4, [pc, #48]	; (8938 <DMAChannel::begin(bool)+0xc4>)
#if DMA_NUM_CHANNELS <= 16
	DMA_CR = DMA_CR_EMLM | DMA_CR_EDBG; // minor loop mapping is available
#else
	DMA_CR = DMA_CR_GRP1PRI| DMA_CR_EMLM | DMA_CR_EDBG;
#endif
	DMA_CERQ = ch;
    8906:	strb.w	r1, [lr]
	DMA_CERR = ch;
	DMA_CEEI = ch;
	DMA_CINT = ch;
	TCD = (TCD_t *)(0x40009000 + ch * 32);
    890a:	lsls	r3, r3, #5
	DMA_CR = DMA_CR_EMLM | DMA_CR_EDBG; // minor loop mapping is available
#else
	DMA_CR = DMA_CR_GRP1PRI| DMA_CR_EMLM | DMA_CR_EDBG;
#endif
	DMA_CERQ = ch;
	DMA_CERR = ch;
    890c:	strb	r1, [r6, #0]
	DMA_CEEI = ch;
    890e:	strb	r1, [r5, #0]
	DMA_CINT = ch;
    8910:	strb	r1, [r4, #0]
	TCD = (TCD_t *)(0x40009000 + ch * 32);
    8912:	str	r3, [r0, #0]
	uint32_t *p = (uint32_t *)TCD;
	*p++ = 0;
    8914:	str	r2, [r3, #0]
	*p++ = 0;
    8916:	str	r2, [r3, #4]
	*p++ = 0;
    8918:	str	r2, [r3, #8]
	*p++ = 0;
    891a:	str	r2, [r3, #12]
	*p++ = 0;
    891c:	str	r2, [r3, #16]
	*p++ = 0;
    891e:	str	r2, [r3, #20]
	*p++ = 0;
    8920:	str	r2, [r3, #24]
	*p++ = 0;
    8922:	str	r2, [r3, #28]
    8924:	pop	{r4, r5, r6, r7, pc}
    8926:	nop
    8928:	.word	0x20012b44
    892c:	.word	0x40048040
    8930:	.word	0x4004803c
    8934:	.word	0x40008000
    8938:	.word	0x4000801f
    893c:	.word	0x4000801a

00008940 <DMAChannel::release()>:
}

void DMAChannel::release(void)
{
	if (channel >= DMA_MAX_CHANNELS) return;
    8940:	ldrb	r3, [r0, #4]
    8942:	cmp	r3, #15
    8944:	bhi.n	896c <DMAChannel::release()+0x2c>
	DMA_CERQ = channel;
    8946:	ldr	r2, [pc, #40]	; (8970 <DMAChannel::release()+0x30>)
	*p++ = 0;
	*p++ = 0;
}

void DMAChannel::release(void)
{
    8948:	push	{r4}
	if (channel >= DMA_MAX_CHANNELS) return;
	DMA_CERQ = channel;
    894a:	strb	r3, [r2, #0]
	__disable_irq();
    894c:	cpsid	i
	dma_channel_allocated_mask &= ~(1 << channel);
    894e:	ldr	r1, [pc, #36]	; (8974 <DMAChannel::release()+0x34>)
    8950:	ldrb	r4, [r0, #4]
    8952:	ldrh	r2, [r1, #0]
    8954:	movs	r3, #1
    8956:	lsls	r3, r4
    8958:	bic.w	r3, r2, r3
    895c:	strh	r3, [r1, #0]
	__enable_irq();
    895e:	cpsie	i
	channel = DMA_MAX_CHANNELS;
    8960:	movs	r2, #16
	TCD = (TCD_t *)0;
    8962:	movs	r3, #0
}
    8964:	ldr.w	r4, [sp], #4
	if (channel >= DMA_MAX_CHANNELS) return;
	DMA_CERQ = channel;
	__disable_irq();
	dma_channel_allocated_mask &= ~(1 << channel);
	__enable_irq();
	channel = DMA_MAX_CHANNELS;
    8968:	strb	r2, [r0, #4]
	TCD = (TCD_t *)0;
    896a:	str	r3, [r0, #0]
}
    896c:	bx	lr
    896e:	nop
    8970:	.word	0x4000801a
    8974:	.word	0x20012b44

00008978 <EventResponder::triggerEventNotImmediate()>:
bool EventResponder::runningFromYield = false;

// TODO: interrupt disable/enable needed in many places!!!

void EventResponder::triggerEventNotImmediate()
{
    8978:	push	{r4}
	static EventResponder *lastInterrupt;
	static bool runningFromYield;
private:
	static bool disableInterrupts() {
		uint32_t primask;
		__asm__ volatile("mrs %0, primask\n" : "=r" (primask)::);
    897a:	mrs	r2, PRIMASK
		__disable_irq();
    897e:	cpsid	i
	bool irq = disableInterrupts();
	if (_triggered == false) {
    8980:	ldrb	r3, [r0, #29]
    8982:	cbnz	r3, 8992 <EventResponder::triggerEventNotImmediate()+0x1a>
		// not already triggered
		if (_type == EventTypeYield) {
    8984:	ldrb	r1, [r0, #28]
    8986:	cmp	r1, #1
    8988:	beq.n	899c <EventResponder::triggerEventNotImmediate()+0x24>
				_next = nullptr;
				_prev = lastYield;
				_prev->_next = this;
				lastYield = this;
			}
		} else if (_type == EventTypeInterrupt) {
    898a:	cmp	r1, #3
    898c:	beq.n	89b0 <EventResponder::triggerEventNotImmediate()+0x38>
			}
			SCB_ICSR = SCB_ICSR_PENDSVSET; // set PendSV interrupt
		} else {
			// detached, easy :-)
		}
		_triggered = true;
    898e:	movs	r3, #1
    8990:	strb	r3, [r0, #29]
		return (primask == 0) ? true : false;
	}
	static void enableInterrupts(bool doit) {
		if (doit) __enable_irq();
    8992:	cbnz	r2, 8996 <EventResponder::triggerEventNotImmediate()+0x1e>
    8994:	cpsie	i
	}
	enableInterrupts(irq);
}
    8996:	ldr.w	r4, [sp], #4
    899a:	bx	lr
	bool irq = disableInterrupts();
	if (_triggered == false) {
		// not already triggered
		if (_type == EventTypeYield) {
			// normal type, called from yield()
			if (firstYield == nullptr) {
    899c:	ldr	r4, [pc, #68]	; (89e4 <EventResponder::triggerEventNotImmediate()+0x6c>)
    899e:	ldr	r1, [r4, #0]
    89a0:	cbz	r1, 89cc <EventResponder::triggerEventNotImmediate()+0x54>
				_prev = nullptr;
				firstYield = this;
				lastYield = this;
			} else {
				_next = nullptr;
				_prev = lastYield;
    89a2:	ldr	r1, [pc, #68]	; (89e8 <EventResponder::triggerEventNotImmediate()+0x70>)
				_next = nullptr;
				_prev = nullptr;
				firstYield = this;
				lastYield = this;
			} else {
				_next = nullptr;
    89a4:	str	r3, [r0, #20]
				_prev = lastYield;
    89a6:	ldr	r3, [r1, #0]
    89a8:	str	r3, [r0, #24]
				_prev->_next = this;
				lastYield = this;
    89aa:	str	r0, [r1, #0]
				firstYield = this;
				lastYield = this;
			} else {
				_next = nullptr;
				_prev = lastYield;
				_prev->_next = this;
    89ac:	str	r0, [r3, #20]
    89ae:	b.n	898e <EventResponder::triggerEventNotImmediate()+0x16>
				lastYield = this;
			}
		} else if (_type == EventTypeInterrupt) {
			// interrupt, called from software interrupt
			if (firstInterrupt == nullptr) {
    89b0:	ldr	r4, [pc, #56]	; (89ec <EventResponder::triggerEventNotImmediate()+0x74>)
    89b2:	ldr	r1, [r4, #0]
    89b4:	cbz	r1, 89d8 <EventResponder::triggerEventNotImmediate()+0x60>
				_prev = nullptr;
				firstInterrupt = this;
				lastInterrupt = this;
			} else {
				_next = nullptr;
				_prev = lastInterrupt;
    89b6:	ldr	r1, [pc, #56]	; (89f0 <EventResponder::triggerEventNotImmediate()+0x78>)
				_next = nullptr;
				_prev = nullptr;
				firstInterrupt = this;
				lastInterrupt = this;
			} else {
				_next = nullptr;
    89b8:	str	r3, [r0, #20]
				_prev = lastInterrupt;
    89ba:	ldr	r3, [r1, #0]
    89bc:	str	r3, [r0, #24]
				_prev->_next = this;
				lastInterrupt = this;
    89be:	str	r0, [r1, #0]
				firstInterrupt = this;
				lastInterrupt = this;
			} else {
				_next = nullptr;
				_prev = lastInterrupt;
				_prev->_next = this;
    89c0:	str	r0, [r3, #20]
				lastInterrupt = this;
			}
			SCB_ICSR = SCB_ICSR_PENDSVSET; // set PendSV interrupt
    89c2:	ldr	r3, [pc, #48]	; (89f4 <EventResponder::triggerEventNotImmediate()+0x7c>)
    89c4:	mov.w	r1, #268435456	; 0x10000000
    89c8:	str	r1, [r3, #0]
    89ca:	b.n	898e <EventResponder::triggerEventNotImmediate()+0x16>
			// normal type, called from yield()
			if (firstYield == nullptr) {
				_next = nullptr;
				_prev = nullptr;
				firstYield = this;
				lastYield = this;
    89cc:	ldr	r3, [pc, #24]	; (89e8 <EventResponder::triggerEventNotImmediate()+0x70>)
	if (_triggered == false) {
		// not already triggered
		if (_type == EventTypeYield) {
			// normal type, called from yield()
			if (firstYield == nullptr) {
				_next = nullptr;
    89ce:	str	r1, [r0, #20]
				_prev = nullptr;
    89d0:	str	r1, [r0, #24]
				firstYield = this;
    89d2:	str	r0, [r4, #0]
				lastYield = this;
    89d4:	str	r0, [r3, #0]
    89d6:	b.n	898e <EventResponder::triggerEventNotImmediate()+0x16>
			// interrupt, called from software interrupt
			if (firstInterrupt == nullptr) {
				_next = nullptr;
				_prev = nullptr;
				firstInterrupt = this;
				lastInterrupt = this;
    89d8:	ldr	r3, [pc, #20]	; (89f0 <EventResponder::triggerEventNotImmediate()+0x78>)
				lastYield = this;
			}
		} else if (_type == EventTypeInterrupt) {
			// interrupt, called from software interrupt
			if (firstInterrupt == nullptr) {
				_next = nullptr;
    89da:	str	r1, [r0, #20]
				_prev = nullptr;
    89dc:	str	r1, [r0, #24]
				firstInterrupt = this;
    89de:	str	r0, [r4, #0]
				lastInterrupt = this;
    89e0:	str	r0, [r3, #0]
    89e2:	b.n	89c2 <EventResponder::triggerEventNotImmediate()+0x4a>
    89e4:	.word	0x20012b58
    89e8:	.word	0x20012b54
    89ec:	.word	0x20012b48
    89f0:	.word	0x20012b4c
    89f4:	.word	0xe000ed04

000089f8 <EventResponder::runFromInterrupt()>:
{
	EventResponder::runFromInterrupt();
}

void EventResponder::runFromInterrupt()
{
    89f8:	push	{r4, r5, r6, lr}
	static EventResponder *lastInterrupt;
	static bool runningFromYield;
private:
	static bool disableInterrupts() {
		uint32_t primask;
		__asm__ volatile("mrs %0, primask\n" : "=r" (primask)::);
    89fa:	mrs	r2, PRIMASK
		__disable_irq();
    89fe:	cpsid	i
	while (1) {
		bool irq = disableInterrupts();
		EventResponder *first = firstInterrupt;
    8a00:	ldr	r4, [pc, #48]	; (8a34 <EventResponder::runFromInterrupt()+0x3c>)
    8a02:	ldr	r0, [r4, #0]
		if (first) {
    8a04:	cbz	r0, 8a28 <EventResponder::runFromInterrupt()+0x30>
			firstInterrupt = first->_next;
			if (firstInterrupt) {
				firstInterrupt->_prev = nullptr;
			} else {
				lastInterrupt = nullptr;
    8a06:	ldr	r6, [pc, #48]	; (8a38 <EventResponder::runFromInterrupt()+0x40>)
		bool irq = disableInterrupts();
		EventResponder *first = firstInterrupt;
		if (first) {
			firstInterrupt = first->_next;
			if (firstInterrupt) {
				firstInterrupt->_prev = nullptr;
    8a08:	movs	r5, #0
{
	while (1) {
		bool irq = disableInterrupts();
		EventResponder *first = firstInterrupt;
		if (first) {
			firstInterrupt = first->_next;
    8a0a:	ldr	r3, [r0, #20]
    8a0c:	str	r3, [r4, #0]
			if (firstInterrupt) {
    8a0e:	cbz	r3, 8a2e <EventResponder::runFromInterrupt()+0x36>
				firstInterrupt->_prev = nullptr;
    8a10:	str	r5, [r3, #24]
		return (primask == 0) ? true : false;
	}
	static void enableInterrupts(bool doit) {
		if (doit) __enable_irq();
    8a12:	cbnz	r2, 8a16 <EventResponder::runFromInterrupt()+0x1e>
    8a14:	cpsie	i
			} else {
				lastInterrupt = nullptr;
			}
			enableInterrupts(irq);
			first->_triggered = false;
    8a16:	strb	r5, [r0, #29]
			(*(first->_function))(*first);
    8a18:	ldr	r3, [r0, #8]
    8a1a:	blx	r3
	static EventResponder *lastInterrupt;
	static bool runningFromYield;
private:
	static bool disableInterrupts() {
		uint32_t primask;
		__asm__ volatile("mrs %0, primask\n" : "=r" (primask)::);
    8a1c:	mrs	r2, PRIMASK
		__disable_irq();
    8a20:	cpsid	i

void EventResponder::runFromInterrupt()
{
	while (1) {
		bool irq = disableInterrupts();
		EventResponder *first = firstInterrupt;
    8a22:	ldr	r0, [r4, #0]
		if (first) {
    8a24:	cmp	r0, #0
    8a26:	bne.n	8a0a <EventResponder::runFromInterrupt()+0x12>
		return (primask == 0) ? true : false;
	}
	static void enableInterrupts(bool doit) {
		if (doit) __enable_irq();
    8a28:	cbnz	r2, 8a2c <EventResponder::runFromInterrupt()+0x34>
    8a2a:	cpsie	i
    8a2c:	pop	{r4, r5, r6, pc}
			firstInterrupt = first->_next;
			if (firstInterrupt) {
				firstInterrupt->_prev = nullptr;
			} else {
				lastInterrupt = nullptr;
    8a2e:	str	r3, [r6, #0]
    8a30:	b.n	8a12 <EventResponder::runFromInterrupt()+0x1a>
    8a32:	nop
    8a34:	.word	0x20012b48
    8a38:	.word	0x20012b4c

00008a3c <pendablesrvreq_isr>:
	enableInterrupts(irq);
}

void pendablesrvreq_isr(void)
{
	EventResponder::runFromInterrupt();
    8a3c:	b.w	89f8 <EventResponder::runFromInterrupt()>

00008a40 <MillisTimer::addToActiveList()>:
	enableTimerInterrupt(irq);
}

void MillisTimer::addToActiveList() // only called by runFromTimer()
{
	if (listActive == nullptr) {
    8a40:	ldr	r2, [pc, #96]	; (8aa4 <MillisTimer::addToActiveList()+0x64>)
	_state = TimerWaiting;
	enableTimerInterrupt(irq);
}

void MillisTimer::addToActiveList() // only called by runFromTimer()
{
    8a42:	push	{r4, r5}
	if (listActive == nullptr) {
    8a44:	ldr	r4, [r2, #0]
    8a46:	cmp	r4, #0
    8a48:	beq.n	8a9a <MillisTimer::addToActiveList()+0x5a>
		// list is empty, easy case
		_next = nullptr;
		_prev = nullptr;
		listActive = this;
	} else if (_ms < listActive->_ms) {
    8a4a:	ldr	r3, [r0, #0]
    8a4c:	ldr	r1, [r4, #0]
    8a4e:	cmp	r3, r1
    8a50:	bcs.n	8a70 <MillisTimer::addToActiveList()+0x30>
		// this timer triggers before any on the list
		_next = listActive;
		_prev = nullptr;
		listActive->_prev = this;
		// Decrement the next items wait time be our wait time as to properly handle waits for all other items...
		listActive->_ms -= _ms;	
    8a52:	subs	r3, r1, r3
		_prev = nullptr;
		listActive = this;
	} else if (_ms < listActive->_ms) {
		// this timer triggers before any on the list
		_next = listActive;
		_prev = nullptr;
    8a54:	movs	r1, #0
		_next = nullptr;
		_prev = nullptr;
		listActive = this;
	} else if (_ms < listActive->_ms) {
		// this timer triggers before any on the list
		_next = listActive;
    8a56:	str	r4, [r0, #8]
		_prev = nullptr;
    8a58:	str	r1, [r0, #12]
		listActive->_prev = this;
		// Decrement the next items wait time be our wait time as to properly handle waits for all other items...
		listActive->_ms -= _ms;	
    8a5a:	str	r3, [r4, #0]
		listActive = this;
	} else if (_ms < listActive->_ms) {
		// this timer triggers before any on the list
		_next = listActive;
		_prev = nullptr;
		listActive->_prev = this;
    8a5c:	str	r0, [r4, #12]
		// Decrement the next items wait time be our wait time as to properly handle waits for all other items...
		listActive->_ms -= _ms;	
		listActive = this;
    8a5e:	str	r0, [r2, #0]
		_ms -= timer->_ms;
		_next = nullptr;
		_prev = timer;
		timer->_next = this;
	}
	_state = TimerActive;
    8a60:	movs	r3, #2
    8a62:	strb	r3, [r0, #20]
}
    8a64:	pop	{r4, r5}
    8a66:	bx	lr
		// add this timer somewhere after the first already on the list
		MillisTimer *timer = listActive;
		while (timer->_next) {
			_ms -= timer->_ms;
			timer = timer->_next;
			if (_ms < timer->_ms) {
    8a68:	ldr	r1, [r2, #0]
    8a6a:	cmp	r3, r1
    8a6c:	mov	r4, r2
    8a6e:	bcc.n	8a82 <MillisTimer::addToActiveList()+0x42>
		listActive->_ms -= _ms;	
		listActive = this;
	} else {
		// add this timer somewhere after the first already on the list
		MillisTimer *timer = listActive;
		while (timer->_next) {
    8a70:	ldr	r2, [r4, #8]
				_state = TimerActive;
				return;
			}
		}
		// add this time at the end of the list
		_ms -= timer->_ms;
    8a72:	subs	r3, r3, r1
    8a74:	str	r3, [r0, #0]
		listActive->_ms -= _ms;	
		listActive = this;
	} else {
		// add this timer somewhere after the first already on the list
		MillisTimer *timer = listActive;
		while (timer->_next) {
    8a76:	cmp	r2, #0
    8a78:	bne.n	8a68 <MillisTimer::addToActiveList()+0x28>
				return;
			}
		}
		// add this time at the end of the list
		_ms -= timer->_ms;
		_next = nullptr;
    8a7a:	str	r2, [r0, #8]
		_prev = timer;
    8a7c:	str	r4, [r0, #12]
		timer->_next = this;
    8a7e:	str	r0, [r4, #8]
    8a80:	b.n	8a60 <MillisTimer::addToActiveList()+0x20>
			_ms -= timer->_ms;
			timer = timer->_next;
			if (_ms < timer->_ms) {
				// found the right place in the middle of list
				_next = timer;
				_prev = timer->_prev;
    8a82:	ldr	r2, [r2, #12]
    8a84:	str	r2, [r0, #12]
		while (timer->_next) {
			_ms -= timer->_ms;
			timer = timer->_next;
			if (_ms < timer->_ms) {
				// found the right place in the middle of list
				_next = timer;
    8a86:	str	r4, [r0, #8]
				_prev = timer->_prev;
				timer->_prev = this;
    8a88:	str	r0, [r4, #12]
				_prev->_next = this;
    8a8a:	ldr	r5, [r0, #12]
				timer->_ms -= _ms;
    8a8c:	subs	r3, r1, r3
				_state = TimerActive;
    8a8e:	movs	r2, #2
			if (_ms < timer->_ms) {
				// found the right place in the middle of list
				_next = timer;
				_prev = timer->_prev;
				timer->_prev = this;
				_prev->_next = this;
    8a90:	str	r0, [r5, #8]
				timer->_ms -= _ms;
    8a92:	str	r3, [r4, #0]
				_state = TimerActive;
    8a94:	strb	r2, [r0, #20]
		_next = nullptr;
		_prev = timer;
		timer->_next = this;
	}
	_state = TimerActive;
}
    8a96:	pop	{r4, r5}
    8a98:	bx	lr

void MillisTimer::addToActiveList() // only called by runFromTimer()
{
	if (listActive == nullptr) {
		// list is empty, easy case
		_next = nullptr;
    8a9a:	str	r4, [r0, #8]
		_prev = nullptr;
    8a9c:	str	r4, [r0, #12]
		listActive = this;
    8a9e:	str	r0, [r2, #0]
    8aa0:	b.n	8a60 <MillisTimer::addToActiveList()+0x20>
    8aa2:	nop
    8aa4:	.word	0x20012b50

00008aa8 <MillisTimer::runFromTimer()>:
	}
	enableTimerInterrupt(irq);
}

void MillisTimer::runFromTimer()
{
    8aa8:	push	{r3, r4, r5, r6, r7, lr}
	MillisTimer *timer = listActive;
    8aaa:	ldr	r6, [pc, #136]	; (8b34 <MillisTimer::runFromTimer()+0x8c>)
    8aac:	ldr	r4, [r6, #0]
	while (timer) {
    8aae:	cbz	r4, 8afc <MillisTimer::runFromTimer()+0x54>
		if (timer->_ms > 0) {
    8ab0:	ldr	r3, [r4, #0]
    8ab2:	cmp	r3, #0
    8ab4:	bne.n	8b2c <MillisTimer::runFromTimer()+0x84>
    8ab6:	ldr	r7, [pc, #128]	; (8b38 <MillisTimer::runFromTimer()+0x90>)
			timer->_ms--;
			break;
		} else {
			MillisTimer *next = timer->_next;
			if (next) next->_prev = nullptr;
    8ab8:	mov	r5, r3
    8aba:	b.n	8ac6 <MillisTimer::runFromTimer()+0x1e>
			event.triggerEvent(0, timer);
			if (timer->_reload) {
				timer->_ms = timer->_reload;
				timer->addToActiveList();
			}
			timer = listActive;
    8abc:	ldr	r4, [r6, #0]
}

void MillisTimer::runFromTimer()
{
	MillisTimer *timer = listActive;
	while (timer) {
    8abe:	cbz	r4, 8afc <MillisTimer::runFromTimer()+0x54>
		if (timer->_ms > 0) {
    8ac0:	ldr	r3, [r4, #0]
    8ac2:	cmp	r3, #0
    8ac4:	bne.n	8b2c <MillisTimer::runFromTimer()+0x84>
			timer->_ms--;
			break;
		} else {
			MillisTimer *next = timer->_next;
    8ac6:	ldr	r3, [r4, #8]
			if (next) next->_prev = nullptr;
    8ac8:	cbz	r3, 8acc <MillisTimer::runFromTimer()+0x24>
    8aca:	str	r5, [r3, #12]
			listActive = next;
			timer->_state = TimerOff;
			EventResponderRef event = *(timer->_event);
    8acc:	ldr	r0, [r4, #16]
			timer->_ms--;
			break;
		} else {
			MillisTimer *next = timer->_next;
			if (next) next->_prev = nullptr;
			listActive = next;
    8ace:	str	r3, [r6, #0]
			timer->_state = TimerOff;
			EventResponderRef event = *(timer->_event);
			event.triggerEvent(0, timer);
    8ad0:	ldr	r3, [r0, #0]
			break;
		} else {
			MillisTimer *next = timer->_next;
			if (next) next->_prev = nullptr;
			listActive = next;
			timer->_state = TimerOff;
    8ad2:	strb	r5, [r4, #20]
			EventResponderRef event = *(timer->_event);
			event.triggerEvent(0, timer);
    8ad4:	ldr	r3, [r3, #0]
    8ad6:	cmp	r3, r7
    8ad8:	bne.n	8b1e <MillisTimer::runFromTimer()+0x76>
	// The code triggering the event does NOT control which of the above
	// response methods will be used.
	virtual void triggerEvent(int status=0, void *data=nullptr) {
		_status = status;
		_data = data;
		if (_type == EventTypeImmediate) {
    8ada:	ldrb	r3, [r0, #28]

	// Trigger the event.  An optional status code and data may be provided.
	// The code triggering the event does NOT control which of the above
	// response methods will be used.
	virtual void triggerEvent(int status=0, void *data=nullptr) {
		_status = status;
    8adc:	str	r5, [r0, #4]
		_data = data;
		if (_type == EventTypeImmediate) {
    8ade:	cmp	r3, #2
	// Trigger the event.  An optional status code and data may be provided.
	// The code triggering the event does NOT control which of the above
	// response methods will be used.
	virtual void triggerEvent(int status=0, void *data=nullptr) {
		_status = status;
		_data = data;
    8ae0:	str	r4, [r0, #12]
		if (_type == EventTypeImmediate) {
    8ae2:	beq.n	8b26 <MillisTimer::runFromTimer()+0x7e>
			(*_function)(*this);
		} else {
			triggerEventNotImmediate();
    8ae4:	bl	8978 <EventResponder::triggerEventNotImmediate()>
			if (timer->_reload) {
    8ae8:	ldr	r3, [r4, #4]
    8aea:	cmp	r3, #0
    8aec:	beq.n	8abc <MillisTimer::runFromTimer()+0x14>
				timer->_ms = timer->_reload;
    8aee:	str	r3, [r4, #0]
				timer->addToActiveList();
    8af0:	mov	r0, r4
    8af2:	bl	8a40 <MillisTimer::addToActiveList()>
			}
			timer = listActive;
    8af6:	ldr	r4, [r6, #0]
}

void MillisTimer::runFromTimer()
{
	MillisTimer *timer = listActive;
	while (timer) {
    8af8:	cmp	r4, #0
    8afa:	bne.n	8ac0 <MillisTimer::runFromTimer()+0x18>
	volatile TimerStateType _state = TimerOff;
	static MillisTimer *listWaiting; // single linked list of waiting to start timers
	static MillisTimer *listActive;  // double linked list of running timers
	static bool disableTimerInterrupt() {
		uint32_t primask;
		__asm__ volatile("mrs %0, primask\n" : "=r" (primask)::);
    8afc:	mrs	r3, PRIMASK
		__disable_irq();
    8b00:	cpsid	i
			}
			timer = listActive;
		}
	}
	bool irq = disableTimerInterrupt();
	MillisTimer *waiting = listWaiting;
    8b02:	ldr	r2, [pc, #56]	; (8b3c <MillisTimer::runFromTimer()+0x94>)
	listWaiting = nullptr; // TODO: use STREX to avoid interrupt disable
    8b04:	movs	r1, #0
			}
			timer = listActive;
		}
	}
	bool irq = disableTimerInterrupt();
	MillisTimer *waiting = listWaiting;
    8b06:	ldr	r0, [r2, #0]
	listWaiting = nullptr; // TODO: use STREX to avoid interrupt disable
    8b08:	str	r1, [r2, #0]
		return (primask == 0) ? true : false;
	}
	static void enableTimerInterrupt(bool doit) {
		if (doit) __enable_irq();
    8b0a:	cbnz	r3, 8b0e <MillisTimer::runFromTimer()+0x66>
    8b0c:	cpsie	i
	enableTimerInterrupt(irq);
	while (waiting) {
    8b0e:	cbz	r0, 8b1c <MillisTimer::runFromTimer()+0x74>
		MillisTimer *next = waiting->_next;
    8b10:	ldr	r4, [r0, #8]
		waiting->addToActiveList();
    8b12:	bl	8a40 <MillisTimer::addToActiveList()>
	}
	bool irq = disableTimerInterrupt();
	MillisTimer *waiting = listWaiting;
	listWaiting = nullptr; // TODO: use STREX to avoid interrupt disable
	enableTimerInterrupt(irq);
	while (waiting) {
    8b16:	mov	r0, r4
    8b18:	cmp	r0, #0
    8b1a:	bne.n	8b10 <MillisTimer::runFromTimer()+0x68>
    8b1c:	pop	{r3, r4, r5, r6, r7, pc}
			MillisTimer *next = timer->_next;
			if (next) next->_prev = nullptr;
			listActive = next;
			timer->_state = TimerOff;
			EventResponderRef event = *(timer->_event);
			event.triggerEvent(0, timer);
    8b1e:	mov	r2, r4
    8b20:	movs	r1, #0
    8b22:	blx	r3
    8b24:	b.n	8ae8 <MillisTimer::runFromTimer()+0x40>
	// response methods will be used.
	virtual void triggerEvent(int status=0, void *data=nullptr) {
		_status = status;
		_data = data;
		if (_type == EventTypeImmediate) {
			(*_function)(*this);
    8b26:	ldr	r3, [r0, #8]
    8b28:	blx	r3
    8b2a:	b.n	8ae8 <MillisTimer::runFromTimer()+0x40>
void MillisTimer::runFromTimer()
{
	MillisTimer *timer = listActive;
	while (timer) {
		if (timer->_ms > 0) {
			timer->_ms--;
    8b2c:	subs	r3, #1
    8b2e:	str	r3, [r4, #0]
			break;
    8b30:	b.n	8afc <MillisTimer::runFromTimer()+0x54>
    8b32:	nop
    8b34:	.word	0x20012b50
    8b38:	.word	0x000056b9
    8b3c:	.word	0x20012b60

00008b40 <systick_isr>:
// with libraries using mid-to-high priority interrupts.

extern "C" volatile uint32_t systick_millis_count;
void systick_isr(void)
{
	systick_millis_count++;
    8b40:	ldr	r2, [pc, #8]	; (8b4c <systick_isr+0xc>)
    8b42:	ldr	r3, [r2, #0]
    8b44:	adds	r3, #1
    8b46:	str	r3, [r2, #0]
	MillisTimer::runFromTimer();
    8b48:	b.w	8aa8 <MillisTimer::runFromTimer()>
    8b4c:	.word	0x20012a14

00008b50 <yield>:
#include <Arduino.h>
#include "EventResponder.h"

void yield(void) __attribute__ ((weak));
void yield(void)
{
    8b50:	push	{r3, r4, r5, lr}
	static uint8_t running=0;

	if (running) return; // TODO: does this need to be atomic?
    8b52:	ldr	r4, [pc, #176]	; (8c04 <yield+0xb4>)
    8b54:	ldrb	r3, [r4, #0]
    8b56:	cbz	r3, 8b5a <yield+0xa>
    8b58:	pop	{r3, r4, r5, pc}
	running = 1;
    8b5a:	movs	r3, #1
    8b5c:	strb	r3, [r4, #0]
			// sketch still gets to run normally after this wait time.
			//if ((uint32_t)(systick_millis_count - millis_begin) > 2500) break;
		//}
	}
        void end() { /* TODO: flush output and shut down USB port */ };
        virtual int available() { return usb_serial_available(); }
    8b5e:	bl	70bc <usb_serial_available>
	if (Serial.available()) serialEvent();
    8b62:	cmp	r0, #0
    8b64:	bne.n	8bec <yield+0x9c>
	virtual void transmitterEnable(uint8_t pin) { serial_set_transmit_pin(pin); }
	virtual void setRX(uint8_t pin) { serial_set_rx(pin); }
	virtual void setTX(uint8_t pin, bool opendrain=false) { serial_set_tx(pin, opendrain); }
	virtual bool attachRts(uint8_t pin) { return serial_set_rts(pin); }
	virtual bool attachCts(uint8_t pin) { return serial_set_cts(pin); }
	virtual int available(void)     { return serial_available(); }
    8b66:	bl	9c04 <serial_available>
	if (Serial1.available()) serialEvent1();
    8b6a:	cmp	r0, #0
    8b6c:	bne.n	8be6 <yield+0x96>
	virtual void transmitterEnable(uint8_t pin) { serial2_set_transmit_pin(pin); }
	virtual void setRX(uint8_t pin) { serial2_set_rx(pin); }
	virtual void setTX(uint8_t pin, bool opendrain=false) { serial2_set_tx(pin, opendrain); }
	virtual bool attachRts(uint8_t pin) { return serial2_set_rts(pin); }
	virtual bool attachCts(uint8_t pin) { return serial2_set_cts(pin); }
	virtual int available(void)     { return serial2_available(); }
    8b6e:	bl	99e0 <serial2_available>
	if (Serial2.available()) serialEvent2();
    8b72:	cmp	r0, #0
    8b74:	bne.n	8be0 <yield+0x90>
	virtual void transmitterEnable(uint8_t pin) { serial3_set_transmit_pin(pin); }
	virtual void setRX(uint8_t pin) { serial3_set_rx(pin); }
	virtual void setTX(uint8_t pin, bool opendrain=false) { serial3_set_tx(pin, opendrain); }
	virtual bool attachRts(uint8_t pin) { return serial3_set_rts(pin); }
	virtual bool attachCts(uint8_t pin) { return serial3_set_cts(pin); }
	virtual int available(void)     { return serial3_available(); }
    8b76:	bl	9f30 <serial3_available>
	if (Serial3.available()) serialEvent3();
    8b7a:	cbnz	r0, 8bda <yield+0x8a>
	virtual void transmitterEnable(uint8_t pin) { serial4_set_transmit_pin(pin); }
	virtual void setRX(uint8_t pin) { serial4_set_rx(pin); }
	virtual void setTX(uint8_t pin, bool opendrain=false) { serial4_set_tx(pin, opendrain); }
	virtual bool attachRts(uint8_t pin) { return serial4_set_rts(pin); }
	virtual bool attachCts(uint8_t pin) { return serial4_set_cts(pin); }
	virtual int available(void)     { return serial4_available(); }
    8b7c:	bl	9b0c <serial4_available>
#ifdef HAS_KINETISK_UART3
	if (Serial4.available()) serialEvent4();
    8b80:	cbnz	r0, 8bd4 <yield+0x84>
	virtual void transmitterEnable(uint8_t pin) { serial5_set_transmit_pin(pin); }
	virtual void setRX(uint8_t pin) { serial5_set_rx(pin); }
	virtual void setTX(uint8_t pin, bool opendrain=false) { serial5_set_tx(pin, opendrain); }
	virtual bool attachRts(uint8_t pin) { return serial5_set_rts(pin); }
	virtual bool attachCts(uint8_t pin) { return serial5_set_cts(pin); }
	virtual int available(void)     { return serial5_available(); }
    8b82:	bl	98e8 <serial5_available>
#endif
#ifdef HAS_KINETISK_UART4
	if (Serial5.available()) serialEvent5();
    8b86:	cbnz	r0, 8bce <yield+0x7e>
	virtual void transmitterEnable(uint8_t pin) { serial6_set_transmit_pin(pin); }
	virtual void setRX(uint8_t pin) { serial6_set_rx(pin); }
	virtual void setTX(uint8_t pin, bool opendrain=false) { serial6_set_tx(pin, opendrain); }
	virtual bool attachRts(uint8_t pin) { return serial6_set_rts(pin); }
	virtual bool attachCts(uint8_t pin) { return serial6_set_cts(pin); }
	virtual int available(void)     { return serial6_available(); }
    8b88:	bl	9d30 <serial6_available>
#endif
#if defined(HAS_KINETISK_UART5) || defined (HAS_KINETISK_LPUART0)
	if (Serial6.available()) serialEvent6();
    8b8c:	cbnz	r0, 8bc8 <yield+0x78>
#endif
	running = 0;
    8b8e:	movs	r3, #0
    8b90:	strb	r3, [r4, #0]

	static void runFromYield() {
		// First, check if yield was called from an interrupt
		// never call normal handler functions from any interrupt context
		uint32_t ipsr;
		__asm__ volatile("mrs %0, ipsr\n" : "=r" (ipsr)::);
    8b92:	mrs	r3, IPSR
		if (ipsr != 0) return;
    8b96:	cmp	r3, #0
    8b98:	bne.n	8b58 <yield+0x8>
	static EventResponder *lastInterrupt;
	static bool runningFromYield;
private:
	static bool disableInterrupts() {
		uint32_t primask;
		__asm__ volatile("mrs %0, primask\n" : "=r" (primask)::);
    8b9a:	mrs	r1, PRIMASK
		__disable_irq();
    8b9e:	cpsid	i
		uint32_t ipsr;
		__asm__ volatile("mrs %0, ipsr\n" : "=r" (ipsr)::);
		if (ipsr != 0) return;
		// Next, check if any events have been triggered
		bool irq = disableInterrupts();
		EventResponder *first = firstYield;
    8ba0:	ldr	r3, [pc, #100]	; (8c08 <yield+0xb8>)
    8ba2:	ldr	r0, [r3, #0]
		if (first == nullptr) {
    8ba4:	cbz	r0, 8bf2 <yield+0xa2>
			return;
		}
		// Finally, make sure we're not being recursively called,
		// which can happen if the user's function does anything
		// that calls yield.
		if (runningFromYield) {
    8ba6:	ldr	r4, [pc, #100]	; (8c0c <yield+0xbc>)
    8ba8:	ldrb	r2, [r4, #0]
    8baa:	cbnz	r2, 8bf2 <yield+0xa2>
			enableInterrupts(irq);
			return;
		}
		// Ok, update the runningFromYield flag and process event
		runningFromYield = true;
		firstYield = first->_next;
    8bac:	ldr	r5, [r0, #20]
    8bae:	str	r5, [r3, #0]
		if (runningFromYield) {
			enableInterrupts(irq);
			return;
		}
		// Ok, update the runningFromYield flag and process event
		runningFromYield = true;
    8bb0:	movs	r3, #1
    8bb2:	strb	r3, [r4, #0]
		firstYield = first->_next;
		if (firstYield) {
    8bb4:	cbz	r5, 8bfa <yield+0xaa>
			firstYield->_prev = nullptr;
    8bb6:	str	r2, [r5, #24]
		__asm__ volatile("mrs %0, primask\n" : "=r" (primask)::);
		__disable_irq();
		return (primask == 0) ? true : false;
	}
	static void enableInterrupts(bool doit) {
		if (doit) __enable_irq();
    8bb8:	cbnz	r1, 8bbc <yield+0x6c>
    8bba:	cpsie	i
			firstYield->_prev = nullptr;
		} else {
			lastYield = nullptr;
		}
		enableInterrupts(irq);
		first->_triggered = false;
    8bbc:	movs	r5, #0
    8bbe:	strb	r5, [r0, #29]
		(*(first->_function))(*first);
    8bc0:	ldr	r3, [r0, #8]
    8bc2:	blx	r3
		runningFromYield = false;
    8bc4:	strb	r5, [r4, #0]
    8bc6:	b.n	8b58 <yield+0x8>
#endif
#ifdef HAS_KINETISK_UART4
	if (Serial5.available()) serialEvent5();
#endif
#if defined(HAS_KINETISK_UART5) || defined (HAS_KINETISK_LPUART0)
	if (Serial6.available()) serialEvent6();
    8bc8:	bl	98e0 <serialEvent6()>
    8bcc:	b.n	8b8e <yield+0x3e>
	if (Serial3.available()) serialEvent3();
#ifdef HAS_KINETISK_UART3
	if (Serial4.available()) serialEvent4();
#endif
#ifdef HAS_KINETISK_UART4
	if (Serial5.available()) serialEvent5();
    8bce:	bl	8c14 <serialEvent5()>
    8bd2:	b.n	8b88 <yield+0x38>
	if (Serial.available()) serialEvent();
	if (Serial1.available()) serialEvent1();
	if (Serial2.available()) serialEvent2();
	if (Serial3.available()) serialEvent3();
#ifdef HAS_KINETISK_UART3
	if (Serial4.available()) serialEvent4();
    8bd4:	bl	953c <serialEvent4()>
    8bd8:	b.n	8b82 <yield+0x32>
	if (running) return; // TODO: does this need to be atomic?
	running = 1;
	if (Serial.available()) serialEvent();
	if (Serial1.available()) serialEvent1();
	if (Serial2.available()) serialEvent2();
	if (Serial3.available()) serialEvent3();
    8bda:	bl	a02c <serialEvent3()>
    8bde:	b.n	8b7c <yield+0x2c>

	if (running) return; // TODO: does this need to be atomic?
	running = 1;
	if (Serial.available()) serialEvent();
	if (Serial1.available()) serialEvent1();
	if (Serial2.available()) serialEvent2();
    8be0:	bl	9538 <serialEvent2()>
    8be4:	b.n	8b76 <yield+0x26>
	static uint8_t running=0;

	if (running) return; // TODO: does this need to be atomic?
	running = 1;
	if (Serial.available()) serialEvent();
	if (Serial1.available()) serialEvent1();
    8be6:	bl	a028 <serialEvent1()>
    8bea:	b.n	8b6e <yield+0x1e>
{
	static uint8_t running=0;

	if (running) return; // TODO: does this need to be atomic?
	running = 1;
	if (Serial.available()) serialEvent();
    8bec:	bl	8c40 <serialEvent()>
    8bf0:	b.n	8b66 <yield+0x16>
		__asm__ volatile("mrs %0, primask\n" : "=r" (primask)::);
		__disable_irq();
		return (primask == 0) ? true : false;
	}
	static void enableInterrupts(bool doit) {
		if (doit) __enable_irq();
    8bf2:	cmp	r1, #0
    8bf4:	bne.n	8b58 <yield+0x8>
    8bf6:	cpsie	i
    8bf8:	pop	{r3, r4, r5, pc}
		runningFromYield = true;
		firstYield = first->_next;
		if (firstYield) {
			firstYield->_prev = nullptr;
		} else {
			lastYield = nullptr;
    8bfa:	ldr	r3, [pc, #20]	; (8c10 <yield+0xc0>)
    8bfc:	str	r5, [r3, #0]
		__asm__ volatile("mrs %0, primask\n" : "=r" (primask)::);
		__disable_irq();
		return (primask == 0) ? true : false;
	}
	static void enableInterrupts(bool doit) {
		if (doit) __enable_irq();
    8bfe:	cmp	r1, #0
    8c00:	bne.n	8bbc <yield+0x6c>
    8c02:	b.n	8bba <yield+0x6a>
    8c04:	.word	0x20012b64
    8c08:	.word	0x20012b58
    8c0c:	.word	0x20012b5c
    8c10:	.word	0x20012b54

00008c14 <serialEvent5()>:
#ifdef HAS_KINETISK_UART4

HardwareSerial5 Serial5;

void serialEvent5() __attribute__((weak));
void serialEvent5() {}
    8c14:	bx	lr
    8c16:	nop

00008c18 <usb_serial_class::clear()>:
        virtual int read() { return usb_serial_getchar(); }
        virtual int peek() { return usb_serial_peekchar(); }
        virtual void flush() { usb_serial_flush_output(); }  // TODO: actually wait for data to leave USB...
        virtual void clear(void) { usb_serial_flush_input(); }
    8c18:	b.w	70d8 <usb_serial_flush_input>

00008c1c <usb_serial_class::peek()>:
		//}
	}
        void end() { /* TODO: flush output and shut down USB port */ };
        virtual int available() { return usb_serial_available(); }
        virtual int read() { return usb_serial_getchar(); }
        virtual int peek() { return usb_serial_peekchar(); }
    8c1c:	b.w	708c <usb_serial_peekchar>

00008c20 <usb_serial_class::read()>:
			//if ((uint32_t)(systick_millis_count - millis_begin) > 2500) break;
		//}
	}
        void end() { /* TODO: flush output and shut down USB port */ };
        virtual int available() { return usb_serial_available(); }
        virtual int read() { return usb_serial_getchar(); }
    8c20:	b.w	7044 <usb_serial_getchar>

00008c24 <usb_serial_class::available()>:
			// sketch still gets to run normally after this wait time.
			//if ((uint32_t)(systick_millis_count - millis_begin) > 2500) break;
		//}
	}
        void end() { /* TODO: flush output and shut down USB port */ };
        virtual int available() { return usb_serial_available(); }
    8c24:	b.w	70bc <usb_serial_available>

00008c28 <usb_serial_class::flush()>:
        virtual int read() { return usb_serial_getchar(); }
        virtual int peek() { return usb_serial_peekchar(); }
        virtual void flush() { usb_serial_flush_output(); }  // TODO: actually wait for data to leave USB...
    8c28:	b.w	7278 <usb_serial_flush_output>

00008c2c <usb_serial_class::availableForWrite()>:
        virtual size_t write(const uint8_t *buffer, size_t size) { return usb_serial_write(buffer, size); }
	size_t write(unsigned long n) { return write((uint8_t)n); }
	size_t write(long n) { return write((uint8_t)n); }
	size_t write(unsigned int n) { return write((uint8_t)n); }
	size_t write(int n) { return write((uint8_t)n); }
	virtual int availableForWrite() { return usb_serial_write_buffer_free(); }
    8c2c:	b.w	7230 <usb_serial_write_buffer_free>

00008c30 <usb_serial_class::write(unsigned char const*, unsigned int)>:
        virtual int read() { return usb_serial_getchar(); }
        virtual int peek() { return usb_serial_peekchar(); }
        virtual void flush() { usb_serial_flush_output(); }  // TODO: actually wait for data to leave USB...
        virtual void clear(void) { usb_serial_flush_input(); }
        virtual size_t write(uint8_t c) { return usb_serial_putchar(c); }
        virtual size_t write(const uint8_t *buffer, size_t size) { return usb_serial_write(buffer, size); }
    8c30:	mov	r0, r1
    8c32:	mov	r1, r2
    8c34:	b.w	7110 <usb_serial_write>

00008c38 <usb_serial_class::write(unsigned char)>:
        virtual int available() { return usb_serial_available(); }
        virtual int read() { return usb_serial_getchar(); }
        virtual int peek() { return usb_serial_peekchar(); }
        virtual void flush() { usb_serial_flush_output(); }  // TODO: actually wait for data to leave USB...
        virtual void clear(void) { usb_serial_flush_input(); }
        virtual size_t write(uint8_t c) { return usb_serial_putchar(c); }
    8c38:	mov	r0, r1
    8c3a:	b.w	7218 <usb_serial_putchar>
    8c3e:	nop

00008c40 <serialEvent()>:
#endif

#endif // F_CPU

void serialEvent() __attribute__((weak));
void serialEvent() {}
    8c40:	bx	lr
    8c42:	nop

00008c44 <Print::write(unsigned char const*, unsigned int)>:

#include <Arduino.h>


size_t Print::write(const uint8_t *buffer, size_t size)
{
    8c44:	push	{r3, r4, r5, r6, r7, lr}
	if (buffer == nullptr) return 0;
    8c46:	mov	r6, r1
    8c48:	cbz	r1, 8c68 <Print::write(unsigned char const*, unsigned int)+0x24>
	size_t count = 0;
	while (size--) count += write(*buffer++);
    8c4a:	cbz	r2, 8c6c <Print::write(unsigned char const*, unsigned int)+0x28>
    8c4c:	mov	r7, r0
    8c4e:	mov	r4, r2
    8c50:	movs	r5, #0
    8c52:	ldr	r3, [r7, #0]
    8c54:	ldrb.w	r1, [r6], #1
    8c58:	ldr	r3, [r3, #0]
    8c5a:	mov	r0, r7
    8c5c:	blx	r3
    8c5e:	subs	r4, #1
    8c60:	add	r5, r0
    8c62:	bne.n	8c52 <Print::write(unsigned char const*, unsigned int)+0xe>
    8c64:	mov	r0, r5
    8c66:	pop	{r3, r4, r5, r6, r7, pc}
#include <Arduino.h>


size_t Print::write(const uint8_t *buffer, size_t size)
{
	if (buffer == nullptr) return 0;
    8c68:	mov	r0, r1
    8c6a:	pop	{r3, r4, r5, r6, r7, pc}
    8c6c:	mov	r0, r2
	size_t count = 0;
	while (size--) count += write(*buffer++);
	return count;
}
    8c6e:	pop	{r3, r4, r5, r6, r7, pc}

00008c70 <Print::print(String const&)>:


size_t Print::print(const String &s)
{
    8c70:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
    8c74:	ldr	r4, [r1, #8]
    8c76:	sub	sp, #44	; 0x2c
	uint8_t buffer[33];
	size_t count = 0;
	unsigned int index = 0;
	unsigned int len = s.length();
	while (len > 0) {
    8c78:	cbz	r4, 8cb6 <Print::print(String const&)+0x46>
    8c7a:	movs	r5, #0
    8c7c:	mov	r6, r0
    8c7e:	mov	r9, r1
    8c80:	mov	r7, r5
		s.getBytes(buffer, sizeof(buffer), index);
    8c82:	mov	r3, r5
    8c84:	movs	r2, #33	; 0x21
    8c86:	add	r1, sp, #4
    8c88:	mov	r0, r9
    8c8a:	bl	9478 <String::getBytes(unsigned char*, unsigned int, unsigned int) const>
		unsigned int nbytes = len;
		if (nbytes > sizeof(buffer)-1) nbytes = sizeof(buffer)-1;
		index += nbytes;
		len -= nbytes;
		count += write(buffer, nbytes);
    8c8e:	ldr	r2, [r6, #0]
    8c90:	cmp	r4, #32
    8c92:	mov	r3, r4
    8c94:	it	cs
    8c96:	movcs	r3, #32
    8c98:	ldr.w	r8, [r2, #4]
    8c9c:	add	r1, sp, #4
    8c9e:	mov	r2, r3
    8ca0:	mov	r0, r6
	unsigned int len = s.length();
	while (len > 0) {
		s.getBytes(buffer, sizeof(buffer), index);
		unsigned int nbytes = len;
		if (nbytes > sizeof(buffer)-1) nbytes = sizeof(buffer)-1;
		index += nbytes;
    8ca2:	add	r5, r3
		len -= nbytes;
    8ca4:	subs	r4, r4, r3
		count += write(buffer, nbytes);
    8ca6:	blx	r8
    8ca8:	add	r7, r0
{
	uint8_t buffer[33];
	size_t count = 0;
	unsigned int index = 0;
	unsigned int len = s.length();
	while (len > 0) {
    8caa:	cmp	r4, #0
    8cac:	bne.n	8c82 <Print::print(String const&)+0x12>
		index += nbytes;
		len -= nbytes;
		count += write(buffer, nbytes);
	}
	return count;
}
    8cae:	mov	r0, r7
    8cb0:	add	sp, #44	; 0x2c
    8cb2:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}


size_t Print::print(const String &s)
{
	uint8_t buffer[33];
	size_t count = 0;
    8cb6:	mov	r7, r4
    8cb8:	b.n	8cae <Print::print(String const&)+0x3e>
    8cba:	nop

00008cbc <Print::println()>:
	return printNumber(n, 10, sign);
}


size_t Print::println(void)
{
    8cbc:	push	{lr}
	uint8_t buf[2]={'\r', '\n'};
    8cbe:	ldr	r2, [pc, #24]	; (8cd8 <Print::println()+0x1c>)
	return write(buf, 2);
    8cc0:	ldr	r3, [r0, #0]
}


size_t Print::println(void)
{
	uint8_t buf[2]={'\r', '\n'};
    8cc2:	ldrh	r2, [r2, #0]
	return write(buf, 2);
    8cc4:	ldr	r3, [r3, #4]
	return printNumber(n, 10, sign);
}


size_t Print::println(void)
{
    8cc6:	sub	sp, #12
	uint8_t buf[2]={'\r', '\n'};
	return write(buf, 2);
    8cc8:	add	r1, sp, #4
}


size_t Print::println(void)
{
	uint8_t buf[2]={'\r', '\n'};
    8cca:	strh.w	r2, [sp, #4]
	return write(buf, 2);
    8cce:	movs	r2, #2
    8cd0:	blx	r3
}
    8cd2:	add	sp, #12
    8cd4:	ldr.w	pc, [sp], #4
    8cd8:	.word	0x0009e138

00008cdc <_write>:

extern "C" {
__attribute__((weak))
int _write(int file, char *ptr, int len)
{
    8cdc:	push	{r4, lr}
	((class Print *)file)->write((uint8_t *)ptr, len);
    8cde:	ldr	r3, [r0, #0]
}

extern "C" {
__attribute__((weak))
int _write(int file, char *ptr, int len)
{
    8ce0:	mov	r4, r2
	((class Print *)file)->write((uint8_t *)ptr, len);
    8ce2:	ldr	r3, [r3, #4]
    8ce4:	blx	r3
	return len;
}
    8ce6:	mov	r0, r4
    8ce8:	pop	{r4, pc}
    8cea:	nop

00008cec <Print::printf(char const*, ...)>:
}

int Print::printf(const char *format, ...)
{
    8cec:	push	{r1, r2, r3}
    8cee:	push	{lr}
    8cf0:	sub	sp, #8
    8cf2:	add	r2, sp, #12
    8cf4:	ldr.w	r1, [r2], #4
	va_list ap;
	va_start(ap, format);
    8cf8:	str	r2, [sp, #4]
#ifdef __STRICT_ANSI__
	return 0;  // TODO: make this work with -std=c++0x
#else
	return vdprintf((int)this, format, ap);
    8cfa:	bl	d0a8 <vdprintf>
#endif
}
    8cfe:	add	sp, #8
    8d00:	ldr.w	lr, [sp], #4
    8d04:	add	sp, #12
    8d06:	bx	lr

00008d08 <Print::printNumber(unsigned long, unsigned char, unsigned char)>:
}

#else

size_t Print::printNumber(unsigned long n, uint8_t base, uint8_t sign)
{
    8d08:	push	{r4, r5, r6, r7, lr}
    8d0a:	mov	r7, r0
    8d0c:	sub	sp, #44	; 0x2c
	uint8_t digit, i;

	// TODO: make these checks as inline, since base is
	// almost always a constant.  base = 0 (BYTE) should
	// inline as a call directly to write()
	if (base == 0) {
    8d0e:	cmp	r2, #0
    8d10:	beq.n	8d7a <Print::printNumber(unsigned long, unsigned char, unsigned char)+0x72>
		return write((uint8_t)n);
	} else if (base == 1) {
		base = 10;
    8d12:	cmp	r2, #1
    8d14:	it	eq
    8d16:	moveq	r2, #10
	}


	if (n == 0) {
    8d18:	cbz	r1, 8d70 <Print::printNumber(unsigned long, unsigned char, unsigned char)+0x68>
    8d1a:	movs	r4, #33	; 0x21
    8d1c:	b.n	8d20 <Print::printNumber(unsigned long, unsigned char, unsigned char)+0x18>
		while (1) {
			digit = n % base;
			buf[i] = ((digit < 10) ? '0' + digit : 'A' + digit - 10);
			n /= base;
			if (n == 0) break;
			i--;
    8d1e:	uxtb	r4, r6
		buf[sizeof(buf) - 1] = '0';
		i = sizeof(buf) - 1;
	} else {
		i = sizeof(buf) - 1;
		while (1) {
			digit = n % base;
    8d20:	udiv	r5, r1, r2
    8d24:	mls	r1, r2, r5, r1
    8d28:	uxtb	r0, r1
			buf[i] = ((digit < 10) ? '0' + digit : 'A' + digit - 10);
    8d2a:	cmp	r1, #9
    8d2c:	add.w	r1, r0, #48	; 0x30
    8d30:	it	ls
    8d32:	uxtbls	r0, r1
    8d34:	add	r1, sp, #40	; 0x28
    8d36:	it	hi
    8d38:	addhi	r0, #55	; 0x37
    8d3a:	add	r1, r4
    8d3c:	it	hi
    8d3e:	uxtbhi	r0, r0
    8d40:	strb.w	r0, [r1, #-36]
			n /= base;
			if (n == 0) break;
			i--;
    8d44:	subs	r6, r4, #1
		i = sizeof(buf) - 1;
		while (1) {
			digit = n % base;
			buf[i] = ((digit < 10) ? '0' + digit : 'A' + digit - 10);
			n /= base;
			if (n == 0) break;
    8d46:	mov	r1, r5
    8d48:	cmp	r5, #0
    8d4a:	bne.n	8d1e <Print::printNumber(unsigned long, unsigned char, unsigned char)+0x16>
			i--;
		}
	}
	if (sign) {
    8d4c:	cbz	r3, 8d5c <Print::printNumber(unsigned long, unsigned char, unsigned char)+0x54>
		i--;
    8d4e:	subs	r4, #1
    8d50:	uxtb	r4, r4
		buf[i] = '-';
    8d52:	add	r3, sp, #40	; 0x28
    8d54:	add	r3, r4
    8d56:	movs	r2, #45	; 0x2d
    8d58:	strb.w	r2, [r3, #-36]
	}
	return write(buf + i, sizeof(buf) - i);
    8d5c:	ldr	r3, [r7, #0]
    8d5e:	add	r2, sp, #4
    8d60:	adds	r1, r2, r4
    8d62:	ldr	r3, [r3, #4]
    8d64:	mov	r0, r7
    8d66:	rsb	r2, r4, #34	; 0x22
    8d6a:	blx	r3
}
    8d6c:	add	sp, #44	; 0x2c
    8d6e:	pop	{r4, r5, r6, r7, pc}
		base = 10;
	}


	if (n == 0) {
		buf[sizeof(buf) - 1] = '0';
    8d70:	movs	r2, #48	; 0x30
    8d72:	strb.w	r2, [sp, #37]	; 0x25
		i = sizeof(buf) - 1;
    8d76:	movs	r4, #33	; 0x21
    8d78:	b.n	8d4c <Print::printNumber(unsigned long, unsigned char, unsigned char)+0x44>

	// TODO: make these checks as inline, since base is
	// almost always a constant.  base = 0 (BYTE) should
	// inline as a call directly to write()
	if (base == 0) {
		return write((uint8_t)n);
    8d7a:	ldr	r3, [r0, #0]
    8d7c:	uxtb	r1, r1
    8d7e:	ldr	r3, [r3, #0]
    8d80:	blx	r3
	if (sign) {
		i--;
		buf[i] = '-';
	}
	return write(buf + i, sizeof(buf) - i);
}
    8d82:	add	sp, #44	; 0x2c
    8d84:	pop	{r4, r5, r6, r7, pc}
    8d86:	nop

00008d88 <Print::print(long)>:

size_t Print::print(long n)
{
	uint8_t sign=0;

	if (n < 0) {
    8d88:	cmp	r1, #0
		sign = '-';
		n = -n;
    8d8a:	itte	lt
    8d8c:	neglt	r1, r1
size_t Print::print(long n)
{
	uint8_t sign=0;

	if (n < 0) {
		sign = '-';
    8d8e:	movlt	r3, #45	; 0x2d
}


size_t Print::print(long n)
{
	uint8_t sign=0;
    8d90:	movge	r3, #0

	if (n < 0) {
		sign = '-';
		n = -n;
	}
	return printNumber(n, 10, sign);
    8d92:	movs	r2, #10
    8d94:	b.w	8d08 <Print::printNumber(unsigned long, unsigned char, unsigned char)>

00008d98 <copy_to_buffers(unsigned long const*, short*, short*, unsigned int)>:
	usb_audio_sync_feedback = feedback_accumulator >> 8;
}

static void copy_to_buffers(const uint32_t *src, int16_t *left, int16_t *right, unsigned int len)
{
	uint32_t *target = (uint32_t*) src + len; 
    8d98:	add.w	r3, r0, r3, lsl #2
	while ((src < target) && (((uintptr_t) left & 0x02) != 0)) {
    8d9c:	cmp	r0, r3
	update_responsibility = false;
	usb_audio_sync_feedback = feedback_accumulator >> 8;
}

static void copy_to_buffers(const uint32_t *src, int16_t *left, int16_t *right, unsigned int len)
{
    8d9e:	push	{r4, r5, r6, r7, lr}
	uint32_t *target = (uint32_t*) src + len; 
	while ((src < target) && (((uintptr_t) left & 0x02) != 0)) {
    8da0:	bcc.n	8db8 <copy_to_buffers(unsigned long const*, short*, short*, unsigned int)+0x20>
    8da2:	b.n	8e00 <copy_to_buffers(unsigned long const*, short*, short*, unsigned int)+0x68>
		uint32_t n = *src++;
    8da4:	ldr.w	r4, [r0], #4
		*left++ = n & 0xFFFF;
    8da8:	strh.w	r4, [r1], #2
}

static void copy_to_buffers(const uint32_t *src, int16_t *left, int16_t *right, unsigned int len)
{
	uint32_t *target = (uint32_t*) src + len; 
	while ((src < target) && (((uintptr_t) left & 0x02) != 0)) {
    8dac:	cmp	r3, r0
		uint32_t n = *src++;
		*left++ = n & 0xFFFF;
		*right++ = n >> 16;
    8dae:	mov.w	r4, r4, lsr #16
    8db2:	strh.w	r4, [r2], #2
}

static void copy_to_buffers(const uint32_t *src, int16_t *left, int16_t *right, unsigned int len)
{
	uint32_t *target = (uint32_t*) src + len; 
	while ((src < target) && (((uintptr_t) left & 0x02) != 0)) {
    8db6:	bls.n	8e00 <copy_to_buffers(unsigned long const*, short*, short*, unsigned int)+0x68>
    8db8:	lsls	r4, r1, #30
    8dba:	bmi.n	8da4 <copy_to_buffers(unsigned long const*, short*, short*, unsigned int)+0xc>
		uint32_t n = *src++;
		*left++ = n & 0xFFFF;
		*right++ = n >> 16;
	}

	while ((src < target - 2)) {
    8dbc:	sub.w	lr, r3, #8
    8dc0:	cmp	r0, lr
    8dc2:	bcs.n	8dea <copy_to_buffers(unsigned long const*, short*, short*, unsigned int)+0x52>
		uint32_t n1 = *src++;
    8dc4:	ldr.w	r7, [r0], #8
		uint32_t n = *src++;
    8dc8:	ldr.w	r6, [r0, #-4]
		*(uint32_t *)left = (n1 & 0xFFFF) | ((n & 0xFFFF) << 16);
		left+=2;
		*(uint32_t *)right = (n1 >> 16) | ((n & 0xFFFF0000)) ;
    8dcc:	lsrs	r4, r6, #16
    8dce:	lsls	r4, r4, #16
	}

	while ((src < target - 2)) {
		uint32_t n1 = *src++;
		uint32_t n = *src++;
		*(uint32_t *)left = (n1 & 0xFFFF) | ((n & 0xFFFF) << 16);
    8dd0:	uxth	r5, r7
		left+=2;
		*(uint32_t *)right = (n1 >> 16) | ((n & 0xFFFF0000)) ;
    8dd2:	orr.w	r4, r4, r7, lsr #16
	}

	while ((src < target - 2)) {
		uint32_t n1 = *src++;
		uint32_t n = *src++;
		*(uint32_t *)left = (n1 & 0xFFFF) | ((n & 0xFFFF) << 16);
    8dd6:	orr.w	r5, r5, r6, lsl #16
		uint32_t n = *src++;
		*left++ = n & 0xFFFF;
		*right++ = n >> 16;
	}

	while ((src < target - 2)) {
    8dda:	cmp	r0, lr
		uint32_t n1 = *src++;
		uint32_t n = *src++;
		*(uint32_t *)left = (n1 & 0xFFFF) | ((n & 0xFFFF) << 16);
    8ddc:	str.w	r5, [r1], #4
		left+=2;
		*(uint32_t *)right = (n1 >> 16) | ((n & 0xFFFF0000)) ;
    8de0:	str.w	r4, [r2], #4
		uint32_t n = *src++;
		*left++ = n & 0xFFFF;
		*right++ = n >> 16;
	}

	while ((src < target - 2)) {
    8de4:	bcc.n	8dc4 <copy_to_buffers(unsigned long const*, short*, short*, unsigned int)+0x2c>
		left+=2;
		*(uint32_t *)right = (n1 >> 16) | ((n & 0xFFFF0000)) ;
		right+=2;
	}

	while ((src < target)) {
    8de6:	cmp	r3, r0
    8de8:	bls.n	8e0a <copy_to_buffers(unsigned long const*, short*, short*, unsigned int)+0x72>
		uint32_t n = *src++;
    8dea:	ldr.w	r4, [r0], #4
		*left++ = n & 0xFFFF;
    8dee:	strh.w	r4, [r1], #2
		left+=2;
		*(uint32_t *)right = (n1 >> 16) | ((n & 0xFFFF0000)) ;
		right+=2;
	}

	while ((src < target)) {
    8df2:	cmp	r3, r0
		uint32_t n = *src++;
		*left++ = n & 0xFFFF;
		*right++ = n >> 16;
    8df4:	mov.w	r4, r4, lsr #16
    8df8:	strh.w	r4, [r2], #2
		left+=2;
		*(uint32_t *)right = (n1 >> 16) | ((n & 0xFFFF0000)) ;
		right+=2;
	}

	while ((src < target)) {
    8dfc:	bhi.n	8dea <copy_to_buffers(unsigned long const*, short*, short*, unsigned int)+0x52>
    8dfe:	pop	{r4, r5, r6, r7, pc}
		uint32_t n = *src++;
		*left++ = n & 0xFFFF;
		*right++ = n >> 16;
	}

	while ((src < target - 2)) {
    8e00:	sub.w	lr, r3, #8
    8e04:	cmp	r0, lr
    8e06:	bcc.n	8dc4 <copy_to_buffers(unsigned long const*, short*, short*, unsigned int)+0x2c>
    8e08:	pop	{r4, r5, r6, r7, pc}
    8e0a:	pop	{r4, r5, r6, r7, pc}

00008e0c <AudioInputUSB::update()>:
	}
	AudioInputUSB::incoming_count = count;
}

void AudioInputUSB::update(void)
{
    8e0c:	push	{r3, r4, r5, r6, r7, lr}
    8e0e:	mov	r6, r0
	audio_block_t *left, *right;

	__disable_irq();
    8e10:	cpsid	i
	left = ready_left;
	ready_left = NULL;
	right = ready_right;
	ready_right = NULL;
	uint16_t c = incoming_count;
    8e12:	ldr	r3, [pc, #108]	; (8e80 <AudioInputUSB::update()+0x74>)
void AudioInputUSB::update(void)
{
	audio_block_t *left, *right;

	__disable_irq();
	left = ready_left;
    8e14:	ldr	r7, [pc, #108]	; (8e84 <AudioInputUSB::update()+0x78>)
	ready_left = NULL;
	right = ready_right;
    8e16:	ldr	r0, [pc, #112]	; (8e88 <AudioInputUSB::update()+0x7c>)
	ready_right = NULL;
	uint16_t c = incoming_count;
	uint8_t f = receive_flag;
    8e18:	ldr	r1, [pc, #112]	; (8e8c <AudioInputUSB::update()+0x80>)
	__disable_irq();
	left = ready_left;
	ready_left = NULL;
	right = ready_right;
	ready_right = NULL;
	uint16_t c = incoming_count;
    8e1a:	ldrh	r2, [r3, #0]
	audio_block_t *left, *right;

	__disable_irq();
	left = ready_left;
	ready_left = NULL;
	right = ready_right;
    8e1c:	ldr	r4, [r0, #0]
void AudioInputUSB::update(void)
{
	audio_block_t *left, *right;

	__disable_irq();
	left = ready_left;
    8e1e:	ldr	r5, [r7, #0]
	ready_left = NULL;
    8e20:	movs	r3, #0
	right = ready_right;
	ready_right = NULL;
    8e22:	str	r3, [r0, #0]
{
	audio_block_t *left, *right;

	__disable_irq();
	left = ready_left;
	ready_left = NULL;
    8e24:	str	r3, [r7, #0]
	right = ready_right;
	ready_right = NULL;
	uint16_t c = incoming_count;
	uint8_t f = receive_flag;
    8e26:	ldrb	r0, [r1, #0]
	receive_flag = 0;
    8e28:	strb	r3, [r1, #0]
	__enable_irq();
    8e2a:	cpsie	i
	if (f) {
    8e2c:	cbz	r0, 8e56 <AudioInputUSB::update()+0x4a>
		int diff = AUDIO_BLOCK_SAMPLES/2 - (int)c;
		feedback_accumulator += diff / 3;
    8e2e:	ldr	r7, [pc, #96]	; (8e90 <AudioInputUSB::update()+0x84>)
    8e30:	ldr	r0, [pc, #96]	; (8e94 <AudioInputUSB::update()+0x88>)
    8e32:	ldr	r1, [r7, #0]
		uint32_t feedback = (feedback_accumulator >> 8) + diff * 100;
#ifdef MACOSX_ADAPTIVE_LIMIT
		if (feedback > 722698) feedback = 722698;
#endif
		usb_audio_sync_feedback = feedback;
    8e34:	ldr.w	lr, [pc, #96]	; 8e98 <AudioInputUSB::update()+0x8c>
	uint16_t c = incoming_count;
	uint8_t f = receive_flag;
	receive_flag = 0;
	__enable_irq();
	if (f) {
		int diff = AUDIO_BLOCK_SAMPLES/2 - (int)c;
    8e38:	rsb	r3, r2, #64	; 0x40
		feedback_accumulator += diff / 3;
    8e3c:	smull	r0, r2, r0, r3
    8e40:	sub.w	r2, r2, r3, asr #31
    8e44:	add	r1, r2
		uint32_t feedback = (feedback_accumulator >> 8) + diff * 100;
#ifdef MACOSX_ADAPTIVE_LIMIT
		if (feedback > 722698) feedback = 722698;
#endif
		usb_audio_sync_feedback = feedback;
    8e46:	movs	r2, #100	; 0x64
    8e48:	mul.w	r3, r2, r3
    8e4c:	add.w	r3, r3, r1, lsr #8
	uint8_t f = receive_flag;
	receive_flag = 0;
	__enable_irq();
	if (f) {
		int diff = AUDIO_BLOCK_SAMPLES/2 - (int)c;
		feedback_accumulator += diff / 3;
    8e50:	str	r1, [r7, #0]
		uint32_t feedback = (feedback_accumulator >> 8) + diff * 100;
#ifdef MACOSX_ADAPTIVE_LIMIT
		if (feedback > 722698) feedback = 722698;
#endif
		usb_audio_sync_feedback = feedback;
    8e52:	str.w	r3, [lr]
	//serial_print(".");
	if (!left || !right) {
		//serial_print("#"); // buffer underrun - PC sending too slow
		//if (f) feedback_accumulator += 10 << 8;
	}
	if (left) {
    8e56:	cbz	r5, 8e68 <AudioInputUSB::update()+0x5c>
		transmit(left, 0);
    8e58:	mov	r0, r6
    8e5a:	movs	r2, #0
    8e5c:	mov	r1, r5
    8e5e:	bl	96b8 <AudioStream::transmit(audio_block_struct*, unsigned char)>
		release(left);
    8e62:	mov	r0, r5
    8e64:	bl	9664 <AudioStream::release(audio_block_struct*)>
	}
	if (right) {
    8e68:	cbz	r4, 8e7e <AudioInputUSB::update()+0x72>
		transmit(right, 1);
    8e6a:	mov	r0, r6
    8e6c:	mov	r1, r4
    8e6e:	movs	r2, #1
    8e70:	bl	96b8 <AudioStream::transmit(audio_block_struct*, unsigned char)>
		release(right);
    8e74:	mov	r0, r4
	}
}
    8e76:	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
		transmit(left, 0);
		release(left);
	}
	if (right) {
		transmit(right, 1);
		release(right);
    8e7a:	b.w	9664 <AudioStream::release(audio_block_struct*)>
    8e7e:	pop	{r3, r4, r5, r6, r7, pc}
    8e80:	.word	0x20012b98
    8e84:	.word	0x20012b88
    8e88:	.word	0x20012b70
    8e8c:	.word	0x20012b84
    8e90:	.word	0x20008058
    8e94:	.word	0x55555556
    8e98:	.word	0x200073d0

00008e9c <AudioOutputUSB::update()>:
		len--;
	}
}

void AudioOutputUSB::update(void)
{
    8e9c:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	audio_block_t *left, *right;

	// TODO: we shouldn't be writing to these......
	//left = receiveReadOnly(0); // input 0 = left channel
	//right = receiveReadOnly(1); // input 1 = right channel
	left = receiveWritable(0); // input 0 = left channel
    8ea0:	movs	r1, #0
		len--;
	}
}

void AudioOutputUSB::update(void)
{
    8ea2:	mov	r4, r0
	audio_block_t *left, *right;

	// TODO: we shouldn't be writing to these......
	//left = receiveReadOnly(0); // input 0 = left channel
	//right = receiveReadOnly(1); // input 1 = right channel
	left = receiveWritable(0); // input 0 = left channel
    8ea4:	bl	9704 <AudioStream::receiveWritable(unsigned int)>
	right = receiveWritable(1); // input 1 = right channel
    8ea8:	movs	r1, #1
	audio_block_t *left, *right;

	// TODO: we shouldn't be writing to these......
	//left = receiveReadOnly(0); // input 0 = left channel
	//right = receiveReadOnly(1); // input 1 = right channel
	left = receiveWritable(0); // input 0 = left channel
    8eaa:	mov	r5, r0
	right = receiveWritable(1); // input 1 = right channel
    8eac:	mov	r0, r4
    8eae:	bl	9704 <AudioStream::receiveWritable(unsigned int)>
	if (usb_audio_transmit_setting == 0) {
    8eb2:	ldr	r3, [pc, #236]	; (8fa0 <AudioOutputUSB::update()+0x104>)
    8eb4:	ldrb	r3, [r3, #0]

	// TODO: we shouldn't be writing to these......
	//left = receiveReadOnly(0); // input 0 = left channel
	//right = receiveReadOnly(1); // input 1 = right channel
	left = receiveWritable(0); // input 0 = left channel
	right = receiveWritable(1); // input 1 = right channel
    8eb6:	mov	r4, r0
	if (usb_audio_transmit_setting == 0) {
    8eb8:	cbnz	r3, 8f0c <AudioOutputUSB::update()+0x70>
		if (left) release(left);
    8eba:	cbz	r5, 8ec2 <AudioOutputUSB::update()+0x26>
    8ebc:	mov	r0, r5
    8ebe:	bl	9664 <AudioStream::release(audio_block_struct*)>
		if (right) release(right);
    8ec2:	cbz	r4, 8eca <AudioOutputUSB::update()+0x2e>
    8ec4:	mov	r0, r4
    8ec6:	bl	9664 <AudioStream::release(audio_block_struct*)>
		if (left_1st) { release(left_1st); left_1st = NULL; }
    8eca:	ldr	r4, [pc, #216]	; (8fa4 <AudioOutputUSB::update()+0x108>)
    8ecc:	ldr	r0, [r4, #0]
    8ece:	cbz	r0, 8ed8 <AudioOutputUSB::update()+0x3c>
    8ed0:	bl	9664 <AudioStream::release(audio_block_struct*)>
    8ed4:	movs	r3, #0
    8ed6:	str	r3, [r4, #0]
		if (left_2nd) { release(left_2nd); left_2nd = NULL; }
    8ed8:	ldr	r4, [pc, #204]	; (8fa8 <AudioOutputUSB::update()+0x10c>)
    8eda:	ldr	r0, [r4, #0]
    8edc:	cbz	r0, 8ee6 <AudioOutputUSB::update()+0x4a>
    8ede:	bl	9664 <AudioStream::release(audio_block_struct*)>
    8ee2:	movs	r3, #0
    8ee4:	str	r3, [r4, #0]
		if (right_1st) { release(right_1st); right_1st = NULL; }
    8ee6:	ldr	r4, [pc, #196]	; (8fac <AudioOutputUSB::update()+0x110>)
    8ee8:	ldr	r0, [r4, #0]
    8eea:	cbz	r0, 8ef4 <AudioOutputUSB::update()+0x58>
    8eec:	bl	9664 <AudioStream::release(audio_block_struct*)>
    8ef0:	movs	r3, #0
    8ef2:	str	r3, [r4, #0]
		if (right_2nd) { release(right_2nd); right_2nd = NULL; }
    8ef4:	ldr	r4, [pc, #184]	; (8fb0 <AudioOutputUSB::update()+0x114>)
    8ef6:	ldr	r0, [r4, #0]
    8ef8:	cbz	r0, 8f02 <AudioOutputUSB::update()+0x66>
    8efa:	bl	9664 <AudioStream::release(audio_block_struct*)>
    8efe:	movs	r3, #0
    8f00:	str	r3, [r4, #0]
		offset_1st = 0;
    8f02:	ldr	r3, [pc, #176]	; (8fb4 <AudioOutputUSB::update()+0x118>)
    8f04:	movs	r2, #0
    8f06:	strh	r2, [r3, #0]
		return;
    8f08:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	}
	if (left == NULL) {
    8f0c:	cbz	r5, 8f5c <AudioOutputUSB::update()+0xc0>
			if (right) release(right);
			return;
		}
		memset(left->data, 0, sizeof(left->data));
	}
	if (right == NULL) {
    8f0e:	cmp	r4, #0
    8f10:	beq.n	8f72 <AudioOutputUSB::update()+0xd6>
			release(left);
			return;
		}
		memset(right->data, 0, sizeof(right->data));
	}
	__disable_irq();
    8f12:	cpsid	i
	if (left_1st == NULL) {
    8f14:	ldr	r3, [pc, #140]	; (8fa4 <AudioOutputUSB::update()+0x108>)
    8f16:	ldr	r0, [r3, #0]
    8f18:	cbz	r0, 8f50 <AudioOutputUSB::update()+0xb4>
		left_1st = left;
		right_1st = right;
		offset_1st = 0;
	} else if (left_2nd == NULL) {
    8f1a:	ldr	r2, [pc, #140]	; (8fa8 <AudioOutputUSB::update()+0x10c>)
    8f1c:	ldr	r1, [r2, #0]
    8f1e:	cbz	r1, 8f48 <AudioOutputUSB::update()+0xac>
	} else {
		// buffer overrun - PC is consuming too slowly
		audio_block_t *discard1 = left_1st;
		left_1st = left_2nd;
		left_2nd = left;
		audio_block_t *discard2 = right_1st;
    8f20:	ldr	r7, [pc, #136]	; (8fac <AudioOutputUSB::update()+0x110>)
		right_1st = right_2nd;
    8f22:	ldr	r6, [pc, #140]	; (8fb0 <AudioOutputUSB::update()+0x114>)
		left_2nd = left;
		right_2nd = right;
	} else {
		// buffer overrun - PC is consuming too slowly
		audio_block_t *discard1 = left_1st;
		left_1st = left_2nd;
    8f24:	str	r1, [r3, #0]
		left_2nd = left;
		audio_block_t *discard2 = right_1st;
    8f26:	ldr.w	r8, [r7]
		right_1st = right_2nd;
		right_2nd = right;
		offset_1st = 0; // TODO: discard part of this data?
    8f2a:	ldr	r3, [pc, #136]	; (8fb4 <AudioOutputUSB::update()+0x118>)
		right_2nd = right;
	} else {
		// buffer overrun - PC is consuming too slowly
		audio_block_t *discard1 = left_1st;
		left_1st = left_2nd;
		left_2nd = left;
    8f2c:	str	r5, [r2, #0]
		audio_block_t *discard2 = right_1st;
		right_1st = right_2nd;
    8f2e:	ldr	r2, [r6, #0]
    8f30:	str	r2, [r7, #0]
		right_2nd = right;
		offset_1st = 0; // TODO: discard part of this data?
    8f32:	movs	r2, #0
		audio_block_t *discard1 = left_1st;
		left_1st = left_2nd;
		left_2nd = left;
		audio_block_t *discard2 = right_1st;
		right_1st = right_2nd;
		right_2nd = right;
    8f34:	str	r4, [r6, #0]
		offset_1st = 0; // TODO: discard part of this data?
    8f36:	strh	r2, [r3, #0]
		//serial_print("*");
		release(discard1);
    8f38:	bl	9664 <AudioStream::release(audio_block_struct*)>
		release(discard2);
    8f3c:	mov	r0, r8
    8f3e:	bl	9664 <AudioStream::release(audio_block_struct*)>
	}
	__enable_irq();
    8f42:	cpsie	i
    8f44:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		left_1st = left;
		right_1st = right;
		offset_1st = 0;
	} else if (left_2nd == NULL) {
		left_2nd = left;
		right_2nd = right;
    8f48:	ldr	r3, [pc, #100]	; (8fb0 <AudioOutputUSB::update()+0x114>)
	if (left_1st == NULL) {
		left_1st = left;
		right_1st = right;
		offset_1st = 0;
	} else if (left_2nd == NULL) {
		left_2nd = left;
    8f4a:	str	r5, [r2, #0]
		right_2nd = right;
    8f4c:	str	r4, [r3, #0]
    8f4e:	b.n	8f42 <AudioOutputUSB::update()+0xa6>
		memset(right->data, 0, sizeof(right->data));
	}
	__disable_irq();
	if (left_1st == NULL) {
		left_1st = left;
		right_1st = right;
    8f50:	ldr	r1, [pc, #88]	; (8fac <AudioOutputUSB::update()+0x110>)
		offset_1st = 0;
    8f52:	ldr	r2, [pc, #96]	; (8fb4 <AudioOutputUSB::update()+0x118>)
		}
		memset(right->data, 0, sizeof(right->data));
	}
	__disable_irq();
	if (left_1st == NULL) {
		left_1st = left;
    8f54:	str	r5, [r3, #0]
		right_1st = right;
    8f56:	str	r4, [r1, #0]
		offset_1st = 0;
    8f58:	strh	r0, [r2, #0]
    8f5a:	b.n	8f42 <AudioOutputUSB::update()+0xa6>
		if (right_2nd) { release(right_2nd); right_2nd = NULL; }
		offset_1st = 0;
		return;
	}
	if (left == NULL) {
		left = allocate();
    8f5c:	bl	95bc <AudioStream::allocate()>
		if (left == NULL) {
    8f60:	mov	r5, r0
    8f62:	cbz	r0, 8f88 <AudioOutputUSB::update()+0xec>
			if (right) release(right);
			return;
		}
		memset(left->data, 0, sizeof(left->data));
    8f64:	mov.w	r2, #256	; 0x100
    8f68:	movs	r1, #0
    8f6a:	adds	r0, #4
    8f6c:	bl	c110 <memset>
    8f70:	b.n	8f0e <AudioOutputUSB::update()+0x72>
	}
	if (right == NULL) {
		right = allocate();
    8f72:	bl	95bc <AudioStream::allocate()>
		if (right == NULL) {
    8f76:	mov	r4, r0
    8f78:	cbz	r0, 8f96 <AudioOutputUSB::update()+0xfa>
			release(left);
			return;
		}
		memset(right->data, 0, sizeof(right->data));
    8f7a:	mov.w	r2, #256	; 0x100
    8f7e:	movs	r1, #0
    8f80:	adds	r0, #4
    8f82:	bl	c110 <memset>
    8f86:	b.n	8f12 <AudioOutputUSB::update()+0x76>
		return;
	}
	if (left == NULL) {
		left = allocate();
		if (left == NULL) {
			if (right) release(right);
    8f88:	cmp	r4, #0
    8f8a:	beq.n	8f44 <AudioOutputUSB::update()+0xa8>
    8f8c:	mov	r0, r4
		//serial_print("*");
		release(discard1);
		release(discard2);
	}
	__enable_irq();
}
    8f8e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
		return;
	}
	if (left == NULL) {
		left = allocate();
		if (left == NULL) {
			if (right) release(right);
    8f92:	b.w	9664 <AudioStream::release(audio_block_struct*)>
		memset(left->data, 0, sizeof(left->data));
	}
	if (right == NULL) {
		right = allocate();
		if (right == NULL) {
			release(left);
    8f96:	mov	r0, r5
		//serial_print("*");
		release(discard1);
		release(discard2);
	}
	__enable_irq();
}
    8f98:	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
		memset(left->data, 0, sizeof(left->data));
	}
	if (right == NULL) {
		right = allocate();
		if (right == NULL) {
			release(left);
    8f9c:	b.w	9664 <AudioStream::release(audio_block_struct*)>
    8fa0:	.word	0x20012b6e
    8fa4:	.word	0x20012b74
    8fa8:	.word	0x20012b94
    8fac:	.word	0x20012b8c
    8fb0:	.word	0x20012b78
    8fb4:	.word	0x20012b6c

00008fb8 <AudioInputUSB::begin()>:
	// TODO: update responsibility is tough, partly because the USB
	// interrupts aren't sychronous to the audio library block size,
	// but also because the PC may stop transmitting data, which
	// means we no longer get receive callbacks from usb_dev.
	update_responsibility = false;
	usb_audio_sync_feedback = feedback_accumulator >> 8;
    8fb8:	ldr	r3, [pc, #44]	; (8fe8 <AudioInputUSB::begin()+0x30>)
	incoming_count = 0;
	incoming_left = NULL;
	incoming_right = NULL;
	ready_left = NULL;
	ready_right = NULL;
	receive_flag = 0;
    8fba:	ldr	r1, [pc, #48]	; (8fec <AudioInputUSB::begin()+0x34>)
	// TODO: update responsibility is tough, partly because the USB
	// interrupts aren't sychronous to the audio library block size,
	// but also because the PC may stop transmitting data, which
	// means we no longer get receive callbacks from usb_dev.
	update_responsibility = false;
	usb_audio_sync_feedback = feedback_accumulator >> 8;
    8fbc:	ldr	r3, [r3, #0]
{
	incoming_count = 0;
	incoming_left = NULL;
	incoming_right = NULL;
	ready_left = NULL;
	ready_right = NULL;
    8fbe:	ldr	r0, [pc, #48]	; (8ff0 <AudioInputUSB::begin()+0x38>)
	// update_responsibility = update_setup();
	// TODO: update responsibility is tough, partly because the USB
	// interrupts aren't sychronous to the audio library block size,
	// but also because the PC may stop transmitting data, which
	// means we no longer get receive callbacks from usb_dev.
	update_responsibility = false;
    8fc0:	ldr	r2, [pc, #48]	; (8ff4 <AudioInputUSB::begin()+0x3c>)
uint8_t usb_audio_receive_setting=0;

static uint32_t feedback_accumulator = 185042824;

void AudioInputUSB::begin(void)
{
    8fc2:	push	{r4, r5, r6, r7, lr}
	// TODO: update responsibility is tough, partly because the USB
	// interrupts aren't sychronous to the audio library block size,
	// but also because the PC may stop transmitting data, which
	// means we no longer get receive callbacks from usb_dev.
	update_responsibility = false;
	usb_audio_sync_feedback = feedback_accumulator >> 8;
    8fc4:	ldr.w	lr, [pc, #64]	; 9008 <AudioInputUSB::begin()+0x50>

static uint32_t feedback_accumulator = 185042824;

void AudioInputUSB::begin(void)
{
	incoming_count = 0;
    8fc8:	ldr	r7, [pc, #44]	; (8ff8 <AudioInputUSB::begin()+0x40>)
	incoming_left = NULL;
    8fca:	ldr	r6, [pc, #48]	; (8ffc <AudioInputUSB::begin()+0x44>)
	incoming_right = NULL;
    8fcc:	ldr	r5, [pc, #48]	; (9000 <AudioInputUSB::begin()+0x48>)
	ready_left = NULL;
    8fce:	ldr	r4, [pc, #52]	; (9004 <AudioInputUSB::begin()+0x4c>)
	// TODO: update responsibility is tough, partly because the USB
	// interrupts aren't sychronous to the audio library block size,
	// but also because the PC may stop transmitting data, which
	// means we no longer get receive callbacks from usb_dev.
	update_responsibility = false;
	usb_audio_sync_feedback = feedback_accumulator >> 8;
    8fd0:	lsrs	r3, r3, #8
    8fd2:	str.w	r3, [lr]

static uint32_t feedback_accumulator = 185042824;

void AudioInputUSB::begin(void)
{
	incoming_count = 0;
    8fd6:	movs	r3, #0
	incoming_left = NULL;
	incoming_right = NULL;
	ready_left = NULL;
	ready_right = NULL;
	receive_flag = 0;
    8fd8:	strb	r3, [r1, #0]

static uint32_t feedback_accumulator = 185042824;

void AudioInputUSB::begin(void)
{
	incoming_count = 0;
    8fda:	strh	r3, [r7, #0]
	incoming_left = NULL;
    8fdc:	str	r3, [r6, #0]
	incoming_right = NULL;
    8fde:	str	r3, [r5, #0]
	ready_left = NULL;
    8fe0:	str	r3, [r4, #0]
	ready_right = NULL;
    8fe2:	str	r3, [r0, #0]
	// update_responsibility = update_setup();
	// TODO: update responsibility is tough, partly because the USB
	// interrupts aren't sychronous to the audio library block size,
	// but also because the PC may stop transmitting data, which
	// means we no longer get receive callbacks from usb_dev.
	update_responsibility = false;
    8fe4:	strb	r3, [r2, #0]
    8fe6:	pop	{r4, r5, r6, r7, pc}
    8fe8:	.word	0x20008058
    8fec:	.word	0x20012b84
    8ff0:	.word	0x20012b70
    8ff4:	.word	0x20012b7c
    8ff8:	.word	0x20012b98
    8ffc:	.word	0x20012b80
    9000:	.word	0x20012b68
    9004:	.word	0x20012b88
    9008:	.word	0x200073d0

0000900c <usb_audio_receive_callback>:

	AudioInputUSB::receive_flag = 1;
	len >>= 2; // 1 sample = 4 bytes: 2 left, 2 right
	data = (const uint32_t *)usb_audio_receive_buffer;

	count = AudioInputUSB::incoming_count;
    900c:	ldr	r3, [pc, #324]	; (9154 <usb_audio_receive_callback+0x148>)

// Called from the USB interrupt when an isochronous packet arrives
// we must completely remove it from the receive buffer before returning
//
void usb_audio_receive_callback(unsigned int len)
{
    900e:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}

	AudioInputUSB::receive_flag = 1;
	len >>= 2; // 1 sample = 4 bytes: 2 left, 2 right
	data = (const uint32_t *)usb_audio_receive_buffer;

	count = AudioInputUSB::incoming_count;
    9012:	ldrh.w	r8, [r3]
	left = AudioInputUSB::incoming_left;
    9016:	ldr.w	fp, [pc, #336]	; 9168 <usb_audio_receive_callback+0x15c>
{
	unsigned int count, avail;
	audio_block_t *left, *right;
	const uint32_t *data;

	AudioInputUSB::receive_flag = 1;
    901a:	ldr	r3, [pc, #316]	; (9158 <usb_audio_receive_callback+0x14c>)
	len >>= 2; // 1 sample = 4 bytes: 2 left, 2 right
	data = (const uint32_t *)usb_audio_receive_buffer;

	count = AudioInputUSB::incoming_count;
	left = AudioInputUSB::incoming_left;
    901c:	ldr.w	r4, [fp]
{
	unsigned int count, avail;
	audio_block_t *left, *right;
	const uint32_t *data;

	AudioInputUSB::receive_flag = 1;
    9020:	movs	r2, #1
    9022:	strb	r2, [r3, #0]
	len >>= 2; // 1 sample = 4 bytes: 2 left, 2 right
	data = (const uint32_t *)usb_audio_receive_buffer;

	count = AudioInputUSB::incoming_count;
	left = AudioInputUSB::incoming_left;
	right = AudioInputUSB::incoming_right;
    9024:	ldr	r3, [pc, #308]	; (915c <usb_audio_receive_callback+0x150>)

// Called from the USB interrupt when an isochronous packet arrives
// we must completely remove it from the receive buffer before returning
//
void usb_audio_receive_callback(unsigned int len)
{
    9026:	sub	sp, #12
	unsigned int count, avail;
	audio_block_t *left, *right;
	const uint32_t *data;

	AudioInputUSB::receive_flag = 1;
	len >>= 2; // 1 sample = 4 bytes: 2 left, 2 right
    9028:	lsrs	r6, r0, #2
	data = (const uint32_t *)usb_audio_receive_buffer;

	count = AudioInputUSB::incoming_count;
    902a:	mov	sl, r8
	left = AudioInputUSB::incoming_left;
	right = AudioInputUSB::incoming_right;
    902c:	ldr	r5, [r3, #0]
	if (left == NULL) {
    902e:	cmp	r4, #0
    9030:	beq.n	90d0 <usb_audio_receive_callback+0xc4>
		left = AudioStream::allocate();
		if (left == NULL) return;
		AudioInputUSB::incoming_left = left;
	}
	if (right == NULL) {
    9032:	cmp	r5, #0
    9034:	beq.n	90e2 <usb_audio_receive_callback+0xd6>
		right = AudioStream::allocate();
		if (right == NULL) return;
		AudioInputUSB::incoming_right = right;
	}
	while (len > 0) {
    9036:	cmp	r6, #0
    9038:	beq.n	90f4 <usb_audio_receive_callback+0xe8>
		avail = AUDIO_BLOCK_SAMPLES - count;
    903a:	rsb	r7, r8, #128	; 0x80
		if (len < avail) {
    903e:	cmp	r6, r7
    9040:	bcc.w	914a <usb_audio_receive_callback+0x13e>
    9044:	ldr	r3, [pc, #280]	; (9160 <usb_audio_receive_callback+0x154>)
    9046:	str	r3, [sp, #4]
    9048:	ldr.w	r8, [pc, #288]	; 916c <usb_audio_receive_callback+0x160>
			}
			AudioInputUSB::incoming_left = left;
			AudioInputUSB::incoming_right = right;
			count = 0;
		} else {
			if (AudioInputUSB::ready_left || AudioInputUSB::ready_right) return;
    904c:	ldr.w	r9, [pc, #276]	; 9164 <usb_audio_receive_callback+0x158>
		avail = AUDIO_BLOCK_SAMPLES - count;
		if (len < avail) {
			copy_to_buffers(data, left->data + count, right->data + count, len);
			AudioInputUSB::incoming_count = count + len;
			return;
		} else if (avail > 0) {
    9050:	cbnz	r7, 9096 <usb_audio_receive_callback+0x8a>
			}
			AudioInputUSB::incoming_left = left;
			AudioInputUSB::incoming_right = right;
			count = 0;
		} else {
			if (AudioInputUSB::ready_left || AudioInputUSB::ready_right) return;
    9052:	ldr.w	r3, [r8]
    9056:	cmp	r3, #0
    9058:	bne.n	90ca <usb_audio_receive_callback+0xbe>
    905a:	ldr.w	r2, [r9]
    905e:	mov	r3, r9
    9060:	cmp	r2, #0
    9062:	bne.n	90ca <usb_audio_receive_callback+0xbe>
					//serial_phex(len);
				//}
				return;
			}
			send:
			AudioInputUSB::ready_left = left;
    9064:	str.w	r4, [r8]
			AudioInputUSB::ready_right = right;
    9068:	str	r5, [r3, #0]
			//if (AudioInputUSB::update_responsibility) AudioStream::update_all();
			left = AudioStream::allocate();
    906a:	bl	95bc <AudioStream::allocate()>
			if (left == NULL) {
    906e:	mov	r4, r0
    9070:	cmp	r0, #0
    9072:	beq.n	9100 <usb_audio_receive_callback+0xf4>
				AudioInputUSB::incoming_left = NULL;
				AudioInputUSB::incoming_right = NULL;
				AudioInputUSB::incoming_count = 0;
				return;
			}
			right = AudioStream::allocate();
    9074:	bl	95bc <AudioStream::allocate()>
			if (right == NULL) {
    9078:	mov	r5, r0
    907a:	cmp	r0, #0
    907c:	beq.n	9112 <usb_audio_receive_callback+0x106>
				AudioInputUSB::incoming_right = NULL;
				AudioInputUSB::incoming_count = 0;
				return;
			}
			AudioInputUSB::incoming_left = left;
			AudioInputUSB::incoming_right = right;
    907e:	ldr	r3, [pc, #220]	; (915c <usb_audio_receive_callback+0x150>)
				AudioInputUSB::incoming_left = NULL;
				AudioInputUSB::incoming_right = NULL;
				AudioInputUSB::incoming_count = 0;
				return;
			}
			AudioInputUSB::incoming_left = left;
    9080:	str.w	r4, [fp]
			AudioInputUSB::incoming_right = right;
    9084:	str	r0, [r3, #0]
	if (right == NULL) {
		right = AudioStream::allocate();
		if (right == NULL) return;
		AudioInputUSB::incoming_right = right;
	}
	while (len > 0) {
    9086:	cmp	r6, #0
    9088:	beq.n	90f2 <usb_audio_receive_callback+0xe6>
		avail = AUDIO_BLOCK_SAMPLES - count;
		if (len < avail) {
    908a:	cmp	r6, #127	; 0x7f
				AudioInputUSB::incoming_count = 0;
				return;
			}
			AudioInputUSB::incoming_left = left;
			AudioInputUSB::incoming_right = right;
			count = 0;
    908c:	mov.w	sl, #0
		right = AudioStream::allocate();
		if (right == NULL) return;
		AudioInputUSB::incoming_right = right;
	}
	while (len > 0) {
		avail = AUDIO_BLOCK_SAMPLES - count;
    9090:	mov.w	r7, #128	; 0x80
		if (len < avail) {
    9094:	bls.n	912a <usb_audio_receive_callback+0x11e>
			copy_to_buffers(data, left->data + count, right->data + count, len);
			AudioInputUSB::incoming_count = count + len;
			return;
		} else if (avail > 0) {
			copy_to_buffers(data, left->data + count, right->data + count, avail);
    9096:	mov.w	r3, sl, lsl #1
    909a:	adds	r2, r5, #4
    909c:	adds	r1, r4, #4
    909e:	add	r2, r3
    90a0:	add	r1, r3
    90a2:	ldr	r0, [sp, #4]
    90a4:	mov	r3, r7
    90a6:	bl	8d98 <copy_to_buffers(unsigned long const*, short*, short*, unsigned int)>
			data += avail;
    90aa:	ldr	r2, [sp, #4]
			len -= avail;
			if (AudioInputUSB::ready_left || AudioInputUSB::ready_right) {
    90ac:	ldr.w	r3, [r8]
			copy_to_buffers(data, left->data + count, right->data + count, len);
			AudioInputUSB::incoming_count = count + len;
			return;
		} else if (avail > 0) {
			copy_to_buffers(data, left->data + count, right->data + count, avail);
			data += avail;
    90b0:	add.w	r2, r2, r7, lsl #2
			len -= avail;
    90b4:	subs	r6, r6, r7
			copy_to_buffers(data, left->data + count, right->data + count, len);
			AudioInputUSB::incoming_count = count + len;
			return;
		} else if (avail > 0) {
			copy_to_buffers(data, left->data + count, right->data + count, avail);
			data += avail;
    90b6:	str	r2, [sp, #4]
			len -= avail;
			if (AudioInputUSB::ready_left || AudioInputUSB::ready_right) {
    90b8:	cbnz	r3, 90c4 <usb_audio_receive_callback+0xb8>
    90ba:	ldr.w	r2, [r9]
    90be:	ldr	r3, [pc, #164]	; (9164 <usb_audio_receive_callback+0x158>)
    90c0:	cmp	r2, #0
    90c2:	beq.n	9064 <usb_audio_receive_callback+0x58>
				// buffer overrun, PC sending too fast
				AudioInputUSB::incoming_count = count + avail;
    90c4:	ldr	r3, [pc, #140]	; (9154 <usb_audio_receive_callback+0x148>)
    90c6:	add	r7, sl
    90c8:	strh	r7, [r3, #0]
			if (AudioInputUSB::ready_left || AudioInputUSB::ready_right) return;
			goto send; // recover from buffer overrun
		}
	}
	AudioInputUSB::incoming_count = count;
}
    90ca:	add	sp, #12
    90cc:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

	count = AudioInputUSB::incoming_count;
	left = AudioInputUSB::incoming_left;
	right = AudioInputUSB::incoming_right;
	if (left == NULL) {
		left = AudioStream::allocate();
    90d0:	bl	95bc <AudioStream::allocate()>
		if (left == NULL) return;
    90d4:	mov	r4, r0
    90d6:	cmp	r0, #0
    90d8:	beq.n	90ca <usb_audio_receive_callback+0xbe>
		AudioInputUSB::incoming_left = left;
    90da:	str.w	r0, [fp]
	}
	if (right == NULL) {
    90de:	cmp	r5, #0
    90e0:	bne.n	9036 <usb_audio_receive_callback+0x2a>
		right = AudioStream::allocate();
    90e2:	bl	95bc <AudioStream::allocate()>
		if (right == NULL) return;
    90e6:	mov	r5, r0
    90e8:	cmp	r0, #0
    90ea:	beq.n	90ca <usb_audio_receive_callback+0xbe>
		AudioInputUSB::incoming_right = right;
    90ec:	ldr	r3, [pc, #108]	; (915c <usb_audio_receive_callback+0x150>)
    90ee:	str	r0, [r3, #0]
    90f0:	b.n	9036 <usb_audio_receive_callback+0x2a>
    90f2:	mov	r8, r6
		} else {
			if (AudioInputUSB::ready_left || AudioInputUSB::ready_right) return;
			goto send; // recover from buffer overrun
		}
	}
	AudioInputUSB::incoming_count = count;
    90f4:	ldr	r3, [pc, #92]	; (9154 <usb_audio_receive_callback+0x148>)
    90f6:	strh.w	r8, [r3]
}
    90fa:	add	sp, #12
    90fc:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
			AudioInputUSB::ready_right = right;
			//if (AudioInputUSB::update_responsibility) AudioStream::update_all();
			left = AudioStream::allocate();
			if (left == NULL) {
				AudioInputUSB::incoming_left = NULL;
				AudioInputUSB::incoming_right = NULL;
    9100:	ldr	r3, [pc, #88]	; (915c <usb_audio_receive_callback+0x150>)
			AudioInputUSB::ready_left = left;
			AudioInputUSB::ready_right = right;
			//if (AudioInputUSB::update_responsibility) AudioStream::update_all();
			left = AudioStream::allocate();
			if (left == NULL) {
				AudioInputUSB::incoming_left = NULL;
    9102:	str.w	r0, [fp]
				AudioInputUSB::incoming_right = NULL;
    9106:	str	r0, [r3, #0]
				AudioInputUSB::incoming_count = 0;
    9108:	ldr	r3, [pc, #72]	; (9154 <usb_audio_receive_callback+0x148>)
    910a:	strh	r0, [r3, #0]
			if (AudioInputUSB::ready_left || AudioInputUSB::ready_right) return;
			goto send; // recover from buffer overrun
		}
	}
	AudioInputUSB::incoming_count = count;
}
    910c:	add	sp, #12
    910e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
				AudioInputUSB::incoming_count = 0;
				return;
			}
			right = AudioStream::allocate();
			if (right == NULL) {
				AudioStream::release(left);
    9112:	mov	r0, r4
    9114:	bl	9664 <AudioStream::release(audio_block_struct*)>
				AudioInputUSB::incoming_left = NULL;
				AudioInputUSB::incoming_right = NULL;
    9118:	ldr	r3, [pc, #64]	; (915c <usb_audio_receive_callback+0x150>)
				return;
			}
			right = AudioStream::allocate();
			if (right == NULL) {
				AudioStream::release(left);
				AudioInputUSB::incoming_left = NULL;
    911a:	str.w	r5, [fp]
				AudioInputUSB::incoming_right = NULL;
    911e:	str	r5, [r3, #0]
				AudioInputUSB::incoming_count = 0;
    9120:	ldr	r3, [pc, #48]	; (9154 <usb_audio_receive_callback+0x148>)
    9122:	strh	r5, [r3, #0]
			if (AudioInputUSB::ready_left || AudioInputUSB::ready_right) return;
			goto send; // recover from buffer overrun
		}
	}
	AudioInputUSB::incoming_count = count;
}
    9124:	add	sp, #12
    9126:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    912a:	mov	r8, sl
    912c:	mov	r3, sl
		AudioInputUSB::incoming_right = right;
	}
	while (len > 0) {
		avail = AUDIO_BLOCK_SAMPLES - count;
		if (len < avail) {
			copy_to_buffers(data, left->data + count, right->data + count, len);
    912e:	adds	r2, r5, #4
    9130:	adds	r1, r4, #4
    9132:	add	r2, r3
    9134:	add	r1, r3
    9136:	ldr	r0, [sp, #4]
    9138:	mov	r3, r6
    913a:	bl	8d98 <copy_to_buffers(unsigned long const*, short*, short*, unsigned int)>
			AudioInputUSB::incoming_count = count + len;
    913e:	ldr	r3, [pc, #20]	; (9154 <usb_audio_receive_callback+0x148>)
    9140:	add	r6, r8
    9142:	strh	r6, [r3, #0]
			if (AudioInputUSB::ready_left || AudioInputUSB::ready_right) return;
			goto send; // recover from buffer overrun
		}
	}
	AudioInputUSB::incoming_count = count;
}
    9144:	add	sp, #12
    9146:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
		if (right == NULL) return;
		AudioInputUSB::incoming_right = right;
	}
	while (len > 0) {
		avail = AUDIO_BLOCK_SAMPLES - count;
		if (len < avail) {
    914a:	ldr	r2, [pc, #20]	; (9160 <usb_audio_receive_callback+0x154>)
    914c:	str	r2, [sp, #4]
    914e:	mov.w	r3, r8, lsl #1
    9152:	b.n	912e <usb_audio_receive_callback+0x122>
    9154:	.word	0x20012b98
    9158:	.word	0x20012b84
    915c:	.word	0x20012b68
    9160:	.word	0x200073d4
    9164:	.word	0x20012b70
    9168:	.word	0x20012b80
    916c:	.word	0x20012b88

00009170 <AudioOutputUSB::begin()>:
uint16_t usb_audio_transmit_buffer[AUDIO_TX_SIZE/2] DMABUFATTR;
uint8_t usb_audio_transmit_setting=0;

void AudioOutputUSB::begin(void)
{
	update_responsibility = false;
    9170:	ldr	r0, [pc, #12]	; (9180 <AudioOutputUSB::begin()+0x10>)
	left_1st = NULL;
    9172:	ldr	r1, [pc, #16]	; (9184 <AudioOutputUSB::begin()+0x14>)
	right_1st = NULL;
    9174:	ldr	r2, [pc, #16]	; (9188 <AudioOutputUSB::begin()+0x18>)
uint16_t usb_audio_transmit_buffer[AUDIO_TX_SIZE/2] DMABUFATTR;
uint8_t usb_audio_transmit_setting=0;

void AudioOutputUSB::begin(void)
{
	update_responsibility = false;
    9176:	movs	r3, #0
    9178:	strb	r3, [r0, #0]
	left_1st = NULL;
    917a:	str	r3, [r1, #0]
	right_1st = NULL;
    917c:	str	r3, [r2, #0]
    917e:	bx	lr
    9180:	.word	0x20012b90
    9184:	.word	0x20012b74
    9188:	.word	0x20012b8c

0000918c <usb_audio_transmit_callback>:
{
	static uint32_t count=5;
	uint32_t avail, num, target, offset, len=0;
	audio_block_t *left, *right;

	if (++count < 9) {   // TODO: dynamic adjust to match USB rate
    918c:	ldr	r2, [pc, #212]	; (9264 <usb_audio_transmit_callback+0xd8>)
// Called from the USB interrupt when ready to transmit another
// isochronous packet.  If we place data into the transmit buffer,
// the return is the number of bytes.  Otherwise, return 0 means
// no data to transmit
unsigned int usb_audio_transmit_callback(void)
{
    918e:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
	static uint32_t count=5;
	uint32_t avail, num, target, offset, len=0;
	audio_block_t *left, *right;

	if (++count < 9) {   // TODO: dynamic adjust to match USB rate
    9192:	ldr	r3, [r2, #0]
    9194:	adds	r3, #1
    9196:	cmp	r3, #8
// Called from the USB interrupt when ready to transmit another
// isochronous packet.  If we place data into the transmit buffer,
// the return is the number of bytes.  Otherwise, return 0 means
// no data to transmit
unsigned int usb_audio_transmit_callback(void)
{
    9198:	sub	sp, #12
	static uint32_t count=5;
	uint32_t avail, num, target, offset, len=0;
	audio_block_t *left, *right;

	if (++count < 9) {   // TODO: dynamic adjust to match USB rate
    919a:	bhi.n	9240 <usb_audio_transmit_callback+0xb4>
    919c:	str	r3, [r2, #0]
    919e:	movs	r3, #176	; 0xb0
    91a0:	str	r3, [sp, #4]
		target = 44;
    91a2:	mov.w	sl, #44	; 0x2c
    91a6:	ldr	r1, [pc, #192]	; (9268 <usb_audio_transmit_callback+0xdc>)
			memset(usb_audio_transmit_buffer + len, 0, num * 4);
			//serial_print("%");
			break;
		}
		right = AudioOutputUSB::right_1st;
		offset = AudioOutputUSB::offset_1st;
    91a8:	ldr.w	fp, [pc, #208]	; 927c <usb_audio_transmit_callback+0xf0>
	static uint32_t count=5;
	uint32_t avail, num, target, offset, len=0;
	audio_block_t *left, *right;

	if (++count < 9) {   // TODO: dynamic adjust to match USB rate
		target = 44;
    91ac:	mov.w	r8, #0
		count = 0;
		target = 45;
	}
	while (len < target) {
		num = target - len;
		left = AudioOutputUSB::left_1st;
    91b0:	ldr	r0, [r1, #0]
	} else {
		count = 0;
		target = 45;
	}
	while (len < target) {
		num = target - len;
    91b2:	rsb	r3, r8, sl
		left = AudioOutputUSB::left_1st;
		if (left == NULL) {
    91b6:	cmp	r0, #0
    91b8:	beq.n	924e <usb_audio_transmit_callback+0xc2>
			memset(usb_audio_transmit_buffer + len, 0, num * 4);
			//serial_print("%");
			break;
		}
		right = AudioOutputUSB::right_1st;
		offset = AudioOutputUSB::offset_1st;
    91ba:	ldrh.w	lr, [fp]
			// buffer underrun - PC is consuming too quickly
			memset(usb_audio_transmit_buffer + len, 0, num * 4);
			//serial_print("%");
			break;
		}
		right = AudioOutputUSB::right_1st;
    91be:	ldr	r2, [pc, #172]	; (926c <usb_audio_transmit_callback+0xe0>)
    91c0:	ldr.w	r9, [r2]
		offset = AudioOutputUSB::offset_1st;

		avail = AUDIO_BLOCK_SAMPLES - offset;
    91c4:	rsb	r2, lr, #128	; 0x80
    91c8:	cmp	r3, r2
    91ca:	it	cs
    91cc:	movcs	r3, r2
		if (num > avail) num = avail;

		copy_from_buffers((uint32_t *)usb_audio_transmit_buffer + len,
    91ce:	adds	r5, r0, #4
    91d0:	mov.w	r2, lr, lsl #1
    91d4:	add.w	r7, r9, #4
    91d8:	add	r5, r2
    91da:	add	r7, r2
    91dc:	mov.w	r6, r8, lsl #2
}

static void copy_from_buffers(uint32_t *dst, int16_t *left, int16_t *right, unsigned int len)
{
	// TODO: optimize...
	while (len > 0) {
    91e0:	cbz	r3, 91fe <usb_audio_transmit_callback+0x72>
    91e2:	ldr	r2, [pc, #140]	; (9270 <usb_audio_transmit_callback+0xe4>)
    91e4:	subs	r6, #4
    91e6:	add	r6, r2
    91e8:	mov	r4, r3
		*dst++ = (*right++ << 16) | (*left++ & 0xFFFF);
    91ea:	ldrsh.w	ip, [r7], #2
    91ee:	ldrh.w	r2, [r5], #2
}

static void copy_from_buffers(uint32_t *dst, int16_t *left, int16_t *right, unsigned int len)
{
	// TODO: optimize...
	while (len > 0) {
    91f2:	subs	r4, #1
		*dst++ = (*right++ << 16) | (*left++ & 0xFFFF);
    91f4:	orr.w	r2, r2, ip, lsl #16
    91f8:	str.w	r2, [r6, #4]!
}

static void copy_from_buffers(uint32_t *dst, int16_t *left, int16_t *right, unsigned int len)
{
	// TODO: optimize...
	while (len > 0) {
    91fc:	bne.n	91ea <usb_audio_transmit_callback+0x5e>
		if (num > avail) num = avail;

		copy_from_buffers((uint32_t *)usb_audio_transmit_buffer + len,
			left->data + offset, right->data + offset, num);
		len += num;
		offset += num;
    91fe:	add	lr, r3
		if (offset >= AUDIO_BLOCK_SAMPLES) {
    9200:	cmp.w	lr, #127	; 0x7f
		avail = AUDIO_BLOCK_SAMPLES - offset;
		if (num > avail) num = avail;

		copy_from_buffers((uint32_t *)usb_audio_transmit_buffer + len,
			left->data + offset, right->data + offset, num);
		len += num;
    9204:	add	r8, r3
		offset += num;
		if (offset >= AUDIO_BLOCK_SAMPLES) {
    9206:	bhi.n	9218 <usb_audio_transmit_callback+0x8c>
			AudioOutputUSB::left_2nd = NULL;
			AudioOutputUSB::right_1st = AudioOutputUSB::right_2nd;
			AudioOutputUSB::right_2nd = NULL;
			AudioOutputUSB::offset_1st = 0;
		} else {
			AudioOutputUSB::offset_1st = offset;
    9208:	strh.w	lr, [fp]
		target = 44;
	} else {
		count = 0;
		target = 45;
	}
	while (len < target) {
    920c:	cmp	sl, r8
    920e:	bhi.n	91b0 <usb_audio_transmit_callback+0x24>
		} else {
			AudioOutputUSB::offset_1st = offset;
		}
	}
	return target * 4;
}
    9210:	ldr	r0, [sp, #4]
    9212:	add	sp, #12
    9214:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    9218:	str	r1, [sp, #0]
		copy_from_buffers((uint32_t *)usb_audio_transmit_buffer + len,
			left->data + offset, right->data + offset, num);
		len += num;
		offset += num;
		if (offset >= AUDIO_BLOCK_SAMPLES) {
			AudioStream::release(left);
    921a:	bl	9664 <AudioStream::release(audio_block_struct*)>
			AudioStream::release(right);
    921e:	mov	r0, r9
    9220:	bl	9664 <AudioStream::release(audio_block_struct*)>
			AudioOutputUSB::left_1st = AudioOutputUSB::left_2nd;
    9224:	ldr	r0, [pc, #76]	; (9274 <usb_audio_transmit_callback+0xe8>)
    9226:	ldr	r1, [sp, #0]
    9228:	ldr	r3, [r0, #0]
			AudioOutputUSB::left_2nd = NULL;
			AudioOutputUSB::right_1st = AudioOutputUSB::right_2nd;
    922a:	ldr	r2, [pc, #76]	; (9278 <usb_audio_transmit_callback+0xec>)
		len += num;
		offset += num;
		if (offset >= AUDIO_BLOCK_SAMPLES) {
			AudioStream::release(left);
			AudioStream::release(right);
			AudioOutputUSB::left_1st = AudioOutputUSB::left_2nd;
    922c:	str	r3, [r1, #0]
			AudioOutputUSB::left_2nd = NULL;
    922e:	movs	r3, #0
			AudioOutputUSB::right_1st = AudioOutputUSB::right_2nd;
    9230:	ldr	r4, [r2, #0]
		offset += num;
		if (offset >= AUDIO_BLOCK_SAMPLES) {
			AudioStream::release(left);
			AudioStream::release(right);
			AudioOutputUSB::left_1st = AudioOutputUSB::left_2nd;
			AudioOutputUSB::left_2nd = NULL;
    9232:	str	r3, [r0, #0]
			AudioOutputUSB::right_1st = AudioOutputUSB::right_2nd;
			AudioOutputUSB::right_2nd = NULL;
			AudioOutputUSB::offset_1st = 0;
    9234:	strh.w	r3, [fp]
			AudioStream::release(left);
			AudioStream::release(right);
			AudioOutputUSB::left_1st = AudioOutputUSB::left_2nd;
			AudioOutputUSB::left_2nd = NULL;
			AudioOutputUSB::right_1st = AudioOutputUSB::right_2nd;
			AudioOutputUSB::right_2nd = NULL;
    9238:	str	r3, [r2, #0]
		if (offset >= AUDIO_BLOCK_SAMPLES) {
			AudioStream::release(left);
			AudioStream::release(right);
			AudioOutputUSB::left_1st = AudioOutputUSB::left_2nd;
			AudioOutputUSB::left_2nd = NULL;
			AudioOutputUSB::right_1st = AudioOutputUSB::right_2nd;
    923a:	ldr	r3, [pc, #48]	; (926c <usb_audio_transmit_callback+0xe0>)
    923c:	str	r4, [r3, #0]
    923e:	b.n	920c <usb_audio_transmit_callback+0x80>
	audio_block_t *left, *right;

	if (++count < 9) {   // TODO: dynamic adjust to match USB rate
		target = 44;
	} else {
		count = 0;
    9240:	movs	r3, #0
    9242:	str	r3, [r2, #0]
    9244:	movs	r3, #180	; 0xb4
    9246:	str	r3, [sp, #4]
		target = 45;
    9248:	mov.w	sl, #45	; 0x2d
    924c:	b.n	91a6 <usb_audio_transmit_callback+0x1a>
	while (len < target) {
		num = target - len;
		left = AudioOutputUSB::left_1st;
		if (left == NULL) {
			// buffer underrun - PC is consuming too quickly
			memset(usb_audio_transmit_buffer + len, 0, num * 4);
    924e:	ldr	r4, [pc, #32]	; (9270 <usb_audio_transmit_callback+0xe4>)
    9250:	mov	r1, r0
    9252:	lsls	r2, r3, #2
    9254:	add.w	r0, r4, r8, lsl #1
    9258:	bl	c110 <memset>
		} else {
			AudioOutputUSB::offset_1st = offset;
		}
	}
	return target * 4;
}
    925c:	ldr	r0, [sp, #4]
    925e:	add	sp, #12
    9260:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    9264:	.word	0x20008068
    9268:	.word	0x20012b74
    926c:	.word	0x20012b8c
    9270:	.word	0x20007488
    9274:	.word	0x20012b94
    9278:	.word	0x20012b78
    927c:	.word	0x20012b6c

00009280 <usb_audio_get_feature>:
};

int usb_audio_get_feature(void *stp, uint8_t *data, uint32_t *datalen)
{
	struct setup_struct setup = *((struct setup_struct *)stp);
	if (setup.bmRequestType==0xA1) { // should check bRequest, bChannel, and UnitID
    9280:	ldrb	r3, [r0, #0]
    9282:	cmp	r3, #161	; 0xa1
    9284:	beq.n	928a <usb_audio_get_feature+0xa>
				}
				*datalen = 2;
				return 1;
			}
	}
	return 0;
    9286:	movs	r0, #0
}
    9288:	bx	lr
  };
};

int usb_audio_get_feature(void *stp, uint8_t *data, uint32_t *datalen)
{
	struct setup_struct setup = *((struct setup_struct *)stp);
    928a:	ldrb	r3, [r0, #3]
	if (setup.bmRequestType==0xA1) { // should check bRequest, bChannel, and UnitID
			if (setup.bCS==0x01) { // mute
    928c:	cmp	r3, #1
    928e:	beq.n	92b6 <usb_audio_get_feature+0x36>
				data[0] = AudioInputUSB::features.mute;  // 1=mute, 0=unmute
				*datalen = 1;
				return 1;
			}
			else if (setup.bCS==0x02) { // volume
    9290:	cmp	r3, #2
    9292:	bne.n	9286 <usb_audio_get_feature+0x6>
  };
};

int usb_audio_get_feature(void *stp, uint8_t *data, uint32_t *datalen)
{
	struct setup_struct setup = *((struct setup_struct *)stp);
    9294:	ldrb	r3, [r0, #1]
				data[0] = AudioInputUSB::features.mute;  // 1=mute, 0=unmute
				*datalen = 1;
				return 1;
			}
			else if (setup.bCS==0x02) { // volume
				if (setup.bRequest==0x81) { // GET_CURR
    9296:	cmp	r3, #129	; 0x81
    9298:	beq.n	92cc <usb_audio_get_feature+0x4c>
					data[0] = AudioInputUSB::features.volume & 0xFF;
					data[1] = (AudioInputUSB::features.volume>>8) & 0xFF;
				}
				else if (setup.bRequest==0x82) { // GET_MIN
    929a:	cmp	r3, #130	; 0x82
    929c:	beq.n	92da <usb_audio_get_feature+0x5a>
					//serial_print("vol get_min\n");
					data[0] = 0;     // min level is 0
					data[1] = 0;
				}
				else if (setup.bRequest==0x83) { // GET_MAX
    929e:	cmp	r3, #131	; 0x83
    92a0:	beq.n	92c2 <usb_audio_get_feature+0x42>
					data[0] = FEATURE_MAX_VOLUME & 0xFF;  // max level, for range of 0 to MAX
					data[1] = (FEATURE_MAX_VOLUME>>8) & 0x0F;
				}
				else if (setup.bRequest==0x84) { // GET_RES
    92a2:	cmp	r3, #132	; 0x84
    92a4:	bne.n	9286 <usb_audio_get_feature+0x6>
					data[0] = 1; // increment vol by by 1
    92a6:	movs	r0, #1
					data[1] = 0;
    92a8:	movs	r3, #0
				else if (setup.bRequest==0x83) { // GET_MAX
					data[0] = FEATURE_MAX_VOLUME & 0xFF;  // max level, for range of 0 to MAX
					data[1] = (FEATURE_MAX_VOLUME>>8) & 0x0F;
				}
				else if (setup.bRequest==0x84) { // GET_RES
					data[0] = 1; // increment vol by by 1
    92aa:	strb	r0, [r1, #0]
					data[1] = 0;
    92ac:	strb	r3, [r1, #1]
				}
				else { // pass over SET_MEM, etc.
					return 0;
				}
				*datalen = 2;
    92ae:	movs	r3, #2
    92b0:	str	r3, [r2, #0]
				return 1;
    92b2:	movs	r0, #1
    92b4:	bx	lr
int usb_audio_get_feature(void *stp, uint8_t *data, uint32_t *datalen)
{
	struct setup_struct setup = *((struct setup_struct *)stp);
	if (setup.bmRequestType==0xA1) { // should check bRequest, bChannel, and UnitID
			if (setup.bCS==0x01) { // mute
				data[0] = AudioInputUSB::features.mute;  // 1=mute, 0=unmute
    92b6:	ldr	r0, [pc, #44]	; (92e4 <usb_audio_get_feature+0x64>)
    92b8:	ldr	r0, [r0, #4]
    92ba:	strb	r0, [r1, #0]
				*datalen = 1;
				return 1;
    92bc:	mov	r0, r3
{
	struct setup_struct setup = *((struct setup_struct *)stp);
	if (setup.bmRequestType==0xA1) { // should check bRequest, bChannel, and UnitID
			if (setup.bCS==0x01) { // mute
				data[0] = AudioInputUSB::features.mute;  // 1=mute, 0=unmute
				*datalen = 1;
    92be:	str	r3, [r2, #0]
				return 1;
    92c0:	bx	lr
					//serial_print("vol get_min\n");
					data[0] = 0;     // min level is 0
					data[1] = 0;
				}
				else if (setup.bRequest==0x83) { // GET_MAX
					data[0] = FEATURE_MAX_VOLUME & 0xFF;  // max level, for range of 0 to MAX
    92c2:	movs	r0, #255	; 0xff
					data[1] = (FEATURE_MAX_VOLUME>>8) & 0x0F;
    92c4:	movs	r3, #15
					//serial_print("vol get_min\n");
					data[0] = 0;     // min level is 0
					data[1] = 0;
				}
				else if (setup.bRequest==0x83) { // GET_MAX
					data[0] = FEATURE_MAX_VOLUME & 0xFF;  // max level, for range of 0 to MAX
    92c6:	strb	r0, [r1, #0]
					data[1] = (FEATURE_MAX_VOLUME>>8) & 0x0F;
    92c8:	strb	r3, [r1, #1]
    92ca:	b.n	92ae <usb_audio_get_feature+0x2e>
				*datalen = 1;
				return 1;
			}
			else if (setup.bCS==0x02) { // volume
				if (setup.bRequest==0x81) { // GET_CURR
					data[0] = AudioInputUSB::features.volume & 0xFF;
    92cc:	ldr	r3, [pc, #20]	; (92e4 <usb_audio_get_feature+0x64>)
    92ce:	ldr	r0, [r3, #8]
    92d0:	strb	r0, [r1, #0]
					data[1] = (AudioInputUSB::features.volume>>8) & 0xFF;
    92d2:	ldr	r3, [r3, #8]
    92d4:	asrs	r3, r3, #8
    92d6:	strb	r3, [r1, #1]
    92d8:	b.n	92ae <usb_audio_get_feature+0x2e>
				}
				else if (setup.bRequest==0x82) { // GET_MIN
					//serial_print("vol get_min\n");
					data[0] = 0;     // min level is 0
    92da:	movs	r3, #0
    92dc:	strb	r3, [r1, #0]
					data[1] = 0;
    92de:	strb	r3, [r1, #1]
    92e0:	b.n	92ae <usb_audio_get_feature+0x2e>
    92e2:	nop
    92e4:	.word	0x2000805c

000092e8 <usb_audio_set_feature>:
}

int usb_audio_set_feature(void *stp, uint8_t *buf) 
{
	struct setup_struct setup = *((struct setup_struct *)stp);
	if (setup.bmRequestType==0x21) { // should check bRequest, bChannel and UnitID
    92e8:	ldrb	r3, [r0, #0]
    92ea:	cmp	r3, #33	; 0x21
    92ec:	beq.n	92f2 <usb_audio_set_feature+0xa>
					AudioInputUSB::features.change = 1;
					return 1;
				}
			}
	}
	return 0;
    92ee:	movs	r0, #0
    92f0:	bx	lr
	return 0;
}

int usb_audio_set_feature(void *stp, uint8_t *buf) 
{
	struct setup_struct setup = *((struct setup_struct *)stp);
    92f2:	ldrb	r3, [r0, #3]
    92f4:	ldrb	r0, [r0, #1]
	if (setup.bmRequestType==0x21) { // should check bRequest, bChannel and UnitID
			if (setup.bCS==0x01) { // mute
    92f6:	cmp	r3, #1
    92f8:	beq.n	9318 <usb_audio_set_feature+0x30>
					AudioInputUSB::features.mute = buf[0]; // 1=mute,0=unmute
					AudioInputUSB::features.change = 1;
					return 1;
				}
			}
			else if (setup.bCS==0x02) { // volume
    92fa:	cmp	r3, #2
    92fc:	bne.n	92ee <usb_audio_set_feature+0x6>
				if (setup.bRequest==0x01) { // SET_CUR
    92fe:	cmp	r0, #1
    9300:	bne.n	92ee <usb_audio_set_feature+0x6>
	}
	return 0;
}

int usb_audio_set_feature(void *stp, uint8_t *buf) 
{
    9302:	push	{r4}
					return 1;
				}
			}
			else if (setup.bCS==0x02) { // volume
				if (setup.bRequest==0x01) { // SET_CUR
					AudioInputUSB::features.volume = buf[0] + (buf[1]<<8);
    9304:	ldrb	r3, [r1, #0]
    9306:	ldrb	r4, [r1, #1]
    9308:	ldr	r2, [pc, #28]	; (9328 <usb_audio_set_feature+0x40>)
    930a:	add.w	r3, r3, r4, lsl #8
    930e:	str	r3, [r2, #8]
					AudioInputUSB::features.change = 1;
    9310:	str	r0, [r2, #0]
					return 1;
				}
			}
	}
	return 0;
}
    9312:	ldr.w	r4, [sp], #4
    9316:	bx	lr
int usb_audio_set_feature(void *stp, uint8_t *buf) 
{
	struct setup_struct setup = *((struct setup_struct *)stp);
	if (setup.bmRequestType==0x21) { // should check bRequest, bChannel and UnitID
			if (setup.bCS==0x01) { // mute
				if (setup.bRequest==0x01) { // SET_CUR
    9318:	cmp	r0, #1
    931a:	bne.n	92ee <usb_audio_set_feature+0x6>
					AudioInputUSB::features.mute = buf[0]; // 1=mute,0=unmute
    931c:	ldr	r3, [pc, #8]	; (9328 <usb_audio_set_feature+0x40>)
    931e:	ldrb	r2, [r1, #0]
					AudioInputUSB::features.change = 1;
    9320:	stmia.w	r3, {r0, r2}
					return 1;
    9324:	bx	lr
    9326:	nop
    9328:	.word	0x2000805c

0000932c <String::~String()>:
	init();
	char buf[40];
	*this = dtostrf(num, digits + 2, digits, buf);
}

String::~String()
    932c:	push	{r4, lr}
    932e:	mov	r4, r0
{
	free(buffer);
    9330:	ldr	r0, [r0, #0]
    9332:	bl	ba38 <free>
}
    9336:	mov	r0, r4
    9338:	pop	{r4, pc}
    933a:	nop

0000933c <String::reserve(unsigned int)>:
	len = 0;
	flags = 0;
}

unsigned char String::reserve(unsigned int size)
{
    933c:	push	{r3, r4, r5, lr}
	if (capacity >= size) return 1;
    933e:	ldr	r3, [r0, #4]
    9340:	cmp	r3, r1
    9342:	bcc.n	9348 <String::reserve(unsigned int)+0xc>
	if (changeBuffer(size)) {
		if (len == 0) buffer[0] = 0;
    9344:	movs	r0, #1
		return 1;
	}
	return 0;
}
    9346:	pop	{r3, r4, r5, pc}
    9348:	mov	r5, r1
    934a:	mov	r4, r0

unsigned char String::changeBuffer(unsigned int maxStrLen)
{
	char *newbuffer = (char *)realloc(buffer, maxStrLen + 1);
    934c:	adds	r1, #1
    934e:	ldr	r0, [r0, #0]
    9350:	bl	c1b4 <realloc>
	if (newbuffer) {
    9354:	cmp	r0, #0
    9356:	beq.n	9346 <String::reserve(unsigned int)+0xa>

unsigned char String::reserve(unsigned int size)
{
	if (capacity >= size) return 1;
	if (changeBuffer(size)) {
		if (len == 0) buffer[0] = 0;
    9358:	ldr	r3, [r4, #8]
unsigned char String::changeBuffer(unsigned int maxStrLen)
{
	char *newbuffer = (char *)realloc(buffer, maxStrLen + 1);
	if (newbuffer) {
		buffer = newbuffer;
		capacity = maxStrLen;
    935a:	stmia.w	r4, {r0, r5}

unsigned char String::reserve(unsigned int size)
{
	if (capacity >= size) return 1;
	if (changeBuffer(size)) {
		if (len == 0) buffer[0] = 0;
    935e:	cmp	r3, #0
    9360:	bne.n	9344 <String::reserve(unsigned int)+0x8>
    9362:	strb	r3, [r0, #0]
    9364:	b.n	9344 <String::reserve(unsigned int)+0x8>
    9366:	nop

00009368 <String::copy(char const*, unsigned int)>:
/*********************************************/
/*  Copy and Move                            */
/*********************************************/

String & String::copy(const char *cstr, unsigned int length)
{
    9368:	push	{r3, r4, r5, r6, r7, lr}
    936a:	mov	r4, r0
	if (length == 0) {
    936c:	mov	r5, r2
    936e:	cbnz	r2, 937e <String::copy(char const*, unsigned int)+0x16>
		if (buffer) buffer[0] = 0;
    9370:	ldr	r3, [r0, #0]
    9372:	cbz	r3, 9376 <String::copy(char const*, unsigned int)+0xe>
    9374:	strb	r2, [r3, #0]
		len = 0;
    9376:	movs	r3, #0
    9378:	str	r3, [r4, #8]
		return *this;
	}
	len = length;
	strcpy(buffer, cstr);
	return *this;
}
    937a:	mov	r0, r4
    937c:	pop	{r3, r4, r5, r6, r7, pc}
    937e:	mov	r6, r1
	if (length == 0) {
		if (buffer) buffer[0] = 0;
		len = 0;
		return *this;
	}
	if (!reserve(length)) {
    9380:	mov	r1, r2
    9382:	bl	933c <String::reserve(unsigned int)>
    9386:	mov	r7, r0
    9388:	cbnz	r0, 939e <String::copy(char const*, unsigned int)+0x36>
		if (buffer) {
    938a:	ldr	r0, [r4, #0]
    938c:	cbz	r0, 9394 <String::copy(char const*, unsigned int)+0x2c>
			free(buffer);
    938e:	bl	ba38 <free>
			buffer = NULL;
    9392:	str	r7, [r4, #0]
		}
		len = capacity = 0;
    9394:	movs	r3, #0
    9396:	str	r3, [r4, #4]
    9398:	str	r3, [r4, #8]
		return *this;
	}
	len = length;
	strcpy(buffer, cstr);
	return *this;
}
    939a:	mov	r0, r4
    939c:	pop	{r3, r4, r5, r6, r7, pc}
			buffer = NULL;
		}
		len = capacity = 0;
		return *this;
	}
	len = length;
    939e:	str	r5, [r4, #8]
	strcpy(buffer, cstr);
    93a0:	mov	r1, r6
    93a2:	ldr	r0, [r4, #0]
    93a4:	bl	c97c <strcpy>
	return *this;
    93a8:	b.n	937a <String::copy(char const*, unsigned int)+0x12>
    93aa:	nop

000093ac <String::String(char const*)>:

/*********************************************/
/*  Constructors                             */
/*********************************************/

String::String(const char *cstr)
    93ac:	push	{r3, r4, r5, lr}
/*  Memory Management                        */
/*********************************************/

inline void String::init(void)
{
	buffer = NULL;
    93ae:	movs	r3, #0

/*********************************************/
/*  Constructors                             */
/*********************************************/

String::String(const char *cstr)
    93b0:	mov	r4, r0
/*  Memory Management                        */
/*********************************************/

inline void String::init(void)
{
	buffer = NULL;
    93b2:	str	r3, [r0, #0]
	capacity = 0;
    93b4:	str	r3, [r0, #4]
	len = 0;
    93b6:	str	r3, [r0, #8]
	flags = 0;
    93b8:	strb	r3, [r0, #12]
/*********************************************/

String::String(const char *cstr)
{
	init();
	if (cstr) copy(cstr, strlen(cstr));
    93ba:	cbz	r1, 93ce <String::String(char const*)+0x22>
    93bc:	mov	r0, r1
    93be:	mov	r5, r1
    93c0:	bl	ca40 <strlen>
    93c4:	mov	r1, r5
    93c6:	mov	r2, r0
    93c8:	mov	r0, r4
    93ca:	bl	9368 <String::copy(char const*, unsigned int)>
}
    93ce:	mov	r0, r4
    93d0:	pop	{r3, r4, r5, pc}
    93d2:	nop

000093d4 <String::operator=(char const*) [clone .part.3]>:
	if (this != &rval) move(rval);
	return *this;
}
#endif

String & String::operator = (const char *cstr)
    93d4:	push	{r3, r4, r5, lr}
    93d6:	mov	r5, r0
{
	if (cstr) {
		copy(cstr, strlen(cstr));
    93d8:	mov	r0, r1
	if (this != &rval) move(rval);
	return *this;
}
#endif

String & String::operator = (const char *cstr)
    93da:	mov	r4, r1
{
	if (cstr) {
		copy(cstr, strlen(cstr));
    93dc:	bl	ca40 <strlen>
    93e0:	mov	r1, r4
    93e2:	mov	r2, r0
    93e4:	mov	r0, r5
	} else {
		len = 0;
	}
	return *this;
}
    93e6:	ldmia.w	sp!, {r3, r4, r5, lr}
#endif

String & String::operator = (const char *cstr)
{
	if (cstr) {
		copy(cstr, strlen(cstr));
    93ea:	b.w	9368 <String::copy(char const*, unsigned int)>
    93ee:	nop

000093f0 <String::move(String&)>:
	strcpy(buffer, cstr);
	return *this;
}

void String::move(String &rhs)
{
    93f0:	push	{r3, r4, r5, lr}
    93f2:	mov	r5, r0
	if (buffer) {
    93f4:	ldr	r0, [r0, #0]
	strcpy(buffer, cstr);
	return *this;
}

void String::move(String &rhs)
{
    93f6:	mov	r4, r1
	if (buffer) {
    93f8:	cbz	r0, 9406 <String::move(String&)+0x16>
		if (capacity >= rhs.len) {
    93fa:	ldr	r2, [r5, #4]
    93fc:	ldr	r3, [r1, #8]
    93fe:	cmp	r2, r3
    9400:	bcs.n	941c <String::move(String&)+0x2c>
			strcpy(buffer, rhs.buffer);
			len = rhs.len;
			rhs.len = 0;
			return;
		} else {
			free(buffer);
    9402:	bl	ba38 <free>
		}
	}
	buffer = rhs.buffer;
    9406:	ldr	r3, [r4, #0]
	capacity = rhs.capacity;
    9408:	ldr	r1, [r4, #4]
	len = rhs.len;
    940a:	ldr	r2, [r4, #8]
			return;
		} else {
			free(buffer);
		}
	}
	buffer = rhs.buffer;
    940c:	str	r3, [r5, #0]
	capacity = rhs.capacity;
	len = rhs.len;
	rhs.buffer = NULL;
    940e:	movs	r3, #0
		} else {
			free(buffer);
		}
	}
	buffer = rhs.buffer;
	capacity = rhs.capacity;
    9410:	str	r1, [r5, #4]
	len = rhs.len;
    9412:	str	r2, [r5, #8]
	rhs.buffer = NULL;
    9414:	str	r3, [r4, #0]
	rhs.capacity = 0;
    9416:	str	r3, [r4, #4]
	rhs.len = 0;
    9418:	str	r3, [r4, #8]
    941a:	pop	{r3, r4, r5, pc}

void String::move(String &rhs)
{
	if (buffer) {
		if (capacity >= rhs.len) {
			strcpy(buffer, rhs.buffer);
    941c:	ldr	r1, [r1, #0]
    941e:	bl	c97c <strcpy>
			len = rhs.len;
    9422:	ldr	r3, [r4, #8]
    9424:	str	r3, [r5, #8]
			rhs.len = 0;
    9426:	movs	r3, #0
    9428:	str	r3, [r4, #8]
			return;
    942a:	pop	{r3, r4, r5, pc}

0000942c <String::operator=(String const&)>:
	rhs.len = 0;
}

String & String::operator = (const String &rhs)
{
	if (this == &rhs) return *this;
    942c:	cmp	r1, r0
    942e:	beq.n	9438 <String::operator=(String const&)+0xc>
	return copy(rhs.buffer, rhs.len);
    9430:	ldr	r2, [r1, #8]
    9432:	ldr	r1, [r1, #0]
    9434:	b.w	9368 <String::copy(char const*, unsigned int)>
}
    9438:	bx	lr
    943a:	nop

0000943c <String::operator=(String&&)>:

#if __cplusplus >= 201103L || defined(__GXX_EXPERIMENTAL_CXX0X__)
String & String::operator = (String &&rval)
{
	if (this != &rval) move(rval);
    943c:	cmp	r0, r1
	return copy(rhs.buffer, rhs.len);
}

#if __cplusplus >= 201103L || defined(__GXX_EXPERIMENTAL_CXX0X__)
String & String::operator = (String &&rval)
{
    943e:	push	{r4, lr}
    9440:	mov	r4, r0
	if (this != &rval) move(rval);
    9442:	beq.n	9448 <String::operator=(String&&)+0xc>
    9444:	bl	93f0 <String::move(String&)>
	return *this;
}
    9448:	mov	r0, r4
    944a:	pop	{r4, pc}

0000944c <String::equals(char const*) const>:
	return (len == s2.len && compareTo(s2) == 0);
}

unsigned char String::equals(const char *cstr) const
{
	if (len == 0) return (cstr == NULL || *cstr == 0);
    944c:	ldr	r2, [r0, #8]
{
	return (len == s2.len && compareTo(s2) == 0);
}

unsigned char String::equals(const char *cstr) const
{
    944e:	push	{r3, lr}
    9450:	mov	r3, r1
	if (len == 0) return (cstr == NULL || *cstr == 0);
    9452:	cbnz	r2, 9460 <String::equals(char const*) const+0x14>
    9454:	cbz	r1, 9474 <String::equals(char const*) const+0x28>
	if (cstr == NULL) return buffer[0] == 0;
    9456:	ldrb	r0, [r3, #0]
    9458:	clz	r0, r0
    945c:	lsrs	r0, r0, #5
    945e:	pop	{r3, pc}
    9460:	cbz	r1, 9470 <String::equals(char const*) const+0x24>
	return strcmp(buffer, cstr) == 0;
    9462:	ldr	r0, [r0, #0]
    9464:	bl	c6a8 <strcmp>
    9468:	clz	r0, r0
    946c:	lsrs	r0, r0, #5
}
    946e:	pop	{r3, pc}
}

unsigned char String::equals(const char *cstr) const
{
	if (len == 0) return (cstr == NULL || *cstr == 0);
	if (cstr == NULL) return buffer[0] == 0;
    9470:	ldr	r3, [r0, #0]
    9472:	b.n	9456 <String::equals(char const*) const+0xa>
    9474:	movs	r0, #1
	return (len == s2.len && compareTo(s2) == 0);
}

unsigned char String::equals(const char *cstr) const
{
	if (len == 0) return (cstr == NULL || *cstr == 0);
    9476:	pop	{r3, pc}

00009478 <String::getBytes(unsigned char*, unsigned int, unsigned int) const>:
	return buffer[index];
}

void String::getBytes(unsigned char *buf, unsigned int bufsize, unsigned int index) const
{
	if (!bufsize || !buf) return;
    9478:	cbz	r2, 94a8 <String::getBytes(unsigned char*, unsigned int, unsigned int) const+0x30>
    947a:	cbz	r1, 94a8 <String::getBytes(unsigned char*, unsigned int, unsigned int) const+0x30>
	if (index >= len || !buffer) return 0;
	return buffer[index];
}

void String::getBytes(unsigned char *buf, unsigned int bufsize, unsigned int index) const
{
    947c:	push	{r3, r4, r5, lr}
	if (!bufsize || !buf) return;
	if (index >= len) {
    947e:	ldr	r4, [r0, #8]
    9480:	cmp	r4, r3
    9482:	bls.n	94a2 <String::getBytes(unsigned char*, unsigned int, unsigned int) const+0x2a>
		buf[0] = 0;
		return;
	}
	unsigned int n = bufsize - 1;
	if (n > len - index) n = len - index;
    9484:	subs	r4, r4, r3
	if (!bufsize || !buf) return;
	if (index >= len) {
		buf[0] = 0;
		return;
	}
	unsigned int n = bufsize - 1;
    9486:	subs	r2, #1
    9488:	mov	r5, r1
    948a:	cmp	r4, r2
	if (n > len - index) n = len - index;
	strncpy((char *)buf, buffer + index, n);
    948c:	ldr	r1, [r0, #0]
    948e:	it	cs
    9490:	movcs	r4, r2
    9492:	add	r1, r3
    9494:	mov	r2, r4
    9496:	mov	r0, r5
    9498:	bl	cb1c <strncpy>
	buf[n] = 0;
    949c:	movs	r3, #0
    949e:	strb	r3, [r5, r4]
    94a0:	pop	{r3, r4, r5, pc}

void String::getBytes(unsigned char *buf, unsigned int bufsize, unsigned int index) const
{
	if (!bufsize || !buf) return;
	if (index >= len) {
		buf[0] = 0;
    94a2:	movs	r3, #0
    94a4:	strb	r3, [r1, #0]
		return;
    94a6:	pop	{r3, r4, r5, pc}
    94a8:	bx	lr
    94aa:	nop

000094ac <String::indexOf(char) const>:
	return indexOf(c, 0);
}

int String::indexOf( char ch, unsigned int fromIndex ) const
{
	if (fromIndex >= len) return -1;
    94ac:	ldr	r3, [r0, #8]
    94ae:	cbz	r3, 94c0 <String::indexOf(char) const+0x14>
/*********************************************/
/*  Search                                   */
/*********************************************/

int String::indexOf(char c) const
{
    94b0:	push	{r4, lr}
}

int String::indexOf( char ch, unsigned int fromIndex ) const
{
	if (fromIndex >= len) return -1;
	const char* temp = strchr(buffer + fromIndex, ch);
    94b2:	ldr	r4, [r0, #0]
    94b4:	mov	r0, r4
    94b6:	bl	c5c8 <strchr>
	if (temp == NULL) return -1;
    94ba:	cbz	r0, 94c6 <String::indexOf(char) const+0x1a>
	return temp - buffer;
    94bc:	subs	r0, r0, r4
    94be:	pop	{r4, pc}
	return indexOf(c, 0);
}

int String::indexOf( char ch, unsigned int fromIndex ) const
{
	if (fromIndex >= len) return -1;
    94c0:	mov.w	r0, #4294967295
/*********************************************/

int String::indexOf(char c) const
{
	return indexOf(c, 0);
}
    94c4:	bx	lr

int String::indexOf( char ch, unsigned int fromIndex ) const
{
	if (fromIndex >= len) return -1;
    94c6:	mov.w	r0, #4294967295
/*********************************************/

int String::indexOf(char c) const
{
	return indexOf(c, 0);
}
    94ca:	pop	{r4, pc}

000094cc <String::indexOf(String const&) const>:
	return indexOf(s2, 0);
}

int String::indexOf(const String &s2, unsigned int fromIndex) const
{
	if (fromIndex >= len) return -1;
    94cc:	ldr	r3, [r0, #8]
    94ce:	cbz	r3, 94e2 <String::indexOf(String const&) const+0x16>
	if (temp == NULL) return -1;
	return temp - buffer;
}

int String::indexOf(const String &s2) const
{
    94d0:	push	{r4, lr}
}

int String::indexOf(const String &s2, unsigned int fromIndex) const
{
	if (fromIndex >= len) return -1;
	const char *found = strstr(buffer + fromIndex, s2.buffer);
    94d2:	ldr	r4, [r0, #0]
    94d4:	ldr	r1, [r1, #0]
    94d6:	mov	r0, r4
    94d8:	bl	ce3c <strstr>
	if (found == NULL) return -1;
    94dc:	cbz	r0, 94e8 <String::indexOf(String const&) const+0x1c>
	return found - buffer;
    94de:	subs	r0, r0, r4
    94e0:	pop	{r4, pc}
	return indexOf(s2, 0);
}

int String::indexOf(const String &s2, unsigned int fromIndex) const
{
	if (fromIndex >= len) return -1;
    94e2:	mov.w	r0, #4294967295
}

int String::indexOf(const String &s2) const
{
	return indexOf(s2, 0);
}
    94e6:	bx	lr

int String::indexOf(const String &s2, unsigned int fromIndex) const
{
	if (fromIndex >= len) return -1;
    94e8:	mov.w	r0, #4294967295
}

int String::indexOf(const String &s2) const
{
	return indexOf(s2, 0);
}
    94ec:	pop	{r4, pc}
    94ee:	nop

000094f0 <String::substring(unsigned int, unsigned int) const>:
	return substring(left, len);
}

String String::substring(unsigned int left, unsigned int right) const
{
	if (left > right) {
    94f0:	cmp	r2, r3
{
	return substring(left, len);
}

String String::substring(unsigned int left, unsigned int right) const
{
    94f2:	push	{r3, r4, r5, r6, r7, lr}
    94f4:	mov	r4, r0
    94f6:	mov	r6, r1
	if (left > right) {
    94f8:	bls.n	9500 <String::substring(unsigned int, unsigned int) const+0x10>
    94fa:	mov	r1, r2
    94fc:	mov	r2, r3
    94fe:	mov	r3, r1
/*  Memory Management                        */
/*********************************************/

inline void String::init(void)
{
	buffer = NULL;
    9500:	movs	r1, #0
	capacity = 0;
	len = 0;
    9502:	str	r1, [r4, #8]
	flags = 0;
    9504:	strb	r1, [r4, #12]
		unsigned int temp = right;
		right = left;
		left = temp;
	}
	String out;
	if (left > len) return out;
    9506:	ldr	r0, [r6, #8]
/*  Memory Management                        */
/*********************************************/

inline void String::init(void)
{
	buffer = NULL;
    9508:	str	r1, [r4, #0]
		unsigned int temp = right;
		right = left;
		left = temp;
	}
	String out;
	if (left > len) return out;
    950a:	cmp	r2, r0
/*********************************************/

inline void String::init(void)
{
	buffer = NULL;
	capacity = 0;
    950c:	str	r1, [r4, #4]
		unsigned int temp = right;
		right = left;
		left = temp;
	}
	String out;
	if (left > len) return out;
    950e:	bhi.n	952e <String::substring(unsigned int, unsigned int) const+0x3e>
    9510:	cmp	r3, r0
    9512:	it	cs
    9514:	movcs	r3, r0
    9516:	mov	r5, r3
	if (right > len) right = len;
	char temp = buffer[right];  // save the replaced character
    9518:	ldr	r3, [r6, #0]
    951a:	ldrb	r7, [r3, r5]
	buffer[right] = '\0';	
    951c:	strb	r1, [r3, r5]
	out = buffer + left;  // pointer arithmetic
    951e:	ldr	r3, [r6, #0]
}
#endif

String & String::operator = (const char *cstr)
{
	if (cstr) {
    9520:	adds	r1, r3, r2
    9522:	beq.n	9532 <String::substring(unsigned int, unsigned int) const+0x42>
    9524:	mov	r0, r4
    9526:	bl	93d4 <String::operator=(char const*) [clone .part.3]>
    952a:	ldr	r3, [r6, #0]
	if (left > len) return out;
	if (right > len) right = len;
	char temp = buffer[right];  // save the replaced character
	buffer[right] = '\0';	
	out = buffer + left;  // pointer arithmetic
	buffer[right] = temp;  //restore character
    952c:	strb	r7, [r3, r5]
	return out;
}
    952e:	mov	r0, r4
    9530:	pop	{r3, r4, r5, r6, r7, pc}
String & String::operator = (const char *cstr)
{
	if (cstr) {
		copy(cstr, strlen(cstr));
	} else {
		len = 0;
    9532:	str	r1, [r4, #8]
	if (left > len) return out;
	if (right > len) right = len;
	char temp = buffer[right];  // save the replaced character
	buffer[right] = '\0';	
	out = buffer + left;  // pointer arithmetic
	buffer[right] = temp;  //restore character
    9534:	strb	r7, [r3, r5]
    9536:	b.n	952e <String::substring(unsigned int, unsigned int) const+0x3e>

00009538 <serialEvent2()>:
#include "HardwareSerial.h"

HardwareSerial2 Serial2;

void serialEvent2() __attribute__((weak));
void serialEvent2() {}
    9538:	bx	lr
    953a:	nop

0000953c <serialEvent4()>:
#ifdef HAS_KINETISK_UART3

HardwareSerial4 Serial4;

void serialEvent4() __attribute__((weak));
void serialEvent4() {}
    953c:	bx	lr
    953e:	nop

00009540 <main>:
 */

#include <Arduino.h>

extern "C" int main(void)
{
    9540:	push	{r3, lr}
	}


#else
	// Arduino's main() function just calls setup() and loop()....
	setup();
    9542:	bl	d14 <setup>
	while (1) {
		loop();
    9546:	bl	f78 <loop>
		yield();
    954a:	bl	8b50 <yield>
    954e:	b.n	9546 <main+0x6>

00009550 <AudioStream::initialize_memory(audio_block_struct*, unsigned int)>:


// Set up the pool of audio data blocks
// placing them all onto the free list
void AudioStream::initialize_memory(audio_block_t *data, unsigned int num)
{
    9550:	cmp.w	r1, #896	; 0x380
    9554:	push	{r4, r5, r6, r7}
    9556:	it	cs
    9558:	movcs.w	r1, #896	; 0x380
	unsigned int maxnum = MAX_AUDIO_MEMORY / AUDIO_BLOCK_SAMPLES / 2;

	//Serial.println("AudioStream initialize_memory");
	//delay(10);
	if (num > maxnum) num = maxnum;
	__disable_irq();
    955c:	cpsid	i
	memory_pool = data;
    955e:	ldr	r2, [pc, #76]	; (95ac <AudioStream::initialize_memory(audio_block_struct*, unsigned int)+0x5c>)
	memory_pool_first_mask = 0;
    9560:	ldr	r4, [pc, #76]	; (95b0 <AudioStream::initialize_memory(audio_block_struct*, unsigned int)+0x60>)
    9562:	ldr	r3, [pc, #80]	; (95b4 <AudioStream::initialize_memory(audio_block_struct*, unsigned int)+0x64>)

	//Serial.println("AudioStream initialize_memory");
	//delay(10);
	if (num > maxnum) num = maxnum;
	__disable_irq();
	memory_pool = data;
    9564:	str	r0, [r2, #0]
	memory_pool_first_mask = 0;
    9566:	movs	r2, #0
    9568:	strh	r2, [r4, #0]
    956a:	add.w	r4, r3, #112	; 0x70
	for (i=0; i < NUM_MASKS; i++) {
		memory_pool_available_mask[i] = 0;
    956e:	str.w	r2, [r3, #4]!
	//delay(10);
	if (num > maxnum) num = maxnum;
	__disable_irq();
	memory_pool = data;
	memory_pool_first_mask = 0;
	for (i=0; i < NUM_MASKS; i++) {
    9572:	cmp	r3, r4
    9574:	bne.n	956e <AudioStream::initialize_memory(audio_block_struct*, unsigned int)+0x1e>
		memory_pool_available_mask[i] = 0;
	}
	for (i=0; i < num; i++) {
    9576:	cbz	r1, 95a6 <AudioStream::initialize_memory(audio_block_struct*, unsigned int)+0x56>
    9578:	ldr	r6, [pc, #60]	; (95b8 <AudioStream::initialize_memory(audio_block_struct*, unsigned int)+0x68>)
    957a:	movs	r3, #0
		memory_pool_available_mask[i >> 5] |= (1 << (i & 0x1F));
    957c:	movs	r7, #1
    957e:	lsrs	r5, r3, #5
    9580:	and.w	r4, r3, #31
    9584:	ldr.w	r2, [r6, r5, lsl #2]
    9588:	lsl.w	r4, r7, r4
	memory_pool = data;
	memory_pool_first_mask = 0;
	for (i=0; i < NUM_MASKS; i++) {
		memory_pool_available_mask[i] = 0;
	}
	for (i=0; i < num; i++) {
    958c:	adds	r3, #1
		memory_pool_available_mask[i >> 5] |= (1 << (i & 0x1F));
    958e:	orrs	r2, r4
	memory_pool = data;
	memory_pool_first_mask = 0;
	for (i=0; i < NUM_MASKS; i++) {
		memory_pool_available_mask[i] = 0;
	}
	for (i=0; i < num; i++) {
    9590:	cmp	r3, r1
		memory_pool_available_mask[i >> 5] |= (1 << (i & 0x1F));
    9592:	str.w	r2, [r6, r5, lsl #2]
	memory_pool = data;
	memory_pool_first_mask = 0;
	for (i=0; i < NUM_MASKS; i++) {
		memory_pool_available_mask[i] = 0;
	}
	for (i=0; i < num; i++) {
    9596:	bne.n	957e <AudioStream::initialize_memory(audio_block_struct*, unsigned int)+0x2e>
    9598:	movs	r3, #0
		memory_pool_available_mask[i >> 5] |= (1 << (i & 0x1F));
	}
	for (i=0; i < num; i++) {
		data[i].memory_pool_index = i;
    959a:	strh	r3, [r0, #2]
		memory_pool_available_mask[i] = 0;
	}
	for (i=0; i < num; i++) {
		memory_pool_available_mask[i >> 5] |= (1 << (i & 0x1F));
	}
	for (i=0; i < num; i++) {
    959c:	adds	r3, #1
    959e:	cmp	r3, r1
    95a0:	add.w	r0, r0, #260	; 0x104
    95a4:	bne.n	959a <AudioStream::initialize_memory(audio_block_struct*, unsigned int)+0x4a>
		data[i].memory_pool_index = i;
	}
	__enable_irq();
    95a6:	cpsie	i

}
    95a8:	pop	{r4, r5, r6, r7}
    95aa:	bx	lr
    95ac:	.word	0x20012ba4
    95b0:	.word	0x20012c1e
    95b4:	.word	0x20012ba8
    95b8:	.word	0x20012bac

000095bc <AudioStream::allocate()>:

// Allocate 1 audio data block.  If successful
// the caller is the only owner of this new block
audio_block_t * AudioStream::allocate(void)
{
    95bc:	push	{r4, r5, r6, r7}
	audio_block_t *block;
	uint32_t used;

	p = memory_pool_available_mask;
	end = p + NUM_MASKS;
	__disable_irq();
    95be:	cpsid	i
	index = memory_pool_first_mask;
    95c0:	ldr	r7, [pc, #140]	; (9650 <AudioStream::allocate()+0x94>)
	p += index;
    95c2:	ldr	r6, [pc, #144]	; (9654 <AudioStream::allocate()+0x98>)
	uint32_t used;

	p = memory_pool_available_mask;
	end = p + NUM_MASKS;
	__disable_irq();
	index = memory_pool_first_mask;
    95c4:	ldrh	r4, [r7, #0]
	p += index;
	while (1) {
		if (p >= end) {
    95c6:	add.w	r3, r6, #112	; 0x70

	p = memory_pool_available_mask;
	end = p + NUM_MASKS;
	__disable_irq();
	index = memory_pool_first_mask;
	p += index;
    95ca:	add.w	r0, r6, r4, lsl #2
	while (1) {
		if (p >= end) {
    95ce:	cmp	r0, r3
    95d0:	bcs.n	95f8 <AudioStream::allocate()+0x3c>
			__enable_irq();
			//Serial.println("alloc:null");
			return NULL;
		}
		avail = *p;
    95d2:	ldr.w	r1, [r6, r4, lsl #2]
		if (avail) break;
    95d6:	cbnz	r1, 9600 <AudioStream::allocate()+0x44>
    95d8:	adds	r2, r0, #4
    95da:	add.w	r5, r6, #115	; 0x73
    95de:	adds	r3, r4, #1
    95e0:	subs	r5, r5, r2
    95e2:	add.w	r5, r3, r5, lsr #2
    95e6:	b.n	95f0 <AudioStream::allocate()+0x34>
		if (p >= end) {
			__enable_irq();
			//Serial.println("alloc:null");
			return NULL;
		}
		avail = *p;
    95e8:	ldr.w	r1, [r2], #4
		if (avail) break;
    95ec:	cbnz	r1, 9600 <AudioStream::allocate()+0x44>
    95ee:	adds	r3, #1
	end = p + NUM_MASKS;
	__disable_irq();
	index = memory_pool_first_mask;
	p += index;
	while (1) {
		if (p >= end) {
    95f0:	cmp	r3, r5
			//Serial.println("alloc:null");
			return NULL;
		}
		avail = *p;
		if (avail) break;
		index++;
    95f2:	mov	r4, r3
		p++;
    95f4:	mov	r0, r2
	end = p + NUM_MASKS;
	__disable_irq();
	index = memory_pool_first_mask;
	p += index;
	while (1) {
		if (p >= end) {
    95f6:	bne.n	95e8 <AudioStream::allocate()+0x2c>
			__enable_irq();
    95f8:	cpsie	i
			//Serial.println("alloc:null");
			return NULL;
    95fa:	movs	r0, #0
	block->ref_count = 1;
	if (used > memory_used_max) memory_used_max = used;
	//Serial.print("alloc:");
	//Serial.println((uint32_t)block, HEX);
	return block;
}
    95fc:	pop	{r4, r5, r6, r7}
    95fe:	bx	lr
		avail = *p;
		if (avail) break;
		index++;
		p++;
	}
	n = __builtin_clz(avail);
    9600:	clz	r3, r1
	avail &= ~(0x80000000 >> n);
    9604:	mov.w	r2, #2147483648	; 0x80000000
    9608:	lsrs	r2, r3
    960a:	bic.w	r1, r1, r2
	*p = avail;
    960e:	str	r1, [r0, #0]
	if (!avail) index++;
    9610:	cbnz	r1, 9614 <AudioStream::allocate()+0x58>
    9612:	adds	r4, #1
	memory_pool_first_mask = index;
	used = memory_used + 1;
    9614:	ldr	r1, [pc, #64]	; (9658 <AudioStream::allocate()+0x9c>)
	}
	n = __builtin_clz(avail);
	avail &= ~(0x80000000 >> n);
	*p = avail;
	if (!avail) index++;
	memory_pool_first_mask = index;
    9616:	strh	r4, [r7, #0]
	used = memory_used + 1;
    9618:	ldrh	r2, [r1, #0]
    961a:	adds	r2, #1
	memory_used = used;
    961c:	uxth	r4, r2
    961e:	strh	r4, [r1, #0]
	__enable_irq();
    9620:	cpsie	i
	index = p - memory_pool_available_mask;
	block = memory_pool + ((index << 5) + (31 - n));
    9622:	subs	r0, r0, r6
    9624:	asrs	r0, r0, #2
    9626:	rsb	r0, r3, r0, lsl #5
    962a:	add.w	r0, r0, r0, lsl #6
    962e:	lsls	r3, r0, #2
    9630:	ldr	r0, [pc, #40]	; (965c <AudioStream::allocate()+0xa0>)
	block->ref_count = 1;
	if (used > memory_used_max) memory_used_max = used;
    9632:	ldr	r1, [pc, #44]	; (9660 <AudioStream::allocate()+0xa4>)
	memory_pool_first_mask = index;
	used = memory_used + 1;
	memory_used = used;
	__enable_irq();
	index = p - memory_pool_available_mask;
	block = memory_pool + ((index << 5) + (31 - n));
    9634:	ldr	r0, [r0, #0]
    9636:	add.w	r3, r3, #8032	; 0x1f60
    963a:	adds	r3, #28
	block->ref_count = 1;
    963c:	movs	r5, #1
    963e:	strb	r5, [r0, r3]
	if (used > memory_used_max) memory_used_max = used;
    9640:	ldrh	r5, [r1, #0]
    9642:	cmp	r2, r5
	memory_pool_first_mask = index;
	used = memory_used + 1;
	memory_used = used;
	__enable_irq();
	index = p - memory_pool_available_mask;
	block = memory_pool + ((index << 5) + (31 - n));
    9644:	add	r0, r3
	block->ref_count = 1;
	if (used > memory_used_max) memory_used_max = used;
    9646:	it	hi
    9648:	strhhi	r4, [r1, #0]
	//Serial.print("alloc:");
	//Serial.println((uint32_t)block, HEX);
	return block;
}
    964a:	pop	{r4, r5, r6, r7}
    964c:	bx	lr
    964e:	nop
    9650:	.word	0x20012c1e
    9654:	.word	0x20012bac
    9658:	.word	0x20012c20
    965c:	.word	0x20012ba4
    9660:	.word	0x20012ba0

00009664 <AudioStream::release(audio_block_struct*)>:
// other streams have ownership, the block is
// returned to the free pool
void AudioStream::release(audio_block_t *block)
{
	//if (block == NULL) return;
	uint32_t mask = (0x80000000 >> (31 - (block->memory_pool_index & 0x1F)));
    9664:	ldrh	r2, [r0, #2]
	uint32_t index = block->memory_pool_index >> 5;

	__disable_irq();
    9666:	cpsid	i
	if (block->ref_count > 1) {
    9668:	ldrb	r3, [r0, #0]
    966a:	cmp	r3, #1
    966c:	bls.n	9676 <AudioStream::release(audio_block_struct*)+0x12>
		block->ref_count--;
    966e:	subs	r3, #1
    9670:	strb	r3, [r0, #0]
		//Serial.println((uint32_t)block, HEX);
		memory_pool_available_mask[index] |= mask;
		if (index < memory_pool_first_mask) memory_pool_first_mask = index;
		memory_used--;
	}
	__enable_irq();
    9672:	cpsie	i
    9674:	bx	lr
// returned to the free pool
void AudioStream::release(audio_block_t *block)
{
	//if (block == NULL) return;
	uint32_t mask = (0x80000000 >> (31 - (block->memory_pool_index & 0x1F)));
	uint32_t index = block->memory_pool_index >> 5;
    9676:	asrs	r3, r2, #5

// Release ownership of a data block.  If no
// other streams have ownership, the block is
// returned to the free pool
void AudioStream::release(audio_block_t *block)
{
    9678:	push	{r4, r5, r6}
	if (block->ref_count > 1) {
		block->ref_count--;
	} else {
		//Serial.print("reles:");
		//Serial.println((uint32_t)block, HEX);
		memory_pool_available_mask[index] |= mask;
    967a:	ldr	r4, [pc, #48]	; (96ac <AudioStream::release(audio_block_struct*)+0x48>)
		if (index < memory_pool_first_mask) memory_pool_first_mask = index;
    967c:	ldr	r5, [pc, #48]	; (96b0 <AudioStream::release(audio_block_struct*)+0x4c>)
	if (block->ref_count > 1) {
		block->ref_count--;
	} else {
		//Serial.print("reles:");
		//Serial.println((uint32_t)block, HEX);
		memory_pool_available_mask[index] |= mask;
    967e:	ldr.w	r1, [r4, r3, lsl #2]
		if (index < memory_pool_first_mask) memory_pool_first_mask = index;
    9682:	ldrh	r6, [r5, #0]
	if (block->ref_count > 1) {
		block->ref_count--;
	} else {
		//Serial.print("reles:");
		//Serial.println((uint32_t)block, HEX);
		memory_pool_available_mask[index] |= mask;
    9684:	mvns	r2, r2
    9686:	mov.w	r0, #2147483648	; 0x80000000
    968a:	and.w	r2, r2, #31
    968e:	lsr.w	r2, r0, r2
    9692:	orrs	r1, r2
		if (index < memory_pool_first_mask) memory_pool_first_mask = index;
		memory_used--;
    9694:	ldr	r2, [pc, #28]	; (96b4 <AudioStream::release(audio_block_struct*)+0x50>)
	if (block->ref_count > 1) {
		block->ref_count--;
	} else {
		//Serial.print("reles:");
		//Serial.println((uint32_t)block, HEX);
		memory_pool_available_mask[index] |= mask;
    9696:	str.w	r1, [r4, r3, lsl #2]
		if (index < memory_pool_first_mask) memory_pool_first_mask = index;
    969a:	cmp	r3, r6
    969c:	it	cc
    969e:	strhcc	r3, [r5, #0]
		memory_used--;
    96a0:	ldrh	r3, [r2, #0]
    96a2:	subs	r3, #1
    96a4:	strh	r3, [r2, #0]
	}
	__enable_irq();
    96a6:	cpsie	i
}
    96a8:	pop	{r4, r5, r6}
    96aa:	bx	lr
    96ac:	.word	0x20012bac
    96b0:	.word	0x20012c1e
    96b4:	.word	0x20012c20

000096b8 <AudioStream::transmit(audio_block_struct*, unsigned char)>:
// by the caller after it's transmitted.  This allows the
// caller to transmit to same block to more than 1 output,
// and then release it once after all transmit calls.
void AudioStream::transmit(audio_block_t *block, unsigned char index)
{
	for (AudioConnection *c = destination_list; c != NULL; c = c->next_dest) {
    96b8:	ldr	r3, [r0, #12]
    96ba:	cbz	r3, 96ea <AudioStream::transmit(audio_block_struct*, unsigned char)+0x32>
// owned by this object.  Normally, a block must be released
// by the caller after it's transmitted.  This allows the
// caller to transmit to same block to more than 1 output,
// and then release it once after all transmit calls.
void AudioStream::transmit(audio_block_t *block, unsigned char index)
{
    96bc:	push	{r4, r5}
    96be:	b.n	96c4 <AudioStream::transmit(audio_block_struct*, unsigned char)+0xc>
	for (AudioConnection *c = destination_list; c != NULL; c = c->next_dest) {
    96c0:	ldr	r3, [r3, #12]
    96c2:	cbz	r3, 96e8 <AudioStream::transmit(audio_block_struct*, unsigned char)+0x30>
		if (c->src_index == index) {
    96c4:	ldrb	r0, [r3, #8]
    96c6:	cmp	r0, r2
    96c8:	bne.n	96c0 <AudioStream::transmit(audio_block_struct*, unsigned char)+0x8>
			if (c->dst.inputQueue[c->dest_index] == NULL) {
    96ca:	ldr	r0, [r3, #4]
    96cc:	ldrb	r4, [r3, #9]
    96ce:	ldr	r0, [r0, #16]
    96d0:	ldr.w	r5, [r0, r4, lsl #2]
    96d4:	cmp	r5, #0
    96d6:	bne.n	96c0 <AudioStream::transmit(audio_block_struct*, unsigned char)+0x8>
				c->dst.inputQueue[c->dest_index] = block;
    96d8:	str.w	r1, [r0, r4, lsl #2]
				block->ref_count++;
    96dc:	ldrb	r0, [r1, #0]
    96de:	adds	r0, #1
    96e0:	strb	r0, [r1, #0]
// by the caller after it's transmitted.  This allows the
// caller to transmit to same block to more than 1 output,
// and then release it once after all transmit calls.
void AudioStream::transmit(audio_block_t *block, unsigned char index)
{
	for (AudioConnection *c = destination_list; c != NULL; c = c->next_dest) {
    96e2:	ldr	r3, [r3, #12]
    96e4:	cmp	r3, #0
    96e6:	bne.n	96c4 <AudioStream::transmit(audio_block_struct*, unsigned char)+0xc>
				c->dst.inputQueue[c->dest_index] = block;
				block->ref_count++;
			}
		}
	}
}
    96e8:	pop	{r4, r5}
    96ea:	bx	lr

000096ec <AudioStream::receiveReadOnly(unsigned int)>:
// may be shared with other streams, so it must not be written
audio_block_t * AudioStream::receiveReadOnly(unsigned int index)
{
	audio_block_t *in;

	if (index >= num_inputs) return NULL;
    96ec:	ldrb	r3, [r0, #9]
    96ee:	cmp	r3, r1
    96f0:	bls.n	9700 <AudioStream::receiveReadOnly(unsigned int)+0x14>
	in = inputQueue[index];
    96f2:	ldr	r3, [r0, #16]
	inputQueue[index] = NULL;
    96f4:	movs	r2, #0
audio_block_t * AudioStream::receiveReadOnly(unsigned int index)
{
	audio_block_t *in;

	if (index >= num_inputs) return NULL;
	in = inputQueue[index];
    96f6:	ldr.w	r0, [r3, r1, lsl #2]
	inputQueue[index] = NULL;
    96fa:	str.w	r2, [r3, r1, lsl #2]
	return in;
    96fe:	bx	lr
// may be shared with other streams, so it must not be written
audio_block_t * AudioStream::receiveReadOnly(unsigned int index)
{
	audio_block_t *in;

	if (index >= num_inputs) return NULL;
    9700:	movs	r0, #0
	in = inputQueue[index];
	inputQueue[index] = NULL;
	return in;
}
    9702:	bx	lr

00009704 <AudioStream::receiveWritable(unsigned int)>:

// Receive block from an input.  The block will not
// be shared, so its contents may be changed.
audio_block_t * AudioStream::receiveWritable(unsigned int index)
{
    9704:	push	{r3, r4, r5, lr}
	audio_block_t *in, *p;

	if (index >= num_inputs) return NULL;
    9706:	ldrb	r3, [r0, #9]
    9708:	cmp	r3, r1
    970a:	bls.n	9742 <AudioStream::receiveWritable(unsigned int)+0x3e>
	in = inputQueue[index];
    970c:	ldr	r3, [r0, #16]
    970e:	ldr.w	r4, [r3, r1, lsl #2]
	inputQueue[index] = NULL;
    9712:	movs	r2, #0
    9714:	str.w	r2, [r3, r1, lsl #2]
	if (in && in->ref_count > 1) {
    9718:	cbz	r4, 9742 <AudioStream::receiveWritable(unsigned int)+0x3e>
    971a:	ldrb	r3, [r4, #0]
    971c:	cmp	r3, #1
    971e:	bls.n	973e <AudioStream::receiveWritable(unsigned int)+0x3a>
		p = allocate();
    9720:	bl	95bc <AudioStream::allocate()>
		if (p) memcpy(p->data, in->data, sizeof(p->data));
    9724:	mov	r5, r0
    9726:	cbz	r0, 9734 <AudioStream::receiveWritable(unsigned int)+0x30>
    9728:	mov.w	r2, #256	; 0x100
    972c:	adds	r1, r4, #4
    972e:	adds	r0, #4
    9730:	bl	6f10 <memcpy>
		in->ref_count--;
    9734:	ldrb	r3, [r4, #0]
    9736:	subs	r3, #1
    9738:	strb	r3, [r4, #0]

	if (index >= num_inputs) return NULL;
	in = inputQueue[index];
	inputQueue[index] = NULL;
	if (in && in->ref_count > 1) {
		p = allocate();
    973a:	mov	r0, r5
    973c:	pop	{r3, r4, r5, pc}
    973e:	mov	r0, r4
		if (p) memcpy(p->data, in->data, sizeof(p->data));
		in->ref_count--;
		in = p;
	}
	return in;
}
    9740:	pop	{r3, r4, r5, pc}
// be shared, so its contents may be changed.
audio_block_t * AudioStream::receiveWritable(unsigned int index)
{
	audio_block_t *in, *p;

	if (index >= num_inputs) return NULL;
    9742:	movs	r0, #0
    9744:	pop	{r3, r4, r5, pc}
    9746:	nop

00009748 <AudioConnection::connect()>:

void AudioConnection::connect(void)
{
	AudioConnection *p;

	if (isConnected) return;
    9748:	ldrb	r3, [r0, #16]
    974a:	cbnz	r3, 9796 <AudioConnection::connect()+0x4e>
	if (dest_index > dst.num_inputs) return;
    974c:	ldr	r3, [r0, #4]
    974e:	ldrb	r2, [r0, #9]
    9750:	ldrb	r3, [r3, #9]
    9752:	cmp	r2, r3
    9754:	bhi.n	9796 <AudioConnection::connect()+0x4e>
	return in;
}


void AudioConnection::connect(void)
{
    9756:	push	{r4, r5}
	AudioConnection *p;

	if (isConnected) return;
	if (dest_index > dst.num_inputs) return;
	__disable_irq();
    9758:	cpsid	i
	p = src.destination_list;
    975a:	ldr	r4, [r0, #0]
    975c:	ldr	r3, [r4, #12]
	if (p == NULL) {
    975e:	cbz	r3, 97ac <AudioConnection::connect()+0x64>
		src.destination_list = this;
	} else {
		while (p->next_dest) {
    9760:	ldr	r2, [r3, #12]
    9762:	cbz	r2, 9772 <AudioConnection::connect()+0x2a>
			if (&p->src == &this->src && &p->dst == &this->dst
    9764:	ldr	r1, [r3, #0]
    9766:	cmp	r4, r1
    9768:	beq.n	9798 <AudioConnection::connect()+0x50>
	return in;
}


void AudioConnection::connect(void)
{
    976a:	mov	r3, r2
	__disable_irq();
	p = src.destination_list;
	if (p == NULL) {
		src.destination_list = this;
	} else {
		while (p->next_dest) {
    976c:	ldr	r2, [r3, #12]
    976e:	cmp	r2, #0
    9770:	bne.n	9764 <AudioConnection::connect()+0x1c>
				__enable_irq();
				return;
			}
			p = p->next_dest;
		}
		p->next_dest = this;
    9772:	str	r0, [r3, #12]
	}
	this->next_dest = NULL;
    9774:	movs	r3, #0
    9776:	str	r3, [r0, #12]
	src.numConnections++;
    9778:	ldrb	r3, [r4, #10]
    977a:	adds	r3, #1
    977c:	strb	r3, [r4, #10]
	src.active = true;
    977e:	ldr	r2, [r0, #0]

	dst.numConnections++;
    9780:	ldr	r1, [r0, #4]
		}
		p->next_dest = this;
	}
	this->next_dest = NULL;
	src.numConnections++;
	src.active = true;
    9782:	movs	r3, #1
    9784:	strb	r3, [r2, #8]

	dst.numConnections++;
    9786:	ldrb	r2, [r1, #10]
    9788:	add	r2, r3
    978a:	strb	r2, [r1, #10]
	dst.active = true;
    978c:	ldr	r2, [r0, #4]
    978e:	strb	r3, [r2, #8]

	isConnected = true;
    9790:	strb	r3, [r0, #16]

	__enable_irq();
    9792:	cpsie	i
}
    9794:	pop	{r4, r5}
    9796:	bx	lr
	p = src.destination_list;
	if (p == NULL) {
		src.destination_list = this;
	} else {
		while (p->next_dest) {
			if (&p->src == &this->src && &p->dst == &this->dst
    9798:	ldr	r5, [r3, #4]
    979a:	ldr	r1, [r0, #4]
    979c:	cmp	r5, r1
    979e:	bne.n	976a <AudioConnection::connect()+0x22>
				&& p->src_index == this->src_index && p->dest_index == this->dest_index) {
    97a0:	ldrh	r1, [r3, #8]
    97a2:	ldrh	r3, [r0, #8]
    97a4:	cmp	r1, r3
    97a6:	beq.n	9792 <AudioConnection::connect()+0x4a>
	return in;
}


void AudioConnection::connect(void)
{
    97a8:	mov	r3, r2
    97aa:	b.n	976c <AudioConnection::connect()+0x24>
	if (isConnected) return;
	if (dest_index > dst.num_inputs) return;
	__disable_irq();
	p = src.destination_list;
	if (p == NULL) {
		src.destination_list = this;
    97ac:	str	r0, [r4, #12]
    97ae:	b.n	9774 <AudioConnection::connect()+0x2c>

000097b0 <AudioConnection::disconnect()>:

void AudioConnection::disconnect(void)
{
	AudioConnection *p;

	if (!isConnected) return;
    97b0:	ldrb	r3, [r0, #16]

	__enable_irq();
}

void AudioConnection::disconnect(void)
{
    97b2:	push	{r4, lr}
	AudioConnection *p;

	if (!isConnected) return;
    97b4:	cmp	r3, #0
    97b6:	beq.n	981e <AudioConnection::disconnect()+0x6e>
	if (dest_index > dst.num_inputs) return;
    97b8:	ldr	r3, [r0, #4]
    97ba:	ldrb	r2, [r0, #9]
    97bc:	ldrb	r3, [r3, #9]
    97be:	cmp	r2, r3
    97c0:	bhi.n	981e <AudioConnection::disconnect()+0x6e>
	__disable_irq();
    97c2:	cpsid	i
	// Remove destination from source list
	p = src.destination_list;
    97c4:	ldr	r2, [r0, #0]
    97c6:	ldr	r3, [r2, #12]
	if (p == NULL) {
    97c8:	cbz	r3, 981c <AudioConnection::disconnect()+0x6c>
//>>> PAH re-enable the IRQ
		__enable_irq();
		return;
	} else if (p == this) {
    97ca:	cmp	r0, r3
    97cc:	bne.n	97d4 <AudioConnection::disconnect()+0x24>
    97ce:	b.n	9824 <AudioConnection::disconnect()+0x74>
		} else {
			src.destination_list = NULL;
		}
	} else {
		while (p) {
			if (p == this) {
    97d0:	cmp	r0, r3
    97d2:	beq.n	97da <AudioConnection::disconnect()+0x2a>
				} else {
					p = NULL;
					break;
				}
			}
			p = p->next_dest;
    97d4:	ldr	r3, [r3, #12]
			src.destination_list = next_dest;
		} else {
			src.destination_list = NULL;
		}
	} else {
		while (p) {
    97d6:	cmp	r3, #0
    97d8:	bne.n	97d0 <AudioConnection::disconnect()+0x20>
			p = p->next_dest;
		}
	}
//>>> PAH release the audio buffer properly
	//Remove possible pending src block from destination
	if(dst.inputQueue[dest_index] != NULL) {
    97da:	ldr	r3, [r0, #4]
    97dc:	ldrb	r1, [r0, #9]
    97de:	ldr	r3, [r3, #16]
    97e0:	mov	r4, r0
    97e2:	ldr.w	r0, [r3, r1, lsl #2]
    97e6:	cbz	r0, 97fc <AudioConnection::disconnect()+0x4c>
		AudioStream::release(dst.inputQueue[dest_index]);
    97e8:	bl	9664 <AudioStream::release(audio_block_struct*)>
		// release() re-enables the IRQ. Need it to be disabled a little longer
		__disable_irq();
    97ec:	cpsid	i
		dst.inputQueue[dest_index] = NULL;
    97ee:	ldr	r3, [r4, #4]
    97f0:	ldrb	r2, [r4, #9]
    97f2:	ldr	r3, [r3, #16]
    97f4:	movs	r1, #0
    97f6:	str.w	r1, [r3, r2, lsl #2]
    97fa:	ldr	r2, [r4, #0]
	}

	//Check if the disconnected AudioStream objects should still be active
	src.numConnections--;
    97fc:	ldrb	r3, [r2, #10]
    97fe:	subs	r3, #1
    9800:	strb	r3, [r2, #10]
	if (src.numConnections == 0) {
    9802:	ldr	r3, [r4, #0]
    9804:	ldrb	r2, [r3, #10]
    9806:	cbnz	r2, 980a <AudioConnection::disconnect()+0x5a>
		src.active = false;
    9808:	strb	r2, [r3, #8]
	}

	dst.numConnections--;
    980a:	ldr	r2, [r4, #4]
    980c:	ldrb	r3, [r2, #10]
    980e:	subs	r3, #1
    9810:	strb	r3, [r2, #10]
	if (dst.numConnections == 0) {
    9812:	ldr	r3, [r4, #4]
    9814:	ldrb	r2, [r3, #10]
    9816:	cbz	r2, 9820 <AudioConnection::disconnect()+0x70>
		dst.active = false;
	}

	isConnected = false;
    9818:	movs	r3, #0
    981a:	strb	r3, [r4, #16]

	__enable_irq();
    981c:	cpsie	i
    981e:	pop	{r4, pc}
		src.active = false;
	}

	dst.numConnections--;
	if (dst.numConnections == 0) {
		dst.active = false;
    9820:	strb	r2, [r3, #8]
    9822:	b.n	9818 <AudioConnection::disconnect()+0x68>
	if (p == NULL) {
//>>> PAH re-enable the IRQ
		__enable_irq();
		return;
	} else if (p == this) {
		if (p->next_dest) {
    9824:	ldr	r3, [r0, #12]
			src.destination_list = next_dest;
		} else {
			src.destination_list = NULL;
    9826:	str	r3, [r2, #12]
    9828:	b.n	97da <AudioConnection::disconnect()+0x2a>
    982a:	nop

0000982c <AudioStream::update_setup()>:
// their constructors.
bool AudioStream::update_scheduled = false;

bool AudioStream::update_setup(void)
{
	if (update_scheduled) return false;
    982c:	ldr	r3, [pc, #32]	; (9850 <AudioStream::update_setup()+0x24>)
    982e:	ldrb	r2, [r3, #0]
    9830:	cbnz	r2, 984a <AudioStream::update_setup()+0x1e>
	NVIC_SET_PRIORITY(IRQ_SOFTWARE, 208); // 255 = lowest priority
    9832:	ldr	r0, [pc, #32]	; (9854 <AudioStream::update_setup()+0x28>)
	NVIC_ENABLE_IRQ(IRQ_SOFTWARE);
    9834:	ldr	r1, [pc, #32]	; (9858 <AudioStream::update_setup()+0x2c>)
// input and output based on interrupts, must check this variable in
// their constructors.
bool AudioStream::update_scheduled = false;

bool AudioStream::update_setup(void)
{
    9836:	push	{r4}
	if (update_scheduled) return false;
	NVIC_SET_PRIORITY(IRQ_SOFTWARE, 208); // 255 = lowest priority
    9838:	movs	r4, #208	; 0xd0
    983a:	strb	r4, [r0, #0]
	NVIC_ENABLE_IRQ(IRQ_SOFTWARE);
    983c:	movs	r2, #1
	update_scheduled = true;
	return true;
    983e:	mov	r0, r2

bool AudioStream::update_setup(void)
{
	if (update_scheduled) return false;
	NVIC_SET_PRIORITY(IRQ_SOFTWARE, 208); // 255 = lowest priority
	NVIC_ENABLE_IRQ(IRQ_SOFTWARE);
    9840:	str	r2, [r1, #0]
	update_scheduled = true;
    9842:	strb	r2, [r3, #0]
	return true;
}
    9844:	ldr.w	r4, [sp], #4
    9848:	bx	lr
// their constructors.
bool AudioStream::update_scheduled = false;

bool AudioStream::update_setup(void)
{
	if (update_scheduled) return false;
    984a:	movs	r0, #0
    984c:	bx	lr
    984e:	nop
    9850:	.word	0x20012ba8
    9854:	.word	0xe000e440
    9858:	.word	0xe000e108

0000985c <software_isr>:

void software_isr(void) // AudioStream::update_all()
{
	AudioStream *p;

	ARM_DEMCR |= ARM_DEMCR_TRCENA;
    985c:	ldr	r1, [pc, #104]	; (98c8 <software_isr+0x6c>)
	ARM_DWT_CTRL |= ARM_DWT_CTRL_CYCCNTENA;
    985e:	ldr	r2, [pc, #108]	; (98cc <software_isr+0x70>)
	uint32_t totalcycles = ARM_DWT_CYCCNT;
	//digitalWriteFast(2, HIGH);
	for (p = AudioStream::first_update; p; p = p->next_update) {
    9860:	ldr	r0, [pc, #108]	; (98d0 <software_isr+0x74>)
}

AudioStream * AudioStream::first_update = NULL;

void software_isr(void) // AudioStream::update_all()
{
    9862:	push	{r3, r4, r5, r6, r7, lr}
	AudioStream *p;

	ARM_DEMCR |= ARM_DEMCR_TRCENA;
    9864:	ldr	r3, [r1, #0]
	ARM_DWT_CTRL |= ARM_DWT_CTRL_CYCCNTENA;
	uint32_t totalcycles = ARM_DWT_CYCCNT;
    9866:	ldr	r5, [pc, #108]	; (98d4 <software_isr+0x78>)
	//digitalWriteFast(2, HIGH);
	for (p = AudioStream::first_update; p; p = p->next_update) {
    9868:	ldr	r4, [r0, #0]

void software_isr(void) // AudioStream::update_all()
{
	AudioStream *p;

	ARM_DEMCR |= ARM_DEMCR_TRCENA;
    986a:	orr.w	r3, r3, #16777216	; 0x1000000
    986e:	str	r3, [r1, #0]
	ARM_DWT_CTRL |= ARM_DWT_CTRL_CYCCNTENA;
    9870:	ldr	r3, [r2, #0]
    9872:	orr.w	r3, r3, #1
    9876:	str	r3, [r2, #0]
	uint32_t totalcycles = ARM_DWT_CYCCNT;
    9878:	ldr	r6, [r5, #0]
	//digitalWriteFast(2, HIGH);
	for (p = AudioStream::first_update; p; p = p->next_update) {
    987a:	cbnz	r4, 9882 <software_isr+0x26>
    987c:	b.n	98aa <software_isr+0x4e>
    987e:	ldr	r4, [r4, #20]
    9880:	cbz	r4, 98aa <software_isr+0x4e>
		if (p->active) {
    9882:	ldrb	r3, [r4, #8]
    9884:	cmp	r3, #0
    9886:	beq.n	987e <software_isr+0x22>
			uint32_t cycles = ARM_DWT_CYCCNT;
			p->update();
    9888:	ldr	r3, [r4, #0]
	ARM_DWT_CTRL |= ARM_DWT_CTRL_CYCCNTENA;
	uint32_t totalcycles = ARM_DWT_CYCCNT;
	//digitalWriteFast(2, HIGH);
	for (p = AudioStream::first_update; p; p = p->next_update) {
		if (p->active) {
			uint32_t cycles = ARM_DWT_CYCCNT;
    988a:	ldr	r7, [r5, #0]
			p->update();
    988c:	ldr	r3, [r3, #0]
    988e:	mov	r0, r4
    9890:	blx	r3
			// TODO: traverse inputQueueArray and release
			// any input blocks that weren't consumed?
			cycles = (ARM_DWT_CYCCNT - cycles) >> 4;
    9892:	ldr	r3, [r5, #0]
			p->cpu_cycles = cycles;
			if (cycles > p->cpu_cycles_max) p->cpu_cycles_max = cycles;
    9894:	ldrh	r1, [r4, #6]
		if (p->active) {
			uint32_t cycles = ARM_DWT_CYCCNT;
			p->update();
			// TODO: traverse inputQueueArray and release
			// any input blocks that weren't consumed?
			cycles = (ARM_DWT_CYCCNT - cycles) >> 4;
    9896:	subs	r3, r3, r7
    9898:	lsrs	r3, r3, #4
			p->cpu_cycles = cycles;
    989a:	uxth	r2, r3
			if (cycles > p->cpu_cycles_max) p->cpu_cycles_max = cycles;
    989c:	cmp	r3, r1
			uint32_t cycles = ARM_DWT_CYCCNT;
			p->update();
			// TODO: traverse inputQueueArray and release
			// any input blocks that weren't consumed?
			cycles = (ARM_DWT_CYCCNT - cycles) >> 4;
			p->cpu_cycles = cycles;
    989e:	strh	r2, [r4, #4]
			if (cycles > p->cpu_cycles_max) p->cpu_cycles_max = cycles;
    98a0:	it	hi
    98a2:	strhhi	r2, [r4, #6]

	ARM_DEMCR |= ARM_DEMCR_TRCENA;
	ARM_DWT_CTRL |= ARM_DWT_CTRL_CYCCNTENA;
	uint32_t totalcycles = ARM_DWT_CYCCNT;
	//digitalWriteFast(2, HIGH);
	for (p = AudioStream::first_update; p; p = p->next_update) {
    98a4:	ldr	r4, [r4, #20]
    98a6:	cmp	r4, #0
    98a8:	bne.n	9882 <software_isr+0x26>
			p->cpu_cycles = cycles;
			if (cycles > p->cpu_cycles_max) p->cpu_cycles_max = cycles;
		}
	}
	//digitalWriteFast(2, LOW);
	totalcycles = (ARM_DWT_CYCCNT - totalcycles) >> 4;;
    98aa:	ldr	r3, [pc, #40]	; (98d4 <software_isr+0x78>)
	AudioStream::cpu_cycles_total = totalcycles;
	if (totalcycles > AudioStream::cpu_cycles_total_max)
    98ac:	ldr	r2, [pc, #40]	; (98d8 <software_isr+0x7c>)
			p->cpu_cycles = cycles;
			if (cycles > p->cpu_cycles_max) p->cpu_cycles_max = cycles;
		}
	}
	//digitalWriteFast(2, LOW);
	totalcycles = (ARM_DWT_CYCCNT - totalcycles) >> 4;;
    98ae:	ldr	r3, [r3, #0]
	AudioStream::cpu_cycles_total = totalcycles;
	if (totalcycles > AudioStream::cpu_cycles_total_max)
    98b0:	ldrh	r0, [r2, #0]
			if (cycles > p->cpu_cycles_max) p->cpu_cycles_max = cycles;
		}
	}
	//digitalWriteFast(2, LOW);
	totalcycles = (ARM_DWT_CYCCNT - totalcycles) >> 4;;
	AudioStream::cpu_cycles_total = totalcycles;
    98b2:	ldr	r4, [pc, #40]	; (98dc <software_isr+0x80>)
			p->cpu_cycles = cycles;
			if (cycles > p->cpu_cycles_max) p->cpu_cycles_max = cycles;
		}
	}
	//digitalWriteFast(2, LOW);
	totalcycles = (ARM_DWT_CYCCNT - totalcycles) >> 4;;
    98b4:	subs	r3, r3, r6
    98b6:	lsrs	r3, r3, #4
	AudioStream::cpu_cycles_total = totalcycles;
    98b8:	uxth	r1, r3
	if (totalcycles > AudioStream::cpu_cycles_total_max)
    98ba:	cmp	r3, r0
			if (cycles > p->cpu_cycles_max) p->cpu_cycles_max = cycles;
		}
	}
	//digitalWriteFast(2, LOW);
	totalcycles = (ARM_DWT_CYCCNT - totalcycles) >> 4;;
	AudioStream::cpu_cycles_total = totalcycles;
    98bc:	strh	r1, [r4, #0]
	if (totalcycles > AudioStream::cpu_cycles_total_max)
    98be:	bls.n	98c4 <software_isr+0x68>
		AudioStream::cpu_cycles_total_max = totalcycles;
    98c0:	strh	r1, [r2, #0]
    98c2:	pop	{r3, r4, r5, r6, r7, pc}
    98c4:	pop	{r3, r4, r5, r6, r7, pc}
    98c6:	nop
    98c8:	.word	0xe000edfc
    98cc:	.word	0xe0001000
    98d0:	.word	0x20012b9c
    98d4:	.word	0xe0001004
    98d8:	.word	0x20012c1c
    98dc:	.word	0x20012c22

000098e0 <serialEvent6()>:
#if defined(HAS_KINETISK_UART5) || defined (HAS_KINETISK_LPUART0)

HardwareSerial6 Serial6;

void serialEvent6() __attribute__((weak));
void serialEvent6() {}
    98e0:	bx	lr
    98e2:	nop

000098e4 <operator new(unsigned int)>:
    98e4:	b.w	ba28 <malloc>

000098e8 <serial5_available>:

int serial5_available(void)
{
	uint32_t head, tail;

	head = rx_buffer_head;
    98e8:	ldr	r2, [pc, #20]	; (9900 <serial5_available+0x18>)
	tail = rx_buffer_tail;
    98ea:	ldr	r3, [pc, #24]	; (9904 <serial5_available+0x1c>)

int serial5_available(void)
{
	uint32_t head, tail;

	head = rx_buffer_head;
    98ec:	ldrb	r0, [r2, #0]
	tail = rx_buffer_tail;
    98ee:	ldrb	r3, [r3, #0]

int serial5_available(void)
{
	uint32_t head, tail;

	head = rx_buffer_head;
    98f0:	uxtb	r0, r0
	tail = rx_buffer_tail;
    98f2:	uxtb	r3, r3
	if (head >= tail) return head - tail;
    98f4:	cmp	r0, r3
	return SERIAL5_RX_BUFFER_SIZE + head - tail;
    98f6:	it	cc
    98f8:	addcc	r0, #64	; 0x40
    98fa:	subs	r0, r0, r3
}
    98fc:	bx	lr
    98fe:	nop
    9900:	.word	0x20012c28
    9904:	.word	0x20012c29

00009908 <uart4_status_isr>:
//   Receive data above watermark   UART_S1_RDRF
//   LIN break detect		    UART_S2_LBKDIF
//   RxD pin active edge	    UART_S2_RXEDGIF

void uart4_status_isr(void)
{
    9908:	push	{r4, r5}
	uint32_t head, tail, n;
	uint8_t c;

	if (UART4_S1 & UART_S1_RDRF) {
    990a:	ldr	r3, [pc, #172]	; (99b8 <uart4_status_isr+0xb0>)
    990c:	ldrb	r2, [r3, #4]
    990e:	lsls	r4, r2, #26
    9910:	bpl.n	9952 <uart4_status_isr+0x4a>
		if (use9Bits && (UART4_C3 & 0x80)) {
			n = UART4_D | 0x100;
		} else {
			n = UART4_D;
		}
		head = rx_buffer_head + 1;
    9912:	ldr	r0, [pc, #168]	; (99bc <uart4_status_isr+0xb4>)

	if (UART4_S1 & UART_S1_RDRF) {
		if (use9Bits && (UART4_C3 & 0x80)) {
			n = UART4_D | 0x100;
		} else {
			n = UART4_D;
    9914:	ldrb	r2, [r3, #7]
		}
		head = rx_buffer_head + 1;
    9916:	ldrb	r3, [r0, #0]
		if (head >= SERIAL5_RX_BUFFER_SIZE) head = 0;
		if (head != rx_buffer_tail) {
    9918:	ldr	r1, [pc, #164]	; (99c0 <uart4_status_isr+0xb8>)
		if (use9Bits && (UART4_C3 & 0x80)) {
			n = UART4_D | 0x100;
		} else {
			n = UART4_D;
		}
		head = rx_buffer_head + 1;
    991a:	adds	r3, #1
    991c:	cmp	r3, #63	; 0x3f
		if (head >= SERIAL5_RX_BUFFER_SIZE) head = 0;
		if (head != rx_buffer_tail) {
    991e:	ldrb	r1, [r1, #0]
		if (use9Bits && (UART4_C3 & 0x80)) {
			n = UART4_D | 0x100;
		} else {
			n = UART4_D;
		}
		head = rx_buffer_head + 1;
    9920:	it	gt
    9922:	movgt	r3, #0
		if (head >= SERIAL5_RX_BUFFER_SIZE) head = 0;
		if (head != rx_buffer_tail) {
    9924:	cmp	r3, r1

	if (UART4_S1 & UART_S1_RDRF) {
		if (use9Bits && (UART4_C3 & 0x80)) {
			n = UART4_D | 0x100;
		} else {
			n = UART4_D;
    9926:	uxtb	r2, r2
		}
		head = rx_buffer_head + 1;
		if (head >= SERIAL5_RX_BUFFER_SIZE) head = 0;
		if (head != rx_buffer_tail) {
    9928:	beq.n	9932 <uart4_status_isr+0x2a>
			rx_buffer[head] = n;
    992a:	ldr	r4, [pc, #152]	; (99c4 <uart4_status_isr+0xbc>)
			rx_buffer_head = head;
    992c:	uxtb	r1, r3
			n = UART4_D;
		}
		head = rx_buffer_head + 1;
		if (head >= SERIAL5_RX_BUFFER_SIZE) head = 0;
		if (head != rx_buffer_tail) {
			rx_buffer[head] = n;
    992e:	strb	r2, [r4, r3]
			rx_buffer_head = head;
    9930:	strb	r1, [r0, #0]
		}
		if (rts_pin) {
    9932:	ldr	r2, [pc, #148]	; (99c8 <uart4_status_isr+0xc0>)
    9934:	ldr	r1, [r2, #0]
    9936:	cbz	r1, 9952 <uart4_status_isr+0x4a>
			int avail;
			tail = tx_buffer_tail;
    9938:	ldr	r2, [pc, #144]	; (99cc <uart4_status_isr+0xc4>)
    993a:	ldrb	r2, [r2, #0]
    993c:	uxtb	r2, r2
			if (head >= tail) avail = head - tail;
    993e:	cmp	r3, r2
			else avail = SERIAL5_RX_BUFFER_SIZE + head - tail;
    9940:	itet	cc
    9942:	rsbcc	r2, r2, #64	; 0x40
			rx_buffer_head = head;
		}
		if (rts_pin) {
			int avail;
			tail = tx_buffer_tail;
			if (head >= tail) avail = head - tail;
    9946:	subcs	r3, r3, r2
			else avail = SERIAL5_RX_BUFFER_SIZE + head - tail;
    9948:	addcc	r3, r3, r2
			if (avail >= RTS_HIGH_WATERMARK) rts_deassert();
    994a:	cmp	r3, #39	; 0x27
    994c:	itt	gt
    994e:	movgt	r3, #1
    9950:	strbgt	r3, [r1, #0]
		}
	}
	c = UART4_C2;
    9952:	ldr	r2, [pc, #100]	; (99b8 <uart4_status_isr+0xb0>)
    9954:	ldrb	r3, [r2, #3]
    9956:	uxtb	r3, r3
	if ((c & UART_C2_TIE) && (UART4_S1 & UART_S1_TDRE)) {
    9958:	lsls	r0, r3, #24
    995a:	bmi.n	9980 <uart4_status_isr+0x78>
			if (use9Bits) UART4_C3 = (UART4_C3 & ~0x40) | ((n & 0x100) >> 2);
			UART4_D = n;
			tx_buffer_tail = tail;
		}
	}
	if ((c & UART_C2_TCIE) && (UART4_S1 & UART_S1_TC)) {
    995c:	lsls	r2, r3, #25
    995e:	bpl.n	997c <uart4_status_isr+0x74>
    9960:	ldr	r3, [pc, #84]	; (99b8 <uart4_status_isr+0xb0>)
    9962:	ldrb	r3, [r3, #4]
    9964:	lsls	r3, r3, #25
    9966:	bpl.n	997c <uart4_status_isr+0x74>
		transmitting = 0;
		if (transmit_pin) transmit_deassert();
    9968:	ldr	r3, [pc, #100]	; (99d0 <uart4_status_isr+0xc8>)
			UART4_D = n;
			tx_buffer_tail = tail;
		}
	}
	if ((c & UART_C2_TCIE) && (UART4_S1 & UART_S1_TC)) {
		transmitting = 0;
    996a:	ldr	r1, [pc, #104]	; (99d4 <uart4_status_isr+0xcc>)
		if (transmit_pin) transmit_deassert();
    996c:	ldr	r3, [r3, #0]
			UART4_D = n;
			tx_buffer_tail = tail;
		}
	}
	if ((c & UART_C2_TCIE) && (UART4_S1 & UART_S1_TC)) {
		transmitting = 0;
    996e:	movs	r2, #0
    9970:	strb	r2, [r1, #0]
		if (transmit_pin) transmit_deassert();
    9972:	cbz	r3, 9976 <uart4_status_isr+0x6e>
    9974:	strb	r2, [r3, #0]
		UART4_C2 = C2_TX_INACTIVE;
    9976:	ldr	r3, [pc, #64]	; (99b8 <uart4_status_isr+0xb0>)
    9978:	movs	r2, #44	; 0x2c
    997a:	strb	r2, [r3, #3]
	}
}
    997c:	pop	{r4, r5}
    997e:	bx	lr
			else avail = SERIAL5_RX_BUFFER_SIZE + head - tail;
			if (avail >= RTS_HIGH_WATERMARK) rts_deassert();
		}
	}
	c = UART4_C2;
	if ((c & UART_C2_TIE) && (UART4_S1 & UART_S1_TDRE)) {
    9980:	ldrb	r1, [r2, #4]
    9982:	lsls	r1, r1, #24
    9984:	bpl.n	995c <uart4_status_isr+0x54>
		head = tx_buffer_head;
    9986:	ldr	r1, [pc, #80]	; (99d8 <uart4_status_isr+0xd0>)
		tail = tx_buffer_tail;
    9988:	ldr	r0, [pc, #64]	; (99cc <uart4_status_isr+0xc4>)
			if (avail >= RTS_HIGH_WATERMARK) rts_deassert();
		}
	}
	c = UART4_C2;
	if ((c & UART_C2_TIE) && (UART4_S1 & UART_S1_TDRE)) {
		head = tx_buffer_head;
    998a:	ldrb	r4, [r1, #0]
		tail = tx_buffer_tail;
    998c:	ldrb	r1, [r0, #0]
    998e:	uxtb	r1, r1
		if (head == tail) {
    9990:	cmp	r4, r1
    9992:	beq.n	99b0 <uart4_status_isr+0xa8>
			UART4_C2 = C2_TX_COMPLETING;
		} else {
			if (++tail >= SERIAL5_TX_BUFFER_SIZE) tail = 0;
    9994:	adds	r2, r1, #1
    9996:	cmp	r2, #39	; 0x27
    9998:	itt	hi
    999a:	movhi	r1, #0
    999c:	movhi	r2, r1
			n = tx_buffer[tail];
    999e:	ldr	r5, [pc, #60]	; (99dc <uart4_status_isr+0xd4>)
			if (use9Bits) UART4_C3 = (UART4_C3 & ~0x40) | ((n & 0x100) >> 2);
			UART4_D = n;
    99a0:	ldr	r4, [pc, #20]	; (99b8 <uart4_status_isr+0xb0>)
    99a2:	it	ls
    99a4:	uxtbls	r1, r2
		tail = tx_buffer_tail;
		if (head == tail) {
			UART4_C2 = C2_TX_COMPLETING;
		} else {
			if (++tail >= SERIAL5_TX_BUFFER_SIZE) tail = 0;
			n = tx_buffer[tail];
    99a6:	ldrb	r2, [r5, r2]
    99a8:	uxtb	r2, r2
			if (use9Bits) UART4_C3 = (UART4_C3 & ~0x40) | ((n & 0x100) >> 2);
			UART4_D = n;
    99aa:	strb	r2, [r4, #7]
			tx_buffer_tail = tail;
    99ac:	strb	r1, [r0, #0]
    99ae:	b.n	995c <uart4_status_isr+0x54>
	c = UART4_C2;
	if ((c & UART_C2_TIE) && (UART4_S1 & UART_S1_TDRE)) {
		head = tx_buffer_head;
		tail = tx_buffer_tail;
		if (head == tail) {
			UART4_C2 = C2_TX_COMPLETING;
    99b0:	movs	r1, #108	; 0x6c
    99b2:	strb	r1, [r2, #3]
    99b4:	b.n	995c <uart4_status_isr+0x54>
    99b6:	nop
    99b8:	.word	0x400ea000
    99bc:	.word	0x20012c28
    99c0:	.word	0x20012c29
    99c4:	.word	0x20012c54
    99c8:	.word	0x20012c24
    99cc:	.word	0x20012c95
    99d0:	.word	0x20012c98
    99d4:	.word	0x20012c94
    99d8:	.word	0x20012c9c
    99dc:	.word	0x20012c2c

000099e0 <serial2_available>:

int serial2_available(void)
{
	uint32_t head, tail;

	head = rx_buffer_head;
    99e0:	ldr	r2, [pc, #20]	; (99f8 <serial2_available+0x18>)
	tail = rx_buffer_tail;
    99e2:	ldr	r3, [pc, #24]	; (99fc <serial2_available+0x1c>)

int serial2_available(void)
{
	uint32_t head, tail;

	head = rx_buffer_head;
    99e4:	ldrb	r0, [r2, #0]
	tail = rx_buffer_tail;
    99e6:	ldrb	r3, [r3, #0]

int serial2_available(void)
{
	uint32_t head, tail;

	head = rx_buffer_head;
    99e8:	uxtb	r0, r0
	tail = rx_buffer_tail;
    99ea:	uxtb	r3, r3
	if (head >= tail) return head - tail;
    99ec:	cmp	r0, r3
	return SERIAL2_RX_BUFFER_SIZE + head - tail;
    99ee:	it	cc
    99f0:	addcc	r0, #64	; 0x40
    99f2:	subs	r0, r0, r3
}
    99f4:	bx	lr
    99f6:	nop
    99f8:	.word	0x20012d10
    99fc:	.word	0x20012ca5

00009a00 <uart1_status_isr>:
//   Receive data above watermark   UART_S1_RDRF
//   LIN break detect		    UART_S2_LBKDIF
//   RxD pin active edge	    UART_S2_RXEDGIF

void uart1_status_isr(void)
{
    9a00:	push	{r4, r5, r6, r7}
	uint8_t c;
#ifdef HAS_KINETISK_UART1_FIFO
	uint32_t newhead;
	uint8_t avail;

	if (UART1_S1 & (UART_S1_RDRF | UART_S1_IDLE)) {
    9a02:	ldr	r3, [pc, #224]	; (9ae4 <uart1_status_isr+0xe4>)
    9a04:	ldrb	r2, [r3, #4]
    9a06:	tst.w	r2, #48	; 0x30
    9a0a:	beq.n	9a66 <uart1_status_isr+0x66>
		__disable_irq();
    9a0c:	cpsid	i
		avail = UART1_RCFIFO;
    9a0e:	ldrb	r1, [r3, #22]
		if (avail == 0) {
    9a10:	and.w	r2, r1, #255	; 0xff
    9a14:	cmp	r1, #0
    9a16:	beq.n	9a94 <uart1_status_isr+0x94>
			// which won't be simple, since we already manage
			// which transmit interrupts are enabled.
			UART1_CFIFO = UART_CFIFO_RXFLUSH;
			__enable_irq();
		} else {
			__enable_irq();
    9a18:	cpsie	i
			head = rx_buffer_head;
    9a1a:	ldr	r7, [pc, #204]	; (9ae8 <uart1_status_isr+0xe8>)
			tail = rx_buffer_tail;
    9a1c:	ldr	r1, [pc, #204]	; (9aec <uart1_status_isr+0xec>)
			// which transmit interrupts are enabled.
			UART1_CFIFO = UART_CFIFO_RXFLUSH;
			__enable_irq();
		} else {
			__enable_irq();
			head = rx_buffer_head;
    9a1e:	ldrb	r0, [r7, #0]
			tail = rx_buffer_tail;
    9a20:	ldrb	r5, [r1, #0]
				}
				newhead = head + 1;
				if (newhead >= SERIAL2_RX_BUFFER_SIZE) newhead = 0;
				if (newhead != tail) {
					head = newhead;
					rx_buffer[head] = n;
    9a22:	ldr	r6, [pc, #204]	; (9af0 <uart1_status_isr+0xf0>)
			tail = rx_buffer_tail;
			do {
				if (use9Bits && (UART1_C3 & 0x80)) {
					n = UART1_D | 0x100;
				} else {
					n = UART1_D;
    9a24:	mov	r4, r3
			// which transmit interrupts are enabled.
			UART1_CFIFO = UART_CFIFO_RXFLUSH;
			__enable_irq();
		} else {
			__enable_irq();
			head = rx_buffer_head;
    9a26:	uxtb	r0, r0
			tail = rx_buffer_tail;
    9a28:	uxtb	r5, r5
				if (use9Bits && (UART1_C3 & 0x80)) {
					n = UART1_D | 0x100;
				} else {
					n = UART1_D;
				}
				newhead = head + 1;
    9a2a:	adds	r3, r0, #1
				if (newhead >= SERIAL2_RX_BUFFER_SIZE) newhead = 0;
    9a2c:	cmp	r3, #64	; 0x40
			tail = rx_buffer_tail;
			do {
				if (use9Bits && (UART1_C3 & 0x80)) {
					n = UART1_D | 0x100;
				} else {
					n = UART1_D;
    9a2e:	ldrb	r1, [r4, #7]
				}
				newhead = head + 1;
				if (newhead >= SERIAL2_RX_BUFFER_SIZE) newhead = 0;
    9a30:	it	cs
    9a32:	movcs	r3, #0
				if (newhead != tail) {
    9a34:	cmp	r3, r5
					head = newhead;
					rx_buffer[head] = n;
				}
			} while (--avail > 0);
    9a36:	add.w	r2, r2, #4294967295
			tail = rx_buffer_tail;
			do {
				if (use9Bits && (UART1_C3 & 0x80)) {
					n = UART1_D | 0x100;
				} else {
					n = UART1_D;
    9a3a:	uxtb	r1, r1
				}
				newhead = head + 1;
				if (newhead >= SERIAL2_RX_BUFFER_SIZE) newhead = 0;
				if (newhead != tail) {
					head = newhead;
					rx_buffer[head] = n;
    9a3c:	itt	ne
    9a3e:	strbne	r1, [r6, r3]
    9a40:	movne	r0, r3
				}
			} while (--avail > 0);
    9a42:	ands.w	r2, r2, #255	; 0xff
    9a46:	bne.n	9a2a <uart1_status_isr+0x2a>
			rx_buffer_head = head;
			if (rts_pin) {
    9a48:	ldr	r3, [pc, #168]	; (9af4 <uart1_status_isr+0xf4>)
    9a4a:	ldr	r3, [r3, #0]
				if (newhead != tail) {
					head = newhead;
					rx_buffer[head] = n;
				}
			} while (--avail > 0);
			rx_buffer_head = head;
    9a4c:	uxtb	r2, r0
    9a4e:	strb	r2, [r7, #0]
			if (rts_pin) {
    9a50:	cbz	r3, 9a66 <uart1_status_isr+0x66>
				int avail;
				if (head >= tail) avail = head - tail;
    9a52:	cmp	r0, r5
				else avail = SERIAL2_RX_BUFFER_SIZE + head - tail;
    9a54:	itet	cc
    9a56:	rsbcc	r5, r5, #64	; 0x40
				}
			} while (--avail > 0);
			rx_buffer_head = head;
			if (rts_pin) {
				int avail;
				if (head >= tail) avail = head - tail;
    9a5a:	subcs	r0, r0, r5
				else avail = SERIAL2_RX_BUFFER_SIZE + head - tail;
    9a5c:	addcc	r0, r0, r5
				if (avail >= RTS_HIGH_WATERMARK) rts_deassert();
    9a5e:	cmp	r0, #39	; 0x27
    9a60:	itt	gt
    9a62:	movgt	r2, #1
    9a64:	strbgt	r2, [r3, #0]
			}
		}
	}
	c = UART1_C2;
    9a66:	ldr	r1, [pc, #124]	; (9ae4 <uart1_status_isr+0xe4>)
    9a68:	ldrb	r2, [r1, #3]
    9a6a:	uxtb	r2, r2
	if ((c & UART_C2_TIE) && (UART1_S1 & UART_S1_TDRE)) {
    9a6c:	lsls	r5, r2, #24
    9a6e:	bmi.n	9a9e <uart1_status_isr+0x9e>
			UART1_D = n;
			tx_buffer_tail = tail;
		}
	}
#endif
	if ((c & UART_C2_TCIE) && (UART1_S1 & UART_S1_TC)) {
    9a70:	lsls	r2, r2, #25
    9a72:	bpl.n	9a90 <uart1_status_isr+0x90>
    9a74:	ldr	r3, [pc, #108]	; (9ae4 <uart1_status_isr+0xe4>)
    9a76:	ldrb	r3, [r3, #4]
    9a78:	lsls	r3, r3, #25
    9a7a:	bpl.n	9a90 <uart1_status_isr+0x90>
		transmitting = 0;
		if (transmit_pin) transmit_deassert();
    9a7c:	ldr	r3, [pc, #120]	; (9af8 <uart1_status_isr+0xf8>)
			tx_buffer_tail = tail;
		}
	}
#endif
	if ((c & UART_C2_TCIE) && (UART1_S1 & UART_S1_TC)) {
		transmitting = 0;
    9a7e:	ldr	r1, [pc, #124]	; (9afc <uart1_status_isr+0xfc>)
		if (transmit_pin) transmit_deassert();
    9a80:	ldr	r3, [r3, #0]
			tx_buffer_tail = tail;
		}
	}
#endif
	if ((c & UART_C2_TCIE) && (UART1_S1 & UART_S1_TC)) {
		transmitting = 0;
    9a82:	movs	r2, #0
    9a84:	strb	r2, [r1, #0]
		if (transmit_pin) transmit_deassert();
    9a86:	cbz	r3, 9a8a <uart1_status_isr+0x8a>
    9a88:	strb	r2, [r3, #0]
		UART1_C2 = C2_TX_INACTIVE;
    9a8a:	ldr	r3, [pc, #88]	; (9ae4 <uart1_status_isr+0xe4>)
    9a8c:	movs	r2, #60	; 0x3c
    9a8e:	strb	r2, [r3, #3]
	}
}
    9a90:	pop	{r4, r5, r6, r7}
    9a92:	bx	lr
			// the chance, interrupts are disabled so a higher
			// priority interrupt (hopefully) doesn't delay.
			// TODO: change this to disabling the IDLE interrupt
			// which won't be simple, since we already manage
			// which transmit interrupts are enabled.
			UART1_CFIFO = UART_CFIFO_RXFLUSH;
    9a94:	movs	r2, #64	; 0x40
			// to read the data register.  But reading with no
			// data causes a FIFO underrun, which causes the
			// FIFO to return corrupted data.  If anyone from
			// Freescale reads this, what a poor design!  There
			// write should be a write-1-to-clear for IDLE.
			c = UART1_D;
    9a96:	ldrb	r1, [r3, #7]
			// the chance, interrupts are disabled so a higher
			// priority interrupt (hopefully) doesn't delay.
			// TODO: change this to disabling the IDLE interrupt
			// which won't be simple, since we already manage
			// which transmit interrupts are enabled.
			UART1_CFIFO = UART_CFIFO_RXFLUSH;
    9a98:	strb	r2, [r3, #17]
			__enable_irq();
    9a9a:	cpsie	i
    9a9c:	b.n	9a66 <uart1_status_isr+0x66>
				if (avail >= RTS_HIGH_WATERMARK) rts_deassert();
			}
		}
	}
	c = UART1_C2;
	if ((c & UART_C2_TIE) && (UART1_S1 & UART_S1_TDRE)) {
    9a9e:	ldrb	r3, [r1, #4]
    9aa0:	lsls	r4, r3, #24
    9aa2:	bpl.n	9a70 <uart1_status_isr+0x70>
		head = tx_buffer_head;
    9aa4:	ldr	r3, [pc, #88]	; (9b00 <uart1_status_isr+0x100>)
		tail = tx_buffer_tail;
    9aa6:	ldr	r6, [pc, #92]	; (9b04 <uart1_status_isr+0x104>)
			}
		}
	}
	c = UART1_C2;
	if ((c & UART_C2_TIE) && (UART1_S1 & UART_S1_TDRE)) {
		head = tx_buffer_head;
    9aa8:	ldrb	r4, [r3, #0]
		tail = tx_buffer_tail;
    9aaa:	ldrb	r3, [r6, #0]
			}
		}
	}
	c = UART1_C2;
	if ((c & UART_C2_TIE) && (UART1_S1 & UART_S1_TDRE)) {
		head = tx_buffer_head;
    9aac:	uxtb	r4, r4
		tail = tx_buffer_tail;
    9aae:	uxtb	r3, r3
		do {
			if (tail == head) break;
    9ab0:	cmp	r4, r3
    9ab2:	beq.n	9ad2 <uart1_status_isr+0xd2>
    9ab4:	ldr	r5, [pc, #80]	; (9b08 <uart1_status_isr+0x108>)
    9ab6:	b.n	9abc <uart1_status_isr+0xbc>
    9ab8:	cmp	r3, r4
    9aba:	beq.n	9ad2 <uart1_status_isr+0xd2>
			if (++tail >= SERIAL2_TX_BUFFER_SIZE) tail = 0;
    9abc:	adds	r3, #1
    9abe:	cmp	r3, #40	; 0x28
    9ac0:	it	cs
    9ac2:	movcs	r3, #0
			avail = UART1_S1;
    9ac4:	ldrb	r0, [r1, #4]
			n = tx_buffer[tail];
    9ac6:	ldrb	r0, [r5, r3]
    9ac8:	uxtb	r0, r0
			if (use9Bits) UART1_C3 = (UART1_C3 & ~0x40) | ((n & 0x100) >> 2);
			UART1_D = n;
    9aca:	strb	r0, [r1, #7]
		} while (UART1_TCFIFO < 8);
    9acc:	ldrb	r0, [r1, #20]
    9ace:	cmp	r0, #7
    9ad0:	bls.n	9ab8 <uart1_status_isr+0xb8>
		tx_buffer_tail = tail;
    9ad2:	uxtb	r3, r3
		if (UART1_S1 & UART_S1_TDRE) UART1_C2 = C2_TX_COMPLETING;
    9ad4:	ldr	r1, [pc, #12]	; (9ae4 <uart1_status_isr+0xe4>)
			avail = UART1_S1;
			n = tx_buffer[tail];
			if (use9Bits) UART1_C3 = (UART1_C3 & ~0x40) | ((n & 0x100) >> 2);
			UART1_D = n;
		} while (UART1_TCFIFO < 8);
		tx_buffer_tail = tail;
    9ad6:	strb	r3, [r6, #0]
		if (UART1_S1 & UART_S1_TDRE) UART1_C2 = C2_TX_COMPLETING;
    9ad8:	ldrb	r3, [r1, #4]
    9ada:	lsls	r0, r3, #24
    9adc:	itt	mi
    9ade:	movmi	r3, #124	; 0x7c
    9ae0:	strbmi	r3, [r1, #3]
    9ae2:	b.n	9a70 <uart1_status_isr+0x70>
    9ae4:	.word	0x4006b000
    9ae8:	.word	0x20012d10
    9aec:	.word	0x20012ca5
    9af0:	.word	0x20012cd0
    9af4:	.word	0x20012ca0
    9af8:	.word	0x20012d14
    9afc:	.word	0x20012ca4
    9b00:	.word	0x20012d18
    9b04:	.word	0x20012d11
    9b08:	.word	0x20012ca8

00009b0c <serial4_available>:

int serial4_available(void)
{
	uint32_t head, tail;

	head = rx_buffer_head;
    9b0c:	ldr	r2, [pc, #20]	; (9b24 <serial4_available+0x18>)
	tail = rx_buffer_tail;
    9b0e:	ldr	r3, [pc, #24]	; (9b28 <serial4_available+0x1c>)

int serial4_available(void)
{
	uint32_t head, tail;

	head = rx_buffer_head;
    9b10:	ldrb	r0, [r2, #0]
	tail = rx_buffer_tail;
    9b12:	ldrb	r3, [r3, #0]

int serial4_available(void)
{
	uint32_t head, tail;

	head = rx_buffer_head;
    9b14:	uxtb	r0, r0
	tail = rx_buffer_tail;
    9b16:	uxtb	r3, r3
	if (head >= tail) return head - tail;
    9b18:	cmp	r0, r3
	return SERIAL4_RX_BUFFER_SIZE + head - tail;
    9b1a:	it	cc
    9b1c:	addcc	r0, #64	; 0x40
    9b1e:	subs	r0, r0, r3
}
    9b20:	bx	lr
    9b22:	nop
    9b24:	.word	0x20012d20
    9b28:	.word	0x20012d21

00009b2c <uart3_status_isr>:
//   Receive data above watermark   UART_S1_RDRF
//   LIN break detect		    UART_S2_LBKDIF
//   RxD pin active edge	    UART_S2_RXEDGIF

void uart3_status_isr(void)
{
    9b2c:	push	{r4, r5}
	uint32_t head, tail, n;
	uint8_t c;

	if (UART3_S1 & UART_S1_RDRF) {
    9b2e:	ldr	r3, [pc, #172]	; (9bdc <uart3_status_isr+0xb0>)
    9b30:	ldrb	r2, [r3, #4]
    9b32:	lsls	r4, r2, #26
    9b34:	bpl.n	9b76 <uart3_status_isr+0x4a>
		if (use9Bits && (UART3_C3 & 0x80)) {
			n = UART3_D | 0x100;
		} else {
			n = UART3_D;
		}
		head = rx_buffer_head + 1;
    9b36:	ldr	r0, [pc, #168]	; (9be0 <uart3_status_isr+0xb4>)

	if (UART3_S1 & UART_S1_RDRF) {
		if (use9Bits && (UART3_C3 & 0x80)) {
			n = UART3_D | 0x100;
		} else {
			n = UART3_D;
    9b38:	ldrb	r2, [r3, #7]
		}
		head = rx_buffer_head + 1;
    9b3a:	ldrb	r3, [r0, #0]
		if (head >= SERIAL4_RX_BUFFER_SIZE) head = 0;
		if (head != rx_buffer_tail) {
    9b3c:	ldr	r1, [pc, #164]	; (9be4 <uart3_status_isr+0xb8>)
		if (use9Bits && (UART3_C3 & 0x80)) {
			n = UART3_D | 0x100;
		} else {
			n = UART3_D;
		}
		head = rx_buffer_head + 1;
    9b3e:	adds	r3, #1
    9b40:	cmp	r3, #63	; 0x3f
		if (head >= SERIAL4_RX_BUFFER_SIZE) head = 0;
		if (head != rx_buffer_tail) {
    9b42:	ldrb	r1, [r1, #0]
		if (use9Bits && (UART3_C3 & 0x80)) {
			n = UART3_D | 0x100;
		} else {
			n = UART3_D;
		}
		head = rx_buffer_head + 1;
    9b44:	it	gt
    9b46:	movgt	r3, #0
		if (head >= SERIAL4_RX_BUFFER_SIZE) head = 0;
		if (head != rx_buffer_tail) {
    9b48:	cmp	r3, r1

	if (UART3_S1 & UART_S1_RDRF) {
		if (use9Bits && (UART3_C3 & 0x80)) {
			n = UART3_D | 0x100;
		} else {
			n = UART3_D;
    9b4a:	uxtb	r2, r2
		}
		head = rx_buffer_head + 1;
		if (head >= SERIAL4_RX_BUFFER_SIZE) head = 0;
		if (head != rx_buffer_tail) {
    9b4c:	beq.n	9b56 <uart3_status_isr+0x2a>
			rx_buffer[head] = n;
    9b4e:	ldr	r4, [pc, #152]	; (9be8 <uart3_status_isr+0xbc>)
			rx_buffer_head = head;
    9b50:	uxtb	r1, r3
			n = UART3_D;
		}
		head = rx_buffer_head + 1;
		if (head >= SERIAL4_RX_BUFFER_SIZE) head = 0;
		if (head != rx_buffer_tail) {
			rx_buffer[head] = n;
    9b52:	strb	r2, [r4, r3]
			rx_buffer_head = head;
    9b54:	strb	r1, [r0, #0]
		}
		if (rts_pin) {
    9b56:	ldr	r2, [pc, #148]	; (9bec <uart3_status_isr+0xc0>)
    9b58:	ldr	r1, [r2, #0]
    9b5a:	cbz	r1, 9b76 <uart3_status_isr+0x4a>
			int avail;
			tail = tx_buffer_tail;
    9b5c:	ldr	r2, [pc, #144]	; (9bf0 <uart3_status_isr+0xc4>)
    9b5e:	ldrb	r2, [r2, #0]
    9b60:	uxtb	r2, r2
			if (head >= tail) avail = head - tail;
    9b62:	cmp	r3, r2
			else avail = SERIAL4_RX_BUFFER_SIZE + head - tail;
    9b64:	itet	cc
    9b66:	rsbcc	r2, r2, #64	; 0x40
			rx_buffer_head = head;
		}
		if (rts_pin) {
			int avail;
			tail = tx_buffer_tail;
			if (head >= tail) avail = head - tail;
    9b6a:	subcs	r3, r3, r2
			else avail = SERIAL4_RX_BUFFER_SIZE + head - tail;
    9b6c:	addcc	r3, r3, r2
			if (avail >= RTS_HIGH_WATERMARK) rts_deassert();
    9b6e:	cmp	r3, #39	; 0x27
    9b70:	itt	gt
    9b72:	movgt	r3, #1
    9b74:	strbgt	r3, [r1, #0]
		}
	}
	c = UART3_C2;
    9b76:	ldr	r2, [pc, #100]	; (9bdc <uart3_status_isr+0xb0>)
    9b78:	ldrb	r3, [r2, #3]
    9b7a:	uxtb	r3, r3
	if ((c & UART_C2_TIE) && (UART3_S1 & UART_S1_TDRE)) {
    9b7c:	lsls	r0, r3, #24
    9b7e:	bmi.n	9ba4 <uart3_status_isr+0x78>
			if (use9Bits) UART3_C3 = (UART3_C3 & ~0x40) | ((n & 0x100) >> 2);
			UART3_D = n;
			tx_buffer_tail = tail;
		}
	}
	if ((c & UART_C2_TCIE) && (UART3_S1 & UART_S1_TC)) {
    9b80:	lsls	r2, r3, #25
    9b82:	bpl.n	9ba0 <uart3_status_isr+0x74>
    9b84:	ldr	r3, [pc, #84]	; (9bdc <uart3_status_isr+0xb0>)
    9b86:	ldrb	r3, [r3, #4]
    9b88:	lsls	r3, r3, #25
    9b8a:	bpl.n	9ba0 <uart3_status_isr+0x74>
		transmitting = 0;
		if (transmit_pin) transmit_deassert();
    9b8c:	ldr	r3, [pc, #100]	; (9bf4 <uart3_status_isr+0xc8>)
			UART3_D = n;
			tx_buffer_tail = tail;
		}
	}
	if ((c & UART_C2_TCIE) && (UART3_S1 & UART_S1_TC)) {
		transmitting = 0;
    9b8e:	ldr	r1, [pc, #104]	; (9bf8 <uart3_status_isr+0xcc>)
		if (transmit_pin) transmit_deassert();
    9b90:	ldr	r3, [r3, #0]
			UART3_D = n;
			tx_buffer_tail = tail;
		}
	}
	if ((c & UART_C2_TCIE) && (UART3_S1 & UART_S1_TC)) {
		transmitting = 0;
    9b92:	movs	r2, #0
    9b94:	strb	r2, [r1, #0]
		if (transmit_pin) transmit_deassert();
    9b96:	cbz	r3, 9b9a <uart3_status_isr+0x6e>
    9b98:	strb	r2, [r3, #0]
		UART3_C2 = C2_TX_INACTIVE;
    9b9a:	ldr	r3, [pc, #64]	; (9bdc <uart3_status_isr+0xb0>)
    9b9c:	movs	r2, #44	; 0x2c
    9b9e:	strb	r2, [r3, #3]
	}
}
    9ba0:	pop	{r4, r5}
    9ba2:	bx	lr
			else avail = SERIAL4_RX_BUFFER_SIZE + head - tail;
			if (avail >= RTS_HIGH_WATERMARK) rts_deassert();
		}
	}
	c = UART3_C2;
	if ((c & UART_C2_TIE) && (UART3_S1 & UART_S1_TDRE)) {
    9ba4:	ldrb	r1, [r2, #4]
    9ba6:	lsls	r1, r1, #24
    9ba8:	bpl.n	9b80 <uart3_status_isr+0x54>
		head = tx_buffer_head;
    9baa:	ldr	r1, [pc, #80]	; (9bfc <uart3_status_isr+0xd0>)
		tail = tx_buffer_tail;
    9bac:	ldr	r0, [pc, #64]	; (9bf0 <uart3_status_isr+0xc4>)
			if (avail >= RTS_HIGH_WATERMARK) rts_deassert();
		}
	}
	c = UART3_C2;
	if ((c & UART_C2_TIE) && (UART3_S1 & UART_S1_TDRE)) {
		head = tx_buffer_head;
    9bae:	ldrb	r4, [r1, #0]
		tail = tx_buffer_tail;
    9bb0:	ldrb	r1, [r0, #0]
    9bb2:	uxtb	r1, r1
		if (head == tail) {
    9bb4:	cmp	r4, r1
    9bb6:	beq.n	9bd4 <uart3_status_isr+0xa8>
			UART3_C2 = C2_TX_COMPLETING;
		} else {
			if (++tail >= SERIAL4_TX_BUFFER_SIZE) tail = 0;
    9bb8:	adds	r2, r1, #1
    9bba:	cmp	r2, #39	; 0x27
    9bbc:	itt	hi
    9bbe:	movhi	r1, #0
    9bc0:	movhi	r2, r1
			n = tx_buffer[tail];
    9bc2:	ldr	r5, [pc, #60]	; (9c00 <uart3_status_isr+0xd4>)
			if (use9Bits) UART3_C3 = (UART3_C3 & ~0x40) | ((n & 0x100) >> 2);
			UART3_D = n;
    9bc4:	ldr	r4, [pc, #20]	; (9bdc <uart3_status_isr+0xb0>)
    9bc6:	it	ls
    9bc8:	uxtbls	r1, r2
		tail = tx_buffer_tail;
		if (head == tail) {
			UART3_C2 = C2_TX_COMPLETING;
		} else {
			if (++tail >= SERIAL4_TX_BUFFER_SIZE) tail = 0;
			n = tx_buffer[tail];
    9bca:	ldrb	r2, [r5, r2]
    9bcc:	uxtb	r2, r2
			if (use9Bits) UART3_C3 = (UART3_C3 & ~0x40) | ((n & 0x100) >> 2);
			UART3_D = n;
    9bce:	strb	r2, [r4, #7]
			tx_buffer_tail = tail;
    9bd0:	strb	r1, [r0, #0]
    9bd2:	b.n	9b80 <uart3_status_isr+0x54>
	c = UART3_C2;
	if ((c & UART_C2_TIE) && (UART3_S1 & UART_S1_TDRE)) {
		head = tx_buffer_head;
		tail = tx_buffer_tail;
		if (head == tail) {
			UART3_C2 = C2_TX_COMPLETING;
    9bd4:	movs	r1, #108	; 0x6c
    9bd6:	strb	r1, [r2, #3]
    9bd8:	b.n	9b80 <uart3_status_isr+0x54>
    9bda:	nop
    9bdc:	.word	0x4006d000
    9be0:	.word	0x20012d20
    9be4:	.word	0x20012d21
    9be8:	.word	0x20012d4c
    9bec:	.word	0x20012d1c
    9bf0:	.word	0x20012d8d
    9bf4:	.word	0x20012d90
    9bf8:	.word	0x20012d8c
    9bfc:	.word	0x20012d94
    9c00:	.word	0x20012d24

00009c04 <serial_available>:

int serial_available(void)
{
	uint32_t head, tail;

	head = rx_buffer_head;
    9c04:	ldr	r2, [pc, #20]	; (9c1c <serial_available+0x18>)
	tail = rx_buffer_tail;
    9c06:	ldr	r3, [pc, #24]	; (9c20 <serial_available+0x1c>)

int serial_available(void)
{
	uint32_t head, tail;

	head = rx_buffer_head;
    9c08:	ldrb	r0, [r2, #0]
	tail = rx_buffer_tail;
    9c0a:	ldrb	r3, [r3, #0]

int serial_available(void)
{
	uint32_t head, tail;

	head = rx_buffer_head;
    9c0c:	uxtb	r0, r0
	tail = rx_buffer_tail;
    9c0e:	uxtb	r3, r3
	if (head >= tail) return head - tail;
    9c10:	cmp	r0, r3
	return SERIAL1_RX_BUFFER_SIZE + head - tail;
    9c12:	it	cc
    9c14:	addcc	r0, #64	; 0x40
    9c16:	subs	r0, r0, r3
}
    9c18:	bx	lr
    9c1a:	nop
    9c1c:	.word	0x20012d9c
    9c20:	.word	0x20012d9d

00009c24 <uart0_status_isr>:
//   Receive data above watermark   UART_S1_RDRF
//   LIN break detect		    UART_S2_LBKDIF
//   RxD pin active edge	    UART_S2_RXEDGIF

void uart0_status_isr(void)
{
    9c24:	push	{r4, r5, r6, r7}
	uint8_t c;
#ifdef HAS_KINETISK_UART0_FIFO
	uint32_t newhead;
	uint8_t avail;

	if (UART0_S1 & (UART_S1_RDRF | UART_S1_IDLE)) {
    9c26:	ldr	r3, [pc, #224]	; (9d08 <uart0_status_isr+0xe4>)
    9c28:	ldrb	r2, [r3, #4]
    9c2a:	tst.w	r2, #48	; 0x30
    9c2e:	beq.n	9c8a <uart0_status_isr+0x66>
		__disable_irq();
    9c30:	cpsid	i
		avail = UART0_RCFIFO;
    9c32:	ldrb	r1, [r3, #22]
		if (avail == 0) {
    9c34:	and.w	r2, r1, #255	; 0xff
    9c38:	cmp	r1, #0
    9c3a:	beq.n	9cb8 <uart0_status_isr+0x94>
			// which won't be simple, since we already manage
			// which transmit interrupts are enabled.
			UART0_CFIFO = UART_CFIFO_RXFLUSH;
			__enable_irq();
		} else {
			__enable_irq();
    9c3c:	cpsie	i
			head = rx_buffer_head;
    9c3e:	ldr	r7, [pc, #204]	; (9d0c <uart0_status_isr+0xe8>)
			tail = rx_buffer_tail;
    9c40:	ldr	r1, [pc, #204]	; (9d10 <uart0_status_isr+0xec>)
			// which transmit interrupts are enabled.
			UART0_CFIFO = UART_CFIFO_RXFLUSH;
			__enable_irq();
		} else {
			__enable_irq();
			head = rx_buffer_head;
    9c42:	ldrb	r0, [r7, #0]
			tail = rx_buffer_tail;
    9c44:	ldrb	r5, [r1, #0]
				}
				newhead = head + 1;
				if (newhead >= SERIAL1_RX_BUFFER_SIZE) newhead = 0;
				if (newhead != tail) {
					head = newhead;
					rx_buffer[head] = n;
    9c46:	ldr	r6, [pc, #204]	; (9d14 <uart0_status_isr+0xf0>)
			tail = rx_buffer_tail;
			do {
				if (use9Bits && (UART0_C3 & 0x80)) {
					n = UART0_D | 0x100;
				} else {
					n = UART0_D;
    9c48:	mov	r4, r3
			// which transmit interrupts are enabled.
			UART0_CFIFO = UART_CFIFO_RXFLUSH;
			__enable_irq();
		} else {
			__enable_irq();
			head = rx_buffer_head;
    9c4a:	uxtb	r0, r0
			tail = rx_buffer_tail;
    9c4c:	uxtb	r5, r5
				if (use9Bits && (UART0_C3 & 0x80)) {
					n = UART0_D | 0x100;
				} else {
					n = UART0_D;
				}
				newhead = head + 1;
    9c4e:	adds	r3, r0, #1
				if (newhead >= SERIAL1_RX_BUFFER_SIZE) newhead = 0;
    9c50:	cmp	r3, #64	; 0x40
			tail = rx_buffer_tail;
			do {
				if (use9Bits && (UART0_C3 & 0x80)) {
					n = UART0_D | 0x100;
				} else {
					n = UART0_D;
    9c52:	ldrb	r1, [r4, #7]
				}
				newhead = head + 1;
				if (newhead >= SERIAL1_RX_BUFFER_SIZE) newhead = 0;
    9c54:	it	cs
    9c56:	movcs	r3, #0
				if (newhead != tail) {
    9c58:	cmp	r3, r5
					head = newhead;
					rx_buffer[head] = n;
				}
			} while (--avail > 0);
    9c5a:	add.w	r2, r2, #4294967295
			tail = rx_buffer_tail;
			do {
				if (use9Bits && (UART0_C3 & 0x80)) {
					n = UART0_D | 0x100;
				} else {
					n = UART0_D;
    9c5e:	uxtb	r1, r1
				}
				newhead = head + 1;
				if (newhead >= SERIAL1_RX_BUFFER_SIZE) newhead = 0;
				if (newhead != tail) {
					head = newhead;
					rx_buffer[head] = n;
    9c60:	itt	ne
    9c62:	strbne	r1, [r6, r3]
    9c64:	movne	r0, r3
				}
			} while (--avail > 0);
    9c66:	ands.w	r2, r2, #255	; 0xff
    9c6a:	bne.n	9c4e <uart0_status_isr+0x2a>
			rx_buffer_head = head;
			if (rts_pin) {
    9c6c:	ldr	r3, [pc, #168]	; (9d18 <uart0_status_isr+0xf4>)
    9c6e:	ldr	r3, [r3, #0]
				if (newhead != tail) {
					head = newhead;
					rx_buffer[head] = n;
				}
			} while (--avail > 0);
			rx_buffer_head = head;
    9c70:	uxtb	r2, r0
    9c72:	strb	r2, [r7, #0]
			if (rts_pin) {
    9c74:	cbz	r3, 9c8a <uart0_status_isr+0x66>
				int avail;
				if (head >= tail) avail = head - tail;
    9c76:	cmp	r0, r5
				else avail = SERIAL1_RX_BUFFER_SIZE + head - tail;
    9c78:	itet	cc
    9c7a:	rsbcc	r5, r5, #64	; 0x40
				}
			} while (--avail > 0);
			rx_buffer_head = head;
			if (rts_pin) {
				int avail;
				if (head >= tail) avail = head - tail;
    9c7e:	subcs	r0, r0, r5
				else avail = SERIAL1_RX_BUFFER_SIZE + head - tail;
    9c80:	addcc	r0, r0, r5
				if (avail >= RTS_HIGH_WATERMARK) rts_deassert();
    9c82:	cmp	r0, #39	; 0x27
    9c84:	itt	gt
    9c86:	movgt	r2, #1
    9c88:	strbgt	r2, [r3, #0]
			}
		}
	}
	c = UART0_C2;
    9c8a:	ldr	r1, [pc, #124]	; (9d08 <uart0_status_isr+0xe4>)
    9c8c:	ldrb	r2, [r1, #3]
    9c8e:	uxtb	r2, r2
	if ((c & UART_C2_TIE) && (UART0_S1 & UART_S1_TDRE)) {
    9c90:	lsls	r5, r2, #24
    9c92:	bmi.n	9cc2 <uart0_status_isr+0x9e>
			UART0_D = n;
			tx_buffer_tail = tail;
		}
	}
#endif
	if ((c & UART_C2_TCIE) && (UART0_S1 & UART_S1_TC)) {
    9c94:	lsls	r2, r2, #25
    9c96:	bpl.n	9cb4 <uart0_status_isr+0x90>
    9c98:	ldr	r3, [pc, #108]	; (9d08 <uart0_status_isr+0xe4>)
    9c9a:	ldrb	r3, [r3, #4]
    9c9c:	lsls	r3, r3, #25
    9c9e:	bpl.n	9cb4 <uart0_status_isr+0x90>
		transmitting = 0;
		if (transmit_pin) transmit_deassert();
    9ca0:	ldr	r3, [pc, #120]	; (9d1c <uart0_status_isr+0xf8>)
			tx_buffer_tail = tail;
		}
	}
#endif
	if ((c & UART_C2_TCIE) && (UART0_S1 & UART_S1_TC)) {
		transmitting = 0;
    9ca2:	ldr	r1, [pc, #124]	; (9d20 <uart0_status_isr+0xfc>)
		if (transmit_pin) transmit_deassert();
    9ca4:	ldr	r3, [r3, #0]
			tx_buffer_tail = tail;
		}
	}
#endif
	if ((c & UART_C2_TCIE) && (UART0_S1 & UART_S1_TC)) {
		transmitting = 0;
    9ca6:	movs	r2, #0
    9ca8:	strb	r2, [r1, #0]
		if (transmit_pin) transmit_deassert();
    9caa:	cbz	r3, 9cae <uart0_status_isr+0x8a>
    9cac:	strb	r2, [r3, #0]
		UART0_C2 = C2_TX_INACTIVE;
    9cae:	ldr	r3, [pc, #88]	; (9d08 <uart0_status_isr+0xe4>)
    9cb0:	movs	r2, #60	; 0x3c
    9cb2:	strb	r2, [r3, #3]
	}
}
    9cb4:	pop	{r4, r5, r6, r7}
    9cb6:	bx	lr
			// the chance, interrupts are disabled so a higher
			// priority interrupt (hopefully) doesn't delay.
			// TODO: change this to disabling the IDLE interrupt
			// which won't be simple, since we already manage
			// which transmit interrupts are enabled.
			UART0_CFIFO = UART_CFIFO_RXFLUSH;
    9cb8:	movs	r2, #64	; 0x40
			// to read the data register.  But reading with no
			// data causes a FIFO underrun, which causes the
			// FIFO to return corrupted data.  If anyone from
			// Freescale reads this, what a poor design!  There
			// write should be a write-1-to-clear for IDLE.
			c = UART0_D;
    9cba:	ldrb	r1, [r3, #7]
			// the chance, interrupts are disabled so a higher
			// priority interrupt (hopefully) doesn't delay.
			// TODO: change this to disabling the IDLE interrupt
			// which won't be simple, since we already manage
			// which transmit interrupts are enabled.
			UART0_CFIFO = UART_CFIFO_RXFLUSH;
    9cbc:	strb	r2, [r3, #17]
			__enable_irq();
    9cbe:	cpsie	i
    9cc0:	b.n	9c8a <uart0_status_isr+0x66>
				if (avail >= RTS_HIGH_WATERMARK) rts_deassert();
			}
		}
	}
	c = UART0_C2;
	if ((c & UART_C2_TIE) && (UART0_S1 & UART_S1_TDRE)) {
    9cc2:	ldrb	r3, [r1, #4]
    9cc4:	lsls	r4, r3, #24
    9cc6:	bpl.n	9c94 <uart0_status_isr+0x70>
		head = tx_buffer_head;
    9cc8:	ldr	r3, [pc, #88]	; (9d24 <uart0_status_isr+0x100>)
		tail = tx_buffer_tail;
    9cca:	ldr	r6, [pc, #92]	; (9d28 <uart0_status_isr+0x104>)
			}
		}
	}
	c = UART0_C2;
	if ((c & UART_C2_TIE) && (UART0_S1 & UART_S1_TDRE)) {
		head = tx_buffer_head;
    9ccc:	ldrb	r4, [r3, #0]
		tail = tx_buffer_tail;
    9cce:	ldrb	r3, [r6, #0]
			}
		}
	}
	c = UART0_C2;
	if ((c & UART_C2_TIE) && (UART0_S1 & UART_S1_TDRE)) {
		head = tx_buffer_head;
    9cd0:	uxtb	r4, r4
		tail = tx_buffer_tail;
    9cd2:	uxtb	r3, r3
		do {
			if (tail == head) break;
    9cd4:	cmp	r4, r3
    9cd6:	beq.n	9cf6 <uart0_status_isr+0xd2>
    9cd8:	ldr	r5, [pc, #80]	; (9d2c <uart0_status_isr+0x108>)
    9cda:	b.n	9ce0 <uart0_status_isr+0xbc>
    9cdc:	cmp	r3, r4
    9cde:	beq.n	9cf6 <uart0_status_isr+0xd2>
			if (++tail >= SERIAL1_TX_BUFFER_SIZE) tail = 0;
    9ce0:	adds	r3, #1
    9ce2:	cmp	r3, #64	; 0x40
    9ce4:	it	cs
    9ce6:	movcs	r3, #0
			avail = UART0_S1;
    9ce8:	ldrb	r0, [r1, #4]
			n = tx_buffer[tail];
    9cea:	ldrb	r0, [r5, r3]
    9cec:	uxtb	r0, r0
			if (use9Bits) UART0_C3 = (UART0_C3 & ~0x40) | ((n & 0x100) >> 2);
			UART0_D = n;
    9cee:	strb	r0, [r1, #7]
		} while (UART0_TCFIFO < 8);
    9cf0:	ldrb	r0, [r1, #20]
    9cf2:	cmp	r0, #7
    9cf4:	bls.n	9cdc <uart0_status_isr+0xb8>
		tx_buffer_tail = tail;
    9cf6:	uxtb	r3, r3
		if (UART0_S1 & UART_S1_TDRE) UART0_C2 = C2_TX_COMPLETING;
    9cf8:	ldr	r1, [pc, #12]	; (9d08 <uart0_status_isr+0xe4>)
			avail = UART0_S1;
			n = tx_buffer[tail];
			if (use9Bits) UART0_C3 = (UART0_C3 & ~0x40) | ((n & 0x100) >> 2);
			UART0_D = n;
		} while (UART0_TCFIFO < 8);
		tx_buffer_tail = tail;
    9cfa:	strb	r3, [r6, #0]
		if (UART0_S1 & UART_S1_TDRE) UART0_C2 = C2_TX_COMPLETING;
    9cfc:	ldrb	r3, [r1, #4]
    9cfe:	lsls	r0, r3, #24
    9d00:	itt	mi
    9d02:	movmi	r3, #124	; 0x7c
    9d04:	strbmi	r3, [r1, #3]
    9d06:	b.n	9c94 <uart0_status_isr+0x70>
    9d08:	.word	0x4006a000
    9d0c:	.word	0x20012d9c
    9d10:	.word	0x20012d9d
    9d14:	.word	0x20012de0
    9d18:	.word	0x20012d98
    9d1c:	.word	0x20012e24
    9d20:	.word	0x20012e20
    9d24:	.word	0x20012e28
    9d28:	.word	0x20012e21
    9d2c:	.word	0x20012da0

00009d30 <serial6_available>:

int serial6_available(void)
{
	uint32_t head, tail;

	head = rx_buffer_head;
    9d30:	ldr	r2, [pc, #20]	; (9d48 <serial6_available+0x18>)
	tail = rx_buffer_tail;
    9d32:	ldr	r3, [pc, #24]	; (9d4c <serial6_available+0x1c>)

int serial6_available(void)
{
	uint32_t head, tail;

	head = rx_buffer_head;
    9d34:	ldrb	r0, [r2, #0]
	tail = rx_buffer_tail;
    9d36:	ldrb	r3, [r3, #0]

int serial6_available(void)
{
	uint32_t head, tail;

	head = rx_buffer_head;
    9d38:	uxtb	r0, r0
	tail = rx_buffer_tail;
    9d3a:	uxtb	r3, r3
	if (head >= tail) return head - tail;
    9d3c:	cmp	r0, r3
	return SERIAL6_RX_BUFFER_SIZE + head - tail;
    9d3e:	it	cc
    9d40:	addcc	r0, #64	; 0x40
    9d42:	subs	r0, r0, r3
}
    9d44:	bx	lr
    9d46:	nop
    9d48:	.word	0x20012e30
    9d4c:	.word	0x20012e31

00009d50 <lpuart0_status_isr>:
//   Receive data above watermark   LPUART_STAT_RDRF
//   LIN break detect		    UART_S2_LBKDIF
//   RxD pin active edge	    UART_S2_RXEDGIF

void lpuart0_status_isr(void)
{
    9d50:	push	{r4, r5}
	uint32_t head, tail, n;
	uint32_t c;

	if (LPUART0_STAT & LPUART_STAT_RDRF) {
    9d52:	ldr	r3, [pc, #176]	; (9e04 <lpuart0_status_isr+0xb4>)
    9d54:	ldr	r2, [r3, #4]
    9d56:	lsls	r4, r2, #10
    9d58:	bpl.n	9d9a <lpuart0_status_isr+0x4a>
//			n = UART5_D | 0x100;
//		} else {
//			n = UART5_D;
//		}
		n = LPUART0_DATA & 0x3ff;	// use only the 10 data bits
		head = rx_buffer_head + 1;
    9d5a:	ldr	r0, [pc, #172]	; (9e08 <lpuart0_status_isr+0xb8>)
//		if (use9Bits && (UART5_C3 & 0x80)) {
//			n = UART5_D | 0x100;
//		} else {
//			n = UART5_D;
//		}
		n = LPUART0_DATA & 0x3ff;	// use only the 10 data bits
    9d5c:	ldr	r2, [r3, #12]
		head = rx_buffer_head + 1;
    9d5e:	ldrb	r3, [r0, #0]
		if (head >= SERIAL6_RX_BUFFER_SIZE) head = 0;
		if (head != rx_buffer_tail) {
    9d60:	ldr	r1, [pc, #168]	; (9e0c <lpuart0_status_isr+0xbc>)
//			n = UART5_D | 0x100;
//		} else {
//			n = UART5_D;
//		}
		n = LPUART0_DATA & 0x3ff;	// use only the 10 data bits
		head = rx_buffer_head + 1;
    9d62:	adds	r3, #1
    9d64:	cmp	r3, #63	; 0x3f
		if (head >= SERIAL6_RX_BUFFER_SIZE) head = 0;
		if (head != rx_buffer_tail) {
    9d66:	ldrb	r1, [r1, #0]
//			n = UART5_D | 0x100;
//		} else {
//			n = UART5_D;
//		}
		n = LPUART0_DATA & 0x3ff;	// use only the 10 data bits
		head = rx_buffer_head + 1;
    9d68:	it	gt
    9d6a:	movgt	r3, #0
		if (head >= SERIAL6_RX_BUFFER_SIZE) head = 0;
		if (head != rx_buffer_tail) {
    9d6c:	cmp	r3, r1
    9d6e:	beq.n	9d7a <lpuart0_status_isr+0x2a>
			rx_buffer[head] = n;
    9d70:	ldr	r4, [pc, #156]	; (9e10 <lpuart0_status_isr+0xc0>)
    9d72:	uxtb	r2, r2
			rx_buffer_head = head;
    9d74:	uxtb	r1, r3
//		}
		n = LPUART0_DATA & 0x3ff;	// use only the 10 data bits
		head = rx_buffer_head + 1;
		if (head >= SERIAL6_RX_BUFFER_SIZE) head = 0;
		if (head != rx_buffer_tail) {
			rx_buffer[head] = n;
    9d76:	strb	r2, [r4, r3]
			rx_buffer_head = head;
    9d78:	strb	r1, [r0, #0]
		}
		if (rts_pin) {
    9d7a:	ldr	r2, [pc, #152]	; (9e14 <lpuart0_status_isr+0xc4>)
    9d7c:	ldr	r1, [r2, #0]
    9d7e:	cbz	r1, 9d9a <lpuart0_status_isr+0x4a>
			int avail;
			tail = tx_buffer_tail;
    9d80:	ldr	r2, [pc, #148]	; (9e18 <lpuart0_status_isr+0xc8>)
    9d82:	ldrb	r2, [r2, #0]
    9d84:	uxtb	r2, r2
			if (head >= tail) avail = head - tail;
    9d86:	cmp	r3, r2
			else avail = SERIAL6_RX_BUFFER_SIZE + head - tail;
    9d88:	itet	cc
    9d8a:	rsbcc	r2, r2, #64	; 0x40
			rx_buffer_head = head;
		}
		if (rts_pin) {
			int avail;
			tail = tx_buffer_tail;
			if (head >= tail) avail = head - tail;
    9d8e:	subcs	r3, r3, r2
			else avail = SERIAL6_RX_BUFFER_SIZE + head - tail;
    9d90:	addcc	r3, r3, r2
			if (avail >= RTS_HIGH_WATERMARK) rts_deassert();
    9d92:	cmp	r3, #39	; 0x27
    9d94:	itt	gt
    9d96:	movgt	r3, #1
    9d98:	strbgt	r3, [r1, #0]
		}
	}
	c = LPUART0_CTRL;
    9d9a:	ldr	r2, [pc, #104]	; (9e04 <lpuart0_status_isr+0xb4>)
    9d9c:	ldr	r3, [r2, #8]
	if ((c & LPUART_CTRL_TIE) && (LPUART0_STAT & LPUART_STAT_TDRE)) {
    9d9e:	lsls	r0, r3, #8
    9da0:	bpl.n	9da8 <lpuart0_status_isr+0x58>
    9da2:	ldr	r2, [r2, #4]
    9da4:	lsls	r1, r2, #8
    9da6:	bmi.n	9dcc <lpuart0_status_isr+0x7c>
			//if (use9Bits) UART5_C3 = (UART5_C3 & ~0x40) | ((n & 0x100) >> 2);
			LPUART0_DATA = n;
			tx_buffer_tail = tail;
		}
	}
	if ((c & LPUART_CTRL_TCIE) && (LPUART0_STAT & LPUART_STAT_TC)) {
    9da8:	lsls	r2, r3, #9
    9daa:	bpl.n	9dc8 <lpuart0_status_isr+0x78>
    9dac:	ldr	r3, [pc, #84]	; (9e04 <lpuart0_status_isr+0xb4>)
    9dae:	ldr	r3, [r3, #4]
    9db0:	lsls	r3, r3, #9
    9db2:	bpl.n	9dc8 <lpuart0_status_isr+0x78>
		transmitting = 0;
		if (transmit_pin) transmit_deassert();
    9db4:	ldr	r3, [pc, #100]	; (9e1c <lpuart0_status_isr+0xcc>)
			LPUART0_DATA = n;
			tx_buffer_tail = tail;
		}
	}
	if ((c & LPUART_CTRL_TCIE) && (LPUART0_STAT & LPUART_STAT_TC)) {
		transmitting = 0;
    9db6:	ldr	r1, [pc, #104]	; (9e20 <lpuart0_status_isr+0xd0>)
		if (transmit_pin) transmit_deassert();
    9db8:	ldr	r3, [r3, #0]
			LPUART0_DATA = n;
			tx_buffer_tail = tail;
		}
	}
	if ((c & LPUART_CTRL_TCIE) && (LPUART0_STAT & LPUART_STAT_TC)) {
		transmitting = 0;
    9dba:	movs	r2, #0
    9dbc:	strb	r2, [r1, #0]
		if (transmit_pin) transmit_deassert();
    9dbe:	cbz	r3, 9dc2 <lpuart0_status_isr+0x72>
    9dc0:	strb	r2, [r3, #0]
		BITBAND_CLR_BIT(LPUART0_CTRL, TCIE_BIT);
    9dc2:	ldr	r3, [pc, #96]	; (9e24 <lpuart0_status_isr+0xd4>)
    9dc4:	movs	r2, #0
    9dc6:	str	r2, [r3, #0]
		// LPUART0_CTRL &= ~LPUART_CTRL_TCIE; // Actually wondering if we can just leave this one on...
	}
}
    9dc8:	pop	{r4, r5}
    9dca:	bx	lr
			if (avail >= RTS_HIGH_WATERMARK) rts_deassert();
		}
	}
	c = LPUART0_CTRL;
	if ((c & LPUART_CTRL_TIE) && (LPUART0_STAT & LPUART_STAT_TDRE)) {
		head = tx_buffer_head;
    9dcc:	ldr	r2, [pc, #88]	; (9e28 <lpuart0_status_isr+0xd8>)
		tail = tx_buffer_tail;
    9dce:	ldr	r1, [pc, #72]	; (9e18 <lpuart0_status_isr+0xc8>)
			if (avail >= RTS_HIGH_WATERMARK) rts_deassert();
		}
	}
	c = LPUART0_CTRL;
	if ((c & LPUART_CTRL_TIE) && (LPUART0_STAT & LPUART_STAT_TDRE)) {
		head = tx_buffer_head;
    9dd0:	ldrb	r0, [r2, #0]
		tail = tx_buffer_tail;
    9dd2:	ldrb	r2, [r1, #0]
    9dd4:	uxtb	r2, r2
		if (head == tail) {
    9dd6:	cmp	r0, r2
    9dd8:	beq.n	9df6 <lpuart0_status_isr+0xa6>
			BITBAND_CLR_BIT(LPUART0_CTRL, TIE_BIT);
			BITBAND_SET_BIT(LPUART0_CTRL, TCIE_BIT);
			//LPUART0_CTRL &= ~LPUART_CTRL_TIE; 
  			//LPUART0_CTRL |= LPUART_CTRL_TCIE; // Actually wondering if we can just leave this one on...
		} else {
			if (++tail >= SERIAL6_TX_BUFFER_SIZE) tail = 0;
    9dda:	adds	r2, #1
    9ddc:	cmp	r2, #39	; 0x27
    9dde:	itt	hi
    9de0:	movhi	r0, #0
    9de2:	movhi	r2, r0
			n = tx_buffer[tail];
    9de4:	ldr	r5, [pc, #68]	; (9e2c <lpuart0_status_isr+0xdc>)
			//if (use9Bits) UART5_C3 = (UART5_C3 & ~0x40) | ((n & 0x100) >> 2);
			LPUART0_DATA = n;
    9de6:	ldr	r4, [pc, #28]	; (9e04 <lpuart0_status_isr+0xb4>)
    9de8:	it	ls
    9dea:	uxtbls	r0, r2
			BITBAND_SET_BIT(LPUART0_CTRL, TCIE_BIT);
			//LPUART0_CTRL &= ~LPUART_CTRL_TIE; 
  			//LPUART0_CTRL |= LPUART_CTRL_TCIE; // Actually wondering if we can just leave this one on...
		} else {
			if (++tail >= SERIAL6_TX_BUFFER_SIZE) tail = 0;
			n = tx_buffer[tail];
    9dec:	ldrb	r2, [r5, r2]
    9dee:	uxtb	r2, r2
			//if (use9Bits) UART5_C3 = (UART5_C3 & ~0x40) | ((n & 0x100) >> 2);
			LPUART0_DATA = n;
    9df0:	str	r2, [r4, #12]
			tx_buffer_tail = tail;
    9df2:	strb	r0, [r1, #0]
    9df4:	b.n	9da8 <lpuart0_status_isr+0x58>
	c = LPUART0_CTRL;
	if ((c & LPUART_CTRL_TIE) && (LPUART0_STAT & LPUART_STAT_TDRE)) {
		head = tx_buffer_head;
		tail = tx_buffer_tail;
		if (head == tail) {
			BITBAND_CLR_BIT(LPUART0_CTRL, TIE_BIT);
    9df6:	ldr	r0, [pc, #56]	; (9e30 <lpuart0_status_isr+0xe0>)
			BITBAND_SET_BIT(LPUART0_CTRL, TCIE_BIT);
    9df8:	ldr	r2, [pc, #40]	; (9e24 <lpuart0_status_isr+0xd4>)
	c = LPUART0_CTRL;
	if ((c & LPUART_CTRL_TIE) && (LPUART0_STAT & LPUART_STAT_TDRE)) {
		head = tx_buffer_head;
		tail = tx_buffer_tail;
		if (head == tail) {
			BITBAND_CLR_BIT(LPUART0_CTRL, TIE_BIT);
    9dfa:	movs	r4, #0
			BITBAND_SET_BIT(LPUART0_CTRL, TCIE_BIT);
    9dfc:	movs	r1, #1
	c = LPUART0_CTRL;
	if ((c & LPUART_CTRL_TIE) && (LPUART0_STAT & LPUART_STAT_TDRE)) {
		head = tx_buffer_head;
		tail = tx_buffer_tail;
		if (head == tail) {
			BITBAND_CLR_BIT(LPUART0_CTRL, TIE_BIT);
    9dfe:	str	r4, [r0, #0]
			BITBAND_SET_BIT(LPUART0_CTRL, TCIE_BIT);
    9e00:	str	r1, [r2, #0]
    9e02:	b.n	9da8 <lpuart0_status_isr+0x58>
    9e04:	.word	0x400c4000
    9e08:	.word	0x20012e30
    9e0c:	.word	0x20012e31
    9e10:	.word	0x20012e5c
    9e14:	.word	0x20012e2c
    9e18:	.word	0x20012e9d
    9e1c:	.word	0x20012ea0
    9e20:	.word	0x20012e9c
    9e24:	.word	0x43880158
    9e28:	.word	0x20012ea4
    9e2c:	.word	0x20012e34
    9e30:	.word	0x4388015c

00009e34 <usb_init_serialnumber>:
	{'M','T','P'}
};
#endif

void usb_init_serialnumber(void)
{
    9e34:	push	{r4, lr}
    9e36:	sub	sp, #16
	char buf[11];
	uint32_t i, num;

	__disable_irq();
    9e38:	cpsid	i
	FTFL_FCCOB1 = 15;
	FTFL_FSTAT = FTFL_FSTAT_CCIF;
	while (!(FTFL_FSTAT & FTFL_FSTAT_CCIF)) ; // wait
	num = *(uint32_t *)&FTFL_FCCOB7;
#elif defined(HAS_KINETIS_FLASH_FTFE)
	kinetis_hsrun_disable();
    9e3a:	bl	76dc <kinetis_hsrun_disable>
	FTFL_FSTAT = FTFL_FSTAT_RDCOLERR | FTFL_FSTAT_ACCERR | FTFL_FSTAT_FPVIOL;
	*(uint32_t *)&FTFL_FCCOB3 = 0x41070000;
    9e3e:	ldr	r2, [pc, #96]	; (9ea0 <usb_init_serialnumber+0x6c>)
	FTFL_FSTAT = FTFL_FSTAT_CCIF;
	while (!(FTFL_FSTAT & FTFL_FSTAT_CCIF)) ; // wait
	num = *(uint32_t *)&FTFL_FCCOB7;
#elif defined(HAS_KINETIS_FLASH_FTFE)
	kinetis_hsrun_disable();
	FTFL_FSTAT = FTFL_FSTAT_RDCOLERR | FTFL_FSTAT_ACCERR | FTFL_FSTAT_FPVIOL;
    9e40:	ldr	r3, [pc, #96]	; (9ea4 <usb_init_serialnumber+0x70>)
	*(uint32_t *)&FTFL_FCCOB3 = 0x41070000;
    9e42:	ldr	r1, [pc, #100]	; (9ea8 <usb_init_serialnumber+0x74>)
    9e44:	str	r1, [r2, #0]
	FTFL_FSTAT = FTFL_FSTAT_CCIF;
	while (!(FTFL_FSTAT & FTFL_FSTAT_CCIF)) ; // wait
	num = *(uint32_t *)&FTFL_FCCOB7;
#elif defined(HAS_KINETIS_FLASH_FTFE)
	kinetis_hsrun_disable();
	FTFL_FSTAT = FTFL_FSTAT_RDCOLERR | FTFL_FSTAT_ACCERR | FTFL_FSTAT_FPVIOL;
    9e46:	movs	r2, #112	; 0x70
	*(uint32_t *)&FTFL_FCCOB3 = 0x41070000;
	FTFL_FSTAT = FTFL_FSTAT_CCIF;
    9e48:	movs	r1, #128	; 0x80
	FTFL_FSTAT = FTFL_FSTAT_CCIF;
	while (!(FTFL_FSTAT & FTFL_FSTAT_CCIF)) ; // wait
	num = *(uint32_t *)&FTFL_FCCOB7;
#elif defined(HAS_KINETIS_FLASH_FTFE)
	kinetis_hsrun_disable();
	FTFL_FSTAT = FTFL_FSTAT_RDCOLERR | FTFL_FSTAT_ACCERR | FTFL_FSTAT_FPVIOL;
    9e4a:	strb	r2, [r3, #0]
	*(uint32_t *)&FTFL_FCCOB3 = 0x41070000;
	FTFL_FSTAT = FTFL_FSTAT_CCIF;
	while (!(FTFL_FSTAT & FTFL_FSTAT_CCIF)) ; // wait
    9e4c:	mov	r2, r3
	num = *(uint32_t *)&FTFL_FCCOB7;
#elif defined(HAS_KINETIS_FLASH_FTFE)
	kinetis_hsrun_disable();
	FTFL_FSTAT = FTFL_FSTAT_RDCOLERR | FTFL_FSTAT_ACCERR | FTFL_FSTAT_FPVIOL;
	*(uint32_t *)&FTFL_FCCOB3 = 0x41070000;
	FTFL_FSTAT = FTFL_FSTAT_CCIF;
    9e4e:	strb	r1, [r3, #0]
	while (!(FTFL_FSTAT & FTFL_FSTAT_CCIF)) ; // wait
    9e50:	ldrb	r3, [r2, #0]
    9e52:	lsls	r3, r3, #24
    9e54:	bpl.n	9e50 <usb_init_serialnumber+0x1c>
	num = *(uint32_t *)&FTFL_FCCOBB;
    9e56:	ldr	r3, [pc, #84]	; (9eac <usb_init_serialnumber+0x78>)
    9e58:	ldr	r4, [r3, #0]
	kinetis_hsrun_enable();
    9e5a:	bl	7710 <kinetis_hsrun_enable>
#endif
	__enable_irq();
    9e5e:	cpsie	i
	// add extra zero to work around OS-X CDC-ACM driver bug
	if (num < 10000000) num = num * 10;
    9e60:	ldr	r3, [pc, #76]	; (9eb0 <usb_init_serialnumber+0x7c>)
    9e62:	cmp	r4, r3
    9e64:	itt	ls
    9e66:	addls.w	r4, r4, r4, lsl #2
    9e6a:	lslls	r4, r4, #1
	ultoa(num, buf, 10);
    9e6c:	mov	r0, r4
    9e6e:	ldr	r4, [pc, #68]	; (9eb4 <usb_init_serialnumber+0x80>)
    9e70:	add	r1, sp, #4
    9e72:	movs	r2, #10
    9e74:	bl	9eb8 <ultoa>
    9e78:	add	r1, sp, #4
    9e7a:	mov	r0, r4
	for (i=0; i<10; i++) {
    9e7c:	movs	r3, #0
		char c = buf[i];
    9e7e:	ldrb.w	r2, [r1], #1
    9e82:	adds	r3, #1
		if (!c) break;
    9e84:	cbz	r2, 9e96 <usb_init_serialnumber+0x62>
#endif
	__enable_irq();
	// add extra zero to work around OS-X CDC-ACM driver bug
	if (num < 10000000) num = num * 10;
	ultoa(num, buf, 10);
	for (i=0; i<10; i++) {
    9e86:	cmp	r3, #10
		char c = buf[i];
		if (!c) break;
		usb_string_serial_number_default.wString[i] = c;
    9e88:	strh.w	r2, [r0, #2]!
#endif
	__enable_irq();
	// add extra zero to work around OS-X CDC-ACM driver bug
	if (num < 10000000) num = num * 10;
	ultoa(num, buf, 10);
	for (i=0; i<10; i++) {
    9e8c:	bne.n	9e7e <usb_init_serialnumber+0x4a>
    9e8e:	movs	r3, #22
		char c = buf[i];
		if (!c) break;
		usb_string_serial_number_default.wString[i] = c;
	}
	usb_string_serial_number_default.bLength = i * 2 + 2;
    9e90:	strb	r3, [r4, #0]
}
    9e92:	add	sp, #16
    9e94:	pop	{r4, pc}
    9e96:	lsls	r3, r3, #1
    9e98:	uxtb	r3, r3
	for (i=0; i<10; i++) {
		char c = buf[i];
		if (!c) break;
		usb_string_serial_number_default.wString[i] = c;
	}
	usb_string_serial_number_default.bLength = i * 2 + 2;
    9e9a:	strb	r3, [r4, #0]
}
    9e9c:	add	sp, #16
    9e9e:	pop	{r4, pc}
    9ea0:	.word	0x40020004
    9ea4:	.word	0x40020000
    9ea8:	.word	0x41070000
    9eac:	.word	0x4002000c
    9eb0:	.word	0x0098967f
    9eb4:	.word	0x20008218

00009eb8 <ultoa>:
#include <stdlib.h>
#include <math.h>


char * ultoa(unsigned long val, char *buf, int radix)
{
    9eb8:	push	{r4, r5, r6, r7}
    9eba:	subs	r5, r1, #1
    9ebc:	mov	r6, r5
	unsigned digit;
	int i=0, j;
    9ebe:	movs	r4, #0
    9ec0:	b.n	9ec4 <ultoa+0xc>
	while (1) {
		digit = val % radix;
		buf[i] = ((digit < 10) ? '0' + digit : 'A' + digit - 10);
		val /= radix;
		if (val == 0) break;
		i++;
    9ec2:	adds	r4, #1
	unsigned digit;
	int i=0, j;
	char t;

	while (1) {
		digit = val % radix;
    9ec4:	udiv	r3, r0, r2
    9ec8:	mls	r0, r2, r3, r0
		buf[i] = ((digit < 10) ? '0' + digit : 'A' + digit - 10);
    9ecc:	cmp	r0, #9
    9ece:	add.w	r7, r0, #48	; 0x30
    9ed2:	itet	hi
    9ed4:	addhi	r0, #55	; 0x37
    9ed6:	uxtbls	r0, r7
    9ed8:	uxtbhi	r0, r0
    9eda:	strb.w	r0, [r6, #1]!
		val /= radix;
		if (val == 0) break;
    9ede:	mov	r0, r3
    9ee0:	cmp	r3, #0
    9ee2:	bne.n	9ec2 <ultoa+0xa>
		i++;
	}
	buf[i + 1] = 0;
    9ee4:	adds	r2, r1, r4
    9ee6:	strb	r3, [r2, #1]
	for (j=0; j < i; j++, i--) {
    9ee8:	cbz	r4, 9efe <ultoa+0x46>
		t = buf[j];
		buf[j] = buf[i];
    9eea:	ldrb	r0, [r2, #0]
		if (val == 0) break;
		i++;
	}
	buf[i + 1] = 0;
	for (j=0; j < i; j++, i--) {
		t = buf[j];
    9eec:	ldrb.w	r6, [r5, #1]!
		buf[j] = buf[i];
    9ef0:	strb	r0, [r5, #0]
		val /= radix;
		if (val == 0) break;
		i++;
	}
	buf[i + 1] = 0;
	for (j=0; j < i; j++, i--) {
    9ef2:	adds	r3, #1
    9ef4:	subs	r0, r4, r3
    9ef6:	cmp	r3, r0
		t = buf[j];
		buf[j] = buf[i];
		buf[i] = t;
    9ef8:	strb.w	r6, [r2], #-1
		val /= radix;
		if (val == 0) break;
		i++;
	}
	buf[i + 1] = 0;
	for (j=0; j < i; j++, i--) {
    9efc:	blt.n	9eea <ultoa+0x32>
		t = buf[j];
		buf[j] = buf[i];
		buf[i] = t;
	}
	return buf;
}
    9efe:	mov	r0, r1
    9f00:	pop	{r4, r5, r6, r7}
    9f02:	bx	lr

00009f04 <usb_midi_flush_output>:
                usb_midi_write_packed(0x05 | cable | (0xF7 << 8));
	}
}

void usb_midi_flush_output(void)
{
    9f04:	push	{r3, r4, r5, lr}
	if (tx_noautoflush == 0 && tx_packet && tx_packet->index > 0) {
    9f06:	ldr	r3, [pc, #32]	; (9f28 <usb_midi_flush_output+0x24>)
    9f08:	ldrb	r4, [r3, #0]
    9f0a:	cbnz	r4, 9f16 <usb_midi_flush_output+0x12>
    9f0c:	ldr	r5, [pc, #28]	; (9f2c <usb_midi_flush_output+0x28>)
    9f0e:	ldr	r1, [r5, #0]
    9f10:	cbz	r1, 9f16 <usb_midi_flush_output+0x12>
    9f12:	ldrh	r3, [r1, #2]
    9f14:	cbnz	r3, 9f18 <usb_midi_flush_output+0x14>
    9f16:	pop	{r3, r4, r5, pc}
		tx_packet->len = tx_packet->index * 4;
    9f18:	lsls	r3, r3, #2
    9f1a:	strh	r3, [r1, #0]
		usb_tx(MIDI_TX_ENDPOINT, tx_packet);
    9f1c:	movs	r0, #4
    9f1e:	bl	7c3c <usb_tx>
		tx_packet = NULL;
    9f22:	str	r4, [r5, #0]
    9f24:	pop	{r3, r4, r5, pc}
    9f26:	nop
    9f28:	.word	0x20012ea5
    9f2c:	.word	0x20012ea8

00009f30 <serial3_available>:

int serial3_available(void)
{
	uint32_t head, tail;

	head = rx_buffer_head;
    9f30:	ldr	r2, [pc, #20]	; (9f48 <serial3_available+0x18>)
	tail = rx_buffer_tail;
    9f32:	ldr	r3, [pc, #24]	; (9f4c <serial3_available+0x1c>)

int serial3_available(void)
{
	uint32_t head, tail;

	head = rx_buffer_head;
    9f34:	ldrb	r0, [r2, #0]
	tail = rx_buffer_tail;
    9f36:	ldrb	r3, [r3, #0]

int serial3_available(void)
{
	uint32_t head, tail;

	head = rx_buffer_head;
    9f38:	uxtb	r0, r0
	tail = rx_buffer_tail;
    9f3a:	uxtb	r3, r3
	if (head >= tail) return head - tail;
    9f3c:	cmp	r0, r3
	return SERIAL3_RX_BUFFER_SIZE + head - tail;
    9f3e:	it	cc
    9f40:	addcc	r0, #64	; 0x40
    9f42:	subs	r0, r0, r3
}
    9f44:	bx	lr
    9f46:	nop
    9f48:	.word	0x20012eb0
    9f4c:	.word	0x20012eb1

00009f50 <uart2_status_isr>:
//   Receive data above watermark   UART_S1_RDRF
//   LIN break detect		    UART_S2_LBKDIF
//   RxD pin active edge	    UART_S2_RXEDGIF

void uart2_status_isr(void)
{
    9f50:	push	{r4, r5}
	uint32_t head, tail, n;
	uint8_t c;

	if (UART2_S1 & UART_S1_RDRF) {
    9f52:	ldr	r3, [pc, #172]	; (a000 <uart2_status_isr+0xb0>)
    9f54:	ldrb	r2, [r3, #4]
    9f56:	lsls	r4, r2, #26
    9f58:	bpl.n	9f9a <uart2_status_isr+0x4a>
		if (use9Bits && (UART2_C3 & 0x80)) {
			n = UART2_D | 0x100;
		} else {
			n = UART2_D;
		}
		head = rx_buffer_head + 1;
    9f5a:	ldr	r0, [pc, #168]	; (a004 <uart2_status_isr+0xb4>)

	if (UART2_S1 & UART_S1_RDRF) {
		if (use9Bits && (UART2_C3 & 0x80)) {
			n = UART2_D | 0x100;
		} else {
			n = UART2_D;
    9f5c:	ldrb	r2, [r3, #7]
		}
		head = rx_buffer_head + 1;
    9f5e:	ldrb	r3, [r0, #0]
		if (head >= SERIAL3_RX_BUFFER_SIZE) head = 0;
		if (head != rx_buffer_tail) {
    9f60:	ldr	r1, [pc, #164]	; (a008 <uart2_status_isr+0xb8>)
		if (use9Bits && (UART2_C3 & 0x80)) {
			n = UART2_D | 0x100;
		} else {
			n = UART2_D;
		}
		head = rx_buffer_head + 1;
    9f62:	adds	r3, #1
    9f64:	cmp	r3, #63	; 0x3f
		if (head >= SERIAL3_RX_BUFFER_SIZE) head = 0;
		if (head != rx_buffer_tail) {
    9f66:	ldrb	r1, [r1, #0]
		if (use9Bits && (UART2_C3 & 0x80)) {
			n = UART2_D | 0x100;
		} else {
			n = UART2_D;
		}
		head = rx_buffer_head + 1;
    9f68:	it	gt
    9f6a:	movgt	r3, #0
		if (head >= SERIAL3_RX_BUFFER_SIZE) head = 0;
		if (head != rx_buffer_tail) {
    9f6c:	cmp	r3, r1

	if (UART2_S1 & UART_S1_RDRF) {
		if (use9Bits && (UART2_C3 & 0x80)) {
			n = UART2_D | 0x100;
		} else {
			n = UART2_D;
    9f6e:	uxtb	r2, r2
		}
		head = rx_buffer_head + 1;
		if (head >= SERIAL3_RX_BUFFER_SIZE) head = 0;
		if (head != rx_buffer_tail) {
    9f70:	beq.n	9f7a <uart2_status_isr+0x2a>
			rx_buffer[head] = n;
    9f72:	ldr	r4, [pc, #152]	; (a00c <uart2_status_isr+0xbc>)
			rx_buffer_head = head;
    9f74:	uxtb	r1, r3
			n = UART2_D;
		}
		head = rx_buffer_head + 1;
		if (head >= SERIAL3_RX_BUFFER_SIZE) head = 0;
		if (head != rx_buffer_tail) {
			rx_buffer[head] = n;
    9f76:	strb	r2, [r4, r3]
			rx_buffer_head = head;
    9f78:	strb	r1, [r0, #0]
		}
		if (rts_pin) {
    9f7a:	ldr	r2, [pc, #148]	; (a010 <uart2_status_isr+0xc0>)
    9f7c:	ldr	r1, [r2, #0]
    9f7e:	cbz	r1, 9f9a <uart2_status_isr+0x4a>
			int avail;
			tail = tx_buffer_tail;
    9f80:	ldr	r2, [pc, #144]	; (a014 <uart2_status_isr+0xc4>)
    9f82:	ldrb	r2, [r2, #0]
    9f84:	uxtb	r2, r2
			if (head >= tail) avail = head - tail;
    9f86:	cmp	r3, r2
			else avail = SERIAL3_RX_BUFFER_SIZE + head - tail;
    9f88:	itet	cc
    9f8a:	rsbcc	r2, r2, #64	; 0x40
			rx_buffer_head = head;
		}
		if (rts_pin) {
			int avail;
			tail = tx_buffer_tail;
			if (head >= tail) avail = head - tail;
    9f8e:	subcs	r3, r3, r2
			else avail = SERIAL3_RX_BUFFER_SIZE + head - tail;
    9f90:	addcc	r3, r3, r2
			if (avail >= RTS_HIGH_WATERMARK) rts_deassert();
    9f92:	cmp	r3, #39	; 0x27
    9f94:	itt	gt
    9f96:	movgt	r3, #1
    9f98:	strbgt	r3, [r1, #0]
		}
	}
	c = UART2_C2;
    9f9a:	ldr	r2, [pc, #100]	; (a000 <uart2_status_isr+0xb0>)
    9f9c:	ldrb	r3, [r2, #3]
    9f9e:	uxtb	r3, r3
	if ((c & UART_C2_TIE) && (UART2_S1 & UART_S1_TDRE)) {
    9fa0:	lsls	r0, r3, #24
    9fa2:	bmi.n	9fc8 <uart2_status_isr+0x78>
			if (use9Bits) UART2_C3 = (UART2_C3 & ~0x40) | ((n & 0x100) >> 2);
			UART2_D = n;
			tx_buffer_tail = tail;
		}
	}
	if ((c & UART_C2_TCIE) && (UART2_S1 & UART_S1_TC)) {
    9fa4:	lsls	r2, r3, #25
    9fa6:	bpl.n	9fc4 <uart2_status_isr+0x74>
    9fa8:	ldr	r3, [pc, #84]	; (a000 <uart2_status_isr+0xb0>)
    9faa:	ldrb	r3, [r3, #4]
    9fac:	lsls	r3, r3, #25
    9fae:	bpl.n	9fc4 <uart2_status_isr+0x74>
		transmitting = 0;
		if (transmit_pin) transmit_deassert();
    9fb0:	ldr	r3, [pc, #100]	; (a018 <uart2_status_isr+0xc8>)
			UART2_D = n;
			tx_buffer_tail = tail;
		}
	}
	if ((c & UART_C2_TCIE) && (UART2_S1 & UART_S1_TC)) {
		transmitting = 0;
    9fb2:	ldr	r1, [pc, #104]	; (a01c <uart2_status_isr+0xcc>)
		if (transmit_pin) transmit_deassert();
    9fb4:	ldr	r3, [r3, #0]
			UART2_D = n;
			tx_buffer_tail = tail;
		}
	}
	if ((c & UART_C2_TCIE) && (UART2_S1 & UART_S1_TC)) {
		transmitting = 0;
    9fb6:	movs	r2, #0
    9fb8:	strb	r2, [r1, #0]
		if (transmit_pin) transmit_deassert();
    9fba:	cbz	r3, 9fbe <uart2_status_isr+0x6e>
    9fbc:	strb	r2, [r3, #0]
		UART2_C2 = C2_TX_INACTIVE;
    9fbe:	ldr	r3, [pc, #64]	; (a000 <uart2_status_isr+0xb0>)
    9fc0:	movs	r2, #44	; 0x2c
    9fc2:	strb	r2, [r3, #3]
	}
}
    9fc4:	pop	{r4, r5}
    9fc6:	bx	lr
			else avail = SERIAL3_RX_BUFFER_SIZE + head - tail;
			if (avail >= RTS_HIGH_WATERMARK) rts_deassert();
		}
	}
	c = UART2_C2;
	if ((c & UART_C2_TIE) && (UART2_S1 & UART_S1_TDRE)) {
    9fc8:	ldrb	r1, [r2, #4]
    9fca:	lsls	r1, r1, #24
    9fcc:	bpl.n	9fa4 <uart2_status_isr+0x54>
		head = tx_buffer_head;
    9fce:	ldr	r1, [pc, #80]	; (a020 <uart2_status_isr+0xd0>)
		tail = tx_buffer_tail;
    9fd0:	ldr	r0, [pc, #64]	; (a014 <uart2_status_isr+0xc4>)
			if (avail >= RTS_HIGH_WATERMARK) rts_deassert();
		}
	}
	c = UART2_C2;
	if ((c & UART_C2_TIE) && (UART2_S1 & UART_S1_TDRE)) {
		head = tx_buffer_head;
    9fd2:	ldrb	r4, [r1, #0]
		tail = tx_buffer_tail;
    9fd4:	ldrb	r1, [r0, #0]
    9fd6:	uxtb	r1, r1
		if (head == tail) {
    9fd8:	cmp	r4, r1
    9fda:	beq.n	9ff8 <uart2_status_isr+0xa8>
			UART2_C2 = C2_TX_COMPLETING;
		} else {
			if (++tail >= SERIAL3_TX_BUFFER_SIZE) tail = 0;
    9fdc:	adds	r2, r1, #1
    9fde:	cmp	r2, #39	; 0x27
    9fe0:	itt	hi
    9fe2:	movhi	r1, #0
    9fe4:	movhi	r2, r1
			n = tx_buffer[tail];
    9fe6:	ldr	r5, [pc, #60]	; (a024 <uart2_status_isr+0xd4>)
			if (use9Bits) UART2_C3 = (UART2_C3 & ~0x40) | ((n & 0x100) >> 2);
			UART2_D = n;
    9fe8:	ldr	r4, [pc, #20]	; (a000 <uart2_status_isr+0xb0>)
    9fea:	it	ls
    9fec:	uxtbls	r1, r2
		tail = tx_buffer_tail;
		if (head == tail) {
			UART2_C2 = C2_TX_COMPLETING;
		} else {
			if (++tail >= SERIAL3_TX_BUFFER_SIZE) tail = 0;
			n = tx_buffer[tail];
    9fee:	ldrb	r2, [r5, r2]
    9ff0:	uxtb	r2, r2
			if (use9Bits) UART2_C3 = (UART2_C3 & ~0x40) | ((n & 0x100) >> 2);
			UART2_D = n;
    9ff2:	strb	r2, [r4, #7]
			tx_buffer_tail = tail;
    9ff4:	strb	r1, [r0, #0]
    9ff6:	b.n	9fa4 <uart2_status_isr+0x54>
	c = UART2_C2;
	if ((c & UART_C2_TIE) && (UART2_S1 & UART_S1_TDRE)) {
		head = tx_buffer_head;
		tail = tx_buffer_tail;
		if (head == tail) {
			UART2_C2 = C2_TX_COMPLETING;
    9ff8:	movs	r1, #108	; 0x6c
    9ffa:	strb	r1, [r2, #3]
    9ffc:	b.n	9fa4 <uart2_status_isr+0x54>
    9ffe:	nop
    a000:	.word	0x4006c000
    a004:	.word	0x20012eb0
    a008:	.word	0x20012eb1
    a00c:	.word	0x20012edc
    a010:	.word	0x20012eac
    a014:	.word	0x20012f1d
    a018:	.word	0x20012f20
    a01c:	.word	0x20012f1c
    a020:	.word	0x20012f24
    a024:	.word	0x20012eb4

0000a028 <serialEvent1()>:
#include "HardwareSerial.h"

HardwareSerial Serial1;

void serialEvent1() __attribute__((weak));
void serialEvent1() {}
    a028:	bx	lr
    a02a:	nop

0000a02c <serialEvent3()>:
#include "HardwareSerial.h"

HardwareSerial3 Serial3;

void serialEvent3() __attribute__((weak));
void serialEvent3() {}
    a02c:	bx	lr
    a02e:	nop

0000a030 <roundf>:
    a030:	sub	sp, #8
    a032:	vstr	s0, [sp, #4]
    a036:	ldr	r1, [sp, #4]
    a038:	ubfx	r3, r1, #23, #8
    a03c:	subs	r3, #127	; 0x7f
    a03e:	cmp	r3, #22
    a040:	bgt.n	a064 <roundf+0x34>
    a042:	cmp	r3, #0
    a044:	blt.n	a07c <roundf+0x4c>
    a046:	ldr	r2, [pc, #68]	; (a08c <roundf+0x5c>)
    a048:	asr.w	r0, r2, r3
    a04c:	tst	r1, r0
    a04e:	beq.n	a068 <roundf+0x38>
    a050:	mov.w	r2, #4194304	; 0x400000
    a054:	asrs	r2, r3
    a056:	add	r2, r1
    a058:	bic.w	r2, r2, r0
    a05c:	vmov	s0, r2
    a060:	add	sp, #8
    a062:	bx	lr
    a064:	cmp	r3, #128	; 0x80
    a066:	beq.n	a070 <roundf+0x40>
    a068:	vldr	s0, [sp, #4]
    a06c:	add	sp, #8
    a06e:	bx	lr
    a070:	vldr	s15, [sp, #4]
    a074:	vadd.f32	s0, s15, s15
    a078:	add	sp, #8
    a07a:	bx	lr
    a07c:	adds	r3, #1
    a07e:	and.w	r2, r1, #2147483648	; 0x80000000
    a082:	bne.n	a05c <roundf+0x2c>
    a084:	orr.w	r2, r2, #1065353216	; 0x3f800000
    a088:	b.n	a05c <roundf+0x2c>
    a08a:	nop
    a08c:	.word	0x007fffff

0000a090 <powf>:
    a090:	push	{r4, r5, r6, r7, lr}
    a092:	vpush	{d8-d9}
    a096:	ldr	r5, [pc, #716]	; (a364 <powf+0x2d4>)
    a098:	sub	sp, #44	; 0x2c
    a09a:	vmov.f32	s18, s0
    a09e:	vmov.f32	s16, s1
    a0a2:	bl	a3b8 <__ieee754_powf>
    a0a6:	ldrsb.w	r4, [r5]
    a0aa:	adds	r3, r4, #1
    a0ac:	vmov.f32	s17, s0
    a0b0:	beq.n	a12c <powf+0x9c>
    a0b2:	vcmp.f32	s16, s16
    a0b6:	vmrs	APSR_nzcv, fpscr
    a0ba:	bvs.n	a12c <powf+0x9c>
    a0bc:	vcmp.f32	s18, s18
    a0c0:	vmrs	APSR_nzcv, fpscr
    a0c4:	bvs.w	a20e <powf+0x17e>
    a0c8:	vcmp.f32	s18, #0.0
    a0cc:	vmrs	APSR_nzcv, fpscr
    a0d0:	bne.n	a138 <powf+0xa8>
    a0d2:	vcmp.f32	s16, #0.0
    a0d6:	vmrs	APSR_nzcv, fpscr
    a0da:	bne.n	a118 <powf+0x88>
    a0dc:	movs	r3, #1
    a0de:	ldr	r2, [pc, #648]	; (a368 <powf+0x2d8>)
    a0e0:	str	r3, [sp, #0]
    a0e2:	vmov	r0, s18
    a0e6:	movs	r3, #0
    a0e8:	str	r2, [sp, #4]
    a0ea:	str	r3, [sp, #32]
    a0ec:	bl	af64 <__aeabi_f2d>
    a0f0:	strd	r0, r1, [sp, #8]
    a0f4:	vmov	r0, s16
    a0f8:	bl	af64 <__aeabi_f2d>
    a0fc:	movs	r2, #0
    a0fe:	movs	r3, #0
    a100:	strd	r0, r1, [sp, #16]
    a104:	strd	r2, r3, [sp, #24]
    a108:	cmp	r4, #0
    a10a:	beq.n	a1e2 <powf+0x152>
    a10c:	vmov.f32	s0, #112	; 0x3f800000  1.0
    a110:	add	sp, #44	; 0x2c
    a112:	vpop	{d8-d9}
    a116:	pop	{r4, r5, r6, r7, pc}
    a118:	vmov.f32	s0, s16
    a11c:	bl	ab94 <finitef>
    a120:	cbz	r0, a12c <powf+0x9c>
    a122:	vcmpe.f32	s16, #0.0
    a126:	vmrs	APSR_nzcv, fpscr
    a12a:	bmi.n	a1ac <powf+0x11c>
    a12c:	vmov.f32	s0, s17
    a130:	add	sp, #44	; 0x2c
    a132:	vpop	{d8-d9}
    a136:	pop	{r4, r5, r6, r7, pc}
    a138:	bl	ab94 <finitef>
    a13c:	mov	r4, r0
    a13e:	cmp	r0, #0
    a140:	beq.w	a24a <powf+0x1ba>
    a144:	vcmp.f32	s17, #0.0
    a148:	vmrs	APSR_nzcv, fpscr
    a14c:	bne.n	a12c <powf+0x9c>
    a14e:	vmov.f32	s0, s18
    a152:	bl	ab94 <finitef>
    a156:	cmp	r0, #0
    a158:	beq.n	a12c <powf+0x9c>
    a15a:	vmov.f32	s0, s16
    a15e:	bl	ab94 <finitef>
    a162:	cmp	r0, #0
    a164:	beq.n	a12c <powf+0x9c>
    a166:	movs	r3, #4
    a168:	ldr	r2, [pc, #508]	; (a368 <powf+0x2d8>)
    a16a:	str	r3, [sp, #0]
    a16c:	vmov	r0, s18
    a170:	movs	r3, #0
    a172:	str	r3, [sp, #32]
    a174:	str	r2, [sp, #4]
    a176:	bl	af64 <__aeabi_f2d>
    a17a:	strd	r0, r1, [sp, #8]
    a17e:	vmov	r0, s16
    a182:	bl	af64 <__aeabi_f2d>
    a186:	movs	r6, #0
    a188:	movs	r7, #0
    a18a:	strd	r0, r1, [sp, #16]
    a18e:	strd	r6, r7, [sp, #24]
    a192:	ldrsb.w	r3, [r5]
    a196:	cmp	r3, #2
    a198:	beq.n	a1a2 <powf+0x112>
    a19a:	mov	r0, sp
    a19c:	bl	aa58 <matherr>
    a1a0:	cbnz	r0, a1ee <powf+0x15e>
    a1a2:	bl	b9cc <__errno>
    a1a6:	movs	r3, #34	; 0x22
    a1a8:	str	r3, [r0, #0]
    a1aa:	b.n	a1ee <powf+0x15e>
    a1ac:	movs	r3, #1
    a1ae:	ldr	r2, [pc, #440]	; (a368 <powf+0x2d8>)
    a1b0:	str	r3, [sp, #0]
    a1b2:	vmov	r0, s18
    a1b6:	movs	r3, #0
    a1b8:	str	r3, [sp, #32]
    a1ba:	str	r2, [sp, #4]
    a1bc:	bl	af64 <__aeabi_f2d>
    a1c0:	strd	r0, r1, [sp, #8]
    a1c4:	vmov	r0, s16
    a1c8:	bl	af64 <__aeabi_f2d>
    a1cc:	ldrsb.w	r3, [r5]
    a1d0:	strd	r0, r1, [sp, #16]
    a1d4:	cmp	r3, #0
    a1d6:	bne.w	a30a <powf+0x27a>
    a1da:	movs	r2, #0
    a1dc:	movs	r3, #0
    a1de:	strd	r2, r3, [sp, #24]
    a1e2:	mov	r0, sp
    a1e4:	bl	aa58 <matherr>
    a1e8:	cmp	r0, #0
    a1ea:	beq.w	a300 <powf+0x270>
    a1ee:	ldr	r3, [sp, #32]
    a1f0:	cbz	r3, a1fa <powf+0x16a>
    a1f2:	bl	b9cc <__errno>
    a1f6:	ldr	r3, [sp, #32]
    a1f8:	str	r3, [r0, #0]
    a1fa:	ldrd	r0, r1, [sp, #24]
    a1fe:	bl	b5bc <__aeabi_d2f>
    a202:	vmov	s0, r0
    a206:	add	sp, #44	; 0x2c
    a208:	vpop	{d8-d9}
    a20c:	pop	{r4, r5, r6, r7, pc}
    a20e:	vcmp.f32	s16, #0.0
    a212:	vmrs	APSR_nzcv, fpscr
    a216:	bne.n	a12c <powf+0x9c>
    a218:	movs	r3, #1
    a21a:	ldr	r2, [pc, #332]	; (a368 <powf+0x2d8>)
    a21c:	str	r3, [sp, #0]
    a21e:	vmov	r0, s18
    a222:	movs	r3, #0
    a224:	str	r2, [sp, #4]
    a226:	str	r3, [sp, #32]
    a228:	bl	af64 <__aeabi_f2d>
    a22c:	strd	r0, r1, [sp, #8]
    a230:	vmov	r0, s16
    a234:	bl	af64 <__aeabi_f2d>
    a238:	ldr	r3, [pc, #304]	; (a36c <powf+0x2dc>)
    a23a:	movs	r2, #0
    a23c:	cmp	r4, #2
    a23e:	strd	r0, r1, [sp, #16]
    a242:	strd	r2, r3, [sp, #24]
    a246:	bne.n	a1e2 <powf+0x152>
    a248:	b.n	a10c <powf+0x7c>
    a24a:	vmov.f32	s0, s18
    a24e:	bl	ab94 <finitef>
    a252:	cmp	r0, #0
    a254:	beq.w	a144 <powf+0xb4>
    a258:	vmov.f32	s0, s16
    a25c:	bl	ab94 <finitef>
    a260:	cmp	r0, #0
    a262:	beq.w	a144 <powf+0xb4>
    a266:	vcmp.f32	s17, s17
    a26a:	vmrs	APSR_nzcv, fpscr
    a26e:	bvs.w	a380 <powf+0x2f0>
    a272:	ldr	r3, [pc, #244]	; (a368 <powf+0x2d8>)
    a274:	str	r4, [sp, #32]
    a276:	movs	r2, #3
    a278:	vmov	r0, s18
    a27c:	stmia.w	sp, {r2, r3}
    a280:	bl	af64 <__aeabi_f2d>
    a284:	strd	r0, r1, [sp, #8]
    a288:	vmov	r0, s16
    a28c:	bl	af64 <__aeabi_f2d>
    a290:	ldrsb.w	r3, [r5]
    a294:	strd	r0, r1, [sp, #16]
    a298:	cmp	r3, #0
    a29a:	bne.n	a318 <powf+0x288>
    a29c:	ldr	r3, [pc, #208]	; (a370 <powf+0x2e0>)
    a29e:	vcmpe.f32	s18, #0.0
    a2a2:	mov.w	r2, #3758096384	; 0xe0000000
    a2a6:	vmrs	APSR_nzcv, fpscr
    a2aa:	strd	r2, r3, [sp, #24]
    a2ae:	bpl.w	a19a <powf+0x10a>
    a2b2:	vmov.f32	s15, #96	; 0x3f000000  0.5
    a2b6:	vmul.f32	s15, s16, s15
    a2ba:	vmov	r0, s15
    a2be:	bl	af64 <__aeabi_f2d>
    a2c2:	mov	r6, r0
    a2c4:	mov	r7, r1
    a2c6:	vmov	d0, r6, r7
    a2ca:	bl	aa5c <rint>
    a2ce:	mov	r0, r6
    a2d0:	vmov	r2, r3, d0
    a2d4:	mov	r1, r7
    a2d6:	bl	b4dc <__aeabi_dcmpeq>
    a2da:	cmp	r0, #0
    a2dc:	bne.n	a35e <powf+0x2ce>
    a2de:	ldr	r1, [pc, #148]	; (a374 <powf+0x2e4>)
    a2e0:	ldrsb.w	r3, [r5]
    a2e4:	mov.w	r0, #3758096384	; 0xe0000000
    a2e8:	strd	r0, r1, [sp, #24]
    a2ec:	b.n	a196 <powf+0x106>
    a2ee:	mov	r0, r2
    a2f0:	mov	r1, r3
    a2f2:	bl	b260 <__aeabi_ddiv>
    a2f6:	cmp	r4, #2
    a2f8:	strd	r0, r1, [sp, #24]
    a2fc:	bne.w	a1e2 <powf+0x152>
    a300:	bl	b9cc <__errno>
    a304:	movs	r3, #33	; 0x21
    a306:	str	r3, [r0, #0]
    a308:	b.n	a1ee <powf+0x15e>
    a30a:	ldr	r1, [pc, #108]	; (a378 <powf+0x2e8>)
    a30c:	movs	r0, #0
    a30e:	cmp	r3, #2
    a310:	strd	r0, r1, [sp, #24]
    a314:	beq.n	a300 <powf+0x270>
    a316:	b.n	a1e2 <powf+0x152>
    a318:	ldr	r1, [pc, #96]	; (a37c <powf+0x2ec>)
    a31a:	vcmpe.f32	s18, #0.0
    a31e:	movs	r0, #0
    a320:	vmrs	APSR_nzcv, fpscr
    a324:	strd	r0, r1, [sp, #24]
    a328:	bpl.w	a196 <powf+0x106>
    a32c:	vmov.f32	s15, #96	; 0x3f000000  0.5
    a330:	vmul.f32	s15, s16, s15
    a334:	vmov	r0, s15
    a338:	bl	af64 <__aeabi_f2d>
    a33c:	mov	r6, r0
    a33e:	mov	r7, r1
    a340:	vmov	d0, r6, r7
    a344:	bl	aa5c <rint>
    a348:	mov	r0, r6
    a34a:	vmov	r2, r3, d0
    a34e:	mov	r1, r7
    a350:	bl	b4dc <__aeabi_dcmpeq>
    a354:	cbnz	r0, a35e <powf+0x2ce>
    a356:	ldr	r3, [pc, #32]	; (a378 <powf+0x2e8>)
    a358:	movs	r2, #0
    a35a:	strd	r2, r3, [sp, #24]
    a35e:	ldrsb.w	r3, [r5]
    a362:	b.n	a196 <powf+0x106>
    a364:	.word	0x2000822e
    a368:	.word	0x0009e1c8
    a36c:	.word	0x3ff00000
    a370:	.word	0x47efffff
    a374:	.word	0xc7efffff
    a378:	.word	0xfff00000
    a37c:	.word	0x7ff00000
    a380:	ldr	r3, [pc, #48]	; (a3b4 <powf+0x324>)
    a382:	str	r4, [sp, #32]
    a384:	movs	r2, #1
    a386:	vmov	r0, s18
    a38a:	stmia.w	sp, {r2, r3}
    a38e:	bl	af64 <__aeabi_f2d>
    a392:	strd	r0, r1, [sp, #8]
    a396:	vmov	r0, s16
    a39a:	bl	af64 <__aeabi_f2d>
    a39e:	ldrsb.w	r4, [r5]
    a3a2:	strd	r0, r1, [sp, #16]
    a3a6:	movs	r2, #0
    a3a8:	movs	r3, #0
    a3aa:	cmp	r4, #0
    a3ac:	bne.n	a2ee <powf+0x25e>
    a3ae:	strd	r2, r3, [sp, #24]
    a3b2:	b.n	a1e2 <powf+0x152>
    a3b4:	.word	0x0009e1c8

0000a3b8 <__ieee754_powf>:
    a3b8:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    a3bc:	vpush	{d8}
    a3c0:	sub	sp, #8
    a3c2:	vstr	s1, [sp]
    a3c6:	ldr	r4, [sp, #0]
    a3c8:	vstr	s0, [sp, #4]
    a3cc:	bics.w	r6, r4, #2147483648	; 0x80000000
    a3d0:	beq.n	a3fc <__ieee754_powf+0x44>
    a3d2:	ldr.w	r8, [sp, #4]
    a3d6:	bic.w	r7, r8, #2147483648	; 0x80000000
    a3da:	cmp.w	r7, #2139095040	; 0x7f800000
    a3de:	ble.n	a3f0 <__ieee754_powf+0x38>
    a3e0:	ldr	r0, [pc, #352]	; (a544 <__ieee754_powf+0x18c>)
    a3e2:	add	sp, #8
    a3e4:	vpop	{d8}
    a3e8:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    a3ec:	b.w	aba8 <nanf>
    a3f0:	cmp.w	r6, #2139095040	; 0x7f800000
    a3f4:	ble.n	a40a <__ieee754_powf+0x52>
    a3f6:	cmp.w	r7, #1065353216	; 0x3f800000
    a3fa:	bne.n	a3e0 <__ieee754_powf+0x28>
    a3fc:	vmov.f32	s0, #112	; 0x3f800000  1.0
    a400:	add	sp, #8
    a402:	vpop	{d8}
    a406:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    a40a:	cmp.w	r8, #0
    a40e:	blt.n	a4ac <__ieee754_powf+0xf4>
    a410:	mov.w	sl, #0
    a414:	cmp.w	r6, #2139095040	; 0x7f800000
    a418:	beq.n	a49a <__ieee754_powf+0xe2>
    a41a:	cmp.w	r6, #1065353216	; 0x3f800000
    a41e:	beq.n	a4d2 <__ieee754_powf+0x11a>
    a420:	cmp.w	r4, #1073741824	; 0x40000000
    a424:	beq.n	a504 <__ieee754_powf+0x14c>
    a426:	ldr	r5, [sp, #4]
    a428:	ldr.w	r9, [sp]
    a42c:	cmp.w	r4, #1056964608	; 0x3f000000
    a430:	vmov	s0, r5
    a434:	beq.n	a470 <__ieee754_powf+0xb8>
    a436:	bl	ab84 <fabsf>
    a43a:	cmp.w	r7, #2139095040	; 0x7f800000
    a43e:	beq.n	a4dc <__ieee754_powf+0x124>
    a440:	cmp	r7, #0
    a442:	beq.n	a4dc <__ieee754_powf+0x124>
    a444:	cmp.w	r7, #1065353216	; 0x3f800000
    a448:	beq.n	a4dc <__ieee754_powf+0x124>
    a44a:	mov.w	r3, r8, lsr #31
    a44e:	subs	r3, #1
    a450:	orrs.w	r2, sl, r3
    a454:	beq.n	a534 <__ieee754_powf+0x17c>
    a456:	cmp.w	r6, #1291845632	; 0x4d000000
    a45a:	ble.n	a554 <__ieee754_powf+0x19c>
    a45c:	ldr	r2, [pc, #232]	; (a548 <__ieee754_powf+0x190>)
    a45e:	cmp	r7, r2
    a460:	bgt.w	a806 <__ieee754_powf+0x44e>
    a464:	cmp	r4, #0
    a466:	blt.w	a812 <__ieee754_powf+0x45a>
    a46a:	vldr	s0, [pc, #224]	; a54c <__ieee754_powf+0x194>
    a46e:	b.n	a400 <__ieee754_powf+0x48>
    a470:	cmp.w	r8, #0
    a474:	bge.n	a50e <__ieee754_powf+0x156>
    a476:	bl	ab84 <fabsf>
    a47a:	cmp.w	r7, #2139095040	; 0x7f800000
    a47e:	beq.n	a484 <__ieee754_powf+0xcc>
    a480:	cmp	r7, #0
    a482:	bne.n	a444 <__ieee754_powf+0x8c>
    a484:	sub.w	r7, r7, #1065353216	; 0x3f800000
    a488:	orrs.w	r3, r7, sl
    a48c:	beq.n	a52a <__ieee754_powf+0x172>
    a48e:	cmp.w	sl, #1
    a492:	bne.n	a400 <__ieee754_powf+0x48>
    a494:	vneg.f32	s0, s0
    a498:	b.n	a400 <__ieee754_powf+0x48>
    a49a:	cmp.w	r7, #1065353216	; 0x3f800000
    a49e:	beq.n	a3fc <__ieee754_powf+0x44>
    a4a0:	ble.n	a4f6 <__ieee754_powf+0x13e>
    a4a2:	cmp	r4, #0
    a4a4:	blt.n	a46a <__ieee754_powf+0xb2>
    a4a6:	vldr	s0, [sp]
    a4aa:	b.n	a400 <__ieee754_powf+0x48>
    a4ac:	cmp.w	r6, #1266679808	; 0x4b800000
    a4b0:	bge.n	a4f0 <__ieee754_powf+0x138>
    a4b2:	cmp.w	r6, #1065353216	; 0x3f800000
    a4b6:	blt.n	a4cc <__ieee754_powf+0x114>
    a4b8:	asrs	r3, r6, #23
    a4ba:	rsb	r3, r3, #150	; 0x96
    a4be:	asr.w	r2, r6, r3
    a4c2:	lsl.w	r3, r2, r3
    a4c6:	cmp	r6, r3
    a4c8:	beq.w	a7fc <__ieee754_powf+0x444>
    a4cc:	mov.w	sl, #0
    a4d0:	b.n	a41a <__ieee754_powf+0x62>
    a4d2:	cmp	r4, #0
    a4d4:	blt.n	a51c <__ieee754_powf+0x164>
    a4d6:	vldr	s0, [sp, #4]
    a4da:	b.n	a400 <__ieee754_powf+0x48>
    a4dc:	cmp	r4, #0
    a4de:	itt	lt
    a4e0:	vmovlt.f32	s15, #112	; 0x3f800000  1.0
    a4e4:	vdivlt.f32	s0, s15, s0
    a4e8:	cmp.w	r8, #0
    a4ec:	bge.n	a400 <__ieee754_powf+0x48>
    a4ee:	b.n	a484 <__ieee754_powf+0xcc>
    a4f0:	mov.w	sl, #2
    a4f4:	b.n	a414 <__ieee754_powf+0x5c>
    a4f6:	cmp	r4, #0
    a4f8:	bge.n	a46a <__ieee754_powf+0xb2>
    a4fa:	vldr	s15, [sp]
    a4fe:	vneg.f32	s0, s15
    a502:	b.n	a400 <__ieee754_powf+0x48>
    a504:	vldr	s15, [sp, #4]
    a508:	vmul.f32	s0, s15, s15
    a50c:	b.n	a400 <__ieee754_powf+0x48>
    a50e:	add	sp, #8
    a510:	vpop	{d8}
    a514:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    a518:	b.w	a9b4 <__ieee754_sqrtf>
    a51c:	vldr	s14, [sp, #4]
    a520:	vmov.f32	s15, #112	; 0x3f800000  1.0
    a524:	vdiv.f32	s0, s15, s14
    a528:	b.n	a400 <__ieee754_powf+0x48>
    a52a:	vsub.f32	s15, s0, s0
    a52e:	vdiv.f32	s0, s15, s15
    a532:	b.n	a400 <__ieee754_powf+0x48>
    a534:	vmov	s15, r5
    a538:	vsub.f32	s15, s15, s15
    a53c:	vdiv.f32	s0, s15, s15
    a540:	b.n	a400 <__ieee754_powf+0x48>
    a542:	nop
    a544:	.word	0x0009d9bc
    a548:	.word	0x3f7ffff7
    a54c:	.word	0x00000000
    a550:	.word	0x4b800000
    a554:	cmp.w	r7, #8388608	; 0x800000
    a558:	bge.w	a82c <__ieee754_powf+0x474>
    a55c:	vldr	s15, [pc, #-16]	; a550 <__ieee754_powf+0x198>
    a560:	vmul.f32	s15, s0, s15
    a564:	mvn.w	r2, #23
    a568:	vmov	r7, s15
    a56c:	ldr	r0, [pc, #968]	; (a938 <__ieee754_powf+0x580>)
    a56e:	asrs	r1, r7, #23
    a570:	ubfx	r7, r7, #0, #23
    a574:	subs	r1, #127	; 0x7f
    a576:	cmp	r7, r0
    a578:	add	r2, r1
    a57a:	orr.w	r1, r7, #1065353216	; 0x3f800000
    a57e:	ble.w	a81c <__ieee754_powf+0x464>
    a582:	ldr	r0, [pc, #952]	; (a93c <__ieee754_powf+0x584>)
    a584:	cmp	r7, r0
    a586:	ble.w	a8c0 <__ieee754_powf+0x508>
    a58a:	vldr	s8, [pc, #948]	; a940 <__ieee754_powf+0x588>
    a58e:	adds	r2, #1
    a590:	sub.w	r1, r1, #8388608	; 0x800000
    a594:	vmov.f32	s6, s8
    a598:	movs	r0, #0
    a59a:	vmov.f32	s12, #112	; 0x3f800000  1.0
    a59e:	vmov	s14, r1
    a5a2:	vadd.f32	s15, s14, s12
    a5a6:	vmov.f32	s13, #112	; 0x3f800000  1.0
    a5aa:	vdiv.f32	s11, s13, s15
    a5ae:	asrs	r1, r1, #1
    a5b0:	orr.w	r1, r1, #536870912	; 0x20000000
    a5b4:	add.w	r1, r1, #262144	; 0x40000
    a5b8:	add	r1, r0
    a5ba:	vsub.f32	s13, s14, s12
    a5be:	vmov	s4, r1
    a5c2:	vmul.f32	s7, s13, s11
    a5c6:	vsub.f32	s9, s4, s12
    a5ca:	vldr	s17, [pc, #888]	; a944 <__ieee754_powf+0x58c>
    a5ce:	vldr	s16, [pc, #888]	; a948 <__ieee754_powf+0x590>
    a5d2:	vldr	s3, [pc, #888]	; a94c <__ieee754_powf+0x594>
    a5d6:	vldr	s0, [pc, #888]	; a950 <__ieee754_powf+0x598>
    a5da:	vldr	s1, [pc, #888]	; a954 <__ieee754_powf+0x59c>
    a5de:	vldr	s2, [pc, #888]	; a958 <__ieee754_powf+0x5a0>
    a5e2:	vldr	s15, [pc, #888]	; a95c <__ieee754_powf+0x5a4>
    a5e6:	vldr	s5, [pc, #888]	; a960 <__ieee754_powf+0x5a8>
    a5ea:	vmul.f32	s12, s7, s7
    a5ee:	vmov	r1, s7
    a5f2:	vfma.f32	s16, s12, s17
    a5f6:	bic.w	r1, r1, #4080	; 0xff0
    a5fa:	bic.w	r1, r1, #15
    a5fe:	vsub.f32	s14, s14, s9
    a602:	vmov.f32	s9, s3
    a606:	vmov	s10, r1
    a60a:	vfma.f32	s9, s12, s16
    a60e:	vneg.f32	s3, s10
    a612:	vfma.f32	s13, s3, s4
    a616:	vfma.f32	s0, s12, s9
    a61a:	vfma.f32	s13, s3, s14
    a61e:	vfma.f32	s1, s12, s0
    a622:	vmul.f32	s11, s13, s11
    a626:	vmov.f32	s13, s2
    a62a:	vfma.f32	s13, s12, s1
    a62e:	vadd.f32	s14, s7, s10
    a632:	vmul.f32	s12, s12, s12
    a636:	vmul.f32	s14, s14, s11
    a63a:	vmov.f32	s9, #8	; 0x40400000  3.0
    a63e:	vfma.f32	s14, s12, s13
    a642:	vmov.f32	s13, s9
    a646:	vfma.f32	s13, s10, s10
    a64a:	vldr	s4, [pc, #792]	; a964 <__ieee754_powf+0x5ac>
    a64e:	vadd.f32	s12, s13, s14
    a652:	vmov	s13, r2
    a656:	vmov	r2, s12
    a65a:	bic.w	r2, r2, #4080	; 0xff0
    a65e:	bic.w	r2, r2, #15
    a662:	vmov	s12, r2
    a666:	vsub.f32	s9, s12, s9
    a66a:	vcvt.f32.s32	s13, s13
    a66e:	vfma.f32	s9, s3, s10
    a672:	vsub.f32	s14, s14, s9
    a676:	vmul.f32	s14, s14, s7
    a67a:	vfma.f32	s14, s11, s12
    a67e:	vmov.f32	s11, s14
    a682:	vfma.f32	s11, s10, s12
    a686:	vmov	r2, s11
    a68a:	bic.w	r2, r2, #4080	; 0xff0
    a68e:	bic.w	r2, r2, #15
    a692:	vmov	s10, r2
    a696:	vfma.f32	s10, s3, s12
    a69a:	vmov	s11, r2
    a69e:	vsub.f32	s14, s14, s10
    a6a2:	vmul.f32	s15, s14, s15
    a6a6:	vfma.f32	s15, s11, s5
    a6aa:	vadd.f32	s15, s15, s6
    a6ae:	vmov.f32	s14, s15
    a6b2:	vfma.f32	s14, s11, s4
    a6b6:	vadd.f32	s14, s14, s8
    a6ba:	vadd.f32	s14, s14, s13
    a6be:	vmov	r2, s14
    a6c2:	bic.w	r2, r2, #4080	; 0xff0
    a6c6:	bic.w	r2, r2, #15
    a6ca:	vmov	s14, r2
    a6ce:	vsub.f32	s13, s14, s13
    a6d2:	vsub.f32	s14, s13, s8
    a6d6:	vfms.f32	s14, s11, s4
    a6da:	vsub.f32	s14, s15, s14
    a6de:	bic.w	r4, r4, #4080	; 0xff0
    a6e2:	bic.w	r4, r4, #15
    a6e6:	vmov	s15, r9
    a6ea:	vmov	s13, r4
    a6ee:	vmul.f32	s14, s14, s15
    a6f2:	vmov	s12, r4
    a6f6:	vsub.f32	s15, s15, s13
    a6fa:	vmov	s13, r2
    a6fe:	vmul.f32	s13, s13, s12
    a702:	vmov	s12, r2
    a706:	vfma.f32	s14, s12, s15
    a70a:	add.w	sl, sl, #4294967295
    a70e:	orrs.w	r3, sl, r3
    a712:	vmov.f32	s0, #240	; 0xbf800000 -1.0
    a716:	vadd.f32	s12, s14, s13
    a71a:	vmov.f32	s15, #112	; 0x3f800000  1.0
    a71e:	vmov	r2, s12
    a722:	ite	ne
    a724:	vmovne.f32	s16, s15
    a728:	vmoveq.f32	s16, s0
    a72c:	cmp	r2, #0
    a72e:	bic.w	r3, r2, #2147483648	; 0x80000000
    a732:	ble.w	a89a <__ieee754_powf+0x4e2>
    a736:	cmp.w	r3, #1124073472	; 0x43000000
    a73a:	bgt.w	a846 <__ieee754_powf+0x48e>
    a73e:	beq.n	a830 <__ieee754_powf+0x478>
    a740:	cmp.w	r3, #1056964608	; 0x3f000000
    a744:	bgt.w	a854 <__ieee754_powf+0x49c>
    a748:	movs	r3, #0
    a74a:	mov	r0, r3
    a74c:	bic.w	r2, r2, #4080	; 0xff0
    a750:	bic.w	r2, r2, #15
    a754:	vmov	s11, r2
    a758:	vldr	s12, [pc, #524]	; a968 <__ieee754_powf+0x5b0>
    a75c:	vldr	s15, [pc, #524]	; a96c <__ieee754_powf+0x5b4>
    a760:	vldr	s5, [pc, #524]	; a970 <__ieee754_powf+0x5b8>
    a764:	vldr	s6, [pc, #524]	; a974 <__ieee754_powf+0x5bc>
    a768:	vldr	s4, [pc, #524]	; a978 <__ieee754_powf+0x5c0>
    a76c:	vldr	s7, [pc, #524]	; a97c <__ieee754_powf+0x5c4>
    a770:	vldr	s8, [pc, #524]	; a980 <__ieee754_powf+0x5c8>
    a774:	vldr	s9, [pc, #524]	; a984 <__ieee754_powf+0x5cc>
    a778:	vsub.f32	s13, s11, s13
    a77c:	vmov.f32	s10, #112	; 0x3f800000  1.0
    a780:	vsub.f32	s14, s14, s13
    a784:	vmul.f32	s13, s11, s12
    a788:	vmov.f32	s12, #0	; 0x40000000  2.0
    a78c:	vfma.f32	s13, s14, s15
    a790:	vmov.f32	s14, s13
    a794:	vfma.f32	s13, s11, s5
    a798:	vmul.f32	s15, s13, s13
    a79c:	vmov.f32	s3, s13
    a7a0:	vfms.f32	s3, s11, s5
    a7a4:	vmov.f32	s11, s6
    a7a8:	vfma.f32	s11, s15, s4
    a7ac:	vsub.f32	s14, s14, s3
    a7b0:	vfma.f32	s7, s15, s11
    a7b4:	vfma.f32	s14, s13, s14
    a7b8:	vfma.f32	s8, s15, s7
    a7bc:	vfma.f32	s9, s15, s8
    a7c0:	vmov.f32	s11, s9
    a7c4:	vmov.f32	s9, s13
    a7c8:	vfms.f32	s9, s15, s11
    a7cc:	vmul.f32	s11, s13, s9
    a7d0:	vsub.f32	s12, s9, s12
    a7d4:	vdiv.f32	s15, s11, s12
    a7d8:	vsub.f32	s14, s15, s14
    a7dc:	vsub.f32	s13, s14, s13
    a7e0:	vsub.f32	s0, s10, s13
    a7e4:	vmov	r2, s0
    a7e8:	add	r3, r2
    a7ea:	cmp.w	r3, #8388608	; 0x800000
    a7ee:	blt.w	a930 <__ieee754_powf+0x578>
    a7f2:	vmov	s0, r3
    a7f6:	vmul.f32	s0, s0, s16
    a7fa:	b.n	a400 <__ieee754_powf+0x48>
    a7fc:	and.w	r2, r2, #1
    a800:	rsb	sl, r2, #2
    a804:	b.n	a41a <__ieee754_powf+0x62>
    a806:	ldr	r2, [pc, #384]	; (a988 <__ieee754_powf+0x5d0>)
    a808:	cmp	r7, r2
    a80a:	ble.n	a8d2 <__ieee754_powf+0x51a>
    a80c:	cmp	r4, #0
    a80e:	ble.w	a46a <__ieee754_powf+0xb2>
    a812:	vldr	s0, [pc, #376]	; a98c <__ieee754_powf+0x5d4>
    a816:	vmul.f32	s0, s0, s0
    a81a:	b.n	a400 <__ieee754_powf+0x48>
    a81c:	vldr	s8, [pc, #288]	; a940 <__ieee754_powf+0x588>
    a820:	movs	r0, #0
    a822:	vmov.f32	s6, s8
    a826:	vmov.f32	s12, #112	; 0x3f800000  1.0
    a82a:	b.n	a59e <__ieee754_powf+0x1e6>
    a82c:	movs	r2, #0
    a82e:	b.n	a56c <__ieee754_powf+0x1b4>
    a830:	vldr	s15, [pc, #348]	; a990 <__ieee754_powf+0x5d8>
    a834:	vsub.f32	s12, s12, s13
    a838:	vadd.f32	s15, s14, s15
    a83c:	vcmpe.f32	s15, s12
    a840:	vmrs	APSR_nzcv, fpscr
    a844:	ble.n	a854 <__ieee754_powf+0x49c>
    a846:	vldr	s0, [pc, #324]	; a98c <__ieee754_powf+0x5d4>
    a84a:	vmul.f32	s15, s16, s0
    a84e:	vmul.f32	s0, s15, s0
    a852:	b.n	a400 <__ieee754_powf+0x48>
    a854:	asrs	r3, r3, #23
    a856:	mov.w	r1, #8388608	; 0x800000
    a85a:	subs	r3, #126	; 0x7e
    a85c:	asr.w	r3, r1, r3
    a860:	adds	r1, r3, r2
    a862:	ubfx	r0, r1, #23, #8
    a866:	ldr	r4, [pc, #300]	; (a994 <__ieee754_powf+0x5dc>)
    a868:	subs	r0, #127	; 0x7f
    a86a:	asrs	r4, r0
    a86c:	ubfx	r3, r1, #0, #23
    a870:	bic.w	r1, r1, r4
    a874:	vmov	s15, r1
    a878:	vsub.f32	s13, s13, s15
    a87c:	orr.w	r3, r3, #8388608	; 0x800000
    a880:	rsb	r0, r0, #23
    a884:	asr.w	r0, r3, r0
    a888:	cmp	r2, #0
    a88a:	vadd.f32	s15, s14, s13
    a88e:	it	lt
    a890:	neglt	r0, r0
    a892:	lsls	r3, r0, #23
    a894:	vmov	r2, s15
    a898:	b.n	a74c <__ieee754_powf+0x394>
    a89a:	ldr	r1, [pc, #252]	; (a998 <__ieee754_powf+0x5e0>)
    a89c:	cmp	r3, r1
    a89e:	bgt.n	a8b2 <__ieee754_powf+0x4fa>
    a8a0:	bne.w	a740 <__ieee754_powf+0x388>
    a8a4:	vsub.f32	s12, s12, s13
    a8a8:	vcmpe.f32	s14, s12
    a8ac:	vmrs	APSR_nzcv, fpscr
    a8b0:	bhi.n	a854 <__ieee754_powf+0x49c>
    a8b2:	vldr	s0, [pc, #232]	; a99c <__ieee754_powf+0x5e4>
    a8b6:	vmul.f32	s15, s16, s0
    a8ba:	vmul.f32	s0, s15, s0
    a8be:	b.n	a400 <__ieee754_powf+0x48>
    a8c0:	vldr	s8, [pc, #220]	; a9a0 <__ieee754_powf+0x5e8>
    a8c4:	vldr	s6, [pc, #220]	; a9a4 <__ieee754_powf+0x5ec>
    a8c8:	mov.w	r0, #2097152	; 0x200000
    a8cc:	vmov.f32	s12, #120	; 0x3fc00000  1.5
    a8d0:	b.n	a59e <__ieee754_powf+0x1e6>
    a8d2:	vmov.f32	s15, #112	; 0x3f800000  1.0
    a8d6:	vsub.f32	s0, s0, s15
    a8da:	vldr	s12, [pc, #116]	; a950 <__ieee754_powf+0x598>
    a8de:	vldr	s15, [pc, #200]	; a9a8 <__ieee754_powf+0x5f0>
    a8e2:	vldr	s10, [pc, #200]	; a9ac <__ieee754_powf+0x5f4>
    a8e6:	vldr	s11, [pc, #200]	; a9b0 <__ieee754_powf+0x5f8>
    a8ea:	vneg.f32	s13, s0
    a8ee:	vmov.f32	s14, #80	; 0x3e800000  0.250
    a8f2:	vfma.f32	s12, s13, s14
    a8f6:	vmov.f32	s14, #96	; 0x3f000000  0.5
    a8fa:	vfma.f32	s14, s13, s12
    a8fe:	vmul.f32	s12, s0, s0
    a902:	vmul.f32	s14, s14, s12
    a906:	vnmul.f32	s15, s15, s14
    a90a:	vfma.f32	s15, s0, s10
    a90e:	vmov.f32	s14, s15
    a912:	vfma.f32	s14, s0, s11
    a916:	vmov	r2, s14
    a91a:	bic.w	r2, r2, #4080	; 0xff0
    a91e:	bic.w	r2, r2, #15
    a922:	vmov	s14, r2
    a926:	vfma.f32	s14, s13, s11
    a92a:	vsub.f32	s14, s15, s14
    a92e:	b.n	a6de <__ieee754_powf+0x326>
    a930:	bl	abb4 <scalbnf>
    a934:	b.n	a7f6 <__ieee754_powf+0x43e>
    a936:	nop
    a938:	.word	0x001cc471
    a93c:	.word	0x005db3d6
    a940:	.word	0x00000000
    a944:	.word	0x3e53f142
    a948:	.word	0x3e6c3255
    a94c:	.word	0x3e8ba305
    a950:	.word	0x3eaaaaab
    a954:	.word	0x3edb6db7
    a958:	.word	0x3f19999a
    a95c:	.word	0x3f76384f
    a960:	.word	0x369dc3a0
    a964:	.word	0x3f763800
    a968:	.word	0x35bfbe8c
    a96c:	.word	0x3f317218
    a970:	.word	0x3f317200
    a974:	.word	0xb5ddea0e
    a978:	.word	0x3331bb4c
    a97c:	.word	0x388ab355
    a980:	.word	0xbb360b61
    a984:	.word	0x3e2aaaab
    a988:	.word	0x3f800007
    a98c:	.word	0x7149f2ca
    a990:	.word	0x3338aa3c
    a994:	.word	0x007fffff
    a998:	.word	0x43160000
    a99c:	.word	0x0da24260
    a9a0:	.word	0x3f15c000
    a9a4:	.word	0x35d1cfdc
    a9a8:	.word	0x3fb8aa3b
    a9ac:	.word	0x36eca570
    a9b0:	.word	0x3fb8aa00

0000a9b4 <__ieee754_sqrtf>:
    a9b4:	vmov	r3, s0
    a9b8:	bic.w	r2, r3, #2147483648	; 0x80000000
    a9bc:	cmp.w	r2, #2139095040	; 0x7f800000
    a9c0:	push	{r4, r5, r6}
    a9c2:	bcs.n	aa26 <__ieee754_sqrtf+0x72>
    a9c4:	cbz	r2, aa22 <__ieee754_sqrtf+0x6e>
    a9c6:	cmp	r3, #0
    a9c8:	blt.n	aa46 <__ieee754_sqrtf+0x92>
    a9ca:	cmp.w	r2, #8388608	; 0x800000
    a9ce:	mov.w	r0, r3, asr #23
    a9d2:	bcc.n	aa2e <__ieee754_sqrtf+0x7a>
    a9d4:	sub.w	r2, r0, #127	; 0x7f
    a9d8:	ubfx	r3, r3, #0, #23
    a9dc:	lsls	r1, r2, #31
    a9de:	orr.w	r3, r3, #8388608	; 0x800000
    a9e2:	it	mi
    a9e4:	lslmi	r3, r3, #1
    a9e6:	movs	r4, #0
    a9e8:	asrs	r6, r2, #1
    a9ea:	lsls	r3, r3, #1
    a9ec:	mov	r5, r4
    a9ee:	movs	r1, #25
    a9f0:	mov.w	r2, #16777216	; 0x1000000
    a9f4:	adds	r0, r5, r2
    a9f6:	cmp	r0, r3
    a9f8:	bgt.n	aa00 <__ieee754_sqrtf+0x4c>
    a9fa:	subs	r3, r3, r0
    a9fc:	adds	r5, r0, r2
    a9fe:	add	r4, r2
    aa00:	subs	r1, #1
    aa02:	mov.w	r3, r3, lsl #1
    aa06:	mov.w	r2, r2, lsr #1
    aa0a:	bne.n	a9f4 <__ieee754_sqrtf+0x40>
    aa0c:	cbz	r3, aa14 <__ieee754_sqrtf+0x60>
    aa0e:	and.w	r3, r4, #1
    aa12:	add	r4, r3
    aa14:	asrs	r4, r4, #1
    aa16:	add.w	r4, r4, #1056964608	; 0x3f000000
    aa1a:	add.w	r3, r4, r6, lsl #23
    aa1e:	vmov	s0, r3
    aa22:	pop	{r4, r5, r6}
    aa24:	bx	lr
    aa26:	vfma.f32	s0, s0, s0
    aa2a:	pop	{r4, r5, r6}
    aa2c:	bx	lr
    aa2e:	ands.w	r2, r3, #8388608	; 0x800000
    aa32:	beq.n	aa38 <__ieee754_sqrtf+0x84>
    aa34:	b.n	aa50 <__ieee754_sqrtf+0x9c>
    aa36:	mov	r2, r1
    aa38:	lsls	r3, r3, #1
    aa3a:	lsls	r4, r3, #8
    aa3c:	add.w	r1, r2, #1
    aa40:	bpl.n	aa36 <__ieee754_sqrtf+0x82>
    aa42:	subs	r0, r0, r2
    aa44:	b.n	a9d4 <__ieee754_sqrtf+0x20>
    aa46:	vsub.f32	s15, s0, s0
    aa4a:	vdiv.f32	s0, s15, s15
    aa4e:	b.n	aa22 <__ieee754_sqrtf+0x6e>
    aa50:	mov.w	r2, #4294967295
    aa54:	b.n	aa42 <__ieee754_sqrtf+0x8e>
    aa56:	nop

0000aa58 <matherr>:
    aa58:	movs	r0, #0
    aa5a:	bx	lr

0000aa5c <rint>:
    aa5c:	push	{r4, r5, r6, r7, lr}
    aa5e:	vmov	r2, r3, d0
    aa62:	ubfx	r6, r3, #20, #11
    aa66:	subw	r0, r6, #1023	; 0x3ff
    aa6a:	cmp	r0, #19
    aa6c:	sub	sp, #12
    aa6e:	mov	r1, r3
    aa70:	mov.w	r4, r3, lsr #31
    aa74:	vmov	r5, s0
    aa78:	bgt.n	aada <rint+0x7e>
    aa7a:	cmp	r0, #0
    aa7c:	blt.n	ab12 <rint+0xb6>
    aa7e:	ldr	r6, [pc, #252]	; (ab7c <rint+0x120>)
    aa80:	asrs	r6, r0
    aa82:	and.w	r7, r3, r6
    aa86:	orrs	r7, r2
    aa88:	beq.n	aae4 <rint+0x88>
    aa8a:	lsrs	r6, r6, #1
    aa8c:	ands	r3, r6
    aa8e:	orrs	r5, r3
    aa90:	beq.n	aaac <rint+0x50>
    aa92:	mov.w	r3, #262144	; 0x40000
    aa96:	cmp	r0, #19
    aa98:	bic.w	r6, r1, r6
    aa9c:	asr.w	r1, r3, r0
    aaa0:	orr.w	r1, r1, r6
    aaa4:	ite	eq
    aaa6:	moveq.w	r5, #2147483648	; 0x80000000
    aaaa:	movne	r5, #0
    aaac:	ldr	r0, [pc, #208]	; (ab80 <rint+0x124>)
    aaae:	add.w	r4, r0, r4, lsl #3
    aab2:	mov	r2, r5
    aab4:	ldrd	r4, r5, [r4]
    aab8:	mov	r0, r2
    aaba:	mov	r3, r5
    aabc:	mov	r2, r4
    aabe:	bl	aca8 <__adddf3>
    aac2:	strd	r0, r1, [sp]
    aac6:	mov	r2, r4
    aac8:	mov	r3, r5
    aaca:	ldrd	r0, r1, [sp]
    aace:	bl	aca4 <__aeabi_dsub>
    aad2:	vmov	d0, r0, r1
    aad6:	add	sp, #12
    aad8:	pop	{r4, r5, r6, r7, pc}
    aada:	cmp	r0, #51	; 0x33
    aadc:	ble.n	aaec <rint+0x90>
    aade:	cmp.w	r0, #1024	; 0x400
    aae2:	beq.n	ab6a <rint+0x10e>
    aae4:	vmov	d0, r2, r3
    aae8:	add	sp, #12
    aaea:	pop	{r4, r5, r6, r7, pc}
    aaec:	subw	r6, r6, #1043	; 0x413
    aaf0:	mov.w	r0, #4294967295
    aaf4:	lsrs	r0, r6
    aaf6:	tst	r2, r0
    aaf8:	beq.n	aae4 <rint+0x88>
    aafa:	lsrs	r0, r0, #1
    aafc:	tst	r2, r0
    aafe:	beq.n	aaac <rint+0x50>
    ab00:	mov.w	r3, #1073741824	; 0x40000000
    ab04:	bic.w	r0, r5, r0
    ab08:	asr.w	r6, r3, r6
    ab0c:	orr.w	r5, r6, r0
    ab10:	b.n	aaac <rint+0x50>
    ab12:	bic.w	r0, r3, #2147483648	; 0x80000000
    ab16:	orrs	r0, r2
    ab18:	vmov	r7, s0
    ab1c:	beq.n	aae4 <rint+0x88>
    ab1e:	ubfx	r0, r3, #0, #20
    ab22:	orrs	r7, r0
    ab24:	negs	r0, r7
    ab26:	orrs	r7, r0
    ab28:	ldr	r0, [pc, #84]	; (ab80 <rint+0x124>)
    ab2a:	lsrs	r1, r3, #17
    ab2c:	lsrs	r7, r7, #12
    ab2e:	lsls	r1, r1, #17
    ab30:	and.w	r7, r7, #524288	; 0x80000
    ab34:	add.w	r0, r0, r4, lsl #3
    ab38:	orr.w	r3, r7, r1
    ab3c:	ldrd	r6, r7, [r0]
    ab40:	mov	r1, r3
    ab42:	mov	r0, r2
    ab44:	mov	r3, r7
    ab46:	mov	r2, r6
    ab48:	bl	aca8 <__adddf3>
    ab4c:	strd	r0, r1, [sp]
    ab50:	mov	r3, r7
    ab52:	mov	r2, r6
    ab54:	ldrd	r0, r1, [sp]
    ab58:	bl	aca4 <__aeabi_dsub>
    ab5c:	bic.w	r3, r1, #2147483648	; 0x80000000
    ab60:	orr.w	r1, r3, r4, lsl #31
    ab64:	vmov	d0, r0, r1
    ab68:	b.n	aae8 <rint+0x8c>
    ab6a:	vmov	r0, s0
    ab6e:	mov	r1, r3
    ab70:	bl	aca8 <__adddf3>
    ab74:	vmov	d0, r0, r1
    ab78:	b.n	aae8 <rint+0x8c>
    ab7a:	nop
    ab7c:	.word	0x000fffff
    ab80:	.word	0x0009e1d0

0000ab84 <fabsf>:
    ab84:	vmov	r3, s0
    ab88:	bic.w	r3, r3, #2147483648	; 0x80000000
    ab8c:	vmov	s0, r3
    ab90:	bx	lr
    ab92:	nop

0000ab94 <finitef>:
    ab94:	vmov	r3, s0
    ab98:	bic.w	r0, r3, #2147483648	; 0x80000000
    ab9c:	cmp.w	r0, #2139095040	; 0x7f800000
    aba0:	ite	ge
    aba2:	movge	r0, #0
    aba4:	movlt	r0, #1
    aba6:	bx	lr

0000aba8 <nanf>:
    aba8:	vldr	s0, [pc, #4]	; abb0 <nanf+0x8>
    abac:	bx	lr
    abae:	nop
    abb0:	.word	0x7fc00000

0000abb4 <scalbnf>:
    abb4:	push	{r3, lr}
    abb6:	vmov	r3, s0
    abba:	bics.w	r2, r3, #2147483648	; 0x80000000
    abbe:	vpush	{d8}
    abc2:	beq.n	abe8 <scalbnf+0x34>
    abc4:	cmp.w	r2, #2139095040	; 0x7f800000
    abc8:	bcs.n	abee <scalbnf+0x3a>
    abca:	cmp.w	r2, #8388608	; 0x800000
    abce:	bcc.n	abf8 <scalbnf+0x44>
    abd0:	lsrs	r2, r2, #23
    abd2:	add	r2, r0
    abd4:	cmp	r2, #254	; 0xfe
    abd6:	bgt.n	ac36 <scalbnf+0x82>
    abd8:	cmp	r2, #0
    abda:	ble.n	ac12 <scalbnf+0x5e>
    abdc:	bic.w	r3, r3, #2139095040	; 0x7f800000
    abe0:	orr.w	r3, r3, r2, lsl #23
    abe4:	vmov	s0, r3
    abe8:	vpop	{d8}
    abec:	pop	{r3, pc}
    abee:	vpop	{d8}
    abf2:	vadd.f32	s0, s0, s0
    abf6:	pop	{r3, pc}
    abf8:	ldr	r3, [pc, #116]	; (ac70 <scalbnf+0xbc>)
    abfa:	vldr	s15, [pc, #120]	; ac74 <scalbnf+0xc0>
    abfe:	cmp	r0, r3
    ac00:	vmul.f32	s0, s0, s15
    ac04:	blt.n	ac4c <scalbnf+0x98>
    ac06:	vmov	r3, s0
    ac0a:	ubfx	r2, r3, #23, #8
    ac0e:	subs	r2, #25
    ac10:	b.n	abd2 <scalbnf+0x1e>
    ac12:	cmn.w	r2, #22
    ac16:	bge.n	ac56 <scalbnf+0xa2>
    ac18:	movw	r3, #50000	; 0xc350
    ac1c:	cmp	r0, r3
    ac1e:	bgt.n	ac36 <scalbnf+0x82>
    ac20:	vldr	s16, [pc, #84]	; ac78 <scalbnf+0xc4>
    ac24:	vmov.f32	s1, s0
    ac28:	vmov.f32	s0, s16
    ac2c:	bl	ac84 <copysignf>
    ac30:	vmul.f32	s0, s0, s16
    ac34:	b.n	abe8 <scalbnf+0x34>
    ac36:	vldr	s16, [pc, #68]	; ac7c <scalbnf+0xc8>
    ac3a:	vmov.f32	s1, s0
    ac3e:	vmov.f32	s0, s16
    ac42:	bl	ac84 <copysignf>
    ac46:	vmul.f32	s0, s0, s16
    ac4a:	b.n	abe8 <scalbnf+0x34>
    ac4c:	vldr	s1, [pc, #40]	; ac78 <scalbnf+0xc4>
    ac50:	vmul.f32	s0, s0, s1
    ac54:	b.n	abe8 <scalbnf+0x34>
    ac56:	adds	r2, #25
    ac58:	bic.w	r3, r3, #2139095040	; 0x7f800000
    ac5c:	orr.w	r3, r3, r2, lsl #23
    ac60:	vldr	s15, [pc, #28]	; ac80 <scalbnf+0xcc>
    ac64:	vmov	s0, r3
    ac68:	vmul.f32	s0, s0, s15
    ac6c:	b.n	abe8 <scalbnf+0x34>
    ac6e:	nop
    ac70:	.word	0xffff3cb0
    ac74:	.word	0x4c000000
    ac78:	.word	0x0da24260
    ac7c:	.word	0x7149f2ca
    ac80:	.word	0x33000000

0000ac84 <copysignf>:
    ac84:	vmov	r3, s0
    ac88:	bic.w	r2, r3, #2147483648	; 0x80000000
    ac8c:	vmov	r3, s1
    ac90:	and.w	r3, r3, #2147483648	; 0x80000000
    ac94:	orrs	r3, r2
    ac96:	vmov	s0, r3
    ac9a:	bx	lr

0000ac9c <__aeabi_drsub>:
    ac9c:	eor.w	r1, r1, #2147483648	; 0x80000000
    aca0:	b.n	aca8 <__adddf3>
    aca2:	nop

0000aca4 <__aeabi_dsub>:
    aca4:	eor.w	r3, r3, #2147483648	; 0x80000000

0000aca8 <__adddf3>:
    aca8:	push	{r4, r5, lr}
    acaa:	mov.w	r4, r1, lsl #1
    acae:	mov.w	r5, r3, lsl #1
    acb2:	teq	r4, r5
    acb6:	it	eq
    acb8:	teqeq	r0, r2
    acbc:	itttt	ne
    acbe:	orrsne.w	ip, r4, r0
    acc2:	orrsne.w	ip, r5, r2
    acc6:	mvnsne.w	ip, r4, asr #21
    acca:	mvnsne.w	ip, r5, asr #21
    acce:	beq.w	ae96 <__adddf3+0x1ee>
    acd2:	mov.w	r4, r4, lsr #21
    acd6:	rsbs	r5, r4, r5, lsr #21
    acda:	it	lt
    acdc:	neglt	r5, r5
    acde:	ble.n	acfa <__adddf3+0x52>
    ace0:	add	r4, r5
    ace2:	eor.w	r2, r0, r2
    ace6:	eor.w	r3, r1, r3
    acea:	eor.w	r0, r2, r0
    acee:	eor.w	r1, r3, r1
    acf2:	eor.w	r2, r0, r2
    acf6:	eor.w	r3, r1, r3
    acfa:	cmp	r5, #54	; 0x36
    acfc:	it	hi
    acfe:	pophi	{r4, r5, pc}
    ad00:	tst.w	r1, #2147483648	; 0x80000000
    ad04:	mov.w	r1, r1, lsl #12
    ad08:	mov.w	ip, #1048576	; 0x100000
    ad0c:	orr.w	r1, ip, r1, lsr #12
    ad10:	beq.n	ad18 <__adddf3+0x70>
    ad12:	negs	r0, r0
    ad14:	sbc.w	r1, r1, r1, lsl #1
    ad18:	tst.w	r3, #2147483648	; 0x80000000
    ad1c:	mov.w	r3, r3, lsl #12
    ad20:	orr.w	r3, ip, r3, lsr #12
    ad24:	beq.n	ad2c <__adddf3+0x84>
    ad26:	negs	r2, r2
    ad28:	sbc.w	r3, r3, r3, lsl #1
    ad2c:	teq	r4, r5
    ad30:	beq.w	ae82 <__adddf3+0x1da>
    ad34:	sub.w	r4, r4, #1
    ad38:	rsbs	lr, r5, #32
    ad3c:	blt.n	ad5a <__adddf3+0xb2>
    ad3e:	lsl.w	ip, r2, lr
    ad42:	lsr.w	r2, r2, r5
    ad46:	adds	r0, r0, r2
    ad48:	adc.w	r1, r1, #0
    ad4c:	lsl.w	r2, r3, lr
    ad50:	adds	r0, r0, r2
    ad52:	asr.w	r3, r3, r5
    ad56:	adcs	r1, r3
    ad58:	b.n	ad78 <__adddf3+0xd0>
    ad5a:	sub.w	r5, r5, #32
    ad5e:	add.w	lr, lr, #32
    ad62:	cmp	r2, #1
    ad64:	lsl.w	ip, r3, lr
    ad68:	it	cs
    ad6a:	orrcs.w	ip, ip, #2
    ad6e:	asr.w	r3, r3, r5
    ad72:	adds	r0, r0, r3
    ad74:	adcs.w	r1, r1, r3, asr #31
    ad78:	and.w	r5, r1, #2147483648	; 0x80000000
    ad7c:	bpl.n	ad8e <__adddf3+0xe6>
    ad7e:	mov.w	lr, #0
    ad82:	rsbs	ip, ip, #0
    ad86:	sbcs.w	r0, lr, r0
    ad8a:	sbc.w	r1, lr, r1
    ad8e:	cmp.w	r1, #1048576	; 0x100000
    ad92:	bcc.n	adcc <__adddf3+0x124>
    ad94:	cmp.w	r1, #2097152	; 0x200000
    ad98:	bcc.n	adb4 <__adddf3+0x10c>
    ad9a:	lsrs	r1, r1, #1
    ad9c:	movs.w	r0, r0, rrx
    ada0:	mov.w	ip, ip, rrx
    ada4:	add.w	r4, r4, #1
    ada8:	mov.w	r2, r4, lsl #21
    adac:	cmn.w	r2, #4194304	; 0x400000
    adb0:	bcs.w	aee8 <__adddf3+0x240>
    adb4:	cmp.w	ip, #2147483648	; 0x80000000
    adb8:	it	eq
    adba:	movseq.w	ip, r0, lsr #1
    adbe:	adcs.w	r0, r0, #0
    adc2:	adc.w	r1, r1, r4, lsl #20
    adc6:	orr.w	r1, r1, r5
    adca:	pop	{r4, r5, pc}
    adcc:	movs.w	ip, ip, lsl #1
    add0:	adcs	r0, r0
    add2:	adc.w	r1, r1, r1
    add6:	tst.w	r1, #1048576	; 0x100000
    adda:	sub.w	r4, r4, #1
    adde:	bne.n	adb4 <__adddf3+0x10c>
    ade0:	teq	r1, #0
    ade4:	itt	eq
    ade6:	moveq	r1, r0
    ade8:	moveq	r0, #0
    adea:	clz	r3, r1
    adee:	it	eq
    adf0:	addeq	r3, #32
    adf2:	sub.w	r3, r3, #11
    adf6:	subs.w	r2, r3, #32
    adfa:	bge.n	ae16 <__adddf3+0x16e>
    adfc:	adds	r2, #12
    adfe:	ble.n	ae12 <__adddf3+0x16a>
    ae00:	add.w	ip, r2, #20
    ae04:	rsb	r2, r2, #12
    ae08:	lsl.w	r0, r1, ip
    ae0c:	lsr.w	r1, r1, r2
    ae10:	b.n	ae2c <__adddf3+0x184>
    ae12:	add.w	r2, r2, #20
    ae16:	it	le
    ae18:	rsble	ip, r2, #32
    ae1c:	lsl.w	r1, r1, r2
    ae20:	lsr.w	ip, r0, ip
    ae24:	itt	le
    ae26:	orrle.w	r1, r1, ip
    ae2a:	lslle	r0, r2
    ae2c:	subs	r4, r4, r3
    ae2e:	ittt	ge
    ae30:	addge.w	r1, r1, r4, lsl #20
    ae34:	orrge	r1, r5
    ae36:	popge	{r4, r5, pc}
    ae38:	mvn.w	r4, r4
    ae3c:	subs	r4, #31
    ae3e:	bge.n	ae7a <__adddf3+0x1d2>
    ae40:	adds	r4, #12
    ae42:	bgt.n	ae62 <__adddf3+0x1ba>
    ae44:	add.w	r4, r4, #20
    ae48:	rsb	r2, r4, #32
    ae4c:	lsr.w	r0, r0, r4
    ae50:	lsl.w	r3, r1, r2
    ae54:	orr.w	r0, r0, r3
    ae58:	lsr.w	r3, r1, r4
    ae5c:	orr.w	r1, r5, r3
    ae60:	pop	{r4, r5, pc}
    ae62:	rsb	r4, r4, #12
    ae66:	rsb	r2, r4, #32
    ae6a:	lsr.w	r0, r0, r2
    ae6e:	lsl.w	r3, r1, r4
    ae72:	orr.w	r0, r0, r3
    ae76:	mov	r1, r5
    ae78:	pop	{r4, r5, pc}
    ae7a:	lsr.w	r0, r1, r4
    ae7e:	mov	r1, r5
    ae80:	pop	{r4, r5, pc}
    ae82:	teq	r4, #0
    ae86:	eor.w	r3, r3, #1048576	; 0x100000
    ae8a:	itte	eq
    ae8c:	eoreq.w	r1, r1, #1048576	; 0x100000
    ae90:	addeq	r4, #1
    ae92:	subne	r5, #1
    ae94:	b.n	ad34 <__adddf3+0x8c>
    ae96:	mvns.w	ip, r4, asr #21
    ae9a:	it	ne
    ae9c:	mvnsne.w	ip, r5, asr #21
    aea0:	beq.n	aef6 <__adddf3+0x24e>
    aea2:	teq	r4, r5
    aea6:	it	eq
    aea8:	teqeq	r0, r2
    aeac:	beq.n	aeba <__adddf3+0x212>
    aeae:	orrs.w	ip, r4, r0
    aeb2:	itt	eq
    aeb4:	moveq	r1, r3
    aeb6:	moveq	r0, r2
    aeb8:	pop	{r4, r5, pc}
    aeba:	teq	r1, r3
    aebe:	ittt	ne
    aec0:	movne	r1, #0
    aec2:	movne	r0, #0
    aec4:	popne	{r4, r5, pc}
    aec6:	movs.w	ip, r4, lsr #21
    aeca:	bne.n	aed8 <__adddf3+0x230>
    aecc:	lsls	r0, r0, #1
    aece:	adcs	r1, r1
    aed0:	it	cs
    aed2:	orrcs.w	r1, r1, #2147483648	; 0x80000000
    aed6:	pop	{r4, r5, pc}
    aed8:	adds.w	r4, r4, #4194304	; 0x400000
    aedc:	itt	cc
    aede:	addcc.w	r1, r1, #1048576	; 0x100000
    aee2:	popcc	{r4, r5, pc}
    aee4:	and.w	r5, r1, #2147483648	; 0x80000000
    aee8:	orr.w	r1, r5, #2130706432	; 0x7f000000
    aeec:	orr.w	r1, r1, #15728640	; 0xf00000
    aef0:	mov.w	r0, #0
    aef4:	pop	{r4, r5, pc}
    aef6:	mvns.w	ip, r4, asr #21
    aefa:	itte	ne
    aefc:	movne	r1, r3
    aefe:	movne	r0, r2
    af00:	mvnseq.w	ip, r5, asr #21
    af04:	itt	ne
    af06:	movne	r3, r1
    af08:	movne	r2, r0
    af0a:	orrs.w	r4, r0, r1, lsl #12
    af0e:	itte	eq
    af10:	orrseq.w	r5, r2, r3, lsl #12
    af14:	teqeq	r1, r3
    af18:	orrne.w	r1, r1, #524288	; 0x80000
    af1c:	pop	{r4, r5, pc}
    af1e:	nop

0000af20 <__aeabi_ui2d>:
    af20:	teq	r0, #0
    af24:	itt	eq
    af26:	moveq	r1, #0
    af28:	bxeq	lr
    af2a:	push	{r4, r5, lr}
    af2c:	mov.w	r4, #1024	; 0x400
    af30:	add.w	r4, r4, #50	; 0x32
    af34:	mov.w	r5, #0
    af38:	mov.w	r1, #0
    af3c:	b.n	ade0 <__adddf3+0x138>
    af3e:	nop

0000af40 <__aeabi_i2d>:
    af40:	teq	r0, #0
    af44:	itt	eq
    af46:	moveq	r1, #0
    af48:	bxeq	lr
    af4a:	push	{r4, r5, lr}
    af4c:	mov.w	r4, #1024	; 0x400
    af50:	add.w	r4, r4, #50	; 0x32
    af54:	ands.w	r5, r0, #2147483648	; 0x80000000
    af58:	it	mi
    af5a:	negmi	r0, r0
    af5c:	mov.w	r1, #0
    af60:	b.n	ade0 <__adddf3+0x138>
    af62:	nop

0000af64 <__aeabi_f2d>:
    af64:	lsls	r2, r0, #1
    af66:	mov.w	r1, r2, asr #3
    af6a:	mov.w	r1, r1, rrx
    af6e:	mov.w	r0, r2, lsl #28
    af72:	itttt	ne
    af74:	andsne.w	r3, r2, #4278190080	; 0xff000000
    af78:	teqne	r3, #4278190080	; 0xff000000
    af7c:	eorne.w	r1, r1, #939524096	; 0x38000000
    af80:	bxne	lr
    af82:	teq	r2, #0
    af86:	ite	ne
    af88:	teqne	r3, #4278190080	; 0xff000000
    af8c:	bxeq	lr
    af8e:	push	{r4, r5, lr}
    af90:	mov.w	r4, #896	; 0x380
    af94:	and.w	r5, r1, #2147483648	; 0x80000000
    af98:	bic.w	r1, r1, #2147483648	; 0x80000000
    af9c:	b.n	ade0 <__adddf3+0x138>
    af9e:	nop

0000afa0 <__aeabi_ul2d>:
    afa0:	orrs.w	r2, r0, r1
    afa4:	it	eq
    afa6:	bxeq	lr
    afa8:	push	{r4, r5, lr}
    afaa:	mov.w	r5, #0
    afae:	b.n	afc6 <__aeabi_l2d+0x16>

0000afb0 <__aeabi_l2d>:
    afb0:	orrs.w	r2, r0, r1
    afb4:	it	eq
    afb6:	bxeq	lr
    afb8:	push	{r4, r5, lr}
    afba:	ands.w	r5, r1, #2147483648	; 0x80000000
    afbe:	bpl.n	afc6 <__aeabi_l2d+0x16>
    afc0:	negs	r0, r0
    afc2:	sbc.w	r1, r1, r1, lsl #1
    afc6:	mov.w	r4, #1024	; 0x400
    afca:	add.w	r4, r4, #50	; 0x32
    afce:	movs.w	ip, r1, lsr #22
    afd2:	beq.w	ad8e <__adddf3+0xe6>
    afd6:	mov.w	r2, #3
    afda:	movs.w	ip, ip, lsr #3
    afde:	it	ne
    afe0:	addne	r2, #3
    afe2:	movs.w	ip, ip, lsr #3
    afe6:	it	ne
    afe8:	addne	r2, #3
    afea:	add.w	r2, r2, ip, lsr #3
    afee:	rsb	r3, r2, #32
    aff2:	lsl.w	ip, r0, r3
    aff6:	lsr.w	r0, r0, r2
    affa:	lsl.w	lr, r1, r3
    affe:	orr.w	r0, r0, lr
    b002:	lsr.w	r1, r1, r2
    b006:	add	r4, r2
    b008:	b.n	ad8e <__adddf3+0xe6>
    b00a:	nop

0000b00c <__aeabi_dmul>:
    b00c:	push	{r4, r5, r6, lr}
    b00e:	mov.w	ip, #255	; 0xff
    b012:	orr.w	ip, ip, #1792	; 0x700
    b016:	ands.w	r4, ip, r1, lsr #20
    b01a:	ittte	ne
    b01c:	andsne.w	r5, ip, r3, lsr #20
    b020:	teqne	r4, ip
    b024:	teqne	r5, ip
    b028:	bleq	b1e8 <__aeabi_dmul+0x1dc>
    b02c:	add	r4, r5
    b02e:	eor.w	r6, r1, r3
    b032:	bic.w	r1, r1, ip, lsl #21
    b036:	bic.w	r3, r3, ip, lsl #21
    b03a:	orrs.w	r5, r0, r1, lsl #12
    b03e:	it	ne
    b040:	orrsne.w	r5, r2, r3, lsl #12
    b044:	orr.w	r1, r1, #1048576	; 0x100000
    b048:	orr.w	r3, r3, #1048576	; 0x100000
    b04c:	beq.n	b0c0 <__aeabi_dmul+0xb4>
    b04e:	umull	ip, lr, r0, r2
    b052:	mov.w	r5, #0
    b056:	umlal	lr, r5, r1, r2
    b05a:	and.w	r2, r6, #2147483648	; 0x80000000
    b05e:	umlal	lr, r5, r0, r3
    b062:	mov.w	r6, #0
    b066:	umlal	r5, r6, r1, r3
    b06a:	teq	ip, #0
    b06e:	it	ne
    b070:	orrne.w	lr, lr, #1
    b074:	sub.w	r4, r4, #255	; 0xff
    b078:	cmp.w	r6, #512	; 0x200
    b07c:	sbc.w	r4, r4, #768	; 0x300
    b080:	bcs.n	b08c <__aeabi_dmul+0x80>
    b082:	movs.w	lr, lr, lsl #1
    b086:	adcs	r5, r5
    b088:	adc.w	r6, r6, r6
    b08c:	orr.w	r1, r2, r6, lsl #11
    b090:	orr.w	r1, r1, r5, lsr #21
    b094:	mov.w	r0, r5, lsl #11
    b098:	orr.w	r0, r0, lr, lsr #21
    b09c:	mov.w	lr, lr, lsl #11
    b0a0:	subs.w	ip, r4, #253	; 0xfd
    b0a4:	it	hi
    b0a6:	cmphi.w	ip, #1792	; 0x700
    b0aa:	bhi.n	b0ea <__aeabi_dmul+0xde>
    b0ac:	cmp.w	lr, #2147483648	; 0x80000000
    b0b0:	it	eq
    b0b2:	movseq.w	lr, r0, lsr #1
    b0b6:	adcs.w	r0, r0, #0
    b0ba:	adc.w	r1, r1, r4, lsl #20
    b0be:	pop	{r4, r5, r6, pc}
    b0c0:	and.w	r6, r6, #2147483648	; 0x80000000
    b0c4:	orr.w	r1, r6, r1
    b0c8:	orr.w	r0, r0, r2
    b0cc:	eor.w	r1, r1, r3
    b0d0:	subs.w	r4, r4, ip, lsr #1
    b0d4:	ittt	gt
    b0d6:	rsbsgt	r5, r4, ip
    b0da:	orrgt.w	r1, r1, r4, lsl #20
    b0de:	popgt	{r4, r5, r6, pc}
    b0e0:	orr.w	r1, r1, #1048576	; 0x100000
    b0e4:	mov.w	lr, #0
    b0e8:	subs	r4, #1
    b0ea:	bgt.w	b244 <__aeabi_dmul+0x238>
    b0ee:	cmn.w	r4, #54	; 0x36
    b0f2:	ittt	le
    b0f4:	movle	r0, #0
    b0f6:	andle.w	r1, r1, #2147483648	; 0x80000000
    b0fa:	pople	{r4, r5, r6, pc}
    b0fc:	rsb	r4, r4, #0
    b100:	subs	r4, #32
    b102:	bge.n	b170 <__aeabi_dmul+0x164>
    b104:	adds	r4, #12
    b106:	bgt.n	b140 <__aeabi_dmul+0x134>
    b108:	add.w	r4, r4, #20
    b10c:	rsb	r5, r4, #32
    b110:	lsl.w	r3, r0, r5
    b114:	lsr.w	r0, r0, r4
    b118:	lsl.w	r2, r1, r5
    b11c:	orr.w	r0, r0, r2
    b120:	and.w	r2, r1, #2147483648	; 0x80000000
    b124:	bic.w	r1, r1, #2147483648	; 0x80000000
    b128:	adds.w	r0, r0, r3, lsr #31
    b12c:	lsr.w	r6, r1, r4
    b130:	adc.w	r1, r2, r6
    b134:	orrs.w	lr, lr, r3, lsl #1
    b138:	it	eq
    b13a:	biceq.w	r0, r0, r3, lsr #31
    b13e:	pop	{r4, r5, r6, pc}
    b140:	rsb	r4, r4, #12
    b144:	rsb	r5, r4, #32
    b148:	lsl.w	r3, r0, r4
    b14c:	lsr.w	r0, r0, r5
    b150:	lsl.w	r2, r1, r4
    b154:	orr.w	r0, r0, r2
    b158:	and.w	r1, r1, #2147483648	; 0x80000000
    b15c:	adds.w	r0, r0, r3, lsr #31
    b160:	adc.w	r1, r1, #0
    b164:	orrs.w	lr, lr, r3, lsl #1
    b168:	it	eq
    b16a:	biceq.w	r0, r0, r3, lsr #31
    b16e:	pop	{r4, r5, r6, pc}
    b170:	rsb	r5, r4, #32
    b174:	lsl.w	r2, r0, r5
    b178:	orr.w	lr, lr, r2
    b17c:	lsr.w	r3, r0, r4
    b180:	lsl.w	r2, r1, r5
    b184:	orr.w	r3, r3, r2
    b188:	lsr.w	r0, r1, r4
    b18c:	and.w	r1, r1, #2147483648	; 0x80000000
    b190:	lsr.w	r2, r1, r4
    b194:	bic.w	r0, r0, r2
    b198:	add.w	r0, r0, r3, lsr #31
    b19c:	orrs.w	lr, lr, r3, lsl #1
    b1a0:	it	eq
    b1a2:	biceq.w	r0, r0, r3, lsr #31
    b1a6:	pop	{r4, r5, r6, pc}
    b1a8:	teq	r4, #0
    b1ac:	bne.n	b1ce <__aeabi_dmul+0x1c2>
    b1ae:	and.w	r6, r1, #2147483648	; 0x80000000
    b1b2:	lsls	r0, r0, #1
    b1b4:	adc.w	r1, r1, r1
    b1b8:	tst.w	r1, #1048576	; 0x100000
    b1bc:	it	eq
    b1be:	subeq	r4, #1
    b1c0:	beq.n	b1b2 <__aeabi_dmul+0x1a6>
    b1c2:	orr.w	r1, r1, r6
    b1c6:	teq	r5, #0
    b1ca:	it	ne
    b1cc:	bxne	lr
    b1ce:	and.w	r6, r3, #2147483648	; 0x80000000
    b1d2:	lsls	r2, r2, #1
    b1d4:	adc.w	r3, r3, r3
    b1d8:	tst.w	r3, #1048576	; 0x100000
    b1dc:	it	eq
    b1de:	subeq	r5, #1
    b1e0:	beq.n	b1d2 <__aeabi_dmul+0x1c6>
    b1e2:	orr.w	r3, r3, r6
    b1e6:	bx	lr
    b1e8:	teq	r4, ip
    b1ec:	and.w	r5, ip, r3, lsr #20
    b1f0:	it	ne
    b1f2:	teqne	r5, ip
    b1f6:	beq.n	b212 <__aeabi_dmul+0x206>
    b1f8:	orrs.w	r6, r0, r1, lsl #1
    b1fc:	it	ne
    b1fe:	orrsne.w	r6, r2, r3, lsl #1
    b202:	bne.n	b1a8 <__aeabi_dmul+0x19c>
    b204:	eor.w	r1, r1, r3
    b208:	and.w	r1, r1, #2147483648	; 0x80000000
    b20c:	mov.w	r0, #0
    b210:	pop	{r4, r5, r6, pc}
    b212:	orrs.w	r6, r0, r1, lsl #1
    b216:	itte	eq
    b218:	moveq	r0, r2
    b21a:	moveq	r1, r3
    b21c:	orrsne.w	r6, r2, r3, lsl #1
    b220:	beq.n	b256 <__aeabi_dmul+0x24a>
    b222:	teq	r4, ip
    b226:	bne.n	b22e <__aeabi_dmul+0x222>
    b228:	orrs.w	r6, r0, r1, lsl #12
    b22c:	bne.n	b256 <__aeabi_dmul+0x24a>
    b22e:	teq	r5, ip
    b232:	bne.n	b240 <__aeabi_dmul+0x234>
    b234:	orrs.w	r6, r2, r3, lsl #12
    b238:	itt	ne
    b23a:	movne	r0, r2
    b23c:	movne	r1, r3
    b23e:	bne.n	b256 <__aeabi_dmul+0x24a>
    b240:	eor.w	r1, r1, r3
    b244:	and.w	r1, r1, #2147483648	; 0x80000000
    b248:	orr.w	r1, r1, #2130706432	; 0x7f000000
    b24c:	orr.w	r1, r1, #15728640	; 0xf00000
    b250:	mov.w	r0, #0
    b254:	pop	{r4, r5, r6, pc}
    b256:	orr.w	r1, r1, #2130706432	; 0x7f000000
    b25a:	orr.w	r1, r1, #16252928	; 0xf80000
    b25e:	pop	{r4, r5, r6, pc}

0000b260 <__aeabi_ddiv>:
    b260:	push	{r4, r5, r6, lr}
    b262:	mov.w	ip, #255	; 0xff
    b266:	orr.w	ip, ip, #1792	; 0x700
    b26a:	ands.w	r4, ip, r1, lsr #20
    b26e:	ittte	ne
    b270:	andsne.w	r5, ip, r3, lsr #20
    b274:	teqne	r4, ip
    b278:	teqne	r5, ip
    b27c:	bleq	b3ce <__aeabi_ddiv+0x16e>
    b280:	sub.w	r4, r4, r5
    b284:	eor.w	lr, r1, r3
    b288:	orrs.w	r5, r2, r3, lsl #12
    b28c:	mov.w	r1, r1, lsl #12
    b290:	beq.w	b3a4 <__aeabi_ddiv+0x144>
    b294:	mov.w	r3, r3, lsl #12
    b298:	mov.w	r5, #268435456	; 0x10000000
    b29c:	orr.w	r3, r5, r3, lsr #4
    b2a0:	orr.w	r3, r3, r2, lsr #24
    b2a4:	mov.w	r2, r2, lsl #8
    b2a8:	orr.w	r5, r5, r1, lsr #4
    b2ac:	orr.w	r5, r5, r0, lsr #24
    b2b0:	mov.w	r6, r0, lsl #8
    b2b4:	and.w	r1, lr, #2147483648	; 0x80000000
    b2b8:	cmp	r5, r3
    b2ba:	it	eq
    b2bc:	cmpeq	r6, r2
    b2be:	adc.w	r4, r4, #253	; 0xfd
    b2c2:	add.w	r4, r4, #768	; 0x300
    b2c6:	bcs.n	b2ce <__aeabi_ddiv+0x6e>
    b2c8:	lsrs	r3, r3, #1
    b2ca:	mov.w	r2, r2, rrx
    b2ce:	subs	r6, r6, r2
    b2d0:	sbc.w	r5, r5, r3
    b2d4:	lsrs	r3, r3, #1
    b2d6:	mov.w	r2, r2, rrx
    b2da:	mov.w	r0, #1048576	; 0x100000
    b2de:	mov.w	ip, #524288	; 0x80000
    b2e2:	subs.w	lr, r6, r2
    b2e6:	sbcs.w	lr, r5, r3
    b2ea:	ittt	cs
    b2ec:	subcs	r6, r6, r2
    b2ee:	movcs	r5, lr
    b2f0:	orrcs.w	r0, r0, ip
    b2f4:	lsrs	r3, r3, #1
    b2f6:	mov.w	r2, r2, rrx
    b2fa:	subs.w	lr, r6, r2
    b2fe:	sbcs.w	lr, r5, r3
    b302:	ittt	cs
    b304:	subcs	r6, r6, r2
    b306:	movcs	r5, lr
    b308:	orrcs.w	r0, r0, ip, lsr #1
    b30c:	lsrs	r3, r3, #1
    b30e:	mov.w	r2, r2, rrx
    b312:	subs.w	lr, r6, r2
    b316:	sbcs.w	lr, r5, r3
    b31a:	ittt	cs
    b31c:	subcs	r6, r6, r2
    b31e:	movcs	r5, lr
    b320:	orrcs.w	r0, r0, ip, lsr #2
    b324:	lsrs	r3, r3, #1
    b326:	mov.w	r2, r2, rrx
    b32a:	subs.w	lr, r6, r2
    b32e:	sbcs.w	lr, r5, r3
    b332:	ittt	cs
    b334:	subcs	r6, r6, r2
    b336:	movcs	r5, lr
    b338:	orrcs.w	r0, r0, ip, lsr #3
    b33c:	orrs.w	lr, r5, r6
    b340:	beq.n	b374 <__aeabi_ddiv+0x114>
    b342:	mov.w	r5, r5, lsl #4
    b346:	orr.w	r5, r5, r6, lsr #28
    b34a:	mov.w	r6, r6, lsl #4
    b34e:	mov.w	r3, r3, lsl #3
    b352:	orr.w	r3, r3, r2, lsr #29
    b356:	mov.w	r2, r2, lsl #3
    b35a:	movs.w	ip, ip, lsr #4
    b35e:	bne.n	b2e2 <__aeabi_ddiv+0x82>
    b360:	tst.w	r1, #1048576	; 0x100000
    b364:	bne.n	b37e <__aeabi_ddiv+0x11e>
    b366:	orr.w	r1, r1, r0
    b36a:	mov.w	r0, #0
    b36e:	mov.w	ip, #2147483648	; 0x80000000
    b372:	b.n	b2e2 <__aeabi_ddiv+0x82>
    b374:	tst.w	r1, #1048576	; 0x100000
    b378:	itt	eq
    b37a:	orreq	r1, r0
    b37c:	moveq	r0, #0
    b37e:	subs.w	ip, r4, #253	; 0xfd
    b382:	it	hi
    b384:	cmphi.w	ip, #1792	; 0x700
    b388:	bhi.w	b0ea <__aeabi_dmul+0xde>
    b38c:	subs.w	ip, r5, r3
    b390:	itt	eq
    b392:	subseq.w	ip, r6, r2
    b396:	movseq.w	ip, r0, lsr #1
    b39a:	adcs.w	r0, r0, #0
    b39e:	adc.w	r1, r1, r4, lsl #20
    b3a2:	pop	{r4, r5, r6, pc}
    b3a4:	and.w	lr, lr, #2147483648	; 0x80000000
    b3a8:	orr.w	r1, lr, r1, lsr #12
    b3ac:	adds.w	r4, r4, ip, lsr #1
    b3b0:	ittt	gt
    b3b2:	rsbsgt	r5, r4, ip
    b3b6:	orrgt.w	r1, r1, r4, lsl #20
    b3ba:	popgt	{r4, r5, r6, pc}
    b3bc:	orr.w	r1, r1, #1048576	; 0x100000
    b3c0:	mov.w	lr, #0
    b3c4:	subs	r4, #1
    b3c6:	b.n	b0ea <__aeabi_dmul+0xde>
    b3c8:	orr.w	lr, r5, r6
    b3cc:	b.n	b0ea <__aeabi_dmul+0xde>
    b3ce:	and.w	r5, ip, r3, lsr #20
    b3d2:	teq	r4, ip
    b3d6:	it	eq
    b3d8:	teqeq	r5, ip
    b3dc:	beq.w	b256 <__aeabi_dmul+0x24a>
    b3e0:	teq	r4, ip
    b3e4:	bne.n	b3fc <__aeabi_ddiv+0x19c>
    b3e6:	orrs.w	r4, r0, r1, lsl #12
    b3ea:	bne.w	b256 <__aeabi_dmul+0x24a>
    b3ee:	teq	r5, ip
    b3f2:	bne.w	b240 <__aeabi_dmul+0x234>
    b3f6:	mov	r0, r2
    b3f8:	mov	r1, r3
    b3fa:	b.n	b256 <__aeabi_dmul+0x24a>
    b3fc:	teq	r5, ip
    b400:	bne.n	b410 <__aeabi_ddiv+0x1b0>
    b402:	orrs.w	r5, r2, r3, lsl #12
    b406:	beq.w	b204 <__aeabi_dmul+0x1f8>
    b40a:	mov	r0, r2
    b40c:	mov	r1, r3
    b40e:	b.n	b256 <__aeabi_dmul+0x24a>
    b410:	orrs.w	r6, r0, r1, lsl #1
    b414:	it	ne
    b416:	orrsne.w	r6, r2, r3, lsl #1
    b41a:	bne.w	b1a8 <__aeabi_dmul+0x19c>
    b41e:	orrs.w	r4, r0, r1, lsl #1
    b422:	bne.w	b240 <__aeabi_dmul+0x234>
    b426:	orrs.w	r5, r2, r3, lsl #1
    b42a:	bne.w	b204 <__aeabi_dmul+0x1f8>
    b42e:	b.n	b256 <__aeabi_dmul+0x24a>

0000b430 <__gedf2>:
    b430:	mov.w	ip, #4294967295
    b434:	b.n	b444 <__cmpdf2+0x4>
    b436:	nop

0000b438 <__ledf2>:
    b438:	mov.w	ip, #1
    b43c:	b.n	b444 <__cmpdf2+0x4>
    b43e:	nop

0000b440 <__cmpdf2>:
    b440:	mov.w	ip, #1
    b444:	str.w	ip, [sp, #-4]!
    b448:	mov.w	ip, r1, lsl #1
    b44c:	mvns.w	ip, ip, asr #21
    b450:	mov.w	ip, r3, lsl #1
    b454:	it	ne
    b456:	mvnsne.w	ip, ip, asr #21
    b45a:	beq.n	b494 <__cmpdf2+0x54>
    b45c:	add	sp, #4
    b45e:	orrs.w	ip, r0, r1, lsl #1
    b462:	ite	eq
    b464:	orrseq.w	ip, r2, r3, lsl #1
    b468:	teqne	r1, r3
    b46c:	ittt	eq
    b46e:	teqeq	r0, r2
    b472:	moveq	r0, #0
    b474:	bxeq	lr
    b476:	cmn.w	r0, #0
    b47a:	teq	r1, r3
    b47e:	it	pl
    b480:	cmppl	r1, r3
    b482:	it	eq
    b484:	cmpeq	r0, r2
    b486:	ite	cs
    b488:	asrcs	r0, r3, #31
    b48a:	mvncc.w	r0, r3, asr #31
    b48e:	orr.w	r0, r0, #1
    b492:	bx	lr
    b494:	mov.w	ip, r1, lsl #1
    b498:	mvns.w	ip, ip, asr #21
    b49c:	bne.n	b4a4 <__cmpdf2+0x64>
    b49e:	orrs.w	ip, r0, r1, lsl #12
    b4a2:	bne.n	b4b4 <__cmpdf2+0x74>
    b4a4:	mov.w	ip, r3, lsl #1
    b4a8:	mvns.w	ip, ip, asr #21
    b4ac:	bne.n	b45c <__cmpdf2+0x1c>
    b4ae:	orrs.w	ip, r2, r3, lsl #12
    b4b2:	beq.n	b45c <__cmpdf2+0x1c>
    b4b4:	ldr.w	r0, [sp], #4
    b4b8:	bx	lr
    b4ba:	nop

0000b4bc <__aeabi_cdrcmple>:
    b4bc:	mov	ip, r0
    b4be:	mov	r0, r2
    b4c0:	mov	r2, ip
    b4c2:	mov	ip, r1
    b4c4:	mov	r1, r3
    b4c6:	mov	r3, ip
    b4c8:	b.n	b4cc <__aeabi_cdcmpeq>
    b4ca:	nop

0000b4cc <__aeabi_cdcmpeq>:
    b4cc:	push	{r0, lr}
    b4ce:	bl	b440 <__cmpdf2>
    b4d2:	cmp	r0, #0
    b4d4:	it	mi
    b4d6:	cmnmi.w	r0, #0
    b4da:	pop	{r0, pc}

0000b4dc <__aeabi_dcmpeq>:
    b4dc:	str.w	lr, [sp, #-8]!
    b4e0:	bl	b4cc <__aeabi_cdcmpeq>
    b4e4:	ite	eq
    b4e6:	moveq	r0, #1
    b4e8:	movne	r0, #0
    b4ea:	ldr.w	pc, [sp], #8
    b4ee:	nop

0000b4f0 <__aeabi_dcmplt>:
    b4f0:	str.w	lr, [sp, #-8]!
    b4f4:	bl	b4cc <__aeabi_cdcmpeq>
    b4f8:	ite	cc
    b4fa:	movcc	r0, #1
    b4fc:	movcs	r0, #0
    b4fe:	ldr.w	pc, [sp], #8
    b502:	nop

0000b504 <__aeabi_dcmple>:
    b504:	str.w	lr, [sp, #-8]!
    b508:	bl	b4cc <__aeabi_cdcmpeq>
    b50c:	ite	ls
    b50e:	movls	r0, #1
    b510:	movhi	r0, #0
    b512:	ldr.w	pc, [sp], #8
    b516:	nop

0000b518 <__aeabi_dcmpge>:
    b518:	str.w	lr, [sp, #-8]!
    b51c:	bl	b4bc <__aeabi_cdrcmple>
    b520:	ite	ls
    b522:	movls	r0, #1
    b524:	movhi	r0, #0
    b526:	ldr.w	pc, [sp], #8
    b52a:	nop

0000b52c <__aeabi_dcmpgt>:
    b52c:	str.w	lr, [sp, #-8]!
    b530:	bl	b4bc <__aeabi_cdrcmple>
    b534:	ite	cc
    b536:	movcc	r0, #1
    b538:	movcs	r0, #0
    b53a:	ldr.w	pc, [sp], #8
    b53e:	nop

0000b540 <__aeabi_dcmpun>:
    b540:	mov.w	ip, r1, lsl #1
    b544:	mvns.w	ip, ip, asr #21
    b548:	bne.n	b550 <__aeabi_dcmpun+0x10>
    b54a:	orrs.w	ip, r0, r1, lsl #12
    b54e:	bne.n	b566 <__aeabi_dcmpun+0x26>
    b550:	mov.w	ip, r3, lsl #1
    b554:	mvns.w	ip, ip, asr #21
    b558:	bne.n	b560 <__aeabi_dcmpun+0x20>
    b55a:	orrs.w	ip, r2, r3, lsl #12
    b55e:	bne.n	b566 <__aeabi_dcmpun+0x26>
    b560:	mov.w	r0, #0
    b564:	bx	lr
    b566:	mov.w	r0, #1
    b56a:	bx	lr

0000b56c <__aeabi_d2iz>:
    b56c:	mov.w	r2, r1, lsl #1
    b570:	adds.w	r2, r2, #2097152	; 0x200000
    b574:	bcs.n	b5a2 <__aeabi_d2iz+0x36>
    b576:	bpl.n	b59c <__aeabi_d2iz+0x30>
    b578:	mvn.w	r3, #992	; 0x3e0
    b57c:	subs.w	r2, r3, r2, asr #21
    b580:	bls.n	b5a8 <__aeabi_d2iz+0x3c>
    b582:	mov.w	r3, r1, lsl #11
    b586:	orr.w	r3, r3, #2147483648	; 0x80000000
    b58a:	orr.w	r3, r3, r0, lsr #21
    b58e:	tst.w	r1, #2147483648	; 0x80000000
    b592:	lsr.w	r0, r3, r2
    b596:	it	ne
    b598:	negne	r0, r0
    b59a:	bx	lr
    b59c:	mov.w	r0, #0
    b5a0:	bx	lr
    b5a2:	orrs.w	r0, r0, r1, lsl #12
    b5a6:	bne.n	b5b4 <__aeabi_d2iz+0x48>
    b5a8:	ands.w	r0, r1, #2147483648	; 0x80000000
    b5ac:	it	eq
    b5ae:	mvneq.w	r0, #2147483648	; 0x80000000
    b5b2:	bx	lr
    b5b4:	mov.w	r0, #0
    b5b8:	bx	lr
    b5ba:	nop

0000b5bc <__aeabi_d2f>:
    b5bc:	mov.w	r2, r1, lsl #1
    b5c0:	subs.w	r3, r2, #1879048192	; 0x70000000
    b5c4:	itt	cs
    b5c6:	subscs.w	ip, r3, #2097152	; 0x200000
    b5ca:	rsbscs	ip, ip, #532676608	; 0x1fc00000
    b5ce:	bls.n	b5ec <__aeabi_d2f+0x30>
    b5d0:	and.w	ip, r1, #2147483648	; 0x80000000
    b5d4:	mov.w	r2, r0, lsl #3
    b5d8:	orr.w	r0, ip, r0, lsr #29
    b5dc:	cmp.w	r2, #2147483648	; 0x80000000
    b5e0:	adc.w	r0, r0, r3, lsl #2
    b5e4:	it	eq
    b5e6:	biceq.w	r0, r0, #1
    b5ea:	bx	lr
    b5ec:	tst.w	r1, #1073741824	; 0x40000000
    b5f0:	bne.n	b636 <__aeabi_d2f+0x7a>
    b5f2:	adds.w	r2, r3, #48234496	; 0x2e00000
    b5f6:	itt	lt
    b5f8:	andlt.w	r0, r1, #2147483648	; 0x80000000
    b5fc:	bxlt	lr
    b5fe:	orr.w	r1, r1, #1048576	; 0x100000
    b602:	mov.w	r2, r2, lsr #21
    b606:	rsb	r2, r2, #24
    b60a:	rsb	ip, r2, #32
    b60e:	lsls.w	r3, r0, ip
    b612:	lsr.w	r0, r0, r2
    b616:	it	ne
    b618:	orrne.w	r0, r0, #1
    b61c:	mov.w	r3, r1, lsl #11
    b620:	mov.w	r3, r3, lsr #11
    b624:	lsl.w	ip, r3, ip
    b628:	orr.w	r0, r0, ip
    b62c:	lsr.w	r3, r3, r2
    b630:	mov.w	r3, r3, lsl #1
    b634:	b.n	b5d0 <__aeabi_d2f+0x14>
    b636:	mvns.w	r3, r2, asr #21
    b63a:	bne.n	b64c <__aeabi_d2f+0x90>
    b63c:	orrs.w	r3, r0, r1, lsl #12
    b640:	ittt	ne
    b642:	movne.w	r0, #2130706432	; 0x7f000000
    b646:	orrne.w	r0, r0, #12582912	; 0xc00000
    b64a:	bxne	lr
    b64c:	and.w	r0, r1, #2147483648	; 0x80000000
    b650:	orr.w	r0, r0, #2130706432	; 0x7f000000
    b654:	orr.w	r0, r0, #8388608	; 0x800000
    b658:	bx	lr
    b65a:	nop

0000b65c <__udivmoddi4>:
    b65c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    b660:	mov	ip, r1
    b662:	mov	r6, r1
    b664:	mov	r4, r0
    b666:	ldr	r5, [sp, #32]
    b668:	cmp	r3, #0
    b66a:	bne.n	b70e <__udivmoddi4+0xb2>
    b66c:	cmp	r2, r1
    b66e:	mov	r7, r2
    b670:	bls.n	b74c <__udivmoddi4+0xf0>
    b672:	clz	lr, r2
    b676:	cmp.w	lr, #0
    b67a:	beq.n	b694 <__udivmoddi4+0x38>
    b67c:	rsb	r4, lr, #32
    b680:	lsr.w	r4, r0, r4
    b684:	lsl.w	r6, r1, lr
    b688:	orr.w	ip, r4, r6
    b68c:	lsl.w	r7, r2, lr
    b690:	lsl.w	r4, r0, lr
    b694:	mov.w	r9, r7, lsr #16
    b698:	lsrs	r2, r4, #16
    b69a:	udiv	r0, ip, r9
    b69e:	uxth.w	r8, r7
    b6a2:	mls	r6, r9, r0, ip
    b6a6:	orr.w	r6, r2, r6, lsl #16
    b6aa:	mul.w	r3, r0, r8
    b6ae:	cmp	r3, r6
    b6b0:	bls.n	b6c6 <__udivmoddi4+0x6a>
    b6b2:	adds	r6, r6, r7
    b6b4:	add.w	r2, r0, #4294967295
    b6b8:	bcs.w	b900 <__udivmoddi4+0x2a4>
    b6bc:	cmp	r3, r6
    b6be:	bls.w	b900 <__udivmoddi4+0x2a4>
    b6c2:	subs	r0, #2
    b6c4:	add	r6, r7
    b6c6:	subs	r6, r6, r3
    b6c8:	uxth	r2, r4
    b6ca:	udiv	r3, r6, r9
    b6ce:	mls	r6, r9, r3, r6
    b6d2:	orr.w	r4, r2, r6, lsl #16
    b6d6:	mul.w	r8, r3, r8
    b6da:	cmp	r8, r4
    b6dc:	bls.n	b6f2 <__udivmoddi4+0x96>
    b6de:	adds	r4, r4, r7
    b6e0:	add.w	r2, r3, #4294967295
    b6e4:	bcs.w	b8fc <__udivmoddi4+0x2a0>
    b6e8:	cmp	r8, r4
    b6ea:	bls.w	b8fc <__udivmoddi4+0x2a0>
    b6ee:	subs	r3, #2
    b6f0:	add	r4, r7
    b6f2:	rsb	r4, r8, r4
    b6f6:	orr.w	r0, r3, r0, lsl #16
    b6fa:	movs	r1, #0
    b6fc:	cmp	r5, #0
    b6fe:	beq.n	b7c6 <__udivmoddi4+0x16a>
    b700:	lsr.w	r4, r4, lr
    b704:	movs	r3, #0
    b706:	str	r4, [r5, #0]
    b708:	str	r3, [r5, #4]
    b70a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    b70e:	cmp	r3, r1
    b710:	bls.n	b722 <__udivmoddi4+0xc6>
    b712:	cmp	r5, #0
    b714:	beq.n	b7c2 <__udivmoddi4+0x166>
    b716:	movs	r1, #0
    b718:	stmia.w	r5, {r0, r6}
    b71c:	mov	r0, r1
    b71e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    b722:	clz	r1, r3
    b726:	cmp	r1, #0
    b728:	bne.w	b84c <__udivmoddi4+0x1f0>
    b72c:	cmp	r3, r6
    b72e:	bcc.n	b736 <__udivmoddi4+0xda>
    b730:	cmp	r2, r0
    b732:	bhi.w	b926 <__udivmoddi4+0x2ca>
    b736:	subs	r4, r0, r2
    b738:	sbc.w	r6, r6, r3
    b73c:	movs	r0, #1
    b73e:	mov	ip, r6
    b740:	cmp	r5, #0
    b742:	beq.n	b7c6 <__udivmoddi4+0x16a>
    b744:	stmia.w	r5, {r4, ip}
    b748:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    b74c:	cbnz	r2, b754 <__udivmoddi4+0xf8>
    b74e:	movs	r7, #1
    b750:	udiv	r7, r7, r2
    b754:	clz	lr, r7
    b758:	cmp.w	lr, #0
    b75c:	bne.n	b7ca <__udivmoddi4+0x16e>
    b75e:	subs	r3, r6, r7
    b760:	mov.w	r8, r7, lsr #16
    b764:	uxth.w	ip, r7
    b768:	movs	r1, #1
    b76a:	udiv	r0, r3, r8
    b76e:	lsrs	r2, r4, #16
    b770:	mls	r6, r8, r0, r3
    b774:	orr.w	r6, r2, r6, lsl #16
    b778:	mul.w	r3, ip, r0
    b77c:	cmp	r3, r6
    b77e:	bls.n	b790 <__udivmoddi4+0x134>
    b780:	adds	r6, r6, r7
    b782:	add.w	r2, r0, #4294967295
    b786:	bcs.n	b78e <__udivmoddi4+0x132>
    b788:	cmp	r3, r6
    b78a:	bhi.w	b92a <__udivmoddi4+0x2ce>
    b78e:	mov	r0, r2
    b790:	subs	r6, r6, r3
    b792:	uxth	r2, r4
    b794:	udiv	r3, r6, r8
    b798:	mls	r6, r8, r3, r6
    b79c:	orr.w	r4, r2, r6, lsl #16
    b7a0:	mul.w	ip, ip, r3
    b7a4:	cmp	ip, r4
    b7a6:	bls.n	b7b8 <__udivmoddi4+0x15c>
    b7a8:	adds	r4, r4, r7
    b7aa:	add.w	r2, r3, #4294967295
    b7ae:	bcs.n	b7b6 <__udivmoddi4+0x15a>
    b7b0:	cmp	ip, r4
    b7b2:	bhi.w	b920 <__udivmoddi4+0x2c4>
    b7b6:	mov	r3, r2
    b7b8:	rsb	r4, ip, r4
    b7bc:	orr.w	r0, r3, r0, lsl #16
    b7c0:	b.n	b6fc <__udivmoddi4+0xa0>
    b7c2:	mov	r1, r5
    b7c4:	mov	r0, r5
    b7c6:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    b7ca:	rsb	r1, lr, #32
    b7ce:	lsl.w	r3, r6, lr
    b7d2:	lsl.w	r7, r7, lr
    b7d6:	lsr.w	r9, r0, r1
    b7da:	mov.w	r8, r7, lsr #16
    b7de:	lsrs	r6, r1
    b7e0:	orr.w	r9, r9, r3
    b7e4:	udiv	sl, r6, r8
    b7e8:	mov.w	r4, r9, lsr #16
    b7ec:	mls	r6, r8, sl, r6
    b7f0:	uxth.w	ip, r7
    b7f4:	orr.w	r3, r4, r6, lsl #16
    b7f8:	mul.w	r2, sl, ip
    b7fc:	cmp	r2, r3
    b7fe:	lsl.w	r4, r0, lr
    b802:	bls.n	b81a <__udivmoddi4+0x1be>
    b804:	adds	r3, r3, r7
    b806:	add.w	r1, sl, #4294967295
    b80a:	bcs.w	b91c <__udivmoddi4+0x2c0>
    b80e:	cmp	r2, r3
    b810:	bls.w	b91c <__udivmoddi4+0x2c0>
    b814:	sub.w	sl, sl, #2
    b818:	add	r3, r7
    b81a:	subs	r3, r3, r2
    b81c:	uxth.w	r9, r9
    b820:	udiv	r1, r3, r8
    b824:	mls	r3, r8, r1, r3
    b828:	orr.w	r3, r9, r3, lsl #16
    b82c:	mul.w	r6, r1, ip
    b830:	cmp	r6, r3
    b832:	bls.n	b844 <__udivmoddi4+0x1e8>
    b834:	adds	r3, r3, r7
    b836:	add.w	r2, r1, #4294967295
    b83a:	bcs.n	b914 <__udivmoddi4+0x2b8>
    b83c:	cmp	r6, r3
    b83e:	bls.n	b914 <__udivmoddi4+0x2b8>
    b840:	subs	r1, #2
    b842:	add	r3, r7
    b844:	subs	r3, r3, r6
    b846:	orr.w	r1, r1, sl, lsl #16
    b84a:	b.n	b76a <__udivmoddi4+0x10e>
    b84c:	rsb	lr, r1, #32
    b850:	lsr.w	r4, r2, lr
    b854:	lsls	r3, r1
    b856:	orrs	r3, r4
    b858:	lsr.w	r7, r0, lr
    b85c:	lsl.w	r4, r6, r1
    b860:	mov.w	ip, r3, lsr #16
    b864:	lsr.w	r6, r6, lr
    b868:	orrs	r4, r7
    b86a:	udiv	r9, r6, ip
    b86e:	lsrs	r7, r4, #16
    b870:	mls	r6, ip, r9, r6
    b874:	uxth.w	r8, r3
    b878:	orr.w	r6, r7, r6, lsl #16
    b87c:	mul.w	r7, r9, r8
    b880:	cmp	r7, r6
    b882:	lsl.w	r2, r2, r1
    b886:	lsl.w	sl, r0, r1
    b88a:	bls.n	b89e <__udivmoddi4+0x242>
    b88c:	adds	r6, r6, r3
    b88e:	add.w	r0, r9, #4294967295
    b892:	bcs.n	b918 <__udivmoddi4+0x2bc>
    b894:	cmp	r7, r6
    b896:	bls.n	b918 <__udivmoddi4+0x2bc>
    b898:	sub.w	r9, r9, #2
    b89c:	add	r6, r3
    b89e:	subs	r6, r6, r7
    b8a0:	uxth	r0, r4
    b8a2:	udiv	r4, r6, ip
    b8a6:	mls	r6, ip, r4, r6
    b8aa:	orr.w	r7, r0, r6, lsl #16
    b8ae:	mul.w	r8, r4, r8
    b8b2:	cmp	r8, r7
    b8b4:	bls.n	b8c6 <__udivmoddi4+0x26a>
    b8b6:	adds	r7, r7, r3
    b8b8:	add.w	r0, r4, #4294967295
    b8bc:	bcs.n	b910 <__udivmoddi4+0x2b4>
    b8be:	cmp	r8, r7
    b8c0:	bls.n	b910 <__udivmoddi4+0x2b4>
    b8c2:	subs	r4, #2
    b8c4:	add	r7, r3
    b8c6:	orr.w	r0, r4, r9, lsl #16
    b8ca:	rsb	r7, r8, r7
    b8ce:	umull	r8, r9, r0, r2
    b8d2:	cmp	r7, r9
    b8d4:	mov	r4, r8
    b8d6:	mov	r6, r9
    b8d8:	bcc.n	b904 <__udivmoddi4+0x2a8>
    b8da:	beq.n	b930 <__udivmoddi4+0x2d4>
    b8dc:	cbz	r5, b938 <__udivmoddi4+0x2dc>
    b8de:	subs.w	r3, sl, r4
    b8e2:	sbc.w	r7, r7, r6
    b8e6:	lsl.w	lr, r7, lr
    b8ea:	lsrs	r3, r1
    b8ec:	lsrs	r7, r1
    b8ee:	orr.w	r3, lr, r3
    b8f2:	stmia.w	r5, {r3, r7}
    b8f6:	movs	r1, #0
    b8f8:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    b8fc:	mov	r3, r2
    b8fe:	b.n	b6f2 <__udivmoddi4+0x96>
    b900:	mov	r0, r2
    b902:	b.n	b6c6 <__udivmoddi4+0x6a>
    b904:	subs.w	r4, r8, r2
    b908:	sbc.w	r6, r9, r3
    b90c:	subs	r0, #1
    b90e:	b.n	b8dc <__udivmoddi4+0x280>
    b910:	mov	r4, r0
    b912:	b.n	b8c6 <__udivmoddi4+0x26a>
    b914:	mov	r1, r2
    b916:	b.n	b844 <__udivmoddi4+0x1e8>
    b918:	mov	r9, r0
    b91a:	b.n	b89e <__udivmoddi4+0x242>
    b91c:	mov	sl, r1
    b91e:	b.n	b81a <__udivmoddi4+0x1be>
    b920:	subs	r3, #2
    b922:	add	r4, r7
    b924:	b.n	b7b8 <__udivmoddi4+0x15c>
    b926:	mov	r0, r1
    b928:	b.n	b740 <__udivmoddi4+0xe4>
    b92a:	subs	r0, #2
    b92c:	add	r6, r7
    b92e:	b.n	b790 <__udivmoddi4+0x134>
    b930:	cmp	sl, r8
    b932:	bcc.n	b904 <__udivmoddi4+0x2a8>
    b934:	mov	r6, r7
    b936:	b.n	b8dc <__udivmoddi4+0x280>
    b938:	mov	r1, r5
    b93a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    b93e:	nop

0000b940 <__aeabi_idiv0>:
    b940:	bx	lr
    b942:	nop

0000b944 <__aeabi_atexit>:
    b944:	mov	r3, r1
    b946:	mov	r1, r0
    b948:	mov	r0, r3
    b94a:	b.w	b9c0 <__cxa_atexit>
    b94e:	nop

0000b950 <calloc>:
    b950:	ldr	r3, [pc, #8]	; (b95c <calloc+0xc>)
    b952:	mov	r2, r1
    b954:	mov	r1, r0
    b956:	ldr	r0, [r3, #0]
    b958:	b.w	b960 <_calloc_r>
    b95c:	.word	0x20008658

0000b960 <_calloc_r>:
    b960:	push	{r4, lr}
    b962:	mul.w	r1, r2, r1
    b966:	bl	ba48 <_malloc_r>
    b96a:	mov	r4, r0
    b96c:	cbz	r0, b9a6 <_calloc_r+0x46>
    b96e:	ldr.w	r2, [r0, #-4]
    b972:	bic.w	r2, r2, #3
    b976:	subs	r2, #4
    b978:	cmp	r2, #36	; 0x24
    b97a:	bhi.n	b9ae <_calloc_r+0x4e>
    b97c:	cmp	r2, #19
    b97e:	bls.n	b9aa <_calloc_r+0x4a>
    b980:	movs	r3, #0
    b982:	cmp	r2, #27
    b984:	str	r3, [r0, #0]
    b986:	str	r3, [r0, #4]
    b988:	bls.n	b9b8 <_calloc_r+0x58>
    b98a:	cmp	r2, #36	; 0x24
    b98c:	str	r3, [r0, #8]
    b98e:	str	r3, [r0, #12]
    b990:	iteee	ne
    b992:	addne.w	r2, r0, #16
    b996:	streq	r3, [r0, #16]
    b998:	streq	r3, [r0, #20]
    b99a:	addeq.w	r2, r0, #24
    b99e:	movs	r3, #0
    b9a0:	str	r3, [r2, #0]
    b9a2:	str	r3, [r2, #4]
    b9a4:	str	r3, [r2, #8]
    b9a6:	mov	r0, r4
    b9a8:	pop	{r4, pc}
    b9aa:	mov	r2, r0
    b9ac:	b.n	b99e <_calloc_r+0x3e>
    b9ae:	movs	r1, #0
    b9b0:	bl	c110 <memset>
    b9b4:	mov	r0, r4
    b9b6:	pop	{r4, pc}
    b9b8:	add.w	r2, r0, #8
    b9bc:	b.n	b99e <_calloc_r+0x3e>
    b9be:	nop

0000b9c0 <__cxa_atexit>:
    b9c0:	mov	r3, r2
    b9c2:	mov	r2, r1
    b9c4:	mov	r1, r0
    b9c6:	movs	r0, #2
    b9c8:	b.w	d108 <__register_exitproc>

0000b9cc <__errno>:
    b9cc:	ldr	r3, [pc, #4]	; (b9d4 <__errno+0x8>)
    b9ce:	ldr	r0, [r3, #0]
    b9d0:	bx	lr
    b9d2:	nop
    b9d4:	.word	0x20008658

0000b9d8 <__libc_init_array>:
    b9d8:	push	{r4, r5, r6, lr}
    b9da:	ldr	r6, [pc, #60]	; (ba18 <__libc_init_array+0x40>)
    b9dc:	ldr	r5, [pc, #60]	; (ba1c <__libc_init_array+0x44>)
    b9de:	subs	r6, r6, r5
    b9e0:	asrs	r6, r6, #2
    b9e2:	it	ne
    b9e4:	movne	r4, #0
    b9e6:	beq.n	b9f4 <__libc_init_array+0x1c>
    b9e8:	adds	r4, #1
    b9ea:	ldr.w	r3, [r5], #4
    b9ee:	blx	r3
    b9f0:	cmp	r6, r4
    b9f2:	bne.n	b9e8 <__libc_init_array+0x10>
    b9f4:	ldr	r6, [pc, #40]	; (ba20 <__libc_init_array+0x48>)
    b9f6:	ldr	r5, [pc, #44]	; (ba24 <__libc_init_array+0x4c>)
    b9f8:	subs	r6, r6, r5
    b9fa:	bl	9e468 <_init>
    b9fe:	asrs	r6, r6, #2
    ba00:	it	ne
    ba02:	movne	r4, #0
    ba04:	beq.n	ba14 <__libc_init_array+0x3c>
    ba06:	adds	r4, #1
    ba08:	ldr.w	r3, [r5], #4
    ba0c:	blx	r3
    ba0e:	cmp	r6, r4
    ba10:	bne.n	ba06 <__libc_init_array+0x2e>
    ba12:	pop	{r4, r5, r6, pc}
    ba14:	pop	{r4, r5, r6, pc}
    ba16:	nop
    ba18:	.word	0x0009e474
    ba1c:	.word	0x0009e474
    ba20:	.word	0x0009e4c8
    ba24:	.word	0x0009e474

0000ba28 <malloc>:
    ba28:	ldr	r3, [pc, #8]	; (ba34 <malloc+0xc>)
    ba2a:	mov	r1, r0
    ba2c:	ldr	r0, [r3, #0]
    ba2e:	b.w	ba48 <_malloc_r>
    ba32:	nop
    ba34:	.word	0x20008658

0000ba38 <free>:
    ba38:	ldr	r3, [pc, #8]	; (ba44 <free+0xc>)
    ba3a:	mov	r1, r0
    ba3c:	ldr	r0, [r3, #0]
    ba3e:	b.w	d290 <_free_r>
    ba42:	nop
    ba44:	.word	0x20008658

0000ba48 <_malloc_r>:
    ba48:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    ba4c:	add.w	r5, r1, #11
    ba50:	cmp	r5, #22
    ba52:	sub	sp, #12
    ba54:	mov	r6, r0
    ba56:	bls.w	bb98 <_malloc_r+0x150>
    ba5a:	bics.w	r5, r5, #7
    ba5e:	bmi.w	bbe0 <_malloc_r+0x198>
    ba62:	cmp	r1, r5
    ba64:	bhi.w	bbe0 <_malloc_r+0x198>
    ba68:	bl	c1ac <__malloc_lock>
    ba6c:	cmp.w	r5, #504	; 0x1f8
    ba70:	bcc.w	bfac <_malloc_r+0x564>
    ba74:	lsrs	r3, r5, #9
    ba76:	beq.w	bbee <_malloc_r+0x1a6>
    ba7a:	cmp	r3, #4
    ba7c:	bhi.w	bd86 <_malloc_r+0x33e>
    ba80:	lsrs	r0, r5, #6
    ba82:	add.w	lr, r0, #57	; 0x39
    ba86:	mov.w	r3, lr, lsl #1
    ba8a:	adds	r0, #56	; 0x38
    ba8c:	ldr	r7, [pc, #784]	; (bda0 <_malloc_r+0x358>)
    ba8e:	add.w	r3, r7, r3, lsl #2
    ba92:	sub.w	r1, r3, #8
    ba96:	ldr	r4, [r3, #4]
    ba98:	cmp	r1, r4
    ba9a:	bne.n	baac <_malloc_r+0x64>
    ba9c:	b.n	bbf8 <_malloc_r+0x1b0>
    ba9e:	cmp	r2, #0
    baa0:	bge.w	bbfc <_malloc_r+0x1b4>
    baa4:	ldr	r4, [r4, #12]
    baa6:	cmp	r1, r4
    baa8:	beq.w	bbf8 <_malloc_r+0x1b0>
    baac:	ldr	r3, [r4, #4]
    baae:	bic.w	r3, r3, #3
    bab2:	subs	r2, r3, r5
    bab4:	cmp	r2, #15
    bab6:	ble.n	ba9e <_malloc_r+0x56>
    bab8:	ldr	r1, [pc, #740]	; (bda0 <_malloc_r+0x358>)
    baba:	ldr	r4, [r7, #16]
    babc:	add.w	lr, r1, #8
    bac0:	cmp	r4, lr
    bac2:	beq.w	be2c <_malloc_r+0x3e4>
    bac6:	ldr	r3, [r4, #4]
    bac8:	bic.w	r3, r3, #3
    bacc:	subs	r2, r3, r5
    bace:	cmp	r2, #15
    bad0:	bgt.w	be06 <_malloc_r+0x3be>
    bad4:	cmp	r2, #0
    bad6:	str.w	lr, [r1, #20]
    bada:	str.w	lr, [r1, #16]
    bade:	bge.w	bc1e <_malloc_r+0x1d6>
    bae2:	cmp.w	r3, #512	; 0x200
    bae6:	bcs.w	bdb8 <_malloc_r+0x370>
    baea:	lsrs	r3, r3, #3
    baec:	add.w	ip, r3, #1
    baf0:	movs	r2, #1
    baf2:	asrs	r3, r3, #2
    baf4:	lsl.w	r3, r2, r3
    baf8:	ldr	r2, [r1, #4]
    bafa:	ldr.w	r8, [r1, ip, lsl #3]
    bafe:	str.w	r8, [r4, #8]
    bb02:	add.w	r9, r1, ip, lsl #3
    bb06:	orrs	r2, r3
    bb08:	sub.w	r3, r9, #8
    bb0c:	str	r3, [r4, #12]
    bb0e:	str	r2, [r1, #4]
    bb10:	str.w	r4, [r1, ip, lsl #3]
    bb14:	str.w	r4, [r8, #12]
    bb18:	asrs	r3, r0, #2
    bb1a:	movs	r4, #1
    bb1c:	lsls	r4, r3
    bb1e:	cmp	r4, r2
    bb20:	bhi.w	bc38 <_malloc_r+0x1f0>
    bb24:	tst	r4, r2
    bb26:	bne.n	bb36 <_malloc_r+0xee>
    bb28:	bic.w	r0, r0, #3
    bb2c:	lsls	r4, r4, #1
    bb2e:	tst	r4, r2
    bb30:	add.w	r0, r0, #4
    bb34:	beq.n	bb2c <_malloc_r+0xe4>
    bb36:	add.w	r9, r7, r0, lsl #3
    bb3a:	mov	ip, r9
    bb3c:	mov	r8, r0
    bb3e:	ldr.w	r1, [ip, #12]
    bb42:	cmp	ip, r1
    bb44:	bne.n	bb56 <_malloc_r+0x10e>
    bb46:	b.n	be30 <_malloc_r+0x3e8>
    bb48:	cmp	r2, #0
    bb4a:	bge.w	be50 <_malloc_r+0x408>
    bb4e:	ldr	r1, [r1, #12]
    bb50:	cmp	ip, r1
    bb52:	beq.w	be30 <_malloc_r+0x3e8>
    bb56:	ldr	r3, [r1, #4]
    bb58:	bic.w	r3, r3, #3
    bb5c:	subs	r2, r3, r5
    bb5e:	cmp	r2, #15
    bb60:	ble.n	bb48 <_malloc_r+0x100>
    bb62:	mov	r4, r1
    bb64:	ldr.w	ip, [r1, #12]
    bb68:	ldr.w	r8, [r4, #8]!
    bb6c:	adds	r3, r1, r5
    bb6e:	orr.w	r5, r5, #1
    bb72:	str	r5, [r1, #4]
    bb74:	orr.w	r1, r2, #1
    bb78:	str.w	ip, [r8, #12]
    bb7c:	mov	r0, r6
    bb7e:	str.w	r8, [ip, #8]
    bb82:	str	r3, [r7, #20]
    bb84:	str	r3, [r7, #16]
    bb86:	str.w	lr, [r3, #12]
    bb8a:	str.w	lr, [r3, #8]
    bb8e:	str	r1, [r3, #4]
    bb90:	str	r2, [r3, r2]
    bb92:	bl	c1b0 <__malloc_unlock>
    bb96:	b.n	bbd8 <_malloc_r+0x190>
    bb98:	cmp	r1, #16
    bb9a:	bhi.n	bbe0 <_malloc_r+0x198>
    bb9c:	bl	c1ac <__malloc_lock>
    bba0:	movs	r5, #16
    bba2:	movs	r3, #6
    bba4:	movs	r0, #2
    bba6:	ldr	r7, [pc, #504]	; (bda0 <_malloc_r+0x358>)
    bba8:	add.w	r3, r7, r3, lsl #2
    bbac:	sub.w	r2, r3, #8
    bbb0:	ldr	r4, [r3, #4]
    bbb2:	cmp	r4, r2
    bbb4:	beq.w	be42 <_malloc_r+0x3fa>
    bbb8:	ldr	r3, [r4, #4]
    bbba:	ldr	r1, [r4, #12]
    bbbc:	ldr	r5, [r4, #8]
    bbbe:	bic.w	r3, r3, #3
    bbc2:	add	r3, r4
    bbc4:	mov	r0, r6
    bbc6:	ldr	r2, [r3, #4]
    bbc8:	str	r1, [r5, #12]
    bbca:	orr.w	r2, r2, #1
    bbce:	str	r5, [r1, #8]
    bbd0:	str	r2, [r3, #4]
    bbd2:	bl	c1b0 <__malloc_unlock>
    bbd6:	adds	r4, #8
    bbd8:	mov	r0, r4
    bbda:	add	sp, #12
    bbdc:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    bbe0:	movs	r4, #0
    bbe2:	movs	r3, #12
    bbe4:	mov	r0, r4
    bbe6:	str	r3, [r6, #0]
    bbe8:	add	sp, #12
    bbea:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    bbee:	movs	r3, #128	; 0x80
    bbf0:	mov.w	lr, #64	; 0x40
    bbf4:	movs	r0, #63	; 0x3f
    bbf6:	b.n	ba8c <_malloc_r+0x44>
    bbf8:	mov	r0, lr
    bbfa:	b.n	bab8 <_malloc_r+0x70>
    bbfc:	add	r3, r4
    bbfe:	ldr	r1, [r4, #12]
    bc00:	ldr	r2, [r3, #4]
    bc02:	ldr	r5, [r4, #8]
    bc04:	orr.w	r2, r2, #1
    bc08:	str	r1, [r5, #12]
    bc0a:	mov	r0, r6
    bc0c:	str	r5, [r1, #8]
    bc0e:	str	r2, [r3, #4]
    bc10:	bl	c1b0 <__malloc_unlock>
    bc14:	adds	r4, #8
    bc16:	mov	r0, r4
    bc18:	add	sp, #12
    bc1a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    bc1e:	add	r3, r4
    bc20:	mov	r0, r6
    bc22:	ldr	r2, [r3, #4]
    bc24:	orr.w	r2, r2, #1
    bc28:	str	r2, [r3, #4]
    bc2a:	bl	c1b0 <__malloc_unlock>
    bc2e:	adds	r4, #8
    bc30:	mov	r0, r4
    bc32:	add	sp, #12
    bc34:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    bc38:	ldr	r4, [r7, #8]
    bc3a:	ldr	r3, [r4, #4]
    bc3c:	bic.w	r8, r3, #3
    bc40:	cmp	r8, r5
    bc42:	bcc.n	bc4e <_malloc_r+0x206>
    bc44:	rsb	r3, r5, r8
    bc48:	cmp	r3, #15
    bc4a:	bgt.w	bd66 <_malloc_r+0x31e>
    bc4e:	ldr	r3, [pc, #340]	; (bda4 <_malloc_r+0x35c>)
    bc50:	ldr.w	r9, [pc, #352]	; bdb4 <_malloc_r+0x36c>
    bc54:	ldr	r2, [r3, #0]
    bc56:	ldr.w	r3, [r9]
    bc5a:	adds	r3, #1
    bc5c:	add	r2, r5
    bc5e:	add.w	sl, r4, r8
    bc62:	beq.w	bf26 <_malloc_r+0x4de>
    bc66:	add.w	r2, r2, #4096	; 0x1000
    bc6a:	adds	r2, #15
    bc6c:	bic.w	r2, r2, #4080	; 0xff0
    bc70:	bic.w	r2, r2, #15
    bc74:	mov	r1, r2
    bc76:	mov	r0, r6
    bc78:	str	r2, [sp, #4]
    bc7a:	bl	c5a4 <_sbrk_r>
    bc7e:	cmp.w	r0, #4294967295
    bc82:	mov	fp, r0
    bc84:	ldr	r2, [sp, #4]
    bc86:	beq.w	bf3a <_malloc_r+0x4f2>
    bc8a:	cmp	sl, r0
    bc8c:	bhi.w	be88 <_malloc_r+0x440>
    bc90:	ldr	r3, [pc, #276]	; (bda8 <_malloc_r+0x360>)
    bc92:	ldr	r1, [r3, #0]
    bc94:	cmp	sl, fp
    bc96:	add	r1, r2
    bc98:	str	r1, [r3, #0]
    bc9a:	beq.w	bf44 <_malloc_r+0x4fc>
    bc9e:	ldr.w	r0, [r9]
    bca2:	ldr.w	lr, [pc, #272]	; bdb4 <_malloc_r+0x36c>
    bca6:	adds	r0, #1
    bca8:	ittet	ne
    bcaa:	rsbne	sl, sl, fp
    bcae:	addne	r1, sl
    bcb0:	streq.w	fp, [lr]
    bcb4:	strne	r1, [r3, #0]
    bcb6:	ands.w	r1, fp, #7
    bcba:	beq.w	beec <_malloc_r+0x4a4>
    bcbe:	rsb	r0, r1, #8
    bcc2:	rsb	r1, r1, #4096	; 0x1000
    bcc6:	add	fp, r0
    bcc8:	adds	r1, #8
    bcca:	add	r2, fp
    bccc:	ubfx	r2, r2, #0, #12
    bcd0:	rsb	r9, r2, r1
    bcd4:	mov	r1, r9
    bcd6:	mov	r0, r6
    bcd8:	str	r3, [sp, #4]
    bcda:	bl	c5a4 <_sbrk_r>
    bcde:	adds	r3, r0, #1
    bce0:	ldr	r3, [sp, #4]
    bce2:	beq.w	bf64 <_malloc_r+0x51c>
    bce6:	rsb	r2, fp, r0
    bcea:	add	r2, r9
    bcec:	orr.w	r2, r2, #1
    bcf0:	ldr	r1, [r3, #0]
    bcf2:	str.w	fp, [r7, #8]
    bcf6:	add	r1, r9
    bcf8:	cmp	r4, r7
    bcfa:	str.w	r2, [fp, #4]
    bcfe:	str	r1, [r3, #0]
    bd00:	ldr.w	r9, [pc, #164]	; bda8 <_malloc_r+0x360>
    bd04:	beq.n	bd34 <_malloc_r+0x2ec>
    bd06:	cmp.w	r8, #15
    bd0a:	bls.w	bf08 <_malloc_r+0x4c0>
    bd0e:	ldr	r2, [r4, #4]
    bd10:	sub.w	r3, r8, #12
    bd14:	bic.w	r3, r3, #7
    bd18:	adds	r0, r4, r3
    bd1a:	and.w	r2, r2, #1
    bd1e:	mov.w	lr, #5
    bd22:	orrs	r2, r3
    bd24:	cmp	r3, #15
    bd26:	str	r2, [r4, #4]
    bd28:	str.w	lr, [r0, #4]
    bd2c:	str.w	lr, [r0, #8]
    bd30:	bhi.w	bf6c <_malloc_r+0x524>
    bd34:	ldr	r3, [pc, #116]	; (bdac <_malloc_r+0x364>)
    bd36:	ldr	r4, [r7, #8]
    bd38:	ldr	r2, [r3, #0]
    bd3a:	cmp	r1, r2
    bd3c:	it	hi
    bd3e:	strhi	r1, [r3, #0]
    bd40:	ldr	r3, [pc, #108]	; (bdb0 <_malloc_r+0x368>)
    bd42:	ldr	r2, [r3, #0]
    bd44:	cmp	r1, r2
    bd46:	ldr	r2, [r4, #4]
    bd48:	it	hi
    bd4a:	strhi	r1, [r3, #0]
    bd4c:	bic.w	r2, r2, #3
    bd50:	cmp	r5, r2
    bd52:	sub.w	r3, r2, r5
    bd56:	bhi.n	bd5c <_malloc_r+0x314>
    bd58:	cmp	r3, #15
    bd5a:	bgt.n	bd66 <_malloc_r+0x31e>
    bd5c:	mov	r0, r6
    bd5e:	bl	c1b0 <__malloc_unlock>
    bd62:	movs	r4, #0
    bd64:	b.n	bbd8 <_malloc_r+0x190>
    bd66:	adds	r2, r4, r5
    bd68:	orr.w	r3, r3, #1
    bd6c:	orr.w	r5, r5, #1
    bd70:	str	r5, [r4, #4]
    bd72:	mov	r0, r6
    bd74:	str	r2, [r7, #8]
    bd76:	str	r3, [r2, #4]
    bd78:	bl	c1b0 <__malloc_unlock>
    bd7c:	adds	r4, #8
    bd7e:	mov	r0, r4
    bd80:	add	sp, #12
    bd82:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    bd86:	cmp	r3, #20
    bd88:	bls.n	be6e <_malloc_r+0x426>
    bd8a:	cmp	r3, #84	; 0x54
    bd8c:	bhi.w	bed8 <_malloc_r+0x490>
    bd90:	lsrs	r0, r5, #12
    bd92:	add.w	lr, r0, #111	; 0x6f
    bd96:	mov.w	r3, lr, lsl #1
    bd9a:	adds	r0, #110	; 0x6e
    bd9c:	b.n	ba8c <_malloc_r+0x44>
    bd9e:	nop
    bda0:	.word	0x200087c8
    bda4:	.word	0x20012f30
    bda8:	.word	0x20012f34
    bdac:	.word	0x20012f2c
    bdb0:	.word	0x20012f28
    bdb4:	.word	0x20008bd4
    bdb8:	lsrs	r2, r3, #9
    bdba:	cmp	r2, #4
    bdbc:	bls.n	be7c <_malloc_r+0x434>
    bdbe:	cmp	r2, #20
    bdc0:	bhi.w	bf2a <_malloc_r+0x4e2>
    bdc4:	add.w	r1, r2, #92	; 0x5c
    bdc8:	lsls	r1, r1, #1
    bdca:	adds	r2, #91	; 0x5b
    bdcc:	add.w	ip, r7, r1, lsl #2
    bdd0:	ldr.w	r1, [r7, r1, lsl #2]
    bdd4:	ldr.w	r8, [pc, #476]	; bfb4 <_malloc_r+0x56c>
    bdd8:	sub.w	ip, ip, #8
    bddc:	cmp	ip, r1
    bdde:	beq.w	bef2 <_malloc_r+0x4aa>
    bde2:	ldr	r2, [r1, #4]
    bde4:	bic.w	r2, r2, #3
    bde8:	cmp	r3, r2
    bdea:	bcs.n	bdf2 <_malloc_r+0x3aa>
    bdec:	ldr	r1, [r1, #8]
    bdee:	cmp	ip, r1
    bdf0:	bne.n	bde2 <_malloc_r+0x39a>
    bdf2:	ldr.w	ip, [r1, #12]
    bdf6:	ldr	r2, [r7, #4]
    bdf8:	str.w	ip, [r4, #12]
    bdfc:	str	r1, [r4, #8]
    bdfe:	str.w	r4, [ip, #8]
    be02:	str	r4, [r1, #12]
    be04:	b.n	bb18 <_malloc_r+0xd0>
    be06:	adds	r3, r4, r5
    be08:	orr.w	r7, r2, #1
    be0c:	orr.w	r5, r5, #1
    be10:	str	r5, [r4, #4]
    be12:	mov	r0, r6
    be14:	str	r3, [r1, #20]
    be16:	str	r3, [r1, #16]
    be18:	str.w	lr, [r3, #12]
    be1c:	str.w	lr, [r3, #8]
    be20:	str	r7, [r3, #4]
    be22:	str	r2, [r3, r2]
    be24:	adds	r4, #8
    be26:	bl	c1b0 <__malloc_unlock>
    be2a:	b.n	bbd8 <_malloc_r+0x190>
    be2c:	ldr	r2, [r1, #4]
    be2e:	b.n	bb18 <_malloc_r+0xd0>
    be30:	add.w	r8, r8, #1
    be34:	tst.w	r8, #3
    be38:	add.w	ip, ip, #8
    be3c:	bne.w	bb3e <_malloc_r+0xf6>
    be40:	b.n	bea4 <_malloc_r+0x45c>
    be42:	ldr	r4, [r3, #12]
    be44:	cmp	r3, r4
    be46:	it	eq
    be48:	addeq	r0, #2
    be4a:	beq.w	bab8 <_malloc_r+0x70>
    be4e:	b.n	bbb8 <_malloc_r+0x170>
    be50:	add	r3, r1
    be52:	mov	r4, r1
    be54:	ldr	r2, [r3, #4]
    be56:	ldr	r1, [r1, #12]
    be58:	ldr.w	r5, [r4, #8]!
    be5c:	orr.w	r2, r2, #1
    be60:	str	r2, [r3, #4]
    be62:	mov	r0, r6
    be64:	str	r1, [r5, #12]
    be66:	str	r5, [r1, #8]
    be68:	bl	c1b0 <__malloc_unlock>
    be6c:	b.n	bbd8 <_malloc_r+0x190>
    be6e:	add.w	lr, r3, #92	; 0x5c
    be72:	add.w	r0, r3, #91	; 0x5b
    be76:	mov.w	r3, lr, lsl #1
    be7a:	b.n	ba8c <_malloc_r+0x44>
    be7c:	lsrs	r2, r3, #6
    be7e:	add.w	r1, r2, #57	; 0x39
    be82:	lsls	r1, r1, #1
    be84:	adds	r2, #56	; 0x38
    be86:	b.n	bdcc <_malloc_r+0x384>
    be88:	cmp	r4, r7
    be8a:	ldr	r3, [pc, #296]	; (bfb4 <_malloc_r+0x56c>)
    be8c:	beq.w	bc90 <_malloc_r+0x248>
    be90:	ldr	r4, [r3, #8]
    be92:	ldr	r2, [r4, #4]
    be94:	bic.w	r2, r2, #3
    be98:	b.n	bd50 <_malloc_r+0x308>
    be9a:	ldr.w	r3, [r9], #-8
    be9e:	cmp	r9, r3
    bea0:	bne.w	bfa8 <_malloc_r+0x560>
    bea4:	tst.w	r0, #3
    bea8:	add.w	r0, r0, #4294967295
    beac:	bne.n	be9a <_malloc_r+0x452>
    beae:	ldr	r3, [r7, #4]
    beb0:	bic.w	r3, r3, r4
    beb4:	str	r3, [r7, #4]
    beb6:	lsls	r4, r4, #1
    beb8:	cmp	r4, r3
    beba:	bhi.w	bc38 <_malloc_r+0x1f0>
    bebe:	cmp	r4, #0
    bec0:	beq.w	bc38 <_malloc_r+0x1f0>
    bec4:	tst	r4, r3
    bec6:	mov	r0, r8
    bec8:	bne.w	bb36 <_malloc_r+0xee>
    becc:	lsls	r4, r4, #1
    bece:	tst	r4, r3
    bed0:	add.w	r0, r0, #4
    bed4:	beq.n	becc <_malloc_r+0x484>
    bed6:	b.n	bb36 <_malloc_r+0xee>
    bed8:	cmp.w	r3, #340	; 0x154
    bedc:	bhi.n	bf10 <_malloc_r+0x4c8>
    bede:	lsrs	r0, r5, #15
    bee0:	add.w	lr, r0, #120	; 0x78
    bee4:	mov.w	r3, lr, lsl #1
    bee8:	adds	r0, #119	; 0x77
    beea:	b.n	ba8c <_malloc_r+0x44>
    beec:	mov.w	r1, #4096	; 0x1000
    bef0:	b.n	bcca <_malloc_r+0x282>
    bef2:	movs	r1, #1
    bef4:	ldr.w	r3, [r8, #4]
    bef8:	asrs	r2, r2, #2
    befa:	lsl.w	r2, r1, r2
    befe:	orrs	r2, r3
    bf00:	str.w	r2, [r8, #4]
    bf04:	mov	r1, ip
    bf06:	b.n	bdf8 <_malloc_r+0x3b0>
    bf08:	movs	r3, #1
    bf0a:	str.w	r3, [fp, #4]
    bf0e:	b.n	bd5c <_malloc_r+0x314>
    bf10:	movw	r2, #1364	; 0x554
    bf14:	cmp	r3, r2
    bf16:	bhi.n	bf5a <_malloc_r+0x512>
    bf18:	lsrs	r0, r5, #18
    bf1a:	add.w	lr, r0, #125	; 0x7d
    bf1e:	mov.w	r3, lr, lsl #1
    bf22:	adds	r0, #124	; 0x7c
    bf24:	b.n	ba8c <_malloc_r+0x44>
    bf26:	adds	r2, #16
    bf28:	b.n	bc74 <_malloc_r+0x22c>
    bf2a:	cmp	r2, #84	; 0x54
    bf2c:	bhi.n	bf7c <_malloc_r+0x534>
    bf2e:	lsrs	r2, r3, #12
    bf30:	add.w	r1, r2, #111	; 0x6f
    bf34:	lsls	r1, r1, #1
    bf36:	adds	r2, #110	; 0x6e
    bf38:	b.n	bdcc <_malloc_r+0x384>
    bf3a:	ldr	r4, [r7, #8]
    bf3c:	ldr	r2, [r4, #4]
    bf3e:	bic.w	r2, r2, #3
    bf42:	b.n	bd50 <_malloc_r+0x308>
    bf44:	ubfx	r0, sl, #0, #12
    bf48:	cmp	r0, #0
    bf4a:	bne.w	bc9e <_malloc_r+0x256>
    bf4e:	add	r2, r8
    bf50:	ldr	r3, [r7, #8]
    bf52:	orr.w	r2, r2, #1
    bf56:	str	r2, [r3, #4]
    bf58:	b.n	bd34 <_malloc_r+0x2ec>
    bf5a:	movs	r3, #254	; 0xfe
    bf5c:	mov.w	lr, #127	; 0x7f
    bf60:	movs	r0, #126	; 0x7e
    bf62:	b.n	ba8c <_malloc_r+0x44>
    bf64:	movs	r2, #1
    bf66:	mov.w	r9, #0
    bf6a:	b.n	bcf0 <_malloc_r+0x2a8>
    bf6c:	add.w	r1, r4, #8
    bf70:	mov	r0, r6
    bf72:	bl	d290 <_free_r>
    bf76:	ldr.w	r1, [r9]
    bf7a:	b.n	bd34 <_malloc_r+0x2ec>
    bf7c:	cmp.w	r2, #340	; 0x154
    bf80:	bhi.n	bf8e <_malloc_r+0x546>
    bf82:	lsrs	r2, r3, #15
    bf84:	add.w	r1, r2, #120	; 0x78
    bf88:	lsls	r1, r1, #1
    bf8a:	adds	r2, #119	; 0x77
    bf8c:	b.n	bdcc <_malloc_r+0x384>
    bf8e:	movw	r1, #1364	; 0x554
    bf92:	cmp	r2, r1
    bf94:	bhi.n	bfa2 <_malloc_r+0x55a>
    bf96:	lsrs	r2, r3, #18
    bf98:	add.w	r1, r2, #125	; 0x7d
    bf9c:	lsls	r1, r1, #1
    bf9e:	adds	r2, #124	; 0x7c
    bfa0:	b.n	bdcc <_malloc_r+0x384>
    bfa2:	movs	r1, #254	; 0xfe
    bfa4:	movs	r2, #126	; 0x7e
    bfa6:	b.n	bdcc <_malloc_r+0x384>
    bfa8:	ldr	r3, [r7, #4]
    bfaa:	b.n	beb6 <_malloc_r+0x46e>
    bfac:	lsrs	r0, r5, #3
    bfae:	adds	r3, r0, #1
    bfb0:	lsls	r3, r3, #1
    bfb2:	b.n	bba6 <_malloc_r+0x15e>
    bfb4:	.word	0x200087c8

0000bfb8 <__ascii_mbtowc>:
    bfb8:	sub	sp, #8
    bfba:	cbz	r1, bfd0 <__ascii_mbtowc+0x18>
    bfbc:	cbz	r2, bfd6 <__ascii_mbtowc+0x1e>
    bfbe:	cbz	r3, bfdc <__ascii_mbtowc+0x24>
    bfc0:	ldrb	r3, [r2, #0]
    bfc2:	str	r3, [r1, #0]
    bfc4:	ldrb	r2, [r2, #0]
    bfc6:	adds	r0, r2, #0
    bfc8:	it	ne
    bfca:	movne	r0, #1
    bfcc:	add	sp, #8
    bfce:	bx	lr
    bfd0:	add	r1, sp, #4
    bfd2:	cmp	r2, #0
    bfd4:	bne.n	bfbe <__ascii_mbtowc+0x6>
    bfd6:	mov	r0, r2
    bfd8:	add	sp, #8
    bfda:	bx	lr
    bfdc:	mvn.w	r0, #1
    bfe0:	b.n	bfcc <__ascii_mbtowc+0x14>
    bfe2:	nop

0000bfe4 <memcmp>:
    bfe4:	cmp	r2, #3
    bfe6:	push	{r4, r5, r6}
    bfe8:	bls.n	c038 <memcmp+0x54>
    bfea:	orr.w	r3, r0, r1
    bfee:	lsls	r3, r3, #30
    bff0:	beq.n	c016 <memcmp+0x32>
    bff2:	ldrb	r4, [r0, #0]
    bff4:	ldrb	r5, [r1, #0]
    bff6:	cmp	r4, r5
    bff8:	bne.n	c040 <memcmp+0x5c>
    bffa:	add	r2, r0
    bffc:	adds	r3, r0, #1
    bffe:	b.n	c00c <memcmp+0x28>
    c000:	ldrb.w	r4, [r3], #1
    c004:	ldrb.w	r5, [r1, #1]!
    c008:	cmp	r4, r5
    c00a:	bne.n	c040 <memcmp+0x5c>
    c00c:	cmp	r3, r2
    c00e:	bne.n	c000 <memcmp+0x1c>
    c010:	movs	r0, #0
    c012:	pop	{r4, r5, r6}
    c014:	bx	lr
    c016:	mov	r4, r1
    c018:	mov	r3, r0
    c01a:	ldr	r6, [r3, #0]
    c01c:	ldr	r5, [r4, #0]
    c01e:	cmp	r6, r5
    c020:	mov	r0, r3
    c022:	mov	r1, r4
    c024:	add.w	r3, r3, #4
    c028:	add.w	r4, r4, #4
    c02c:	bne.n	bff2 <memcmp+0xe>
    c02e:	subs	r2, #4
    c030:	cmp	r2, #3
    c032:	mov	r0, r3
    c034:	mov	r1, r4
    c036:	bhi.n	c01a <memcmp+0x36>
    c038:	cmp	r2, #0
    c03a:	bne.n	bff2 <memcmp+0xe>
    c03c:	mov	r0, r2
    c03e:	b.n	c012 <memcmp+0x2e>
    c040:	subs	r0, r4, r5
    c042:	pop	{r4, r5, r6}
    c044:	bx	lr
    c046:	nop

0000c048 <memmove>:
    c048:	cmp	r0, r1
    c04a:	push	{r4, r5, r6, r7, lr}
    c04c:	bls.n	c06a <memmove+0x22>
    c04e:	adds	r3, r1, r2
    c050:	cmp	r0, r3
    c052:	bcs.n	c06a <memmove+0x22>
    c054:	adds	r1, r0, r2
    c056:	cmp	r2, #0
    c058:	beq.n	c0fe <memmove+0xb6>
    c05a:	subs	r2, r3, r2
    c05c:	ldrb.w	r4, [r3, #-1]!
    c060:	strb.w	r4, [r1, #-1]!
    c064:	cmp	r3, r2
    c066:	bne.n	c05c <memmove+0x14>
    c068:	pop	{r4, r5, r6, r7, pc}
    c06a:	cmp	r2, #15
    c06c:	bls.n	c100 <memmove+0xb8>
    c06e:	orr.w	r3, r1, r0
    c072:	lsls	r3, r3, #30
    c074:	bne.n	c104 <memmove+0xbc>
    c076:	add.w	r4, r0, #16
    c07a:	add.w	r3, r1, #16
    c07e:	mov	r5, r2
    c080:	ldr.w	r6, [r3, #-16]
    c084:	str.w	r6, [r4, #-16]
    c088:	ldr.w	r6, [r3, #-12]
    c08c:	str.w	r6, [r4, #-12]
    c090:	ldr.w	r6, [r3, #-8]
    c094:	str.w	r6, [r4, #-8]
    c098:	subs	r5, #16
    c09a:	ldr.w	r6, [r3, #-4]
    c09e:	str.w	r6, [r4, #-4]
    c0a2:	cmp	r5, #15
    c0a4:	add.w	r3, r3, #16
    c0a8:	add.w	r4, r4, #16
    c0ac:	bhi.n	c080 <memmove+0x38>
    c0ae:	sub.w	r3, r2, #16
    c0b2:	bic.w	r3, r3, #15
    c0b6:	and.w	lr, r2, #15
    c0ba:	adds	r3, #16
    c0bc:	cmp.w	lr, #3
    c0c0:	add	r1, r3
    c0c2:	add	r3, r0
    c0c4:	bls.n	c10a <memmove+0xc2>
    c0c6:	subs	r6, r3, #4
    c0c8:	mov	r5, r1
    c0ca:	mov	r4, lr
    c0cc:	subs	r4, #4
    c0ce:	ldr.w	r7, [r5], #4
    c0d2:	str.w	r7, [r6, #4]!
    c0d6:	cmp	r4, #3
    c0d8:	bhi.n	c0cc <memmove+0x84>
    c0da:	sub.w	r4, lr, #4
    c0de:	bic.w	r4, r4, #3
    c0e2:	adds	r4, #4
    c0e4:	add	r3, r4
    c0e6:	add	r1, r4
    c0e8:	and.w	r2, r2, #3
    c0ec:	cbz	r2, c108 <memmove+0xc0>
    c0ee:	subs	r3, #1
    c0f0:	add	r2, r1
    c0f2:	ldrb.w	r4, [r1], #1
    c0f6:	strb.w	r4, [r3, #1]!
    c0fa:	cmp	r2, r1
    c0fc:	bne.n	c0f2 <memmove+0xaa>
    c0fe:	pop	{r4, r5, r6, r7, pc}
    c100:	mov	r3, r0
    c102:	b.n	c0ec <memmove+0xa4>
    c104:	mov	r3, r0
    c106:	b.n	c0ee <memmove+0xa6>
    c108:	pop	{r4, r5, r6, r7, pc}
    c10a:	mov	r2, lr
    c10c:	b.n	c0ec <memmove+0xa4>
    c10e:	nop

0000c110 <memset>:
    c110:	push	{r4, r5, r6}
    c112:	lsls	r4, r0, #30
    c114:	beq.n	c1a4 <memset+0x94>
    c116:	subs	r4, r2, #1
    c118:	cmp	r2, #0
    c11a:	beq.n	c1a0 <memset+0x90>
    c11c:	uxtb	r5, r1
    c11e:	mov	r3, r0
    c120:	b.n	c128 <memset+0x18>
    c122:	subs	r2, r4, #1
    c124:	cbz	r4, c1a0 <memset+0x90>
    c126:	mov	r4, r2
    c128:	strb.w	r5, [r3], #1
    c12c:	lsls	r2, r3, #30
    c12e:	bne.n	c122 <memset+0x12>
    c130:	cmp	r4, #3
    c132:	bls.n	c192 <memset+0x82>
    c134:	uxtb	r5, r1
    c136:	orr.w	r5, r5, r5, lsl #8
    c13a:	cmp	r4, #15
    c13c:	orr.w	r5, r5, r5, lsl #16
    c140:	bls.n	c176 <memset+0x66>
    c142:	add.w	r2, r3, #16
    c146:	mov	r6, r4
    c148:	subs	r6, #16
    c14a:	cmp	r6, #15
    c14c:	str.w	r5, [r2, #-16]
    c150:	str.w	r5, [r2, #-12]
    c154:	str.w	r5, [r2, #-8]
    c158:	str.w	r5, [r2, #-4]
    c15c:	add.w	r2, r2, #16
    c160:	bhi.n	c148 <memset+0x38>
    c162:	sub.w	r2, r4, #16
    c166:	bic.w	r2, r2, #15
    c16a:	and.w	r4, r4, #15
    c16e:	adds	r2, #16
    c170:	cmp	r4, #3
    c172:	add	r3, r2
    c174:	bls.n	c192 <memset+0x82>
    c176:	mov	r6, r3
    c178:	mov	r2, r4
    c17a:	subs	r2, #4
    c17c:	cmp	r2, #3
    c17e:	str.w	r5, [r6], #4
    c182:	bhi.n	c17a <memset+0x6a>
    c184:	subs	r2, r4, #4
    c186:	bic.w	r2, r2, #3
    c18a:	adds	r2, #4
    c18c:	add	r3, r2
    c18e:	and.w	r4, r4, #3
    c192:	cbz	r4, c1a0 <memset+0x90>
    c194:	uxtb	r1, r1
    c196:	add	r4, r3
    c198:	strb.w	r1, [r3], #1
    c19c:	cmp	r3, r4
    c19e:	bne.n	c198 <memset+0x88>
    c1a0:	pop	{r4, r5, r6}
    c1a2:	bx	lr
    c1a4:	mov	r4, r2
    c1a6:	mov	r3, r0
    c1a8:	b.n	c130 <memset+0x20>
    c1aa:	nop

0000c1ac <__malloc_lock>:
    c1ac:	bx	lr
    c1ae:	nop

0000c1b0 <__malloc_unlock>:
    c1b0:	bx	lr
    c1b2:	nop

0000c1b4 <realloc>:
    c1b4:	ldr	r3, [pc, #8]	; (c1c0 <realloc+0xc>)
    c1b6:	mov	r2, r1
    c1b8:	mov	r1, r0
    c1ba:	ldr	r0, [r3, #0]
    c1bc:	b.w	c1c4 <_realloc_r>
    c1c0:	.word	0x20008658

0000c1c4 <_realloc_r>:
    c1c4:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    c1c8:	mov	r7, r2
    c1ca:	sub	sp, #12
    c1cc:	cmp	r1, #0
    c1ce:	beq.w	c354 <_realloc_r+0x190>
    c1d2:	mov	r6, r1
    c1d4:	mov	r9, r0
    c1d6:	add.w	r5, r7, #11
    c1da:	bl	c1ac <__malloc_lock>
    c1de:	ldr.w	lr, [r6, #-4]
    c1e2:	cmp	r5, #22
    c1e4:	bic.w	r4, lr, #3
    c1e8:	sub.w	r8, r6, #8
    c1ec:	bhi.n	c270 <_realloc_r+0xac>
    c1ee:	movs	r2, #16
    c1f0:	mov	r5, r2
    c1f2:	cmp	r7, r5
    c1f4:	bhi.n	c27a <_realloc_r+0xb6>
    c1f6:	cmp	r4, r2
    c1f8:	bge.n	c2e6 <_realloc_r+0x122>
    c1fa:	ldr	r3, [pc, #804]	; (c520 <_realloc_r+0x35c>)
    c1fc:	ldr	r1, [r3, #8]
    c1fe:	add.w	r0, r8, r4
    c202:	cmp	r0, r1
    c204:	ldr	r1, [r0, #4]
    c206:	beq.w	c3bc <_realloc_r+0x1f8>
    c20a:	bic.w	r3, r1, #1
    c20e:	add	r3, r0
    c210:	ldr	r3, [r3, #4]
    c212:	lsls	r3, r3, #31
    c214:	bpl.n	c312 <_realloc_r+0x14e>
    c216:	tst.w	lr, #1
    c21a:	beq.n	c288 <_realloc_r+0xc4>
    c21c:	mov	r1, r7
    c21e:	mov	r0, r9
    c220:	bl	ba48 <_malloc_r>
    c224:	mov	r7, r0
    c226:	cbz	r0, c262 <_realloc_r+0x9e>
    c228:	ldr.w	r3, [r6, #-4]
    c22c:	bic.w	r3, r3, #1
    c230:	add	r3, r8
    c232:	sub.w	r2, r0, #8
    c236:	cmp	r2, r3
    c238:	beq.w	c4c4 <_realloc_r+0x300>
    c23c:	subs	r2, r4, #4
    c23e:	cmp	r2, #36	; 0x24
    c240:	bhi.w	c4a6 <_realloc_r+0x2e2>
    c244:	cmp	r2, #19
    c246:	bhi.w	c452 <_realloc_r+0x28e>
    c24a:	mov	r3, r0
    c24c:	mov	r2, r6
    c24e:	ldr	r1, [r2, #0]
    c250:	str	r1, [r3, #0]
    c252:	ldr	r1, [r2, #4]
    c254:	str	r1, [r3, #4]
    c256:	ldr	r2, [r2, #8]
    c258:	str	r2, [r3, #8]
    c25a:	mov	r1, r6
    c25c:	mov	r0, r9
    c25e:	bl	d290 <_free_r>
    c262:	mov	r0, r9
    c264:	bl	c1b0 <__malloc_unlock>
    c268:	mov	r0, r7
    c26a:	add	sp, #12
    c26c:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    c270:	bic.w	r5, r5, #7
    c274:	cmp	r5, #0
    c276:	mov	r2, r5
    c278:	bge.n	c1f2 <_realloc_r+0x2e>
    c27a:	movs	r3, #12
    c27c:	movs	r0, #0
    c27e:	str.w	r3, [r9]
    c282:	add	sp, #12
    c284:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    c288:	ldr.w	r3, [r6, #-8]
    c28c:	rsb	sl, r3, r8
    c290:	ldr.w	r3, [sl, #4]
    c294:	bic.w	ip, r3, #3
    c298:	add.w	r3, r4, ip
    c29c:	cmp	r3, r2
    c29e:	blt.n	c21c <_realloc_r+0x58>
    c2a0:	mov	r7, sl
    c2a2:	ldr.w	r1, [sl, #12]
    c2a6:	ldr.w	r0, [r7, #8]!
    c2aa:	subs	r2, r4, #4
    c2ac:	cmp	r2, #36	; 0x24
    c2ae:	str	r1, [r0, #12]
    c2b0:	str	r0, [r1, #8]
    c2b2:	bhi.w	c4e4 <_realloc_r+0x320>
    c2b6:	cmp	r2, #19
    c2b8:	bls.w	c4e0 <_realloc_r+0x31c>
    c2bc:	ldr	r1, [r6, #0]
    c2be:	str.w	r1, [sl, #8]
    c2c2:	ldr	r1, [r6, #4]
    c2c4:	str.w	r1, [sl, #12]
    c2c8:	cmp	r2, #27
    c2ca:	bhi.w	c524 <_realloc_r+0x360>
    c2ce:	adds	r6, #8
    c2d0:	add.w	r2, sl, #16
    c2d4:	ldr	r1, [r6, #0]
    c2d6:	str	r1, [r2, #0]
    c2d8:	ldr	r1, [r6, #4]
    c2da:	str	r1, [r2, #4]
    c2dc:	ldr	r1, [r6, #8]
    c2de:	str	r1, [r2, #8]
    c2e0:	mov	r6, r7
    c2e2:	mov	r4, r3
    c2e4:	mov	r8, sl
    c2e6:	subs	r3, r4, r5
    c2e8:	cmp	r3, #15
    c2ea:	bhi.n	c328 <_realloc_r+0x164>
    c2ec:	ldr.w	r3, [r8, #4]
    c2f0:	and.w	r3, r3, #1
    c2f4:	orrs	r3, r4
    c2f6:	add	r4, r8
    c2f8:	str.w	r3, [r8, #4]
    c2fc:	ldr	r3, [r4, #4]
    c2fe:	orr.w	r3, r3, #1
    c302:	str	r3, [r4, #4]
    c304:	mov	r0, r9
    c306:	bl	c1b0 <__malloc_unlock>
    c30a:	mov	r0, r6
    c30c:	add	sp, #12
    c30e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    c312:	bic.w	r1, r1, #3
    c316:	add	r1, r4
    c318:	cmp	r1, r2
    c31a:	blt.n	c360 <_realloc_r+0x19c>
    c31c:	ldr	r3, [r0, #12]
    c31e:	ldr	r2, [r0, #8]
    c320:	mov	r4, r1
    c322:	str	r3, [r2, #12]
    c324:	str	r2, [r3, #8]
    c326:	b.n	c2e6 <_realloc_r+0x122>
    c328:	ldr.w	r2, [r8, #4]
    c32c:	add.w	r1, r8, r5
    c330:	and.w	r2, r2, #1
    c334:	orrs	r5, r2
    c336:	orr.w	r2, r3, #1
    c33a:	add	r3, r1
    c33c:	str.w	r5, [r8, #4]
    c340:	str	r2, [r1, #4]
    c342:	ldr	r2, [r3, #4]
    c344:	orr.w	r2, r2, #1
    c348:	adds	r1, #8
    c34a:	str	r2, [r3, #4]
    c34c:	mov	r0, r9
    c34e:	bl	d290 <_free_r>
    c352:	b.n	c304 <_realloc_r+0x140>
    c354:	mov	r1, r2
    c356:	add	sp, #12
    c358:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    c35c:	b.w	ba48 <_malloc_r>
    c360:	tst.w	lr, #1
    c364:	bne.w	c21c <_realloc_r+0x58>
    c368:	ldr.w	r3, [r6, #-8]
    c36c:	rsb	sl, r3, r8
    c370:	ldr.w	r3, [sl, #4]
    c374:	bic.w	ip, r3, #3
    c378:	add.w	lr, r1, ip
    c37c:	cmp	lr, r2
    c37e:	blt.n	c298 <_realloc_r+0xd4>
    c380:	ldr	r3, [r0, #12]
    c382:	ldr	r2, [r0, #8]
    c384:	mov	r7, sl
    c386:	str	r3, [r2, #12]
    c388:	str	r2, [r3, #8]
    c38a:	ldr.w	r1, [r7, #8]!
    c38e:	ldr.w	r3, [sl, #12]
    c392:	str	r3, [r1, #12]
    c394:	subs	r2, r4, #4
    c396:	cmp	r2, #36	; 0x24
    c398:	str	r1, [r3, #8]
    c39a:	bhi.w	c4d0 <_realloc_r+0x30c>
    c39e:	cmp	r2, #19
    c3a0:	bls.n	c468 <_realloc_r+0x2a4>
    c3a2:	ldr	r3, [r6, #0]
    c3a4:	str.w	r3, [sl, #8]
    c3a8:	ldr	r3, [r6, #4]
    c3aa:	str.w	r3, [sl, #12]
    c3ae:	cmp	r2, #27
    c3b0:	bhi.w	c4f4 <_realloc_r+0x330>
    c3b4:	adds	r6, #8
    c3b6:	add.w	r3, sl, #16
    c3ba:	b.n	c46a <_realloc_r+0x2a6>
    c3bc:	bic.w	fp, r1, #3
    c3c0:	add	fp, r4
    c3c2:	add.w	r0, r5, #16
    c3c6:	cmp	fp, r0
    c3c8:	bge.n	c47e <_realloc_r+0x2ba>
    c3ca:	tst.w	lr, #1
    c3ce:	bne.w	c21c <_realloc_r+0x58>
    c3d2:	ldr.w	r1, [r6, #-8]
    c3d6:	rsb	sl, r1, r8
    c3da:	ldr.w	r1, [sl, #4]
    c3de:	bic.w	ip, r1, #3
    c3e2:	add	fp, ip
    c3e4:	cmp	r0, fp
    c3e6:	bgt.w	c298 <_realloc_r+0xd4>
    c3ea:	mov	r7, sl
    c3ec:	ldr.w	r1, [sl, #12]
    c3f0:	ldr.w	r0, [r7, #8]!
    c3f4:	subs	r2, r4, #4
    c3f6:	cmp	r2, #36	; 0x24
    c3f8:	str	r1, [r0, #12]
    c3fa:	str	r0, [r1, #8]
    c3fc:	bhi.w	c568 <_realloc_r+0x3a4>
    c400:	cmp	r2, #19
    c402:	bls.w	c550 <_realloc_r+0x38c>
    c406:	ldr	r1, [r6, #0]
    c408:	str.w	r1, [sl, #8]
    c40c:	ldr	r1, [r6, #4]
    c40e:	str.w	r1, [sl, #12]
    c412:	cmp	r2, #27
    c414:	bhi.w	c576 <_realloc_r+0x3b2>
    c418:	adds	r6, #8
    c41a:	add.w	r2, sl, #16
    c41e:	ldr	r1, [r6, #0]
    c420:	str	r1, [r2, #0]
    c422:	ldr	r1, [r6, #4]
    c424:	str	r1, [r2, #4]
    c426:	ldr	r1, [r6, #8]
    c428:	str	r1, [r2, #8]
    c42a:	add.w	r1, sl, r5
    c42e:	rsb	r2, r5, fp
    c432:	orr.w	r2, r2, #1
    c436:	str	r1, [r3, #8]
    c438:	str	r2, [r1, #4]
    c43a:	ldr.w	r3, [sl, #4]
    c43e:	and.w	r3, r3, #1
    c442:	orrs	r5, r3
    c444:	mov	r0, r9
    c446:	str.w	r5, [sl, #4]
    c44a:	bl	c1b0 <__malloc_unlock>
    c44e:	mov	r0, r7
    c450:	b.n	c30c <_realloc_r+0x148>
    c452:	ldr	r3, [r6, #0]
    c454:	str	r3, [r0, #0]
    c456:	ldr	r3, [r6, #4]
    c458:	str	r3, [r0, #4]
    c45a:	cmp	r2, #27
    c45c:	bhi.n	c4ae <_realloc_r+0x2ea>
    c45e:	add.w	r3, r0, #8
    c462:	add.w	r2, r6, #8
    c466:	b.n	c24e <_realloc_r+0x8a>
    c468:	mov	r3, r7
    c46a:	ldr	r2, [r6, #0]
    c46c:	str	r2, [r3, #0]
    c46e:	ldr	r2, [r6, #4]
    c470:	str	r2, [r3, #4]
    c472:	ldr	r2, [r6, #8]
    c474:	str	r2, [r3, #8]
    c476:	mov	r6, r7
    c478:	mov	r4, lr
    c47a:	mov	r8, sl
    c47c:	b.n	c2e6 <_realloc_r+0x122>
    c47e:	add.w	r1, r8, r5
    c482:	rsb	fp, r5, fp
    c486:	orr.w	r2, fp, #1
    c48a:	str	r1, [r3, #8]
    c48c:	str	r2, [r1, #4]
    c48e:	ldr.w	r3, [r6, #-4]
    c492:	and.w	r3, r3, #1
    c496:	orrs	r5, r3
    c498:	mov	r0, r9
    c49a:	str.w	r5, [r6, #-4]
    c49e:	bl	c1b0 <__malloc_unlock>
    c4a2:	mov	r0, r6
    c4a4:	b.n	c30c <_realloc_r+0x148>
    c4a6:	mov	r1, r6
    c4a8:	bl	c048 <memmove>
    c4ac:	b.n	c25a <_realloc_r+0x96>
    c4ae:	ldr	r3, [r6, #8]
    c4b0:	str	r3, [r0, #8]
    c4b2:	ldr	r3, [r6, #12]
    c4b4:	str	r3, [r0, #12]
    c4b6:	cmp	r2, #36	; 0x24
    c4b8:	beq.n	c50c <_realloc_r+0x348>
    c4ba:	add.w	r3, r0, #16
    c4be:	add.w	r2, r6, #16
    c4c2:	b.n	c24e <_realloc_r+0x8a>
    c4c4:	ldr.w	r3, [r0, #-4]
    c4c8:	bic.w	r3, r3, #3
    c4cc:	add	r4, r3
    c4ce:	b.n	c2e6 <_realloc_r+0x122>
    c4d0:	mov	r1, r6
    c4d2:	mov	r0, r7
    c4d4:	mov	r4, lr
    c4d6:	mov	r8, sl
    c4d8:	bl	c048 <memmove>
    c4dc:	mov	r6, r7
    c4de:	b.n	c2e6 <_realloc_r+0x122>
    c4e0:	mov	r2, r7
    c4e2:	b.n	c2d4 <_realloc_r+0x110>
    c4e4:	mov	r1, r6
    c4e6:	mov	r0, r7
    c4e8:	mov	r4, r3
    c4ea:	mov	r8, sl
    c4ec:	bl	c048 <memmove>
    c4f0:	mov	r6, r7
    c4f2:	b.n	c2e6 <_realloc_r+0x122>
    c4f4:	ldr	r3, [r6, #8]
    c4f6:	str.w	r3, [sl, #16]
    c4fa:	ldr	r3, [r6, #12]
    c4fc:	str.w	r3, [sl, #20]
    c500:	cmp	r2, #36	; 0x24
    c502:	beq.n	c53c <_realloc_r+0x378>
    c504:	adds	r6, #16
    c506:	add.w	r3, sl, #24
    c50a:	b.n	c46a <_realloc_r+0x2a6>
    c50c:	ldr	r3, [r6, #16]
    c50e:	str	r3, [r0, #16]
    c510:	ldr	r3, [r6, #20]
    c512:	str	r3, [r0, #20]
    c514:	add.w	r2, r6, #24
    c518:	add.w	r3, r0, #24
    c51c:	b.n	c24e <_realloc_r+0x8a>
    c51e:	nop
    c520:	.word	0x200087c8
    c524:	ldr	r1, [r6, #8]
    c526:	str.w	r1, [sl, #16]
    c52a:	ldr	r1, [r6, #12]
    c52c:	str.w	r1, [sl, #20]
    c530:	cmp	r2, #36	; 0x24
    c532:	beq.n	c554 <_realloc_r+0x390>
    c534:	adds	r6, #16
    c536:	add.w	r2, sl, #24
    c53a:	b.n	c2d4 <_realloc_r+0x110>
    c53c:	ldr	r3, [r6, #16]
    c53e:	str.w	r3, [sl, #24]
    c542:	ldr	r3, [r6, #20]
    c544:	str.w	r3, [sl, #28]
    c548:	adds	r6, #24
    c54a:	add.w	r3, sl, #32
    c54e:	b.n	c46a <_realloc_r+0x2a6>
    c550:	mov	r2, r7
    c552:	b.n	c41e <_realloc_r+0x25a>
    c554:	ldr	r2, [r6, #16]
    c556:	str.w	r2, [sl, #24]
    c55a:	ldr	r2, [r6, #20]
    c55c:	str.w	r2, [sl, #28]
    c560:	adds	r6, #24
    c562:	add.w	r2, sl, #32
    c566:	b.n	c2d4 <_realloc_r+0x110>
    c568:	mov	r1, r6
    c56a:	mov	r0, r7
    c56c:	str	r3, [sp, #4]
    c56e:	bl	c048 <memmove>
    c572:	ldr	r3, [sp, #4]
    c574:	b.n	c42a <_realloc_r+0x266>
    c576:	ldr	r1, [r6, #8]
    c578:	str.w	r1, [sl, #16]
    c57c:	ldr	r1, [r6, #12]
    c57e:	str.w	r1, [sl, #20]
    c582:	cmp	r2, #36	; 0x24
    c584:	beq.n	c58e <_realloc_r+0x3ca>
    c586:	adds	r6, #16
    c588:	add.w	r2, sl, #24
    c58c:	b.n	c41e <_realloc_r+0x25a>
    c58e:	ldr	r2, [r6, #16]
    c590:	str.w	r2, [sl, #24]
    c594:	ldr	r2, [r6, #20]
    c596:	str.w	r2, [sl, #28]
    c59a:	adds	r6, #24
    c59c:	add.w	r2, sl, #32
    c5a0:	b.n	c41e <_realloc_r+0x25a>
    c5a2:	nop

0000c5a4 <_sbrk_r>:
    c5a4:	push	{r3, r4, r5, lr}
    c5a6:	ldr	r4, [pc, #28]	; (c5c4 <_sbrk_r+0x20>)
    c5a8:	movs	r3, #0
    c5aa:	mov	r5, r0
    c5ac:	mov	r0, r1
    c5ae:	str	r3, [r4, #0]
    c5b0:	bl	7698 <_sbrk>
    c5b4:	adds	r3, r0, #1
    c5b6:	beq.n	c5ba <_sbrk_r+0x16>
    c5b8:	pop	{r3, r4, r5, pc}
    c5ba:	ldr	r3, [r4, #0]
    c5bc:	cmp	r3, #0
    c5be:	beq.n	c5b8 <_sbrk_r+0x14>
    c5c0:	str	r3, [r5, #0]
    c5c2:	pop	{r3, r4, r5, pc}
    c5c4:	.word	0x20012f78

0000c5c8 <strchr>:
    c5c8:	push	{r4, r5, r6}
    c5ca:	ands.w	r4, r1, #255	; 0xff
    c5ce:	beq.n	c63a <strchr+0x72>
    c5d0:	lsls	r5, r0, #30
    c5d2:	beq.n	c5f4 <strchr+0x2c>
    c5d4:	ldrb	r3, [r0, #0]
    c5d6:	cmp	r3, #0
    c5d8:	beq.n	c690 <strchr+0xc8>
    c5da:	cmp	r4, r3
    c5dc:	beq.n	c636 <strchr+0x6e>
    c5de:	adds	r3, r0, #1
    c5e0:	b.n	c5ee <strchr+0x26>
    c5e2:	ldrb.w	r2, [r3], #1
    c5e6:	cmp	r2, #0
    c5e8:	beq.n	c68a <strchr+0xc2>
    c5ea:	cmp	r4, r2
    c5ec:	beq.n	c636 <strchr+0x6e>
    c5ee:	lsls	r2, r3, #30
    c5f0:	mov	r0, r3
    c5f2:	bne.n	c5e2 <strchr+0x1a>
    c5f4:	lsls	r6, r1, #8
    c5f6:	and.w	r6, r6, #65280	; 0xff00
    c5fa:	orrs	r6, r4
    c5fc:	ldr	r3, [r0, #0]
    c5fe:	orr.w	r6, r6, r6, lsl #16
    c602:	b.n	c608 <strchr+0x40>
    c604:	ldr.w	r3, [r0, #4]!
    c608:	eor.w	r5, r6, r3
    c60c:	sub.w	r2, r5, #16843009	; 0x1010101
    c610:	sub.w	r1, r3, #16843009	; 0x1010101
    c614:	bic.w	r2, r2, r5
    c618:	bic.w	r3, r1, r3
    c61c:	orrs	r3, r2
    c61e:	tst.w	r3, #2155905152	; 0x80808080
    c622:	beq.n	c604 <strchr+0x3c>
    c624:	ldrb	r3, [r0, #0]
    c626:	cbnz	r3, c632 <strchr+0x6a>
    c628:	b.n	c690 <strchr+0xc8>
    c62a:	ldrb.w	r3, [r0, #1]!
    c62e:	cmp	r3, #0
    c630:	beq.n	c690 <strchr+0xc8>
    c632:	cmp	r4, r3
    c634:	bne.n	c62a <strchr+0x62>
    c636:	pop	{r4, r5, r6}
    c638:	bx	lr
    c63a:	lsls	r4, r0, #30
    c63c:	beq.n	c656 <strchr+0x8e>
    c63e:	ldrb	r3, [r0, #0]
    c640:	cmp	r3, #0
    c642:	beq.n	c636 <strchr+0x6e>
    c644:	adds	r3, r0, #1
    c646:	b.n	c650 <strchr+0x88>
    c648:	ldrb	r2, [r0, #0]
    c64a:	adds	r3, #1
    c64c:	cmp	r2, #0
    c64e:	beq.n	c636 <strchr+0x6e>
    c650:	lsls	r1, r3, #30
    c652:	mov	r0, r3
    c654:	bne.n	c648 <strchr+0x80>
    c656:	ldr	r2, [r0, #0]
    c658:	sub.w	r3, r2, #16843009	; 0x1010101
    c65c:	bic.w	r3, r3, r2
    c660:	tst.w	r3, #2155905152	; 0x80808080
    c664:	bne.n	c678 <strchr+0xb0>
    c666:	ldr.w	r2, [r0, #4]!
    c66a:	sub.w	r3, r2, #16843009	; 0x1010101
    c66e:	bic.w	r3, r3, r2
    c672:	tst.w	r3, #2155905152	; 0x80808080
    c676:	beq.n	c666 <strchr+0x9e>
    c678:	ldrb	r3, [r0, #0]
    c67a:	cmp	r3, #0
    c67c:	beq.n	c636 <strchr+0x6e>
    c67e:	ldrb.w	r3, [r0, #1]!
    c682:	cmp	r3, #0
    c684:	bne.n	c67e <strchr+0xb6>
    c686:	pop	{r4, r5, r6}
    c688:	bx	lr
    c68a:	mov	r0, r2
    c68c:	pop	{r4, r5, r6}
    c68e:	bx	lr
    c690:	mov	r0, r3
    c692:	pop	{r4, r5, r6}
    c694:	bx	lr
    c696:	nop
    c698:			; <UNDEFINED> instruction: 0xffffffff
    c69c:			; <UNDEFINED> instruction: 0xffffffff
    c6a0:	sub.w	r0, r2, r3
    c6a4:	bx	lr
    c6a6:	nop

0000c6a8 <strcmp>:
    c6a8:	ldrb	r2, [r0, #0]
    c6aa:	ldrb	r3, [r1, #0]
    c6ac:	cmp	r2, #1
    c6ae:	it	cs
    c6b0:	cmpcs	r2, r3
    c6b2:	bne.n	c6a0 <strchr+0xd8>
    c6b4:	strd	r4, r5, [sp, #-16]!
    c6b8:	orr.w	r4, r0, r1
    c6bc:	strd	r6, r7, [sp, #8]
    c6c0:	mvn.w	ip, #0
    c6c4:	mov.w	r2, r4, lsl #29
    c6c8:	cbz	r2, c710 <strcmp+0x68>
    c6ca:	eor.w	r4, r0, r1
    c6ce:	tst.w	r4, #7
    c6d2:	bne.n	c7aa <strcmp+0x102>
    c6d4:	and.w	r4, r0, #7
    c6d8:	bic.w	r0, r0, #7
    c6dc:	and.w	r5, r4, #3
    c6e0:	bic.w	r1, r1, #7
    c6e4:	mov.w	r5, r5, lsl #3
    c6e8:	ldrd	r2, r3, [r0], #16
    c6ec:	tst.w	r4, #4
    c6f0:	ldrd	r6, r7, [r1], #16
    c6f4:	lsl.w	r4, ip, r5
    c6f8:	orn	r2, r2, r4
    c6fc:	orn	r6, r6, r4
    c700:	beq.n	c718 <strcmp+0x70>
    c702:	orn	r3, r3, r4
    c706:	mov	r2, ip
    c708:	orn	r7, r7, r4
    c70c:	mov	r6, ip
    c70e:	b.n	c718 <strcmp+0x70>
    c710:	ldrd	r2, r3, [r0], #16
    c714:	ldrd	r6, r7, [r1], #16
    c718:	uadd8	r5, r2, ip
    c71c:	eor.w	r4, r2, r6
    c720:	sel	r4, r4, ip
    c724:	cbnz	r4, c782 <strcmp+0xda>
    c726:	uadd8	r5, r3, ip
    c72a:	eor.w	r5, r3, r7
    c72e:	sel	r5, r5, ip
    c732:	cbnz	r5, c75a <strcmp+0xb2>
    c734:	ldrd	r2, r3, [r0, #-8]
    c738:	ldrd	r6, r7, [r1, #-8]
    c73c:	uadd8	r5, r2, ip
    c740:	eor.w	r4, r2, r6
    c744:	sel	r4, r4, ip
    c748:	uadd8	r5, r3, ip
    c74c:	eor.w	r5, r3, r7
    c750:	sel	r5, r5, ip
    c754:	orrs	r5, r4
    c756:	beq.n	c710 <strcmp+0x68>
    c758:	cbnz	r4, c782 <strcmp+0xda>
    c75a:	rev	r5, r5
    c75c:	clz	r4, r5
    c760:	bic.w	r4, r4, #7
    c764:	lsr.w	r1, r7, r4
    c768:	ldrd	r6, r7, [sp, #8]
    c76c:	lsr.w	r3, r3, r4
    c770:	and.w	r0, r3, #255	; 0xff
    c774:	and.w	r1, r1, #255	; 0xff
    c778:	ldrd	r4, r5, [sp], #16
    c77c:	sub.w	r0, r0, r1
    c780:	bx	lr
    c782:	rev	r4, r4
    c784:	clz	r4, r4
    c788:	bic.w	r4, r4, #7
    c78c:	lsr.w	r1, r6, r4
    c790:	ldrd	r6, r7, [sp, #8]
    c794:	lsr.w	r2, r2, r4
    c798:	and.w	r0, r2, #255	; 0xff
    c79c:	and.w	r1, r1, #255	; 0xff
    c7a0:	ldrd	r4, r5, [sp], #16
    c7a4:	sub.w	r0, r0, r1
    c7a8:	bx	lr
    c7aa:	tst.w	r4, #3
    c7ae:	bne.n	c82a <strcmp+0x182>
    c7b0:	ands.w	r4, r0, #3
    c7b4:	bne.n	c808 <strcmp+0x160>
    c7b6:	ldr.w	r2, [r0], #8
    c7ba:	ldr.w	r3, [r1], #8
    c7be:	uadd8	r5, r2, ip
    c7c2:	eor.w	r5, r2, r3
    c7c6:	sel	r5, r5, ip
    c7ca:	cbnz	r5, c7e4 <strcmp+0x13c>
    c7cc:	ldr.w	r2, [r0, #-4]
    c7d0:	ldr.w	r3, [r1, #-4]
    c7d4:	uadd8	r5, r2, ip
    c7d8:	eor.w	r5, r2, r3
    c7dc:	sel	r5, r5, ip
    c7e0:	cmp	r5, #0
    c7e2:	beq.n	c7b6 <strcmp+0x10e>
    c7e4:	rev	r5, r5
    c7e6:	clz	r4, r5
    c7ea:	bic.w	r4, r4, #7
    c7ee:	lsr.w	r1, r3, r4
    c7f2:	lsr.w	r2, r2, r4
    c7f6:	and.w	r0, r2, #255	; 0xff
    c7fa:	and.w	r1, r1, #255	; 0xff
    c7fe:	ldrd	r4, r5, [sp], #16
    c802:	sub.w	r0, r0, r1
    c806:	bx	lr
    c808:	mov.w	r4, r4, lsl #3
    c80c:	bic.w	r0, r0, #3
    c810:	ldr.w	r2, [r0], #8
    c814:	bic.w	r1, r1, #3
    c818:	ldr.w	r3, [r1], #8
    c81c:	lsl.w	r4, ip, r4
    c820:	orn	r2, r2, r4
    c824:	orn	r3, r3, r4
    c828:	b.n	c7be <strcmp+0x116>
    c82a:	ands.w	r4, r0, #3
    c82e:	beq.n	c866 <strcmp+0x1be>
    c830:	sub.w	r1, r1, r4
    c834:	bic.w	r0, r0, #3
    c838:	lsls	r4, r4, #31
    c83a:	ldr.w	r2, [r0], #4
    c83e:	beq.n	c84e <strcmp+0x1a6>
    c840:	bcs.n	c862 <strcmp+0x1ba>
    c842:	ldrb	r3, [r1, #2]
    c844:	uxtb.w	r4, r2, ror #16
    c848:	subs	r4, r4, r3
    c84a:	bne.n	c85a <strcmp+0x1b2>
    c84c:	cbz	r3, c85a <strcmp+0x1b2>
    c84e:	ldrb	r3, [r1, #3]
    c850:	uxtb.w	r4, r2, ror #24
    c854:	subs	r4, r4, r3
    c856:	bne.n	c85a <strcmp+0x1b2>
    c858:	cbnz	r3, c862 <strcmp+0x1ba>
    c85a:	mov	r0, r4
    c85c:	ldr.w	r4, [sp], #16
    c860:	bx	lr
    c862:	add.w	r1, r1, #4
    c866:	ldr.w	r2, [r0], #4
    c86a:	lsls	r4, r1, #31
    c86c:	bic.w	r1, r1, #3
    c870:	ldr.w	r3, [r1], #4
    c874:	bhi.n	c908 <strcmp+0x260>
    c876:	bcs.n	c8c2 <strcmp+0x21a>
    c878:	bic.w	r4, r2, #4278190080	; 0xff000000
    c87c:	uadd8	r5, r2, ip
    c880:	eors.w	r5, r4, r3, lsr #8
    c884:	sel	r5, r5, ip
    c888:	bne.n	c8a0 <strcmp+0x1f8>
    c88a:	cbnz	r5, c8a6 <strcmp+0x1fe>
    c88c:	ldr.w	r3, [r1], #4
    c890:	eor.w	r4, r4, r2
    c894:	cmp.w	r4, r3, lsl #24
    c898:	bne.n	c8b8 <strcmp+0x210>
    c89a:	ldr.w	r2, [r0], #4
    c89e:	b.n	c878 <strcmp+0x1d0>
    c8a0:	mov.w	r3, r3, lsr #8
    c8a4:	b.n	c952 <strcmp+0x2aa>
    c8a6:	bics.w	r5, r5, #4278190080	; 0xff000000
    c8aa:	bne.n	c948 <strcmp+0x2a0>
    c8ac:	ldrb	r0, [r1, #0]
    c8ae:	ldrd	r4, r5, [sp], #16
    c8b2:	rsb	r0, r0, #0
    c8b6:	bx	lr
    c8b8:	mov.w	r2, r2, lsr #24
    c8bc:	and.w	r3, r3, #255	; 0xff
    c8c0:	b.n	c952 <strcmp+0x2aa>
    c8c2:	and.w	r4, r2, ip, lsr #16
    c8c6:	uadd8	r5, r2, ip
    c8ca:	eors.w	r5, r4, r3, lsr #16
    c8ce:	sel	r5, r5, ip
    c8d2:	bne.n	c8ea <strcmp+0x242>
    c8d4:	cbnz	r5, c8f0 <strcmp+0x248>
    c8d6:	ldr.w	r3, [r1], #4
    c8da:	eor.w	r4, r4, r2
    c8de:	cmp.w	r4, r3, lsl #16
    c8e2:	bne.n	c8fe <strcmp+0x256>
    c8e4:	ldr.w	r2, [r0], #4
    c8e8:	b.n	c8c2 <strcmp+0x21a>
    c8ea:	mov.w	r3, r3, lsr #16
    c8ee:	b.n	c952 <strcmp+0x2aa>
    c8f0:	ands.w	r5, r5, ip, lsr #16
    c8f4:	bne.n	c948 <strcmp+0x2a0>
    c8f6:	ldrh	r3, [r1, #0]
    c8f8:	mov.w	r2, r2, lsr #16
    c8fc:	b.n	c952 <strcmp+0x2aa>
    c8fe:	mov.w	r2, r2, lsr #16
    c902:	and.w	r3, r3, ip, lsr #16
    c906:	b.n	c952 <strcmp+0x2aa>
    c908:	and.w	r4, r2, #255	; 0xff
    c90c:	uadd8	r5, r2, ip
    c910:	eors.w	r5, r4, r3, lsr #24
    c914:	sel	r5, r5, ip
    c918:	bne.n	c930 <strcmp+0x288>
    c91a:	cbnz	r5, c936 <strcmp+0x28e>
    c91c:	ldr.w	r3, [r1], #4
    c920:	eor.w	r4, r4, r2
    c924:	cmp.w	r4, r3, lsl #8
    c928:	bne.n	c93e <strcmp+0x296>
    c92a:	ldr.w	r2, [r0], #4
    c92e:	b.n	c908 <strcmp+0x260>
    c930:	mov.w	r3, r3, lsr #24
    c934:	b.n	c952 <strcmp+0x2aa>
    c936:	tst.w	r5, #255	; 0xff
    c93a:	bne.n	c948 <strcmp+0x2a0>
    c93c:	ldr	r3, [r1, #0]
    c93e:	mov.w	r2, r2, lsr #8
    c942:	bic.w	r3, r3, #4278190080	; 0xff000000
    c946:	b.n	c952 <strcmp+0x2aa>
    c948:	mov.w	r0, #0
    c94c:	ldrd	r4, r5, [sp], #16
    c950:	bx	lr
    c952:	rev	r2, r2
    c954:	rev	r3, r3
    c956:	uadd8	r4, r2, ip
    c95a:	eor.w	r4, r2, r3
    c95e:	sel	r5, r4, ip
    c962:	clz	r4, r5
    c966:	lsl.w	r2, r2, r4
    c96a:	lsl.w	r3, r3, r4
    c96e:	mov.w	r0, r2, lsr #24
    c972:	ldrd	r4, r5, [sp], #16
    c976:	sub.w	r0, r0, r3, lsr #24
    c97a:	bx	lr

0000c97c <strcpy>:
    c97c:	eor.w	r2, r0, r1
    c980:	mov	ip, r0
    c982:	tst.w	r2, #3
    c986:	bne.n	ca28 <strcpy+0xac>
    c988:	tst.w	r1, #3
    c98c:	bne.n	c9f4 <strcpy+0x78>
    c98e:	str.w	r4, [sp, #-4]!
    c992:	tst.w	r1, #4
    c996:	ldr.w	r3, [r1], #4
    c99a:	beq.n	c9b4 <strcpy+0x38>
    c99c:	sub.w	r2, r3, #16843009	; 0x1010101
    c9a0:	bics	r2, r3
    c9a2:	tst.w	r2, #2155905152	; 0x80808080
    c9a6:	itt	eq
    c9a8:	streq.w	r3, [ip], #4
    c9ac:	ldreq.w	r3, [r1], #4
    c9b0:	bne.n	c9e0 <strcpy+0x64>
    c9b2:	nop
    c9b4:	ldr.w	r4, [r1], #4
    c9b8:	sub.w	r2, r3, #16843009	; 0x1010101
    c9bc:	bics	r2, r3
    c9be:	tst.w	r2, #2155905152	; 0x80808080
    c9c2:	sub.w	r2, r4, #16843009	; 0x1010101
    c9c6:	bne.n	c9e0 <strcpy+0x64>
    c9c8:	str.w	r3, [ip], #4
    c9cc:	bics	r2, r4
    c9ce:	tst.w	r2, #2155905152	; 0x80808080
    c9d2:	itt	eq
    c9d4:	ldreq.w	r3, [r1], #4
    c9d8:	streq.w	r4, [ip], #4
    c9dc:	beq.n	c9b4 <strcpy+0x38>
    c9de:	mov	r3, r4
    c9e0:	strb.w	r3, [ip], #1
    c9e4:	tst.w	r3, #255	; 0xff
    c9e8:	mov.w	r3, r3, ror #8
    c9ec:	bne.n	c9e0 <strcpy+0x64>
    c9ee:	ldr.w	r4, [sp], #4
    c9f2:	bx	lr
    c9f4:	tst.w	r1, #1
    c9f8:	beq.n	ca08 <strcpy+0x8c>
    c9fa:	ldrb.w	r2, [r1], #1
    c9fe:	strb.w	r2, [ip], #1
    ca02:	cmp	r2, #0
    ca04:	it	eq
    ca06:	bxeq	lr
    ca08:	tst.w	r1, #2
    ca0c:	beq.n	c98e <strcpy+0x12>
    ca0e:	ldrh.w	r2, [r1], #2
    ca12:	tst.w	r2, #255	; 0xff
    ca16:	itet	ne
    ca18:	strhne.w	r2, [ip], #2
    ca1c:	strbeq.w	r2, [ip]
    ca20:	tstne.w	r2, #65280	; 0xff00
    ca24:	bne.n	c98e <strcpy+0x12>
    ca26:	bx	lr
    ca28:	ldrb.w	r2, [r1], #1
    ca2c:	strb.w	r2, [ip], #1
    ca30:	cmp	r2, #0
    ca32:	bne.n	ca28 <strcpy+0xac>
    ca34:	bx	lr
    ca36:	nop
    ca38:			; <UNDEFINED> instruction: 0xffffffff
    ca3c:			; <UNDEFINED> instruction: 0xffffffff

0000ca40 <strlen>:
    ca40:	pld	[r0]
    ca44:	strd	r4, r5, [sp, #-8]!
    ca48:	bic.w	r1, r0, #7
    ca4c:	mvn.w	ip, #0
    ca50:	ands.w	r4, r0, #7
    ca54:	pld	[r1, #32]
    ca58:	bne.w	caee <strlen+0xae>
    ca5c:	mov.w	r4, #0
    ca60:	mvn.w	r0, #7
    ca64:	ldrd	r2, r3, [r1]
    ca68:	pld	[r1, #64]	; 0x40
    ca6c:	add.w	r0, r0, #8
    ca70:	uadd8	r2, r2, ip
    ca74:	sel	r2, r4, ip
    ca78:	uadd8	r3, r3, ip
    ca7c:	sel	r3, r2, ip
    ca80:	cbnz	r3, cad6 <strlen+0x96>
    ca82:	ldrd	r2, r3, [r1, #8]
    ca86:	uadd8	r2, r2, ip
    ca8a:	add.w	r0, r0, #8
    ca8e:	sel	r2, r4, ip
    ca92:	uadd8	r3, r3, ip
    ca96:	sel	r3, r2, ip
    ca9a:	cbnz	r3, cad6 <strlen+0x96>
    ca9c:	ldrd	r2, r3, [r1, #16]
    caa0:	uadd8	r2, r2, ip
    caa4:	add.w	r0, r0, #8
    caa8:	sel	r2, r4, ip
    caac:	uadd8	r3, r3, ip
    cab0:	sel	r3, r2, ip
    cab4:	cbnz	r3, cad6 <strlen+0x96>
    cab6:	ldrd	r2, r3, [r1, #24]
    caba:	add.w	r1, r1, #32
    cabe:	uadd8	r2, r2, ip
    cac2:	add.w	r0, r0, #8
    cac6:	sel	r2, r4, ip
    caca:	uadd8	r3, r3, ip
    cace:	sel	r3, r2, ip
    cad2:	cmp	r3, #0
    cad4:	beq.n	ca64 <strlen+0x24>
    cad6:	cmp	r2, #0
    cad8:	itt	eq
    cada:	addeq	r0, #4
    cadc:	moveq	r2, r3
    cade:	rev	r2, r2
    cae0:	clz	r2, r2
    cae4:	ldrd	r4, r5, [sp], #8
    cae8:	add.w	r0, r0, r2, lsr #3
    caec:	bx	lr
    caee:	ldrd	r2, r3, [r1]
    caf2:	and.w	r5, r4, #3
    caf6:	rsb	r0, r4, #0
    cafa:	mov.w	r5, r5, lsl #3
    cafe:	tst.w	r4, #4
    cb02:	pld	[r1, #64]	; 0x40
    cb06:	lsl.w	r5, ip, r5
    cb0a:	orn	r2, r2, r5
    cb0e:	itt	ne
    cb10:	ornne	r3, r3, r5
    cb14:	movne	r2, ip
    cb16:	mov.w	r4, #0
    cb1a:	b.n	ca70 <strlen+0x30>

0000cb1c <strncpy>:
    cb1c:	orr.w	r3, r0, r1
    cb20:	lsls	r3, r3, #30
    cb22:	push	{r4, r5, r6}
    cb24:	bne.n	cb7e <strncpy+0x62>
    cb26:	cmp	r2, #3
    cb28:	bls.n	cb7e <strncpy+0x62>
    cb2a:	mov	r4, r1
    cb2c:	mov	r3, r0
    cb2e:	mov	r1, r4
    cb30:	ldr.w	r6, [r4], #4
    cb34:	sub.w	r5, r6, #16843009	; 0x1010101
    cb38:	bic.w	r5, r5, r6
    cb3c:	tst.w	r5, #2155905152	; 0x80808080
    cb40:	bne.n	cb50 <strncpy+0x34>
    cb42:	subs	r2, #4
    cb44:	cmp	r2, #3
    cb46:	str.w	r6, [r3], #4
    cb4a:	mov	r1, r4
    cb4c:	bhi.n	cb2e <strncpy+0x12>
    cb4e:	cbz	r2, cb7a <strncpy+0x5e>
    cb50:	ldrb	r4, [r1, #0]
    cb52:	strb	r4, [r3, #0]
    cb54:	subs	r2, #1
    cb56:	adds	r3, #1
    cb58:	adds	r1, #1
    cb5a:	cbz	r4, cb6c <strncpy+0x50>
    cb5c:	cbz	r2, cb7a <strncpy+0x5e>
    cb5e:	ldrb.w	r4, [r1], #1
    cb62:	strb.w	r4, [r3], #1
    cb66:	subs	r2, #1
    cb68:	cmp	r4, #0
    cb6a:	bne.n	cb5c <strncpy+0x40>
    cb6c:	cbz	r2, cb7a <strncpy+0x5e>
    cb6e:	add	r2, r3
    cb70:	movs	r1, #0
    cb72:	strb.w	r1, [r3], #1
    cb76:	cmp	r2, r3
    cb78:	bne.n	cb72 <strncpy+0x56>
    cb7a:	pop	{r4, r5, r6}
    cb7c:	bx	lr
    cb7e:	mov	r3, r0
    cb80:	b.n	cb4e <strncpy+0x32>
    cb82:	nop

0000cb84 <critical_factorization>:
    cb84:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    cb88:	mov.w	lr, #1
    cb8c:	mov	r4, lr
    cb8e:	movs	r5, #0
    cb90:	mov.w	r6, #4294967295
    cb94:	adds	r3, r5, r4
    cb96:	cmp	r3, r1
    cb98:	add.w	r7, r0, r6
    cb9c:	bcs.n	cbba <critical_factorization+0x36>
    cb9e:	ldrb	r7, [r7, r4]
    cba0:	ldrb.w	ip, [r0, r3]
    cba4:	cmp	ip, r7
    cba6:	bcs.n	cc04 <critical_factorization+0x80>
    cba8:	mov	r5, r3
    cbaa:	movs	r4, #1
    cbac:	rsb	lr, r6, r3
    cbb0:	adds	r3, r5, r4
    cbb2:	cmp	r3, r1
    cbb4:	add.w	r7, r0, r6
    cbb8:	bcc.n	cb9e <critical_factorization+0x1a>
    cbba:	mov.w	r8, #1
    cbbe:	str.w	lr, [r2]
    cbc2:	mov	r4, r8
    cbc4:	movs	r5, #0
    cbc6:	mov.w	r7, #4294967295
    cbca:	adds	r3, r5, r4
    cbcc:	cmp	r1, r3
    cbce:	add.w	lr, r0, r7
    cbd2:	bls.n	cbf2 <critical_factorization+0x6e>
    cbd4:	ldrb.w	lr, [lr, r4]
    cbd8:	ldrb.w	ip, [r0, r3]
    cbdc:	cmp	ip, lr
    cbde:	bls.n	cc12 <critical_factorization+0x8e>
    cbe0:	mov	r5, r3
    cbe2:	movs	r4, #1
    cbe4:	rsb	r8, r7, r3
    cbe8:	adds	r3, r5, r4
    cbea:	cmp	r1, r3
    cbec:	add.w	lr, r0, r7
    cbf0:	bhi.n	cbd4 <critical_factorization+0x50>
    cbf2:	adds	r7, #1
    cbf4:	adds	r0, r6, #1
    cbf6:	cmp	r7, r0
    cbf8:	itt	cs
    cbfa:	strcs.w	r8, [r2]
    cbfe:	movcs	r0, r7
    cc00:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    cc04:	beq.n	cc20 <critical_factorization+0x9c>
    cc06:	mov.w	lr, #1
    cc0a:	mov	r6, r5
    cc0c:	mov	r4, lr
    cc0e:	add	r5, lr
    cc10:	b.n	cb94 <critical_factorization+0x10>
    cc12:	beq.n	cc2e <critical_factorization+0xaa>
    cc14:	mov.w	r8, #1
    cc18:	mov	r7, r5
    cc1a:	mov	r4, r8
    cc1c:	add	r5, r8
    cc1e:	b.n	cbca <critical_factorization+0x46>
    cc20:	cmp	r4, lr
    cc22:	itett	eq
    cc24:	moveq	lr, r4
    cc26:	addne	r4, #1
    cc28:	moveq	r5, r3
    cc2a:	moveq	r4, #1
    cc2c:	b.n	cb94 <critical_factorization+0x10>
    cc2e:	cmp	r4, r8
    cc30:	itett	eq
    cc32:	moveq	r8, r4
    cc34:	addne	r4, #1
    cc36:	moveq	r5, r3
    cc38:	moveq	r4, #1
    cc3a:	b.n	cbca <critical_factorization+0x46>

0000cc3c <two_way_long_needle>:
    cc3c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    cc40:	subw	sp, sp, #1044	; 0x414
    cc44:	mov	r6, r2
    cc46:	mov	r5, r0
    cc48:	mov	fp, r1
    cc4a:	mov	r0, r2
    cc4c:	mov	r1, r3
    cc4e:	add	r2, sp, #12
    cc50:	mov	r4, r3
    cc52:	bl	cb84 <critical_factorization>
    cc56:	add	r3, sp, #12
    cc58:	mov	r9, r0
    cc5a:	addw	r2, sp, #1036	; 0x40c
    cc5e:	str.w	r4, [r3, #4]!
    cc62:	cmp	r3, r2
    cc64:	bne.n	cc5e <two_way_long_needle+0x22>
    cc66:	cbz	r4, cc7c <two_way_long_needle+0x40>
    cc68:	subs	r3, r4, #1
    cc6a:	mov	r2, r6
    cc6c:	add	r0, sp, #16
    cc6e:	ldrb.w	r1, [r2], #1
    cc72:	str.w	r3, [r0, r1, lsl #2]
    cc76:	adds.w	r3, r3, #4294967295
    cc7a:	bcs.n	cc6e <two_way_long_needle+0x32>
    cc7c:	ldr	r1, [sp, #12]
    cc7e:	mov	r2, r9
    cc80:	add	r1, r6
    cc82:	mov	r0, r6
    cc84:	bl	bfe4 <memcmp>
    cc88:	cmp	r0, #0
    cc8a:	bne.n	cd70 <two_way_long_needle+0x134>
    cc8c:	add.w	r3, r9, #4294967295
    cc90:	str	r3, [sp, #0]
    cc92:	adds	r3, r6, r3
    cc94:	mov	sl, r0
    cc96:	str	r3, [sp, #4]
    cc98:	mov	r3, r4
    cc9a:	mov	r8, r0
    cc9c:	mov	r4, sl
    cc9e:	mov	r0, fp
    cca0:	mov	sl, r3
    cca2:	add.w	r7, r8, sl
    cca6:	subs	r2, r7, r0
    cca8:	movs	r1, #0
    ccaa:	add	r0, r5
    ccac:	bl	d480 <memchr>
    ccb0:	cmp	r0, #0
    ccb2:	bne.n	cd66 <two_way_long_needle+0x12a>
    ccb4:	cmp	r7, #0
    ccb6:	beq.n	cd66 <two_way_long_needle+0x12a>
    ccb8:	adds	r3, r5, r7
    ccba:	add	r2, sp, #16
    ccbc:	ldrb.w	r3, [r3, #-1]
    ccc0:	ldr.w	r3, [r2, r3, lsl #2]
    ccc4:	cbz	r3, ccda <two_way_long_needle+0x9e>
    ccc6:	cbz	r4, ccd2 <two_way_long_needle+0x96>
    ccc8:	ldr	r2, [sp, #12]
    ccca:	cmp	r3, r2
    cccc:	bcs.n	ccd2 <two_way_long_needle+0x96>
    ccce:	rsb	r3, r2, sl
    ccd2:	add	r8, r3
    ccd4:	movs	r4, #0
    ccd6:	mov	r0, r7
    ccd8:	b.n	cca2 <two_way_long_needle+0x66>
    ccda:	cmp	r4, r9
    ccdc:	mov	r3, r4
    ccde:	add.w	lr, sl, #4294967295
    cce2:	it	cc
    cce4:	movcc	r3, r9
    cce6:	cmp	r3, lr
    cce8:	bcs.n	cd12 <two_way_long_needle+0xd6>
    ccea:	add.w	r2, r8, r3
    ccee:	ldrb.w	ip, [r6, r3]
    ccf2:	ldrb	r0, [r5, r2]
    ccf4:	cmp	ip, r0
    ccf6:	add	r2, r5
    ccf8:	add.w	r1, r6, r3
    ccfc:	beq.n	cd0c <two_way_long_needle+0xd0>
    ccfe:	b.n	cd5e <two_way_long_needle+0x122>
    cd00:	ldrb.w	ip, [r1, #1]!
    cd04:	ldrb.w	r0, [r2, #1]!
    cd08:	cmp	ip, r0
    cd0a:	bne.n	cd5e <two_way_long_needle+0x122>
    cd0c:	adds	r3, #1
    cd0e:	cmp	r3, lr
    cd10:	bcc.n	cd00 <two_way_long_needle+0xc4>
    cd12:	cmp	r4, r9
    cd14:	ldr	r1, [sp, #0]
    cd16:	bcs.w	ce30 <two_way_long_needle+0x1f4>
    cd1a:	ldr	r3, [sp, #0]
    cd1c:	ldr	r0, [sp, #4]
    cd1e:	add.w	r2, r8, r3
    cd22:	ldrb	r3, [r0, #0]
    cd24:	ldrb	r0, [r5, r2]
    cd26:	cmp	r3, r0
    cd28:	add	r2, r5
    cd2a:	bne.w	ce30 <two_way_long_needle+0x1f4>
    cd2e:	ldr	r3, [sp, #4]
    cd30:	add.w	fp, r6, r4
    cd34:	b.n	cd44 <two_way_long_needle+0x108>
    cd36:	ldrb.w	lr, [r3, #-1]!
    cd3a:	ldrb.w	r0, [r2, #-1]!
    cd3e:	cmp	lr, r0
    cd40:	bne.n	cd4c <two_way_long_needle+0x110>
    cd42:	mov	r1, ip
    cd44:	cmp	fp, r3
    cd46:	add.w	ip, r1, #4294967295
    cd4a:	bne.n	cd36 <two_way_long_needle+0xfa>
    cd4c:	adds	r4, #1
    cd4e:	cmp	r4, r1
    cd50:	bhi.n	ce34 <two_way_long_needle+0x1f8>
    cd52:	ldr	r4, [sp, #12]
    cd54:	mov	r0, r7
    cd56:	add	r8, r4
    cd58:	rsb	r4, r4, sl
    cd5c:	b.n	cca2 <two_way_long_needle+0x66>
    cd5e:	rsb	r2, r9, #1
    cd62:	add	r8, r2
    cd64:	b.n	ccd2 <two_way_long_needle+0x96>
    cd66:	movs	r0, #0
    cd68:	addw	sp, sp, #1044	; 0x414
    cd6c:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    cd70:	rsb	r3, r9, r4
    cd74:	cmp	r3, r9
    cd76:	it	cc
    cd78:	movcc	r3, r9
    cd7a:	adds	r3, #1
    cd7c:	add.w	r8, r9, #4294967295
    cd80:	str	r3, [sp, #12]
    cd82:	add.w	r3, r6, r8
    cd86:	mov	r0, fp
    cd88:	mov.w	sl, #0
    cd8c:	mov	fp, r9
    cd8e:	mov	r9, r3
    cd90:	add.w	r7, sl, r4
    cd94:	subs	r2, r7, r0
    cd96:	movs	r1, #0
    cd98:	add	r0, r5
    cd9a:	bl	d480 <memchr>
    cd9e:	cmp	r0, #0
    cda0:	bne.n	cd66 <two_way_long_needle+0x12a>
    cda2:	cmp	r7, #0
    cda4:	beq.n	cd66 <two_way_long_needle+0x12a>
    cda6:	adds	r3, r5, r7
    cda8:	add	r2, sp, #16
    cdaa:	ldrb.w	r3, [r3, #-1]
    cdae:	ldr.w	r3, [r2, r3, lsl #2]
    cdb2:	cbnz	r3, ce1e <two_way_long_needle+0x1e2>
    cdb4:	subs	r1, r4, #1
    cdb6:	cmp	fp, r1
    cdb8:	bcs.n	cde6 <two_way_long_needle+0x1aa>
    cdba:	add.w	r2, sl, fp
    cdbe:	ldrb.w	r3, [r6, fp]
    cdc2:	ldrb.w	lr, [r5, r2]
    cdc6:	cmp	lr, r3
    cdc8:	add	r2, r5
    cdca:	add.w	r0, r6, fp
    cdce:	mov	r3, fp
    cdd0:	beq.n	cde0 <two_way_long_needle+0x1a4>
    cdd2:	b.n	ce24 <two_way_long_needle+0x1e8>
    cdd4:	ldrb.w	ip, [r0, #1]!
    cdd8:	ldrb.w	lr, [r2, #1]!
    cddc:	cmp	ip, lr
    cdde:	bne.n	ce24 <two_way_long_needle+0x1e8>
    cde0:	adds	r3, #1
    cde2:	cmp	r3, r1
    cde4:	bcc.n	cdd4 <two_way_long_needle+0x198>
    cde6:	cmp.w	r8, #4294967295
    cdea:	beq.n	ce10 <two_way_long_needle+0x1d4>
    cdec:	add.w	r2, sl, r8
    cdf0:	ldrb.w	r1, [r9]
    cdf4:	ldrb	r3, [r5, r2]
    cdf6:	cmp	r1, r3
    cdf8:	add	r2, r5
    cdfa:	bne.n	ce1c <two_way_long_needle+0x1e0>
    cdfc:	mov	r3, r9
    cdfe:	b.n	ce0c <two_way_long_needle+0x1d0>
    ce00:	ldrb.w	r0, [r3, #-1]!
    ce04:	ldrb.w	r1, [r2, #-1]!
    ce08:	cmp	r0, r1
    ce0a:	bne.n	ce1c <two_way_long_needle+0x1e0>
    ce0c:	cmp	r3, r6
    ce0e:	bne.n	ce00 <two_way_long_needle+0x1c4>
    ce10:	add.w	r0, r5, sl
    ce14:	addw	sp, sp, #1044	; 0x414
    ce18:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    ce1c:	ldr	r3, [sp, #12]
    ce1e:	add	sl, r3
    ce20:	mov	r0, r7
    ce22:	b.n	cd90 <two_way_long_needle+0x154>
    ce24:	rsb	r2, fp, #1
    ce28:	add	sl, r2
    ce2a:	add	sl, r3
    ce2c:	mov	r0, r7
    ce2e:	b.n	cd90 <two_way_long_needle+0x154>
    ce30:	mov	r1, r9
    ce32:	b.n	cd4c <two_way_long_needle+0x110>
    ce34:	add.w	r0, r5, r8
    ce38:	b.n	cd68 <two_way_long_needle+0x12c>
    ce3a:	nop

0000ce3c <strstr>:
    ce3c:	ldrb	r3, [r0, #0]
    ce3e:	cmp	r3, #0
    ce40:	beq.w	d04c <strstr+0x210>
    ce44:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    ce48:	ldrb.w	r8, [r1]
    ce4c:	sub	sp, #20
    ce4e:	mov	r4, r8
    ce50:	cmp.w	r8, #0
    ce54:	beq.n	ce84 <strstr+0x48>
    ce56:	mov	lr, r0
    ce58:	add.w	ip, r1, #1
    ce5c:	movs	r7, #1
    ce5e:	b.n	ce68 <strstr+0x2c>
    ce60:	ldrb.w	r4, [r2], #1
    ce64:	cbz	r4, ce82 <strstr+0x46>
    ce66:	mov	ip, r2
    ce68:	cmp	r4, r3
    ce6a:	ite	ne
    ce6c:	movne	r7, #0
    ce6e:	andeq.w	r7, r7, #1
    ce72:	ldrb.w	r3, [lr, #1]!
    ce76:	mov	r2, ip
    ce78:	cmp	r3, #0
    ce7a:	bne.n	ce60 <strstr+0x24>
    ce7c:	ldrb.w	r3, [ip]
    ce80:	cbnz	r3, cec6 <strstr+0x8a>
    ce82:	cbz	r7, ce8a <strstr+0x4e>
    ce84:	add	sp, #20
    ce86:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    ce8a:	mov	r6, r1
    ce8c:	mov	r5, r0
    ce8e:	mov	r1, r8
    ce90:	adds	r0, #1
    ce92:	rsb	r4, r6, ip
    ce96:	bl	c5c8 <strchr>
    ce9a:	mov	r7, r0
    ce9c:	cbz	r0, cec6 <strstr+0x8a>
    ce9e:	cmp	r4, #1
    cea0:	beq.n	ce84 <strstr+0x48>
    cea2:	adds	r0, r5, r4
    cea4:	cmp	r7, r0
    cea6:	ite	ls
    cea8:	rsbls	fp, r7, r0
    ceac:	movhi.w	fp, #1
    ceb0:	cmp	r4, #31
    ceb2:	bls.n	cece <strstr+0x92>
    ceb4:	mov	r3, r4
    ceb6:	mov	r2, r6
    ceb8:	mov	r1, fp
    ceba:	mov	r0, r7
    cebc:	bl	cc3c <two_way_long_needle>
    cec0:	add	sp, #20
    cec2:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    cec6:	movs	r0, #0
    cec8:	add	sp, #20
    ceca:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    cece:	add	r2, sp, #12
    ced0:	mov	r1, r4
    ced2:	mov	r0, r6
    ced4:	bl	cb84 <critical_factorization>
    ced8:	ldr	r1, [sp, #12]
    ceda:	mov	r8, r0
    cedc:	mov	r2, r0
    cede:	add	r1, r6
    cee0:	mov	r0, r6
    cee2:	bl	bfe4 <memcmp>
    cee6:	cmp	r0, #0
    cee8:	bne.n	cf9c <strstr+0x160>
    ceea:	add.w	r3, r8, #4294967295
    ceee:	str	r3, [sp, #4]
    cef0:	adds	r3, r6, r3
    cef2:	mov	r9, r0
    cef4:	mov	r5, r0
    cef6:	str	r3, [sp, #0]
    cef8:	mov	r0, fp
    cefa:	mov	sl, r6
    cefc:	adds	r6, r4, r5
    cefe:	subs	r2, r6, r0
    cf00:	movs	r1, #0
    cf02:	add	r0, r7
    cf04:	bl	d480 <memchr>
    cf08:	cmp	r0, #0
    cf0a:	bne.n	cec6 <strstr+0x8a>
    cf0c:	cmp	r6, #0
    cf0e:	beq.n	cec6 <strstr+0x8a>
    cf10:	cmp	r8, r9
    cf12:	mov	r3, r8
    cf14:	it	cc
    cf16:	movcc	r3, r9
    cf18:	cmp	r4, r3
    cf1a:	bls.n	cf42 <strstr+0x106>
    cf1c:	adds	r2, r3, r5
    cf1e:	ldrb.w	r1, [sl, r3]
    cf22:	ldrb	r0, [r7, r2]
    cf24:	cmp	r0, r1
    cf26:	add	r2, r7
    cf28:	add.w	lr, sl, r3
    cf2c:	beq.n	cf3c <strstr+0x100>
    cf2e:	b.n	cf8c <strstr+0x150>
    cf30:	ldrb.w	r0, [lr, #1]!
    cf34:	ldrb.w	r1, [r2, #1]!
    cf38:	cmp	r0, r1
    cf3a:	bne.n	cf8c <strstr+0x150>
    cf3c:	adds	r3, #1
    cf3e:	cmp	r4, r3
    cf40:	bhi.n	cf30 <strstr+0xf4>
    cf42:	ldr	r3, [sp, #4]
    cf44:	cmp	r8, r9
    cf46:	mov	r1, r3
    cf48:	bls.w	d052 <strstr+0x216>
    cf4c:	adds	r2, r5, r3
    cf4e:	ldr	r0, [sp, #0]
    cf50:	ldrb	r3, [r0, #0]
    cf52:	ldrb	r0, [r7, r2]
    cf54:	cmp	r3, r0
    cf56:	add	r2, r7
    cf58:	bne.n	d052 <strstr+0x216>
    cf5a:	ldr	r3, [sp, #0]
    cf5c:	add.w	fp, sl, r9
    cf60:	b.n	cf70 <strstr+0x134>
    cf62:	ldrb.w	ip, [r3, #-1]!
    cf66:	ldrb.w	lr, [r2, #-1]!
    cf6a:	cmp	ip, lr
    cf6c:	bne.n	cf78 <strstr+0x13c>
    cf6e:	mov	r1, r0
    cf70:	cmp	r3, fp
    cf72:	add.w	r0, r1, #4294967295
    cf76:	bne.n	cf62 <strstr+0x126>
    cf78:	add.w	r9, r9, #1
    cf7c:	cmp	r9, r1
    cf7e:	bhi.n	d030 <strstr+0x1f4>
    cf80:	ldr	r3, [sp, #12]
    cf82:	mov	r0, r6
    cf84:	add	r5, r3
    cf86:	rsb	r9, r3, r4
    cf8a:	b.n	cefc <strstr+0xc0>
    cf8c:	rsb	r2, r8, #1
    cf90:	add	r5, r2
    cf92:	add	r5, r3
    cf94:	mov.w	r9, #0
    cf98:	mov	r0, r6
    cf9a:	b.n	cefc <strstr+0xc0>
    cf9c:	rsb	r3, r8, r4
    cfa0:	cmp	r3, r8
    cfa2:	it	cc
    cfa4:	movcc	r3, r8
    cfa6:	adds	r3, #1
    cfa8:	add.w	r9, r8, #4294967295
    cfac:	str	r3, [sp, #12]
    cfae:	add.w	r3, r6, r9
    cfb2:	mov	r0, fp
    cfb4:	movs	r5, #0
    cfb6:	mov	fp, r7
    cfb8:	mov	sl, r3
    cfba:	adds	r7, r4, r5
    cfbc:	subs	r2, r7, r0
    cfbe:	movs	r1, #0
    cfc0:	add	r0, fp
    cfc2:	bl	d480 <memchr>
    cfc6:	cmp	r0, #0
    cfc8:	bne.w	cec6 <strstr+0x8a>
    cfcc:	cmp	r7, #0
    cfce:	beq.w	cec6 <strstr+0x8a>
    cfd2:	cmp	r4, r8
    cfd4:	bls.n	d002 <strstr+0x1c6>
    cfd6:	add.w	r2, r8, r5
    cfda:	ldrb.w	r3, [r6, r8]
    cfde:	ldrb.w	r0, [fp, r2]
    cfe2:	cmp	r0, r3
    cfe4:	add	r2, fp
    cfe6:	add.w	r1, r6, r8
    cfea:	mov	r3, r8
    cfec:	beq.n	cffc <strstr+0x1c0>
    cfee:	b.n	d038 <strstr+0x1fc>
    cff0:	ldrb.w	lr, [r1, #1]!
    cff4:	ldrb.w	r0, [r2, #1]!
    cff8:	cmp	lr, r0
    cffa:	bne.n	d038 <strstr+0x1fc>
    cffc:	adds	r3, #1
    cffe:	cmp	r4, r3
    d000:	bhi.n	cff0 <strstr+0x1b4>
    d002:	cmp.w	r9, #4294967295
    d006:	beq.n	d02e <strstr+0x1f2>
    d008:	add.w	r2, r5, r9
    d00c:	ldrb.w	r1, [sl]
    d010:	ldrb.w	r3, [fp, r2]
    d014:	cmp	r1, r3
    d016:	add	r2, fp
    d018:	bne.n	d044 <strstr+0x208>
    d01a:	mov	r3, sl
    d01c:	b.n	d02a <strstr+0x1ee>
    d01e:	ldrb.w	r0, [r3, #-1]!
    d022:	ldrb.w	r1, [r2, #-1]!
    d026:	cmp	r0, r1
    d028:	bne.n	d044 <strstr+0x208>
    d02a:	cmp	r3, r6
    d02c:	bne.n	d01e <strstr+0x1e2>
    d02e:	mov	r7, fp
    d030:	adds	r0, r7, r5
    d032:	add	sp, #20
    d034:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    d038:	rsb	r2, r8, #1
    d03c:	add	r5, r2
    d03e:	add	r5, r3
    d040:	mov	r0, r7
    d042:	b.n	cfba <strstr+0x17e>
    d044:	ldr	r3, [sp, #12]
    d046:	mov	r0, r7
    d048:	add	r5, r3
    d04a:	b.n	cfba <strstr+0x17e>
    d04c:	ldrb	r3, [r1, #0]
    d04e:	cbnz	r3, d056 <strstr+0x21a>
    d050:	bx	lr
    d052:	mov	r1, r8
    d054:	b.n	cf78 <strstr+0x13c>
    d056:	movs	r0, #0
    d058:	bx	lr
    d05a:	nop

0000d05c <_vdprintf_r>:
    d05c:	push	{r4, r5, r6, r7, lr}
    d05e:	sub.w	sp, sp, #532	; 0x214
    d062:	add	r5, sp, #16
    d064:	str	r3, [sp, #0]
    d066:	mov	r7, r1
    d068:	mov	r3, r2
    d06a:	mov.w	r4, #512	; 0x200
    d06e:	add	r2, sp, #12
    d070:	mov	r1, r5
    d072:	str	r4, [sp, #12]
    d074:	mov	r6, r0
    d076:	bl	db44 <_vasnprintf_r>
    d07a:	cbz	r0, d0a0 <_vdprintf_r+0x44>
    d07c:	mov	r4, r0
    d07e:	mov	r2, r0
    d080:	mov	r1, r7
    d082:	ldr	r3, [sp, #12]
    d084:	mov	r0, r6
    d086:	bl	d0dc <_write_r>
    d08a:	cmp	r4, r5
    d08c:	str	r0, [sp, #12]
    d08e:	beq.n	d09a <_vdprintf_r+0x3e>
    d090:	mov	r0, r6
    d092:	mov	r1, r4
    d094:	bl	d290 <_free_r>
    d098:	ldr	r0, [sp, #12]
    d09a:	add.w	sp, sp, #532	; 0x214
    d09e:	pop	{r4, r5, r6, r7, pc}
    d0a0:	mov.w	r0, #4294967295
    d0a4:	b.n	d09a <_vdprintf_r+0x3e>
    d0a6:	nop

0000d0a8 <vdprintf>:
    d0a8:	push	{r4}
    d0aa:	ldr	r4, [pc, #16]	; (d0bc <vdprintf+0x14>)
    d0ac:	mov	r3, r2
    d0ae:	mov	r2, r1
    d0b0:	mov	r1, r0
    d0b2:	ldr	r0, [r4, #0]
    d0b4:	ldr.w	r4, [sp], #4
    d0b8:	b.w	d05c <_vdprintf_r>
    d0bc:	.word	0x20008658

0000d0c0 <__ascii_wctomb>:
    d0c0:	cbz	r1, d0cc <__ascii_wctomb+0xc>
    d0c2:	cmp	r2, #255	; 0xff
    d0c4:	bhi.n	d0d0 <__ascii_wctomb+0x10>
    d0c6:	strb	r2, [r1, #0]
    d0c8:	movs	r0, #1
    d0ca:	bx	lr
    d0cc:	mov	r0, r1
    d0ce:	bx	lr
    d0d0:	movs	r3, #138	; 0x8a
    d0d2:	str	r3, [r0, #0]
    d0d4:	mov.w	r0, #4294967295
    d0d8:	bx	lr
    d0da:	nop

0000d0dc <_write_r>:
    d0dc:	push	{r4, r5, r6, lr}
    d0de:	mov	r5, r1
    d0e0:	ldr	r4, [pc, #32]	; (d104 <_write_r+0x28>)
    d0e2:	mov	r1, r2
    d0e4:	mov	r6, r0
    d0e6:	mov	r2, r3
    d0e8:	mov	r0, r5
    d0ea:	movs	r3, #0
    d0ec:	str	r3, [r4, #0]
    d0ee:	bl	8cdc <_write>
    d0f2:	adds	r3, r0, #1
    d0f4:	beq.n	d0f8 <_write_r+0x1c>
    d0f6:	pop	{r4, r5, r6, pc}
    d0f8:	ldr	r3, [r4, #0]
    d0fa:	cmp	r3, #0
    d0fc:	beq.n	d0f6 <_write_r+0x1a>
    d0fe:	str	r3, [r6, #0]
    d100:	pop	{r4, r5, r6, pc}
    d102:	nop
    d104:	.word	0x20012f78

0000d108 <__register_exitproc>:
    d108:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    d10c:	ldr	r4, [pc, #148]	; (d1a4 <__register_exitproc+0x9c>)
    d10e:	ldr	r5, [r4, #0]
    d110:	ldr.w	r4, [r5, #328]	; 0x148
    d114:	mov	r6, r0
    d116:	mov	r8, r1
    d118:	mov	sl, r2
    d11a:	mov	r9, r3
    d11c:	cbz	r4, d190 <__register_exitproc+0x88>
    d11e:	ldr	r0, [r4, #4]
    d120:	cmp	r0, #31
    d122:	bgt.n	d154 <__register_exitproc+0x4c>
    d124:	adds	r3, r0, #1
    d126:	cbz	r6, d146 <__register_exitproc+0x3e>
    d128:	add.w	r5, r4, r0, lsl #2
    d12c:	movs	r2, #1
    d12e:	str.w	sl, [r5, #136]	; 0x88
    d132:	ldr.w	r1, [r4, #392]	; 0x188
    d136:	lsls	r2, r0
    d138:	orrs	r1, r2
    d13a:	cmp	r6, #2
    d13c:	str.w	r1, [r4, #392]	; 0x188
    d140:	str.w	r9, [r5, #264]	; 0x108
    d144:	beq.n	d184 <__register_exitproc+0x7c>
    d146:	adds	r0, #2
    d148:	str	r3, [r4, #4]
    d14a:	str.w	r8, [r4, r0, lsl #2]
    d14e:	movs	r0, #0
    d150:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    d154:	ldr	r3, [pc, #80]	; (d1a8 <__register_exitproc+0xa0>)
    d156:	cbz	r3, d19a <__register_exitproc+0x92>
    d158:	mov.w	r0, #400	; 0x190
    d15c:	bl	ba28 <malloc>
    d160:	mov	r4, r0
    d162:	cbz	r0, d19a <__register_exitproc+0x92>
    d164:	ldr.w	r3, [r5, #328]	; 0x148
    d168:	movs	r7, #0
    d16a:	stmia.w	r0, {r3, r7}
    d16e:	str.w	r4, [r5, #328]	; 0x148
    d172:	mov	r0, r7
    d174:	movs	r3, #1
    d176:	str.w	r7, [r4, #392]	; 0x188
    d17a:	str.w	r7, [r4, #396]	; 0x18c
    d17e:	cmp	r6, #0
    d180:	beq.n	d146 <__register_exitproc+0x3e>
    d182:	b.n	d128 <__register_exitproc+0x20>
    d184:	ldr.w	r1, [r4, #396]	; 0x18c
    d188:	orrs	r2, r1
    d18a:	str.w	r2, [r4, #396]	; 0x18c
    d18e:	b.n	d146 <__register_exitproc+0x3e>
    d190:	add.w	r4, r5, #332	; 0x14c
    d194:	str.w	r4, [r5, #328]	; 0x148
    d198:	b.n	d11e <__register_exitproc+0x16>
    d19a:	mov.w	r0, #4294967295
    d19e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    d1a2:	nop
    d1a4:	.word	0x0009e1e0
    d1a8:	.word	0x0000ba29

0000d1ac <register_fini>:
    d1ac:	ldr	r3, [pc, #8]	; (d1b8 <register_fini+0xc>)
    d1ae:	cbz	r3, d1b6 <register_fini+0xa>
    d1b0:	ldr	r0, [pc, #8]	; (d1bc <register_fini+0x10>)
    d1b2:	b.w	d1c0 <atexit>
    d1b6:	bx	lr
    d1b8:	.word	0x00000000
    d1bc:	.word	0x0000d1cd

0000d1c0 <atexit>:
    d1c0:	movs	r3, #0
    d1c2:	mov	r1, r0
    d1c4:	mov	r2, r3
    d1c6:	mov	r0, r3
    d1c8:	b.w	d108 <__register_exitproc>

0000d1cc <__libc_fini_array>:
    d1cc:	push	{r3, r4, r5, lr}
    d1ce:	ldr	r5, [pc, #28]	; (d1ec <__libc_fini_array+0x20>)
    d1d0:	ldr	r4, [pc, #28]	; (d1f0 <__libc_fini_array+0x24>)
    d1d2:	subs	r4, r5, r4
    d1d4:	asrs	r4, r4, #2
    d1d6:	beq.n	d1e4 <__libc_fini_array+0x18>
    d1d8:	subs	r4, #1
    d1da:	ldr.w	r3, [r5, #-4]!
    d1de:	blx	r3
    d1e0:	cmp	r4, #0
    d1e2:	bne.n	d1d8 <__libc_fini_array+0xc>
    d1e4:	ldmia.w	sp!, {r3, r4, r5, lr}
    d1e8:	b.w	9e4c8 <__init_array_end>
	...

0000d1f4 <_malloc_trim_r>:
    d1f4:	push	{r3, r4, r5, r6, r7, lr}
    d1f6:	ldr	r7, [pc, #140]	; (d284 <_malloc_trim_r+0x90>)
    d1f8:	mov	r4, r1
    d1fa:	mov	r6, r0
    d1fc:	bl	c1ac <__malloc_lock>
    d200:	ldr	r3, [r7, #8]
    d202:	ldr	r5, [r3, #4]
    d204:	bic.w	r5, r5, #3
    d208:	subs	r1, r5, r4
    d20a:	addw	r1, r1, #4079	; 0xfef
    d20e:	bic.w	r1, r1, #4080	; 0xff0
    d212:	bic.w	r1, r1, #15
    d216:	sub.w	r4, r1, #4096	; 0x1000
    d21a:	cmp.w	r4, #4096	; 0x1000
    d21e:	blt.n	d230 <_malloc_trim_r+0x3c>
    d220:	movs	r1, #0
    d222:	mov	r0, r6
    d224:	bl	c5a4 <_sbrk_r>
    d228:	ldr	r3, [r7, #8]
    d22a:	add	r3, r5
    d22c:	cmp	r0, r3
    d22e:	beq.n	d23a <_malloc_trim_r+0x46>
    d230:	mov	r0, r6
    d232:	bl	c1b0 <__malloc_unlock>
    d236:	movs	r0, #0
    d238:	pop	{r3, r4, r5, r6, r7, pc}
    d23a:	negs	r1, r4
    d23c:	mov	r0, r6
    d23e:	bl	c5a4 <_sbrk_r>
    d242:	adds	r0, #1
    d244:	beq.n	d262 <_malloc_trim_r+0x6e>
    d246:	ldr	r3, [pc, #64]	; (d288 <_malloc_trim_r+0x94>)
    d248:	ldr	r2, [r7, #8]
    d24a:	ldr	r1, [r3, #0]
    d24c:	subs	r5, r5, r4
    d24e:	orr.w	r5, r5, #1
    d252:	mov	r0, r6
    d254:	subs	r1, r1, r4
    d256:	str	r5, [r2, #4]
    d258:	str	r1, [r3, #0]
    d25a:	bl	c1b0 <__malloc_unlock>
    d25e:	movs	r0, #1
    d260:	pop	{r3, r4, r5, r6, r7, pc}
    d262:	movs	r1, #0
    d264:	mov	r0, r6
    d266:	bl	c5a4 <_sbrk_r>
    d26a:	ldr	r2, [r7, #8]
    d26c:	subs	r3, r0, r2
    d26e:	cmp	r3, #15
    d270:	ble.n	d230 <_malloc_trim_r+0x3c>
    d272:	ldr	r4, [pc, #24]	; (d28c <_malloc_trim_r+0x98>)
    d274:	ldr	r1, [pc, #16]	; (d288 <_malloc_trim_r+0x94>)
    d276:	ldr	r4, [r4, #0]
    d278:	orr.w	r3, r3, #1
    d27c:	subs	r0, r0, r4
    d27e:	str	r3, [r2, #4]
    d280:	str	r0, [r1, #0]
    d282:	b.n	d230 <_malloc_trim_r+0x3c>
    d284:	.word	0x200087c8
    d288:	.word	0x20012f34
    d28c:	.word	0x20008bd4

0000d290 <_free_r>:
    d290:	cmp	r1, #0
    d292:	beq.n	d320 <_free_r+0x90>
    d294:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    d298:	mov	r5, r1
    d29a:	mov	r8, r0
    d29c:	bl	c1ac <__malloc_lock>
    d2a0:	ldr.w	r7, [r5, #-4]
    d2a4:	ldr	r1, [pc, #424]	; (d450 <_free_r+0x1c0>)
    d2a6:	bic.w	r3, r7, #1
    d2aa:	sub.w	r4, r5, #8
    d2ae:	adds	r2, r4, r3
    d2b0:	ldr	r6, [r1, #8]
    d2b2:	ldr	r0, [r2, #4]
    d2b4:	cmp	r2, r6
    d2b6:	bic.w	r0, r0, #3
    d2ba:	beq.n	d382 <_free_r+0xf2>
    d2bc:	lsls	r6, r7, #31
    d2be:	str	r0, [r2, #4]
    d2c0:	bmi.n	d2da <_free_r+0x4a>
    d2c2:	ldr.w	r7, [r5, #-8]
    d2c6:	subs	r4, r4, r7
    d2c8:	add.w	lr, r1, #8
    d2cc:	ldr	r5, [r4, #8]
    d2ce:	cmp	r5, lr
    d2d0:	add	r3, r7
    d2d2:	beq.n	d3b4 <_free_r+0x124>
    d2d4:	ldr	r7, [r4, #12]
    d2d6:	str	r7, [r5, #12]
    d2d8:	str	r5, [r7, #8]
    d2da:	adds	r5, r2, r0
    d2dc:	ldr	r5, [r5, #4]
    d2de:	lsls	r5, r5, #31
    d2e0:	bpl.n	d368 <_free_r+0xd8>
    d2e2:	orr.w	r2, r3, #1
    d2e6:	str	r2, [r4, #4]
    d2e8:	str	r3, [r4, r3]
    d2ea:	cmp.w	r3, #512	; 0x200
    d2ee:	bcs.n	d322 <_free_r+0x92>
    d2f0:	lsrs	r3, r3, #3
    d2f2:	adds	r2, r3, #1
    d2f4:	ldr	r5, [r1, #4]
    d2f6:	ldr.w	r7, [r1, r2, lsl #3]
    d2fa:	str	r7, [r4, #8]
    d2fc:	movs	r0, #1
    d2fe:	asrs	r3, r3, #2
    d300:	lsl.w	r3, r0, r3
    d304:	add.w	r0, r1, r2, lsl #3
    d308:	orrs	r5, r3
    d30a:	subs	r0, #8
    d30c:	str	r0, [r4, #12]
    d30e:	str	r5, [r1, #4]
    d310:	str.w	r4, [r1, r2, lsl #3]
    d314:	str	r4, [r7, #12]
    d316:	mov	r0, r8
    d318:	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    d31c:	b.w	c1b0 <__malloc_unlock>
    d320:	bx	lr
    d322:	lsrs	r2, r3, #9
    d324:	cmp	r2, #4
    d326:	bhi.n	d3d0 <_free_r+0x140>
    d328:	lsrs	r2, r3, #6
    d32a:	add.w	r7, r2, #57	; 0x39
    d32e:	lsls	r7, r7, #1
    d330:	add.w	r5, r2, #56	; 0x38
    d334:	add.w	r0, r1, r7, lsl #2
    d338:	ldr.w	r2, [r1, r7, lsl #2]
    d33c:	ldr	r1, [pc, #272]	; (d450 <_free_r+0x1c0>)
    d33e:	subs	r0, #8
    d340:	cmp	r0, r2
    d342:	beq.n	d3e0 <_free_r+0x150>
    d344:	ldr	r1, [r2, #4]
    d346:	bic.w	r1, r1, #3
    d34a:	cmp	r3, r1
    d34c:	bcs.n	d354 <_free_r+0xc4>
    d34e:	ldr	r2, [r2, #8]
    d350:	cmp	r0, r2
    d352:	bne.n	d344 <_free_r+0xb4>
    d354:	ldr	r0, [r2, #12]
    d356:	str	r0, [r4, #12]
    d358:	str	r2, [r4, #8]
    d35a:	str	r4, [r0, #8]
    d35c:	str	r4, [r2, #12]
    d35e:	mov	r0, r8
    d360:	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    d364:	b.w	c1b0 <__malloc_unlock>
    d368:	ldr	r5, [r2, #8]
    d36a:	ldr	r7, [pc, #232]	; (d454 <_free_r+0x1c4>)
    d36c:	cmp	r5, r7
    d36e:	add	r3, r0
    d370:	beq.n	d3f2 <_free_r+0x162>
    d372:	ldr	r0, [r2, #12]
    d374:	str	r0, [r5, #12]
    d376:	orr.w	r2, r3, #1
    d37a:	str	r5, [r0, #8]
    d37c:	str	r2, [r4, #4]
    d37e:	str	r3, [r4, r3]
    d380:	b.n	d2ea <_free_r+0x5a>
    d382:	lsls	r7, r7, #31
    d384:	add	r3, r0
    d386:	bmi.n	d398 <_free_r+0x108>
    d388:	ldr.w	r2, [r5, #-8]
    d38c:	subs	r4, r4, r2
    d38e:	add	r3, r2
    d390:	ldr	r0, [r4, #8]
    d392:	ldr	r2, [r4, #12]
    d394:	str	r2, [r0, #12]
    d396:	str	r0, [r2, #8]
    d398:	ldr	r2, [pc, #188]	; (d458 <_free_r+0x1c8>)
    d39a:	ldr	r2, [r2, #0]
    d39c:	orr.w	r0, r3, #1
    d3a0:	cmp	r3, r2
    d3a2:	str	r0, [r4, #4]
    d3a4:	str	r4, [r1, #8]
    d3a6:	bcc.n	d316 <_free_r+0x86>
    d3a8:	ldr	r3, [pc, #176]	; (d45c <_free_r+0x1cc>)
    d3aa:	mov	r0, r8
    d3ac:	ldr	r1, [r3, #0]
    d3ae:	bl	d1f4 <_malloc_trim_r>
    d3b2:	b.n	d316 <_free_r+0x86>
    d3b4:	adds	r1, r2, r0
    d3b6:	ldr	r1, [r1, #4]
    d3b8:	lsls	r1, r1, #31
    d3ba:	bmi.n	d446 <_free_r+0x1b6>
    d3bc:	ldr	r1, [r2, #8]
    d3be:	ldr	r2, [r2, #12]
    d3c0:	str	r2, [r1, #12]
    d3c2:	add	r3, r0
    d3c4:	orr.w	r0, r3, #1
    d3c8:	str	r1, [r2, #8]
    d3ca:	str	r0, [r4, #4]
    d3cc:	str	r3, [r4, r3]
    d3ce:	b.n	d316 <_free_r+0x86>
    d3d0:	cmp	r2, #20
    d3d2:	bhi.n	d404 <_free_r+0x174>
    d3d4:	add.w	r7, r2, #92	; 0x5c
    d3d8:	lsls	r7, r7, #1
    d3da:	add.w	r5, r2, #91	; 0x5b
    d3de:	b.n	d334 <_free_r+0xa4>
    d3e0:	asrs	r2, r5, #2
    d3e2:	ldr	r3, [r1, #4]
    d3e4:	movs	r5, #1
    d3e6:	lsl.w	r2, r5, r2
    d3ea:	orrs	r3, r2
    d3ec:	str	r3, [r1, #4]
    d3ee:	mov	r2, r0
    d3f0:	b.n	d356 <_free_r+0xc6>
    d3f2:	orr.w	r2, r3, #1
    d3f6:	str	r4, [r1, #20]
    d3f8:	str	r4, [r1, #16]
    d3fa:	str	r5, [r4, #12]
    d3fc:	str	r5, [r4, #8]
    d3fe:	str	r2, [r4, #4]
    d400:	str	r3, [r4, r3]
    d402:	b.n	d316 <_free_r+0x86>
    d404:	cmp	r2, #84	; 0x54
    d406:	bhi.n	d416 <_free_r+0x186>
    d408:	lsrs	r2, r3, #12
    d40a:	add.w	r7, r2, #111	; 0x6f
    d40e:	lsls	r7, r7, #1
    d410:	add.w	r5, r2, #110	; 0x6e
    d414:	b.n	d334 <_free_r+0xa4>
    d416:	cmp.w	r2, #340	; 0x154
    d41a:	bhi.n	d42a <_free_r+0x19a>
    d41c:	lsrs	r2, r3, #15
    d41e:	add.w	r7, r2, #120	; 0x78
    d422:	lsls	r7, r7, #1
    d424:	add.w	r5, r2, #119	; 0x77
    d428:	b.n	d334 <_free_r+0xa4>
    d42a:	movw	r0, #1364	; 0x554
    d42e:	cmp	r2, r0
    d430:	bhi.n	d440 <_free_r+0x1b0>
    d432:	lsrs	r2, r3, #18
    d434:	add.w	r7, r2, #125	; 0x7d
    d438:	lsls	r7, r7, #1
    d43a:	add.w	r5, r2, #124	; 0x7c
    d43e:	b.n	d334 <_free_r+0xa4>
    d440:	movs	r7, #254	; 0xfe
    d442:	movs	r5, #126	; 0x7e
    d444:	b.n	d334 <_free_r+0xa4>
    d446:	orr.w	r2, r3, #1
    d44a:	str	r2, [r4, #4]
    d44c:	str	r3, [r4, r3]
    d44e:	b.n	d316 <_free_r+0x86>
    d450:	.word	0x200087c8
    d454:	.word	0x200087d0
    d458:	.word	0x20008bd0
    d45c:	.word	0x20012f30

0000d460 <_localeconv_r>:
    d460:	ldr	r2, [pc, #16]	; (d474 <_localeconv_r+0x14>)
    d462:	ldr	r3, [pc, #20]	; (d478 <_localeconv_r+0x18>)
    d464:	ldr	r2, [r2, #0]
    d466:	ldr	r0, [r2, #52]	; 0x34
    d468:	cmp	r0, #0
    d46a:	it	eq
    d46c:	moveq	r0, r3
    d46e:	adds	r0, #240	; 0xf0
    d470:	bx	lr
    d472:	nop
    d474:	.word	0x20008658
    d478:	.word	0x2000865c
    d47c:	.word	0xffffffff

0000d480 <memchr>:
    d480:	and.w	r1, r1, #255	; 0xff
    d484:	cmp	r2, #16
    d486:	blt.n	d4e0 <memchr+0x60>
    d488:	tst.w	r0, #7
    d48c:	beq.n	d4a0 <memchr+0x20>
    d48e:	ldrb.w	r3, [r0], #1
    d492:	subs	r2, #1
    d494:	cmp	r3, r1
    d496:	beq.n	d4f4 <memchr+0x74>
    d498:	tst.w	r0, #7
    d49c:	cbz	r2, d4f0 <memchr+0x70>
    d49e:	bne.n	d48e <memchr+0xe>
    d4a0:	push	{r4, r5, r6, r7}
    d4a2:	orr.w	r1, r1, r1, lsl #8
    d4a6:	orr.w	r1, r1, r1, lsl #16
    d4aa:	bic.w	r4, r2, #7
    d4ae:	mvns.w	r7, #0
    d4b2:	movs	r3, #0
    d4b4:	ldrd	r5, r6, [r0], #8
    d4b8:	subs	r4, #8
    d4ba:	eor.w	r5, r5, r1
    d4be:	eor.w	r6, r6, r1
    d4c2:	uadd8	r5, r5, r7
    d4c6:	sel	r5, r3, r7
    d4ca:	uadd8	r6, r6, r7
    d4ce:	sel	r6, r5, r7
    d4d2:	cbnz	r6, d4f8 <memchr+0x78>
    d4d4:	bne.n	d4b4 <memchr+0x34>
    d4d6:	pop	{r4, r5, r6, r7}
    d4d8:	and.w	r1, r1, #255	; 0xff
    d4dc:	and.w	r2, r2, #7
    d4e0:	cbz	r2, d4f0 <memchr+0x70>
    d4e2:	ldrb.w	r3, [r0], #1
    d4e6:	subs	r2, #1
    d4e8:	eor.w	r3, r3, r1
    d4ec:	cbz	r3, d4f4 <memchr+0x74>
    d4ee:	bne.n	d4e2 <memchr+0x62>
    d4f0:	movs	r0, #0
    d4f2:	bx	lr
    d4f4:	subs	r0, #1
    d4f6:	bx	lr
    d4f8:	cmp	r5, #0
    d4fa:	itte	eq
    d4fc:	moveq	r5, r6
    d4fe:	subeq	r0, #3
    d500:	subne	r0, #7
    d502:	tst.w	r5, #1
    d506:	bne.n	d518 <memchr+0x98>
    d508:	adds	r0, #1
    d50a:	tst.w	r5, #256	; 0x100
    d50e:	ittt	eq
    d510:	addeq	r0, #1
    d512:	tsteq.w	r5, #98304	; 0x18000
    d516:	addeq	r0, #1
    d518:	pop	{r4, r5, r6, r7}
    d51a:	subs	r0, #1
    d51c:	bx	lr
    d51e:	nop

0000d520 <_Balloc>:
    d520:	ldr	r3, [r0, #76]	; 0x4c
    d522:	push	{r4, r5, r6, lr}
    d524:	mov	r5, r0
    d526:	mov	r4, r1
    d528:	cbz	r3, d53e <_Balloc+0x1e>
    d52a:	ldr.w	r0, [r3, r4, lsl #2]
    d52e:	cbz	r0, d552 <_Balloc+0x32>
    d530:	ldr	r2, [r0, #0]
    d532:	str.w	r2, [r3, r4, lsl #2]
    d536:	movs	r3, #0
    d538:	str	r3, [r0, #16]
    d53a:	str	r3, [r0, #12]
    d53c:	pop	{r4, r5, r6, pc}
    d53e:	movs	r2, #33	; 0x21
    d540:	movs	r1, #4
    d542:	bl	b960 <_calloc_r>
    d546:	str	r0, [r5, #76]	; 0x4c
    d548:	mov	r3, r0
    d54a:	cmp	r0, #0
    d54c:	bne.n	d52a <_Balloc+0xa>
    d54e:	movs	r0, #0
    d550:	pop	{r4, r5, r6, pc}
    d552:	movs	r1, #1
    d554:	lsl.w	r6, r1, r4
    d558:	adds	r2, r6, #5
    d55a:	mov	r0, r5
    d55c:	lsls	r2, r2, #2
    d55e:	bl	b960 <_calloc_r>
    d562:	cmp	r0, #0
    d564:	beq.n	d54e <_Balloc+0x2e>
    d566:	str	r4, [r0, #4]
    d568:	str	r6, [r0, #8]
    d56a:	b.n	d536 <_Balloc+0x16>

0000d56c <_Bfree>:
    d56c:	cbz	r1, d57c <_Bfree+0x10>
    d56e:	ldr	r3, [r0, #76]	; 0x4c
    d570:	ldr	r2, [r1, #4]
    d572:	ldr.w	r0, [r3, r2, lsl #2]
    d576:	str	r0, [r1, #0]
    d578:	str.w	r1, [r3, r2, lsl #2]
    d57c:	bx	lr
    d57e:	nop

0000d580 <__multadd>:
    d580:	push	{r4, r5, r6, r7, lr}
    d582:	ldr	r4, [r1, #16]
    d584:	sub	sp, #12
    d586:	mov	r5, r1
    d588:	mov	r6, r0
    d58a:	add.w	lr, r1, #20
    d58e:	movs	r7, #0
    d590:	ldr.w	r0, [lr]
    d594:	uxth	r1, r0
    d596:	mla	r1, r2, r1, r3
    d59a:	lsrs	r3, r1, #16
    d59c:	lsrs	r0, r0, #16
    d59e:	mla	r3, r2, r0, r3
    d5a2:	uxth	r1, r1
    d5a4:	adds	r7, #1
    d5a6:	add.w	r1, r1, r3, lsl #16
    d5aa:	cmp	r4, r7
    d5ac:	str.w	r1, [lr], #4
    d5b0:	mov.w	r3, r3, lsr #16
    d5b4:	bgt.n	d590 <__multadd+0x10>
    d5b6:	cbz	r3, d5c8 <__multadd+0x48>
    d5b8:	ldr	r2, [r5, #8]
    d5ba:	cmp	r4, r2
    d5bc:	bge.n	d5ce <__multadd+0x4e>
    d5be:	add.w	r2, r5, r4, lsl #2
    d5c2:	adds	r4, #1
    d5c4:	str	r3, [r2, #20]
    d5c6:	str	r4, [r5, #16]
    d5c8:	mov	r0, r5
    d5ca:	add	sp, #12
    d5cc:	pop	{r4, r5, r6, r7, pc}
    d5ce:	ldr	r1, [r5, #4]
    d5d0:	str	r3, [sp, #4]
    d5d2:	adds	r1, #1
    d5d4:	mov	r0, r6
    d5d6:	bl	d520 <_Balloc>
    d5da:	ldr	r2, [r5, #16]
    d5dc:	adds	r2, #2
    d5de:	add.w	r1, r5, #12
    d5e2:	mov	r7, r0
    d5e4:	lsls	r2, r2, #2
    d5e6:	adds	r0, #12
    d5e8:	bl	6f10 <memcpy>
    d5ec:	ldr	r2, [r6, #76]	; 0x4c
    d5ee:	ldr	r1, [r5, #4]
    d5f0:	ldr	r3, [sp, #4]
    d5f2:	ldr.w	r0, [r2, r1, lsl #2]
    d5f6:	str	r0, [r5, #0]
    d5f8:	str.w	r5, [r2, r1, lsl #2]
    d5fc:	mov	r5, r7
    d5fe:	b.n	d5be <__multadd+0x3e>

0000d600 <__hi0bits>:
    d600:	lsrs	r3, r0, #16
    d602:	lsls	r3, r3, #16
    d604:	cbnz	r3, d634 <__hi0bits+0x34>
    d606:	lsls	r0, r0, #16
    d608:	movs	r3, #16
    d60a:	tst.w	r0, #4278190080	; 0xff000000
    d60e:	itt	eq
    d610:	lsleq	r0, r0, #8
    d612:	addeq	r3, #8
    d614:	tst.w	r0, #4026531840	; 0xf0000000
    d618:	itt	eq
    d61a:	lsleq	r0, r0, #4
    d61c:	addeq	r3, #4
    d61e:	tst.w	r0, #3221225472	; 0xc0000000
    d622:	itt	eq
    d624:	lsleq	r0, r0, #2
    d626:	addeq	r3, #2
    d628:	cmp	r0, #0
    d62a:	blt.n	d63c <__hi0bits+0x3c>
    d62c:	lsls	r2, r0, #1
    d62e:	bmi.n	d638 <__hi0bits+0x38>
    d630:	movs	r0, #32
    d632:	bx	lr
    d634:	movs	r3, #0
    d636:	b.n	d60a <__hi0bits+0xa>
    d638:	adds	r0, r3, #1
    d63a:	bx	lr
    d63c:	mov	r0, r3
    d63e:	bx	lr

0000d640 <__lo0bits>:
    d640:	ldr	r3, [r0, #0]
    d642:	ands.w	r2, r3, #7
    d646:	beq.n	d658 <__lo0bits+0x18>
    d648:	lsls	r1, r3, #31
    d64a:	bmi.n	d68e <__lo0bits+0x4e>
    d64c:	lsls	r2, r3, #30
    d64e:	bmi.n	d692 <__lo0bits+0x52>
    d650:	lsrs	r3, r3, #2
    d652:	str	r3, [r0, #0]
    d654:	movs	r0, #2
    d656:	bx	lr
    d658:	uxth	r1, r3
    d65a:	cbnz	r1, d660 <__lo0bits+0x20>
    d65c:	lsrs	r3, r3, #16
    d65e:	movs	r2, #16
    d660:	tst.w	r3, #255	; 0xff
    d664:	itt	eq
    d666:	lsreq	r3, r3, #8
    d668:	addeq	r2, #8
    d66a:	lsls	r1, r3, #28
    d66c:	itt	eq
    d66e:	lsreq	r3, r3, #4
    d670:	addeq	r2, #4
    d672:	lsls	r1, r3, #30
    d674:	itt	eq
    d676:	lsreq	r3, r3, #2
    d678:	addeq	r2, #2
    d67a:	lsls	r1, r3, #31
    d67c:	bmi.n	d688 <__lo0bits+0x48>
    d67e:	lsrs	r3, r3, #1
    d680:	bne.n	d686 <__lo0bits+0x46>
    d682:	movs	r0, #32
    d684:	bx	lr
    d686:	adds	r2, #1
    d688:	str	r3, [r0, #0]
    d68a:	mov	r0, r2
    d68c:	bx	lr
    d68e:	movs	r0, #0
    d690:	bx	lr
    d692:	lsrs	r3, r3, #1
    d694:	str	r3, [r0, #0]
    d696:	movs	r0, #1
    d698:	bx	lr
    d69a:	nop

0000d69c <__i2b>:
    d69c:	push	{r4, lr}
    d69e:	mov	r4, r1
    d6a0:	movs	r1, #1
    d6a2:	bl	d520 <_Balloc>
    d6a6:	movs	r2, #1
    d6a8:	str	r4, [r0, #20]
    d6aa:	str	r2, [r0, #16]
    d6ac:	pop	{r4, pc}
    d6ae:	nop

0000d6b0 <__multiply>:
    d6b0:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    d6b4:	ldr	r5, [r1, #16]
    d6b6:	ldr	r7, [r2, #16]
    d6b8:	cmp	r5, r7
    d6ba:	sub	sp, #12
    d6bc:	mov	r4, r1
    d6be:	mov	r6, r2
    d6c0:	bge.n	d6cc <__multiply+0x1c>
    d6c2:	mov	r2, r5
    d6c4:	mov	r4, r6
    d6c6:	mov	r5, r7
    d6c8:	mov	r6, r1
    d6ca:	mov	r7, r2
    d6cc:	ldr	r3, [r4, #8]
    d6ce:	ldr	r1, [r4, #4]
    d6d0:	add.w	r8, r5, r7
    d6d4:	cmp	r8, r3
    d6d6:	it	gt
    d6d8:	addgt	r1, #1
    d6da:	bl	d520 <_Balloc>
    d6de:	add.w	ip, r0, #20
    d6e2:	add.w	r9, ip, r8, lsl #2
    d6e6:	cmp	ip, r9
    d6e8:	str	r0, [sp, #0]
    d6ea:	bcs.n	d6f8 <__multiply+0x48>
    d6ec:	mov	r3, ip
    d6ee:	movs	r1, #0
    d6f0:	str.w	r1, [r3], #4
    d6f4:	cmp	r9, r3
    d6f6:	bhi.n	d6f0 <__multiply+0x40>
    d6f8:	add.w	r2, r6, #20
    d6fc:	add.w	sl, r2, r7, lsl #2
    d700:	add.w	r3, r4, #20
    d704:	cmp	r2, sl
    d706:	add.w	lr, r3, r5, lsl #2
    d70a:	bcs.n	d7b6 <__multiply+0x106>
    d70c:	str.w	r9, [sp, #4]
    d710:	mov	r9, r3
    d712:	ldr.w	r3, [r2], #4
    d716:	uxth.w	fp, r3
    d71a:	cmp.w	fp, #0
    d71e:	beq.n	d762 <__multiply+0xb2>
    d720:	movs	r0, #0
    d722:	mov	r7, r9
    d724:	mov	r6, ip
    d726:	mov	r5, r0
    d728:	b.n	d72c <__multiply+0x7c>
    d72a:	mov	r6, r3
    d72c:	ldr.w	r4, [r7], #4
    d730:	ldr	r0, [r6, #0]
    d732:	uxth	r1, r4
    d734:	uxth	r3, r0
    d736:	mla	r1, fp, r1, r3
    d73a:	lsrs	r4, r4, #16
    d73c:	lsrs	r0, r0, #16
    d73e:	adds	r3, r1, r5
    d740:	mla	r0, fp, r4, r0
    d744:	add.w	r0, r0, r3, lsr #16
    d748:	uxth	r1, r3
    d74a:	mov	r3, r6
    d74c:	orr.w	r1, r1, r0, lsl #16
    d750:	cmp	lr, r7
    d752:	mov.w	r5, r0, lsr #16
    d756:	str.w	r1, [r3], #4
    d75a:	bhi.n	d72a <__multiply+0x7a>
    d75c:	str	r5, [r6, #4]
    d75e:	ldr.w	r3, [r2, #-4]
    d762:	movs.w	fp, r3, lsr #16
    d766:	beq.n	d7aa <__multiply+0xfa>
    d768:	ldr.w	r3, [ip]
    d76c:	mov	r7, ip
    d76e:	mov	r0, r3
    d770:	mov	r5, r9
    d772:	movs	r1, #0
    d774:	b.n	d778 <__multiply+0xc8>
    d776:	mov	r7, r6
    d778:	ldrh	r4, [r5, #0]
    d77a:	lsrs	r0, r0, #16
    d77c:	mla	r0, fp, r4, r0
    d780:	add	r1, r0
    d782:	uxth	r4, r3
    d784:	mov	r6, r7
    d786:	orr.w	r3, r4, r1, lsl #16
    d78a:	str.w	r3, [r6], #4
    d78e:	ldr	r0, [r7, #4]
    d790:	ldr.w	r4, [r5], #4
    d794:	uxth	r3, r0
    d796:	lsrs	r4, r4, #16
    d798:	mla	r4, fp, r4, r3
    d79c:	add.w	r3, r4, r1, lsr #16
    d7a0:	cmp	lr, r5
    d7a2:	mov.w	r1, r3, lsr #16
    d7a6:	bhi.n	d776 <__multiply+0xc6>
    d7a8:	str	r3, [r7, #4]
    d7aa:	cmp	sl, r2
    d7ac:	add.w	ip, ip, #4
    d7b0:	bhi.n	d712 <__multiply+0x62>
    d7b2:	ldr.w	r9, [sp, #4]
    d7b6:	cmp.w	r8, #0
    d7ba:	ble.n	d7d4 <__multiply+0x124>
    d7bc:	ldr.w	r3, [r9, #-4]
    d7c0:	sub.w	r9, r9, #4
    d7c4:	cbz	r3, d7ce <__multiply+0x11e>
    d7c6:	b.n	d7d4 <__multiply+0x124>
    d7c8:	ldr.w	r3, [r9, #-4]!
    d7cc:	cbnz	r3, d7d4 <__multiply+0x124>
    d7ce:	subs.w	r8, r8, #1
    d7d2:	bne.n	d7c8 <__multiply+0x118>
    d7d4:	ldr	r0, [sp, #0]
    d7d6:	str.w	r8, [r0, #16]
    d7da:	add	sp, #12
    d7dc:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0000d7e0 <__pow5mult>:
    d7e0:	ands.w	r3, r2, #3
    d7e4:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    d7e8:	mov	r4, r2
    d7ea:	mov	r7, r0
    d7ec:	bne.n	d84c <__pow5mult+0x6c>
    d7ee:	mov	r6, r1
    d7f0:	asrs	r4, r4, #2
    d7f2:	beq.n	d82e <__pow5mult+0x4e>
    d7f4:	ldr	r5, [r7, #72]	; 0x48
    d7f6:	cbz	r5, d85e <__pow5mult+0x7e>
    d7f8:	lsls	r3, r4, #31
    d7fa:	mov.w	r8, #0
    d7fe:	bmi.n	d80e <__pow5mult+0x2e>
    d800:	asrs	r4, r4, #1
    d802:	beq.n	d82e <__pow5mult+0x4e>
    d804:	ldr	r0, [r5, #0]
    d806:	cbz	r0, d834 <__pow5mult+0x54>
    d808:	mov	r5, r0
    d80a:	lsls	r3, r4, #31
    d80c:	bpl.n	d800 <__pow5mult+0x20>
    d80e:	mov	r2, r5
    d810:	mov	r1, r6
    d812:	mov	r0, r7
    d814:	bl	d6b0 <__multiply>
    d818:	cbz	r6, d848 <__pow5mult+0x68>
    d81a:	ldr	r2, [r6, #4]
    d81c:	ldr	r3, [r7, #76]	; 0x4c
    d81e:	asrs	r4, r4, #1
    d820:	ldr.w	r1, [r3, r2, lsl #2]
    d824:	str	r1, [r6, #0]
    d826:	str.w	r6, [r3, r2, lsl #2]
    d82a:	mov	r6, r0
    d82c:	bne.n	d804 <__pow5mult+0x24>
    d82e:	mov	r0, r6
    d830:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    d834:	mov	r2, r5
    d836:	mov	r1, r5
    d838:	mov	r0, r7
    d83a:	bl	d6b0 <__multiply>
    d83e:	str	r0, [r5, #0]
    d840:	str.w	r8, [r0]
    d844:	mov	r5, r0
    d846:	b.n	d80a <__pow5mult+0x2a>
    d848:	mov	r6, r0
    d84a:	b.n	d800 <__pow5mult+0x20>
    d84c:	subs	r2, r3, #1
    d84e:	ldr	r5, [pc, #44]	; (d87c <__pow5mult+0x9c>)
    d850:	movs	r3, #0
    d852:	ldr.w	r2, [r5, r2, lsl #2]
    d856:	bl	d580 <__multadd>
    d85a:	mov	r6, r0
    d85c:	b.n	d7f0 <__pow5mult+0x10>
    d85e:	movs	r1, #1
    d860:	mov	r0, r7
    d862:	bl	d520 <_Balloc>
    d866:	movw	r1, #625	; 0x271
    d86a:	movs	r2, #1
    d86c:	movs	r3, #0
    d86e:	str	r1, [r0, #20]
    d870:	str	r2, [r0, #16]
    d872:	mov	r5, r0
    d874:	str	r0, [r7, #72]	; 0x48
    d876:	str	r3, [r0, #0]
    d878:	b.n	d7f8 <__pow5mult+0x18>
    d87a:	nop
    d87c:	.word	0x0009e3e8

0000d880 <__lshift>:
    d880:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    d884:	mov	r9, r2
    d886:	ldr	r2, [r1, #16]
    d888:	ldr	r3, [r1, #8]
    d88a:	mov.w	r4, r9, asr #5
    d88e:	add.w	r8, r4, r2
    d892:	add.w	r5, r8, #1
    d896:	cmp	r5, r3
    d898:	mov	r6, r1
    d89a:	mov	sl, r0
    d89c:	ldr	r1, [r1, #4]
    d89e:	ble.n	d8aa <__lshift+0x2a>
    d8a0:	lsls	r3, r3, #1
    d8a2:	cmp	r5, r3
    d8a4:	add.w	r1, r1, #1
    d8a8:	bgt.n	d8a0 <__lshift+0x20>
    d8aa:	mov	r0, sl
    d8ac:	bl	d520 <_Balloc>
    d8b0:	cmp	r4, #0
    d8b2:	add.w	r2, r0, #20
    d8b6:	ble.n	d92a <__lshift+0xaa>
    d8b8:	add.w	r3, r2, r4, lsl #2
    d8bc:	movs	r1, #0
    d8be:	str.w	r1, [r2], #4
    d8c2:	cmp	r3, r2
    d8c4:	bne.n	d8be <__lshift+0x3e>
    d8c6:	ldr	r4, [r6, #16]
    d8c8:	add.w	r1, r6, #20
    d8cc:	ands.w	r9, r9, #31
    d8d0:	add.w	lr, r1, r4, lsl #2
    d8d4:	beq.n	d91a <__lshift+0x9a>
    d8d6:	rsb	r2, r9, #32
    d8da:	movs	r4, #0
    d8dc:	ldr	r7, [r1, #0]
    d8de:	lsl.w	ip, r7, r9
    d8e2:	orr.w	r4, ip, r4
    d8e6:	mov	ip, r3
    d8e8:	str.w	r4, [r3], #4
    d8ec:	ldr.w	r4, [r1], #4
    d8f0:	cmp	lr, r1
    d8f2:	lsr.w	r4, r4, r2
    d8f6:	bhi.n	d8dc <__lshift+0x5c>
    d8f8:	str.w	r4, [ip, #4]
    d8fc:	cbz	r4, d902 <__lshift+0x82>
    d8fe:	add.w	r5, r8, #2
    d902:	ldr.w	r3, [sl, #76]	; 0x4c
    d906:	ldr	r2, [r6, #4]
    d908:	subs	r5, #1
    d90a:	ldr.w	r1, [r3, r2, lsl #2]
    d90e:	str	r5, [r0, #16]
    d910:	str	r1, [r6, #0]
    d912:	str.w	r6, [r3, r2, lsl #2]
    d916:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    d91a:	subs	r3, #4
    d91c:	ldr.w	r2, [r1], #4
    d920:	str.w	r2, [r3, #4]!
    d924:	cmp	lr, r1
    d926:	bhi.n	d91c <__lshift+0x9c>
    d928:	b.n	d902 <__lshift+0x82>
    d92a:	mov	r3, r2
    d92c:	b.n	d8c6 <__lshift+0x46>
    d92e:	nop

0000d930 <__mcmp>:
    d930:	ldr	r2, [r0, #16]
    d932:	ldr	r3, [r1, #16]
    d934:	subs	r2, r2, r3
    d936:	bne.n	d960 <__mcmp+0x30>
    d938:	lsls	r3, r3, #2
    d93a:	adds	r0, #20
    d93c:	adds	r1, #20
    d93e:	add	r1, r3
    d940:	push	{r4}
    d942:	add	r3, r0
    d944:	b.n	d94a <__mcmp+0x1a>
    d946:	cmp	r0, r3
    d948:	bcs.n	d964 <__mcmp+0x34>
    d94a:	ldr.w	r4, [r3, #-4]!
    d94e:	ldr.w	r2, [r1, #-4]!
    d952:	cmp	r4, r2
    d954:	beq.n	d946 <__mcmp+0x16>
    d956:	bcc.n	d96c <__mcmp+0x3c>
    d958:	movs	r0, #1
    d95a:	ldr.w	r4, [sp], #4
    d95e:	bx	lr
    d960:	mov	r0, r2
    d962:	bx	lr
    d964:	movs	r0, #0
    d966:	ldr.w	r4, [sp], #4
    d96a:	bx	lr
    d96c:	mov.w	r0, #4294967295
    d970:	b.n	d95a <__mcmp+0x2a>
    d972:	nop

0000d974 <__mdiff>:
    d974:	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    d978:	ldr	r3, [r1, #16]
    d97a:	mov	r7, r1
    d97c:	ldr	r1, [r2, #16]
    d97e:	subs	r3, r3, r1
    d980:	cmp	r3, #0
    d982:	mov	r8, r2
    d984:	bne.n	d9b6 <__mdiff+0x42>
    d986:	lsls	r1, r1, #2
    d988:	add.w	r2, r7, #20
    d98c:	add.w	r5, r8, #20
    d990:	adds	r3, r2, r1
    d992:	add	r1, r5
    d994:	b.n	d99a <__mdiff+0x26>
    d996:	cmp	r2, r3
    d998:	bcs.n	da58 <__mdiff+0xe4>
    d99a:	ldr.w	r6, [r3, #-4]!
    d99e:	ldr.w	r4, [r1, #-4]!
    d9a2:	cmp	r6, r4
    d9a4:	beq.n	d996 <__mdiff+0x22>
    d9a6:	bcs.n	da6a <__mdiff+0xf6>
    d9a8:	mov	r3, r7
    d9aa:	mov	r4, r2
    d9ac:	mov	r7, r8
    d9ae:	mov.w	r9, #1
    d9b2:	mov	r8, r3
    d9b4:	b.n	d9c4 <__mdiff+0x50>
    d9b6:	blt.n	da74 <__mdiff+0x100>
    d9b8:	add.w	r5, r7, #20
    d9bc:	add.w	r4, r2, #20
    d9c0:	mov.w	r9, #0
    d9c4:	ldr	r1, [r7, #4]
    d9c6:	bl	d520 <_Balloc>
    d9ca:	ldr.w	r3, [r8, #16]
    d9ce:	ldr	r6, [r7, #16]
    d9d0:	str.w	r9, [r0, #12]
    d9d4:	add.w	ip, r4, r3, lsl #2
    d9d8:	mov	lr, r4
    d9da:	add.w	r7, r5, r6, lsl #2
    d9de:	add.w	r4, r0, #20
    d9e2:	movs	r3, #0
    d9e4:	ldr.w	r1, [lr], #4
    d9e8:	ldr.w	r8, [r5], #4
    d9ec:	uxth	r2, r1
    d9ee:	uxtah	r3, r3, r8
    d9f2:	lsrs	r1, r1, #16
    d9f4:	subs	r2, r3, r2
    d9f6:	rsb	r3, r1, r8, lsr #16
    d9fa:	add.w	r3, r3, r2, asr #16
    d9fe:	uxth	r2, r2
    da00:	orr.w	r2, r2, r3, lsl #16
    da04:	cmp	ip, lr
    da06:	str.w	r2, [r4], #4
    da0a:	mov.w	r3, r3, asr #16
    da0e:	bhi.n	d9e4 <__mdiff+0x70>
    da10:	cmp	r7, r5
    da12:	bls.n	da44 <__mdiff+0xd0>
    da14:	mov	ip, r4
    da16:	mov	r1, r5
    da18:	ldr.w	lr, [r1], #4
    da1c:	uxtah	r2, r3, lr
    da20:	asrs	r3, r2, #16
    da22:	add.w	r3, r3, lr, lsr #16
    da26:	uxth	r2, r2
    da28:	orr.w	r2, r2, r3, lsl #16
    da2c:	cmp	r7, r1
    da2e:	str.w	r2, [ip], #4
    da32:	mov.w	r3, r3, asr #16
    da36:	bhi.n	da18 <__mdiff+0xa4>
    da38:	mvns	r5, r5
    da3a:	add	r5, r7
    da3c:	bic.w	r5, r5, #3
    da40:	adds	r5, #4
    da42:	add	r4, r5
    da44:	subs	r4, #4
    da46:	cbnz	r2, da52 <__mdiff+0xde>
    da48:	ldr.w	r3, [r4, #-4]!
    da4c:	subs	r6, #1
    da4e:	cmp	r3, #0
    da50:	beq.n	da48 <__mdiff+0xd4>
    da52:	str	r6, [r0, #16]
    da54:	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    da58:	movs	r1, #0
    da5a:	bl	d520 <_Balloc>
    da5e:	movs	r2, #1
    da60:	movs	r3, #0
    da62:	str	r2, [r0, #16]
    da64:	str	r3, [r0, #20]
    da66:	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    da6a:	mov	r4, r5
    da6c:	mov.w	r9, #0
    da70:	mov	r5, r2
    da72:	b.n	d9c4 <__mdiff+0x50>
    da74:	mov	r3, r7
    da76:	add.w	r4, r7, #20
    da7a:	add.w	r5, r8, #20
    da7e:	mov	r7, r8
    da80:	mov.w	r9, #1
    da84:	mov	r8, r3
    da86:	b.n	d9c4 <__mdiff+0x50>

0000da88 <__d2b>:
    da88:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
    da8c:	vmov	r6, r7, d0
    da90:	sub	sp, #12
    da92:	mov	r8, r1
    da94:	movs	r1, #1
    da96:	mov	r4, r7
    da98:	ubfx	r5, r7, #20, #11
    da9c:	mov	r7, r2
    da9e:	bl	d520 <_Balloc>
    daa2:	ubfx	r4, r4, #0, #20
    daa6:	mov	r9, r0
    daa8:	cbz	r5, daae <__d2b+0x26>
    daaa:	orr.w	r4, r4, #1048576	; 0x100000
    daae:	str	r4, [sp, #4]
    dab0:	cbz	r6, dafa <__d2b+0x72>
    dab2:	add	r0, sp, #8
    dab4:	str.w	r6, [r0, #-8]!
    dab8:	bl	d640 <__lo0bits>
    dabc:	cmp	r0, #0
    dabe:	bne.n	db2a <__d2b+0xa2>
    dac0:	ldmia.w	sp, {r2, r3}
    dac4:	str.w	r2, [r9, #20]
    dac8:	cmp	r3, #0
    daca:	ite	eq
    dacc:	moveq	r1, #1
    dace:	movne	r1, #2
    dad0:	str.w	r3, [r9, #24]
    dad4:	str.w	r1, [r9, #16]
    dad8:	cbnz	r5, db12 <__d2b+0x8a>
    dada:	add.w	r3, r9, r1, lsl #2
    dade:	subw	r0, r0, #1074	; 0x432
    dae2:	str.w	r0, [r8]
    dae6:	ldr	r0, [r3, #16]
    dae8:	bl	d600 <__hi0bits>
    daec:	rsb	r0, r0, r1, lsl #5
    daf0:	str	r0, [r7, #0]
    daf2:	mov	r0, r9
    daf4:	add	sp, #12
    daf6:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    dafa:	add	r0, sp, #4
    dafc:	bl	d640 <__lo0bits>
    db00:	ldr	r3, [sp, #4]
    db02:	str.w	r3, [r9, #20]
    db06:	movs	r1, #1
    db08:	adds	r0, #32
    db0a:	str.w	r1, [r9, #16]
    db0e:	cmp	r5, #0
    db10:	beq.n	dada <__d2b+0x52>
    db12:	subw	r5, r5, #1075	; 0x433
    db16:	add	r5, r0
    db18:	rsb	r0, r0, #53	; 0x35
    db1c:	str.w	r5, [r8]
    db20:	str	r0, [r7, #0]
    db22:	mov	r0, r9
    db24:	add	sp, #12
    db26:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    db2a:	ldmia.w	sp, {r2, r3}
    db2e:	rsb	r1, r0, #32
    db32:	lsl.w	r1, r3, r1
    db36:	orrs	r2, r1
    db38:	lsrs	r3, r0
    db3a:	str	r3, [sp, #4]
    db3c:	str.w	r2, [r9, #20]
    db40:	b.n	dac8 <__d2b+0x40>
    db42:	nop

0000db44 <_vasnprintf_r>:
    db44:	push	{r4, r5, r6, lr}
    db46:	mov	r5, r2
    db48:	sub	sp, #104	; 0x68
    db4a:	ldr	r4, [r2, #0]
    db4c:	cbz	r1, db52 <_vasnprintf_r+0xe>
    db4e:	cmp	r4, #0
    db50:	bne.n	db88 <_vasnprintf_r+0x44>
    db52:	movs	r4, #0
    db54:	mov.w	r2, #648	; 0x288
    db58:	strh.w	r2, [sp, #12]
    db5c:	str	r4, [sp, #0]
    db5e:	str	r4, [sp, #16]
    db60:	mov	r2, r3
    db62:	movw	r6, #65535	; 0xffff
    db66:	ldr	r3, [sp, #120]	; 0x78
    db68:	str	r4, [sp, #8]
    db6a:	mov	r1, sp
    db6c:	str	r4, [sp, #20]
    db6e:	strh.w	r6, [sp, #14]
    db72:	bl	eb08 <_svfprintf_r>
    db76:	cmp	r0, #0
    db78:	blt.n	db9e <_vasnprintf_r+0x5a>
    db7a:	ldr	r3, [sp, #0]
    db7c:	str	r0, [r5, #0]
    db7e:	movs	r2, #0
    db80:	strb	r2, [r3, #0]
    db82:	ldr	r0, [sp, #16]
    db84:	add	sp, #104	; 0x68
    db86:	pop	{r4, r5, r6, pc}
    db88:	mov.w	r2, #1544	; 0x608
    db8c:	str	r1, [sp, #0]
    db8e:	str	r1, [sp, #16]
    db90:	strh.w	r2, [sp, #12]
    db94:	bge.n	db60 <_vasnprintf_r+0x1c>
    db96:	movs	r3, #139	; 0x8b
    db98:	str	r3, [r0, #0]
    db9a:	movs	r0, #0
    db9c:	b.n	db84 <_vasnprintf_r+0x40>
    db9e:	movs	r0, #0
    dba0:	b.n	db84 <_vasnprintf_r+0x40>
    dba2:	nop

0000dba4 <quorem>:
    dba4:	ldr	r2, [r0, #16]
    dba6:	ldr	r3, [r1, #16]
    dba8:	cmp	r3, r2
    dbaa:	bgt.w	dcc8 <quorem+0x124>
    dbae:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    dbb2:	add.w	r8, r3, #4294967295
    dbb6:	add.w	r7, r1, #20
    dbba:	add.w	fp, r0, #20
    dbbe:	ldr.w	r2, [r7, r8, lsl #2]
    dbc2:	ldr.w	r3, [fp, r8, lsl #2]
    dbc6:	mov.w	r4, r8, lsl #2
    dbca:	sub	sp, #12
    dbcc:	adds	r2, #1
    dbce:	udiv	r9, r3, r2
    dbd2:	add.w	r3, fp, r4
    dbd6:	str	r4, [sp, #0]
    dbd8:	add.w	sl, r7, r4
    dbdc:	str	r3, [sp, #4]
    dbde:	cmp.w	r9, #0
    dbe2:	beq.n	dc58 <quorem+0xb4>
    dbe4:	movs	r5, #0
    dbe6:	mov	ip, r7
    dbe8:	mov	lr, fp
    dbea:	mov	r3, r5
    dbec:	ldr.w	r6, [ip], #4
    dbf0:	ldr.w	r2, [lr]
    dbf4:	uxth	r4, r6
    dbf6:	mla	r5, r9, r4, r5
    dbfa:	lsrs	r6, r6, #16
    dbfc:	lsrs	r4, r5, #16
    dbfe:	mla	r4, r9, r6, r4
    dc02:	uxth	r5, r5
    dc04:	subs	r3, r3, r5
    dc06:	uxth	r6, r4
    dc08:	uxtah	r3, r3, r2
    dc0c:	rsb	r6, r6, r2, lsr #16
    dc10:	add.w	r6, r6, r3, asr #16
    dc14:	uxth	r3, r3
    dc16:	orr.w	r3, r3, r6, lsl #16
    dc1a:	cmp	sl, ip
    dc1c:	str.w	r3, [lr], #4
    dc20:	mov.w	r5, r4, lsr #16
    dc24:	mov.w	r3, r6, asr #16
    dc28:	bcs.n	dbec <quorem+0x48>
    dc2a:	ldr	r3, [sp, #0]
    dc2c:	ldr.w	r3, [fp, r3]
    dc30:	cbnz	r3, dc58 <quorem+0xb4>
    dc32:	ldr	r4, [sp, #4]
    dc34:	subs	r3, r4, #4
    dc36:	cmp	fp, r3
    dc38:	bcs.n	dc54 <quorem+0xb0>
    dc3a:	ldr.w	r3, [r4, #-4]
    dc3e:	cbnz	r3, dc54 <quorem+0xb0>
    dc40:	sub.w	r3, r4, #8
    dc44:	b.n	dc4c <quorem+0xa8>
    dc46:	ldr	r2, [r3, #0]
    dc48:	subs	r3, #4
    dc4a:	cbnz	r2, dc54 <quorem+0xb0>
    dc4c:	cmp	fp, r3
    dc4e:	add.w	r8, r8, #4294967295
    dc52:	bcc.n	dc46 <quorem+0xa2>
    dc54:	str.w	r8, [r0, #16]
    dc58:	mov	r4, r0
    dc5a:	bl	d930 <__mcmp>
    dc5e:	cmp	r0, #0
    dc60:	blt.n	dcc0 <quorem+0x11c>
    dc62:	add.w	r9, r9, #1
    dc66:	mov	r5, fp
    dc68:	movs	r3, #0
    dc6a:	ldr.w	r1, [r7], #4
    dc6e:	ldr	r0, [r5, #0]
    dc70:	uxth	r2, r1
    dc72:	subs	r2, r3, r2
    dc74:	lsrs	r1, r1, #16
    dc76:	uxtah	r2, r2, r0
    dc7a:	rsb	r3, r1, r0, lsr #16
    dc7e:	add.w	r3, r3, r2, asr #16
    dc82:	uxth	r1, r2
    dc84:	orr.w	r1, r1, r3, lsl #16
    dc88:	cmp	sl, r7
    dc8a:	str.w	r1, [r5], #4
    dc8e:	mov.w	r3, r3, asr #16
    dc92:	bcs.n	dc6a <quorem+0xc6>
    dc94:	ldr.w	r2, [fp, r8, lsl #2]
    dc98:	add.w	r3, fp, r8, lsl #2
    dc9c:	cbnz	r2, dcc0 <quorem+0x11c>
    dc9e:	subs	r2, r3, #4
    dca0:	cmp	fp, r2
    dca2:	bcs.n	dcbc <quorem+0x118>
    dca4:	ldr.w	r2, [r3, #-4]
    dca8:	cbnz	r2, dcbc <quorem+0x118>
    dcaa:	subs	r3, #8
    dcac:	b.n	dcb4 <quorem+0x110>
    dcae:	ldr	r2, [r3, #0]
    dcb0:	subs	r3, #4
    dcb2:	cbnz	r2, dcbc <quorem+0x118>
    dcb4:	cmp	fp, r3
    dcb6:	add.w	r8, r8, #4294967295
    dcba:	bcc.n	dcae <quorem+0x10a>
    dcbc:	str.w	r8, [r4, #16]
    dcc0:	mov	r0, r9
    dcc2:	add	sp, #12
    dcc4:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    dcc8:	movs	r0, #0
    dcca:	bx	lr
    dccc:			; <UNDEFINED> instruction: 0xffffffff

0000dcd0 <_dtoa_r>:
    dcd0:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    dcd4:	vmov	r6, r7, d0
    dcd8:	sub	sp, #108	; 0x6c
    dcda:	ldr	r4, [r0, #64]	; 0x40
    dcdc:	ldr	r5, [sp, #144]	; 0x90
    dcde:	str	r1, [sp, #0]
    dce0:	mov	r9, r0
    dce2:	str	r2, [sp, #20]
    dce4:	str	r3, [sp, #12]
    dce6:	vmov	sl, s0
    dcea:	mov	fp, r7
    dcec:	cbz	r4, dd04 <_dtoa_r+0x34>
    dcee:	ldr	r2, [r0, #68]	; 0x44
    dcf0:	str	r2, [r4, #4]
    dcf2:	movs	r3, #1
    dcf4:	lsls	r3, r2
    dcf6:	str	r3, [r4, #8]
    dcf8:	mov	r1, r4
    dcfa:	bl	d56c <_Bfree>
    dcfe:	movs	r3, #0
    dd00:	str.w	r3, [r9, #64]	; 0x40
    dd04:	cmp.w	fp, #0
    dd08:	mov	r4, fp
    dd0a:	blt.n	dd76 <_dtoa_r+0xa6>
    dd0c:	movs	r3, #0
    dd0e:	str	r3, [r5, #0]
    dd10:	ldr	r3, [pc, #644]	; (df98 <_dtoa_r+0x2c8>)
    dd12:	mov	r2, r3
    dd14:	ands	r3, r4
    dd16:	cmp	r3, r2
    dd18:	beq.n	dd48 <_dtoa_r+0x78>
    dd1a:	movs	r2, #0
    dd1c:	movs	r3, #0
    dd1e:	mov	r0, sl
    dd20:	mov	r1, fp
    dd22:	bl	b4dc <__aeabi_dcmpeq>
    dd26:	mov	r6, sl
    dd28:	mov	r7, fp
    dd2a:	mov	r8, r0
    dd2c:	cbz	r0, dd82 <_dtoa_r+0xb2>
    dd2e:	ldr	r2, [sp, #12]
    dd30:	movs	r3, #1
    dd32:	str	r3, [r2, #0]
    dd34:	ldr	r3, [sp, #148]	; 0x94
    dd36:	cmp	r3, #0
    dd38:	beq.w	deb8 <_dtoa_r+0x1e8>
    dd3c:	ldr	r0, [pc, #604]	; (df9c <_dtoa_r+0x2cc>)
    dd3e:	str	r0, [r3, #0]
    dd40:	subs	r0, #1
    dd42:	add	sp, #108	; 0x6c
    dd44:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    dd48:	ldr	r2, [sp, #12]
    dd4a:	movw	r3, #9999	; 0x270f
    dd4e:	str	r3, [r2, #0]
    dd50:	cmp.w	sl, #0
    dd54:	beq.w	de8c <_dtoa_r+0x1bc>
    dd58:	ldr	r0, [pc, #580]	; (dfa0 <_dtoa_r+0x2d0>)
    dd5a:	ldr	r3, [sp, #148]	; 0x94
    dd5c:	cmp	r3, #0
    dd5e:	beq.n	dd42 <_dtoa_r+0x72>
    dd60:	ldrb	r3, [r0, #3]
    dd62:	cmp	r3, #0
    dd64:	beq.w	debc <_dtoa_r+0x1ec>
    dd68:	add.w	r3, r0, #8
    dd6c:	ldr	r2, [sp, #148]	; 0x94
    dd6e:	str	r3, [r2, #0]
    dd70:	add	sp, #108	; 0x6c
    dd72:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    dd76:	movs	r3, #1
    dd78:	bic.w	r4, fp, #2147483648	; 0x80000000
    dd7c:	str	r3, [r5, #0]
    dd7e:	mov	fp, r4
    dd80:	b.n	dd10 <_dtoa_r+0x40>
    dd82:	add	r2, sp, #96	; 0x60
    dd84:	add	r1, sp, #100	; 0x64
    dd86:	vmov	d0, r6, r7
    dd8a:	mov	r0, r9
    dd8c:	bl	da88 <__d2b>
    dd90:	lsrs	r5, r4, #20
    dd92:	str	r0, [sp, #40]	; 0x28
    dd94:	bne.w	de9e <_dtoa_r+0x1ce>
    dd98:	ldr	r5, [sp, #96]	; 0x60
    dd9a:	ldr	r6, [sp, #100]	; 0x64
    dd9c:	add	r6, r5
    dd9e:	addw	r3, r6, #1074	; 0x432
    dda2:	cmp	r3, #32
    dda4:	ble.w	e2b8 <_dtoa_r+0x5e8>
    dda8:	rsb	r3, r3, #64	; 0x40
    ddac:	addw	r0, r6, #1042	; 0x412
    ddb0:	lsls	r4, r3
    ddb2:	lsr.w	r0, sl, r0
    ddb6:	orrs	r0, r4
    ddb8:	bl	af20 <__aeabi_ui2d>
    ddbc:	movs	r3, #1
    ddbe:	subs	r4, r6, #1
    ddc0:	sub.w	r1, r1, #32505856	; 0x1f00000
    ddc4:	str	r3, [sp, #60]	; 0x3c
    ddc6:	movs	r2, #0
    ddc8:	ldr	r3, [pc, #472]	; (dfa4 <_dtoa_r+0x2d4>)
    ddca:	bl	aca4 <__aeabi_dsub>
    ddce:	add	r3, pc, #432	; (adr r3, df80 <_dtoa_r+0x2b0>)
    ddd0:	ldrd	r2, r3, [r3]
    ddd4:	bl	b00c <__aeabi_dmul>
    ddd8:	add	r3, pc, #428	; (adr r3, df88 <_dtoa_r+0x2b8>)
    ddda:	ldrd	r2, r3, [r3]
    ddde:	bl	aca8 <__adddf3>
    dde2:	mov	r6, r0
    dde4:	mov	r0, r4
    dde6:	mov	r7, r1
    dde8:	bl	af40 <__aeabi_i2d>
    ddec:	add	r3, pc, #416	; (adr r3, df90 <_dtoa_r+0x2c0>)
    ddee:	ldrd	r2, r3, [r3]
    ddf2:	bl	b00c <__aeabi_dmul>
    ddf6:	mov	r2, r0
    ddf8:	mov	r3, r1
    ddfa:	mov	r0, r6
    ddfc:	mov	r1, r7
    ddfe:	bl	aca8 <__adddf3>
    de02:	mov	r6, r0
    de04:	mov	r7, r1
    de06:	bl	b56c <__aeabi_d2iz>
    de0a:	movs	r2, #0
    de0c:	str	r0, [sp, #16]
    de0e:	movs	r3, #0
    de10:	mov	r0, r6
    de12:	mov	r1, r7
    de14:	bl	b4f0 <__aeabi_dcmplt>
    de18:	cmp	r0, #0
    de1a:	bne.w	e26e <_dtoa_r+0x59e>
    de1e:	ldr	r6, [sp, #16]
    de20:	cmp	r6, #22
    de22:	bhi.w	e268 <_dtoa_r+0x598>
    de26:	ldr	r3, [pc, #384]	; (dfa8 <_dtoa_r+0x2d8>)
    de28:	add.w	r3, r3, r6, lsl #3
    de2c:	ldrd	r0, r1, [r3]
    de30:	mov	r2, sl
    de32:	mov	r3, fp
    de34:	bl	b52c <__aeabi_dcmpgt>
    de38:	cmp	r0, #0
    de3a:	beq.w	e2c2 <_dtoa_r+0x5f2>
    de3e:	subs	r3, r6, #1
    de40:	str	r3, [sp, #16]
    de42:	movs	r3, #0
    de44:	str	r3, [sp, #52]	; 0x34
    de46:	subs	r5, r5, r4
    de48:	subs.w	r8, r5, #1
    de4c:	bmi.w	e2a4 <_dtoa_r+0x5d4>
    de50:	movs	r3, #0
    de52:	str	r3, [sp, #28]
    de54:	ldr	r3, [sp, #16]
    de56:	cmp	r3, #0
    de58:	blt.w	e292 <_dtoa_r+0x5c2>
    de5c:	add	r8, r3
    de5e:	str	r3, [sp, #48]	; 0x30
    de60:	movs	r3, #0
    de62:	str	r3, [sp, #24]
    de64:	ldr	r3, [sp, #0]
    de66:	cmp	r3, #9
    de68:	bhi.n	dec0 <_dtoa_r+0x1f0>
    de6a:	cmp	r3, #5
    de6c:	ble.w	eaf8 <_dtoa_r+0xe28>
    de70:	subs	r3, #4
    de72:	str	r3, [sp, #0]
    de74:	movs	r6, #0
    de76:	ldr	r3, [sp, #0]
    de78:	subs	r3, #2
    de7a:	cmp	r3, #3
    de7c:	bhi.w	eac6 <_dtoa_r+0xdf6>
    de80:	tbh	[pc, r3, lsl #1]
    de84:	.word	0x0224032b
    de88:	.word	0x04500336
    de8c:	ldr	r3, [pc, #272]	; (dfa0 <_dtoa_r+0x2d0>)
    de8e:	ldr	r2, [pc, #284]	; (dfac <_dtoa_r+0x2dc>)
    de90:	ubfx	r0, r4, #0, #20
    de94:	cmp	r0, #0
    de96:	ite	ne
    de98:	movne	r0, r3
    de9a:	moveq	r0, r2
    de9c:	b.n	dd5a <_dtoa_r+0x8a>
    de9e:	ubfx	r3, fp, #0, #20
    dea2:	orr.w	r1, r3, #1069547520	; 0x3fc00000
    dea6:	subw	r4, r5, #1023	; 0x3ff
    deaa:	mov	r0, sl
    deac:	str.w	r8, [sp, #60]	; 0x3c
    deb0:	orr.w	r1, r1, #3145728	; 0x300000
    deb4:	ldr	r5, [sp, #96]	; 0x60
    deb6:	b.n	ddc6 <_dtoa_r+0xf6>
    deb8:	ldr	r0, [pc, #244]	; (dfb0 <_dtoa_r+0x2e0>)
    deba:	b.n	dd42 <_dtoa_r+0x72>
    debc:	adds	r3, r0, #3
    debe:	b.n	dd6c <_dtoa_r+0x9c>
    dec0:	movs	r1, #0
    dec2:	str.w	r1, [r9, #68]	; 0x44
    dec6:	mov	r0, r9
    dec8:	mov	r4, r1
    deca:	str	r1, [sp, #0]
    decc:	bl	d520 <_Balloc>
    ded0:	mov.w	r3, #4294967295
    ded4:	str	r3, [sp, #32]
    ded6:	str	r3, [sp, #56]	; 0x38
    ded8:	movs	r3, #1
    deda:	str	r0, [sp, #36]	; 0x24
    dedc:	str.w	r0, [r9, #64]	; 0x40
    dee0:	str	r4, [sp, #20]
    dee2:	str	r3, [sp, #44]	; 0x2c
    dee4:	ldr	r3, [sp, #100]	; 0x64
    dee6:	cmp	r3, #0
    dee8:	blt.w	e08c <_dtoa_r+0x3bc>
    deec:	ldr	r2, [sp, #16]
    deee:	cmp	r2, #14
    def0:	bgt.w	e08c <_dtoa_r+0x3bc>
    def4:	ldr	r3, [pc, #176]	; (dfa8 <_dtoa_r+0x2d8>)
    def6:	add.w	r3, r3, r2, lsl #3
    defa:	vldr	d7, [r3]
    defe:	ldr	r3, [sp, #20]
    df00:	cmp	r3, #0
    df02:	vstr	d7, [sp]
    df06:	blt.w	e506 <_dtoa_r+0x836>
    df0a:	mov	r6, sl
    df0c:	mov	r7, fp
    df0e:	ldrd	sl, fp, [sp]
    df12:	mov	r0, r6
    df14:	mov	r2, sl
    df16:	mov	r3, fp
    df18:	mov	r1, r7
    df1a:	bl	b260 <__aeabi_ddiv>
    df1e:	bl	b56c <__aeabi_d2iz>
    df22:	mov	r4, r0
    df24:	bl	af40 <__aeabi_i2d>
    df28:	mov	r2, sl
    df2a:	mov	r3, fp
    df2c:	bl	b00c <__aeabi_dmul>
    df30:	mov	r3, r1
    df32:	mov	r2, r0
    df34:	mov	r1, r7
    df36:	mov	r0, r6
    df38:	bl	aca4 <__aeabi_dsub>
    df3c:	ldr	r5, [sp, #36]	; 0x24
    df3e:	add.w	r3, r4, #48	; 0x30
    df42:	strb	r3, [r5, #0]
    df44:	ldr	r3, [sp, #32]
    df46:	cmp	r3, #1
    df48:	mov	r6, r0
    df4a:	mov	r7, r1
    df4c:	add.w	r5, r5, #1
    df50:	beq.n	e016 <_dtoa_r+0x346>
    df52:	movs	r2, #0
    df54:	ldr	r3, [pc, #92]	; (dfb4 <_dtoa_r+0x2e4>)
    df56:	bl	b00c <__aeabi_dmul>
    df5a:	movs	r2, #0
    df5c:	movs	r3, #0
    df5e:	mov	r6, r0
    df60:	mov	r7, r1
    df62:	bl	b4dc <__aeabi_dcmpeq>
    df66:	cmp	r0, #0
    df68:	bne.n	e066 <_dtoa_r+0x396>
    df6a:	str.w	r9, [sp, #20]
    df6e:	ldr.w	sl, [sp, #32]
    df72:	ldr.w	fp, [sp, #36]	; 0x24
    df76:	ldrd	r8, r9, [sp]
    df7a:	b.n	dfce <_dtoa_r+0x2fe>
    df7c:	nop.w
    df80:	.word	0x636f4361
    df84:	.word	0x3fd287a7
    df88:	.word	0x8b60c8b3
    df8c:	.word	0x3fc68a28
    df90:	.word	0x509f79fb
    df94:	.word	0x3fd34413
    df98:	.word	0x7ff00000
    df9c:	.word	0x0009e405
    dfa0:	.word	0x0009e400
    dfa4:	.word	0x3ff80000
    dfa8:	.word	0x0009e2f8
    dfac:	.word	0x0009e3f4
    dfb0:	.word	0x0009e404
    dfb4:	.word	0x40240000
    dfb8:	bl	b00c <__aeabi_dmul>
    dfbc:	movs	r2, #0
    dfbe:	movs	r3, #0
    dfc0:	mov	r6, r0
    dfc2:	mov	r7, r1
    dfc4:	bl	b4dc <__aeabi_dcmpeq>
    dfc8:	cmp	r0, #0
    dfca:	bne.w	e72a <_dtoa_r+0xa5a>
    dfce:	mov	r2, r8
    dfd0:	mov	r3, r9
    dfd2:	mov	r0, r6
    dfd4:	mov	r1, r7
    dfd6:	bl	b260 <__aeabi_ddiv>
    dfda:	bl	b56c <__aeabi_d2iz>
    dfde:	mov	r4, r0
    dfe0:	bl	af40 <__aeabi_i2d>
    dfe4:	mov	r2, r8
    dfe6:	mov	r3, r9
    dfe8:	bl	b00c <__aeabi_dmul>
    dfec:	mov	r2, r0
    dfee:	mov	r3, r1
    dff0:	mov	r0, r6
    dff2:	mov	r1, r7
    dff4:	bl	aca4 <__aeabi_dsub>
    dff8:	add.w	lr, r4, #48	; 0x30
    dffc:	strb.w	lr, [r5], #1
    e000:	rsb	lr, fp, r5
    e004:	cmp	lr, sl
    e006:	mov	r6, r0
    e008:	mov	r7, r1
    e00a:	mov.w	r2, #0
    e00e:	ldr	r3, [pc, #696]	; (e2c8 <_dtoa_r+0x5f8>)
    e010:	bne.n	dfb8 <_dtoa_r+0x2e8>
    e012:	ldr.w	r9, [sp, #20]
    e016:	mov	r2, r6
    e018:	mov	r3, r7
    e01a:	mov	r0, r6
    e01c:	mov	r1, r7
    e01e:	bl	aca8 <__adddf3>
    e022:	mov	r6, r0
    e024:	mov	r7, r1
    e026:	mov	r2, r0
    e028:	mov	r3, r1
    e02a:	ldrd	r0, r1, [sp]
    e02e:	bl	b4f0 <__aeabi_dcmplt>
    e032:	cbnz	r0, e046 <_dtoa_r+0x376>
    e034:	mov	r2, r6
    e036:	mov	r3, r7
    e038:	ldrd	r0, r1, [sp]
    e03c:	bl	b4dc <__aeabi_dcmpeq>
    e040:	cbz	r0, e066 <_dtoa_r+0x396>
    e042:	lsls	r3, r4, #31
    e044:	bpl.n	e066 <_dtoa_r+0x396>
    e046:	ldrb.w	r4, [r5, #-1]
    e04a:	ldr	r2, [sp, #36]	; 0x24
    e04c:	subs	r3, r5, #1
    e04e:	b.n	e05a <_dtoa_r+0x38a>
    e050:	cmp	r2, r3
    e052:	beq.w	e84e <_dtoa_r+0xb7e>
    e056:	ldrb.w	r4, [r3, #-1]!
    e05a:	cmp	r4, #57	; 0x39
    e05c:	add.w	r5, r3, #1
    e060:	beq.n	e050 <_dtoa_r+0x380>
    e062:	adds	r4, #1
    e064:	strb	r4, [r3, #0]
    e066:	ldr	r1, [sp, #40]	; 0x28
    e068:	mov	r0, r9
    e06a:	bl	d56c <_Bfree>
    e06e:	movs	r2, #0
    e070:	ldr	r3, [sp, #16]
    e072:	strb	r2, [r5, #0]
    e074:	ldr	r2, [sp, #12]
    e076:	adds	r3, #1
    e078:	str	r3, [r2, #0]
    e07a:	ldr	r3, [sp, #148]	; 0x94
    e07c:	cmp	r3, #0
    e07e:	beq.w	e7b8 <_dtoa_r+0xae8>
    e082:	ldr	r0, [sp, #36]	; 0x24
    e084:	str	r5, [r3, #0]
    e086:	add	sp, #108	; 0x6c
    e088:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    e08c:	ldr	r2, [sp, #44]	; 0x2c
    e08e:	cmp	r2, #0
    e090:	beq.w	e2b0 <_dtoa_r+0x5e0>
    e094:	ldr	r2, [sp, #0]
    e096:	cmp	r2, #1
    e098:	ble.w	e54a <_dtoa_r+0x87a>
    e09c:	ldr	r3, [sp, #32]
    e09e:	ldr	r2, [sp, #24]
    e0a0:	subs	r7, r3, #1
    e0a2:	cmp	r2, r7
    e0a4:	blt.w	e7be <_dtoa_r+0xaee>
    e0a8:	subs	r7, r2, r7
    e0aa:	ldr	r3, [sp, #32]
    e0ac:	cmp	r3, #0
    e0ae:	blt.w	e9b2 <_dtoa_r+0xce2>
    e0b2:	ldr	r5, [sp, #28]
    e0b4:	ldr	r3, [sp, #32]
    e0b6:	ldr	r2, [sp, #28]
    e0b8:	movs	r1, #1
    e0ba:	add	r2, r3
    e0bc:	mov	r0, r9
    e0be:	str	r2, [sp, #28]
    e0c0:	add	r8, r3
    e0c2:	bl	d69c <__i2b>
    e0c6:	mov	r6, r0
    e0c8:	cbz	r5, e0e4 <_dtoa_r+0x414>
    e0ca:	cmp.w	r8, #0
    e0ce:	ble.n	e0e4 <_dtoa_r+0x414>
    e0d0:	cmp	r5, r8
    e0d2:	ldr	r2, [sp, #28]
    e0d4:	mov	r3, r5
    e0d6:	it	ge
    e0d8:	movge	r3, r8
    e0da:	subs	r2, r2, r3
    e0dc:	str	r2, [sp, #28]
    e0de:	subs	r5, r5, r3
    e0e0:	rsb	r8, r3, r8
    e0e4:	ldr	r3, [sp, #24]
    e0e6:	cmp	r3, #0
    e0e8:	ble.w	e6d6 <_dtoa_r+0xa06>
    e0ec:	ldr	r2, [sp, #44]	; 0x2c
    e0ee:	cmp	r2, #0
    e0f0:	beq.w	e4f8 <_dtoa_r+0x828>
    e0f4:	cmp	r7, #0
    e0f6:	beq.w	e4f8 <_dtoa_r+0x828>
    e0fa:	mov	r1, r6
    e0fc:	mov	r2, r7
    e0fe:	mov	r0, r9
    e100:	bl	d7e0 <__pow5mult>
    e104:	ldr	r2, [sp, #40]	; 0x28
    e106:	mov	r1, r0
    e108:	mov	r6, r0
    e10a:	mov	r0, r9
    e10c:	bl	d6b0 <__multiply>
    e110:	ldr	r1, [sp, #40]	; 0x28
    e112:	mov	r4, r0
    e114:	mov	r0, r9
    e116:	bl	d56c <_Bfree>
    e11a:	ldr	r3, [sp, #24]
    e11c:	subs	r3, r3, r7
    e11e:	str	r3, [sp, #24]
    e120:	bne.w	e4f6 <_dtoa_r+0x826>
    e124:	movs	r1, #1
    e126:	mov	r0, r9
    e128:	bl	d69c <__i2b>
    e12c:	ldr	r3, [sp, #48]	; 0x30
    e12e:	str	r0, [sp, #24]
    e130:	cmp	r3, #0
    e132:	beq.w	e560 <_dtoa_r+0x890>
    e136:	mov	r1, r0
    e138:	mov	r2, r3
    e13a:	mov	r0, r9
    e13c:	bl	d7e0 <__pow5mult>
    e140:	ldr	r3, [sp, #0]
    e142:	str	r0, [sp, #24]
    e144:	cmp	r3, #1
    e146:	ble.w	e730 <_dtoa_r+0xa60>
    e14a:	movs	r7, #0
    e14c:	ldr	r2, [sp, #24]
    e14e:	ldr	r3, [r2, #16]
    e150:	add.w	r3, r2, r3, lsl #2
    e154:	ldr	r0, [r3, #16]
    e156:	bl	d600 <__hi0bits>
    e15a:	rsb	r0, r0, #32
    e15e:	add	r0, r8
    e160:	ands.w	r0, r0, #31
    e164:	beq.w	e55c <_dtoa_r+0x88c>
    e168:	rsb	r3, r0, #32
    e16c:	cmp	r3, #4
    e16e:	ble.w	eaec <_dtoa_r+0xe1c>
    e172:	rsb	r0, r0, #28
    e176:	ldr	r3, [sp, #28]
    e178:	add	r3, r0
    e17a:	str	r3, [sp, #28]
    e17c:	add	r5, r0
    e17e:	add	r8, r0
    e180:	ldr	r3, [sp, #28]
    e182:	cmp	r3, #0
    e184:	ble.n	e192 <_dtoa_r+0x4c2>
    e186:	mov	r1, r4
    e188:	mov	r2, r3
    e18a:	mov	r0, r9
    e18c:	bl	d880 <__lshift>
    e190:	mov	r4, r0
    e192:	cmp.w	r8, #0
    e196:	ble.n	e1a4 <_dtoa_r+0x4d4>
    e198:	mov	r2, r8
    e19a:	ldr	r1, [sp, #24]
    e19c:	mov	r0, r9
    e19e:	bl	d880 <__lshift>
    e1a2:	str	r0, [sp, #24]
    e1a4:	ldr	r3, [sp, #52]	; 0x34
    e1a6:	cmp	r3, #0
    e1a8:	bne.w	e6a0 <_dtoa_r+0x9d0>
    e1ac:	ldr	r3, [sp, #32]
    e1ae:	cmp	r3, #0
    e1b0:	ble.w	e6da <_dtoa_r+0xa0a>
    e1b4:	ldr	r3, [sp, #44]	; 0x2c
    e1b6:	cmp	r3, #0
    e1b8:	bne.w	e5a4 <_dtoa_r+0x8d4>
    e1bc:	ldr.w	fp, [sp, #36]	; 0x24
    e1c0:	ldr	r7, [sp, #32]
    e1c2:	ldr.w	r8, [sp, #24]
    e1c6:	mov	r5, fp
    e1c8:	b.n	e1d0 <_dtoa_r+0x500>
    e1ca:	bl	d580 <__multadd>
    e1ce:	mov	r4, r0
    e1d0:	mov	r1, r8
    e1d2:	mov	r0, r4
    e1d4:	bl	dba4 <quorem>
    e1d8:	add.w	sl, r0, #48	; 0x30
    e1dc:	strb.w	sl, [r5], #1
    e1e0:	rsb	r3, fp, r5
    e1e4:	cmp	r3, r7
    e1e6:	mov.w	r2, #10
    e1ea:	mov.w	r3, #0
    e1ee:	mov	r1, r4
    e1f0:	mov	r0, r9
    e1f2:	blt.n	e1ca <_dtoa_r+0x4fa>
    e1f4:	ldr	r3, [sp, #36]	; 0x24
    e1f6:	ldr	r2, [sp, #32]
    e1f8:	cmp	r2, #1
    e1fa:	ite	ge
    e1fc:	addge	r3, r3, r2
    e1fe:	addlt	r3, #1
    e200:	mov	r5, r3
    e202:	mov.w	fp, #0
    e206:	mov	r1, r4
    e208:	movs	r2, #1
    e20a:	mov	r0, r9
    e20c:	bl	d880 <__lshift>
    e210:	ldr	r1, [sp, #24]
    e212:	str	r0, [sp, #40]	; 0x28
    e214:	bl	d930 <__mcmp>
    e218:	cmp	r0, #0
    e21a:	ble.w	e828 <_dtoa_r+0xb58>
    e21e:	ldrb.w	r2, [r5, #-1]
    e222:	ldr	r1, [sp, #36]	; 0x24
    e224:	subs	r3, r5, #1
    e226:	b.n	e232 <_dtoa_r+0x562>
    e228:	cmp	r3, r1
    e22a:	beq.w	e716 <_dtoa_r+0xa46>
    e22e:	ldrb.w	r2, [r3, #-1]!
    e232:	cmp	r2, #57	; 0x39
    e234:	add.w	r5, r3, #1
    e238:	beq.n	e228 <_dtoa_r+0x558>
    e23a:	adds	r2, #1
    e23c:	strb	r2, [r3, #0]
    e23e:	ldr	r1, [sp, #24]
    e240:	mov	r0, r9
    e242:	bl	d56c <_Bfree>
    e246:	cmp	r6, #0
    e248:	beq.w	e066 <_dtoa_r+0x396>
    e24c:	cmp.w	fp, #0
    e250:	beq.n	e25e <_dtoa_r+0x58e>
    e252:	cmp	fp, r6
    e254:	beq.n	e25e <_dtoa_r+0x58e>
    e256:	mov	r1, fp
    e258:	mov	r0, r9
    e25a:	bl	d56c <_Bfree>
    e25e:	mov	r1, r6
    e260:	mov	r0, r9
    e262:	bl	d56c <_Bfree>
    e266:	b.n	e066 <_dtoa_r+0x396>
    e268:	movs	r3, #1
    e26a:	str	r3, [sp, #52]	; 0x34
    e26c:	b.n	de46 <_dtoa_r+0x176>
    e26e:	ldr.w	r8, [sp, #16]
    e272:	mov	r0, r8
    e274:	bl	af40 <__aeabi_i2d>
    e278:	mov	r2, r0
    e27a:	mov	r3, r1
    e27c:	mov	r0, r6
    e27e:	mov	r1, r7
    e280:	bl	b4dc <__aeabi_dcmpeq>
    e284:	cmp	r0, #0
    e286:	bne.w	de1e <_dtoa_r+0x14e>
    e28a:	add.w	r3, r8, #4294967295
    e28e:	str	r3, [sp, #16]
    e290:	b.n	de1e <_dtoa_r+0x14e>
    e292:	ldr	r2, [sp, #28]
    e294:	ldr	r3, [sp, #16]
    e296:	subs	r2, r2, r3
    e298:	negs	r3, r3
    e29a:	str	r3, [sp, #24]
    e29c:	movs	r3, #0
    e29e:	str	r2, [sp, #28]
    e2a0:	str	r3, [sp, #48]	; 0x30
    e2a2:	b.n	de64 <_dtoa_r+0x194>
    e2a4:	rsb	r3, r8, #0
    e2a8:	str	r3, [sp, #28]
    e2aa:	mov.w	r8, #0
    e2ae:	b.n	de54 <_dtoa_r+0x184>
    e2b0:	ldr	r7, [sp, #24]
    e2b2:	ldr	r5, [sp, #28]
    e2b4:	ldr	r6, [sp, #44]	; 0x2c
    e2b6:	b.n	e0c8 <_dtoa_r+0x3f8>
    e2b8:	rsb	r4, r3, #32
    e2bc:	lsl.w	r0, sl, r4
    e2c0:	b.n	ddb8 <_dtoa_r+0xe8>
    e2c2:	str	r0, [sp, #52]	; 0x34
    e2c4:	b.n	de46 <_dtoa_r+0x176>
    e2c6:	nop
    e2c8:	.word	0x40240000
    e2cc:	movs	r3, #0
    e2ce:	str	r3, [sp, #44]	; 0x2c
    e2d0:	ldr	r3, [sp, #16]
    e2d2:	ldr	r2, [sp, #20]
    e2d4:	add	r3, r2
    e2d6:	str	r3, [sp, #56]	; 0x38
    e2d8:	adds	r3, #1
    e2da:	cmp	r3, #0
    e2dc:	str	r3, [sp, #32]
    e2de:	ble.w	e7dc <_dtoa_r+0xb0c>
    e2e2:	ldr	r4, [sp, #32]
    e2e4:	mov	r5, r4
    e2e6:	movs	r1, #0
    e2e8:	cmp	r5, #23
    e2ea:	str.w	r1, [r9, #68]	; 0x44
    e2ee:	bls.n	e308 <_dtoa_r+0x638>
    e2f0:	movs	r2, #1
    e2f2:	movs	r3, #4
    e2f4:	lsls	r3, r3, #1
    e2f6:	add.w	r0, r3, #20
    e2fa:	cmp	r0, r5
    e2fc:	mov	r1, r2
    e2fe:	add.w	r2, r2, #1
    e302:	bls.n	e2f4 <_dtoa_r+0x624>
    e304:	str.w	r1, [r9, #68]	; 0x44
    e308:	mov	r0, r9
    e30a:	bl	d520 <_Balloc>
    e30e:	cmp	r4, #14
    e310:	str	r0, [sp, #36]	; 0x24
    e312:	str.w	r0, [r9, #64]	; 0x40
    e316:	bhi.w	dee4 <_dtoa_r+0x214>
    e31a:	cmp	r6, #0
    e31c:	beq.w	dee4 <_dtoa_r+0x214>
    e320:	ldr	r1, [sp, #16]
    e322:	cmp	r1, #0
    e324:	strd	sl, fp, [sp, #64]	; 0x40
    e328:	ble.w	e860 <_dtoa_r+0xb90>
    e32c:	ldr	r3, [pc, #576]	; (e570 <_dtoa_r+0x8a0>)
    e32e:	and.w	r2, r1, #15
    e332:	asrs	r6, r1, #4
    e334:	add.w	r3, r3, r2, lsl #3
    e338:	lsls	r0, r6, #27
    e33a:	ldrd	r4, r5, [r3]
    e33e:	bpl.w	e7ce <_dtoa_r+0xafe>
    e342:	ldr	r3, [pc, #560]	; (e574 <_dtoa_r+0x8a4>)
    e344:	mov	r0, sl
    e346:	mov	r1, fp
    e348:	ldrd	r2, r3, [r3, #32]
    e34c:	bl	b260 <__aeabi_ddiv>
    e350:	strd	r0, r1, [sp, #72]	; 0x48
    e354:	and.w	r6, r6, #15
    e358:	mov.w	sl, #3
    e35c:	cbz	r6, e380 <_dtoa_r+0x6b0>
    e35e:	ldr	r7, [pc, #532]	; (e574 <_dtoa_r+0x8a4>)
    e360:	lsls	r1, r6, #31
    e362:	bpl.n	e378 <_dtoa_r+0x6a8>
    e364:	mov	r0, r4
    e366:	mov	r1, r5
    e368:	ldrd	r2, r3, [r7]
    e36c:	bl	b00c <__aeabi_dmul>
    e370:	add.w	sl, sl, #1
    e374:	mov	r4, r0
    e376:	mov	r5, r1
    e378:	asrs	r6, r6, #1
    e37a:	add.w	r7, r7, #8
    e37e:	bne.n	e360 <_dtoa_r+0x690>
    e380:	mov	r2, r4
    e382:	mov	r3, r5
    e384:	ldrd	r0, r1, [sp, #72]	; 0x48
    e388:	bl	b260 <__aeabi_ddiv>
    e38c:	mov	r6, r0
    e38e:	mov	r7, r1
    e390:	ldr	r3, [sp, #52]	; 0x34
    e392:	cbz	r3, e3a6 <_dtoa_r+0x6d6>
    e394:	movs	r2, #0
    e396:	ldr	r3, [pc, #480]	; (e578 <_dtoa_r+0x8a8>)
    e398:	mov	r0, r6
    e39a:	mov	r1, r7
    e39c:	bl	b4f0 <__aeabi_dcmplt>
    e3a0:	cmp	r0, #0
    e3a2:	bne.w	e9da <_dtoa_r+0xd0a>
    e3a6:	mov	r0, sl
    e3a8:	bl	af40 <__aeabi_i2d>
    e3ac:	mov	r2, r6
    e3ae:	mov	r3, r7
    e3b0:	bl	b00c <__aeabi_dmul>
    e3b4:	ldr	r3, [pc, #452]	; (e57c <_dtoa_r+0x8ac>)
    e3b6:	movs	r2, #0
    e3b8:	bl	aca8 <__adddf3>
    e3bc:	ldr	r3, [sp, #32]
    e3be:	mov	r4, r0
    e3c0:	sub.w	r5, r1, #54525952	; 0x3400000
    e3c4:	cmp	r3, #0
    e3c6:	beq.w	e780 <_dtoa_r+0xab0>
    e3ca:	ldr	r3, [sp, #16]
    e3cc:	str	r3, [sp, #88]	; 0x58
    e3ce:	ldr	r3, [sp, #32]
    e3d0:	str	r3, [sp, #72]	; 0x48
    e3d2:	ldr	r3, [sp, #44]	; 0x2c
    e3d4:	cmp	r3, #0
    e3d6:	beq.w	e902 <_dtoa_r+0xc32>
    e3da:	ldr	r2, [sp, #72]	; 0x48
    e3dc:	ldr	r3, [pc, #400]	; (e570 <_dtoa_r+0x8a0>)
    e3de:	ldr	r1, [pc, #416]	; (e580 <_dtoa_r+0x8b0>)
    e3e0:	add.w	r3, r3, r2, lsl #3
    e3e4:	ldrd	r2, r3, [r3, #-8]
    e3e8:	movs	r0, #0
    e3ea:	bl	b260 <__aeabi_ddiv>
    e3ee:	mov	r2, r4
    e3f0:	mov	r3, r5
    e3f2:	bl	aca4 <__aeabi_dsub>
    e3f6:	mov	sl, r0
    e3f8:	mov	fp, r1
    e3fa:	mov	r0, r6
    e3fc:	mov	r1, r7
    e3fe:	bl	b56c <__aeabi_d2iz>
    e402:	mov	r4, r0
    e404:	bl	af40 <__aeabi_i2d>
    e408:	mov	r2, r0
    e40a:	mov	r3, r1
    e40c:	mov	r0, r6
    e40e:	mov	r1, r7
    e410:	bl	aca4 <__aeabi_dsub>
    e414:	adds	r4, #48	; 0x30
    e416:	ldr	r5, [sp, #36]	; 0x24
    e418:	uxtb	r4, r4
    e41a:	mov	r6, r0
    e41c:	mov	r7, r1
    e41e:	strb	r4, [r5, #0]
    e420:	mov	r2, r0
    e422:	mov	r3, r1
    e424:	mov	r0, sl
    e426:	mov	r1, fp
    e428:	adds	r5, #1
    e42a:	bl	b52c <__aeabi_dcmpgt>
    e42e:	cmp	r0, #0
    e430:	bne.n	e4d4 <_dtoa_r+0x804>
    e432:	mov	r2, r6
    e434:	mov	r3, r7
    e436:	movs	r0, #0
    e438:	ldr	r1, [pc, #316]	; (e578 <_dtoa_r+0x8a8>)
    e43a:	bl	aca4 <__aeabi_dsub>
    e43e:	mov	r2, r0
    e440:	mov	r3, r1
    e442:	mov	r0, sl
    e444:	mov	r1, fp
    e446:	bl	b52c <__aeabi_dcmpgt>
    e44a:	cmp	r0, #0
    e44c:	bne.w	ea60 <_dtoa_r+0xd90>
    e450:	ldr	r2, [sp, #72]	; 0x48
    e452:	cmp	r2, #1
    e454:	ble.w	e846 <_dtoa_r+0xb76>
    e458:	ldr	r3, [sp, #72]	; 0x48
    e45a:	ldr	r2, [sp, #36]	; 0x24
    e45c:	str.w	r8, [sp, #72]	; 0x48
    e460:	add	r3, r2
    e462:	mov	r8, r3
    e464:	b.n	e482 <_dtoa_r+0x7b2>
    e466:	movs	r0, #0
    e468:	ldr	r1, [pc, #268]	; (e578 <_dtoa_r+0x8a8>)
    e46a:	bl	aca4 <__aeabi_dsub>
    e46e:	mov	r2, sl
    e470:	mov	r3, fp
    e472:	bl	b4f0 <__aeabi_dcmplt>
    e476:	cmp	r0, #0
    e478:	bne.w	ea60 <_dtoa_r+0xd90>
    e47c:	cmp	r5, r8
    e47e:	beq.w	e842 <_dtoa_r+0xb72>
    e482:	mov	r0, sl
    e484:	mov	r1, fp
    e486:	movs	r2, #0
    e488:	ldr	r3, [pc, #248]	; (e584 <_dtoa_r+0x8b4>)
    e48a:	bl	b00c <__aeabi_dmul>
    e48e:	movs	r2, #0
    e490:	ldr	r3, [pc, #240]	; (e584 <_dtoa_r+0x8b4>)
    e492:	mov	sl, r0
    e494:	mov	fp, r1
    e496:	mov	r0, r6
    e498:	mov	r1, r7
    e49a:	bl	b00c <__aeabi_dmul>
    e49e:	mov	r7, r1
    e4a0:	mov	r6, r0
    e4a2:	bl	b56c <__aeabi_d2iz>
    e4a6:	mov	r4, r0
    e4a8:	bl	af40 <__aeabi_i2d>
    e4ac:	mov	r2, r0
    e4ae:	mov	r3, r1
    e4b0:	mov	r0, r6
    e4b2:	mov	r1, r7
    e4b4:	bl	aca4 <__aeabi_dsub>
    e4b8:	adds	r4, #48	; 0x30
    e4ba:	uxtb	r4, r4
    e4bc:	mov	r2, sl
    e4be:	mov	r3, fp
    e4c0:	strb.w	r4, [r5], #1
    e4c4:	mov	r6, r0
    e4c6:	mov	r7, r1
    e4c8:	bl	b4f0 <__aeabi_dcmplt>
    e4cc:	mov	r2, r6
    e4ce:	mov	r3, r7
    e4d0:	cmp	r0, #0
    e4d2:	beq.n	e466 <_dtoa_r+0x796>
    e4d4:	ldr	r3, [sp, #88]	; 0x58
    e4d6:	str	r3, [sp, #16]
    e4d8:	b.n	e066 <_dtoa_r+0x396>
    e4da:	movs	r3, #0
    e4dc:	str	r3, [sp, #44]	; 0x2c
    e4de:	ldr	r3, [sp, #20]
    e4e0:	cmp	r3, #0
    e4e2:	ble.w	e7e6 <_dtoa_r+0xb16>
    e4e6:	mov	r5, r3
    e4e8:	mov	r4, r3
    e4ea:	str	r3, [sp, #56]	; 0x38
    e4ec:	str	r3, [sp, #32]
    e4ee:	b.n	e2e6 <_dtoa_r+0x616>
    e4f0:	movs	r3, #1
    e4f2:	str	r3, [sp, #44]	; 0x2c
    e4f4:	b.n	e4de <_dtoa_r+0x80e>
    e4f6:	str	r4, [sp, #40]	; 0x28
    e4f8:	ldr	r2, [sp, #24]
    e4fa:	ldr	r1, [sp, #40]	; 0x28
    e4fc:	mov	r0, r9
    e4fe:	bl	d7e0 <__pow5mult>
    e502:	mov	r4, r0
    e504:	b.n	e124 <_dtoa_r+0x454>
    e506:	ldr	r3, [sp, #32]
    e508:	cmp	r3, #0
    e50a:	bgt.w	df0a <_dtoa_r+0x23a>
    e50e:	bne.w	e7b0 <_dtoa_r+0xae0>
    e512:	movs	r2, #0
    e514:	ldr	r3, [pc, #112]	; (e588 <_dtoa_r+0x8b8>)
    e516:	ldrd	r0, r1, [sp]
    e51a:	bl	b00c <__aeabi_dmul>
    e51e:	mov	r3, fp
    e520:	mov	r2, sl
    e522:	bl	b518 <__aeabi_dcmpge>
    e526:	ldr	r3, [sp, #32]
    e528:	str	r3, [sp, #24]
    e52a:	mov	r6, r3
    e52c:	cmp	r0, #0
    e52e:	beq.w	e706 <_dtoa_r+0xa36>
    e532:	ldr	r3, [sp, #20]
    e534:	ldr	r5, [sp, #36]	; 0x24
    e536:	mvns	r3, r3
    e538:	str	r3, [sp, #16]
    e53a:	ldr	r1, [sp, #24]
    e53c:	mov	r0, r9
    e53e:	bl	d56c <_Bfree>
    e542:	cmp	r6, #0
    e544:	beq.w	e066 <_dtoa_r+0x396>
    e548:	b.n	e25e <_dtoa_r+0x58e>
    e54a:	ldr	r2, [sp, #60]	; 0x3c
    e54c:	cmp	r2, #0
    e54e:	beq.w	e9c2 <_dtoa_r+0xcf2>
    e552:	addw	r3, r3, #1075	; 0x433
    e556:	ldr	r7, [sp, #24]
    e558:	ldr	r5, [sp, #28]
    e55a:	b.n	e0b6 <_dtoa_r+0x3e6>
    e55c:	movs	r0, #28
    e55e:	b.n	e176 <_dtoa_r+0x4a6>
    e560:	ldr	r3, [sp, #0]
    e562:	cmp	r3, #1
    e564:	ble.w	ea68 <_dtoa_r+0xd98>
    e568:	ldr	r7, [sp, #48]	; 0x30
    e56a:	movs	r0, #1
    e56c:	b.n	e15e <_dtoa_r+0x48e>
    e56e:	nop
    e570:	.word	0x0009e2f8
    e574:	.word	0x0009e3c0
    e578:	.word	0x3ff00000
    e57c:	.word	0x401c0000
    e580:	.word	0x3fe00000
    e584:	.word	0x40240000
    e588:	.word	0x40140000
    e58c:	mov	r1, r6
    e58e:	movs	r3, #0
    e590:	movs	r2, #10
    e592:	mov	r0, r9
    e594:	bl	d580 <__multadd>
    e598:	ldr	r3, [sp, #56]	; 0x38
    e59a:	cmp	r3, #0
    e59c:	mov	r6, r0
    e59e:	ble.w	eabc <_dtoa_r+0xdec>
    e5a2:	str	r3, [sp, #32]
    e5a4:	cmp	r5, #0
    e5a6:	ble.n	e5b4 <_dtoa_r+0x8e4>
    e5a8:	mov	r1, r6
    e5aa:	mov	r2, r5
    e5ac:	mov	r0, r9
    e5ae:	bl	d880 <__lshift>
    e5b2:	mov	r6, r0
    e5b4:	cmp	r7, #0
    e5b6:	bne.w	e8b2 <_dtoa_r+0xbe2>
    e5ba:	mov	r8, r6
    e5bc:	ldr	r3, [sp, #32]
    e5be:	ldr	r2, [sp, #36]	; 0x24
    e5c0:	subs	r3, #1
    e5c2:	adds	r3, r2, r3
    e5c4:	str	r3, [sp, #32]
    e5c6:	and.w	r3, sl, #1
    e5ca:	str	r3, [sp, #40]	; 0x28
    e5cc:	mov	r7, r2
    e5ce:	ldr.w	fp, [sp, #24]
    e5d2:	mov	r0, r4
    e5d4:	mov	r1, fp
    e5d6:	bl	dba4 <quorem>
    e5da:	mov	r1, r6
    e5dc:	mov	r5, r0
    e5de:	mov	r0, r4
    e5e0:	bl	d930 <__mcmp>
    e5e4:	mov	r2, r8
    e5e6:	mov	r1, fp
    e5e8:	mov	sl, r0
    e5ea:	mov	r0, r9
    e5ec:	bl	d974 <__mdiff>
    e5f0:	ldr	r2, [r0, #12]
    e5f2:	mov	fp, r0
    e5f4:	add.w	r3, r5, #48	; 0x30
    e5f8:	cmp	r2, #0
    e5fa:	bne.n	e690 <_dtoa_r+0x9c0>
    e5fc:	mov	r1, r0
    e5fe:	mov	r0, r4
    e600:	str	r3, [sp, #28]
    e602:	bl	d930 <__mcmp>
    e606:	mov	r1, fp
    e608:	str	r0, [sp, #20]
    e60a:	mov	r0, r9
    e60c:	bl	d56c <_Bfree>
    e610:	ldr	r2, [sp, #20]
    e612:	ldr	r3, [sp, #28]
    e614:	cbnz	r2, e622 <_dtoa_r+0x952>
    e616:	ldr	r1, [sp, #0]
    e618:	cbnz	r1, e622 <_dtoa_r+0x952>
    e61a:	ldr	r1, [sp, #40]	; 0x28
    e61c:	cmp	r1, #0
    e61e:	beq.w	ea8c <_dtoa_r+0xdbc>
    e622:	cmp.w	sl, #0
    e626:	blt.w	e7f0 <_dtoa_r+0xb20>
    e62a:	bne.n	e638 <_dtoa_r+0x968>
    e62c:	ldr	r1, [sp, #0]
    e62e:	cbnz	r1, e638 <_dtoa_r+0x968>
    e630:	ldr	r1, [sp, #40]	; 0x28
    e632:	cmp	r1, #0
    e634:	beq.w	e7f0 <_dtoa_r+0xb20>
    e638:	cmp	r2, #0
    e63a:	bgt.w	e8da <_dtoa_r+0xc0a>
    e63e:	ldr	r2, [sp, #32]
    e640:	strb	r3, [r7, #0]
    e642:	add.w	sl, r7, #1
    e646:	cmp	r7, r2
    e648:	mov	r5, sl
    e64a:	beq.w	e8f2 <_dtoa_r+0xc22>
    e64e:	mov	r1, r4
    e650:	movs	r3, #0
    e652:	movs	r2, #10
    e654:	mov	r0, r9
    e656:	bl	d580 <__multadd>
    e65a:	cmp	r6, r8
    e65c:	mov	r4, r0
    e65e:	mov	r1, r6
    e660:	mov.w	r3, #0
    e664:	mov.w	r2, #10
    e668:	mov	r0, r9
    e66a:	beq.n	e684 <_dtoa_r+0x9b4>
    e66c:	bl	d580 <__multadd>
    e670:	mov	r1, r8
    e672:	mov	r6, r0
    e674:	movs	r3, #0
    e676:	movs	r2, #10
    e678:	mov	r0, r9
    e67a:	bl	d580 <__multadd>
    e67e:	mov	r7, sl
    e680:	mov	r8, r0
    e682:	b.n	e5ce <_dtoa_r+0x8fe>
    e684:	bl	d580 <__multadd>
    e688:	mov	r7, sl
    e68a:	mov	r6, r0
    e68c:	mov	r8, r0
    e68e:	b.n	e5ce <_dtoa_r+0x8fe>
    e690:	mov	r1, r0
    e692:	mov	r0, r9
    e694:	str	r3, [sp, #20]
    e696:	bl	d56c <_Bfree>
    e69a:	movs	r2, #1
    e69c:	ldr	r3, [sp, #20]
    e69e:	b.n	e622 <_dtoa_r+0x952>
    e6a0:	ldr	r1, [sp, #24]
    e6a2:	mov	r0, r4
    e6a4:	bl	d930 <__mcmp>
    e6a8:	cmp	r0, #0
    e6aa:	bge.w	e1ac <_dtoa_r+0x4dc>
    e6ae:	mov	r1, r4
    e6b0:	ldr	r4, [sp, #16]
    e6b2:	movs	r3, #0
    e6b4:	subs	r4, #1
    e6b6:	movs	r2, #10
    e6b8:	mov	r0, r9
    e6ba:	str	r4, [sp, #16]
    e6bc:	bl	d580 <__multadd>
    e6c0:	ldr	r3, [sp, #44]	; 0x2c
    e6c2:	mov	r4, r0
    e6c4:	cmp	r3, #0
    e6c6:	bne.w	e58c <_dtoa_r+0x8bc>
    e6ca:	ldr	r3, [sp, #56]	; 0x38
    e6cc:	cmp	r3, #0
    e6ce:	ble.w	eaac <_dtoa_r+0xddc>
    e6d2:	str	r3, [sp, #32]
    e6d4:	b.n	e1bc <_dtoa_r+0x4ec>
    e6d6:	ldr	r4, [sp, #40]	; 0x28
    e6d8:	b.n	e124 <_dtoa_r+0x454>
    e6da:	ldr	r3, [sp, #0]
    e6dc:	cmp	r3, #2
    e6de:	ble.w	e1b4 <_dtoa_r+0x4e4>
    e6e2:	ldr	r3, [sp, #32]
    e6e4:	cmp	r3, #0
    e6e6:	bne.w	ea24 <_dtoa_r+0xd54>
    e6ea:	ldr	r1, [sp, #24]
    e6ec:	movs	r2, #5
    e6ee:	mov	r0, r9
    e6f0:	bl	d580 <__multadd>
    e6f4:	mov	r1, r0
    e6f6:	str	r0, [sp, #24]
    e6f8:	mov	r0, r4
    e6fa:	bl	d930 <__mcmp>
    e6fe:	cmp	r0, #0
    e700:	str	r4, [sp, #40]	; 0x28
    e702:	ble.w	e532 <_dtoa_r+0x862>
    e706:	ldr	r2, [sp, #16]
    e708:	ldr	r1, [sp, #36]	; 0x24
    e70a:	movs	r3, #49	; 0x31
    e70c:	adds	r2, #1
    e70e:	str	r2, [sp, #16]
    e710:	strb	r3, [r1, #0]
    e712:	adds	r5, r1, #1
    e714:	b.n	e53a <_dtoa_r+0x86a>
    e716:	ldr	r2, [sp, #16]
    e718:	adds	r2, #1
    e71a:	str	r2, [sp, #16]
    e71c:	ldr	r2, [sp, #36]	; 0x24
    e71e:	movs	r3, #49	; 0x31
    e720:	strb	r3, [r2, #0]
    e722:	b.n	e23e <_dtoa_r+0x56e>
    e724:	movs	r3, #1
    e726:	str	r3, [sp, #44]	; 0x2c
    e728:	b.n	e2d0 <_dtoa_r+0x600>
    e72a:	ldr.w	r9, [sp, #20]
    e72e:	b.n	e066 <_dtoa_r+0x396>
    e730:	cmp.w	sl, #0
    e734:	bne.w	e14a <_dtoa_r+0x47a>
    e738:	ubfx	r3, fp, #0, #20
    e73c:	cmp	r3, #0
    e73e:	bne.w	e9be <_dtoa_r+0xcee>
    e742:	bic.w	r7, fp, #2147483648	; 0x80000000
    e746:	lsrs	r7, r7, #20
    e748:	lsls	r7, r7, #20
    e74a:	cbz	r7, e758 <_dtoa_r+0xa88>
    e74c:	ldr	r3, [sp, #28]
    e74e:	adds	r3, #1
    e750:	str	r3, [sp, #28]
    e752:	add.w	r8, r8, #1
    e756:	movs	r7, #1
    e758:	ldr	r3, [sp, #48]	; 0x30
    e75a:	movs	r0, #1
    e75c:	cmp	r3, #0
    e75e:	beq.w	e15e <_dtoa_r+0x48e>
    e762:	b.n	e14c <_dtoa_r+0x47c>
    e764:	mov	r0, sl
    e766:	bl	af40 <__aeabi_i2d>
    e76a:	mov	r2, r6
    e76c:	mov	r3, r7
    e76e:	bl	b00c <__aeabi_dmul>
    e772:	movs	r2, #0
    e774:	ldr	r3, [pc, #764]	; (ea74 <_dtoa_r+0xda4>)
    e776:	bl	aca8 <__adddf3>
    e77a:	mov	r4, r0
    e77c:	sub.w	r5, r1, #54525952	; 0x3400000
    e780:	mov	r0, r6
    e782:	mov	r1, r7
    e784:	movs	r2, #0
    e786:	ldr	r3, [pc, #752]	; (ea78 <_dtoa_r+0xda8>)
    e788:	bl	aca4 <__aeabi_dsub>
    e78c:	mov	r2, r4
    e78e:	mov	r3, r5
    e790:	mov	r6, r0
    e792:	mov	r7, r1
    e794:	bl	b52c <__aeabi_dcmpgt>
    e798:	cmp	r0, #0
    e79a:	bne.w	e8fa <_dtoa_r+0xc2a>
    e79e:	mov	r2, r4
    e7a0:	add.w	r3, r5, #2147483648	; 0x80000000
    e7a4:	mov	r0, r6
    e7a6:	mov	r1, r7
    e7a8:	bl	b4f0 <__aeabi_dcmplt>
    e7ac:	cmp	r0, #0
    e7ae:	beq.n	e846 <_dtoa_r+0xb76>
    e7b0:	movs	r3, #0
    e7b2:	str	r3, [sp, #24]
    e7b4:	mov	r6, r3
    e7b6:	b.n	e532 <_dtoa_r+0x862>
    e7b8:	ldr	r0, [sp, #36]	; 0x24
    e7ba:	b.w	dd42 <_dtoa_r+0x72>
    e7be:	ldr	r3, [sp, #24]
    e7c0:	ldr	r2, [sp, #48]	; 0x30
    e7c2:	str	r7, [sp, #24]
    e7c4:	subs	r3, r7, r3
    e7c6:	add	r2, r3
    e7c8:	str	r2, [sp, #48]	; 0x30
    e7ca:	movs	r7, #0
    e7cc:	b.n	e0aa <_dtoa_r+0x3da>
    e7ce:	vldr	d7, [sp, #64]	; 0x40
    e7d2:	mov.w	sl, #2
    e7d6:	vstr	d7, [sp, #72]	; 0x48
    e7da:	b.n	e35c <_dtoa_r+0x68c>
    e7dc:	mov	r4, r3
    e7de:	movs	r1, #0
    e7e0:	str.w	r1, [r9, #68]	; 0x44
    e7e4:	b.n	e308 <_dtoa_r+0x638>
    e7e6:	movs	r4, #1
    e7e8:	str	r4, [sp, #56]	; 0x38
    e7ea:	str	r4, [sp, #32]
    e7ec:	str	r4, [sp, #20]
    e7ee:	b.n	e7de <_dtoa_r+0xb0e>
    e7f0:	cmp	r2, #0
    e7f2:	mov	sl, r3
    e7f4:	ble.n	e81a <_dtoa_r+0xb4a>
    e7f6:	mov	r1, r4
    e7f8:	movs	r2, #1
    e7fa:	mov	r0, r9
    e7fc:	bl	d880 <__lshift>
    e800:	ldr	r1, [sp, #24]
    e802:	mov	r4, r0
    e804:	bl	d930 <__mcmp>
    e808:	cmp	r0, #0
    e80a:	ble.w	ea9e <_dtoa_r+0xdce>
    e80e:	cmp.w	sl, #57	; 0x39
    e812:	beq.w	ea28 <_dtoa_r+0xd58>
    e816:	add.w	sl, r5, #49	; 0x31
    e81a:	mov	fp, r6
    e81c:	strb.w	sl, [r7]
    e820:	adds	r5, r7, #1
    e822:	mov	r6, r8
    e824:	str	r4, [sp, #40]	; 0x28
    e826:	b.n	e23e <_dtoa_r+0x56e>
    e828:	bne.n	e834 <_dtoa_r+0xb64>
    e82a:	tst.w	sl, #1
    e82e:	beq.n	e834 <_dtoa_r+0xb64>
    e830:	b.n	e21e <_dtoa_r+0x54e>
    e832:	mov	r5, r2
    e834:	ldrb.w	r3, [r5, #-1]
    e838:	cmp	r3, #48	; 0x30
    e83a:	add.w	r2, r5, #4294967295
    e83e:	beq.n	e832 <_dtoa_r+0xb62>
    e840:	b.n	e23e <_dtoa_r+0x56e>
    e842:	ldr.w	r8, [sp, #72]	; 0x48
    e846:	ldrd	sl, fp, [sp, #64]	; 0x40
    e84a:	b.w	dee4 <_dtoa_r+0x214>
    e84e:	ldr	r1, [sp, #36]	; 0x24
    e850:	movs	r2, #48	; 0x30
    e852:	strb	r2, [r1, #0]
    e854:	ldr	r2, [sp, #16]
    e856:	ldrb.w	r4, [r5, #-1]
    e85a:	adds	r2, #1
    e85c:	str	r2, [sp, #16]
    e85e:	b.n	e062 <_dtoa_r+0x392>
    e860:	ldr	r3, [sp, #16]
    e862:	negs	r4, r3
    e864:	cmp	r4, #0
    e866:	beq.w	e9d0 <_dtoa_r+0xd00>
    e86a:	ldr	r3, [pc, #528]	; (ea7c <_dtoa_r+0xdac>)
    e86c:	and.w	r2, r4, #15
    e870:	add.w	r3, r3, r2, lsl #3
    e874:	ldrd	r2, r3, [r3]
    e878:	ldrd	r0, r1, [sp, #64]	; 0x40
    e87c:	bl	b00c <__aeabi_dmul>
    e880:	asrs	r4, r4, #4
    e882:	mov	r6, r0
    e884:	mov	r7, r1
    e886:	beq.w	eab6 <_dtoa_r+0xde6>
    e88a:	ldr	r5, [pc, #500]	; (ea80 <_dtoa_r+0xdb0>)
    e88c:	mov.w	sl, #2
    e890:	lsls	r2, r4, #31
    e892:	bpl.n	e8a8 <_dtoa_r+0xbd8>
    e894:	mov	r0, r6
    e896:	mov	r1, r7
    e898:	ldrd	r2, r3, [r5]
    e89c:	bl	b00c <__aeabi_dmul>
    e8a0:	add.w	sl, sl, #1
    e8a4:	mov	r6, r0
    e8a6:	mov	r7, r1
    e8a8:	asrs	r4, r4, #1
    e8aa:	add.w	r5, r5, #8
    e8ae:	bne.n	e890 <_dtoa_r+0xbc0>
    e8b0:	b.n	e390 <_dtoa_r+0x6c0>
    e8b2:	ldr	r1, [r6, #4]
    e8b4:	mov	r0, r9
    e8b6:	bl	d520 <_Balloc>
    e8ba:	ldr	r3, [r6, #16]
    e8bc:	adds	r2, r3, #2
    e8be:	mov	r5, r0
    e8c0:	lsls	r2, r2, #2
    e8c2:	add.w	r1, r6, #12
    e8c6:	adds	r0, #12
    e8c8:	bl	6f10 <memcpy>
    e8cc:	mov	r1, r5
    e8ce:	movs	r2, #1
    e8d0:	mov	r0, r9
    e8d2:	bl	d880 <__lshift>
    e8d6:	mov	r8, r0
    e8d8:	b.n	e5bc <_dtoa_r+0x8ec>
    e8da:	cmp	r3, #57	; 0x39
    e8dc:	beq.w	ea28 <_dtoa_r+0xd58>
    e8e0:	add.w	sl, r3, #1
    e8e4:	mov	fp, r6
    e8e6:	strb.w	sl, [r7]
    e8ea:	adds	r5, r7, #1
    e8ec:	mov	r6, r8
    e8ee:	str	r4, [sp, #40]	; 0x28
    e8f0:	b.n	e23e <_dtoa_r+0x56e>
    e8f2:	mov	fp, r6
    e8f4:	mov	sl, r3
    e8f6:	mov	r6, r8
    e8f8:	b.n	e206 <_dtoa_r+0x536>
    e8fa:	movs	r3, #0
    e8fc:	str	r3, [sp, #24]
    e8fe:	mov	r6, r3
    e900:	b.n	e706 <_dtoa_r+0xa36>
    e902:	ldr	r3, [sp, #72]	; 0x48
    e904:	ldr	r1, [pc, #372]	; (ea7c <_dtoa_r+0xdac>)
    e906:	subs	r2, r3, #1
    e908:	add.w	r1, r1, r2, lsl #3
    e90c:	mov	r3, r5
    e90e:	str	r2, [sp, #92]	; 0x5c
    e910:	ldrd	r0, r1, [r1]
    e914:	mov	r2, r4
    e916:	bl	b00c <__aeabi_dmul>
    e91a:	strd	r0, r1, [sp, #80]	; 0x50
    e91e:	mov	r1, r7
    e920:	mov	r0, r6
    e922:	bl	b56c <__aeabi_d2iz>
    e926:	mov	r4, r0
    e928:	bl	af40 <__aeabi_i2d>
    e92c:	mov	r3, r1
    e92e:	mov	r2, r0
    e930:	mov	r1, r7
    e932:	mov	r0, r6
    e934:	bl	aca4 <__aeabi_dsub>
    e938:	ldr	r3, [sp, #72]	; 0x48
    e93a:	mov	r7, r1
    e93c:	ldr	r1, [sp, #36]	; 0x24
    e93e:	adds	r4, #48	; 0x30
    e940:	cmp	r3, #1
    e942:	mov	r6, r0
    e944:	strb	r4, [r1, #0]
    e946:	add.w	r5, r1, #1
    e94a:	beq.n	e98e <_dtoa_r+0xcbe>
    e94c:	ldr	r3, [sp, #72]	; 0x48
    e94e:	ldr	r2, [sp, #36]	; 0x24
    e950:	add	r3, r2
    e952:	mov	sl, r3
    e954:	mov	fp, r5
    e956:	movs	r2, #0
    e958:	ldr	r3, [pc, #296]	; (ea84 <_dtoa_r+0xdb4>)
    e95a:	mov	r0, r6
    e95c:	mov	r1, r7
    e95e:	bl	b00c <__aeabi_dmul>
    e962:	mov	r7, r1
    e964:	mov	r6, r0
    e966:	bl	b56c <__aeabi_d2iz>
    e96a:	mov	r4, r0
    e96c:	bl	af40 <__aeabi_i2d>
    e970:	adds	r4, #48	; 0x30
    e972:	mov	r2, r0
    e974:	mov	r3, r1
    e976:	mov	r0, r6
    e978:	mov	r1, r7
    e97a:	bl	aca4 <__aeabi_dsub>
    e97e:	strb.w	r4, [fp], #1
    e982:	cmp	sl, fp
    e984:	mov	r6, r0
    e986:	mov	r7, r1
    e988:	bne.n	e956 <_dtoa_r+0xc86>
    e98a:	ldr	r3, [sp, #92]	; 0x5c
    e98c:	add	r5, r3
    e98e:	movs	r2, #0
    e990:	ldr	r3, [pc, #244]	; (ea88 <_dtoa_r+0xdb8>)
    e992:	ldrd	r0, r1, [sp, #80]	; 0x50
    e996:	bl	aca8 <__adddf3>
    e99a:	mov	r2, r6
    e99c:	mov	r3, r7
    e99e:	bl	b4f0 <__aeabi_dcmplt>
    e9a2:	cmp	r0, #0
    e9a4:	beq.n	ea38 <_dtoa_r+0xd68>
    e9a6:	ldr	r3, [sp, #88]	; 0x58
    e9a8:	str	r3, [sp, #16]
    e9aa:	ldrb.w	r4, [r5, #-1]
    e9ae:	b.w	e04a <_dtoa_r+0x37a>
    e9b2:	ldr	r3, [sp, #28]
    e9b4:	ldr	r2, [sp, #32]
    e9b6:	subs	r5, r3, r2
    e9b8:	movs	r3, #0
    e9ba:	b.w	e0b6 <_dtoa_r+0x3e6>
    e9be:	movs	r7, #0
    e9c0:	b.n	e758 <_dtoa_r+0xa88>
    e9c2:	ldr	r3, [sp, #96]	; 0x60
    e9c4:	ldr	r7, [sp, #24]
    e9c6:	ldr	r5, [sp, #28]
    e9c8:	rsb	r3, r3, #54	; 0x36
    e9cc:	b.w	e0b6 <_dtoa_r+0x3e6>
    e9d0:	ldrd	r6, r7, [sp, #64]	; 0x40
    e9d4:	mov.w	sl, #2
    e9d8:	b.n	e390 <_dtoa_r+0x6c0>
    e9da:	ldr	r3, [sp, #32]
    e9dc:	cmp	r3, #0
    e9de:	beq.w	e764 <_dtoa_r+0xa94>
    e9e2:	ldr	r3, [sp, #56]	; 0x38
    e9e4:	cmp	r3, #0
    e9e6:	ble.w	e846 <_dtoa_r+0xb76>
    e9ea:	movs	r2, #0
    e9ec:	ldr	r3, [pc, #148]	; (ea84 <_dtoa_r+0xdb4>)
    e9ee:	mov	r0, r6
    e9f0:	mov	r1, r7
    e9f2:	bl	b00c <__aeabi_dmul>
    e9f6:	mov	r6, r0
    e9f8:	mov	r7, r1
    e9fa:	add.w	r0, sl, #1
    e9fe:	bl	af40 <__aeabi_i2d>
    ea02:	mov	r2, r6
    ea04:	mov	r3, r7
    ea06:	bl	b00c <__aeabi_dmul>
    ea0a:	movs	r2, #0
    ea0c:	ldr	r3, [pc, #100]	; (ea74 <_dtoa_r+0xda4>)
    ea0e:	bl	aca8 <__adddf3>
    ea12:	ldr	r2, [sp, #16]
    ea14:	ldr	r3, [sp, #56]	; 0x38
    ea16:	str	r3, [sp, #72]	; 0x48
    ea18:	subs	r2, #1
    ea1a:	mov	r4, r0
    ea1c:	sub.w	r5, r1, #54525952	; 0x3400000
    ea20:	str	r2, [sp, #88]	; 0x58
    ea22:	b.n	e3d2 <_dtoa_r+0x702>
    ea24:	str	r4, [sp, #40]	; 0x28
    ea26:	b.n	e532 <_dtoa_r+0x862>
    ea28:	movs	r2, #57	; 0x39
    ea2a:	mov	fp, r6
    ea2c:	str	r4, [sp, #40]	; 0x28
    ea2e:	mov	r6, r8
    ea30:	strb	r2, [r7, #0]
    ea32:	adds	r5, r7, #1
    ea34:	b.w	e222 <_dtoa_r+0x552>
    ea38:	ldrd	r2, r3, [sp, #80]	; 0x50
    ea3c:	movs	r0, #0
    ea3e:	ldr	r1, [pc, #72]	; (ea88 <_dtoa_r+0xdb8>)
    ea40:	bl	aca4 <__aeabi_dsub>
    ea44:	mov	r2, r6
    ea46:	mov	r3, r7
    ea48:	bl	b52c <__aeabi_dcmpgt>
    ea4c:	cbnz	r0, ea52 <_dtoa_r+0xd82>
    ea4e:	b.n	e846 <_dtoa_r+0xb76>
    ea50:	mov	r5, r2
    ea52:	ldrb.w	r3, [r5, #-1]
    ea56:	cmp	r3, #48	; 0x30
    ea58:	add.w	r2, r5, #4294967295
    ea5c:	beq.n	ea50 <_dtoa_r+0xd80>
    ea5e:	b.n	e4d4 <_dtoa_r+0x804>
    ea60:	ldr	r3, [sp, #88]	; 0x58
    ea62:	str	r3, [sp, #16]
    ea64:	b.w	e04a <_dtoa_r+0x37a>
    ea68:	cmp.w	sl, #0
    ea6c:	bne.w	e568 <_dtoa_r+0x898>
    ea70:	b.n	e738 <_dtoa_r+0xa68>
    ea72:	nop
    ea74:	.word	0x401c0000
    ea78:	.word	0x40140000
    ea7c:	.word	0x0009e2f8
    ea80:	.word	0x0009e3c0
    ea84:	.word	0x40240000
    ea88:	.word	0x3fe00000
    ea8c:	cmp	r3, #57	; 0x39
    ea8e:	mov	fp, sl
    ea90:	mov	sl, r3
    ea92:	beq.n	ea28 <_dtoa_r+0xd58>
    ea94:	cmp.w	fp, #0
    ea98:	bgt.w	e816 <_dtoa_r+0xb46>
    ea9c:	b.n	e81a <_dtoa_r+0xb4a>
    ea9e:	bne.w	e81a <_dtoa_r+0xb4a>
    eaa2:	tst.w	sl, #1
    eaa6:	beq.w	e81a <_dtoa_r+0xb4a>
    eaaa:	b.n	e80e <_dtoa_r+0xb3e>
    eaac:	ldr	r3, [sp, #0]
    eaae:	cmp	r3, #2
    eab0:	bgt.n	eafe <_dtoa_r+0xe2e>
    eab2:	ldr	r3, [sp, #56]	; 0x38
    eab4:	b.n	e6d2 <_dtoa_r+0xa02>
    eab6:	mov.w	sl, #2
    eaba:	b.n	e390 <_dtoa_r+0x6c0>
    eabc:	ldr	r3, [sp, #0]
    eabe:	cmp	r3, #2
    eac0:	bgt.n	eafe <_dtoa_r+0xe2e>
    eac2:	ldr	r3, [sp, #56]	; 0x38
    eac4:	b.n	e5a2 <_dtoa_r+0x8d2>
    eac6:	movs	r4, #0
    eac8:	str.w	r4, [r9, #68]	; 0x44
    eacc:	mov	r1, r4
    eace:	mov	r0, r9
    ead0:	bl	d520 <_Balloc>
    ead4:	mov.w	r3, #4294967295
    ead8:	str	r3, [sp, #32]
    eada:	str	r3, [sp, #56]	; 0x38
    eadc:	movs	r3, #1
    eade:	str	r0, [sp, #36]	; 0x24
    eae0:	str	r4, [sp, #20]
    eae2:	str.w	r0, [r9, #64]	; 0x40
    eae6:	str	r3, [sp, #44]	; 0x2c
    eae8:	b.w	dee4 <_dtoa_r+0x214>
    eaec:	beq.w	e180 <_dtoa_r+0x4b0>
    eaf0:	rsb	r0, r0, #60	; 0x3c
    eaf4:	b.w	e176 <_dtoa_r+0x4a6>
    eaf8:	movs	r6, #1
    eafa:	b.w	de76 <_dtoa_r+0x1a6>
    eafe:	ldr	r3, [sp, #56]	; 0x38
    eb00:	str	r3, [sp, #32]
    eb02:	b.n	e6e2 <_dtoa_r+0xa12>
    eb04:			; <UNDEFINED> instruction: 0xffffffff

0000eb08 <_svfprintf_r>:
    eb08:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    eb0c:	sub	sp, #260	; 0x104
    eb0e:	mov	r4, r1
    eb10:	str	r1, [sp, #20]
    eb12:	mov	r5, r2
    eb14:	str	r3, [sp, #40]	; 0x28
    eb16:	str	r0, [sp, #24]
    eb18:	bl	d460 <_localeconv_r>
    eb1c:	ldr	r3, [r0, #0]
    eb1e:	str	r3, [sp, #76]	; 0x4c
    eb20:	mov	r0, r3
    eb22:	bl	ca40 <strlen>
    eb26:	ldrh	r3, [r4, #12]
    eb28:	str	r0, [sp, #72]	; 0x48
    eb2a:	lsls	r6, r3, #24
    eb2c:	bpl.n	eb36 <_svfprintf_r+0x2e>
    eb2e:	ldr	r3, [r4, #16]
    eb30:	cmp	r3, #0
    eb32:	beq.w	fd98 <_svfprintf_r+0x1290>
    eb36:	vldr	d7, [pc, #664]	; edd0 <_svfprintf_r+0x2c8>
    eb3a:	movs	r3, #0
    eb3c:	vstr	d7, [sp, #64]	; 0x40
    eb40:	str	r3, [sp, #56]	; 0x38
    eb42:	str	r3, [sp, #148]	; 0x94
    eb44:	str	r3, [sp, #144]	; 0x90
    eb46:	str	r3, [sp, #84]	; 0x54
    eb48:	str	r3, [sp, #28]
    eb4a:	ldr.w	sl, [pc, #656]	; eddc <_svfprintf_r+0x2d4>
    eb4e:	add	r3, sp, #192	; 0xc0
    eb50:	str	r3, [sp, #140]	; 0x8c
    eb52:	mov	r9, r3
    eb54:	mov	r8, r5
    eb56:	ldrb.w	r3, [r8]
    eb5a:	mov	r4, r8
    eb5c:	cbz	r3, eb9a <_svfprintf_r+0x92>
    eb5e:	cmp	r3, #37	; 0x25
    eb60:	bne.n	eb68 <_svfprintf_r+0x60>
    eb62:	b.n	eb9a <_svfprintf_r+0x92>
    eb64:	cmp	r3, #37	; 0x25
    eb66:	beq.n	eb70 <_svfprintf_r+0x68>
    eb68:	ldrb.w	r3, [r4, #1]!
    eb6c:	cmp	r3, #0
    eb6e:	bne.n	eb64 <_svfprintf_r+0x5c>
    eb70:	rsb	r5, r8, r4
    eb74:	cbz	r5, eb9a <_svfprintf_r+0x92>
    eb76:	ldr	r3, [sp, #144]	; 0x90
    eb78:	ldr	r2, [sp, #148]	; 0x94
    eb7a:	str.w	r8, [r9]
    eb7e:	adds	r3, #1
    eb80:	add	r2, r5
    eb82:	cmp	r3, #7
    eb84:	str.w	r5, [r9, #4]
    eb88:	str	r2, [sp, #148]	; 0x94
    eb8a:	str	r3, [sp, #144]	; 0x90
    eb8c:	bgt.w	ecdc <_svfprintf_r+0x1d4>
    eb90:	add.w	r9, r9, #8
    eb94:	ldr	r3, [sp, #28]
    eb96:	add	r3, r5
    eb98:	str	r3, [sp, #28]
    eb9a:	ldrb	r3, [r4, #0]
    eb9c:	cmp	r3, #0
    eb9e:	beq.w	ecee <_svfprintf_r+0x1e6>
    eba2:	movs	r3, #0
    eba4:	mov	r2, r3
    eba6:	strb.w	r3, [sp, #111]	; 0x6f
    ebaa:	mov	r1, r3
    ebac:	str	r3, [sp, #32]
    ebae:	str	r3, [sp, #12]
    ebb0:	mov.w	fp, #4294967295
    ebb4:	ldrb	r3, [r4, #1]
    ebb6:	add.w	r8, r4, #1
    ebba:	mov	r5, fp
    ebbc:	add.w	r8, r8, #1
    ebc0:	sub.w	r0, r3, #32
    ebc4:	cmp	r0, #88	; 0x58
    ebc6:	bhi.w	f432 <_svfprintf_r+0x92a>
    ebca:	tbh	[pc, r0, lsl #1]
    ebce:	.short	0x03a0
    ebd0:	.word	0x04320432
    ebd4:	.word	0x043203a8
    ebd8:	.word	0x04320432
    ebdc:	.word	0x04320432
    ebe0:	.word	0x03af0432
    ebe4:	.word	0x043203bd
    ebe8:	.word	0x00e2005d
    ebec:	.word	0x01090432
    ebf0:	.word	0x01100110
    ebf4:	.word	0x01100110
    ebf8:	.word	0x01100110
    ebfc:	.word	0x01100110
    ec00:	.word	0x04320110
    ec04:	.word	0x04320432
    ec08:	.word	0x04320432
    ec0c:	.word	0x04320432
    ec10:	.word	0x04320432
    ec14:	.word	0x01200432
    ec18:	.word	0x04320286
    ec1c:	.word	0x04320286
    ec20:	.word	0x04320432
    ec24:	.word	0x02d40432
    ec28:	.word	0x04320432
    ec2c:	.word	0x043202e5
    ec30:	.word	0x04320432
    ec34:	.word	0x04320432
    ec38:	.word	0x0432030f
    ec3c:	.word	0x033d0432
    ec40:	.word	0x04320432
    ec44:	.word	0x04320432
    ec48:	.word	0x04320432
    ec4c:	.word	0x04320432
    ec50:	.word	0x04320432
    ec54:	.word	0x0391037e
    ec58:	.word	0x02860286
    ec5c:	.word	0x03990286
    ec60:	.word	0x04320391
    ec64:	.word	0x04070432
    ec68:	.word	0x04120432
    ec6c:	.word	0x006400a3
    ec70:	.word	0x043203c2
    ec74:	.word	0x043203c9
    ec78:	.word	0x043203ea
    ec7c:	.word	0x03f20432
    ec80:	ldr	r0, [sp, #32]
    ec82:	str	r3, [sp, #40]	; 0x28
    ec84:	negs	r0, r0
    ec86:	str	r0, [sp, #32]
    ec88:	ldr	r3, [sp, #12]
    ec8a:	orr.w	r3, r3, #4
    ec8e:	str	r3, [sp, #12]
    ec90:	ldrb.w	r3, [r8]
    ec94:	b.n	ebbc <_svfprintf_r+0xb4>
    ec96:	ldr	r0, [sp, #40]	; 0x28
    ec98:	mov	fp, r5
    ec9a:	movs	r1, #0
    ec9c:	ldr	r4, [r0, #0]
    ec9e:	strb.w	r1, [sp, #111]	; 0x6f
    eca2:	adds	r7, r0, #4
    eca4:	ldr	r0, [sp, #12]
    eca6:	movs	r3, #48	; 0x30
    eca8:	movs	r2, #120	; 0x78
    ecaa:	cmp	fp, r1
    ecac:	strb.w	r3, [sp, #112]	; 0x70
    ecb0:	mov.w	r5, #0
    ecb4:	strb.w	r2, [sp, #113]	; 0x71
    ecb8:	orr.w	r3, r0, #2
    ecbc:	blt.w	f46c <_svfprintf_r+0x964>
    ecc0:	bic.w	r3, r0, #128	; 0x80
    ecc4:	orr.w	r3, r3, #2
    ecc8:	str	r3, [sp, #12]
    ecca:	orrs.w	r3, r4, r5
    ecce:	str	r7, [sp, #40]	; 0x28
    ecd0:	beq.w	f418 <_svfprintf_r+0x910>
    ecd4:	mov	r7, r1
    ecd6:	str	r2, [sp, #52]	; 0x34
    ecd8:	ldr	r0, [pc, #252]	; (edd8 <_svfprintf_r+0x2d0>)
    ecda:	b.n	f2aa <_svfprintf_r+0x7a2>
    ecdc:	add	r2, sp, #140	; 0x8c
    ecde:	ldr	r1, [sp, #20]
    ece0:	ldr	r0, [sp, #24]
    ece2:	bl	101ec <__ssprint_r>
    ece6:	cbnz	r0, ecfc <_svfprintf_r+0x1f4>
    ece8:	add.w	r9, sp, #192	; 0xc0
    ecec:	b.n	eb94 <_svfprintf_r+0x8c>
    ecee:	ldr	r3, [sp, #148]	; 0x94
    ecf0:	cbz	r3, ecfc <_svfprintf_r+0x1f4>
    ecf2:	ldr	r0, [sp, #24]
    ecf4:	ldr	r1, [sp, #20]
    ecf6:	add	r2, sp, #140	; 0x8c
    ecf8:	bl	101ec <__ssprint_r>
    ecfc:	ldr	r3, [sp, #20]
    ecfe:	ldrh	r3, [r3, #12]
    ed00:	tst.w	r3, #64	; 0x40
    ed04:	ldr	r3, [sp, #28]
    ed06:	it	ne
    ed08:	movne.w	r3, #4294967295
    ed0c:	mov	r0, r3
    ed0e:	add	sp, #260	; 0x104
    ed10:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    ed14:	str	r3, [sp, #52]	; 0x34
    ed16:	mov	fp, r5
    ed18:	cmp	r2, #0
    ed1a:	bne.w	10184 <_svfprintf_r+0x167c>
    ed1e:	ldr	r2, [sp, #12]
    ed20:	ands.w	r3, r2, #32
    ed24:	beq.w	f1b4 <_svfprintf_r+0x6ac>
    ed28:	ldr	r7, [sp, #40]	; 0x28
    ed2a:	adds	r7, #7
    ed2c:	bic.w	r3, r7, #7
    ed30:	movs	r7, #0
    ed32:	add.w	r1, r3, #8
    ed36:	cmp	fp, r7
    ed38:	str	r1, [sp, #40]	; 0x28
    ed3a:	ldrd	r4, r5, [r3]
    ed3e:	strb.w	r7, [sp, #111]	; 0x6f
    ed42:	blt.w	fc0a <_svfprintf_r+0x1102>
    ed46:	bic.w	r3, r2, #128	; 0x80
    ed4a:	str	r3, [sp, #12]
    ed4c:	orrs.w	r3, r4, r5
    ed50:	beq.w	f45c <_svfprintf_r+0x954>
    ed54:	add	r6, sp, #192	; 0xc0
    ed56:	lsrs	r2, r4, #3
    ed58:	orr.w	r2, r2, r5, lsl #29
    ed5c:	lsrs	r1, r5, #3
    ed5e:	and.w	r3, r4, #7
    ed62:	mov	r5, r1
    ed64:	mov	r4, r2
    ed66:	adds	r3, #48	; 0x30
    ed68:	orrs.w	r2, r4, r5
    ed6c:	strb.w	r3, [r6, #-1]!
    ed70:	bne.n	ed56 <_svfprintf_r+0x24e>
    ed72:	ldr	r2, [sp, #12]
    ed74:	lsls	r1, r2, #31
    ed76:	bpl.w	ee98 <_svfprintf_r+0x390>
    ed7a:	cmp	r3, #48	; 0x30
    ed7c:	beq.w	ee98 <_svfprintf_r+0x390>
    ed80:	movs	r2, #48	; 0x30
    ed82:	subs	r3, r6, #1
    ed84:	strb.w	r2, [r6, #-1]
    ed88:	add	r2, sp, #192	; 0xc0
    ed8a:	subs	r2, r2, r3
    ed8c:	str	r2, [sp, #36]	; 0x24
    ed8e:	mov	r6, r3
    ed90:	b.n	ee9e <_svfprintf_r+0x396>
    ed92:	ldrb.w	r3, [r8]
    ed96:	cmp	r3, #42	; 0x2a
    ed98:	add.w	r4, r8, #1
    ed9c:	beq.w	10168 <_svfprintf_r+0x1660>
    eda0:	sub.w	r0, r3, #48	; 0x30
    eda4:	cmp	r0, #9
    eda6:	it	ls
    eda8:	movls	r5, #0
    edaa:	bhi.w	100ba <_svfprintf_r+0x15b2>
    edae:	ldrb.w	r3, [r4], #1
    edb2:	add.w	r5, r5, r5, lsl #2
    edb6:	add.w	r5, r0, r5, lsl #1
    edba:	sub.w	r0, r3, #48	; 0x30
    edbe:	cmp	r0, #9
    edc0:	bls.n	edae <_svfprintf_r+0x2a6>
    edc2:	orr.w	r5, r5, r5, asr #31
    edc6:	mov	r8, r4
    edc8:	b.n	ebc0 <_svfprintf_r+0xb8>
    edca:	nop
    edcc:	nop.w
	...
    edd8:	.word	0x0009e43c
    eddc:	.word	0x0009e408
    ede0:	ldr	r3, [sp, #12]
    ede2:	orr.w	r3, r3, #128	; 0x80
    ede6:	str	r3, [sp, #12]
    ede8:	ldrb.w	r3, [r8]
    edec:	b.n	ebbc <_svfprintf_r+0xb4>
    edee:	sub.w	r0, r3, #48	; 0x30
    edf2:	movs	r3, #0
    edf4:	mov	r4, r3
    edf6:	ldrb.w	r3, [r8], #1
    edfa:	add.w	r4, r4, r4, lsl #2
    edfe:	add.w	r4, r0, r4, lsl #1
    ee02:	sub.w	r0, r3, #48	; 0x30
    ee06:	cmp	r0, #9
    ee08:	bls.n	edf6 <_svfprintf_r+0x2ee>
    ee0a:	str	r4, [sp, #32]
    ee0c:	b.n	ebc0 <_svfprintf_r+0xb8>
    ee0e:	str	r3, [sp, #52]	; 0x34
    ee10:	mov	fp, r5
    ee12:	cmp	r2, #0
    ee14:	bne.w	101a0 <_svfprintf_r+0x1698>
    ee18:	ldr	r3, [sp, #12]
    ee1a:	orr.w	r3, r3, #16
    ee1e:	str	r3, [sp, #12]
    ee20:	ldr	r3, [sp, #12]
    ee22:	lsls	r4, r3, #26
    ee24:	bpl.w	f896 <_svfprintf_r+0xd8e>
    ee28:	ldr	r7, [sp, #40]	; 0x28
    ee2a:	adds	r7, #7
    ee2c:	bic.w	r7, r7, #7
    ee30:	ldrd	r2, r3, [r7]
    ee34:	add.w	r1, r7, #8
    ee38:	str	r1, [sp, #40]	; 0x28
    ee3a:	mov	r4, r2
    ee3c:	mov	r5, r3
    ee3e:	cmp	r2, #0
    ee40:	sbcs.w	r3, r3, #0
    ee44:	blt.w	f90c <_svfprintf_r+0xe04>
    ee48:	cmp.w	fp, #0
    ee4c:	ldrb.w	r7, [sp, #111]	; 0x6f
    ee50:	blt.w	f8d2 <_svfprintf_r+0xdca>
    ee54:	ldr	r3, [sp, #12]
    ee56:	bic.w	r3, r3, #128	; 0x80
    ee5a:	str	r3, [sp, #12]
    ee5c:	orrs.w	r3, r4, r5
    ee60:	beq.w	f234 <_svfprintf_r+0x72c>
    ee64:	cmp	r5, #0
    ee66:	it	eq
    ee68:	cmpeq	r4, #10
    ee6a:	bcc.w	f23e <_svfprintf_r+0x736>
    ee6e:	add	r6, sp, #192	; 0xc0
    ee70:	mov	r0, r4
    ee72:	mov	r1, r5
    ee74:	movs	r2, #10
    ee76:	movs	r3, #0
    ee78:	bl	102ec <__aeabi_uldivmod>
    ee7c:	adds	r2, #48	; 0x30
    ee7e:	strb.w	r2, [r6, #-1]!
    ee82:	mov	r0, r4
    ee84:	mov	r1, r5
    ee86:	movs	r3, #0
    ee88:	movs	r2, #10
    ee8a:	bl	102ec <__aeabi_uldivmod>
    ee8e:	mov	r4, r0
    ee90:	mov	r5, r1
    ee92:	orrs.w	r3, r4, r5
    ee96:	bne.n	ee70 <_svfprintf_r+0x368>
    ee98:	add	r3, sp, #192	; 0xc0
    ee9a:	subs	r3, r3, r6
    ee9c:	str	r3, [sp, #36]	; 0x24
    ee9e:	ldr	r3, [sp, #36]	; 0x24
    eea0:	cmp	r3, fp
    eea2:	it	lt
    eea4:	movlt	r3, fp
    eea6:	str	r3, [sp, #16]
    eea8:	movs	r3, #0
    eeaa:	str	r3, [sp, #60]	; 0x3c
    eeac:	cbz	r7, eeb4 <_svfprintf_r+0x3ac>
    eeae:	ldr	r3, [sp, #16]
    eeb0:	adds	r3, #1
    eeb2:	str	r3, [sp, #16]
    eeb4:	ldr	r3, [sp, #12]
    eeb6:	ands.w	r3, r3, #2
    eeba:	str	r3, [sp, #44]	; 0x2c
    eebc:	beq.n	eec4 <_svfprintf_r+0x3bc>
    eebe:	ldr	r3, [sp, #16]
    eec0:	adds	r3, #2
    eec2:	str	r3, [sp, #16]
    eec4:	ldr	r3, [sp, #12]
    eec6:	ands.w	r3, r3, #132	; 0x84
    eeca:	str	r3, [sp, #48]	; 0x30
    eecc:	bne.w	f486 <_svfprintf_r+0x97e>
    eed0:	ldr	r3, [sp, #32]
    eed2:	ldr	r2, [sp, #16]
    eed4:	subs	r5, r3, r2
    eed6:	cmp	r5, #0
    eed8:	ble.w	f486 <_svfprintf_r+0x97e>
    eedc:	cmp	r5, #16
    eede:	ldr	r1, [sp, #148]	; 0x94
    eee0:	ldr	r2, [sp, #144]	; 0x90
    eee2:	ldr	r7, [pc, #672]	; (f184 <_svfprintf_r+0x67c>)
    eee4:	ble.n	ef36 <_svfprintf_r+0x42e>
    eee6:	str	r6, [sp, #80]	; 0x50
    eee8:	mov	r0, r9
    eeea:	movs	r4, #16
    eeec:	mov	r9, r7
    eeee:	ldr	r6, [sp, #20]
    eef0:	mov	r7, r5
    eef2:	ldr	r5, [sp, #24]
    eef4:	b.n	ef00 <_svfprintf_r+0x3f8>
    eef6:	subs	r7, #16
    eef8:	cmp	r7, #16
    eefa:	add.w	r0, r0, #8
    eefe:	ble.n	ef2e <_svfprintf_r+0x426>
    ef00:	adds	r2, #1
    ef02:	ldr	r3, [pc, #640]	; (f184 <_svfprintf_r+0x67c>)
    ef04:	str	r2, [sp, #144]	; 0x90
    ef06:	adds	r1, #16
    ef08:	cmp	r2, #7
    ef0a:	str	r1, [sp, #148]	; 0x94
    ef0c:	stmia.w	r0, {r3, r4}
    ef10:	ble.n	eef6 <_svfprintf_r+0x3ee>
    ef12:	add	r2, sp, #140	; 0x8c
    ef14:	mov	r1, r6
    ef16:	mov	r0, r5
    ef18:	bl	101ec <__ssprint_r>
    ef1c:	cmp	r0, #0
    ef1e:	bne.w	ecfc <_svfprintf_r+0x1f4>
    ef22:	subs	r7, #16
    ef24:	cmp	r7, #16
    ef26:	ldr	r1, [sp, #148]	; 0x94
    ef28:	ldr	r2, [sp, #144]	; 0x90
    ef2a:	add	r0, sp, #192	; 0xc0
    ef2c:	bgt.n	ef00 <_svfprintf_r+0x3f8>
    ef2e:	ldr	r6, [sp, #80]	; 0x50
    ef30:	mov	r5, r7
    ef32:	mov	r7, r9
    ef34:	mov	r9, r0
    ef36:	adds	r2, #1
    ef38:	adds	r4, r5, r1
    ef3a:	cmp	r2, #7
    ef3c:	str	r4, [sp, #148]	; 0x94
    ef3e:	str	r2, [sp, #144]	; 0x90
    ef40:	str.w	r7, [r9]
    ef44:	str.w	r5, [r9, #4]
    ef48:	bgt.w	f7a6 <_svfprintf_r+0xc9e>
    ef4c:	ldrb.w	r7, [sp, #111]	; 0x6f
    ef50:	add.w	r9, r9, #8
    ef54:	cbz	r7, ef74 <_svfprintf_r+0x46c>
    ef56:	ldr	r3, [sp, #144]	; 0x90
    ef58:	adds	r3, #1
    ef5a:	adds	r4, #1
    ef5c:	add.w	r1, sp, #111	; 0x6f
    ef60:	movs	r2, #1
    ef62:	cmp	r3, #7
    ef64:	str	r4, [sp, #148]	; 0x94
    ef66:	str	r3, [sp, #144]	; 0x90
    ef68:	stmia.w	r9, {r1, r2}
    ef6c:	bgt.w	f6ba <_svfprintf_r+0xbb2>
    ef70:	add.w	r9, r9, #8
    ef74:	ldr	r3, [sp, #44]	; 0x2c
    ef76:	cbz	r3, ef94 <_svfprintf_r+0x48c>
    ef78:	ldr	r3, [sp, #144]	; 0x90
    ef7a:	adds	r3, #1
    ef7c:	adds	r4, #2
    ef7e:	add	r1, sp, #112	; 0x70
    ef80:	movs	r2, #2
    ef82:	cmp	r3, #7
    ef84:	str	r4, [sp, #148]	; 0x94
    ef86:	str	r3, [sp, #144]	; 0x90
    ef88:	stmia.w	r9, {r1, r2}
    ef8c:	bgt.w	f6d2 <_svfprintf_r+0xbca>
    ef90:	add.w	r9, r9, #8
    ef94:	ldr	r3, [sp, #48]	; 0x30
    ef96:	cmp	r3, #128	; 0x80
    ef98:	beq.w	f55e <_svfprintf_r+0xa56>
    ef9c:	ldr	r3, [sp, #36]	; 0x24
    ef9e:	rsb	r7, r3, fp
    efa2:	cmp	r7, #0
    efa4:	ble.n	f00e <_svfprintf_r+0x506>
    efa6:	ldr	r2, [pc, #480]	; (f188 <_svfprintf_r+0x680>)
    efa8:	ldr	r3, [sp, #144]	; 0x90
    efaa:	str	r2, [sp, #44]	; 0x2c
    efac:	cmp	r7, #16
    efae:	ble.n	eff6 <_svfprintf_r+0x4ee>
    efb0:	mov	r2, r4
    efb2:	mov.w	fp, #16
    efb6:	ldr	r5, [sp, #24]
    efb8:	ldr	r4, [sp, #20]
    efba:	b.n	efc6 <_svfprintf_r+0x4be>
    efbc:	subs	r7, #16
    efbe:	cmp	r7, #16
    efc0:	add.w	r9, r9, #8
    efc4:	ble.n	eff4 <_svfprintf_r+0x4ec>
    efc6:	adds	r3, #1
    efc8:	adds	r2, #16
    efca:	cmp	r3, #7
    efcc:	str	r2, [sp, #148]	; 0x94
    efce:	str	r3, [sp, #144]	; 0x90
    efd0:	stmia.w	r9, {sl, fp}
    efd4:	ble.n	efbc <_svfprintf_r+0x4b4>
    efd6:	add	r2, sp, #140	; 0x8c
    efd8:	mov	r1, r4
    efda:	mov	r0, r5
    efdc:	bl	101ec <__ssprint_r>
    efe0:	cmp	r0, #0
    efe2:	bne.w	ecfc <_svfprintf_r+0x1f4>
    efe6:	subs	r7, #16
    efe8:	cmp	r7, #16
    efea:	ldr	r2, [sp, #148]	; 0x94
    efec:	ldr	r3, [sp, #144]	; 0x90
    efee:	add.w	r9, sp, #192	; 0xc0
    eff2:	bgt.n	efc6 <_svfprintf_r+0x4be>
    eff4:	mov	r4, r2
    eff6:	adds	r3, #1
    eff8:	ldr	r2, [sp, #44]	; 0x2c
    effa:	str	r3, [sp, #144]	; 0x90
    effc:	add	r4, r7
    effe:	cmp	r3, #7
    f000:	str	r4, [sp, #148]	; 0x94
    f002:	stmia.w	r9, {r2, r7}
    f006:	bgt.w	f6a2 <_svfprintf_r+0xb9a>
    f00a:	add.w	r9, r9, #8
    f00e:	ldr	r3, [sp, #12]
    f010:	lsls	r2, r3, #23
    f012:	bmi.w	f48a <_svfprintf_r+0x982>
    f016:	ldr	r3, [sp, #144]	; 0x90
    f018:	ldr	r1, [sp, #36]	; 0x24
    f01a:	str.w	r6, [r9]
    f01e:	adds	r3, #1
    f020:	add	r4, r1
    f022:	cmp	r3, #7
    f024:	str	r4, [sp, #148]	; 0x94
    f026:	str.w	r1, [r9, #4]
    f02a:	str	r3, [sp, #144]	; 0x90
    f02c:	bgt.w	f676 <_svfprintf_r+0xb6e>
    f030:	add.w	r9, r9, #8
    f034:	ldr	r3, [sp, #12]
    f036:	lsls	r1, r3, #29
    f038:	bpl.n	f0ba <_svfprintf_r+0x5b2>
    f03a:	ldr	r3, [sp, #32]
    f03c:	ldr	r2, [sp, #16]
    f03e:	subs	r5, r3, r2
    f040:	cmp	r5, #0
    f042:	ble.n	f0ba <_svfprintf_r+0x5b2>
    f044:	cmp	r5, #16
    f046:	ldr	r3, [sp, #144]	; 0x90
    f048:	ldr	r7, [pc, #312]	; (f184 <_svfprintf_r+0x67c>)
    f04a:	ble.n	f094 <_svfprintf_r+0x58c>
    f04c:	mov	r2, r4
    f04e:	movs	r6, #16
    f050:	ldr.w	fp, [sp, #24]
    f054:	ldr	r4, [sp, #20]
    f056:	b.n	f062 <_svfprintf_r+0x55a>
    f058:	subs	r5, #16
    f05a:	cmp	r5, #16
    f05c:	add.w	r9, r9, #8
    f060:	ble.n	f092 <_svfprintf_r+0x58a>
    f062:	adds	r3, #1
    f064:	ldr	r1, [pc, #284]	; (f184 <_svfprintf_r+0x67c>)
    f066:	str	r3, [sp, #144]	; 0x90
    f068:	adds	r2, #16
    f06a:	cmp	r3, #7
    f06c:	str	r2, [sp, #148]	; 0x94
    f06e:	stmia.w	r9, {r1, r6}
    f072:	ble.n	f058 <_svfprintf_r+0x550>
    f074:	add	r2, sp, #140	; 0x8c
    f076:	mov	r1, r4
    f078:	mov	r0, fp
    f07a:	bl	101ec <__ssprint_r>
    f07e:	cmp	r0, #0
    f080:	bne.w	ecfc <_svfprintf_r+0x1f4>
    f084:	subs	r5, #16
    f086:	cmp	r5, #16
    f088:	ldr	r2, [sp, #148]	; 0x94
    f08a:	ldr	r3, [sp, #144]	; 0x90
    f08c:	add.w	r9, sp, #192	; 0xc0
    f090:	bgt.n	f062 <_svfprintf_r+0x55a>
    f092:	mov	r4, r2
    f094:	adds	r3, #1
    f096:	add	r4, r5
    f098:	cmp	r3, #7
    f09a:	str	r4, [sp, #148]	; 0x94
    f09c:	str	r3, [sp, #144]	; 0x90
    f09e:	str.w	r7, [r9]
    f0a2:	str.w	r5, [r9, #4]
    f0a6:	ble.n	f0ba <_svfprintf_r+0x5b2>
    f0a8:	add	r2, sp, #140	; 0x8c
    f0aa:	ldr	r1, [sp, #20]
    f0ac:	ldr	r0, [sp, #24]
    f0ae:	bl	101ec <__ssprint_r>
    f0b2:	cmp	r0, #0
    f0b4:	bne.w	ecfc <_svfprintf_r+0x1f4>
    f0b8:	ldr	r4, [sp, #148]	; 0x94
    f0ba:	ldr	r3, [sp, #28]
    f0bc:	ldr	r2, [sp, #32]
    f0be:	ldr	r1, [sp, #16]
    f0c0:	cmp	r2, r1
    f0c2:	ite	ge
    f0c4:	addge	r3, r3, r2
    f0c6:	addlt	r3, r3, r1
    f0c8:	str	r3, [sp, #28]
    f0ca:	cmp	r4, #0
    f0cc:	bne.w	f68e <_svfprintf_r+0xb86>
    f0d0:	movs	r3, #0
    f0d2:	str	r3, [sp, #144]	; 0x90
    f0d4:	add.w	r9, sp, #192	; 0xc0
    f0d8:	b.n	eb56 <_svfprintf_r+0x4e>
    f0da:	str	r3, [sp, #52]	; 0x34
    f0dc:	mov	fp, r5
    f0de:	cmp	r2, #0
    f0e0:	bne.w	101a8 <_svfprintf_r+0x16a0>
    f0e4:	ldr	r3, [sp, #12]
    f0e6:	ldr	r7, [sp, #40]	; 0x28
    f0e8:	lsls	r2, r3, #28
    f0ea:	add.w	r7, r7, #7
    f0ee:	bpl.w	fbda <_svfprintf_r+0x10d2>
    f0f2:	bic.w	r3, r7, #7
    f0f6:	vldr	d7, [r3]
    f0fa:	vstr	d7, [sp, #64]	; 0x40
    f0fe:	add.w	r2, r3, #8
    f102:	str	r2, [sp, #40]	; 0x28
    f104:	ldrd	r1, r2, [sp, #64]	; 0x40
    f108:	bic.w	r3, r2, #2147483648	; 0x80000000
    f10c:	str	r1, [sp, #88]	; 0x58
    f10e:	str	r3, [sp, #92]	; 0x5c
    f110:	ldrd	r4, r5, [sp, #88]	; 0x58
    f114:	mov.w	r2, #4294967295
    f118:	mov	r0, r4
    f11a:	mov	r1, r5
    f11c:	ldr	r3, [pc, #108]	; (f18c <_svfprintf_r+0x684>)
    f11e:	bl	b540 <__aeabi_dcmpun>
    f122:	cmp	r0, #0
    f124:	bne.w	fadc <_svfprintf_r+0xfd4>
    f128:	mov.w	r2, #4294967295
    f12c:	ldr	r3, [pc, #92]	; (f18c <_svfprintf_r+0x684>)
    f12e:	mov	r0, r4
    f130:	mov	r1, r5
    f132:	bl	b504 <__aeabi_dcmple>
    f136:	cmp	r0, #0
    f138:	bne.w	fadc <_svfprintf_r+0xfd4>
    f13c:	movs	r2, #0
    f13e:	movs	r3, #0
    f140:	ldrd	r0, r1, [sp, #64]	; 0x40
    f144:	bl	b4f0 <__aeabi_dcmplt>
    f148:	cmp	r0, #0
    f14a:	bne.w	fff2 <_svfprintf_r+0x14ea>
    f14e:	ldrb.w	r7, [sp, #111]	; 0x6f
    f152:	ldr	r6, [pc, #60]	; (f190 <_svfprintf_r+0x688>)
    f154:	ldr	r3, [pc, #60]	; (f194 <_svfprintf_r+0x68c>)
    f156:	ldr	r1, [sp, #12]
    f158:	bic.w	r1, r1, #128	; 0x80
    f15c:	str	r1, [sp, #12]
    f15e:	ldr	r1, [sp, #52]	; 0x34
    f160:	movs	r2, #3
    f162:	mov.w	fp, #0
    f166:	str	r2, [sp, #16]
    f168:	cmp	r1, #71	; 0x47
    f16a:	it	le
    f16c:	movle	r6, r3
    f16e:	str	r2, [sp, #36]	; 0x24
    f170:	str.w	fp, [sp, #60]	; 0x3c
    f174:	b.n	eeac <_svfprintf_r+0x3a4>
    f176:	ldr	r3, [sp, #12]
    f178:	orr.w	r3, r3, #8
    f17c:	str	r3, [sp, #12]
    f17e:	ldrb.w	r3, [r8]
    f182:	b.n	ebbc <_svfprintf_r+0xb4>
    f184:	.word	0x0009e458
    f188:	.word	0x0009e408
    f18c:	.word	0x7fefffff
    f190:	.word	0x0009e41c
    f194:	.word	0x0009e418
    f198:	str	r3, [sp, #52]	; 0x34
    f19a:	mov	fp, r5
    f19c:	cmp	r2, #0
    f19e:	bne.w	101c0 <_svfprintf_r+0x16b8>
    f1a2:	ldr	r3, [sp, #12]
    f1a4:	orr.w	r3, r3, #16
    f1a8:	str	r3, [sp, #12]
    f1aa:	ldr	r2, [sp, #12]
    f1ac:	ands.w	r3, r2, #32
    f1b0:	bne.w	ed28 <_svfprintf_r+0x220>
    f1b4:	ldr	r1, [sp, #12]
    f1b6:	ands.w	r2, r1, #16
    f1ba:	beq.w	fa74 <_svfprintf_r+0xf6c>
    f1be:	ldr	r0, [sp, #40]	; 0x28
    f1c0:	strb.w	r3, [sp, #111]	; 0x6f
    f1c4:	cmp.w	fp, #0
    f1c8:	ldr	r4, [r0, #0]
    f1ca:	add.w	r7, r0, #4
    f1ce:	mov.w	r5, #0
    f1d2:	blt.w	fc08 <_svfprintf_r+0x1100>
    f1d6:	mov	r2, r1
    f1d8:	bic.w	r2, r2, #128	; 0x80
    f1dc:	str	r2, [sp, #12]
    f1de:	orrs.w	r2, r4, r5
    f1e2:	str	r7, [sp, #40]	; 0x28
    f1e4:	beq.w	f45c <_svfprintf_r+0x954>
    f1e8:	mov	r7, r3
    f1ea:	b.n	ed54 <_svfprintf_r+0x24c>
    f1ec:	str	r3, [sp, #52]	; 0x34
    f1ee:	mov	fp, r5
    f1f0:	cmp	r2, #0
    f1f2:	bne.w	101b8 <_svfprintf_r+0x16b0>
    f1f6:	ldr	r3, [sp, #12]
    f1f8:	orr.w	r3, r3, #16
    f1fc:	str	r3, [sp, #12]
    f1fe:	ldr	r2, [sp, #12]
    f200:	ands.w	r3, r2, #32
    f204:	beq.w	f860 <_svfprintf_r+0xd58>
    f208:	ldr	r7, [sp, #40]	; 0x28
    f20a:	adds	r7, #7
    f20c:	bic.w	r3, r7, #7
    f210:	movs	r7, #0
    f212:	add.w	r1, r3, #8
    f216:	cmp	fp, r7
    f218:	str	r1, [sp, #40]	; 0x28
    f21a:	ldrd	r4, r5, [r3]
    f21e:	strb.w	r7, [sp, #111]	; 0x6f
    f222:	blt.w	f8d2 <_svfprintf_r+0xdca>
    f226:	bic.w	r3, r2, #128	; 0x80
    f22a:	str	r3, [sp, #12]
    f22c:	orrs.w	r3, r4, r5
    f230:	bne.w	ee64 <_svfprintf_r+0x35c>
    f234:	cmp.w	fp, #0
    f238:	beq.w	f426 <_svfprintf_r+0x91e>
    f23c:	movs	r4, #0
    f23e:	add	r6, sp, #256	; 0x100
    f240:	adds	r4, #48	; 0x30
    f242:	strb.w	r4, [r6, #-65]!
    f246:	b.n	ee98 <_svfprintf_r+0x390>
    f248:	str	r3, [sp, #52]	; 0x34
    f24a:	mov	fp, r5
    f24c:	cmp	r2, #0
    f24e:	bne.w	101b0 <_svfprintf_r+0x16a8>
    f252:	ldr	r3, [sp, #12]
    f254:	ldr	r0, [pc, #700]	; (f514 <_svfprintf_r+0xa0c>)
    f256:	lsls	r5, r3, #26
    f258:	bpl.w	f3c6 <_svfprintf_r+0x8be>
    f25c:	ldr	r7, [sp, #40]	; 0x28
    f25e:	adds	r7, #7
    f260:	bic.w	r3, r7, #7
    f264:	ldrd	r4, r5, [r3]
    f268:	add.w	r2, r3, #8
    f26c:	str	r2, [sp, #40]	; 0x28
    f26e:	ldr	r2, [sp, #12]
    f270:	ands.w	r7, r2, #1
    f274:	beq.w	f6ea <_svfprintf_r+0xbe2>
    f278:	orrs.w	r3, r4, r5
    f27c:	beq.w	fc84 <_svfprintf_r+0x117c>
    f280:	ldrb.w	r2, [sp, #52]	; 0x34
    f284:	strb.w	r2, [sp, #113]	; 0x71
    f288:	movs	r7, #0
    f28a:	ldr	r2, [sp, #12]
    f28c:	strb.w	r7, [sp, #111]	; 0x6f
    f290:	movs	r3, #48	; 0x30
    f292:	cmp	fp, r7
    f294:	strb.w	r3, [sp, #112]	; 0x70
    f298:	orr.w	r3, r2, #2
    f29c:	blt.w	fffc <_svfprintf_r+0x14f4>
    f2a0:	bic.w	r3, r2, #128	; 0x80
    f2a4:	orr.w	r3, r3, #2
    f2a8:	str	r3, [sp, #12]
    f2aa:	add	r6, sp, #192	; 0xc0
    f2ac:	lsrs	r3, r4, #4
    f2ae:	and.w	r1, r4, #15
    f2b2:	orr.w	r3, r3, r5, lsl #28
    f2b6:	lsrs	r2, r5, #4
    f2b8:	mov	r4, r3
    f2ba:	mov	r5, r2
    f2bc:	ldrb	r3, [r0, r1]
    f2be:	strb.w	r3, [r6, #-1]!
    f2c2:	orrs.w	r3, r4, r5
    f2c6:	bne.n	f2ac <_svfprintf_r+0x7a4>
    f2c8:	b.n	ee98 <_svfprintf_r+0x390>
    f2ca:	ldr	r1, [sp, #40]	; 0x28
    f2cc:	str	r3, [sp, #52]	; 0x34
    f2ce:	ldr	r2, [r1, #0]
    f2d0:	strb.w	r2, [sp, #152]	; 0x98
    f2d4:	movs	r3, #0
    f2d6:	mov	r2, r1
    f2d8:	mov	r7, r3
    f2da:	strb.w	r3, [sp, #111]	; 0x6f
    f2de:	adds	r2, #4
    f2e0:	movs	r3, #1
    f2e2:	str	r3, [sp, #16]
    f2e4:	mov	fp, r7
    f2e6:	str	r7, [sp, #60]	; 0x3c
    f2e8:	str	r2, [sp, #40]	; 0x28
    f2ea:	str	r3, [sp, #36]	; 0x24
    f2ec:	add	r6, sp, #152	; 0x98
    f2ee:	b.n	eeb4 <_svfprintf_r+0x3ac>
    f2f0:	str	r3, [sp, #52]	; 0x34
    f2f2:	mov	fp, r5
    f2f4:	cmp	r2, #0
    f2f6:	beq.w	ee20 <_svfprintf_r+0x318>
    f2fa:	strb.w	r1, [sp, #111]	; 0x6f
    f2fe:	b.n	ee20 <_svfprintf_r+0x318>
    f300:	ldr	r3, [sp, #12]
    f302:	orr.w	r3, r3, #64	; 0x40
    f306:	str	r3, [sp, #12]
    f308:	ldrb.w	r3, [r8]
    f30c:	b.n	ebbc <_svfprintf_r+0xb4>
    f30e:	ldrb.w	r3, [r8]
    f312:	cmp	r1, #0
    f314:	bne.w	ebbc <_svfprintf_r+0xb4>
    f318:	movs	r2, #1
    f31a:	movs	r1, #32
    f31c:	b.n	ebbc <_svfprintf_r+0xb4>
    f31e:	ldr	r3, [sp, #12]
    f320:	orr.w	r3, r3, #1
    f324:	str	r3, [sp, #12]
    f326:	ldrb.w	r3, [r8]
    f32a:	b.n	ebbc <_svfprintf_r+0xb4>
    f32c:	ldr	r4, [sp, #40]	; 0x28
    f32e:	ldr	r3, [r4, #0]
    f330:	str	r3, [sp, #32]
    f332:	mov	r0, r3
    f334:	cmp	r0, #0
    f336:	mov	r3, r4
    f338:	add.w	r3, r3, #4
    f33c:	blt.w	ec80 <_svfprintf_r+0x178>
    f340:	str	r3, [sp, #40]	; 0x28
    f342:	ldrb.w	r3, [r8]
    f346:	b.n	ebbc <_svfprintf_r+0xb4>
    f348:	ldrb.w	r3, [r8]
    f34c:	movs	r2, #1
    f34e:	movs	r1, #43	; 0x2b
    f350:	b.n	ebbc <_svfprintf_r+0xb4>
    f352:	ldr	r3, [sp, #12]
    f354:	orr.w	r3, r3, #32
    f358:	str	r3, [sp, #12]
    f35a:	ldrb.w	r3, [r8]
    f35e:	b.n	ebbc <_svfprintf_r+0xb4>
    f360:	ldr	r2, [sp, #40]	; 0x28
    f362:	str	r3, [sp, #52]	; 0x34
    f364:	ldr	r6, [r2, #0]
    f366:	movs	r4, #0
    f368:	strb.w	r4, [sp, #111]	; 0x6f
    f36c:	adds	r7, r2, #4
    f36e:	cmp	r6, #0
    f370:	beq.w	ffac <_svfprintf_r+0x14a4>
    f374:	cmp	r5, #0
    f376:	blt.w	fe3c <_svfprintf_r+0x1334>
    f37a:	mov	r2, r5
    f37c:	mov	r1, r4
    f37e:	mov	r0, r6
    f380:	bl	d480 <memchr>
    f384:	cmp	r0, #0
    f386:	beq.w	10050 <_svfprintf_r+0x1548>
    f38a:	subs	r3, r0, r6
    f38c:	str	r3, [sp, #36]	; 0x24
    f38e:	mov	fp, r4
    f390:	bic.w	r3, r3, r3, asr #31
    f394:	str	r7, [sp, #40]	; 0x28
    f396:	str	r3, [sp, #16]
    f398:	str.w	fp, [sp, #60]	; 0x3c
    f39c:	ldrb.w	r7, [sp, #111]	; 0x6f
    f3a0:	b.n	eeac <_svfprintf_r+0x3a4>
    f3a2:	str	r3, [sp, #52]	; 0x34
    f3a4:	mov	fp, r5
    f3a6:	cmp	r2, #0
    f3a8:	beq.w	f1fe <_svfprintf_r+0x6f6>
    f3ac:	strb.w	r1, [sp, #111]	; 0x6f
    f3b0:	b.n	f1fe <_svfprintf_r+0x6f6>
    f3b2:	str	r3, [sp, #52]	; 0x34
    f3b4:	mov	fp, r5
    f3b6:	cmp	r2, #0
    f3b8:	bne.w	101d8 <_svfprintf_r+0x16d0>
    f3bc:	ldr	r3, [sp, #12]
    f3be:	ldr	r0, [pc, #344]	; (f518 <_svfprintf_r+0xa10>)
    f3c0:	lsls	r5, r3, #26
    f3c2:	bmi.w	f25c <_svfprintf_r+0x754>
    f3c6:	ldr	r3, [sp, #12]
    f3c8:	lsls	r4, r3, #27
    f3ca:	bpl.w	fc4a <_svfprintf_r+0x1142>
    f3ce:	ldr	r2, [sp, #40]	; 0x28
    f3d0:	mov	r3, r2
    f3d2:	adds	r3, #4
    f3d4:	ldr	r4, [r2, #0]
    f3d6:	str	r3, [sp, #40]	; 0x28
    f3d8:	movs	r5, #0
    f3da:	b.n	f26e <_svfprintf_r+0x766>
    f3dc:	ldrb.w	r3, [r8]
    f3e0:	cmp	r3, #108	; 0x6c
    f3e2:	beq.w	fd6a <_svfprintf_r+0x1262>
    f3e6:	ldr	r0, [sp, #12]
    f3e8:	orr.w	r0, r0, #16
    f3ec:	str	r0, [sp, #12]
    f3ee:	b.w	ebbc <_svfprintf_r+0xb4>
    f3f2:	cmp	r2, #0
    f3f4:	bne.w	101d0 <_svfprintf_r+0x16c8>
    f3f8:	ldr	r3, [sp, #12]
    f3fa:	lsls	r3, r3, #26
    f3fc:	bpl.w	faae <_svfprintf_r+0xfa6>
    f400:	ldr	r2, [sp, #40]	; 0x28
    f402:	ldr	r1, [sp, #28]
    f404:	ldr	r3, [r2, #0]
    f406:	asrs	r5, r1, #31
    f408:	mov	r0, r1
    f40a:	adds	r2, #4
    f40c:	mov	r1, r5
    f40e:	str	r2, [sp, #40]	; 0x28
    f410:	strd	r0, r1, [r3]
    f414:	b.w	eb56 <_svfprintf_r+0x4e>
    f418:	ldr	r0, [pc, #252]	; (f518 <_svfprintf_r+0xa10>)
    f41a:	str	r2, [sp, #52]	; 0x34
    f41c:	cmp.w	fp, #0
    f420:	bne.w	f70c <_svfprintf_r+0xc04>
    f424:	mov	r7, fp
    f426:	mov.w	fp, #0
    f42a:	str.w	fp, [sp, #36]	; 0x24
    f42e:	add	r6, sp, #192	; 0xc0
    f430:	b.n	ee9e <_svfprintf_r+0x396>
    f432:	str	r3, [sp, #52]	; 0x34
    f434:	cmp	r2, #0
    f436:	bne.w	101c8 <_svfprintf_r+0x16c0>
    f43a:	ldr	r2, [sp, #52]	; 0x34
    f43c:	cmp	r2, #0
    f43e:	beq.w	ecee <_svfprintf_r+0x1e6>
    f442:	movs	r3, #0
    f444:	movs	r1, #1
    f446:	mov	r7, r3
    f448:	str	r1, [sp, #16]
    f44a:	strb.w	r2, [sp, #152]	; 0x98
    f44e:	strb.w	r3, [sp, #111]	; 0x6f
    f452:	mov	fp, r3
    f454:	str	r3, [sp, #60]	; 0x3c
    f456:	str	r1, [sp, #36]	; 0x24
    f458:	add	r6, sp, #152	; 0x98
    f45a:	b.n	eeb4 <_svfprintf_r+0x3ac>
    f45c:	cmp.w	fp, #0
    f460:	beq.w	10080 <_svfprintf_r+0x1578>
    f464:	movs	r7, #0
    f466:	movs	r4, #0
    f468:	movs	r5, #0
    f46a:	b.n	ed54 <_svfprintf_r+0x24c>
    f46c:	ldr	r0, [pc, #168]	; (f518 <_svfprintf_r+0xa10>)
    f46e:	str	r3, [sp, #12]
    f470:	str	r2, [sp, #52]	; 0x34
    f472:	orrs.w	r3, r4, r5
    f476:	str	r7, [sp, #40]	; 0x28
    f478:	mov.w	r7, #0
    f47c:	bne.w	f2aa <_svfprintf_r+0x7a2>
    f480:	movs	r4, #0
    f482:	movs	r5, #0
    f484:	b.n	f2aa <_svfprintf_r+0x7a2>
    f486:	ldr	r4, [sp, #148]	; 0x94
    f488:	b.n	ef54 <_svfprintf_r+0x44c>
    f48a:	ldr	r3, [sp, #52]	; 0x34
    f48c:	cmp	r3, #101	; 0x65
    f48e:	ble.w	f5e6 <_svfprintf_r+0xade>
    f492:	movs	r2, #0
    f494:	movs	r3, #0
    f496:	ldrd	r0, r1, [sp, #64]	; 0x40
    f49a:	bl	b4dc <__aeabi_dcmpeq>
    f49e:	cmp	r0, #0
    f4a0:	beq.w	f710 <_svfprintf_r+0xc08>
    f4a4:	ldr	r3, [sp, #144]	; 0x90
    f4a6:	ldr	r2, [pc, #116]	; (f51c <_svfprintf_r+0xa14>)
    f4a8:	str.w	r2, [r9]
    f4ac:	adds	r3, #1
    f4ae:	adds	r4, #1
    f4b0:	movs	r2, #1
    f4b2:	cmp	r3, #7
    f4b4:	str	r4, [sp, #148]	; 0x94
    f4b6:	str	r3, [sp, #144]	; 0x90
    f4b8:	str.w	r2, [r9, #4]
    f4bc:	bgt.w	fc9c <_svfprintf_r+0x1194>
    f4c0:	add.w	r9, r9, #8
    f4c4:	ldr	r3, [sp, #116]	; 0x74
    f4c6:	ldr	r2, [sp, #56]	; 0x38
    f4c8:	cmp	r3, r2
    f4ca:	blt.n	f4d4 <_svfprintf_r+0x9cc>
    f4cc:	ldr	r3, [sp, #12]
    f4ce:	lsls	r3, r3, #31
    f4d0:	bpl.w	f034 <_svfprintf_r+0x52c>
    f4d4:	ldr	r3, [sp, #144]	; 0x90
    f4d6:	ldr	r1, [sp, #72]	; 0x48
    f4d8:	ldr	r2, [sp, #76]	; 0x4c
    f4da:	str.w	r2, [r9]
    f4de:	adds	r3, #1
    f4e0:	add	r4, r1
    f4e2:	cmp	r3, #7
    f4e4:	str	r4, [sp, #148]	; 0x94
    f4e6:	str.w	r1, [r9, #4]
    f4ea:	str	r3, [sp, #144]	; 0x90
    f4ec:	bgt.w	fd7e <_svfprintf_r+0x1276>
    f4f0:	add.w	r9, r9, #8
    f4f4:	ldr	r3, [sp, #56]	; 0x38
    f4f6:	subs	r5, r3, #1
    f4f8:	cmp	r5, #0
    f4fa:	ble.w	f034 <_svfprintf_r+0x52c>
    f4fe:	ldr	r2, [pc, #32]	; (f520 <_svfprintf_r+0xa18>)
    f500:	ldr	r3, [sp, #144]	; 0x90
    f502:	str	r2, [sp, #44]	; 0x2c
    f504:	cmp	r5, #16
    f506:	ble.w	f8dc <_svfprintf_r+0xdd4>
    f50a:	movs	r6, #16
    f50c:	ldr	r7, [sp, #24]
    f50e:	ldr.w	fp, [sp, #20]
    f512:	b.n	f530 <_svfprintf_r+0xa28>
    f514:	.word	0x0009e428
    f518:	.word	0x0009e43c
    f51c:	.word	0x0009e404
    f520:	.word	0x0009e408
    f524:	add.w	r9, r9, #8
    f528:	subs	r5, #16
    f52a:	cmp	r5, #16
    f52c:	ble.w	f8dc <_svfprintf_r+0xdd4>
    f530:	adds	r3, #1
    f532:	adds	r4, #16
    f534:	cmp	r3, #7
    f536:	str	r4, [sp, #148]	; 0x94
    f538:	str	r3, [sp, #144]	; 0x90
    f53a:	str.w	sl, [r9]
    f53e:	str.w	r6, [r9, #4]
    f542:	ble.n	f524 <_svfprintf_r+0xa1c>
    f544:	add	r2, sp, #140	; 0x8c
    f546:	mov	r1, fp
    f548:	mov	r0, r7
    f54a:	bl	101ec <__ssprint_r>
    f54e:	cmp	r0, #0
    f550:	bne.w	ecfc <_svfprintf_r+0x1f4>
    f554:	ldr	r4, [sp, #148]	; 0x94
    f556:	ldr	r3, [sp, #144]	; 0x90
    f558:	add.w	r9, sp, #192	; 0xc0
    f55c:	b.n	f528 <_svfprintf_r+0xa20>
    f55e:	ldr	r3, [sp, #32]
    f560:	ldr	r2, [sp, #16]
    f562:	subs	r7, r3, r2
    f564:	cmp	r7, #0
    f566:	ble.w	ef9c <_svfprintf_r+0x494>
    f56a:	ldr	r2, [pc, #752]	; (f85c <_svfprintf_r+0xd54>)
    f56c:	ldr	r3, [sp, #144]	; 0x90
    f56e:	str	r2, [sp, #44]	; 0x2c
    f570:	cmp	r7, #16
    f572:	ble.n	f5cc <_svfprintf_r+0xac4>
    f574:	mov	r2, r9
    f576:	mov	r1, r4
    f578:	mov	r9, r7
    f57a:	movs	r5, #16
    f57c:	mov	r7, r6
    f57e:	ldr	r4, [sp, #24]
    f580:	ldr	r6, [sp, #20]
    f582:	b.n	f592 <_svfprintf_r+0xa8a>
    f584:	sub.w	r9, r9, #16
    f588:	cmp.w	r9, #16
    f58c:	add.w	r2, r2, #8
    f590:	ble.n	f5c4 <_svfprintf_r+0xabc>
    f592:	adds	r3, #1
    f594:	adds	r1, #16
    f596:	cmp	r3, #7
    f598:	str	r1, [sp, #148]	; 0x94
    f59a:	str	r3, [sp, #144]	; 0x90
    f59c:	str.w	sl, [r2]
    f5a0:	str	r5, [r2, #4]
    f5a2:	ble.n	f584 <_svfprintf_r+0xa7c>
    f5a4:	add	r2, sp, #140	; 0x8c
    f5a6:	mov	r1, r6
    f5a8:	mov	r0, r4
    f5aa:	bl	101ec <__ssprint_r>
    f5ae:	cmp	r0, #0
    f5b0:	bne.w	ecfc <_svfprintf_r+0x1f4>
    f5b4:	sub.w	r9, r9, #16
    f5b8:	cmp.w	r9, #16
    f5bc:	ldr	r1, [sp, #148]	; 0x94
    f5be:	ldr	r3, [sp, #144]	; 0x90
    f5c0:	add	r2, sp, #192	; 0xc0
    f5c2:	bgt.n	f592 <_svfprintf_r+0xa8a>
    f5c4:	mov	r6, r7
    f5c6:	mov	r4, r1
    f5c8:	mov	r7, r9
    f5ca:	mov	r9, r2
    f5cc:	adds	r3, #1
    f5ce:	ldr	r2, [sp, #44]	; 0x2c
    f5d0:	str	r3, [sp, #144]	; 0x90
    f5d2:	add	r4, r7
    f5d4:	cmp	r3, #7
    f5d6:	str	r4, [sp, #148]	; 0x94
    f5d8:	stmia.w	r9, {r2, r7}
    f5dc:	bgt.w	fa5a <_svfprintf_r+0xf52>
    f5e0:	add.w	r9, r9, #8
    f5e4:	b.n	ef9c <_svfprintf_r+0x494>
    f5e6:	ldr	r3, [sp, #56]	; 0x38
    f5e8:	ldr	r5, [sp, #144]	; 0x90
    f5ea:	cmp	r3, #1
    f5ec:	ble.w	fa04 <_svfprintf_r+0xefc>
    f5f0:	adds	r5, #1
    f5f2:	adds	r4, #1
    f5f4:	movs	r3, #1
    f5f6:	cmp	r5, #7
    f5f8:	str	r4, [sp, #148]	; 0x94
    f5fa:	str	r5, [sp, #144]	; 0x90
    f5fc:	str.w	r6, [r9]
    f600:	str.w	r3, [r9, #4]
    f604:	bgt.w	fa26 <_svfprintf_r+0xf1e>
    f608:	add.w	r9, r9, #8
    f60c:	ldr	r2, [sp, #72]	; 0x48
    f60e:	ldr	r3, [sp, #76]	; 0x4c
    f610:	str.w	r3, [r9]
    f614:	adds	r5, #1
    f616:	add	r4, r2
    f618:	cmp	r5, #7
    f61a:	str	r4, [sp, #148]	; 0x94
    f61c:	str	r5, [sp, #144]	; 0x90
    f61e:	str.w	r2, [r9, #4]
    f622:	bgt.w	fa40 <_svfprintf_r+0xf38>
    f626:	add.w	r9, r9, #8
    f62a:	movs	r3, #0
    f62c:	movs	r2, #0
    f62e:	ldrd	r0, r1, [sp, #64]	; 0x40
    f632:	bl	b4dc <__aeabi_dcmpeq>
    f636:	ldr	r3, [sp, #56]	; 0x38
    f638:	cmp	r0, #0
    f63a:	bne.w	f7c4 <_svfprintf_r+0xcbc>
    f63e:	subs	r3, #1
    f640:	adds	r5, #1
    f642:	adds	r6, #1
    f644:	add	r4, r3
    f646:	cmp	r5, #7
    f648:	str	r5, [sp, #144]	; 0x90
    f64a:	str	r4, [sp, #148]	; 0x94
    f64c:	str.w	r6, [r9]
    f650:	str.w	r3, [r9, #4]
    f654:	bgt.w	f842 <_svfprintf_r+0xd3a>
    f658:	add.w	r9, r9, #8
    f65c:	ldr	r2, [sp, #84]	; 0x54
    f65e:	str.w	r2, [r9, #4]
    f662:	adds	r5, #1
    f664:	add	r4, r2
    f666:	add	r3, sp, #124	; 0x7c
    f668:	cmp	r5, #7
    f66a:	str	r4, [sp, #148]	; 0x94
    f66c:	str	r5, [sp, #144]	; 0x90
    f66e:	str.w	r3, [r9]
    f672:	ble.w	f030 <_svfprintf_r+0x528>
    f676:	add	r2, sp, #140	; 0x8c
    f678:	ldr	r1, [sp, #20]
    f67a:	ldr	r0, [sp, #24]
    f67c:	bl	101ec <__ssprint_r>
    f680:	cmp	r0, #0
    f682:	bne.w	ecfc <_svfprintf_r+0x1f4>
    f686:	ldr	r4, [sp, #148]	; 0x94
    f688:	add.w	r9, sp, #192	; 0xc0
    f68c:	b.n	f034 <_svfprintf_r+0x52c>
    f68e:	add	r2, sp, #140	; 0x8c
    f690:	ldr	r1, [sp, #20]
    f692:	ldr	r0, [sp, #24]
    f694:	bl	101ec <__ssprint_r>
    f698:	cmp	r0, #0
    f69a:	beq.w	f0d0 <_svfprintf_r+0x5c8>
    f69e:	b.w	ecfc <_svfprintf_r+0x1f4>
    f6a2:	add	r2, sp, #140	; 0x8c
    f6a4:	ldr	r1, [sp, #20]
    f6a6:	ldr	r0, [sp, #24]
    f6a8:	bl	101ec <__ssprint_r>
    f6ac:	cmp	r0, #0
    f6ae:	bne.w	ecfc <_svfprintf_r+0x1f4>
    f6b2:	ldr	r4, [sp, #148]	; 0x94
    f6b4:	add.w	r9, sp, #192	; 0xc0
    f6b8:	b.n	f00e <_svfprintf_r+0x506>
    f6ba:	add	r2, sp, #140	; 0x8c
    f6bc:	ldr	r1, [sp, #20]
    f6be:	ldr	r0, [sp, #24]
    f6c0:	bl	101ec <__ssprint_r>
    f6c4:	cmp	r0, #0
    f6c6:	bne.w	ecfc <_svfprintf_r+0x1f4>
    f6ca:	ldr	r4, [sp, #148]	; 0x94
    f6cc:	add.w	r9, sp, #192	; 0xc0
    f6d0:	b.n	ef74 <_svfprintf_r+0x46c>
    f6d2:	add	r2, sp, #140	; 0x8c
    f6d4:	ldr	r1, [sp, #20]
    f6d6:	ldr	r0, [sp, #24]
    f6d8:	bl	101ec <__ssprint_r>
    f6dc:	cmp	r0, #0
    f6de:	bne.w	ecfc <_svfprintf_r+0x1f4>
    f6e2:	ldr	r4, [sp, #148]	; 0x94
    f6e4:	add.w	r9, sp, #192	; 0xc0
    f6e8:	b.n	ef94 <_svfprintf_r+0x48c>
    f6ea:	cmp.w	fp, #0
    f6ee:	strb.w	r7, [sp, #111]	; 0x6f
    f6f2:	blt.w	fcb4 <_svfprintf_r+0x11ac>
    f6f6:	bic.w	r3, r2, #128	; 0x80
    f6fa:	str	r3, [sp, #12]
    f6fc:	orrs.w	r3, r4, r5
    f700:	bne.w	f2aa <_svfprintf_r+0x7a2>
    f704:	cmp.w	fp, #0
    f708:	beq.w	f424 <_svfprintf_r+0x91c>
    f70c:	movs	r7, #0
    f70e:	b.n	f480 <_svfprintf_r+0x978>
    f710:	ldr	r5, [sp, #116]	; 0x74
    f712:	cmp	r5, #0
    f714:	ble.w	fcba <_svfprintf_r+0x11b2>
    f718:	ldr	r3, [sp, #60]	; 0x3c
    f71a:	ldr	r2, [sp, #56]	; 0x38
    f71c:	cmp	r3, r2
    f71e:	it	ge
    f720:	movge	r3, r2
    f722:	cmp	r3, #0
    f724:	mov	r5, r3
    f726:	ble.n	f744 <_svfprintf_r+0xc3c>
    f728:	ldr	r3, [sp, #144]	; 0x90
    f72a:	str.w	r6, [r9]
    f72e:	adds	r3, #1
    f730:	add	r4, r5
    f732:	cmp	r3, #7
    f734:	str	r4, [sp, #148]	; 0x94
    f736:	str.w	r5, [r9, #4]
    f73a:	str	r3, [sp, #144]	; 0x90
    f73c:	bgt.w	fe92 <_svfprintf_r+0x138a>
    f740:	add.w	r9, r9, #8
    f744:	ldr	r3, [sp, #60]	; 0x3c
    f746:	cmp	r5, #0
    f748:	it	ge
    f74a:	subge	r3, r3, r5
    f74c:	cmp	r3, #0
    f74e:	mov	r5, r3
    f750:	ble.w	f944 <_svfprintf_r+0xe3c>
    f754:	ldr	r2, [pc, #260]	; (f85c <_svfprintf_r+0xd54>)
    f756:	ldr	r3, [sp, #144]	; 0x90
    f758:	str	r2, [sp, #44]	; 0x2c
    f75a:	cmp	r5, #16
    f75c:	ble.w	fc66 <_svfprintf_r+0x115e>
    f760:	mov	r2, r4
    f762:	movs	r7, #16
    f764:	ldr.w	fp, [sp, #24]
    f768:	ldr	r4, [sp, #20]
    f76a:	b.n	f778 <_svfprintf_r+0xc70>
    f76c:	add.w	r9, r9, #8
    f770:	subs	r5, #16
    f772:	cmp	r5, #16
    f774:	ble.w	fc64 <_svfprintf_r+0x115c>
    f778:	adds	r3, #1
    f77a:	adds	r2, #16
    f77c:	cmp	r3, #7
    f77e:	str	r2, [sp, #148]	; 0x94
    f780:	str	r3, [sp, #144]	; 0x90
    f782:	str.w	sl, [r9]
    f786:	str.w	r7, [r9, #4]
    f78a:	ble.n	f76c <_svfprintf_r+0xc64>
    f78c:	add	r2, sp, #140	; 0x8c
    f78e:	mov	r1, r4
    f790:	mov	r0, fp
    f792:	bl	101ec <__ssprint_r>
    f796:	cmp	r0, #0
    f798:	bne.w	ecfc <_svfprintf_r+0x1f4>
    f79c:	ldr	r2, [sp, #148]	; 0x94
    f79e:	ldr	r3, [sp, #144]	; 0x90
    f7a0:	add.w	r9, sp, #192	; 0xc0
    f7a4:	b.n	f770 <_svfprintf_r+0xc68>
    f7a6:	add	r2, sp, #140	; 0x8c
    f7a8:	ldr	r1, [sp, #20]
    f7aa:	ldr	r0, [sp, #24]
    f7ac:	bl	101ec <__ssprint_r>
    f7b0:	cmp	r0, #0
    f7b2:	bne.w	ecfc <_svfprintf_r+0x1f4>
    f7b6:	ldrb.w	r7, [sp, #111]	; 0x6f
    f7ba:	ldr	r4, [sp, #148]	; 0x94
    f7bc:	add.w	r9, sp, #192	; 0xc0
    f7c0:	b.w	ef54 <_svfprintf_r+0x44c>
    f7c4:	subs	r6, r3, #1
    f7c6:	cmp	r6, #0
    f7c8:	ble.w	f65c <_svfprintf_r+0xb54>
    f7cc:	ldr	r3, [pc, #140]	; (f85c <_svfprintf_r+0xd54>)
    f7ce:	str	r3, [sp, #44]	; 0x2c
    f7d0:	cmp	r6, #16
    f7d2:	ble.n	f82e <_svfprintf_r+0xd26>
    f7d4:	str.w	r8, [sp, #36]	; 0x24
    f7d8:	movs	r7, #16
    f7da:	mov	r8, r6
    f7dc:	ldr.w	fp, [sp, #24]
    f7e0:	ldr	r6, [sp, #20]
    f7e2:	b.n	f7f2 <_svfprintf_r+0xcea>
    f7e4:	sub.w	r8, r8, #16
    f7e8:	cmp.w	r8, #16
    f7ec:	add.w	r9, r9, #8
    f7f0:	ble.n	f828 <_svfprintf_r+0xd20>
    f7f2:	adds	r5, #1
    f7f4:	adds	r4, #16
    f7f6:	cmp	r5, #7
    f7f8:	str	r4, [sp, #148]	; 0x94
    f7fa:	str	r5, [sp, #144]	; 0x90
    f7fc:	str.w	sl, [r9]
    f800:	str.w	r7, [r9, #4]
    f804:	ble.n	f7e4 <_svfprintf_r+0xcdc>
    f806:	add	r2, sp, #140	; 0x8c
    f808:	mov	r1, r6
    f80a:	mov	r0, fp
    f80c:	bl	101ec <__ssprint_r>
    f810:	cmp	r0, #0
    f812:	bne.w	ecfc <_svfprintf_r+0x1f4>
    f816:	sub.w	r8, r8, #16
    f81a:	cmp.w	r8, #16
    f81e:	ldr	r4, [sp, #148]	; 0x94
    f820:	ldr	r5, [sp, #144]	; 0x90
    f822:	add.w	r9, sp, #192	; 0xc0
    f826:	bgt.n	f7f2 <_svfprintf_r+0xcea>
    f828:	mov	r6, r8
    f82a:	ldr.w	r8, [sp, #36]	; 0x24
    f82e:	ldr	r3, [sp, #44]	; 0x2c
    f830:	adds	r5, #1
    f832:	add	r4, r6
    f834:	cmp	r5, #7
    f836:	str	r4, [sp, #148]	; 0x94
    f838:	str	r5, [sp, #144]	; 0x90
    f83a:	stmia.w	r9, {r3, r6}
    f83e:	ble.w	f658 <_svfprintf_r+0xb50>
    f842:	add	r2, sp, #140	; 0x8c
    f844:	ldr	r1, [sp, #20]
    f846:	ldr	r0, [sp, #24]
    f848:	bl	101ec <__ssprint_r>
    f84c:	cmp	r0, #0
    f84e:	bne.w	ecfc <_svfprintf_r+0x1f4>
    f852:	ldr	r4, [sp, #148]	; 0x94
    f854:	ldr	r5, [sp, #144]	; 0x90
    f856:	add.w	r9, sp, #192	; 0xc0
    f85a:	b.n	f65c <_svfprintf_r+0xb54>
    f85c:	.word	0x0009e408
    f860:	ldr	r1, [sp, #12]
    f862:	ands.w	r2, r1, #16
    f866:	beq.w	fc10 <_svfprintf_r+0x1108>
    f86a:	ldr	r0, [sp, #40]	; 0x28
    f86c:	strb.w	r3, [sp, #111]	; 0x6f
    f870:	cmp.w	fp, #0
    f874:	ldr	r4, [r0, #0]
    f876:	add.w	r7, r0, #4
    f87a:	mov.w	r5, #0
    f87e:	blt.n	f8ce <_svfprintf_r+0xdc6>
    f880:	mov	r2, r1
    f882:	bic.w	r2, r2, #128	; 0x80
    f886:	str	r2, [sp, #12]
    f888:	orrs.w	r2, r4, r5
    f88c:	str	r7, [sp, #40]	; 0x28
    f88e:	mov	r7, r3
    f890:	bne.w	ee64 <_svfprintf_r+0x35c>
    f894:	b.n	f234 <_svfprintf_r+0x72c>
    f896:	ldr	r3, [sp, #12]
    f898:	lsls	r0, r3, #27
    f89a:	bmi.n	f8f2 <_svfprintf_r+0xdea>
    f89c:	ldr	r3, [sp, #12]
    f89e:	lsls	r1, r3, #25
    f8a0:	bpl.n	f8f2 <_svfprintf_r+0xdea>
    f8a2:	ldr	r1, [sp, #40]	; 0x28
    f8a4:	ldrsh.w	r4, [r1]
    f8a8:	adds	r1, #4
    f8aa:	asrs	r5, r4, #31
    f8ac:	mov	r2, r4
    f8ae:	mov	r3, r5
    f8b0:	str	r1, [sp, #40]	; 0x28
    f8b2:	b.w	ee3e <_svfprintf_r+0x336>
    f8b6:	ldr	r1, [sp, #40]	; 0x28
    f8b8:	strb.w	r3, [sp, #111]	; 0x6f
    f8bc:	cmp.w	fp, #0
    f8c0:	ldr	r4, [r1, #0]
    f8c2:	add.w	r7, r1, #4
    f8c6:	mov.w	r5, #0
    f8ca:	bge.w	fd66 <_svfprintf_r+0x125e>
    f8ce:	str	r7, [sp, #40]	; 0x28
    f8d0:	mov	r7, r3
    f8d2:	orrs.w	r3, r4, r5
    f8d6:	bne.w	ee64 <_svfprintf_r+0x35c>
    f8da:	b.n	f23e <_svfprintf_r+0x736>
    f8dc:	adds	r3, #1
    f8de:	ldr	r2, [sp, #44]	; 0x2c
    f8e0:	str	r3, [sp, #144]	; 0x90
    f8e2:	add	r4, r5
    f8e4:	cmp	r3, #7
    f8e6:	str	r4, [sp, #148]	; 0x94
    f8e8:	stmia.w	r9, {r2, r5}
    f8ec:	ble.w	f030 <_svfprintf_r+0x528>
    f8f0:	b.n	f676 <_svfprintf_r+0xb6e>
    f8f2:	ldr	r2, [sp, #40]	; 0x28
    f8f4:	ldr	r4, [r2, #0]
    f8f6:	mov	r3, r2
    f8f8:	adds	r3, #4
    f8fa:	asrs	r5, r4, #31
    f8fc:	mov	r2, r4
    f8fe:	str	r3, [sp, #40]	; 0x28
    f900:	cmp	r2, #0
    f902:	mov	r3, r5
    f904:	sbcs.w	r3, r3, #0
    f908:	bge.w	ee48 <_svfprintf_r+0x340>
    f90c:	negs	r4, r4
    f90e:	mov.w	r7, #45	; 0x2d
    f912:	sbc.w	r5, r5, r5, lsl #1
    f916:	cmp.w	fp, #0
    f91a:	strb.w	r7, [sp, #111]	; 0x6f
    f91e:	blt.w	ee64 <_svfprintf_r+0x35c>
    f922:	ldr	r3, [sp, #12]
    f924:	bic.w	r3, r3, #128	; 0x80
    f928:	str	r3, [sp, #12]
    f92a:	b.w	ee64 <_svfprintf_r+0x35c>
    f92e:	add	r2, sp, #140	; 0x8c
    f930:	ldr	r1, [sp, #20]
    f932:	ldr	r0, [sp, #24]
    f934:	bl	101ec <__ssprint_r>
    f938:	cmp	r0, #0
    f93a:	bne.w	ecfc <_svfprintf_r+0x1f4>
    f93e:	ldr	r4, [sp, #148]	; 0x94
    f940:	add.w	r9, sp, #192	; 0xc0
    f944:	ldr	r2, [sp, #60]	; 0x3c
    f946:	ldr	r3, [sp, #116]	; 0x74
    f948:	add	r2, r6
    f94a:	mov	r7, r2
    f94c:	ldr	r2, [sp, #56]	; 0x38
    f94e:	cmp	r3, r2
    f950:	blt.n	f9e2 <_svfprintf_r+0xeda>
    f952:	ldr	r2, [sp, #12]
    f954:	lsls	r5, r2, #31
    f956:	bmi.n	f9e2 <_svfprintf_r+0xeda>
    f958:	ldr	r1, [sp, #56]	; 0x38
    f95a:	add	r6, r1
    f95c:	subs	r5, r6, r7
    f95e:	subs	r3, r1, r3
    f960:	cmp	r5, r3
    f962:	it	ge
    f964:	movge	r5, r3
    f966:	cmp	r5, #0
    f968:	mov	r6, r5
    f96a:	ble.n	f988 <_svfprintf_r+0xe80>
    f96c:	ldr	r2, [sp, #144]	; 0x90
    f96e:	str.w	r7, [r9]
    f972:	adds	r2, #1
    f974:	add	r4, r5
    f976:	cmp	r2, #7
    f978:	str	r4, [sp, #148]	; 0x94
    f97a:	str.w	r5, [r9, #4]
    f97e:	str	r2, [sp, #144]	; 0x90
    f980:	bgt.w	ff80 <_svfprintf_r+0x1478>
    f984:	add.w	r9, r9, #8
    f988:	cmp	r6, #0
    f98a:	ite	ge
    f98c:	subge	r5, r3, r6
    f98e:	movlt	r5, r3
    f990:	cmp	r5, #0
    f992:	ble.w	f034 <_svfprintf_r+0x52c>
    f996:	ldr	r2, [pc, #744]	; (fc80 <_svfprintf_r+0x1178>)
    f998:	ldr	r3, [sp, #144]	; 0x90
    f99a:	str	r2, [sp, #44]	; 0x2c
    f99c:	cmp	r5, #16
    f99e:	ble.n	f8dc <_svfprintf_r+0xdd4>
    f9a0:	movs	r6, #16
    f9a2:	ldr	r7, [sp, #24]
    f9a4:	ldr.w	fp, [sp, #20]
    f9a8:	b.n	f9b4 <_svfprintf_r+0xeac>
    f9aa:	add.w	r9, r9, #8
    f9ae:	subs	r5, #16
    f9b0:	cmp	r5, #16
    f9b2:	ble.n	f8dc <_svfprintf_r+0xdd4>
    f9b4:	adds	r3, #1
    f9b6:	adds	r4, #16
    f9b8:	cmp	r3, #7
    f9ba:	str	r4, [sp, #148]	; 0x94
    f9bc:	str	r3, [sp, #144]	; 0x90
    f9be:	str.w	sl, [r9]
    f9c2:	str.w	r6, [r9, #4]
    f9c6:	ble.n	f9aa <_svfprintf_r+0xea2>
    f9c8:	add	r2, sp, #140	; 0x8c
    f9ca:	mov	r1, fp
    f9cc:	mov	r0, r7
    f9ce:	bl	101ec <__ssprint_r>
    f9d2:	cmp	r0, #0
    f9d4:	bne.w	ecfc <_svfprintf_r+0x1f4>
    f9d8:	ldr	r4, [sp, #148]	; 0x94
    f9da:	ldr	r3, [sp, #144]	; 0x90
    f9dc:	add.w	r9, sp, #192	; 0xc0
    f9e0:	b.n	f9ae <_svfprintf_r+0xea6>
    f9e2:	ldr	r2, [sp, #144]	; 0x90
    f9e4:	ldr	r0, [sp, #72]	; 0x48
    f9e6:	ldr	r1, [sp, #76]	; 0x4c
    f9e8:	str.w	r1, [r9]
    f9ec:	adds	r2, #1
    f9ee:	add	r4, r0
    f9f0:	cmp	r2, #7
    f9f2:	str	r4, [sp, #148]	; 0x94
    f9f4:	str.w	r0, [r9, #4]
    f9f8:	str	r2, [sp, #144]	; 0x90
    f9fa:	bgt.w	ff66 <_svfprintf_r+0x145e>
    f9fe:	add.w	r9, r9, #8
    fa02:	b.n	f958 <_svfprintf_r+0xe50>
    fa04:	ldr	r3, [sp, #12]
    fa06:	lsls	r0, r3, #31
    fa08:	bmi.w	f5f0 <_svfprintf_r+0xae8>
    fa0c:	adds	r5, #1
    fa0e:	adds	r4, #1
    fa10:	movs	r3, #1
    fa12:	cmp	r5, #7
    fa14:	str	r4, [sp, #148]	; 0x94
    fa16:	str	r5, [sp, #144]	; 0x90
    fa18:	str.w	r6, [r9]
    fa1c:	str.w	r3, [r9, #4]
    fa20:	ble.w	f658 <_svfprintf_r+0xb50>
    fa24:	b.n	f842 <_svfprintf_r+0xd3a>
    fa26:	add	r2, sp, #140	; 0x8c
    fa28:	ldr	r1, [sp, #20]
    fa2a:	ldr	r0, [sp, #24]
    fa2c:	bl	101ec <__ssprint_r>
    fa30:	cmp	r0, #0
    fa32:	bne.w	ecfc <_svfprintf_r+0x1f4>
    fa36:	ldr	r4, [sp, #148]	; 0x94
    fa38:	ldr	r5, [sp, #144]	; 0x90
    fa3a:	add.w	r9, sp, #192	; 0xc0
    fa3e:	b.n	f60c <_svfprintf_r+0xb04>
    fa40:	add	r2, sp, #140	; 0x8c
    fa42:	ldr	r1, [sp, #20]
    fa44:	ldr	r0, [sp, #24]
    fa46:	bl	101ec <__ssprint_r>
    fa4a:	cmp	r0, #0
    fa4c:	bne.w	ecfc <_svfprintf_r+0x1f4>
    fa50:	ldr	r4, [sp, #148]	; 0x94
    fa52:	ldr	r5, [sp, #144]	; 0x90
    fa54:	add.w	r9, sp, #192	; 0xc0
    fa58:	b.n	f62a <_svfprintf_r+0xb22>
    fa5a:	add	r2, sp, #140	; 0x8c
    fa5c:	ldr	r1, [sp, #20]
    fa5e:	ldr	r0, [sp, #24]
    fa60:	bl	101ec <__ssprint_r>
    fa64:	cmp	r0, #0
    fa66:	bne.w	ecfc <_svfprintf_r+0x1f4>
    fa6a:	ldr	r4, [sp, #148]	; 0x94
    fa6c:	add.w	r9, sp, #192	; 0xc0
    fa70:	b.w	ef9c <_svfprintf_r+0x494>
    fa74:	ldr	r1, [sp, #12]
    fa76:	ands.w	r3, r1, #64	; 0x40
    fa7a:	beq.w	fbf0 <_svfprintf_r+0x10e8>
    fa7e:	ldr	r0, [sp, #40]	; 0x28
    fa80:	strb.w	r2, [sp, #111]	; 0x6f
    fa84:	mov	r3, r0
    fa86:	cmp.w	fp, #0
    fa8a:	add.w	r3, r3, #4
    fa8e:	ldrh	r4, [r0, #0]
    fa90:	mov.w	r5, #0
    fa94:	blt.w	fe18 <_svfprintf_r+0x1310>
    fa98:	bic.w	r1, r1, #128	; 0x80
    fa9c:	str	r1, [sp, #12]
    fa9e:	orrs.w	r1, r4, r5
    faa2:	str	r3, [sp, #40]	; 0x28
    faa4:	beq.w	f45c <_svfprintf_r+0x954>
    faa8:	mov	r7, r2
    faaa:	b.w	ed54 <_svfprintf_r+0x24c>
    faae:	ldr	r3, [sp, #12]
    fab0:	lsls	r7, r3, #27
    fab2:	bmi.n	facc <_svfprintf_r+0xfc4>
    fab4:	ldr	r3, [sp, #12]
    fab6:	lsls	r6, r3, #25
    fab8:	bpl.n	facc <_svfprintf_r+0xfc4>
    faba:	ldr	r2, [sp, #40]	; 0x28
    fabc:	ldr	r3, [r2, #0]
    fabe:	adds	r2, #4
    fac0:	str	r2, [sp, #40]	; 0x28
    fac2:	ldrh.w	r2, [sp, #28]
    fac6:	strh	r2, [r3, #0]
    fac8:	b.w	eb56 <_svfprintf_r+0x4e>
    facc:	ldr	r2, [sp, #40]	; 0x28
    face:	ldr	r3, [r2, #0]
    fad0:	adds	r2, #4
    fad2:	str	r2, [sp, #40]	; 0x28
    fad4:	ldr	r2, [sp, #28]
    fad6:	str	r2, [r3, #0]
    fad8:	b.w	eb56 <_svfprintf_r+0x4e>
    fadc:	ldrd	r0, r1, [sp, #64]	; 0x40
    fae0:	mov	r2, r0
    fae2:	mov	r3, r1
    fae4:	bl	b540 <__aeabi_dcmpun>
    fae8:	cmp	r0, #0
    faea:	bne.w	100e8 <_svfprintf_r+0x15e0>
    faee:	ldr	r3, [sp, #52]	; 0x34
    faf0:	cmp.w	fp, #4294967295
    faf4:	bic.w	r7, r3, #32
    faf8:	beq.w	ffca <_svfprintf_r+0x14c2>
    fafc:	cmp	r7, #71	; 0x47
    fafe:	beq.w	fe06 <_svfprintf_r+0x12fe>
    fb02:	ldr	r3, [sp, #68]	; 0x44
    fb04:	ldr	r2, [sp, #12]
    fb06:	cmp	r3, #0
    fb08:	orr.w	r2, r2, #256	; 0x100
    fb0c:	str	r2, [sp, #44]	; 0x2c
    fb0e:	blt.w	10002 <_svfprintf_r+0x14fa>
    fb12:	vldr	d7, [sp, #64]	; 0x40
    fb16:	vstr	d7, [sp, #96]	; 0x60
    fb1a:	movs	r3, #0
    fb1c:	str	r3, [sp, #16]
    fb1e:	ldr	r3, [sp, #52]	; 0x34
    fb20:	cmp	r3, #102	; 0x66
    fb22:	beq.w	ffd0 <_svfprintf_r+0x14c8>
    fb26:	cmp	r3, #70	; 0x46
    fb28:	beq.w	fdb6 <_svfprintf_r+0x12ae>
    fb2c:	cmp	r7, #69	; 0x45
    fb2e:	ite	eq
    fb30:	addeq.w	r5, fp, #1
    fb34:	movne	r5, fp
    fb36:	add	r2, sp, #132	; 0x84
    fb38:	add	r3, sp, #120	; 0x78
    fb3a:	str	r2, [sp, #4]
    fb3c:	str	r3, [sp, #0]
    fb3e:	mov	r2, r5
    fb40:	add	r3, sp, #116	; 0x74
    fb42:	movs	r1, #2
    fb44:	vldr	d0, [sp, #96]	; 0x60
    fb48:	ldr	r0, [sp, #24]
    fb4a:	bl	dcd0 <_dtoa_r>
    fb4e:	ldr	r3, [sp, #52]	; 0x34
    fb50:	cmp	r3, #103	; 0x67
    fb52:	mov	r6, r0
    fb54:	bne.w	1002e <_svfprintf_r+0x1526>
    fb58:	ldr	r3, [sp, #12]
    fb5a:	lsls	r2, r3, #31
    fb5c:	bpl.w	100d2 <_svfprintf_r+0x15ca>
    fb60:	adds	r4, r6, r5
    fb62:	movs	r2, #0
    fb64:	movs	r3, #0
    fb66:	ldrd	r0, r1, [sp, #96]	; 0x60
    fb6a:	bl	b4dc <__aeabi_dcmpeq>
    fb6e:	cmp	r0, #0
    fb70:	bne.w	fe8e <_svfprintf_r+0x1386>
    fb74:	ldr	r3, [sp, #132]	; 0x84
    fb76:	cmp	r4, r3
    fb78:	bls.n	fb88 <_svfprintf_r+0x1080>
    fb7a:	movs	r1, #48	; 0x30
    fb7c:	adds	r2, r3, #1
    fb7e:	str	r2, [sp, #132]	; 0x84
    fb80:	strb	r1, [r3, #0]
    fb82:	ldr	r3, [sp, #132]	; 0x84
    fb84:	cmp	r4, r3
    fb86:	bhi.n	fb7c <_svfprintf_r+0x1074>
    fb88:	subs	r3, r3, r6
    fb8a:	cmp	r7, #71	; 0x47
    fb8c:	str	r3, [sp, #56]	; 0x38
    fb8e:	beq.w	fe80 <_svfprintf_r+0x1378>
    fb92:	ldr	r3, [sp, #52]	; 0x34
    fb94:	cmp	r3, #101	; 0x65
    fb96:	ble.w	1004c <_svfprintf_r+0x1544>
    fb9a:	ldr	r3, [sp, #52]	; 0x34
    fb9c:	cmp	r3, #102	; 0x66
    fb9e:	ldr	r3, [sp, #116]	; 0x74
    fba0:	str	r3, [sp, #60]	; 0x3c
    fba2:	beq.w	10066 <_svfprintf_r+0x155e>
    fba6:	ldr	r2, [sp, #60]	; 0x3c
    fba8:	ldr	r1, [sp, #56]	; 0x38
    fbaa:	cmp	r2, r1
    fbac:	blt.w	10014 <_svfprintf_r+0x150c>
    fbb0:	ldr	r3, [sp, #12]
    fbb2:	lsls	r1, r3, #31
    fbb4:	bmi.w	100d6 <_svfprintf_r+0x15ce>
    fbb8:	bic.w	r3, r2, r2, asr #31
    fbbc:	str	r2, [sp, #36]	; 0x24
    fbbe:	movs	r2, #103	; 0x67
    fbc0:	str	r2, [sp, #52]	; 0x34
    fbc2:	ldr	r2, [sp, #16]
    fbc4:	cmp	r2, #0
    fbc6:	bne.w	fe28 <_svfprintf_r+0x1320>
    fbca:	str	r3, [sp, #16]
    fbcc:	ldr	r3, [sp, #44]	; 0x2c
    fbce:	str	r3, [sp, #12]
    fbd0:	mov	fp, r2
    fbd2:	ldrb.w	r7, [sp, #111]	; 0x6f
    fbd6:	b.w	eeac <_svfprintf_r+0x3a4>
    fbda:	bic.w	r7, r7, #7
    fbde:	vldr	d7, [r7]
    fbe2:	add.w	r3, r7, #8
    fbe6:	vstr	d7, [sp, #64]	; 0x40
    fbea:	str	r3, [sp, #40]	; 0x28
    fbec:	b.w	f104 <_svfprintf_r+0x5fc>
    fbf0:	ldr	r1, [sp, #40]	; 0x28
    fbf2:	strb.w	r3, [sp, #111]	; 0x6f
    fbf6:	cmp.w	fp, #0
    fbfa:	ldr	r4, [r1, #0]
    fbfc:	add.w	r7, r1, #4
    fc00:	mov.w	r5, #0
    fc04:	bge.w	fd60 <_svfprintf_r+0x1258>
    fc08:	str	r7, [sp, #40]	; 0x28
    fc0a:	movs	r7, #0
    fc0c:	b.w	ed54 <_svfprintf_r+0x24c>
    fc10:	ldr	r1, [sp, #12]
    fc12:	ands.w	r3, r1, #64	; 0x40
    fc16:	beq.w	f8b6 <_svfprintf_r+0xdae>
    fc1a:	ldr	r0, [sp, #40]	; 0x28
    fc1c:	strb.w	r2, [sp, #111]	; 0x6f
    fc20:	mov	r3, r0
    fc22:	cmp.w	fp, #0
    fc26:	add.w	r3, r3, #4
    fc2a:	ldrh	r4, [r0, #0]
    fc2c:	mov.w	r5, #0
    fc30:	blt.w	fe12 <_svfprintf_r+0x130a>
    fc34:	bic.w	r1, r1, #128	; 0x80
    fc38:	str	r1, [sp, #12]
    fc3a:	orrs.w	r1, r4, r5
    fc3e:	str	r3, [sp, #40]	; 0x28
    fc40:	mov	r7, r2
    fc42:	bne.w	ee64 <_svfprintf_r+0x35c>
    fc46:	b.w	f234 <_svfprintf_r+0x72c>
    fc4a:	ldr	r3, [sp, #12]
    fc4c:	ldr	r2, [sp, #40]	; 0x28
    fc4e:	tst.w	r3, #64	; 0x40
    fc52:	mov	r3, r2
    fc54:	beq.w	fe1c <_svfprintf_r+0x1314>
    fc58:	adds	r3, #4
    fc5a:	ldrh	r4, [r2, #0]
    fc5c:	str	r3, [sp, #40]	; 0x28
    fc5e:	movs	r5, #0
    fc60:	b.w	f26e <_svfprintf_r+0x766>
    fc64:	mov	r4, r2
    fc66:	adds	r3, #1
    fc68:	ldr	r2, [sp, #44]	; 0x2c
    fc6a:	str	r3, [sp, #144]	; 0x90
    fc6c:	add	r4, r5
    fc6e:	cmp	r3, #7
    fc70:	str	r4, [sp, #148]	; 0x94
    fc72:	stmia.w	r9, {r2, r5}
    fc76:	bgt.w	f92e <_svfprintf_r+0xe26>
    fc7a:	add.w	r9, r9, #8
    fc7e:	b.n	f944 <_svfprintf_r+0xe3c>
    fc80:	.word	0x0009e408
    fc84:	movs	r7, #0
    fc86:	cmp	fp, r7
    fc88:	strb.w	r7, [sp, #111]	; 0x6f
    fc8c:	blt.w	f480 <_svfprintf_r+0x978>
    fc90:	ldr	r3, [sp, #12]
    fc92:	bic.w	r3, r3, #128	; 0x80
    fc96:	str	r3, [sp, #12]
    fc98:	b.w	f41c <_svfprintf_r+0x914>
    fc9c:	add	r2, sp, #140	; 0x8c
    fc9e:	ldr	r1, [sp, #20]
    fca0:	ldr	r0, [sp, #24]
    fca2:	bl	101ec <__ssprint_r>
    fca6:	cmp	r0, #0
    fca8:	bne.w	ecfc <_svfprintf_r+0x1f4>
    fcac:	ldr	r4, [sp, #148]	; 0x94
    fcae:	add.w	r9, sp, #192	; 0xc0
    fcb2:	b.n	f4c4 <_svfprintf_r+0x9bc>
    fcb4:	ldr	r7, [sp, #40]	; 0x28
    fcb6:	b.w	f472 <_svfprintf_r+0x96a>
    fcba:	ldr	r3, [sp, #144]	; 0x90
    fcbc:	ldr	r2, [pc, #736]	; (ffa0 <_svfprintf_r+0x1498>)
    fcbe:	str.w	r2, [r9]
    fcc2:	adds	r3, #1
    fcc4:	adds	r4, #1
    fcc6:	movs	r2, #1
    fcc8:	cmp	r3, #7
    fcca:	str	r4, [sp, #148]	; 0x94
    fccc:	str	r3, [sp, #144]	; 0x90
    fcce:	str.w	r2, [r9, #4]
    fcd2:	bgt.w	fdec <_svfprintf_r+0x12e4>
    fcd6:	add.w	r9, r9, #8
    fcda:	cbnz	r5, fce8 <_svfprintf_r+0x11e0>
    fcdc:	ldr	r3, [sp, #56]	; 0x38
    fcde:	cbnz	r3, fce8 <_svfprintf_r+0x11e0>
    fce0:	ldr	r3, [sp, #12]
    fce2:	lsls	r7, r3, #31
    fce4:	bpl.w	f034 <_svfprintf_r+0x52c>
    fce8:	ldr	r3, [sp, #144]	; 0x90
    fcea:	ldr	r1, [sp, #72]	; 0x48
    fcec:	ldr	r2, [sp, #76]	; 0x4c
    fcee:	str.w	r2, [r9]
    fcf2:	adds	r3, #1
    fcf4:	add	r4, r1
    fcf6:	cmp	r3, #7
    fcf8:	str	r4, [sp, #148]	; 0x94
    fcfa:	str.w	r1, [r9, #4]
    fcfe:	str	r3, [sp, #144]	; 0x90
    fd00:	bgt.w	1009e <_svfprintf_r+0x1596>
    fd04:	add.w	r9, r9, #8
    fd08:	negs	r5, r5
    fd0a:	cmp	r5, #0
    fd0c:	ble.w	fe64 <_svfprintf_r+0x135c>
    fd10:	ldr	r2, [pc, #656]	; (ffa4 <_svfprintf_r+0x149c>)
    fd12:	str	r2, [sp, #44]	; 0x2c
    fd14:	cmp	r5, #16
    fd16:	ble.w	feac <_svfprintf_r+0x13a4>
    fd1a:	mov	r2, r4
    fd1c:	movs	r7, #16
    fd1e:	ldr.w	fp, [sp, #24]
    fd22:	ldr	r4, [sp, #20]
    fd24:	b.n	fd32 <_svfprintf_r+0x122a>
    fd26:	add.w	r9, r9, #8
    fd2a:	subs	r5, #16
    fd2c:	cmp	r5, #16
    fd2e:	ble.w	feaa <_svfprintf_r+0x13a2>
    fd32:	adds	r3, #1
    fd34:	adds	r2, #16
    fd36:	cmp	r3, #7
    fd38:	str	r2, [sp, #148]	; 0x94
    fd3a:	str	r3, [sp, #144]	; 0x90
    fd3c:	str.w	sl, [r9]
    fd40:	str.w	r7, [r9, #4]
    fd44:	ble.n	fd26 <_svfprintf_r+0x121e>
    fd46:	add	r2, sp, #140	; 0x8c
    fd48:	mov	r1, r4
    fd4a:	mov	r0, fp
    fd4c:	bl	101ec <__ssprint_r>
    fd50:	cmp	r0, #0
    fd52:	bne.w	ecfc <_svfprintf_r+0x1f4>
    fd56:	ldr	r2, [sp, #148]	; 0x94
    fd58:	ldr	r3, [sp, #144]	; 0x90
    fd5a:	add.w	r9, sp, #192	; 0xc0
    fd5e:	b.n	fd2a <_svfprintf_r+0x1222>
    fd60:	ldr	r2, [sp, #12]
    fd62:	b.w	f1d8 <_svfprintf_r+0x6d0>
    fd66:	ldr	r2, [sp, #12]
    fd68:	b.n	f882 <_svfprintf_r+0xd7a>
    fd6a:	ldr	r3, [sp, #12]
    fd6c:	orr.w	r3, r3, #32
    fd70:	str	r3, [sp, #12]
    fd72:	add.w	r8, r8, #1
    fd76:	ldrb.w	r3, [r8]
    fd7a:	b.w	ebbc <_svfprintf_r+0xb4>
    fd7e:	add	r2, sp, #140	; 0x8c
    fd80:	ldr	r1, [sp, #20]
    fd82:	ldr	r0, [sp, #24]
    fd84:	bl	101ec <__ssprint_r>
    fd88:	cmp	r0, #0
    fd8a:	bne.w	ecfc <_svfprintf_r+0x1f4>
    fd8e:	ldr	r4, [sp, #148]	; 0x94
    fd90:	add.w	r9, sp, #192	; 0xc0
    fd94:	b.w	f4f4 <_svfprintf_r+0x9ec>
    fd98:	movs	r1, #64	; 0x40
    fd9a:	ldr	r0, [sp, #24]
    fd9c:	bl	ba48 <_malloc_r>
    fda0:	ldr	r2, [sp, #20]
    fda2:	str	r0, [r2, #0]
    fda4:	str	r0, [r2, #16]
    fda6:	cmp	r0, #0
    fda8:	beq.w	10192 <_svfprintf_r+0x168a>
    fdac:	ldr	r2, [sp, #20]
    fdae:	movs	r3, #64	; 0x40
    fdb0:	str	r3, [r2, #20]
    fdb2:	b.w	eb36 <_svfprintf_r+0x2e>
    fdb6:	add	r2, sp, #132	; 0x84
    fdb8:	add	r3, sp, #120	; 0x78
    fdba:	str	r2, [sp, #4]
    fdbc:	str	r3, [sp, #0]
    fdbe:	mov	r2, fp
    fdc0:	add	r3, sp, #116	; 0x74
    fdc2:	movs	r1, #3
    fdc4:	vldr	d0, [sp, #96]	; 0x60
    fdc8:	ldr	r0, [sp, #24]
    fdca:	bl	dcd0 <_dtoa_r>
    fdce:	mov	r5, fp
    fdd0:	mov	r6, r0
    fdd2:	ldr	r3, [sp, #52]	; 0x34
    fdd4:	cmp	r3, #70	; 0x46
    fdd6:	add.w	r4, r6, r5
    fdda:	bne.w	fb62 <_svfprintf_r+0x105a>
    fdde:	ldrb	r3, [r6, #0]
    fde0:	cmp	r3, #48	; 0x30
    fde2:	beq.w	100f4 <_svfprintf_r+0x15ec>
    fde6:	ldr	r5, [sp, #116]	; 0x74
    fde8:	add	r4, r5
    fdea:	b.n	fb62 <_svfprintf_r+0x105a>
    fdec:	add	r2, sp, #140	; 0x8c
    fdee:	ldr	r1, [sp, #20]
    fdf0:	ldr	r0, [sp, #24]
    fdf2:	bl	101ec <__ssprint_r>
    fdf6:	cmp	r0, #0
    fdf8:	bne.w	ecfc <_svfprintf_r+0x1f4>
    fdfc:	ldr	r5, [sp, #116]	; 0x74
    fdfe:	ldr	r4, [sp, #148]	; 0x94
    fe00:	add.w	r9, sp, #192	; 0xc0
    fe04:	b.n	fcda <_svfprintf_r+0x11d2>
    fe06:	cmp.w	fp, #0
    fe0a:	it	eq
    fe0c:	moveq.w	fp, #1
    fe10:	b.n	fb02 <_svfprintf_r+0xffa>
    fe12:	str	r3, [sp, #40]	; 0x28
    fe14:	mov	r7, r2
    fe16:	b.n	f8d2 <_svfprintf_r+0xdca>
    fe18:	str	r3, [sp, #40]	; 0x28
    fe1a:	b.n	fc0a <_svfprintf_r+0x1102>
    fe1c:	adds	r3, #4
    fe1e:	ldr	r4, [r2, #0]
    fe20:	str	r3, [sp, #40]	; 0x28
    fe22:	movs	r5, #0
    fe24:	b.w	f26e <_svfprintf_r+0x766>
    fe28:	movs	r7, #45	; 0x2d
    fe2a:	str	r3, [sp, #16]
    fe2c:	ldr	r3, [sp, #44]	; 0x2c
    fe2e:	str	r3, [sp, #12]
    fe30:	strb.w	r7, [sp, #111]	; 0x6f
    fe34:	mov.w	fp, #0
    fe38:	b.w	eeae <_svfprintf_r+0x3a6>
    fe3c:	mov	r0, r6
    fe3e:	bl	ca40 <strlen>
    fe42:	mov	fp, r4
    fe44:	mov	r3, r0
    fe46:	str	r0, [sp, #36]	; 0x24
    fe48:	b.w	f390 <_svfprintf_r+0x888>
    fe4c:	add	r2, sp, #140	; 0x8c
    fe4e:	ldr	r1, [sp, #20]
    fe50:	ldr	r0, [sp, #24]
    fe52:	bl	101ec <__ssprint_r>
    fe56:	cmp	r0, #0
    fe58:	bne.w	ecfc <_svfprintf_r+0x1f4>
    fe5c:	ldr	r4, [sp, #148]	; 0x94
    fe5e:	ldr	r3, [sp, #144]	; 0x90
    fe60:	add.w	r9, sp, #192	; 0xc0
    fe64:	ldr	r1, [sp, #56]	; 0x38
    fe66:	str.w	r6, [r9]
    fe6a:	adds	r3, #1
    fe6c:	add	r4, r1
    fe6e:	cmp	r3, #7
    fe70:	str	r4, [sp, #148]	; 0x94
    fe72:	str	r3, [sp, #144]	; 0x90
    fe74:	str.w	r1, [r9, #4]
    fe78:	ble.w	f030 <_svfprintf_r+0x528>
    fe7c:	b.w	f676 <_svfprintf_r+0xb6e>
    fe80:	ldr	r3, [sp, #116]	; 0x74
    fe82:	adds	r5, r3, #3
    fe84:	blt.n	fec4 <_svfprintf_r+0x13bc>
    fe86:	cmp	fp, r3
    fe88:	blt.n	fec4 <_svfprintf_r+0x13bc>
    fe8a:	str	r3, [sp, #60]	; 0x3c
    fe8c:	b.n	fba6 <_svfprintf_r+0x109e>
    fe8e:	mov	r3, r4
    fe90:	b.n	fb88 <_svfprintf_r+0x1080>
    fe92:	add	r2, sp, #140	; 0x8c
    fe94:	ldr	r1, [sp, #20]
    fe96:	ldr	r0, [sp, #24]
    fe98:	bl	101ec <__ssprint_r>
    fe9c:	cmp	r0, #0
    fe9e:	bne.w	ecfc <_svfprintf_r+0x1f4>
    fea2:	ldr	r4, [sp, #148]	; 0x94
    fea4:	add.w	r9, sp, #192	; 0xc0
    fea8:	b.n	f744 <_svfprintf_r+0xc3c>
    feaa:	mov	r4, r2
    feac:	adds	r3, #1
    feae:	ldr	r2, [sp, #44]	; 0x2c
    feb0:	str	r3, [sp, #144]	; 0x90
    feb2:	add	r4, r5
    feb4:	cmp	r3, #7
    feb6:	str	r4, [sp, #148]	; 0x94
    feb8:	stmia.w	r9, {r2, r5}
    febc:	bgt.n	fe4c <_svfprintf_r+0x1344>
    febe:	add.w	r9, r9, #8
    fec2:	b.n	fe64 <_svfprintf_r+0x135c>
    fec4:	ldr	r2, [sp, #52]	; 0x34
    fec6:	subs	r2, #2
    fec8:	str	r2, [sp, #52]	; 0x34
    feca:	subs	r3, #1
    fecc:	cmp	r3, #0
    fece:	ldrb.w	r2, [sp, #52]	; 0x34
    fed2:	str	r3, [sp, #116]	; 0x74
    fed4:	it	lt
    fed6:	neglt	r3, r3
    fed8:	strb.w	r2, [sp, #124]	; 0x7c
    fedc:	ite	lt
    fede:	movlt	r2, #45	; 0x2d
    fee0:	movge	r2, #43	; 0x2b
    fee2:	cmp	r3, #9
    fee4:	strb.w	r2, [sp, #125]	; 0x7d
    fee8:	ble.w	100c2 <_svfprintf_r+0x15ba>
    feec:	add.w	r0, sp, #139	; 0x8b
    fef0:	mov	r4, r0
    fef2:	ldr	r2, [pc, #180]	; (ffa8 <_svfprintf_r+0x14a0>)
    fef4:	smull	r2, r1, r2, r3
    fef8:	asrs	r2, r3, #31
    fefa:	rsb	r2, r2, r1, asr #2
    fefe:	add.w	r1, r2, r2, lsl #2
    ff02:	sub.w	r3, r3, r1, lsl #1
    ff06:	add.w	r1, r3, #48	; 0x30
    ff0a:	cmp	r2, #9
    ff0c:	mov	r3, r2
    ff0e:	strb.w	r1, [r4, #-1]!
    ff12:	bgt.n	fef2 <_svfprintf_r+0x13ea>
    ff14:	mov	r1, r4
    ff16:	adds	r3, #48	; 0x30
    ff18:	uxtb	r2, r3
    ff1a:	strb.w	r2, [r1, #-1]!
    ff1e:	cmp	r0, r1
    ff20:	bls.w	1018c <_svfprintf_r+0x1684>
    ff24:	add.w	r1, sp, #126	; 0x7e
    ff28:	mov	r3, r4
    ff2a:	b.n	ff30 <_svfprintf_r+0x1428>
    ff2c:	ldrb.w	r2, [r3], #1
    ff30:	strb.w	r2, [r1], #1
    ff34:	cmp	r0, r3
    ff36:	bne.n	ff2c <_svfprintf_r+0x1424>
    ff38:	adds	r3, r0, #1
    ff3a:	subs	r3, r3, r4
    ff3c:	add.w	r2, sp, #126	; 0x7e
    ff40:	add	r3, r2
    ff42:	add	r2, sp, #124	; 0x7c
    ff44:	subs	r3, r3, r2
    ff46:	ldr	r2, [sp, #56]	; 0x38
    ff48:	str	r3, [sp, #84]	; 0x54
    ff4a:	cmp	r2, #1
    ff4c:	add	r3, r2
    ff4e:	str	r3, [sp, #36]	; 0x24
    ff50:	ble.w	10122 <_svfprintf_r+0x161a>
    ff54:	ldr	r3, [sp, #36]	; 0x24
    ff56:	ldr	r2, [sp, #72]	; 0x48
    ff58:	add	r3, r2
    ff5a:	movs	r2, #0
    ff5c:	str	r3, [sp, #36]	; 0x24
    ff5e:	str	r2, [sp, #60]	; 0x3c
    ff60:	bic.w	r3, r3, r3, asr #31
    ff64:	b.n	fbc2 <_svfprintf_r+0x10ba>
    ff66:	add	r2, sp, #140	; 0x8c
    ff68:	ldr	r1, [sp, #20]
    ff6a:	ldr	r0, [sp, #24]
    ff6c:	bl	101ec <__ssprint_r>
    ff70:	cmp	r0, #0
    ff72:	bne.w	ecfc <_svfprintf_r+0x1f4>
    ff76:	ldr	r3, [sp, #116]	; 0x74
    ff78:	ldr	r4, [sp, #148]	; 0x94
    ff7a:	add.w	r9, sp, #192	; 0xc0
    ff7e:	b.n	f958 <_svfprintf_r+0xe50>
    ff80:	add	r2, sp, #140	; 0x8c
    ff82:	ldr	r1, [sp, #20]
    ff84:	ldr	r0, [sp, #24]
    ff86:	bl	101ec <__ssprint_r>
    ff8a:	cmp	r0, #0
    ff8c:	bne.w	ecfc <_svfprintf_r+0x1f4>
    ff90:	ldr	r3, [sp, #116]	; 0x74
    ff92:	ldr	r2, [sp, #56]	; 0x38
    ff94:	ldr	r4, [sp, #148]	; 0x94
    ff96:	subs	r3, r2, r3
    ff98:	add.w	r9, sp, #192	; 0xc0
    ff9c:	b.n	f988 <_svfprintf_r+0xe80>
    ff9e:	nop
    ffa0:	.word	0x0009e404
    ffa4:	.word	0x0009e408
    ffa8:	.word	0x66666667
    ffac:	cmp	r5, #6
    ffae:	mov	r3, r5
    ffb0:	it	cs
    ffb2:	movcs	r3, #6
    ffb4:	str	r3, [sp, #36]	; 0x24
    ffb6:	bic.w	r3, r3, r3, asr #31
    ffba:	mov	fp, r6
    ffbc:	str	r7, [sp, #40]	; 0x28
    ffbe:	str	r6, [sp, #60]	; 0x3c
    ffc0:	mov	r7, r6
    ffc2:	str	r3, [sp, #16]
    ffc4:	ldr	r6, [pc, #536]	; (101e0 <_svfprintf_r+0x16d8>)
    ffc6:	b.w	eeac <_svfprintf_r+0x3a4>
    ffca:	mov.w	fp, #6
    ffce:	b.n	fb02 <_svfprintf_r+0xffa>
    ffd0:	add	r2, sp, #132	; 0x84
    ffd2:	add	r3, sp, #120	; 0x78
    ffd4:	str	r2, [sp, #4]
    ffd6:	str	r3, [sp, #0]
    ffd8:	mov	r2, fp
    ffda:	add	r3, sp, #116	; 0x74
    ffdc:	movs	r1, #3
    ffde:	vldr	d0, [sp, #96]	; 0x60
    ffe2:	ldr	r0, [sp, #24]
    ffe4:	bl	dcd0 <_dtoa_r>
    ffe8:	mov	r5, fp
    ffea:	mov	r6, r0
    ffec:	add.w	r4, r0, fp
    fff0:	b.n	fdde <_svfprintf_r+0x12d6>
    fff2:	movs	r7, #45	; 0x2d
    fff4:	strb.w	r7, [sp, #111]	; 0x6f
    fff8:	b.w	f152 <_svfprintf_r+0x64a>
    fffc:	str	r3, [sp, #12]
    fffe:	b.w	f2aa <_svfprintf_r+0x7a2>
   10002:	ldrd	r1, r2, [sp, #64]	; 0x40
   10006:	add.w	r3, r2, #2147483648	; 0x80000000
   1000a:	str	r3, [sp, #100]	; 0x64
   1000c:	movs	r3, #45	; 0x2d
   1000e:	str	r1, [sp, #96]	; 0x60
   10010:	str	r3, [sp, #16]
   10012:	b.n	fb1e <_svfprintf_r+0x1016>
   10014:	ldr	r2, [sp, #72]	; 0x48
   10016:	ldr	r3, [sp, #56]	; 0x38
   10018:	add	r3, r2
   1001a:	ldr	r2, [sp, #60]	; 0x3c
   1001c:	str	r3, [sp, #36]	; 0x24
   1001e:	cmp	r2, #0
   10020:	ble.w	10136 <_svfprintf_r+0x162e>
   10024:	movs	r2, #103	; 0x67
   10026:	bic.w	r3, r3, r3, asr #31
   1002a:	str	r2, [sp, #52]	; 0x34
   1002c:	b.n	fbc2 <_svfprintf_r+0x10ba>
   1002e:	ldr	r3, [sp, #52]	; 0x34
   10030:	cmp	r3, #71	; 0x47
   10032:	bne.w	fb60 <_svfprintf_r+0x1058>
   10036:	ldr	r3, [sp, #12]
   10038:	lsls	r3, r3, #31
   1003a:	bmi.w	fdd2 <_svfprintf_r+0x12ca>
   1003e:	ldr	r3, [sp, #132]	; 0x84
   10040:	cmp	r7, #71	; 0x47
   10042:	sub.w	r3, r3, r6
   10046:	str	r3, [sp, #56]	; 0x38
   10048:	beq.w	fe80 <_svfprintf_r+0x1378>
   1004c:	ldr	r3, [sp, #116]	; 0x74
   1004e:	b.n	feca <_svfprintf_r+0x13c2>
   10050:	bic.w	r3, r5, r5, asr #31
   10054:	str	r7, [sp, #40]	; 0x28
   10056:	str	r3, [sp, #16]
   10058:	str	r5, [sp, #36]	; 0x24
   1005a:	mov	fp, r0
   1005c:	str	r0, [sp, #60]	; 0x3c
   1005e:	ldrb.w	r7, [sp, #111]	; 0x6f
   10062:	b.w	eeac <_svfprintf_r+0x3a4>
   10066:	cmp	r3, #0
   10068:	ble.n	10146 <_svfprintf_r+0x163e>
   1006a:	cmp.w	fp, #0
   1006e:	bne.n	10110 <_svfprintf_r+0x1608>
   10070:	ldr	r2, [sp, #12]
   10072:	lsls	r4, r2, #31
   10074:	bmi.n	10110 <_svfprintf_r+0x1608>
   10076:	mov	r2, r3
   10078:	str	r2, [sp, #36]	; 0x24
   1007a:	bic.w	r3, r3, r3, asr #31
   1007e:	b.n	fbc2 <_svfprintf_r+0x10ba>
   10080:	ldr	r3, [sp, #12]
   10082:	lsls	r3, r3, #31
   10084:	mov	r7, fp
   10086:	bpl.n	10094 <_svfprintf_r+0x158c>
   10088:	add	r6, sp, #256	; 0x100
   1008a:	movs	r3, #48	; 0x30
   1008c:	strb.w	r3, [r6, #-65]!
   10090:	b.w	ee98 <_svfprintf_r+0x390>
   10094:	str.w	fp, [sp, #36]	; 0x24
   10098:	add	r6, sp, #192	; 0xc0
   1009a:	b.w	ee9e <_svfprintf_r+0x396>
   1009e:	add	r2, sp, #140	; 0x8c
   100a0:	ldr	r1, [sp, #20]
   100a2:	ldr	r0, [sp, #24]
   100a4:	bl	101ec <__ssprint_r>
   100a8:	cmp	r0, #0
   100aa:	bne.w	ecfc <_svfprintf_r+0x1f4>
   100ae:	ldr	r5, [sp, #116]	; 0x74
   100b0:	ldr	r4, [sp, #148]	; 0x94
   100b2:	ldr	r3, [sp, #144]	; 0x90
   100b4:	add.w	r9, sp, #192	; 0xc0
   100b8:	b.n	fd08 <_svfprintf_r+0x1200>
   100ba:	mov	r8, r4
   100bc:	movs	r5, #0
   100be:	b.w	ebc0 <_svfprintf_r+0xb8>
   100c2:	adds	r3, #48	; 0x30
   100c4:	movs	r2, #48	; 0x30
   100c6:	strb.w	r3, [sp, #127]	; 0x7f
   100ca:	strb.w	r2, [sp, #126]	; 0x7e
   100ce:	add	r3, sp, #128	; 0x80
   100d0:	b.n	ff42 <_svfprintf_r+0x143a>
   100d2:	ldr	r3, [sp, #132]	; 0x84
   100d4:	b.n	fb88 <_svfprintf_r+0x1080>
   100d6:	ldr	r2, [sp, #72]	; 0x48
   100d8:	ldr	r3, [sp, #60]	; 0x3c
   100da:	add	r3, r2
   100dc:	movs	r2, #103	; 0x67
   100de:	str	r3, [sp, #36]	; 0x24
   100e0:	str	r2, [sp, #52]	; 0x34
   100e2:	bic.w	r3, r3, r3, asr #31
   100e6:	b.n	fbc2 <_svfprintf_r+0x10ba>
   100e8:	ldr	r6, [pc, #248]	; (101e4 <_svfprintf_r+0x16dc>)
   100ea:	ldr	r3, [pc, #252]	; (101e8 <_svfprintf_r+0x16e0>)
   100ec:	ldrb.w	r7, [sp, #111]	; 0x6f
   100f0:	b.w	f156 <_svfprintf_r+0x64e>
   100f4:	movs	r2, #0
   100f6:	movs	r3, #0
   100f8:	ldrd	r0, r1, [sp, #96]	; 0x60
   100fc:	bl	b4dc <__aeabi_dcmpeq>
   10100:	cmp	r0, #0
   10102:	bne.w	fde6 <_svfprintf_r+0x12de>
   10106:	rsb	r5, r5, #1
   1010a:	str	r5, [sp, #116]	; 0x74
   1010c:	add	r4, r5
   1010e:	b.n	fb62 <_svfprintf_r+0x105a>
   10110:	ldr	r3, [sp, #60]	; 0x3c
   10112:	ldr	r2, [sp, #72]	; 0x48
   10114:	adds	r5, r3, r2
   10116:	add.w	r3, r5, fp
   1011a:	str	r3, [sp, #36]	; 0x24
   1011c:	bic.w	r3, r3, r3, asr #31
   10120:	b.n	fbc2 <_svfprintf_r+0x10ba>
   10122:	ldr	r3, [sp, #12]
   10124:	ands.w	r3, r3, #1
   10128:	bne.w	ff54 <_svfprintf_r+0x144c>
   1012c:	str	r3, [sp, #60]	; 0x3c
   1012e:	ldr	r3, [sp, #36]	; 0x24
   10130:	bic.w	r3, r3, r3, asr #31
   10134:	b.n	fbc2 <_svfprintf_r+0x10ba>
   10136:	ldr	r3, [sp, #60]	; 0x3c
   10138:	ldr	r2, [sp, #36]	; 0x24
   1013a:	rsb	r3, r3, #1
   1013e:	add	r2, r3
   10140:	mov	r3, r2
   10142:	str	r2, [sp, #36]	; 0x24
   10144:	b.n	10024 <_svfprintf_r+0x151c>
   10146:	cmp.w	fp, #0
   1014a:	bne.n	10152 <_svfprintf_r+0x164a>
   1014c:	ldr	r3, [sp, #12]
   1014e:	lsls	r0, r3, #31
   10150:	bpl.n	10162 <_svfprintf_r+0x165a>
   10152:	ldr	r3, [sp, #72]	; 0x48
   10154:	adds	r5, r3, #1
   10156:	add.w	r3, r5, fp
   1015a:	str	r3, [sp, #36]	; 0x24
   1015c:	bic.w	r3, r3, r3, asr #31
   10160:	b.n	fbc2 <_svfprintf_r+0x10ba>
   10162:	movs	r3, #1
   10164:	str	r3, [sp, #36]	; 0x24
   10166:	b.n	fbc2 <_svfprintf_r+0x10ba>
   10168:	ldr	r0, [sp, #40]	; 0x28
   1016a:	ldrb.w	r3, [r8, #1]
   1016e:	ldr	r5, [r0, #0]
   10170:	adds	r0, #4
   10172:	cmp	r5, #0
   10174:	str	r0, [sp, #40]	; 0x28
   10176:	mov	r8, r4
   10178:	bge.w	ebbc <_svfprintf_r+0xb4>
   1017c:	mov.w	r5, #4294967295
   10180:	b.w	ebbc <_svfprintf_r+0xb4>
   10184:	strb.w	r1, [sp, #111]	; 0x6f
   10188:	b.w	ed1e <_svfprintf_r+0x216>
   1018c:	add.w	r3, sp, #126	; 0x7e
   10190:	b.n	ff42 <_svfprintf_r+0x143a>
   10192:	ldr	r2, [sp, #24]
   10194:	movs	r3, #12
   10196:	str	r3, [r2, #0]
   10198:	mov.w	r0, #4294967295
   1019c:	b.w	ed0e <_svfprintf_r+0x206>
   101a0:	strb.w	r1, [sp, #111]	; 0x6f
   101a4:	b.w	ee18 <_svfprintf_r+0x310>
   101a8:	strb.w	r1, [sp, #111]	; 0x6f
   101ac:	b.w	f0e4 <_svfprintf_r+0x5dc>
   101b0:	strb.w	r1, [sp, #111]	; 0x6f
   101b4:	b.w	f252 <_svfprintf_r+0x74a>
   101b8:	strb.w	r1, [sp, #111]	; 0x6f
   101bc:	b.w	f1f6 <_svfprintf_r+0x6ee>
   101c0:	strb.w	r1, [sp, #111]	; 0x6f
   101c4:	b.w	f1a2 <_svfprintf_r+0x69a>
   101c8:	strb.w	r1, [sp, #111]	; 0x6f
   101cc:	b.w	f43a <_svfprintf_r+0x932>
   101d0:	strb.w	r1, [sp, #111]	; 0x6f
   101d4:	b.w	f3f8 <_svfprintf_r+0x8f0>
   101d8:	strb.w	r1, [sp, #111]	; 0x6f
   101dc:	b.w	f3bc <_svfprintf_r+0x8b4>
   101e0:	.word	0x0009e450
   101e4:	.word	0x0009e424
   101e8:	.word	0x0009e420

000101ec <__ssprint_r>:
   101ec:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   101f0:	ldr	r3, [r2, #8]
   101f2:	sub	sp, #12
   101f4:	mov	r8, r2
   101f6:	cmp	r3, #0
   101f8:	beq.n	102e0 <__ssprint_r+0xf4>
   101fa:	mov	fp, r0
   101fc:	mov.w	r9, #0
   10200:	ldr	r6, [r2, #0]
   10202:	ldr	r0, [r1, #0]
   10204:	ldr	r3, [r1, #8]
   10206:	mov	r5, r1
   10208:	mov	r4, r9
   1020a:	cmp	r4, #0
   1020c:	beq.n	1029a <__ssprint_r+0xae>
   1020e:	cmp	r4, r3
   10210:	mov	r7, r3
   10212:	mov	sl, r3
   10214:	bcc.n	102a4 <__ssprint_r+0xb8>
   10216:	ldrh	r3, [r5, #12]
   10218:	tst.w	r3, #1152	; 0x480
   1021c:	beq.n	1027a <__ssprint_r+0x8e>
   1021e:	ldr	r7, [r5, #20]
   10220:	ldr	r1, [r5, #16]
   10222:	add.w	r7, r7, r7, lsl #1
   10226:	rsb	sl, r1, r0
   1022a:	add.w	r7, r7, r7, lsr #31
   1022e:	adds	r0, r4, #1
   10230:	asrs	r7, r7, #1
   10232:	add	r0, sl
   10234:	cmp	r0, r7
   10236:	mov	r2, r7
   10238:	itt	hi
   1023a:	movhi	r7, r0
   1023c:	movhi	r2, r7
   1023e:	lsls	r3, r3, #21
   10240:	bpl.n	102aa <__ssprint_r+0xbe>
   10242:	mov	r1, r2
   10244:	mov	r0, fp
   10246:	bl	ba48 <_malloc_r>
   1024a:	cmp	r0, #0
   1024c:	beq.n	102be <__ssprint_r+0xd2>
   1024e:	mov	r2, sl
   10250:	ldr	r1, [r5, #16]
   10252:	str	r0, [sp, #4]
   10254:	bl	6f10 <memcpy>
   10258:	ldrh	r2, [r5, #12]
   1025a:	ldr	r3, [sp, #4]
   1025c:	bic.w	r2, r2, #1152	; 0x480
   10260:	orr.w	r2, r2, #128	; 0x80
   10264:	strh	r2, [r5, #12]
   10266:	rsb	r2, sl, r7
   1026a:	add.w	r0, r3, sl
   1026e:	str	r7, [r5, #20]
   10270:	str	r3, [r5, #16]
   10272:	str	r0, [r5, #0]
   10274:	str	r2, [r5, #8]
   10276:	mov	r7, r4
   10278:	mov	sl, r4
   1027a:	mov	r2, sl
   1027c:	mov	r1, r9
   1027e:	bl	c048 <memmove>
   10282:	ldr.w	r2, [r8, #8]
   10286:	ldr	r3, [r5, #8]
   10288:	ldr	r0, [r5, #0]
   1028a:	subs	r3, r3, r7
   1028c:	add	r0, sl
   1028e:	subs	r4, r2, r4
   10290:	str	r3, [r5, #8]
   10292:	str	r0, [r5, #0]
   10294:	str.w	r4, [r8, #8]
   10298:	cbz	r4, 102e0 <__ssprint_r+0xf4>
   1029a:	ldr.w	r9, [r6]
   1029e:	ldr	r4, [r6, #4]
   102a0:	adds	r6, #8
   102a2:	b.n	1020a <__ssprint_r+0x1e>
   102a4:	mov	r7, r4
   102a6:	mov	sl, r4
   102a8:	b.n	1027a <__ssprint_r+0x8e>
   102aa:	mov	r0, fp
   102ac:	bl	c1c4 <_realloc_r>
   102b0:	mov	r3, r0
   102b2:	cmp	r0, #0
   102b4:	bne.n	10266 <__ssprint_r+0x7a>
   102b6:	ldr	r1, [r5, #16]
   102b8:	mov	r0, fp
   102ba:	bl	d290 <_free_r>
   102be:	movs	r3, #12
   102c0:	str.w	r3, [fp]
   102c4:	ldrh	r3, [r5, #12]
   102c6:	movs	r2, #0
   102c8:	orr.w	r3, r3, #64	; 0x40
   102cc:	mov.w	r0, #4294967295
   102d0:	strh	r3, [r5, #12]
   102d2:	str.w	r2, [r8, #8]
   102d6:	str.w	r2, [r8, #4]
   102da:	add	sp, #12
   102dc:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   102e0:	movs	r0, #0
   102e2:	str.w	r0, [r8, #4]
   102e6:	add	sp, #12
   102e8:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

000102ec <__aeabi_uldivmod>:
   102ec:	cbnz	r3, 10304 <__aeabi_uldivmod+0x18>
   102ee:	cbnz	r2, 10304 <__aeabi_uldivmod+0x18>
   102f0:	cmp	r1, #0
   102f2:	it	eq
   102f4:	cmpeq	r0, #0
   102f6:	itt	ne
   102f8:	movne.w	r1, #4294967295
   102fc:	movne.w	r0, #4294967295
   10300:	b.w	b940 <__aeabi_idiv0>
   10304:	sub.w	ip, sp, #8
   10308:	strd	ip, lr, [sp, #-16]!
   1030c:	bl	b65c <__udivmoddi4>
   10310:	ldr.w	lr, [sp, #4]
   10314:	ldrd	r2, r3, [sp, #8]
   10318:	add	sp, #16
   1031a:	bx	lr

0001031c <vtable for AudioStream>:
	...
   10324:	.v..

00010328 <nylonstrgtr>:
   10328:	....X....<..

00010334 <piano_ranges>:
   10334:	6JX.

00010338 <vibraphone>:
   10338:	....T....M..Cont
   10348:	rol Change, ch=.
   10358:	, control=.., va
   10368:	lue=....CPU:%03i
   10378:	 voices:%02i CPU
   10388:	/Voice:%02i evic
   10398:	t:%02i.. %02hhu 
   103a8:	%-2s....OVERFLOW
   103b8:	........Q...SYNT
   103c8:	H VERSION 1.1 BY
   103d8:	 FREDRIK LARSSON
   103e8:	....HelloWorld..
   103f8:	Hello to you to 
   10408:	:)..Incorrect co
   10418:	mmand...OK..C...
   10428:	C#..D...D#..E...
   10438:	F...F#..G...G#..
   10448:	A...A#..B...

00010454 <vibraphone_ranges>:
   10454:	^...

00010458 <nylonstrgtr_ranges>:
   10458:	8M..

0001045c <standard_DRUMS>:
   1045c:	0...t....&..

00010468 <piano>:
   10468:	....4.......

00010474 <standard_DRUMS_ranges>:
   10474:	......!"#$%'*-/0
   10484:	256789:<=>?ACDEG
   10494:	HIJLNPQRSSTUUVW.

000104a4 <sample_21_standard_DRUMS_crash5>:
   104a4:	........U.......
   104b4:	......<.<...1.T.
   104c4:	A.....5.......;.
   104d4:	......g.o...F...
   104e4:	W._.....k.......
   104f4:	e.6.)...........
   10504:	J.5.f.....+.....
   10514:	[.6...p.!.$.....
   10524:	B.........".....
   10534:	................
   10544:	l...k.|.......& 
   10554:	3...;.7...O.....
   10564:	..:...l.........
   10574:	..(.....9.....6.
   10584:	E.......R.B...o.
   10594:	F...<...V.^.....
   105a4:	......C.....4.5!
   105b4:	.!2.7$|.O.>$4.m.
   105c4:	..F...u.-.h.].E.
   105d4:	-.....2...-...k.
   105e4:	t.....;(..}<M...
   105f4:	......U...d.....
   10604:	..[.p.........b.
   10614:	,.T!..]Bg../....
   10624:	......*.y.......
   10634:	&.....T...].....
   10644:	x.w.....*.......
   10654:	&.H."*#.........
   10664:	..w.......y.....
   10674:	.,%&............
   10684:	..=.....0.{.....
   10694:	[.T........!..$#
   106a4:	..j.*1.../......
   106b4:	p...Y...........
   106c4:	....t...........
   106d4:	..!....".;.#.9n.
   106e4:	........^.v...9.
   106f4:	 .*.X.n.........
   10704:	......9..A...#X6
   10714:	.&.!i...........
   10724:	."..0....1....G.
   10734:	....{.7.=...E.,.
   10744:	1.......H.4?v.X.
   10754:	M.....g.....e...
   10764:	..o...~...).6$..
   10774:	.9o....*].....f.
   10784:	..i._.P.K.....r.
   10794:	U.........Z.=9..
   107a4:	<"".z...9.......
   107b4:	}.....y.i...f...
   107c4:	...&............
   107d4:	.D...!..Y.3.).".
   107e4:	c.F...l.....[.|.
   107f4:	..0...V.......2.
   10804:	."=..#j....-3...
   10814:	V........'+...g.
   10824:	......aG..;..#A.
   10834:	>"..........F...
   10844:	..m.........IK..
   10854:	..0.N...;...B...
   10864:	[.....?.z..*[..:
   10874:	Q.......9...s.W.
   10884:	x"..c.K.....~../
   10894:	..51...Y..&..(j.
   108a4:	....`........9U.
   108b4:	.4....r.)..'..E.
   108c4:	\...|.T...v...].
   108d4:	..%X..V./.....v.
   108e4:	....*.T.?].....+
   108f4:	........*.......
   10904:	g.#..4......K*..
   10914:	......2...^.....
   10924:	f.p5.....'].....
   10934:	.........)."J.n.
   10944:	@.I.......I....&
   10954:	....v.......t...
   10964:	;...="..>.B...q.
   10974:	..3..! ...V8....
   10984:	I..%....X.......
   10994:	)%t.....n.. ..;.
   109a4:	K./.;.I.7.n....E
   109b4:	*.=.YKw..S..y..*
   109c4:	....n...........
   109d4:	....AO..C.[.....
   109e4:	@.z.T(...../....
   109f4:	m(..q...W..'P...
   10a04:	u.....q.Q.......
   10a14:	.......3E.......
   10a24:	7=..v.....7.i.`.
   10a34:	....%......%..[.
   10a44:	;.....2NY...{.E.
   10a54:	......8...G.....
   10a64:	.......8m.Z...i.
   10a74:	L.C"l.."x.....c.
   10a84:	....,.&..P..1.8.
   10a94:	..Q,..W.........
   10aa4:	6%C.@2..v.).....
   10ab4:	.<..q,....c...`%
   10ac4:	.....0...;....|.
   10ad4:	......K.......#.
   10ae4:	....b.......]...
   10af4:	I.C....<0.Q/....
   10b04:	r%..~.B.O.P.!>..
   10b14:	....&...P....5..
   10b24:	./......[2..l.0.
   10b34:	..^......:..#...
   10b44:	.*....w.....+.2.
   10b54:	U.Y.o6k.v...H.< 
   10b64:	..m..........1..
   10b74:	B.H..C..! ...>K.
   10b84:	...........-..f.
   10b94:	.4..~Z...I!.D...
   10ba4:	.0..%.M.L0i.D...
   10bb4:	u.33k..I....I..(
   10bc4:	...C..%(;.....y.
   10bd4:	X.$...G.....v...
   10be4:	...!Y!h.......\.
   10bf4:	R...;...C...I...
   10c04:	F.T.q8$..Wp.....
   10c14:	....+......5....
   10c24:	:.6.m&@....A..y(
   10c34:	....\>r.....".P.
   10c44:	G....)..S....%".
   10c54:	"."...Z.......?.
   10c64:	..^....YN..Z..=.
   10c74:	..-.z....,7.....
   10c84:	..........:.Y5..
   10c94:	..].d>...&...%..
   10ca4:	..'.l.d......@..
   10cb4:	Z..6......9...`.
   10cc4:	..3.;...|.......
   10cd4:	.$..YY..1.n.z...
   10ce4:	.....5..2..N....
   10cf4:	......H...Q.W...
   10d04:	i.....(.M...(8..
   10d14:	,2.....V..j.....
   10d24:	.?W.....'......O
   10d34:	...57........3..
   10d44:	Q.+...12....E&..
   10d54:	+...........v?/.
   10d64:	..!?J.$.....OT..
   10d74:	.;.......&..'...
   10d84:	....=...{.......
   10d94:	.G...!... Y.....
   10da4:	...._2....n2`...
   10db4:	 .J-..Q...t.#...
   10dc4:	].z.z..3_.z..%n.
   10dd4:	.......N%.8...fB
   10de4:	..........*.....
   10df4:	q....6.... .....
   10e04:	H....8.._.h..,..
   10e14:	#....B..b7....!.
   10e24:	z.....h....!..T`
   10e34:	..6X..{..8M.....
   10e44:	....?.B@........
   10e54:	.-$..\u.0......#
   10e64:	.._..$.9...p....
   10e74:	W"..z7....t.i...
   10e84:	k-.....7$..;M...
   10e94:	.M+.....o...^...
   10ea4:	........j)..c.[T
   10eb4:	M.......-.r ....
   10ec4:	P.I...N.;T.....1
   10ed4:	...........3....
   10ee4:	F.............0.
   10ef4:	w...H.1...?.b...
   10f04:	.......0u.......
   10f14:	.... ..W;...^...
   10f24:	&'..`.....+.....
   10f34:	..Q....6b..N..=.
   10f44:	p..>..........e.
   10f54:	...%T.L...b..5.'
   10f64:	..s.L....$k.Wj..
   10f74:	.B ..,l..7..>..>
   10f84:	.!N.1.4...QL..0B
   10f94:	P.^..r...i.. .m.
   10fa4:	/.u............@
   10fb4:	A.Y2...5..2...:.
   10fc4:	(.....h>....#.W.
   10fd4:	......F..%A.....
   10fe4:	.<....k..:,..0v.
   10ff4:	..........e..,..
   11004:	..c.C$r.7.[.....
   11014:	....:A..........
   11024:	..~...*.........
   11034:	...".....Yf... .
   11044:	....3)<./L....;9
   11054:	..GU'..,....Y...
   11064:	q.......e....3i.
   11074:	Pk6..5-..Z0.!1..
   11084:	,>Y.f..Q..:.(..4
   11094:	e...L...... `.8%
   110a4:	^..K........F...
   110b4:	..}...^%........
   110c4:	r.;..Y..X.....uM
   110d4:	L....`>.V.2....3
   110e4:	l.....!..,X.}...
   110f4:	b*).9.....Q.c..!
   11104:	..8?K..$...#....
   11114:	....h>.....6....
   11124:	.-....<0...?..#.
   11134:	.......i..;..*..
   11144:	+5p.....v...2...
   11154:	.'.......'..j...
   11164:	l.~..KZ......r;.
   11174:	...,... +..$A.W.
   11184:	.....&....?....4
   11194:	....*Bt..(..a...
   111a4:	.2......D.....9.
   111b4:	:.v;g..86.d.....
   111c4:	<..'.........G..
   111d4:	..<.s.o4....[$..
   111e4:	..^.........; ..
   111f4:	......MCi...Y...
   11204:	.4......;).%....
   11214:	..U$.....@..[...
   11224:	....9%......+".'
   11234:	P......-.....J..
   11244:	.....M,.7.....6,
   11254:	...!?.H....E..%.
   11264:	..)...z.R&...Q..
   11274:	.r..E<=...n9..i.
   11284:	..}.).d0..-.....
   11294:	;...".tl$...K...
   112a4:	A#..TE...-\..r..
   112b4:	4>..............
   112c4:	>....4.....-..2-
   112d4:	...AW.k.o.k....?
   112e4:	".....D'......a.
   112f4:	.1...&..h.YA....
   11304:	...=&..1...1....
   11314:	....d4g.....Y1..
   11324:	.!c..D....'+....
   11334:	..).z..!....<. .
   11344:	....?......4....
   11354:	.d......|A].Q"..
   11364:	]..J.....6...r..
   11374:	.h..........6...
   11384:	9..7c..K=..Ds...
   11394:	.GL..N........P.
   113a4:	 .............Q.
   113b4:	!.w1....,*......
   113c4:	.F....k........2
   113d4:	p.I...:.n...EH..
   113e4:	...-L..7...g...&
   113f4:	r.............e!
   11404:	..K)...".):..U..
   11414:	8_0.r....1......
   11424:	....z....1i.....
   11434:	......O.....L..:
   11444:	....v.W..."....E
   11454:	:..&..z(o.6.Y...
   11464:	.9..s.<.4.......
   11474:	.CB...c....G(...
   11484:	f...........\1S.
   11494:	E0...&....W.d.o.
   114a4:	........V.,....C
   114b4:	......I?......V.
   114c4:	.$G..3;.b.r.S!;.
   114d4:	...H6.Q..@......
   114e4:	%.6.....\,...r..
   114f4:	#P1..rI...'&....
   11504:	..{.G..Fw...B...
   11514:	a6..\..>.......0
   11524:	Q.......G ......
   11534:	.A.........A....
   11544:	..T..r`...8..&..
   11554:	..............7.
   11564:	....t.J07.|...93
   11574:	.. ...-..._.....
   11584:	.$ ...C.."....L.
   11594:	...M............
   115a4:	8.m...E!.....]].
   115b4:	.0=..T.......#..
   115c4:	x$....E..#c.~...
   115d4:	Z p........'#...
   115e4:	.....#)...Y..r..
   115f4:	.AQ.....}...c>@.
   11604:	......j.....r..C
   11614:	...g...<....#.I.
   11624:	..u.Y........r..
   11634:	wA......6K......
   11644:	q..2..C(-......I
   11654:	..u..$r.....f...
   11664:	1...............
   11674:	.../..a._.......
   11684:	:..If.+.d1m.....
   11694:	Y.b.T!..1...0.Z.
   116a4:	....JE@...h+....
   116b4:	L.U.D.........o.
   116c4:	..."..h9>...%.r.
   116d4:	..U...8.+..H..q.
   116e4:	../9....~.+..'..
   116f4:	p.8#..}...`...l.
   11704:	/...N...........
   11714:	....n..@........
   11724:	Y........A......
   11734:	...>E.>.(..+..h.
   11744:	..)"....`... ...
   11754:	<.~.....+.....].
   11764:	......m8a.r...E.
   11774:	.=...3...,..N..A
   11784:	n....%... ... ..
   11794:	...R..+9_..\..N.
   117a4:	0.S...i.........
   117b4:	.F`...?...o.W.y.
   117c4:	..h.U.?I...53.I;
   117d4:	........u.T.. ..
   117e4:	x.h0......v..U..
   117f4:	v..E0..9...-l.3.
   11804:	i..-P.;D...4Z.K.
   11814:	.K..G.)...Q...R.
   11824:	.60....!....J...
   11834:	.5..E*..r)....-.
   11844:	k.2...,.r.A. _\.
   11854:	........$....7..
   11864:	..5.......@...A.
   11874:	.Bq...... >.J...
   11884:	.+....d.07....S>
   11894:	....8.........V.
   118a4:	................
   118b4:	-.-%M.......GIV.
   118c4:	E.l.....0...K.Z.
   118d4:	...........#....
   118e4:	*;..u......#...)
   118f4:	m.........$.S...
   11904:	....v&..@.?....D
   11914:	...R..j,....p.a=
   11924:	......n.y3}.Y.1.
   11934:	.,...#..Z..-....
   11944:	."..'.h....K..#.
   11954:	|!]7q.).....1...
   11964:	...."...J.y...K3
   11974:	..G.u..D....m.11
   11984:	..G./.#.....:...
   11994:	M.....:@u...<...
   119a4:	...1.......E..3.
   119b4:	..q._T......}...
   119c4:	N9..p.:.SNt.....
   119d4:	.*....F8..*.h..)
   119e4:	..,.....9O..;...
   119f4:	.;...&{.........
   11a04:	.....'m.1..e}...
   11a14:	z..&_...U.....z.
   11a24:	..-.e.O.O...@...
   11a34:	.........-..<.W.
   11a44:	.9..y.}.k...\...
   11a54:	....h..9e.v+.&).
   11a64:	B.@.hH..Q._.5,..
   11a74:	.....F..k.-.2...
   11a84:	./^...R..H......
   11a94:	 .t...m"......x.
   11aa4:	[C.. ..._,..c]$.
   11ab4:	d%...'........F.
   11ac4:	V.,.:...s...4C..
   11ad4:	.....6.....)"...
   11ae4:	....3.U.<V_.....
   11af4:	E..].....8].....
   11b04:	..W.q...<F..t1.:
   11b14:	J......(..D.2-..
   11b24:	..Y.,.e.O.YAT...
   11b34:	V'....l.@.....D.
   11b44:	...;F.p.|f&.X...
   11b54:	....\.{.@.....} 
   11b64:	..P...`.E.3..=M.
   11b74:	.*5....G..t.)...
   11b84:	....H.:.....$%..
   11b94:	...-T.z...*.* ..
   11ba4:	.2x.[.....u.....
   11bb4:	Z...o.D.x.......
   11bc4:	..,.=..0(...W...
   11bd4:	P...... ..X.....
   11be4:	.... .n......;..
   11bf4:	...:x.r.w...m#..
   11c04:	7.........139.Z.
   11c14:	c.I3..\..*?.....
   11c24:	S%........s,....
   11c34:	..%.Y. ........)
   11c44:	....g.k().*.Fm..
   11c54:	.......%....."T.
   11c64:	N.y$4.5.........
   11c74:	}4......}.......
   11c84:	.....Nb..@....].
   11c94:	..n.........b...
   11ca4:	.......2........
   11cb4:	X.o.../......7/.
   11cc4:	$.. o.....*J%...
   11cd4:	....V.s.=...."..
   11ce4:	8.q..........M..
   11cf4:	....u.....z...c.
   11d04:	....q....U..i-..
   11d14:	.*..............
   11d24:	*...j.G.../<../^
   11d34:	)..8Y @.l.....!.
   11d44:	..$...DC[..7...%
   11d54:	....)....%]...r.
   11d64:	U.,...t.G..!....
   11d74:	,..2@.[...,.i...
   11d84:	..........#.uJ..
   11d94:	..>9:.....S..&H.
   11da4:	.)..H...#.}-f...
   11db4:	U.....n...i.....
   11dc4:	...'...2...CT...
   11dd4:	P]...q.../!.....
   11de4:	t......6...HI..Q
   11df4:	C.D.w..+..).O'..
   11e04:	k%*.....A->.E!P.
   11e14:	g...../<....o...
   11e24:	......7.}."..@..
   11e34:	5an..%7.*!..V...
   11e44:	..N7\.Db.....2:.
   11e54:	.....=......(...
   11e64:	h...1...j.W.....
   11e74:	[JI........:f...
   11e84:	,.A.-...b8z..&..
   11e94:	A.....O.C.$.6(..
   11ea4:	....?.I#....6...
   11eb4:	SHU./...p...7.*.
   11ec4:	.......,....(.o.
   11ed4:	y&|..#..i.....g.
   11ee4:	{........(k....!
   11ef4:	..t....7..G.9...
   11f04:	........F...9.".
   11f14:	...8............
   11f24:	..W.....D.D....$
   11f34:	.....&(..&o.....
   11f44:	..0../l...)...\.
   11f54:	t....4..(...x.nA
   11f64:	..!.4.m.........
   11f74:	.....2o.5....!'.
   11f84:	..1..)....-H..I<
   11f94:	...&s.O.].|.....
   11fa4:	D3...J-.(...b..)
   11fb4:	.._..7......o..+
   11fc4:	?.|....%A.+.T...
   11fd4:	..p.6&e.../.....
   11fe4:	I k...`...A\..X.
   11ff4:	..@.k......3....
   12004:	..(..5H.V.....E.
   12014:	........b.;.....
   12024:	.,..".(.D....1x.
   12034:	.4....f08.......
   12044:	7..7K..3i...+'o.
   12054:	..........y.....
   12064:	[.........M'..fS
   12074:	...({...F)....O.
   12084:	..p.e.:....)u...
   12094:	..p.`.U..%6. ...
   120a4:	......[.......u.
   120b4:	................
   120c4:	h. .......y.....
   120d4:	5/....).Q.x.....
   120e4:	....../.....U.T.
   120f4:	.J"..1..a.i.1.8.
   12104:	C...X.....8._..6
   12114:	e....Z..\.:..<..
   12124:	v.;......8......
   12134:	M.iU..0.$.}.Y...
   12144:	j.......XH......
   12154:	I)....).%.A.&.#.
   12164:	S.....W.[.......
   12174:	...../E...I.Y...
   12184:	....H...........
   12194:	....2....6..T...
   121a4:	........*.*..*..
   121b4:	..faH......Fu..B
   121c4:	..E.q.....b....:
   121d4:	t...M..<..R.... 
   121e4:	..0.....I...n..M
   121f4:	..a6e.........F.
   12204:	$.....O.....b.8.
   12214:	;'n...k)n.;=..R.
   12224:	............ ..#
   12234:	..f....0......*.
   12244:	.&a....r..Dm...@
   12254:	...D.......(..f.
   12264:	F...a.l.......@.
   12274:	...n..O2........
   12284:	..Y.]../k....m..
   12294:	.F..g..0q.......
   122a4:	........<.......
   122b4:	.1(.........g'L.
   122c4:	..n..I...r..=@..
   122d4:	Z..,#..j...1....
   122e4:	..K.W........N..
   122f4:	.r.. b......5...
   12304:	.......f8.pP....
   12314:	......L..[...+..
   12324:	..Y...L.........
   12334:	...^...J...;....
   12344:	=.h...n...D..%..
   12354:	....}.*.......y.
   12364:	......>.$.G&/...
   12374:	..,......'...;t.
   12384:	[....../e.N<E.Q.
   12394:	M.....O...:.....
   123a4:	..).,.U.........
   123b4:	.......)......F.
   123c4:	o...;...u."...**
   123d4:	w.2P......6..#'.
   123e4:	....~.4..(......
   123f4:	b.P:..$.......T.
   12404:	..1.....A.<...G!
   12414:	N........... ...
   12424:	........D.......
   12434:	.1.._.l.......e.
   12444:	'.............:.
   12454:	....G.q.:.(.....
   12464:	..i..4y.$...@...
   12474:	....v._.......y.
   12484:	....!..6..F5*...
   12494:	....x.})....W...
   124a4:	...5..=5.......F
   124b4:	c.IP..i.......$.
   124c4:	......v.....a...
   124d4:	c..(............
   124e4:	..........=.....
   124f4:	.F...9........I.
   12504:	F......)..4e...H
   12514:	........^..XX.E.
   12524:	..D&....r.....X.
   12534:	A%...-..j.1.5.*.
   12544:	...._..'..?-*..)
   12554:	h.(....'N.......
   12564:	..&'....Y.....e2
   12574:	B..a....@.C.*...
   12584:	T+..X4...?9..@..
   12594:	.5...#....R'....
   125a4:	.......#...B...a
   125b4:	......6...8.....
   125c4:	^.........].H...
   125d4:	;...o...f.......
   125e4:	.........+A...#.
   125f4:	...$..}47.^.....
   12604:	i....7...Hc...a.
   12614:	..)...........r.
   12624:	s.........4!..nS
   12634:	....n.......h...
   12644:	....e.$....,....
   12654:	/..;.......L..R%
   12664:	.....'..........
   12674:	..j/O.."|..+....
   12684:	Y...p...(.Q...2.
   12694:	.)..~.`..'_.<...
   126a4:	..V...c.T%.....2
   126b4:	...(#.U.E...g..!
   126c4:	`..@L.X....:h..-
   126d4:	....M.........,&
   126e4:	........../.|...
   126f4:	..............f.
   12704:	n........[...%..
   12714:	-....-..|.......
   12724:	..p...l.S...a"K.
   12734:	.=...37.....-...
   12744:	......F.+.p.N...
   12754:	=...s.:...u.....
   12764:	..#.. ..[-v.{...
   12774:	....."..{.t.L..'
   12784:	..M.......KGO.f(
   12794:	... ..6.....a...
   127a4:	..S-h.[!f.<.....
   127b4:	..(.N.=..5......
   127c4:	.....#..f...Q...
   127d4:	................
   127e4:	..Q.......{$&.%.
   127f4:	......*.........
   12804:	....K.`...!.b.."
   12814:	W.....{.........
   12824:	....!.....`"...1
   12834:	..r.........N...
   12844:	O.g... .i.z;..W.
   12854:	I.+..)!.K.F.w#..
   12864:	....... T...../9
   12874:	...B...6`...&.X.
   12884:	....t.+.v...d.0&
   12894:	B.h.k......./...
   128a4:	).........S...0.
   128b4:	0.Q.l....53..4..
   128c4:	..N.t..'7.=.....
   128d4:	U.N.. 9...U.....
   128e4:	.........,g...".
   128f4:	.#..i......(..X'
   12904:	#...G.W.i.M...l.
   12914:	w.......X.r.....
   12924:	....t.g...?...i8
   12934:	N.."l.Q.......t.
   12944:	....,...%.......
   12954:	P(........k...U.
   12964:	F.3.....`$...#..
   12974:	X.......K.8.....
   12984:	..+...G6../.l$g.
   12994:	....j...=7]..$m.
   129a4:	....LA].?......(
   129b4:	.....6/...c.l...
   129c4:	L.`.g...u.......
   129d4:	$.|....-g.z."...
   129e4:	B.....n.........
   129f4:	..g........."...
   12a04:	..... 6.}.....4.
   12a14:	_.......5.......
   12a24:	..u.......m..!".
   12a34:	.dM.7...].......
   12a44:	.<?.........."..
   12a54:	..q.......2...;.
   12a64:	...$..t.........
   12a74:	.....&'.......y.
   12a84:	..5.5.....).....
   12a94:	y........ ......
   12aa4:	..."..h..6l.$C..
   12ab4:	'.|.W.....l.}...
   12ac4:	&.....1.........
   12ad4:	..()..x.....T...
   12ae4:	............9...
   12af4:	..#.2.........e.
   12b04:	i.I...{... . .r.
   12b14:	M...........~...
   12b24:	..{.#...e.Z.... 
   12b34:	...._.......`.".
   12b44:	=...0..-..):..;G
   12b54:	u..%....!.......
   12b64:	K...Z.....y.....
   12b74:	;...;.".........
   12b84:	......h...c.....
   12b94:	l...y.o........!
   12ba4:	......W....... .
   12bb4:	........g.m.O.3.
   12bc4:	..1..1.....'....
   12bd4:	....`.9.....]...
   12be4:	3...?.....}...j.
   12bf4:	..f.qS=...Z.L.|&
   12c04:	..........Q.....
   12c14:	j.7.........i...
   12c24:	................
   12c34:	..1.1...X.I.X...
   12c44:	..........C.....
   12c54:	..........*...3.
   12c64:	....$...,...E%..
   12c74:	......4.%.......
   12c84:	......X.+.......
   12c94:	..#........2i...
   12ca4:	w...N..........,
   12cb4:	..0.....S.:....!
   12cc4:	.........$......
   12cd4:	.......&........
   12ce4:	T.~...f.W.....|.
   12cf4:	..".....D.(..#..
   12d04:	J.........y*i...
   12d14:	........."...7..
   12d24:	=.......t....4O.
   12d34:	kM...1......{.3.
   12d44:	(...D....34.g...
   12d54:	............f.g.
   12d64:	..........M.....
   12d74:	u.....$...W.T.%.
   12d84:	Q.......~.......
   12d94:	..............x.
   12da4:	..K.....0..../..
   12db4:	u.q...........+.
   12dc4:	...7/._.C...'...
   12dd4:	7.P.Z.......e.{.
   12de4:	..{.(.....?.C.5)
   12df4:	F.A."... .......
   12e04:	.........0..j.T.
   12e14:	q.........8.....
   12e24:	w.M..(..........
   12e34:	....> ..........
   12e44:	:.l...........S.
   12e54:	u.....S.........
   12e64:	X...k.......*...
   12e74:	..z..../........
   12e84:	....-...../.....
   12e94:	..x...g.2.......
   12ea4:	........q.......
   12eb4:	0.............h.
   12ec4:	R.....L.o....(..
   12ed4:	........N..6..6.
   12ee4:	..~.............
   12ef4:	*.@.;..#q.......
   12f04:	p... ...?...=.~.
   12f14:	..."....Y.|.V...
   12f24:	..T.N.7..$..k...
   12f34:	5...Z.9.u.G.v...
   12f44:	... #...l.....J.
   12f54:	m.....P.....G...
   12f64:	....i.{...v.....
   12f74:	............c...
   12f84:	..\...I......*C.
   12f94:	......=.........
   12fa4:	..}.u..!......;.
   12fb4:	H.n.i.M.*.....p.
   12fc4:	....5.....*.j...
   12fd4:	..a14....._.....
   12fe4:	g.X.......t....<
   12ff4:	...b...6S.V.[.p.
   13004:	......b...D..$..
   13014:	. >._.%.t.r.o...
   13024:	....=.......S...
   13034:	............&...
   13044:	O.......0.......
   13054:	..........x.....
   13064:	..!.a...1.....f.
   13074:	4...?...V.}.....
   13084:	..[.....Y ..>.5.
   13094:	....,.C.z...#.3.
   130a4:	..........c.....
   130b4:	B..#....7._.....
   130c4:	..x.....o...*'..
   130d4:	.'<...6.j.O.M...
   130e4:	..........e..._.
   130f4:	....)...R.)!2...
   13104:	..........a.....
   13114:	~...6.....t...;.
   13124:	[...H.......,...
   13134:	......A...$.)...
   13144:	c...B.-...%.^..$
   13154:	..e.............
   13164:	e.......?-..!.E.
   13174:	!.@.m.`.....v.W.
   13184:	....&......?....
   13194:	Z.........a.9.S.
   131a4:	^...u.8...p.....
   131b4:	.!)...3...."..+.
   131c4:	......z...D...`.
   131d4:	~......:...(....
   131e4:	W........&G.Y...
   131f4:	.....,...)......
   13204:	..C.e.....a.....
   13214:	....8..... ...(.
   13224:	..........Q.....
   13234:	..........].....
   13244:	..U.y.....7.....
   13254:	..............g.
   13264:	}......;..g...A.
   13274:	.. .............
   13284:	......Y...p.....
   13294:	......I.6.R...T.
   132a4:	7.}.......Q.q...
   132b4:	..$...`.O.R.....
   132c4:	....z...[.^.N...
   132d4:	..4.......m.(.M.
   132e4:	..D...#.'...z.S.
   132f4:	......*.+....(..
   13304:	..........9...=.
   13314:	..].........[...
   13324:	....o..'Y.s.....
   13334:	....P...>.....e.
   13344:	....=.^.......K.
   13354:	....A...........
   13364:	....a.....0...s.
   13374:	D.F'}.K.#...9...
   13384:	............J...
   13394:	.)..........c...
   133a4:	..3.. A.2.......
   133b4:	............3...
   133c4:	i.+.........V.j.
   133d4:	....v...........
   133e4:	v92.3.w.>.......
   133f4:	..{.y.@.4....&e.
   13404:	".w........)..kH
   13414:	y."+......f.`...
   13424:	....f.k.p.<.....
   13434:	8(....}.h.......
   13444:	i...........j.O$
   13454:	m...q.......l...
   13464:	....."..........
   13474:	z%............>.
   13484:	X...0.....E.....
   13494:	........c.....t.
   134a4:	5.!.............
   134b4:	S.....G.......^.
   134c4:	U.......b...... 
   134d4:	j...k...........
   134e4:	..v.........K...
   134f4:	....Q.=.>...t.:.
   13504:	..;.....K.....".
   13514:	..6.q.n..2{.[...
   13524:	.............#..
   13534:	..(.......0...k.
   13544:	................
   13554:	g./.......#.....
   13564:	r.J.....U......&
   13574:	B..)..D...s.P...
   13584:	t.........T6..v!
   13594:	..........e.....
   135a4:	......s.........
   135b4:	......./......F.
   135c4:	....../.b....%..
   135d4:	..{.........i...
   135e4:	......a..)..u...
   135f4:	......)...R.>(..
   13604:	....{...Q.U.....
   13614:	..q.............
   13624:	Y.P.......<.8...
   13634:	........$.......
   13644:	#.k.......k....)
   13654:	4.$.......G.o...
   13664:	..H.Z.O.....(...
   13674:	..... G...d.O...
   13684:	..(.......[.....
   13694:	b.m.........J...
   136a4:	..`... .........
   136b4:	,...$.":-.~."...
   136c4:	..Q.2.H.....0.$.
   136d4:	l.a*v.|.....V.z.
   136e4:	..........|...y.
   136f4:	....(.."i.......
   13704:	........0......,
   13714:	G...............
   13724:	..............?.
   13734:	.../!..5s.@"..-.
   13744:	..j.........i.#.
   13754:	......).8.z.....
   13764:	....n.......6...
   13774:	.8....u.........
   13784:	......'.V.......
   13794:	..C.K.&.....6.g.
   137a4:	..f...M...b.y...
   137b4:	....g...!...V.,.
   137c4:	g.$...r...F.U.C.
   137d4:	............t. .
   137e4:	..........C.....
   137f4:	..........E...s.
   13804:	..p...;.....F.`.
   13814:	........l.I.%.<.
   13824:	=.....,.........
   13834:	..d.A.|.Z.1.....
   13844:	..g.... ........
   13854:	+.........,.....
   13864:	....$. .......F.
   13874:	....g.~.}.......
   13884:	..........A#8...
   13894:	......>... ...y.
   138a4:	s.............A.
   138b4:	..@...........!.
   138c4:	....h.........7.
   138d4:	}.......n.g.....
   138e4:	C...e.:.E.<..%2.
   138f4:	v.h.Y.}.x.....9.
   13904:	......&"........
   13914:	..H.....P.......
   13924:	..Q.........X.5 
   13934:	..............w.
   13944:	..)..'N...V.....
   13954:	..,.7...=.9...k.
   13964:	..B.&.v.........
   13974:	....f.s.........
   13984:	......G...%.....
   13994:	%...f...F.~.4.].
   139a4:	).M.i....(......
   139b4:	..s.?.....l...u.
   139c4:	8.F...;.;.......
   139d4:	i...[.9.N...I...
   139e4:	`...c.....S.....
   139f4:	..o.a.m.....K...
   13a04:	............%.w.
   13a14:	`.....E./.....T.
   13a24:	......`.......|.
   13a34:	......d.K.8.....
   13a44:	v.........\...4.
   13a54:	......;...7.k.m.
   13a64:	........_... .q.
   13a74:	..J%..B.F.Z...W.
   13a84:	....d.".5.......
   13a94:	Z.+.f.......*.T.
   13aa4:	......].L...B.^.
   13ab4:	....j.i)T.K.....
   13ac4:	T...K...P...c...
   13ad4:	..........T.....
   13ae4:	............F#..
   13af4:	J... .....t...].
   13b04:	Z.....8..:....H.
   13b14:	..!.q...v......'
   13b24:	..`.......s. .Y.
   13b34:	....."i...C...L.
   13b44:	U...|.8.U...Z...
   13b54:	....I...........
   13b64:	.... ..*M..*....
   13b74:	..........I.....
   13b84:	....?...H...J...
   13b94:	......h...y.@...
   13ba4:	................
   13bb4:	......n.X.$.B.@.
   13bc4:	..N.%.j.a.`.....
   13bd4:	..d.E.e.....r...
   13be4:	..... ].....4 S.
   13bf4:	E.&.......v.!./.
   13c04:	..F./.C.........
   13c14:	.!..`...(.......
   13c24:	........Z...D!..
   13c34:	].......K.......
   13c44:	....i.|... ...L.
   13c54:	|.:.;...........
   13c64:	..|.#...........
   13c74:	}..&..f.X...s.K.
   13c84:	.........$F...#.
   13c94:	...............!
   13ca4:	..............T.
   13cb4:	..h...........f.
   13cc4:	..g.........9.#.
   13cd4:	0.Q.S.......o3..
   13ce4:	[.....?.W.....i.
   13cf4:	......k.....V...
   13d04:	.._.7.......N...
   13d14:	........ ...D...
   13d24:	......[.....\...
   13d34:	..../...d.......
   13d44:	v...x.z...3.m...
   13d54:	......c.....j.7.
   13d64:	..y.h.........J.
   13d74:	....p..._.....\.
   13d84:	x...b.......p"9.
   13d94:	....s...Q.y...C.
   13da4:	\.3. ...D.}.N...
   13db4:	..n.......$&c...
   13dc4:	....&...........
   13dd4:	+.........C.-.).
   13de4:	<.d.a...l.m...U(
   13df4:	..........G.Z...
   13e04:	..$.+.........'.
   13e14:	..I.#...........
   13e24:	..j...P.....u.Y.
   13e34:	......8.m.F...0.
   13e44:	&.....+ ^.......
   13e54:	w...}.$...^.}.|.
   13e64:	O...{.Z.g.y.J...
   13e74:	x....3...!......
   13e84:	....]...].f...I.
   13e94:	m...........t.p.
   13ea4:	......_.A...#...
   13eb4:	U...G ..........
   13ec4:	....O.....w.o...
   13ed4:	A.^.........^...
   13ee4:	........c.3.....
   13ef4:	.... .......M.@.
   13f04:	......3.'$..:.6 
   13f14:	........k.K.....
   13f24:	....V.......&..#
   13f34:	....W.j.....z.?.
   13f44:	&. ./"Q.}.O.....
   13f54:	......f.$.w..._.
   13f64:	..F.............
   13f74:	..z...~...A.....
   13f84:	..X..."..._...v.
   13f94:	B...............
   13fa4:	9.........|.%...
   13fb4:	<...O.|.......-.
   13fc4:	........].....}.
   13fd4:	.5..u.=.@.....g.
   13fe4:	=.0.....k.......
   13ff4:	....!.........L.
   14004:	?.........,...U.
   14014:	L...0.....z)....
   14024:	....O.Z.....2...
   14034:	..,.......k.x...
   14044:	......)...... F.
   14054:	............H...
   14064:	............>...
   14074:	-.%...j...5.5.=.
   14084:	Q...i.....5.i...
   14094:	T.G.M...I.......
   140a4:	e...........#...
   140b4:	..,.E.......{...
   140c4:	8.......~...I.D.
   140d4:	..6.v.:.........
   140e4:	h...).`.w.......
   140f4:	}...~...........
   14104:	j...^.....2.q...
   14114:	f.t.U.....A.{.c.
   14124:	W.\.............
   14134:	......{.......m.
   14144:	n.I.....G.[.....
   14154:	........)...U.$.
   14164:	....n...F.....p.
   14174:	..L.............
   14184:	H.D...W.2.......
   14194:	......>...m.L.i.
   141a4:	.........)......
   141b4:	..=.~.~... .....
   141c4:	..5...!.........
   141d4:	..........&...S.
   141e4:	v.........V.....
   141f4:	8.3..!....y.u...
   14204:	....b.....C...^.
   14214:	....'.....H.....
   14224:	..,.....Y.......
   14234:	......x.....s.B.
   14244:	....T&x...K...8.
   14254:	*.....5.I.......
   14264:	e...~.....c.....
   14274:	?...............
   14284:	/.....&.M.......
   14294:	..........[.....
   142a4:	..........f.....
   142b4:	&.......{.....c.
   142c4:	%.@...4...E..,..
   142d4:	y.7...6.......\.
   142e4:	..#.....#.>.....
   142f4:	....z.....i.....
   14304:	..Q...p.....~...
   14314:	..f...d.....j...
   14324:	.....!..+.Q.z.U.
   14334:	0.G.....x..#..I.
   14344:	.&......g.......
   14354:	X.h.............
   14364:	..............x.
   14374:	e...%...........
   14384:	............#...
   14394:	m.@...X.`."...~.
   143a4:	+.......).......
   143b4:	......r...P.....
   143c4:	..........&...R.
   143d4:	,.k.3 ....D.....
   143e4:	....6.=.....C...
   143f4:	..4...V...>...:.
   14404:	........~.......
   14414:	......[....... .
   14424:	..........z.F...
   14434:	..d.............
   14444:	y.....`.........
   14454:	............%._.
   14464:	..u.........m...
   14474:	......z.u. ...j.
   14484:	l........./.B.c.
   14494:	&...........2...
   144a4:	@.............j.
   144b4:	....1.....l.C.Y.
   144c4:	A.......9.......
   144d4:	..J.Z.c.........
   144e4:	.._...F.h...X...
   144f4:	..../...........
   14504:	H.<.............
   14514:	......l.........
   14524:	....9.G.$.^.w.?.
   14534:	l.........G.a.>.
   14544:	o.@.....".......
   14554:	4...3.n(..Q.B.W.
   14564:	..N.)...........
   14574:	.._...*.v.....".
   14584:	&.......Q.h...I.
   14594:	8...<.x.9.......
   145a4:	6.......e.......
   145b4:	a. .Z%..O#/.....
   145c4:	....8...7.,....%
   145d4:	..k.......^.....
   145e4:	....-...6.I...Q.
   145f4:	W.k.......7,..U.
   14604:	..-.....S.......
   14614:	."..k. ...Z.....
   14624:	(.......".=.....
   14634:	3...X.;.I.....f.
   14644:	q...$.D.......P.
   14654:	]...............
   14664:	....U.m.C...E...
   14674:	..........u.....
   14684:	J...z.r.....Q...
   14694:	+...........5.1.
   146a4:	........Z.@'i.].
   146b4:	......V...."..4.
   146c4:	......&.......z.
   146d4:	?.I.........N.5.
   146e4:	..I.8...9...o.c.
   146f4:	......a...).{...
   14704:	............"...
   14714:	..6.Q.L.......Z.
   14724:	..j.}.....e.#.*.
   14734:	o.j...V.7.......
   14744:	..T...y.u.....9.
   14754:	;....!..Z.... b.
   14764:	y...7.....N.....
   14774:	..3...1.p.......
   14784:	............N...
   14794:	#.....].). .{...
   147a4:	5._(..q.........
   147b4:	W.........W.R..,
   147c4:	-.....k.....v.[ 
   147d4:	....U.-.s.....].
   147e4:	..&...f.......\.
   147f4:	..o...i....&....
   14804:	......X.....&.V.
   14814:	..............u.
   14824:	..F._...P.......
   14834:	....A.d&....Q...
   14844:	....].2...../...
   14854:	..W...o.......{.
   14864:	...&.._...8.....
   14874:	........2...8...
   14884:	..u.............
   14894:	..[.V...I. .O...
   148a4:	C.<.....z.1.6...
   148b4:	j.....n.P.A.....
   148c4:	..'.......+.....
   148d4:	{.........h.....
   148e4:	".N.......4.v.r.
   148f4:	..&......./.....
   14904:	`.Q.a.....D.....
   14914:	K...............
   14924:	y...............
   14934:	..o...........e.
   14944:	..K.].J.M.=...t.
   14954:	....1.........}.
   14964:	..,.........k...
   14974:	........~.T.....
   14984:	......!.......M.
   14994:	|.&...d.....4...
   149a4:	!.......F.'.....
   149b4:	..(.....s.....C.
   149c4:	..}.....I...i.A 
   149d4:	..c...[...J.....
   149e4:	...($.D.... ....
   149f4:	......R...d...=.
   14a04:	<.!.u......._.A.
   14a14:	].,.+.....^.....
   14a24:	................
   14a34:	V...........C...
   14a44:	U.7.....>.......
   14a54:	....e)....I...I.
   14a64:	C.4.\.....].....
   14a74:	..........S.....
   14a84:	....P....*..R.H.
   14a94:	:.c...V...r.9...
   14aa4:	......F.6.......
   14ab4:	................
   14ac4:	...._.......D...
   14ad4:	{.\.\........._.
   14ae4:	..s.....W.......
   14af4:	..,.............
   14b04:	....@.........[.
   14b14:	..........}.....
   14b24:	..Z...1...\.r...
   14b34:	................
   14b44:	....E.......!.s.
   14b54:	..[.`.......S.h.
   14b64:	........y.3.....
   14b74:	........h.......
   14b84:	....X.......{.!.
   14b94:	~...4...........
   14ba4:	..........@.9.b.
   14bb4:	..d...........+.
   14bc4:	;.j...6.........
   14bd4:	v.....9.....:.M.
   14be4:	X.k.......V.....
   14bf4:	......M.........
   14c04:	..7.....2.$.....
   14c14:	8.\...a.........
   14c24:	3...e.A.........
   14c34:	......E.....O...
   14c44:	......A...Q.f.U.
   14c54:	..z...i.Z.W.x.^.
   14c64:	]...P...8.......
   14c74:	T.b.....*.......
   14c84:	....1...X.G...c.
   14c94:	..h.............
   14ca4:	g...5...D...z...
   14cb4:	..n..$......g...
   14cc4:	..\...........a.
   14cd4:	q.....h.{.......
   14ce4:	... ....6.....*.
   14cf4:	....9.....0.4...
   14d04:	....[........%b.
   14d14:	<...D...........
   14d24:	d.S.B.I.6...;...
   14d34:	..........].D...
   14d44:	V#'......#.."...
   14d54:	."..@...P.z.....
   14d64:	..........o...j.
   14d74:	..=.......*.....
   14d84:	..............U1
   14d94:	M...).l.."..b.-.
   14da4:	..].....8.......
   14db4:	7.........}...\.
   14dc4:	U...............
   14dd4:	......d.).....~.
   14de4:	f.M.............
   14df4:	q.9.>...... \...
   14e04:	............~.7.
   14e14:	....>...........
   14e24:	E.....a...I.....
   14e34:	......{.X.....b.
   14e44:	....i.....L.". .
   14e54:	....../.n.Y.r...
   14e64:	....u.5.R.}.....
   14e74:	..H.....&.}.....
   14e84:	z.&.........T.L.
   14e94:	".).............
   14ea4:	......H.F.......
   14eb4:	..............3.
   14ec4:	..{.U...E...r...
   14ed4:	..........D.....
   14ee4:	..i.Q.{.........
   14ef4:	....n.y.D....'%.
   14f04:	......1.......f.
   14f14:	....F.....]...l.
   14f24:	........*#......
   14f34:	T.........I.....
   14f44:	..o...&.........
   14f54:	Y...p...........
   14f64:	......4...n...3.
   14f74:	..3.............
   14f84:	........y...B...
   14f94:	e.Y.].8.....%.y.
   14fa4:	................
   14fb4:	@...~.|.>...9.H.
   14fc4:	..............>.
   14fd4:	.......#........
   14fe4:	;...~...1...i.l.
   14ff4:	........f.....q.
   15004:	..&'..T.........
   15014:	y...*.k..(*.[.p.
   15024:	W.........f.S..4
   15034:	...2R.?.....".<.
   15044:	..s......0..Q...
   15054:	W..#....Y.].....
   15064:	..j.u.....?...s.
   15074:	b.5..-x.....3...
   15084:	........I.......
   15094:	y.......G.e...G.
   150a4:	..L...V...y.....
   150b4:	........Q.72..j.
   150c4:	....s.0...b.....
   150d4:	.!..W.9.........
   150e4:	....C.".......G.
   150f4:	......=...q..6C.
   15104:	{.x.........4...
   15114:	<.....0.......x.
   15124:	....X.$.........
   15134:	..p.......T...z.
   15144:	O.....K.K.$.....
   15154:	C...L.......j...
   15164:	..%.....2....!s.
   15174:	..........u.H...
   15184:	....9...W*..@...
   15194:	....x.,...$...>.
   151a4:	..8...`.9...E...
   151b4:	_.G.............
   151c4:	Q.....a.l.......
   151d4:	..........|.....
   151e4:	c.4.............
   151f4:	......J.K.U.V...
   15204:	....0.1.........
   15214:	......7#..O...N.
   15224:	+...n.b..._.M.W.
   15234:	........b......"
   15244:	..-.....X&......
   15254:	8...n...u.....Z.
   15264:	......<........(
   15274:	V.V.......(.....
   15284:	p...!.".A...H...
   15294:	M. .......>.....
   152a4:	p...6./.e.*.....
   152b4:	....8.......(...
   152c4:	....0.......I.[.
   152d4:	....W.........3.
   152e4:	^.......X.......
   152f4:	3.(.....~...k...
   15304:	".....N.........
   15314:	I.....x.....v...
   15324:	=.q.........s.|.
   15334:	..../.<.......,.
   15344:	+!....V.....q.^.
   15354:	..3.......:.:.t.
   15364:	..=.......[.}...
   15374:	..............-.
   15384:	..;...,....#<...
   15394:	..#........._.}.
   153a4:	W.....S.....&.Z.
   153b4:	..u.Z.....y!%...
   153c4:	|.0.`.K.......6.
   153d4:	....K.s.{.T.v...
   153e4:	....}.3.<.......
   153f4:	..4...`.+.x..&B.
   15404:	....O...M.......
   15414:	....i.........7.
   15424:	o.....=.........
   15434:	....q.6...V...8.
   15444:	:...I...W.4.p...
   15454:	+...k.g.N...H...
   15464:	..q.."..........
   15474:	......r.....a.b.
   15484:	..C.-.......[...
   15494:	!.b.Z.W.G.W"..k.
   154a4:	%...:.....5.....
   154b4:	..^...l.....".U.
   154c4:	....=...K.8.....
   154d4:	..!...%..2..@...
   154e4:	..u.....5&..u...
   154f4:	s.....?.......%.
   15504:	......T...8.}.p.
   15514:	....g..........$
   15524:	Z.n.........Z..#
   15534:	........(.......
   15544:	H.D.........(...
   15554:	..]...,.).......
   15564:	<.t...8.....G...
   15574:	..3...U.] ....".
   15584:	..^.........z...
   15594:	~.......... ....
   155a4:	..F.....Y.......
   155b4:	....P.......D.W.
   155c4:	..k...H.m.....%.
   155d4:	......|.........
   155e4:	..........T.{.s.
   155f4:	`..!>...5.\...9.
   15604:	..Y.K.........t.
   15614:	....U.d.x.*.....
   15624:	............D...
   15634:	....J.....7.....
   15644:	..C...8.........
   15654:	7.../.).......N.
   15664:	p.....h.....e...
   15674:	u.....?.........
   15684:	....F.=...y.....
   15694:	......T...N.....
   156a4:	.)..c...N.C.h...
   156b4:	........!.....!.
   156c4:	C.e...T'd.....<.
   156d4:	J...............
   156e4:	 ...............
   156f4:	...&B...?.....m.
   15704:	..>...2...A.U...
   15714:	............W...
   15724:	..K.........y...
   15734:	....L.(.....u.+.
   15744:	..........H...e.
   15754:	*.........;.A...
   15764:	'.Q...[.....M...
   15774:	....$.-.N.A.!...
   15784:	..{.....X.G.....
   15794:	..].b...........
   157a4:	H...w...+.....h.
   157b4:	v....$..>.....[.
   157c4:	......B.........
   157d4:	... ....B.......
   157e4:	....C.?.........
   157f4:	\.%...F...G.W.j.
   15804:	..{.....E.z...&.
   15814:	................
   15824:	..k...G.......2.
   15834:	{...D...F.$.....
   15844:	....1.........t.
   15854:	5.-.......Z...!.
   15864:	C.1.....<.....n.
   15874:	..2.g.u.i.2.g...
   15884:	../.6. .....&.<.
   15894:	..,.....6.l.=.g.
   158a4:	.....(....Z...g.
   158b4:	..k.f......"y.`.
   158c4:	......O...[.....
   158d4:	..P.T.........m+
   158e4:	........!...P...
   158f4:	/...v.......|...
   15904:	.. ..._.t.F.....
   15914:	....i...&.R.1...
   15924:	..S.............
   15934:	-"......F.....p.
   15944:	....../#M.......
   15954:	.....(U.........
   15964:	..l.......@.F...
   15974:	W.x.............
   15984:	......p.........
   15994:	..s...)...V.....
   159a4:	1.....{.\.......
   159b4:	!...h...I.......
   159c4:	........3...#.8$
   159d4:	......i...F.u...
   159e4:	I...............
   159f4:	S.....%...s.J...
   15a04:	..T.............
   15a14:	....L.....d.....
   15a24:	..c.2...o.......
   15a34:	M.....;...'%....
   15a44:	..l.....b.c.....
   15a54:	w.X.......:.u.t.
   15a64:	....2....... ...
   15a74:	............+...
   15a84:	M...}.....A.N...
   15a94:	..O.7.....".....
   15aa4:	..4.(.?.....&%..
   15ab4:	..Y...c.>.......
   15ac4:	..;.R.........H.
   15ad4:	a....(+...*.....
   15ae4:	..?.......T.j..&
   15af4:	..E.8.......'.P.
   15b04:	....G.......3...
   15b14:	^.............|.
   15b24:	8.O...d.........
   15b34:	....w...h.?.*...
   15b44:	+...........{.o.
   15b54:	E.......G.T.....
   15b64:	Z...F...........
   15b74:	+.j.......w...b.
   15b84:	E.<.....k..+..&.
   15b94:	..............+.
   15ba4:	..:.....L.).5...
   15bb4:	..I...Y...O!....
   15bc4:	..B.<.y..-....O.
   15bd4:	8...u...t'......
   15be4:	Y.D.............
   15bf4:	....?.a.(.......
   15c04:	....:......)..,#
   15c14:	i.~.;.Q.<.......
   15c24:	t...h.......8...
   15c34:	..3.....S...!.w.
   15c44:	...."...........
   15c54:	....X.P.X...C.v.
   15c64:	2.<.........Z...
   15c74:	........@...`...
   15c84:	..d.K.6.#.p.....
   15c94:	..Z ......%.n.*.
   15ca4:	-.m.s.....@.=.".
   15cb4:	..y.......>.. V.
   15cc4:	../.'...w+f.....
   15cd4:	..p.y...........
   15ce4:	..........q.....
   15cf4:	......[...b'$.2.
   15d04:	b.......)...N.-.
   15d14:	R...........k.^.
   15d24:	........@.....H.
   15d34:	2.q.o.p.m...G...
   15d44:	........H.v.....
   15d54:	....t.z.....4...
   15d64:	....t...f...7(..
   15d74:	................
   15d84:	........*.......
   15d94:	........m...N.:.
   15da4:	................
   15db4:	....m...u...y...
   15dc4:	......U.........
   15dd4:	%.....5.h.d.....
   15de4:	..R...8.a.2.t...
   15df4:	..%.....I......(
   15e04:	/......*..-...o-
   15e14:	..D.............
   15e24:	..I...*..%..)...
   15e34:	............Z.;.
   15e44:	........:.'.....
   15e54:	f.....".....3...
   15e64:	f...o.......n.D.
   15e74:	N.E.....8.j.i...
   15e84:	....q.9...)...S.
   15e94:	................
   15ea4:	t.?.<...Y.\...~.
   15eb4:	................
   15ec4:	..............F.
   15ed4:	..i...u........(
   15ee4:	!.E+............
   15ef4:	....Q...O...t...
   15f04:	................
   15f14:	..z........"..J.
   15f24:	........S.......
   15f34:	....P.E.#.;...Q.
   15f44:	y...v.....v.^...
   15f54:	;.......R.H.g...
   15f64:	..3.T.].....&...
   15f74:	...#P.....)...y.
   15f84:	F...2.....#.....
   15f94:	..K.....t.d...u.
   15fa4:	................
   15fb4:	..&.....r.".V...
   15fc4:	....d.:.O.......
   15fd4:	..&.......0.;...
   15fe4:	........;...=...
   15ff4:	......5*v.1.%...
   16004:	/...........P.f.
   16014:	..........I.)...
   16024:	..............].
   16034:	..I...0.......#.
   16044:	..T..... ...0...
   16054:	.. .........`...
   16064:	......J...w.....
   16074:	l.....".........
   16084:	..........4.}...
   16094:	9...o...........
   160a4:	<.}.............
   160b4:	.2......^2-.....
   160c4:	....b.:...8...*.
   160d4:	!...........r.S.
   160e4:	......K.2.r.$...
   160f4:	....7.0...v...X.
   16104:	........H...<.h.
   16114:	?.`...Y.h.. t...
   16124:	*.....d&b.......
   16134:	..1._.4...}.K...
   16144:	..d.........n.z.
   16154:	..$."...1.\.....
   16164:	........P....!..
   16174:	..A.:..!....:...
   16184:	..^.A.....K.H.7.
   16194:	......=.w.7.K.N.
   161a4:	..'.;.......O.%.
   161b4:	/.....*.....O...
   161c4:	......q.6.{.O.).
   161d4:	..b.^...A.....t.
   161e4:	_.....`...8...{.
   161f4:	......{...E.@.R.
   16204:	..........O.q.+.
   16214:	............&...
   16224:	}.D...J.R.Q.t...
   16234:	........y.X.X...
   16244:	V.......I.....C.
   16254:	......m...2.N...
   16264:	........2.....S.
   16274:	o.D+..+...'...Z.
   16284:	..2.....}.......
   16294:	....,.l.t.|.l. .
   162a4:	............p.&.
   162b4:	..a.^...........
   162c4:	....r.&......$..
   162d4:	....P...%.v.....
   162e4:	,./.k.........~.
   162f4:	......a.@.{...~.
   16304:	5.C.>...6...t...
   16314:	..L...T.Z...M.l.
   16324:	R.+...L.9.......
   16334:	....C...b.<![.x.
   16344:	<...o.6...e.V.j.
   16354:	}.|._.....k.....
   16364:	................
   16374:	....&.S...v...T.
   16384:	.!..6...-...."..
   16394:	.*r.{...........
   163a4:	....f.%.....q.\.
   163b4:	...'....... ....
   163c4:	......t.........
   163d4:	..1...I...Y.t.!.
   163e4:	......#.......I%
   163f4:	z.).d.b...B.....
   16404:	.. .>.....^.....
   16414:	........U...@...
   16424:	............U...
   16434:	..G.....).......
   16444:	..O....5o...n.9.
   16454:	C.2.....`...&.E.
   16464:	.......... ...o.
   16474:	..7...Y...Y.t.V.
   16484:	E.y.....(...~...
   16494:	2.....".!...3...
   164a4:	....h.A.........
   164b4:	@.....g.........
   164c4:	..J...e.......=.
   164d4:	........_./...A.
   164e4:	..P.........(...
   164f4:	" B.I.$.K.......
   16504:	$.....z.......=.
   16514:	......0...A...O.
   16524:	............W...
   16534:	s.....>.`....#..
   16544:	..E.F ~.z...P...
   16554:	....K...L.......
   16564:	1...%.......n.N.
   16574:	..........E.'...
   16584:	8...8.].R.7.$.`.
   16594:	../.........1...
   165a4:	|...0.B...5.<...
   165b4:	..|.(...w"B.\...
   165c4:	t.......Y.......
   165d4:	........+  ...t.
   165e4:	............d.X.
   165f4:	..C.g.....4...?.
   16604:	-....1..Q.\;}...
   16614:	../...u.....]...
   16624:	................
   16634:	..........9.....
   16644:	j...%...K.....E.
   16654:	....R.b$....C.B.
   16664:	......5.....W...
   16674:	....f.:.......S.
   16684:	(...Y...........
   16694:	..X.....j.9.y.Y.
   166a4:	%.......L.'.A...
   166b4:	..Z.....D.......
   166c4:	........t.......
   166d4:	........a.......
   166e4:	........|.......
   166f4:	..w.......O...8.
   16704:	a...............
   16714:	..m...Z.....O...
   16724:	....}.8........&
   16734:	K. .N.u.a.Z.....
   16744:	..K...y..*..y...
   16754:	./..e.i.7.......
   16764:	W...'.%.......1.
   16774:	T....(..0.W.?...
   16784:	........9.......
   16794:	....C...+...P.$.
   167a4:	.!..i...&.).....
   167b4:	....C.K.........
   167c4:	....}...p)..U...
   167d4:	........!.n.n..7
   167e4:	..n.........a.^.
   167f4:	f.Q.>...2.......
   16804:	......9.....:.j.
   16814:	....d...~.......
   16824:	0.....6.j.....-.
   16834:	..i.......".,...
   16844:	..........<.{..*
   16854:	..K.......v...X.
   16864:	F...f...2.2.%...
   16874:	......}.+..&t...
   16884:	...$..}.......1.
   16894:	..B.......#.2...
   168a4:	..........#...z.
   168b4:	..Q.#.<...$.f...
   168c4:	m.....H.........
   168d4:	G.k.."....9.....
   168e4:	k...\%..H...U...
   168f4:	Z.w.............
   16904:	z.D.f.r.3.X....#
   16914:	....+.,...6.....
   16924:	..y.....Z...).4.
   16934:	....c...J.......
   16944:	..].v.X...9.^...
   16954:	,.......S.....;.
   16964:	..........Q.....
   16974:	F...W..-p....._.
   16984:	F.............n.
   16994:	.'....z.'...k...
   169a4:	......3.c...+...
   169b4:	..{.!.o...M.....
   169c4:	......}.....d..$
   169d4:	^.M.......e.R.."
   169e4:	v.....8...Z...I.
   169f4:	..........."....
   16a04:	......t.......P.
   16a14:	....y.........m.
   16a24:	..'.l.....[...&.
   16a34:	 .........u.L...
   16a44:	......?!..9.....
   16a54:	..@...3.........
   16a64:	............*.h.
   16a74:	%...i.....>.<.<.
   16a84:	....8...W...$...
   16a94:	....=...x.......
   16aa4:	X.:.7.M...m.....
   16ab4:	..|.<...8.......
   16ac4:	........R.....).
   16ad4:	...5..........-.
   16ae4:	......G...!.Z.'.
   16af4:	..........t.7.i.
   16b04:	=.....5.i...W...
   16b14:	?.T.u...t.:._*..
   16b24:	..+.)...p.f.....
   16b34:	...._.....I.|...
   16b44:	C.....%.t.. ...-
   16b54:	..>...].d.......
   16b64:	..J...+...U.....
   16b74:	W.......L.j...l)
   16b84:	7.......u.......
   16b94:	..j...t...U.....
   16ba4:	..o.Z.j.....f.d.
   16bb4:	....m.7.....5...
   16bc4:	N.....A...o...9.
   16bd4:	..j.l.....X.....
   16be4:	@...........>...
   16bf4:	n.f...l.........
   16c04:	......}.......b.
   16c14:	|.Q.....5.0.q...
   16c24:	..S.....7.2.'...
   16c34:	F.....k.........
   16c44:	8...-...V.......
   16c54:	....L...X.p.`...
   16c64:	....v.....V.H...
   16c74:	..........".&...
   16c84:	7...(.-.W.......
   16c94:	..s.{.)...b...!.
   16ca4:	....=.........b.
   16cb4:	............5...
   16cc4:	l.....^.$.......
   16cd4:	..V.c...#.o.....
   16ce4:	....V...........
   16cf4:	>.L.M..!....b...
   16d04:	..v.......p...r.
   16d14:	N...e...J&/.`...
   16d24:	A.8.i.c.........
   16d34:	w.g.........9.X.
   16d44:	;......'X.......
   16d54:	 .j.M.L.l...'...
   16d64:	e.r.a...%...~._.
   16d74:	..E.c...........
   16d84:	..>.O.M.x..."...
   16d94:	..~.c...r.[.....
   16da4:	....e.H.E.....?.
   16db4:	..y.@.K.........
   16dc4:	....E.G...k....$
   16dd4:	Z...H.........V.
   16de4:	7.......K...a.O.
   16df4:	f.........9.....
   16e04:	............S...
   16e14:	..e.U...@...,.{.
   16e24:	..&.\.. ....R...
   16e34:	....."....T..%$.
   16e44:	...'............
   16e54:	..u.............
	...

00016ea4 <sample_43_standard_DRUMS_ebongostone>:
   16ea4:	....6...h.Q.E.^.
   16eb4:	..b..=Se.MJ..ry.
   16ec4:	..!&..9...n.4...
   16ed4:	...'/.>.c.....H.
   16ee4:	wM>.y..>.....`U.
   16ef4:	M..W..M.f.b.@..0
   16f04:	.....r....g.T..A
   16f14:	{.v#..{..7..3..5
   16f24:	..... 9.|......r
   16f34:	+....F...85....!
   16f44:	..... =...."p...
   16f54:	K.z..+.....<|..r
   16f64:	?b...gg8....d...
   16f74:	$!..d.......\...
   16f84:	Y./..%..........
   16f94:	u....,....|.Y.2.
   16fa4:	.............,..
   16fb4:	p....&/.0..0E%9.
   16fc4:	m.!.............
   16fd4:	..........j...22
   16fe4:	.....2=1....5.C.
   16ff4:	@...T...m.......
   17004:	j./&..U..-r.:...
   17014:	................
   17024:	(...S........+..
   17034:	U.&.r.%...W..1"3
   17044:	+.....N.o.N...V.
   17054:	....1...m.7.....
   17064:	....B.A.........
   17074:	X.G.V.L.N...@.K.
   17084:	..-...K.....,.1.
   17094:	......A...A.....
   170a4:	I.I.~.....K...t.
   170b4:	......F.t......+
   170c4:	..k.,...9.....`.
   170d4:	....T.........N.
   170e4:	?....$g.J.%.....
   170f4:	..g.........z...
   17104:	..[.....g.......
   17114:	............=.t.
   17124:	(.....W.....2...
   17134:	s...m.+...../.j.
   17144:	..........r.....
   17154:	~.....g.N...r...
   17164:	B...............
   17174:	....V.}...R...$.
   17184:	..&.*.......}...
   17194:	;...............
   171a4:	G.....\.........
   171b4:	....3.@...b.....
   171c4:	..........-.D...
   171d4:	P...L.......:...
   171e4:	..v... .......e.
   171f4:	..............T.
   17204:	..M.........z.,.
   17214:	z...Y...j.%.....
   17224:	..U. .....W...[.
   17234:	........:.(.....
   17244:	..9.....Q.^.V...
   17254:	~.....W.y.C.....
   17264:	6...C.(.......>.
   17274:	................
   17284:	......>...>.....
   17294:	[.....M.........
   172a4:	........P.......
   172b4:	Y.......-.......
   172c4:	......Z...d.N.e.
   172d4:	....c.8.....o...
   172e4:	....G.c.,.g...R.
   172f4:	..`.u...i...:.A.
   17304:	..z.%.........H.
   17314:	....f.....X.j...
   17324:	!....._.....B...
   17334:	..........H.p...
   17344:	....9.....G...s.
   17354:	......?.........
   17364:	K.K.......G...@.
   17374:	..b...P.........
   17384:	..}.........B...
   17394:	k.=...U.....j.M.
   173a4:	/.............#.
   173b4:	..7.............
   173c4:	g.,.v.../...x...
   173d4:	+.3...J...d...G.
   173e4:	f.R.d.;.U.....M.
   173f4:	a...Z.!...{...w.
   17404:	O.t.o...........
   17414:	 ...n...:.f.....
   17424:	../.B.r.........
   17434:	....z.N.~.......
   17444:	..@.....0...-...
   17454:	..c.9.......y...
   17464:	....|.|.........
   17474:	..S.Q.......W...
   17484:	..0.{...........
   17494:	..?.|.i...L.....
   174a4:	..J.............
   174b4:	....!...}.....B.
   174c4:	.."...Q.0...b.u.
   174d4:	....z.t...f.....
   174e4:	..........a...'.
   174f4:	............F...
   17504:	............L...
   17514:	..W.<...9.Y...W.
   17524:	......}...+.....
   17534:	...... .w.......
   17544:	....9.......).c.
   17554:	).......p.......
   17564:	........D.......
   17574:	..\.........e...
   17584:	..............q.
   17594:	Y...........4...
   175a4:	a.0._.H.j.h.....
   175b4:	X.,.{.l.......a.
   175c4:	....c.....?.....
   175d4:	P...{.g.5.z.I...
   175e4:	..........M.g...
   175f4:	j.p._.....F...4.
   17604:	>.f.Q...+.......
   17614:	........?.....*.
   17624:	........<. .....
   17634:	W.........l.d.^.
   17644:	........l.h.a...
   17654:	).G...p...h.....
   17664:	........K...H.<.
   17674:	..w...G...0...x.
   17684:	m...............
   17694:	..k.'.X...F.A...
   176a4:	%...............
   176b4:	..=.h.....].Y.C.
   176c4:	..&. .)...P.9...
   176d4:	k.......F.....Y.
   176e4:	......i.t.......
   176f4:	..B.p.M.........
   17704:	..9.j.y...!.:...
   17714:	..T...t.........
   17724:	G.X.....>.4...?.
   17734:	$.W.$.....Y.....
   17744:	..............,.
   17754:	..t.....s.a.p...
   17764:	....-.(...l.b...
   17774:	......@.........
   17784:	............#...
   17794:	......S.....j.?.
   177a4:	..!.....,...E.>.
   177b4:	..'... .....3.|.
   177c4:	....L.....Q.2...
   177d4:	~.].....x.......
   177e4:	'.2.r...!.......
   177f4:	&.....^.........
   17804:	....H.:..... .V.
   17814:	..9...1.....r.>.
   17824:	Y.....W.....x.[.
   17834:	....y.......!...
   17844:	..............a.
   17854:	>.k.......|...h.
   17864:	S.9.Y.|...*.....
   17874:	......D...u...u.
   17884:	".........*.a...
   17894:	K.........Q...v.
   178a4:	........f.....Z.
   178b4:	....T.......T...
   178c4:	o...Y.....7.....
   178d4:	x...>.......U.Q.
   178e4:	g.\...o.........
   178f4:	D.q.B.........I.
   17904:	........y.A.u...
   17914:	1.3.-.a.....".8.
   17924:	......Y...p.....
   17934:	......U.....'...
   17944:	..{.....Y.......
   17954:	....v... ...u...
   17964:	'...o... .V.W._.
   17974:	........Q.....Q.
   17984:	:...Y.d._.4.....
   17994:	Z...t.../.8.....
   179a4:	..........U.....
   179b4:	....$...q.].....
   179c4:	..K.............
   179d4:	+.*...U.T.......
   179e4:	E.............V.
   179f4:	..........q.....
   17a04:	Z.....1.<.......
   17a14:	................
   17a24:	....k...Y.......
   17a34:	~.....|...8.....
   17a44:	W.....q.M...q.q.
   17a54:	H.......O.......
   17a64:	<.......3.......
   17a74:	".<.............
   17a84:	..q.O.....:...a.
   17a94:	........8.h...{.
   17aa4:	..g.....m.......
   17ab4:	............/.Z.
   17ac4:	....!...S....._.
   17ad4:	....v.`.C...:...
   17ae4:	................
   17af4:	E. .......5.S...
   17b04:	....q.......?...
   17b14:	&...k...9.n...S.
   17b24:	..............a.
   17b34:	..B.............
   17b44:	s.L...*.K.....d.
   17b54:	l...6.....Y.Y.u.
   17b64:	..[.........X.).
   17b74:	..<.!...........
   17b84:	..B.....+...6...
   17b94:	N.}.......4.....
   17ba4:	..Q.....:.i.....
   17bb4:	....>...q...s...
   17bc4:	....v.].......j.
   17bd4:	....N...3.....W.
   17be4:	....s.....<.k...
   17bf4:	..g.u.......]...
   17c04:	..8.....y...L...
   17c14:	..........A.b.x.
   17c24:	 ...............
   17c34:	).....>.f...W.l.
   17c44:	i.....<.....H.E.
   17c54:	........s.H.....
   17c64:	<.G.f.G...=.6...
   17c74:	....l.A.....1.".
   17c84:	..P.`.../...a...
   17c94:	8.K.....3.......
   17ca4:	/.P...~.....<.:.
   17cb4:	..P...|.......6.
   17cc4:	U."...,.........
   17cd4:	&.D.....y.S.....
   17ce4:	..e...q...b...U.
   17cf4:	......j.....q...
   17d04:	?...W.....U...6.
   17d14:	?...x.P.*.a...A.
   17d24:	H.....!.Z.......
   17d34:	..*.............
   17d44:	b.s...|.O.....O.
   17d54:	..../.......Z...
   17d64:	E.........j...9.
   17d74:	F...b...........
   17d84:	....G.r.....h.P.
   17d94:	r.....j.......M.
   17da4:	U.......U.{.....
   17db4:	../.......t.....
   17dc4:	......!.....U...
   17dd4:	..........x.....
   17de4:	......H...*.../.
   17df4:	a.V.)...j.>...o.
   17e04:	......Y.........
   17e14:	Z.[...0.......&.
   17e24:	....F...C.......
   17e34:	..s.9.h.........
   17e44:	..S.U.....i.....
   17e54:	................
   17e64:	..W.......'.*...
   17e74:	..8.Y.M.....j...
   17e84:	".o.........P.z.
   17e94:	..g...#.l./.....
   17ea4:	..3.......^.k.".
   17eb4:	..........x.....
   17ec4:	....~.8.D.....'.
   17ed4:	..<.........8.'.
   17ee4:	0.......0...{...
   17ef4:	........Y...r...
   17f04:	V.........2.....
   17f14:	..\.l./.p.!...".
   17f24:	y.......+.t.*...
   17f34:	....?.......a...
   17f44:	r.........&.....
   17f54:	................
   17f64:	......=.%.0.D.^.
   17f74:	!...../.........
   17f84:	......P.......].
   17f94:	M.<.8._.......E.
   17fa4:	..W...A.........
   17fb4:	..........%.k._.
   17fc4:	+.F.=.8.........
   17fd4:	z.........?.M.x.
   17fe4:	.. .............
   17ff4:	........M.......
   18004:	".....\.....<.E.
   18014:	....:.o.........
   18024:	..............k.
   18034:	..|...8.........
   18044:	....*.....O.K.#.
   18054:	#.......Z.......
   18064:	\.C...r.E...`.E.
   18074:	................
   18084:	..P.X.L.P.#.....
   18094:	..........{.....
   180a4:	(.&.Q...........
   180b4:	..........#.*...
   180c4:	|.!.....r.......
   180d4:	....H.S.....Y.F.
   180e4:	................
   180f4:	 .|.'...g.%.....
   18104:	q.........A.3.O.
   18114:	?.....*.........
   18124:	........\...?...
   18134:	..K.?...........
   18144:	....^.7.Z.`.....
   18154:	K.............9.
   18164:	..4. .......(.9.
   18174:	......]...x...8.
   18184:	..2.+...........
   18194:	........J.&.E.3.
   181a4:	................
   181b4:	..&...".s.\.....
   181c4:	..:...G.........
   181d4:	b.M.+...........
   181e4:	........M.9...J.
   181f4:	".E.<.........!.
   18204:	......!.M.*.J.Y.
   18214:	................
   18224:	....K.....K.....
   18234:	..........8.8...
   18244:	..J.L.?.........
   18254:	....'.....n.%...
   18264:	..9.8.*.....)...
   18274:	....#.....O...M.
   18284:	....>...v.*.....
   18294:	..M.K.T.....+...
   182a4:	..........&.....
   182b4:	....!.&.....f...
   182c4:	............Q.^.
   182d4:	....&.......x...
   182e4:	..../.4...g.E...
   182f4:	................
   18304:	....'.....D.=.1.
   18314:	............v...
   18324:	..*.`.7.........
   18334:	........E...3.P.
   18344:	..0.............
   18354:	......8...&.,...
   18364:	&...............
   18374:	..D...&. ...M...
   18384:	..............?.
   18394:	........3.......
   183a4:	....!.....*.....
   183b4:	................
   183c4:	........f.......
   183d4:	................
   183e4:	....<.V.........
   183f4:	........!.....F.
   18404:	4.........&.....
   18414:	?.....3.....J...
   18424:	..J.............
   18434:	..4.....G.......
   18444:	................
   18454:	..9.....'.......
   18464:	.......... .....
   18474:	4.%.!...........
   18484:	............(...
   18494:	................
   184a4:	........G.......
   184b4:	..............'.
   184c4:	....T...........
   184d4:	..........).....
   184e4:	................
   184f4:	............/.).
   18504:	................
   18514:	..<...2.....'...
   18524:	.......... .....
   18534:	..........%.....
   18544:	..............:.
   18554:	................
   18564:	..............9.
   18574:	................
   18584:	........!. .....
   18594:	................
   185a4:	..7.............
   185b4:	................
   185c4:	....!...........
   185d4:	.... .....0.....
   185e4:	................
   185f4:	....*.......!. .
   18604:	....!...........
   18614:	......*.........
   18624:	............;.(.
   18634:	................
   18644:	..............0.
   18654:	................
   18664:	........#. .....
   18674:	..............!.
   18684:	!.......&.....!.
   18694:	..............5.
   186a4:	................
   186b4:	........!...*.*.
   186c4:	........&.......
   186d4:	................
   186e4:	..............&.
   186f4:	....7...........
   18704:	................
   18714:	................
   18724:	............*...
   18734:	................
   18744:	........&.......
   18754:	............ ...
   18764:	../.....#.......
   18774:	........4.......
   18784:	.. .............
   18794:	................
   187a4:	................
	...

000188a4 <sample_22_standard_DRUMS_vibraloop>:
   188a4:	......,...[.{...
   188b4:	..........|.....
   188c4:	h.V.....8.......
   188d4:	X.v...........[.
   188e4:	{!)..!..P.......
   188f4:	........J...)...
   18904:	..h...X.S.......
   18914:	..s...........;.
   18924:	*.x.........{...
   18934:	......{.,.......
   18944:	)...../.4.o.4...
   18954:	..Z.......r...(.
   18964:	............@.g.
   18974:	e...P.;.........
   18984:	....L"..7<1.....
   18994:	...,e....... ...
   189a4:	....p#..l...a...
   189b4:	........h.....h.
   189c4:	..($...<..-;..$D
   189d4:	..;...........u.
   189e4:	....#.t.b..L....
   189f4:	r....+y.d,P...?.
   18a04:	..<...........v.
   18a14:	......Z.....e.#.
   18a24:	. r.g.U.R.\.....
   18a34:	s...e...N$..0.R.
   18a44:	..<.......A.\*..
   18a54:	..q...;.V.......
   18a64:	^.[...2.........
   18a74:	g.z.............
   18a84:	C.C.<.[.........
   18a94:	........F.2.1...
   18aa4:	..{...U.......Y.
   18ab4:	......K.b.......
   18ac4:	N.....S.........
   18ad4:	.......2..O0@...
   18ae4:	....S....)...FG.
   18af4:	6KN........"...M
   18b04:	3.<......$...1{.
   18b14:	-.......e.A4..|.
   18b24:	..6..%...Ks.....
   18b34:	....L._..#......
   18b44:	..............h.
   18b54:	....0.l.........
   18b64:	........Q.p.....
   18b74:	..J.............
   18b84:	..W.....x.4.H...
   18b94:	Q...`.....f.".x.
   18ba4:	......~."...7.w.
   18bb4:	..1.....}...I.|.
   18bc4:	..T...>...5.....
   18bd4:	......r...^.....
   18be4:	........F.......
   18bf4:	....b.......,...
   18c04:	....x.2.'.....m.
   18c14:	q._.d.....=...8.
   18c24:	..a.`...3.......
   18c34:	j.%...4.. L.TL\.
   18c44:	8@.....)....o...
   18c54:	......g...T.k...
   18c64:	F..X......U....5
   18c74:	..7.'....&...,..
   18c84:	........N.".m!..
   18c94:	.........._.C.g.
   18ca4:	......g.l+......
   18cb4:	.......&../.D...
   18cc4:	................
   18cd4:	..4#..k.........
   18ce4:	......I.........
   18cf4:	..s...E...[.....
   18d04:	d.....Q.....Z.L.
   18d14:	..D.".......S...
   18d24:	........Z. .....
   18d34:	........c.......
   18d44:	6.U.........4...
   18d54:	....c.....9.....
   18d64:	I...........-.'.
   18d74:	........u%...'].
   18d84:	.......&%.. ....
   18d94:	..L...P..V....7.
   18da4:	..N.r.9.....w'..
   18db4:	.:....x....w..5i
   18dc4:	..#...|..k...`..
   18dd4:	&A-.%..........I
   18de4:	...<...#..k...n.
   18df4:	.A..O(...#.....@
   18e04:	....3..'..m&..a.
   18e14:	..[.L(+.5.m.X...
   18e24:	....Q...... B...
   18e34:	..1.6.........).
   18e44:	......V.....K.;.
   18e54:	L.=...6...g...(.
   18e64:	H...>...s...q...
   18e74:	....P.....O.N.T.
   18e84:	>...9.....p.....
   18e94:	..............h.
   18ea4:	'.........z...X.
   18eb4:	g.............z.
   18ec4:	v...............
	...

000190a4 <sample_13_standard_DRUMS_floortombrite>:
   190a4:	.....Y.i.B.SUTz;
   190b4:	.X..Yr..`.*CF.+.
   190c4:	....L.[...L.f.L.
   190d4:	....g.9...k.L...
   190e4:	4...5.t!....^..(
   190f4:	s..6...:\..l.6..
   19104:	.]B35E.K./h..?0T
   19114:	.C..*n.?...:.6..
   19124:	......E>..;..2..
   19134:	... ;N.....M.1%.
   19144:	.a..Z.6Q......x 
   19154:	.&..6..W......{.
   19164:	....p.I...L.....
   19174:	N.K.{...]...M...
   19184:	9...........<...
   19194:	..0.f...... ...5
   191a4:	((k [..4.g...2.?
   191b4:	.D.,.'.=.C.&?=w.
   191c4:	k.ZN..61.......)
   191d4:	&$.......$...8..
   191e4:	+%.>............
   191f4:	n.U......._.....
   19204:	........G.T.....
   19214:	......6...e...4.
   19224:	-.L...p.....d...
   19234:	d.`...u...|./...
   19244:	1.......`..'/.{.
   19254:	.....@.(h6.04CA%
   19264:	.2.Y>"0F.5.=>...
   19274:	.1..O/L7z.. U2..
   19284:	.+..2....;.....1
   19294:	.$......p.U.....
   192a4:	......f...].....
   192b4:	..q...v.....`. .
   192c4:	G.L.W.+.......Y.
   192d4:	F.g.T.R...^...w.
   192e4:	..j...O.).....C.
   192f4:	..a...........C.
   19304:	y.....T.F..7r.['
   19314:	.%.M.8.-.\./.GY>
   19324:	.C6?.0XG.&.?d%.4
   19334:	_..*./.6....O...
   19344:	:..8..3.....F#Y.
   19354:	......<.....W...
   19364:	..R.....,.......
   19374:	....v...X...m...
   19384:	\.!.~.....W.l.>.
   19394:	....q...q.C.c...
   193a4:	....T.....3....9
   193b4:	y.~.,...3....!..
   193c4:	.0l......'.../.H
   193d4:	=..:hF.2.;qDy[.8
   193e4:	_$(M.Pl-.$.@{-.(
   193f4:	TL...(.%C&.....)
   19404:	..4.............
   19414:	f.P...R...g...4.
   19424:	..........N.....
   19434:	r...............
   19444:	.. .G.......7...
   19454:	}.........O.<...
   19464:	..-.y...%...@...
   19474:	..."..$...w....#
   19484:	.&."c4.F$:.2.0fC
   19494:	.2.H.G.,.>V17..A
   194a4:	.X.#.&{F.'...E.0
   194b4:	...14)..O"......
   194c4:	R.U.5...).....4.
   194d4:	4...w.".........
   194e4:	..z.....I.4.7.e.
   194f4:	................
   19504:	A.e.v...)...S...
   19514:	f.......c...d.?.
   19524:	....K...........
   19534:	.../.....-. z.F8
   19544:	.B.).@.A58.J.AoJ
   19554:	.G.A.<.9.4 <"6h$
   19564:	|-G2..z$)..)|...
   19574:	e...5.,.......{.
   19584:	..=.<.V.C.......
   19594:	 .u.....N.......
   195a4:	..+.....2...;...
   195b4:	..W.1...........
   195c4:	P.[.X.....z.N.0.
   195d4:	R...............
   195e4:	........~.V.....
   195f4:	(...i...;....9..
   19604:	[.o&.2./@6.3IC.H
   19614:	|4.Ql8.;&GG<.6>1
   19624:	.0.*.4.0.4X(.&.)
   19634:	..Q.....z.......
   19644:	'........ '...q.
   19654:	..G.>.L.`.......
   19664:	....?.^.........
   19674:	..L...8.......S.
   19684:	5.T.....+.0.....
   19694:	`.........&...C.
   196a4:	..............U.
   196b4:	..F.5.z...V.....
   196c4:	..p.....o0o...V,
   196d4:	s+.-.5.1h;.F.6.@
   196e4:	.>$5M3.F::...0.4
   196f4:	.*.+.1.*>&.'% ..
   19704:	%.m.......s.....
   19714:	j.........x.^.B.
   19724:	c.c.*...........
   19734:	3....._.e...;...
   19744:	....J.'.'.h...%.
   19754:	*...H.L.V...C.-.
   19764:	..e...j.........
   19774:	....;...........
   19784:	......].W.4.1...
   19794:	..&1....N&.'M.D.
   197a4:	."!!./. ..w .)R!
   197b4:	.%.*.$k.a,.1.&V*
   197c4:	.&R%./.).#.!..J"
   197d4:	......Q.-.G.e...
   197e4:	....[.U.........
   197f4:	-...)...>.J. . .
   19804:	<.........O...`.
   19814:	c.Y.V.[.6.>...G.
   19824:	}.\.....p.......
   19834:	D...2.4...*.....
   19844:	....y...G.......
   19854:	..j.........H...
   19864:	s.8.T.. .....(.%
   19874:	.#.*.$.).-.+.*.2
   19884:	_%...&b+.'.$..J.
   19894:	.*.....!"$4.D...
   198a4:	.(.'p....#...(.!
   198b4:	|!Q J.........=.
   198c4:	..?.N.....B.y...
   198d4:	......R.......8.
   198e4:	<...].:.....n...
   198f4:	................
   19904:	:.Q.v.}.......[.
   19914:	~.X.f.5...i.c...
   19924:	l.*.#.3.'.....}.
   19934:	V.......+.......
   19944:	.'.)Y)p,.(z0g,`/
   19954:	.-.-...+E,.%F+..
   19964:	...#.(.#....;%4.
   19974:	).. .$/.B.0%....
   19984:	........F.....W.
   19994:	....(.i.F.....-.
   199a4:	?...4...A.....;.
   199b4:	..>.......f.D.W.
   199c4:	..M...b....._.M.
   199d4:	............6...
   199e4:	 .......H.......
   199f4:	..:.....9...D.`.
   19a04:	!.....x...q.....
   19a14:	!...<.*...v .%.(
   19a24:	.+.../b:#4.3./"8
   19a34:	.;.5.3|5.9.,U2r.
   19a44:	Y/.*.)7)(%.$. 8!
   19a54:	."W.!.c...).K.t.
   19a64:	................
   19a74:	B...............
   19a84:	L...........k...
   19a94:	c.&.3.q.....n...
   19aa4:	....x.].D.l.z...
   19ab4:	i.......8.....J.
   19ac4:	..'.......9.l...
   19ad4:	..}...W.E...l...
   19ae4:	3.*.....n.x"."]"
   19af4:	."..~*.#.,.3{*.*
   19b04:	d4.7.0Y/.1.6.>.8
   19b14:	b:.?X:.5.4[0"1./
   19b24:	m-.,E&.%.! ". &.
   19b34:	................
   19b44:	....)...".....O.
   19b54:	......{...<.B...
   19b64:	....0.4.<...K...
   19b74:	p.......Y.].K.?.
   19b84:	..E...!.`...L.P.
   19b94:	B.....{..._.[.:.
   19ba4:	..[.n..._...+...
   19bb4:	d.......U.X.....
   19bc4:	h.4..&.(B+s/.1.3
   19bd4:	.5{/.0s1.0.2.3.4
   19be4:	.5Q0c2.4.4.5.9U2
   19bf4:	.1.5.2./.1.3./<*
   19c04:	N)D'.#..........
   19c14:	5.>.%.?.-...r.Q.
   19c24:	........,.......
   19c34:	..$...........G.
   19c44:	..<.5.a...r.....
   19c54:	E.....G.....$.i.
   19c64:	..d.8.].B..... .
   19c74:	......F...X.....
   19c84:	)...'.A.6.V...~.
   19c94:	..........D!.$."
   19ca4:	.&.).1n3.6.8.9!=
   19cb4:	V<4=\>h<S:h7i;.<
   19cc4:	.5./u2./.)&(.,f'
   19cd4:	.$.). =.... ....
   19ce4:	..M.|...b..... .
   19cf4:	....>.....J.....
   19d04:	......x.o.^.J...
   19d14:	..&.e...........
   19d24:	l.......G.....q.
   19d34:	................
   19d44:	D...............
   19d54:	z. .)...+.X...!.
   19d64:	......r.v.......
   19d74:	....)..".%L%.&H+
   19d84:	.0.0c..0.3.8*9.8
   19d94:	.:.8.;.;.<A<.:.:
   19da4:	.7l2.1..l-u)b'. 
   19db4:	.!.%\...{...h...
   19dc4:	../.......T.]./.
   19dd4:	}...x...c./.....
   19de4:	..........%...^.
   19df4:	2.N...8.....d...
   19e04:	9.d.{.....(.6...
   19e14:	..p.i...........
   19e24:	b.3...r...9.....
   19e34:	....S.}.......:.
   19e44:	..L.2...:.G...9.
   19e54:	D.Y!k%.&.%.*;-.-
   19e64:	A.3/./30.4.7.9n:
   19e74:	.:.7.8.6.436.9.7
   19e84:	./.-.0././#-x'@$
   19e94:	.$..S.....e...\.
   19ea4:	G.[.....v...C...
   19eb4:	..8.X.....6...q.
   19ec4:	..K.......X.....
   19ed4:	p.......U.......
   19ee4:	..%.)...J.......
   19ef4:	..F...H...I.....
   19f04:	'.....R.........
   19f14:	y...9...........
   19f24:	......".........
   19f34:	...#.%.*.,./>0.1
   19f44:	.2.2.3.5.3.4d5z3
   19f54:	r6.6.0>0.3.2.1u2
   19f64:	.,...1...+.+.'.%
   19f74:	.$.$.#....q.....
   19f84:	......+.I.......
   19f94:	......T...,.....
   19fa4:	|...g...m.......
   19fb4:	....f...K.......
   19fc4:	S.~...b.d.......
   19fd4:	..I.G.........g.
   19fe4:	%.....g...0...G.
   19ff4:	....I.:.........
   1a004:	..,...}.+.q.....
   1a014:	d!X&:(.*4,&.00.1
   1a024:	.1.3h8M8.5.5.5g7
   1a034:	G7C6`4p3.6.3n16-
   1a044:	k+.-.*>%.#."....
   1a054:	..|.....L.$.....
   1a064:	..".1...+.`...[.
   1a074:	....o...#.{. ...
   1a084:	..+.4...9.G.....
   1a094:	X........._.....
   1a0a4:	c.I...........A.
   1a0b4:	..Z.t...a.V...j.
   1a0c4:	..6.............
   1a0d4:	....(.x..._...h.
   1a0e4:	......`.........
   1a0f4:	.!<#K%.&.).,.-[/
   1a104:	.0\3.5.5.4.7o7.8
   1a114:	.:.:.676_4`2.3.4
   1a124:	.2.,.*>(.'.'.$. 
   1a134:	..f...........M.
   1a144:	..............&.
   1a154:	{.I.............
   1a164:	&...X...5.......
   1a174:	_.;.....}.d.....
   1a184:	..-.....\.M.....
   1a194:	*.".........j.@.
   1a1a4:	..?...(...m.G...
   1a1b4:	................
   1a1c4:	g...0.;.........
   1a1d4:	... ."A&.).,.,..
   1a1e4:	.-.-x0l1.3.6.7g8
   1a1f4:	.8.6.7+9.:.8.6.4
   1a204:	|4D4.0..1,.).(.(
   1a214:	.$/.......'.....
   1a224:	b.w...6.*.Y.=.v.
   1a234:	i...I.....(.....
   1a244:	/.........R.E...
   1a254:	`.5.=.....~...p.
   1a264:	....=.....!.....
   1a274:	..;.........n...
   1a284:	........l.j.....
   1a294:	..-.>...?.!.....
   1a2a4:	..t.....D.s.*...
   1a2b4:	... .".%v'.).+P,
   1a2c4:	=/.1.1.0I1.1.1c2
   1a2d4:	.2.2.214.3.2.0i/
   1a2e4:	J/h0.1.0.-.-.-h.
   1a2f4:	Y.S,`).&.#.!. 2.
   1a304:	0.|.e.....).....
   1a314:	P.h.T.....5.....
   1a324:	........O.>...r.
   1a334:	....+...$...7.w.
   1a344:	....'...s.Z.....
   1a354:	1.....).....R.\.
   1a364:	..;...\.....y...
   1a374:	.... ...:.x.V...
   1a384:	..../...5.M.+...
   1a394:	..^...q....!.$.(
   1a3a4:	.(.*1,.-...0.113
   1a3b4:	.4.5n535.4.5.5.5
   1a3c4:	y4.2L2.2:3.1./Y+
   1a3d4:	S*.(.'.%}#."....
   1a3e4:	......X...O.T...
   1a3f4:	{.[.y.m.........
   1a404:	......0.w...;.w.
   1a414:	6.....H.U.......
   1a424:	....\...l..... .
   1a434:	T...........$...
   1a444:	..l...w...$...~.
   1a454:	l...X.L.......L.
   1a464:	v.....|.....b...
   1a474:	....).K...j.... 
   1a484:	z$q&.(|*.,s/.1.2
   1a494:	i3.4.4.4)6F7p8.8
   1a4a4:	<8.7u7 6.4$3.0J/
   1a4b4:	L-.+.)&(_%U"~.h.
   1a4c4:	........"...K...
   1a4d4:	......a...3...".
   1a4e4:	..S...&.......}.
   1a4f4:	..r.....&.k.....
   1a504:	..........s.C...
   1a514:	........x.......
   1a524:	f.-.....,...y...
   1a534:	@...1.E.Y...@.F.
   1a544:	..........p.....
   1a554:	m...:.1.....\...
   1a564:	u.... ."?&.(Z).*
   1a574:	.-|. /.0.2.4n7.8
   1a584:	.8.:m:.:.:S:O857
   1a594:	.5.3.1...,.+^+.*
   1a5a4:	.'.$.#+!..i.E...
   1a5b4:	....z.$.......'.
   1a5c4:	..`.........H...
   1a5d4:	Q...I...+.3...v.
   1a5e4:	t.....^.M.a.]...
   1a5f4:	..c.$.....<.5.h.
   1a604:	..............t.
   1a614:	..c...n.........
   1a624:	..?.O.3.....8.".
   1a634:	......F.+.A.....
   1a644:	..7.$.F.#.Q!.$I'
   1a654:	.+.-t/.0.0.1.2.4
   1a664:	.6.6.6.7.6=6.6d6
   1a674:	.5.5?3s1.0....(-
   1a684:	?,.+.*.).'d%.". 
   1a694:	..|.l.....d...X.
   1a6a4:	\.........x.....
   1a6b4:	....F...Z.$.A...
   1a6c4:	1.....;.....I...
   1a6d4:	T.5.....X.T...e.
   1a6e4:	......L.........
   1a6f4:	#...b.".5.`.M...
   1a704:	g...........d...
   1a714:	..&.......E.....
   1a724:	......o.8.f.Y.~"
   1a734:	{%g'.(.*(,-/.1.1
   1a744:	.1>2t2.2.2.3.3<4
   1a754:	.4(3Q2.1.1=1.0./
   1a764:	.....-.,),.+.).(
   1a774:	.&.$F"......M.6.
   1a784:	..d.D...T.J...n.
   1a794:	....A...f...f.T.
   1a7a4:	0...0.....<.....
   1a7b4:	..J.....K.....].
   1a7c4:	=...F...../.....
   1a7d4:	u.....B.......G.
   1a7e4:	A...E.....l.....
   1a7f4:	l.....I...b.....
   1a804:	 ...3.s.V.......
   1a814:	K....._.."`%3'.)
   1a824:	.+...0.2.3.5.7<8
   1a834:	.8.8.7.6x6.5.5U4
   1a844:	?4.3.2.1./...,.*
   1a854:	.(.&.$.#$". ..~.
   1a864:	1.I.............
   1a874:	......s.......J.
   1a884:	".w.&...].N.u.E.
   1a894:	v.D.6...e.......
   1a8a4:	..7.......;.....
   1a8b4:	....8.x.......(.
   1a8c4:	....l......."...
   1a8d4:	..,...V.I.....i.
   1a8e4:	*.N.p.........].
   1a8f4:	$.k.......>.....
   1a904:	.!.$.'d(.).*.,t/
   1a914:	.1.3.6.7.8.9$:i:
   1a924:	.;.;.:.9.8.5.4.4
   1a934:	`3L2.0...-.*.(.&
   1a944:	Z$.!......L.....
   1a954:	..r.....b...9.+.
   1a964:	..,.[...+.....%.
   1a974:	@.........z.....
   1a984:	..P...S.........
   1a994:	m.......l...)...
   1a9a4:	B...............
   1a9b4:	....O...@.F.....
   1a9c4:	r.[.A.$.V.J.T.0.
   1a9d4:	....|.....a.....
   1a9e4:	M.5...a...J".$9&
   1a9f4:	)(.).*?,3../.1.3
   1aa04:	.5.6'7.7.7{8.8.8
   1aa14:	.8p8.8.7:6.4.2.0
   1aa24:	.. -l+l)m'z%.#.!
   1aa34:	..F.........]...
   1aa44:	....r...G.<...f.
   1aa54:	..S.e.N.....A...
   1aa64:	..8...k.:.3.y.R.
   1aa74:	a.t.....x.?.I...
   1aa84:	..............9.
   1aa94:	................
   1aaa4:	......\.........
   1aab4:	..........Y...e.
   1aac4:	......[.......$ 
   1aad4:	.!.#B%('.).*Q,%.
   1aae4:	./.1.2.3$4*4.3.4
   1aaf4:	#4.4]4.4.4v4.4n3
   1ab04:	.2.2h05/~-R,.+.)
   1ab14:	.(]''&h$S". ....
   1ab24:	..i.\.....8.x...
   1ab34:	......,...|.9...
   1ab44:	......Q.6.y...t.
   1ab54:	......f.~...=.*.
   1ab64:	E...#.&.}.......
   1ab74:	......{.......".
   1ab84:	........%...7...
   1ab94:	x.#.+.......4.P.
   1aba4:	v.....(...x.....
   1abb4:	......i...s t#I&
   1abc4:	.(&+e--/c1E3z4.5
   1abd4:	.6.7Y9.:?:.9.8.7
   1abe4:	.6.5|4J3.1.1./..
   1abf4:	.,^+.)6(.&.$.#.!
   1ac04:	q ..............
   1ac14:	O.....Z.".......
   1ac24:	....}.....2.{...
   1ac34:	+...s...v...K...
   1ac44:	].p.......a.U.L.
   1ac54:	J...}.......>...
   1ac64:	Z.?.}._.x."...j.
   1ac74:	................
   1ac84:	$...-...........
   1ac94:	>.......W.......
   1aca4:	b...r..!y#.%P(.*
   1acb4:	6-*0.2T4.5'7.7c8
   1acc4:	.9.9!9&9.9.8.8.8
   1acd4:	'8.7.6|5.3.140..
   1ace4:	.+O).&[$."U...K.
   1acf4:	..........w...i.
   1ad04:	..Q.v...=.....-.
   1ad14:	......W.;...7.-.
   1ad24:	7.......).......
   1ad34:	H............._.
   1ad44:	....6.......%.n.
   1ad54:	................
   1ad64:	......z...|.;...
   1ad74:	..........O.n...
   1ad84:	........A.......
   1ad94:	..[ .".%p(.*u-./
   1ada4:	.1\2.3.4k506q6.6
   1adb4:	.7.7i8.8.8.8c8r7
   1adc4:	u6.4.3x1./.-s+3)
   1add4:	O'.%.#.!}.....?.
   1ade4:	>...............
   1adf4:	^.H.$.....3.....
   1ae04:	......j.*.......
   1ae14:	..l...A.V.......
   1ae24:	<.c.^.....L.....
   1ae34:	................
   1ae44:	....o...........
   1ae54:	............A...
   1ae64:	].....0.....+...
   1ae74:	..........x E#.%
   1ae84:	+(/*.+X-.../.0{1
   1ae94:	.1.2x2k2.2.3.3h4
   1aea4:	.4.4.4.4.3.2.1.0
   1aeb4:	./~.,-.+.).(f&b$
   1aec4:	9"< ..........W.
   1aed4:	..H.\.;.A.i.u...
   1aee4:	.... .....b.K...
   1aef4:	..?.|...t.......
   1af04:	S.c.....a.3...(.
   1af14:	....=. .R.......
   1af24:	4...-.@.....(...
   1af34:	..^.........../.
   1af44:	w.1.7.L.j.......
   1af54:	S...<.l.....j.C.
   1af64:	..x...< ."_%.'3*
   1af74:	a,j.S0.2.3^5.6W7
   1af84:	u7.7.7(7.6r6.5.5
   1af94:	H4?3.1.0}/...,.+
   1afa4:	.)7(.&.%>#!!%...
   1afb4:	............`.x.
   1afc4:	@.!.....y...g...
   1afd4:	....].....d.....
   1afe4:	..5.......6.....
   1aff4:	D.}...,..... .g.
   1b004:	..t.,."...|.k...
   1b014:	..$...L.%.......
   1b024:	....".....I.E...
   1b034:	....-.......2...
   1b044:	....8.K.1.......
   1b054:	.....".%p(.*.,..
   1b064:	.0^1.2.3.5.5.6O7
   1b074:	k7h7B7q7.7.7.7[6
   1b084:	q554.2+1[/q-.+.)
   1b094:	.'.%.#.!..{.(...
   1b0a4:	..]...#.....E...
   1b0b4:	".............1.
   1b0c4:	........u.x.F...
   1b0d4:	&...........{...
   1b0e4:	V.....=.j...N...
   1b0f4:	..Q.E.F.......~.
   1b104:	......x.#.(.M...
   1b114:	..w...........1.
   1b124:	..........C.#.$.
   1b134:	........R.....=.
   1b144:	...!J$#&.(.)p+2-
   1b154:	...0c2.4.5!7.8.8
   1b164:	.9.8.8(8K7.6>6.5
   1b174:	.463.1.0 ..,.).'
   1b184:	.%i"..6.........
   1b194:	Q.....J.x.......
   1b1a4:	..H.........g...
   1b1b4:	....I...R.......
   1b1c4:	9.c.....,.......
   1b1d4:	....q.*.........
   1b1e4:	D...X.....Q...@.
   1b1f4:	....`...........
   1b204:	g.............'.
   1b214:	....|.'.{.f.b.[.
   1b224:	b.n.=.......e .#
   1b234:	.%.'.*.+.-m/.0&2
   1b244:	.2.3{4.4.4/5.5.5
   1b254:	.4-4.3.2.201J0,/
   1b264:	.-.,^+.*.(I'.%.$
   1b274:	A"` Q.+.....@...
   1b284:	..A.......N.v.'.
   1b294:	..8.....5.......
   1b2a4:	Y.{...=.....9...
   1b2b4:	....%.........a.
   1b2c4:	..v.".........).
   1b2d4:	..I.........4...
   1b2e4:	....g.|.....0...
   1b2f4:	+.z.....?.......
   1b304:	....s...w.V.l.^.
   1b314:	[.g.G.....A".$.&
   1b324:	.(.*u,.-B/f0.1.2
   1b334:	i3.4.4.4.4.4.4.4
   1b344:	04.3.3D261.0..?-
   1b354:	.+Y*.(.'.%.#. ..
   1b364:	....a.H.2.......
   1b374:	k.J...m. .......
   1b384:	0.....>.......L.
   1b394:	..~.,...........
   1b3a4:	x...=.....s.....
   1b3b4:	t.M.....Y.......
   1b3c4:	..Q.U.^.........
   1b3d4:	j.9.>.D.1.Q.....
   1b3e4:	q...[...s.4.....
   1b3f4:	............h.-.
   1b404:	....J...b!.#9&J(
   1b414:	g*b,R../M1.2d3e4
   1b424:	/5.5.5.6.5.5.4.4
   1b434:	n3.2.1.0./B..,.*
   1b444:	.)3'G%.#.!q.@...
   1b454:	v.y.......C.B.8.
   1b464:	........t...v...
   1b474:	..".....J.*.....
   1b484:	1.Z.....M.....z.
   1b494:	..o......... ...
   1b4a4:	)...........Q.'.
   1b4b4:	9.n.....g.......
   1b4c4:	....0.......+...
   1b4d4:	..h.4.......i.!.
   1b4e4:	........p.......
   1b4f4:	....;.M!-#.%.&A(
   1b504:	.)U+.,..|/.0.1.2
   1b514:	u3.3_4e4.4.353.2
   1b524:	.1.1$0./...-.+M*
   1b534:	.(.'6%a#.!/...A.
   1b544:	m.....8.........
   1b554:	..[.......3.....
   1b564:	..I.5.......e.(.
   1b574:	....{.x...&.....
   1b584:	..............z.
   1b594:	@...7...4.......
   1b5a4:	n.........O.....
   1b5b4:	....:.....p.)...
   1b5c4:	..p.B.M.(.V.)...
   1b5d4:	....~.L.......3.
   1b5e4:	..] .".$.&.(.)L+
   1b5f4:	I,\-P.'/.0.0V1.1
   1b604:	,2=2B2.2.1.1Q1.0
   1b614:	./...-c,.*.)C(.&
   1b624:	.$G#k!......E.I.
   1b634:	....{.........y.
   1b644:	A...l.......O...
   1b654:	 ...}.E.$...(.D.
   1b664:	_.....D...E.....
   1b674:	..........m.G...
   1b684:	........H...6...
   1b694:	#.w.............
   1b6a4:	........r...K...
   1b6b4:	].....1.....s...
   1b6c4:	....~.|.Z.......
   1b6d4:	A..!.#.&!(.*.+.-
   1b6e4:	q.s/Z091.1?2.2.2
   1b6f4:	p2@2.1B1.0.0././
   1b704:	=.t-e,@+.)X(.&.$
   1b714:	$#Y!l.........v.
   1b724:	5...v...c...]...
   1b734:	z...........8...
   1b744:	..P.8...........
   1b754:	G.........k.....
   1b764:	K.A.5...........
   1b774:	<.....Y.@.<.<.w.
   1b784:	......r.&.....L.
   1b794:	..........>...:.
   1b7a4:	..v...|...l.....
   1b7b4:	g.M.....5.......
   1b7c4:	.....".#.%.'.)o+
   1b7d4:	.,n../.0.2.2b3.3
   1b7e4:	.3.3`3.2.2V1j0*/
   1b7f4:	.-.,U+.).(.&.%.#
   1b804:	.!>.O.q.s.x.o.Z.
   1b814:	......5.....5...
   1b824:	....s.T.......i.
   1b834:	..`.............
   1b844:	>. .............
   1b854:	..6.D.|...}.d...
   1b864:	..>...J.........
   1b874:	....R.......#...
   1b884:	..%.......".a...
   1b894:	F......."...k...
   1b8a4:	b...>.........).
   1b8b4:	..( .".$.%.'B).*
   1b8c4:	.+.,.-a.././.0.0
   1b8d4:	.0.1.0.0n0././..
   1b8e4:	.,.+.*y($'n%.#'"
   1b8f4:	. Y.............
   1b904:	m.%...i.....:...
   1b914:	........w.>...e.
   1b924:	..............$.
   1b934:	~...e.......q.e.
   1b944:	C.r.....b.......
   1b954:	>....._.}.......
   1b964:	....a...e.......
   1b974:	......S.........
   1b984:	n.....}.......-.
   1b994:	..4...8.....X.q.
   1b9a4:	. \")$.%.'.(J*U+
   1b9b4:	j,1-.-~..../D/-/
   1b9c4:	./..}./..-.,a,.+
   1b9d4:	.*.).(.',&.$.#.!
   1b9e4:	..........d.u...
   1b9f4:	..............[.
   1ba04:	..u.&...........
   1ba14:	....].D.2...W...
   1ba24:	..X...z.6...<.d.
   1ba34:	..'...N.........
   1ba44:	.._.....D.8.F.C.
   1ba54:	l.......*.......
   1ba64:	....;...N.......
   1ba74:	g.v.`.r.4.A.2...
   1ba84:	..`.......h.....
   1ba94:	.!.#.%.'{)!+.,.-
   1baa4:	..j/./f0.0.0.0.0
   1bab4:	b0.0./?/...-!-D,
   1bac4:	D+.*.(.'.&.$O#.!
   1bad4:	. $.).....}./...
   1bae4:	..v.R.R.....A...
   1baf4:	@.r...z.).......
   1bb04:	........E.x.....
   1bb14:	..$...z.A.!.....
   1bb24:	T...&...p.B.0...
   1bb34:	].~.....U.4.J...
   1bb44:	....i.L.........
   1bb54:	....$.p...N.....
   1bb64:	b...:.......Y...
   1bb74:	a.).......o.....
   1bb84:	. .#:%.'.(o*.+.-
   1bb94:	I.`/h011.1.2.2,3
   1bba4:	 3.2.2.2.1.0./..
   1bbb4:	.-.+c*.(.&,%=#5!
   1bbc4:	[.......Q.k.8...
   1bbd4:	..7.........N...
   1bbe4:	....}...u....._.
   1bbf4:	..7...B.O.2.B.[.
   1bc04:	|...f...........
   1bc14:	P.....Y.@.-.a...
   1bc24:	....o.A.........
   1bc34:	'.......;.......
   1bc44:	#.r...z...j...w.
   1bc54:	....|.....y.....
   1bc64:	z.....>.........
   1bc74:	. X".#S%.&)(.).*
   1bc84:	.,4-".*/.0.0{1.1
   1bc94:	.2@2.2.1.1.0@0N/
   1bca4:	+..,w+.)](.&.$."
   1bcb4:	. ..........+...
   1bcc4:	....X.........2.
   1bcd4:	..^.....:.....d.
   1bce4:	............$.<.
   1bcf4:	}.....^.....l.h.
   1bd04:	....@.....U.R.].
   1bd14:	....^.........E.
   1bd24:	..P.............
   1bd34:	r.....W.......`.
   1bd44:	..........G...J.
   1bd54:	..#.....N.......
   1bd64:	*!/#.%.&.(f*.,[-
   1bd74:	.../.0'1.1.1#2#2
   1bd84:	.1y1.0w0./`/...-
   1bd94:	.-.,.*.)E(.&S%.#
   1bda4:	.!v. ...J.......
   1bdb4:	|.W./.....w.....
   1bdc4:	......r.G.D.].v.
   1bdd4:	d.t.9.$.........
   1bde4:	s.s.....0.......
   1bdf4:	....f...........
   1be04:	....^.....y.....
   1be14:	..........v.Z.I.
   1be24:	g.........L.....
   1be34:	..}.Y.)...z.u.K.
   1be44:	C.......i.....- 
   1be54:	W"z$T&.(.)L+.,=.
   1be64:	./.0.1.2`3.3.3.3
   1be74:	.3K3.272.1.1.06/
   1be84:	...,.+.*.(.&f%.#
   1be94:	.!" *. .....k...
   1bea4:	..........I.....
   1beb4:	..M...i.....w.X.
   1bec4:	0.......].;.V...
   1bed4:	..P.....i.I.B.a.
   1bee4:	....1.......u.k.
   1bef4:	k.....].%.......
   1bf04:	......D.......A.
   1bf14:	n.~.......T.....
   1bf24:	..E.......,.....
   1bf34:	..k.....C...t...
   1bf44:	.. "k$.&.(.*., .
   1bf54:	./.0.1.2.3S4.4.5
   1bf64:	.4.4.4@4.3.3R2.1
   1bf74:	g0F/.-Z,.*.(.&.$
   1bf84:	.". ..........F.
   1bf94:	....N.....%...q.
   1bfa4:	3.0...Z...|.....
   1bfb4:	4.../...z.......
   1bfc4:	..'...8.........
   1bfd4:	..R...S.........
   1bfe4:	..:...9.........
   1bff4:	+.~...b.......O.
   1c004:	......e.....y...
   1c014:	........K...w.u.
   1c024:	r.9.H.......A...
   1c034:	..D!8# %.'.(p*.+
   1c044:	A-.../.0.1.2b3.3
   1c054:	.4.4.3.3P3.2]2.1
   1c064:	.0./...--,.*.(/'
   1c074:	T%V#F!%.....d.'.
   1c084:	....P.......\...
   1c094:	..H...B.y...2...
   1c0a4:	....K.....e.R.#.
   1c0b4:	O.v...j.........
   1c0c4:	..........v.0...
   1c0d4:	........d.......
   1c0e4:	P...o.6.........
   1c0f4:	......*.......N.
   1c104:	....b...........
   1c114:	..c./.....:...J.
   1c124:	..C .".$.&.(f*.+
   1c134:	d-.../.0.1.2T3.3
   1c144:	V4v4.4A4.3V3.2.1
   1c154:	.0./X..,.+0*.(8'
   1c164:	.%.#L"{ ......S.
   1c174:	..........c.....
   1c184:	2.....:...n.....
   1c194:	6.....n._.>...$.
   1c1a4:	..'.I.....Y...S.
   1c1b4:	........5.....v.
   1c1c4:	......k.....;...
   1c1d4:	....q.....h.R.4.
   1c1e4:	".....&.6.]...6.
   1c1f4:	..].....d.....X.
   1c204:	w.w.[.i.*.....\.
   1c214:	..... M#.%.'.).+
   1c224:	,-.../.0.1.2.3.3
   1c234:	.3.3.4.3.3.363.2
   1c244:	.2V1k0J/<..,P+.)
   1c254:	.(.&.$.". ......
   1c264:	..-...'.....\...
   1c274:	........H...>...
   1c284:	....$.........|.
   1c294:	g...........~.[.
   1c2a4:	-.8.Y.....p.....
   1c2b4:	............K...
   1c2c4:	..........U.....
   1c2d4:	l.h.....G...x...
   1c2e4:	..f.(.....6...`.
   1c2f4:	....k.....r.....
   1c304:	1.}......!.$.%.'
   1c314:	.)>+.,D../.0.1.2
   1c324:	@3.3.3N4u4]4.4.4
   1c334:	e3.252B180...-.+
   1c344:	.*.(.&.$."......
   1c354:	........u.:.....
   1c364:	9.....].9.....i.
   1c374:	....X.....[...X.
   1c384:	,.....Q.....8...
   1c394:	............&.Z.
   1c3a4:	..i.....H...P...
   1c3b4:	&.....q.......K.
   1c3c4:	).!...../.=.q...
   1c3d4:	G.....m./.......
   1c3e4:	....o.#.....<...
   1c3f4:	..4...$.c!q#^%H'
   1c404:	.(.*.,~-.../.0.1
   1c414:	.2.2.2.3$3.3.2.2
   1c424:	22.1.1a0./..|-K,
   1c434:	.+.).'.&.#.!....
   1c444:	....z.R.;.......
   1c454:	L..._...F.:.z...
   1c464:	......1.....v.7.
   1c474:	(.+.........,.y.
   1c484:	..k.!.........'.
   1c494:	`.....Q...k.....
   1c4a4:	..........g.....
   1c4b4:	$.............[.
   1c4c4:	....M.......;.I.
   1c4d4:	f.).......T.C...
   1c4e4:	..].......,"Y$E&
   1c4f4:	$(.).+.,m../.0.2
   1c504:	.2.3S4.4.4.4.4v4
   1c514:	 4.3.2"2.1.0..`-
   1c524:	.+.*.(.&.$.".!..
   1c534:	....v.7.....x...
   1c544:	.... ...W.......
   1c554:	....t.U.........
   1c564:	..........1.Z...
   1c574:	..2...'.........
   1c584:	Z.....=.....@...
   1c594:	..n.........4...
   1c5a4:	....b...........
   1c5b4:	..).x...!...\.".
   1c5c4:	........V.[.?...
   1c5d4:	......_.&...r .#
   1c5e4:	`%.'.).+.-%/.0.1
   1c5f4:	-3.4.4x5.5.6.6.6
   1c604:	.5/5.4.4e3x2a1%0
   1c614:	..L-.+.*u(.&.$."
   1c624:	. ......S.....*.
   1c634:	y...m...........
   1c644:	..&.....`.....~.
   1c654:	l.a.D.......4.|.
   1c664:	................
   1c674:	a.........s.....
   1c684:	4...M...........
   1c694:	..Z.......m.....
   1c6a4:	....w...I...../.
   1c6b4:	....L.........I.
   1c6c4:	....3...i...{...
   1c6d4:	/ g".$.&.(y*.,.-
   1c6e4:	./d0.1t2b3.4.4.5
   1c6f4:	.5H5.4.4#4.3.2.1
   1c704:	.0./[..,.+.)G(.&
   1c714:	.$.". j.6.....M.
   1c724:	...._.......{...
   1c734:	B.....y.....d...
   1c744:	........$.......
   1c754:	...... ...b.Z.v.
   1c764:	..k.............
   1c774:	..T...Y.........
   1c784:	`...v.).....#.%.
   1c794:	g.....*.....1...
   1c7a4:	........".......
   1c7b4:	+...p.6.....<...
   1c7c4:	E.k .".$.&T(.)a+
   1c7d4:	.,..)/B0.1.122.2
   1c7e4:	.2.2.2.2.2.2.1.0
   1c7f4:	.0./.-.,.+A*.(.'
   1c804:	%&.$.".!........
   1c814:	U.....U....._.$.
   1c824:	..Z.....,.....P.
   1c834:	..G...).........
   1c844:	........&.}...i.
   1c854:	R.Q..."...d.....
   1c864:	......a...^.....
   1c874:	2.w...~.......P.
   1c884:	C.).^.....k...a.
   1c894:	..i...h.....}...
   1c8a4:	................
	...

0001caa4 <sample_27_standard_DRUMS_lowtumba>:
   1caa4:	............&...
   1cab4:	..^.J...........
   1cac4:	....V.........|.
   1cad4:	..B.......r....%
   1cae4:	Q"k(.).,.0.2.5.8
   1caf4:	P:U<.;.;.;.:.:.:
   1cb04:	.8.7N5.2./T,f'W!
   1cb14:	....m...........
   1cb24:	....4.......A...
   1cb34:	..#.y.Z.M.......
   1cb44:	..q.....i.5.....
   1cb54:	..}...}.....[...
   1cb64:	..... $+q4K=.F(M
   1cb74:	;T.\.`.f.k.o.t.s
   1cb84:	.q.q.o.mkl%k.iWh
   1cb94:	.g.ebd/b2X.O.E.:
   1cba4:	.0.#........y...
   1cbb4:	>.>...W...G...h.
   1cbc4:	........K.v.....
   1cbd4:	..3...".7...e.|.
   1cbe4:	..........%...W.
   1cbf4:	(.n.9......._!=-
   1cc04:	.8.C.MpWI`?hon{t
   1cc14:	.uSs.r.p.o.n.l2k
   1cc24:	.i.hPg.c.ZpSYJPA
   1cc34:	.7[..$..i.z._.k.
   1cc44:	 ...............
   1cc54:	G.....?.....b...
   1cc64:	P.0.c.a...y...,.
   1cc74:	........B.....).
   1cc84:	k.......`...5(e2
   1cc94:	.:.AuI.N.S.X.[.]
   1cca4:	.`hb>c.c.c.c.b.a
   1ccb4:	._.\.Z.V.R.N.I]D
   1ccc4:	.>.7&2.*1$......
   1ccd4:	..].....-...U.q.
   1cce4:	....d...P.j...T.
   1ccf4:	|.M.....L.......
   1cd04:	..P...*.......m.
   1cd14:	B.........d.....
   1cd24:	..$!%*.0.80?.E.K
   1cd34:	[P.U.X.\._.a~cNd
   1cd44:	.d,dscha._^\}X?T
   1cd54:	.O.IXC.<.5.,u$..
   1cd64:	....!.........s.
   1cd74:	..\.$.....n.../.
   1cd84:	C...........W...
   1cd94:	..c.............
   1cda4:	....}.../.6.c.4.
   1cdb4:	U....".'.,-1.4.9
   1cdc4:	D<5?.B.E.GhI.K.L
   1cdd4:	{N.NkO.O.N.NlL.J
   1cde4:	.F-C.>.9.4.-.', 
   1cdf4:	......S.........
   1ce04:	..............N.
   1ce14:	:.{.H.....{.....
   1ce24:	....].b.m.......
   1ce34:	......i...I...@.
   1ce44:	..........d .(.0
   1ce54:	.8>@.F.L8ReV.Y^\
   1ce64:	.]"^.].[.Y.V.R.M
   1ce74:	iH.B.<.6v/.(.!(.
   1ce84:	q...8.......$...
   1ce94:	....3.i..... ...
   1cea4:	..o.B...........
   1ceb4:	6.....\.......;.
   1cec4:	<.........r.c...
   1ced4:	..>.g...B......!
   1cee4:	{&5*.-.1H3.5.7.9
   1cef4:	{:g;8<s<.<.<.<.;
   1cf04:	>;.9.8.5.3.0.-.)
   1cf14:	.&.!..x.T.....V.
   1cf24:	............0...
   1cf34:	..6...U.........
   1cf44:	..H...!...z...3.
   1cf54:	..............-.
   1cf64:	,...H.....].`...
   1cf74:	.$.(.,.0.3.6.8.:
   1cf84:	.<.<.<.<.;.:.8.6
   1cf94:	.4:1.-.*4'@#..i.
   1cfa4:	..f.#.......h.K.
   1cfb4:	..X.F...\.......
   1cfc4:	h.%.....~.....P.
   1cfd4:	....x.....\.....
   1cfe4:	........O.......
   1cff4:	"...U...V...^...
   1d004:	s...J.u......".$
   1d014:	r'.)M,5../.0.2.2
   1d024:	.2.2d2i1.0\..,J)
   1d034:	.%V"..{...^...r.
   1d044:	..l...........f.
   1d054:	....'.>.....2.=.
   1d064:	............8...
   1d074:	..........6.K...
   1d084:	..<.W.........%.
   1d094:	9...%...r.... ."
   1d0a4:	.$.%.&.'.'.'.'.&
   1d0b4:	.&.$6#V!T...^...
   1d0c4:	................
   1d0d4:	!.b.............
   1d0e4:	......8.........
   1d0f4:	..g...4.....)...
   1d104:	Y...............
   1d114:	W.m...J.........
   1d124:	d...G.{...F.....
   1d134:	. .".#.$l%.%.%.%
   1d144:	6%P$.#+". ......
   1d154:	..r.........+...
   1d164:	..].............
   1d174:	..........b.u...
   1d184:	[.6.........$...
   1d194:	..............s.
   1d1a4:	V.......*...~...
   1d1b4:	L.......a...1.j.
   1d1c4:	8.......O.J.....
   1d1d4:	..:.......).y...
   1d1e4:	*.Y.h...........
   1d1f4:	..c...j.g.R.....
   1d204:	............+...
   1d214:	..6.............
   1d224:	].....a.J.X.....
   1d234:	................
   1d244:	O...a.....s...l.
   1d254:	....7.........[.
   1d264:	........?...../.
   1d274:	P.+.....Y...r...
   1d284:	o...?...H.......
   1d294:	..1...^.T.......
   1d2a4:	....S.....5...2.
   1d2b4:	..........*.[...
   1d2c4:	............J...
   1d2d4:	T.....7.q...n.f.
   1d2e4:	....d...8.L.`.>.
   1d2f4:	......6.\.R.....
   1d304:	<...............
   1d314:	f...@.;.\.I.....
   1d324:	u.:.......,...*.
   1d334:	......:...(.....
   1d344:	......d.....i.d.
   1d354:	u.......=.q.....
   1d364:	6.H.Z.8.-...Z...
   1d374:	..........(...=.
   1d384:	..a.=.....i.Q.%.
   1d394:	................
   1d3a4:	5...........]...
   1d3b4:	......,.........
   1d3c4:	........=.......
   1d3d4:	M.........}.Z.+.
   1d3e4:	......)...H.....
   1d3f4:	r.............g.
   1d404:	..q.....i.E.%...
   1d414:	..&.j.......Z...
   1d424:	W...............
   1d434:	....~.|.u.......
   1d444:	......z.q.....j.
   1d454:	......Z...W.C.'.
   1d464:	n...b.(...?.....
   1d474:	].....X.....z...
   1d484:	......#.........
   1d494:	..N.....>.......
   1d4a4:	....c.....s.2...
   1d4b4:	..<.....i.2.....
   1d4c4:	..0.y...A...p.9.
   1d4d4:	'.5.i.......y.M.
   1d4e4:	a...........{.p.
   1d4f4:	....c.......s.k.
   1d504:	r...............
   1d514:	..M.......L.m.~.
   1d524:	c.0...1.........
   1d534:	N...=.z...w.O...
   1d544:	S...........)...
   1d554:	]...E...@.....H.
   1d564:	8.<.x...q.;.2...
   1d574:	..........f.b...
   1d584:	9.......-.......
   1d594:	S.....H.......n.
   1d5a4:	........U.......
   1d5b4:	......@.B.......
   1d5c4:	E.@.0...q...C...
   1d5d4:	................
   1d5e4:	..........,.....
   1d5f4:	..+.........8...
   1d604:	9...............
   1d614:	..}.....7...v.(.
   1d624:	......,.D.n.....
   1d634:	....!.........<.
   1d644:	..".j.y.^.......
   1d654:	..............Z.
   1d664:	........5...$.u.
   1d674:	....R.......%...
   1d684:	........>./.]...
   1d694:	Q.3.=...........
   1d6a4:	..6...V.........
   1d6b4:	......".>.j.t...
   1d6c4:	..z...I.....4...
   1d6d4:	........@.......
   1d6e4:	..]...'.Q._.>...
   1d6f4:	....X...........
   1d704:	............(.e.
   1d714:	....v.....I.3.E.
   1d724:	:.....p.I...-.].
   1d734:	..h.....*.u.....
   1d744:	h.>.Q.x....._...
   1d754:	......*.T.o.n.5.
   1d764:	..q.........2.~.
   1d774:	....c...V.t...e.
   1d784:	........:.H.*...
   1d794:	....c.3.......P.
   1d7a4:	^.d.....4.....y.
   1d7b4:	....R...........
   1d7c4:	&.......,.......
   1d7d4:	..b.T.K.].j.....
   1d7e4:	........U.....-.
   1d7f4:	............7...
   1d804:	........}...r...
   1d814:	......s.......m.
   1d824:	................
   1d834:	..6.R.....%...A.
   1d844:	........D...j.N.
   1d854:	V.........w.....
   1d864:	q...............
   1d874:	..$.G.x.......e.
   1d884:	....T...........
   1d894:	..........a...K.
   1d8a4:	m.w.R.......m...
   1d8b4:	................
   1d8c4:	......4.......e.
   1d8d4:	X.Z.......L.).;.
   1d8e4:	r...P...........
   1d8f4:	..:.......E.....
   1d904:	@.....R.....D...
   1d914:	S...).o.........
   1d924:	T...r...........
   1d934:	............../.
   1d944:	..8.....7.y.....
   1d954:	..P.....+.......
   1d964:	5.........Q...B.
   1d974:	........`.....Q.
   1d984:	E.`.....u.......
   1d994:	J.8.............
   1d9a4:	b.....#.o.......
   1d9b4:	M...6.t...g.$...
   1d9c4:	&.o.......[.....
   1d9d4:	@...8.....^...=.
   1d9e4:	......)...~.K.(.
   1d9f4:	..(.H.~...O.....
   1da04:	\.T.\.y...3...K.
   1da14:	..............M.
   1da24:	....r...^...=...
   1da34:	4.....K.........
   1da44:	....Q...y.....,.
   1da54:	$.....=.......0.
   1da64:	......N...c...B.
   1da74:	....M.....a...a.
   1da84:	....t.c.m.....^.
   1da94:	..........=...V.
   1daa4:	......!.b.......
   1dab4:	....4...S...`...
   1dac4:	6...............
   1dad4:	O...K...........
   1dae4:	..;...A...../.T.
   1daf4:	l.s.l.U.6.......
   1db04:	g.......j.C.....
   1db14:	........'.j...&.
   1db24:	..K...........B.
   1db34:	......S.........
   1db44:	....(.l.....V...
   1db54:	..[.....:.l.....
   1db64:	....V..... .....
   1db74:	......r....... .
   1db84:	8.C.%.....l.....
   1db94:	6...`.....7.....
   1dba4:	..t.x.......~...
   1dbb4:	..p.Q.R.e.....d.
   1dbc4:	..z.(...........
   1dbd4:	......&.J.z.....
   1dbe4:	..............^.
   1dbf4:	....=.....j.....
   1dc04:	......l.....N...
   1dc14:	).......,.^.i.u.
   1dc24:	y.u.n.Y.Y.E.7.&.
   1dc34:	 .%.-.J.i.....=.
   1dc44:	..%...o.0.......
   1dc54:	?.....X.....T.%.
   1dc64:	......*.H.u.....
   1dc74:	..3.\...........
   1dc84:	q.7...{..._.....
   1dc94:	........3...F...
   1dca4:	..2.[.w.....z.b.
   1dcb4:	S.<.,.,.......).
   1dcc4:	C.f.....C...$...
   1dcd4:	T...............
   1dce4:	L...........M...
   1dcf4:	....Q.3.........
   1dd04:	....y.\.6.......
   1dd14:	9...g...[.....B.
   1dd24:	d.~...m.K.....q.
   1dd34:	......Z.....3.h.
   1dd44:	..............@.
   1dd54:	L.s.......^...*.
   1dd64:	..7.....g.E.B.R.
   1dd74:	q.....h...s.....
   1dd84:	..Y... .........
   1dd94:	..........L.....
   1dda4:	..#...,.....3.d.
   1ddb4:	..|.p.P.....b...
   1ddc4:	k...8.......>.k.
   1ddd4:	........ .:.n...
   1dde4:	....T...........
   1ddf4:	S...............
   1de04:	..B.....[...a...
   1de14:	..0.....I.......
   1de24:	E.......D.....D.
   1de34:	..j...\.....g...
   1de44:	............u.1.
   1de54:	..m...s...=.....
   1de64:	..P.........;.x.
   1de74:	....%.q...(.....
   1de84:	..0.....n.Y.P._.
   1de94:	......V...C...k.
   1dea4:	......N.........
   1deb4:	s.P.&.......;...
   1dec4:	........t.....-.
   1ded4:	A.J.?.......V...
   1dee4:	....s...;.....,.
   1def4:	o.....*.u.....>.
   1df04:	....K...6...N...
   1df14:	..[.&...........
   1df24:	..I.......{...].
   1df34:	..l.....9.....@.
   1df44:	....M.....O.....
   1df54:	 .........|.....
   1df64:	N.l.......g.8...
   1df74:	..P...l...W.....
   1df84:	[.......V.......
   1df94:	I.......z...K...
   1dfa4:	V.....X.(.......
   1dfb4:	..G.....2.......
   1dfc4:	C.....K.......[.
   1dfd4:	......d.....r...
   1dfe4:	.. .....K.......
   1dff4:	..........y.8...
   1e004:	..+...D...6.....
   1e014:	z...7.....b...#.
   1e024:	....o...l.......
   1e034:	..z.1...........
   1e044:	........%.r...#.
   1e054:	..........<.....
   1e064:	2.....2.....5...
   1e074:	v...........c...
   1e084:	..%.H.[.U.G."...
   1e094:	..Q...|...r...C.
   1e0a4:	....*.r.....7.r.
   1e0b4:	....L.....z...{.
   1e0c4:	....t.:.........
   1e0d4:	..I.~...".~...h.
   1e0e4:	..x.....H.....>.
   1e0f4:	..}.&...^...|...
   1e104:	~...Z.....P.....
   1e114:	................
   1e124:	^.....i.....(...
   1e134:	(.....y...G.....
   1e144:	....T...4...-...
   1e154:	J.....8.......t.
   1e164:	g.l.y.......L...
   1e174:	..u...r.....2...
   1e184:	~.......7.....?.
   1e194:	..z.......{...2.
   1e1a4:	s...............
   1e1b4:	H.....A...L...0.
   1e1c4:	....P.....L.....
   1e1d4:	Y...............
   1e1e4:	7....._.7.......
   1e1f4:	....-.X.......z.
   1e204:	..A.../...9...S.
   1e214:	..{.....(...G...
   1e224:	R...E.....w.....
   1e234:	V...............
   1e244:	....F.....\.....
   1e254:	..........`.../.
   1e264:	....e...,.......
   1e274:	....4.....@.....
   1e284:	............J...
   1e294:	..=..."...0...V.
   1e2a4:	....;...u.....^.
   1e2b4:	......~...\.....
   1e2c4:	R...............
   1e2d4:	..[......."...F.
   1e2e4:	..J...:.........
   1e2f4:	p...O...C...Q...
   1e304:	w.....u.4.......
   1e314:	..............H.
   1e324:	....2.....n...a.
   1e334:	..b...u...x.....
   1e344:	..........r.../.
   1e354:	w.....*.Q.i.r.{.
   1e364:	h.T.0.......:...
   1e374:	......%...".....
   1e384:	q...^...=...&...
   1e394:	/...Y.....].....
   1e3a4:	................
   1e3b4:	[.....O...#.....
   1e3c4:	..'...B...N...g.
   1e3d4:	..o...b...:.....
   1e3e4:	:.~.........%. .
   1e3f4:	........_.....q.
   1e404:	....6...I...M...
   1e414:	P...Z...Z...j...
   1e424:	..,...|.........
   1e434:	`.J.3.3.6.@.^...
   1e444:	.... .f.....j...
   1e454:	9.............u.
   1e464:	..t...d...B.....
   1e474:	Y.....'.W.......
   1e484:	........i.?.....
   1e494:	z.&...]...}.....
   1e4a4:	................
   1e4b4:	&...S.....I.....
   1e4c4:	..p.Q.F.=.J.b.z.
   1e4d4:	......i.....t...
   1e4e4:	M...8...1...%...
   1e4f4:	......z...D.....
   1e504:	F.......(.@.X.d.
   1e514:	].].G.'.......Y.
   1e524:	....s.....\.....
   1e534:	 ...G...w.....3.
   1e544:	..o.....n.%.....
   1e554:	|.K.)...........
   1e564:	..2.Y.~.....=...
   1e574:	..7.....m...L...
   1e584:	 .....q...I.....
   1e594:	f.....H.........
   1e5a4:	..'.%...........
   1e5b4:	R.....k.....B...
   1e5c4:	e...}.....'...D.
   1e5d4:	..u.....a.......
   1e5e4:	c.8.............
   1e5f4:	..Y.......=.....
   1e604:	4.....M.....z...
   1e614:	;.....l...".z...
   1e624:	..S.........<.S.
   1e634:	c.o.q.h.^.H.,...
   1e644:	....v.:.....^...
   1e654:	.._.....D.......
   1e664:	..t.....y.+.....
   1e674:	d...............
   1e684:	..........*.a...
   1e694:	..0.....7.....`.
   1e6a4:	..$.....Z.....u.
   1e6b4:	....b.......A.e.
   1e6c4:	........~.h.M...
   1e6d4:	....v.6.....B...
   1e6e4:	..2...p.....U...
   1e6f4:	..D.....T.......
   1e704:	n.I.%...........
   1e714:	....%.I.k.......
   1e724:	>.}.....T.....G.
   1e734:	....4.....&.y...
   1e744:	..M.......,.T.v.
   1e754:	................
   1e764:	..n.E.......i.&.
   1e774:	....=.....=.....
   1e784:	=.....E.....f.!.
   1e794:	....}.U.5.......
   1e7a4:	......0.Q.x.....
   1e7b4:	..V.....6.....6.
   1e7c4:	....7.....A.....
   1e7d4:	3.u.....#.T.z...
   1e7e4:	................
   1e7f4:	q.E.......u.3...
   1e804:	..^.....x.*.....
   1e814:	O.....y.6.......
   1e824:	[./.............
   1e834:	..............7.
   1e844:	g.......?.......
   1e854:	U.....%.r.....K.
   1e864:	......I.y.......
   1e874:	'.B.W.e.n.k.g.T.
   1e884:	H.(.........H...
   1e894:	....H.....d.....
   1e8a4:	..1.....R.......
   1e8b4:	^.,.............
   1e8c4:	................
   1e8d4:	O.......5.{.....
   1e8e4:	Q.....$.s.....J.
   1e8f4:	......3.f.......
   1e904:	...... .(.......
   1e914:	........u.I.....
   1e924:	..n.0.....k.(...
   1e934:	..n.1.....~.E...
   1e944:	......i.L./.#...
   1e954:	..........9.Q.o.
   1e964:	........J.......
   1e974:	;.}.....6.{.....
   1e984:	..^...........1.
   1e994:	G.S.X.^.W.S.F.9.
   1e9a4:	"...........c.A.
   1e9b4:	........z.T./...
   1e9c4:	..........l.Y.J.
   1e9d4:	=.4...,.*./.1.;.
   1e9e4:	A.J.X.b.r.......
   1e9f4:	................
   1ea04:	................
	...

0001eaa4 <sample_19_standard_DRUMS_crash5>:
   1eaa4:	........U.......
   1eab4:	......<.<...1.T.
   1eac4:	A.....5.......;.
   1ead4:	......g.o...F...
   1eae4:	W._.....k.......
   1eaf4:	e.6.)...........
   1eb04:	J.5.f.....+.....
   1eb14:	[.6...p.!.$.....
   1eb24:	B.........".....
   1eb34:	................
   1eb44:	l...k.|.......& 
   1eb54:	3...;.7...O.....
   1eb64:	..:...l.........
   1eb74:	..(.....9.....6.
   1eb84:	E.......R.B...o.
   1eb94:	F...<...V.^.....
   1eba4:	......C.....4.5!
   1ebb4:	.!2.7$|.O.>$4.m.
   1ebc4:	..F...u.-.h.].E.
   1ebd4:	-.....2...-...k.
   1ebe4:	t.....;(..}<M...
   1ebf4:	......U...d.....
   1ec04:	..[.p.........b.
   1ec14:	,.T!..]Bg../....
   1ec24:	......*.y.......
   1ec34:	&.....T...].....
   1ec44:	x.w.....*.......
   1ec54:	&.H."*#.........
   1ec64:	..w.......y.....
   1ec74:	.,%&............
   1ec84:	..=.....0.{.....
   1ec94:	[.T........!..$#
   1eca4:	..j.*1.../......
   1ecb4:	p...Y...........
   1ecc4:	....t...........
   1ecd4:	..!....".;.#.9n.
   1ece4:	........^.v...9.
   1ecf4:	 .*.X.n.........
   1ed04:	......9..A...#X6
   1ed14:	.&.!i...........
   1ed24:	."..0....1....G.
   1ed34:	....{.7.=...E.,.
   1ed44:	1.......H.4?v.X.
   1ed54:	M.....g.....e...
   1ed64:	..o...~...).6$..
   1ed74:	.9o....*].....f.
   1ed84:	..i._.P.K.....r.
   1ed94:	U.........Z.=9..
   1eda4:	<"".z...9.......
   1edb4:	}.....y.i...f...
   1edc4:	...&............
   1edd4:	.D...!..Y.3.).".
   1ede4:	c.F...l.....[.|.
   1edf4:	..0...V.......2.
   1ee04:	."=..#j....-3...
   1ee14:	V........'+...g.
   1ee24:	......aG..;..#A.
   1ee34:	>"..........F...
   1ee44:	..m.........IK..
   1ee54:	..0.N...;...B...
   1ee64:	[.....?.z..*[..:
   1ee74:	Q.......9...s.W.
   1ee84:	x"..c.K.....~../
   1ee94:	..51...Y..&..(j.
   1eea4:	....`........9U.
   1eeb4:	.4....r.)..'..E.
   1eec4:	\...|.T...v...].
   1eed4:	..%X..V./.....v.
   1eee4:	....*.T.?].....+
   1eef4:	........*.......
   1ef04:	g.#..4......K*..
   1ef14:	......2...^.....
   1ef24:	f.p5.....'].....
   1ef34:	.........)."J.n.
   1ef44:	@.I.......I....&
   1ef54:	....v.......t...
   1ef64:	;...="..>.B...q.
   1ef74:	..3..! ...V8....
   1ef84:	I..%....X.......
   1ef94:	)%t.....n.. ..;.
   1efa4:	K./.;.I.7.n....E
   1efb4:	*.=.YKw..S..y..*
   1efc4:	....n...........
   1efd4:	....AO..C.[.....
   1efe4:	@.z.T(...../....
   1eff4:	m(..q...W..'P...
   1f004:	u.....q.Q.......
   1f014:	.......3E.......
   1f024:	7=..v.....7.i.`.
   1f034:	....%......%..[.
   1f044:	;.....2NY...{.E.
   1f054:	......8...G.....
   1f064:	.......8m.Z...i.
   1f074:	L.C"l.."x.....c.
   1f084:	....,.&..P..1.8.
   1f094:	..Q,..W.........
   1f0a4:	6%C.@2..v.).....
   1f0b4:	.<..q,....c...`%
   1f0c4:	.....0...;....|.
   1f0d4:	......K.......#.
   1f0e4:	....b.......]...
   1f0f4:	I.C....<0.Q/....
   1f104:	r%..~.B.O.P.!>..
   1f114:	....&...P....5..
   1f124:	./......[2..l.0.
   1f134:	..^......:..#...
   1f144:	.*....w.....+.2.
   1f154:	U.Y.o6k.v...H.< 
   1f164:	..m..........1..
   1f174:	B.H..C..! ...>K.
   1f184:	...........-..f.
   1f194:	.4..~Z...I!.D...
   1f1a4:	.0..%.M.L0i.D...
   1f1b4:	u.33k..I....I..(
   1f1c4:	...C..%(;.....y.
   1f1d4:	X.$...G.....v...
   1f1e4:	...!Y!h.......\.
   1f1f4:	R...;...C...I...
   1f204:	F.T.q8$..Wp.....
   1f214:	....+......5....
   1f224:	:.6.m&@....A..y(
   1f234:	....\>r.....".P.
   1f244:	G....)..S....%".
   1f254:	"."...Z.......?.
   1f264:	..^....YN..Z..=.
   1f274:	..-.z....,7.....
   1f284:	..........:.Y5..
   1f294:	..].d>...&...%..
   1f2a4:	..'.l.d......@..
   1f2b4:	Z..6......9...`.
   1f2c4:	..3.;...|.......
   1f2d4:	.$..YY..1.n.z...
   1f2e4:	.....5..2..N....
   1f2f4:	......H...Q.W...
   1f304:	i.....(.M...(8..
   1f314:	,2.....V..j.....
   1f324:	.?W.....'......O
   1f334:	...57........3..
   1f344:	Q.+...12....E&..
   1f354:	+...........v?/.
   1f364:	..!?J.$.....OT..
   1f374:	.;.......&..'...
   1f384:	....=...{.......
   1f394:	.G...!... Y.....
   1f3a4:	...._2....n2`...
   1f3b4:	 .J-..Q...t.#...
   1f3c4:	].z.z..3_.z..%n.
   1f3d4:	.......N%.8...fB
   1f3e4:	..........*.....
   1f3f4:	q....6.... .....
   1f404:	H....8.._.h..,..
   1f414:	#....B..b7....!.
   1f424:	z.....h....!..T`
   1f434:	..6X..{..8M.....
   1f444:	....?.B@........
   1f454:	.-$..\u.0......#
   1f464:	.._..$.9...p....
   1f474:	W"..z7....t.i...
   1f484:	k-.....7$..;M...
   1f494:	.M+.....o...^...
   1f4a4:	........j)..c.[T
   1f4b4:	M.......-.r ....
   1f4c4:	P.I...N.;T.....1
   1f4d4:	...........3....
   1f4e4:	F.............0.
   1f4f4:	w...H.1...?.b...
   1f504:	.......0u.......
   1f514:	.... ..W;...^...
   1f524:	&'..`.....+.....
   1f534:	..Q....6b..N..=.
   1f544:	p..>..........e.
   1f554:	...%T.L...b..5.'
   1f564:	..s.L....$k.Wj..
   1f574:	.B ..,l..7..>..>
   1f584:	.!N.1.4...QL..0B
   1f594:	P.^..r...i.. .m.
   1f5a4:	/.u............@
   1f5b4:	A.Y2...5..2...:.
   1f5c4:	(.....h>....#.W.
   1f5d4:	......F..%A.....
   1f5e4:	.<....k..:,..0v.
   1f5f4:	..........e..,..
   1f604:	..c.C$r.7.[.....
   1f614:	....:A..........
   1f624:	..~...*.........
   1f634:	...".....Yf... .
   1f644:	....3)<./L....;9
   1f654:	..GU'..,....Y...
   1f664:	q.......e....3i.
   1f674:	Pk6..5-..Z0.!1..
   1f684:	,>Y.f..Q..:.(..4
   1f694:	e...L...... `.8%
   1f6a4:	^..K........F...
   1f6b4:	..}...^%........
   1f6c4:	r.;..Y..X.....uM
   1f6d4:	L....`>.V.2....3
   1f6e4:	l.....!..,X.}...
   1f6f4:	b*).9.....Q.c..!
   1f704:	..8?K..$...#....
   1f714:	....h>.....6....
   1f724:	.-....<0...?..#.
   1f734:	.......i..;..*..
   1f744:	+5p.....v...2...
   1f754:	.'.......'..j...
   1f764:	l.~..KZ......r;.
   1f774:	...,... +..$A.W.
   1f784:	.....&....?....4
   1f794:	....*Bt..(..a...
   1f7a4:	.2......D.....9.
   1f7b4:	:.v;g..86.d.....
   1f7c4:	<..'.........G..
   1f7d4:	..<.s.o4....[$..
   1f7e4:	..^.........; ..
   1f7f4:	......MCi...Y...
   1f804:	.4......;).%....
   1f814:	..U$.....@..[...
   1f824:	....9%......+".'
   1f834:	P......-.....J..
   1f844:	.....M,.7.....6,
   1f854:	...!?.H....E..%.
   1f864:	..)...z.R&...Q..
   1f874:	.r..E<=...n9..i.
   1f884:	..}.).d0..-.....
   1f894:	;...".tl$...K...
   1f8a4:	A#..TE...-\..r..
   1f8b4:	4>..............
   1f8c4:	>....4.....-..2-
   1f8d4:	...AW.k.o.k....?
   1f8e4:	".....D'......a.
   1f8f4:	.1...&..h.YA....
   1f904:	...=&..1...1....
   1f914:	....d4g.....Y1..
   1f924:	.!c..D....'+....
   1f934:	..).z..!....<. .
   1f944:	....?......4....
   1f954:	.d......|A].Q"..
   1f964:	]..J.....6...r..
   1f974:	.h..........6...
   1f984:	9..7c..K=..Ds...
   1f994:	.GL..N........P.
   1f9a4:	 .............Q.
   1f9b4:	!.w1....,*......
   1f9c4:	.F....k........2
   1f9d4:	p.I...:.n...EH..
   1f9e4:	...-L..7...g...&
   1f9f4:	r.............e!
   1fa04:	..K)...".):..U..
   1fa14:	8_0.r....1......
   1fa24:	....z....1i.....
   1fa34:	......O.....L..:
   1fa44:	....v.W..."....E
   1fa54:	:..&..z(o.6.Y...
   1fa64:	.9..s.<.4.......
   1fa74:	.CB...c....G(...
   1fa84:	f...........\1S.
   1fa94:	E0...&....W.d.o.
   1faa4:	........V.,....C
   1fab4:	......I?......V.
   1fac4:	.$G..3;.b.r.S!;.
   1fad4:	...H6.Q..@......
   1fae4:	%.6.....\,...r..
   1faf4:	#P1..rI...'&....
   1fb04:	..{.G..Fw...B...
   1fb14:	a6..\..>.......0
   1fb24:	Q.......G ......
   1fb34:	.A.........A....
   1fb44:	..T..r`...8..&..
   1fb54:	..............7.
   1fb64:	....t.J07.|...93
   1fb74:	.. ...-..._.....
   1fb84:	.$ ...C.."....L.
   1fb94:	...M............
   1fba4:	8.m...E!.....]].
   1fbb4:	.0=..T.......#..
   1fbc4:	x$....E..#c.~...
   1fbd4:	Z p........'#...
   1fbe4:	.....#)...Y..r..
   1fbf4:	.AQ.....}...c>@.
   1fc04:	......j.....r..C
   1fc14:	...g...<....#.I.
   1fc24:	..u.Y........r..
   1fc34:	wA......6K......
   1fc44:	q..2..C(-......I
   1fc54:	..u..$r.....f...
   1fc64:	1...............
   1fc74:	.../..a._.......
   1fc84:	:..If.+.d1m.....
   1fc94:	Y.b.T!..1...0.Z.
   1fca4:	....JE@...h+....
   1fcb4:	L.U.D.........o.
   1fcc4:	..."..h9>...%.r.
   1fcd4:	..U...8.+..H..q.
   1fce4:	../9....~.+..'..
   1fcf4:	p.8#..}...`...l.
   1fd04:	/...N...........
   1fd14:	....n..@........
   1fd24:	Y........A......
   1fd34:	...>E.>.(..+..h.
   1fd44:	..)"....`... ...
   1fd54:	<.~.....+.....].
   1fd64:	......m8a.r...E.
   1fd74:	.=...3...,..N..A
   1fd84:	n....%... ... ..
   1fd94:	...R..+9_..\..N.
   1fda4:	0.S...i.........
   1fdb4:	.F`...?...o.W.y.
   1fdc4:	..h.U.?I...53.I;
   1fdd4:	........u.T.. ..
   1fde4:	x.h0......v..U..
   1fdf4:	v..E0..9...-l.3.
   1fe04:	i..-P.;D...4Z.K.
   1fe14:	.K..G.)...Q...R.
   1fe24:	.60....!....J...
   1fe34:	.5..E*..r)....-.
   1fe44:	k.2...,.r.A. _\.
   1fe54:	........$....7..
   1fe64:	..5.......@...A.
   1fe74:	.Bq...... >.J...
   1fe84:	.+....d.07....S>
   1fe94:	....8.........V.
   1fea4:	................
   1feb4:	-.-%M.......GIV.
   1fec4:	E.l.....0...K.Z.
   1fed4:	...........#....
   1fee4:	*;..u......#...)
   1fef4:	m.........$.S...
   1ff04:	....v&..@.?....D
   1ff14:	...R..j,....p.a=
   1ff24:	......n.y3}.Y.1.
   1ff34:	.,...#..Z..-....
   1ff44:	."..'.h....K..#.
   1ff54:	|!]7q.).....1...
   1ff64:	...."...J.y...K3
   1ff74:	..G.u..D....m.11
   1ff84:	..G./.#.....:...
   1ff94:	M.....:@u...<...
   1ffa4:	...1.......E..3.
   1ffb4:	..q._T......}...
   1ffc4:	N9..p.:.SNt.....
   1ffd4:	.*....F8..*.h..)
   1ffe4:	..,.....9O..;...
   1fff4:	.;...&{.........
   20004:	.....'m.1..e}...
   20014:	z..&_...U.....z.
   20024:	..-.e.O.O...@...
   20034:	.........-..<.W.
   20044:	.9..y.}.k...\...
   20054:	....h..9e.v+.&).
   20064:	B.@.hH..Q._.5,..
   20074:	.....F..k.-.2...
   20084:	./^...R..H......
   20094:	 .t...m"......x.
   200a4:	[C.. ..._,..c]$.
   200b4:	d%...'........F.
   200c4:	V.,.:...s...4C..
   200d4:	.....6.....)"...
   200e4:	....3.U.<V_.....
   200f4:	E..].....8].....
   20104:	..W.q...<F..t1.:
   20114:	J......(..D.2-..
   20124:	..Y.,.e.O.YAT...
   20134:	V'....l.@.....D.
   20144:	...;F.p.|f&.X...
   20154:	....\.{.@.....} 
   20164:	..P...`.E.3..=M.
   20174:	.*5....G..t.)...
   20184:	....H.:.....$%..
   20194:	...-T.z...*.* ..
   201a4:	.2x.[.....u.....
   201b4:	Z...o.D.x.......
   201c4:	..,.=..0(...W...
   201d4:	P...... ..X.....
   201e4:	.... .n......;..
   201f4:	...:x.r.w...m#..
   20204:	7.........139.Z.
   20214:	c.I3..\..*?.....
   20224:	S%........s,....
   20234:	..%.Y. ........)
   20244:	....g.k().*.Fm..
   20254:	.......%....."T.
   20264:	N.y$4.5.........
   20274:	}4......}.......
   20284:	.....Nb..@....].
   20294:	..n.........b...
   202a4:	.......2........
   202b4:	X.o.../......7/.
   202c4:	$.. o.....*J%...
   202d4:	....V.s.=...."..
   202e4:	8.q..........M..
   202f4:	....u.....z...c.
   20304:	....q....U..i-..
   20314:	.*..............
   20324:	*...j.G.../<../^
   20334:	)..8Y @.l.....!.
   20344:	..$...DC[..7...%
   20354:	....)....%]...r.
   20364:	U.,...t.G..!....
   20374:	,..2@.[...,.i...
   20384:	..........#.uJ..
   20394:	..>9:.....S..&H.
   203a4:	.)..H...#.}-f...
   203b4:	U.....n...i.....
   203c4:	...'...2...CT...
   203d4:	P]...q.../!.....
   203e4:	t......6...HI..Q
   203f4:	C.D.w..+..).O'..
   20404:	k%*.....A->.E!P.
   20414:	g...../<....o...
   20424:	......7.}."..@..
   20434:	5an..%7.*!..V...
   20444:	..N7\.Db.....2:.
   20454:	.....=......(...
   20464:	h...1...j.W.....
   20474:	[JI........:f...
   20484:	,.A.-...b8z..&..
   20494:	A.....O.C.$.6(..
   204a4:	....?.I#....6...
   204b4:	SHU./...p...7.*.
   204c4:	.......,....(.o.
   204d4:	y&|..#..i.....g.
   204e4:	{........(k....!
   204f4:	..t....7..G.9...
   20504:	........F...9.".
   20514:	...8............
   20524:	..W.....D.D....$
   20534:	.....&(..&o.....
   20544:	..0../l...)...\.
   20554:	t....4..(...x.nA
   20564:	..!.4.m.........
   20574:	.....2o.5....!'.
   20584:	..1..)....-H..I<
   20594:	...&s.O.].|.....
   205a4:	D3...J-.(...b..)
   205b4:	.._..7......o..+
   205c4:	?.|....%A.+.T...
   205d4:	..p.6&e.../.....
   205e4:	I k...`...A\..X.
   205f4:	..@.k......3....
   20604:	..(..5H.V.....E.
   20614:	........b.;.....
   20624:	.,..".(.D....1x.
   20634:	.4....f08.......
   20644:	7..7K..3i...+'o.
   20654:	..........y.....
   20664:	[.........M'..fS
   20674:	...({...F)....O.
   20684:	..p.e.:....)u...
   20694:	..p.`.U..%6. ...
   206a4:	......[.......u.
   206b4:	................
   206c4:	h. .......y.....
   206d4:	5/....).Q.x.....
   206e4:	....../.....U.T.
   206f4:	.J"..1..a.i.1.8.
   20704:	C...X.....8._..6
   20714:	e....Z..\.:..<..
   20724:	v.;......8......
   20734:	M.iU..0.$.}.Y...
   20744:	j.......XH......
   20754:	I)....).%.A.&.#.
   20764:	S.....W.[.......
   20774:	...../E...I.Y...
   20784:	....H...........
   20794:	....2....6..T...
   207a4:	........*.*..*..
   207b4:	..faH......Fu..B
   207c4:	..E.q.....b....:
   207d4:	t...M..<..R.... 
   207e4:	..0.....I...n..M
   207f4:	..a6e.........F.
   20804:	$.....O.....b.8.
   20814:	;'n...k)n.;=..R.
   20824:	............ ..#
   20834:	..f....0......*.
   20844:	.&a....r..Dm...@
   20854:	...D.......(..f.
   20864:	F...a.l.......@.
   20874:	...n..O2........
   20884:	..Y.]../k....m..
   20894:	.F..g..0q.......
   208a4:	........<.......
   208b4:	.1(.........g'L.
   208c4:	..n..I...r..=@..
   208d4:	Z..,#..j...1....
   208e4:	..K.W........N..
   208f4:	.r.. b......5...
   20904:	.......f8.pP....
   20914:	......L..[...+..
   20924:	..Y...L.........
   20934:	...^...J...;....
   20944:	=.h...n...D..%..
   20954:	....}.*.......y.
   20964:	......>.$.G&/...
   20974:	..,......'...;t.
   20984:	[....../e.N<E.Q.
   20994:	M.....O...:.....
   209a4:	..).,.U.........
   209b4:	.......)......F.
   209c4:	o...;...u."...**
   209d4:	w.2P......6..#'.
   209e4:	....~.4..(......
   209f4:	b.P:..$.......T.
   20a04:	..1.....A.<...G!
   20a14:	N........... ...
   20a24:	........D.......
   20a34:	.1.._.l.......e.
   20a44:	'.............:.
   20a54:	....G.q.:.(.....
   20a64:	..i..4y.$...@...
   20a74:	....v._.......y.
   20a84:	....!..6..F5*...
   20a94:	....x.})....W...
   20aa4:	...5..=5.......F
   20ab4:	c.IP..i.......$.
   20ac4:	......v.....a...
   20ad4:	c..(............
   20ae4:	..........=.....
   20af4:	.F...9........I.
   20b04:	F......)..4e...H
   20b14:	........^..XX.E.
   20b24:	..D&....r.....X.
   20b34:	A%...-..j.1.5.*.
   20b44:	...._..'..?-*..)
   20b54:	h.(....'N.......
   20b64:	..&'....Y.....e2
   20b74:	B..a....@.C.*...
   20b84:	T+..X4...?9..@..
   20b94:	.5...#....R'....
   20ba4:	.......#...B...a
   20bb4:	......6...8.....
   20bc4:	^.........].H...
   20bd4:	;...o...f.......
   20be4:	.........+A...#.
   20bf4:	...$..}47.^.....
   20c04:	i....7...Hc...a.
   20c14:	..)...........r.
   20c24:	s.........4!..nS
   20c34:	....n.......h...
   20c44:	....e.$....,....
   20c54:	/..;.......L..R%
   20c64:	.....'..........
   20c74:	..j/O.."|..+....
   20c84:	Y...p...(.Q...2.
   20c94:	.)..~.`..'_.<...
   20ca4:	..V...c.T%.....2
   20cb4:	...(#.U.E...g..!
   20cc4:	`..@L.X....:h..-
   20cd4:	....M.........,&
   20ce4:	........../.|...
   20cf4:	..............f.
   20d04:	n........[...%..
   20d14:	-....-..|.......
   20d24:	..p...l.S...a"K.
   20d34:	.=...37.....-...
   20d44:	......F.+.p.N...
   20d54:	=...s.:...u.....
   20d64:	..#.. ..[-v.{...
   20d74:	....."..{.t.L..'
   20d84:	..M.......KGO.f(
   20d94:	... ..6.....a...
   20da4:	..S-h.[!f.<.....
   20db4:	..(.N.=..5......
   20dc4:	.....#..f...Q...
   20dd4:	................
   20de4:	..Q.......{$&.%.
   20df4:	......*.........
   20e04:	....K.`...!.b.."
   20e14:	W.....{.........
   20e24:	....!.....`"...1
   20e34:	..r.........N...
   20e44:	O.g... .i.z;..W.
   20e54:	I.+..)!.K.F.w#..
   20e64:	....... T...../9
   20e74:	...B...6`...&.X.
   20e84:	....t.+.v...d.0&
   20e94:	B.h.k......./...
   20ea4:	).........S...0.
   20eb4:	0.Q.l....53..4..
   20ec4:	..N.t..'7.=.....
   20ed4:	U.N.. 9...U.....
   20ee4:	.........,g...".
   20ef4:	.#..i......(..X'
   20f04:	#...G.W.i.M...l.
   20f14:	w.......X.r.....
   20f24:	....t.g...?...i8
   20f34:	N.."l.Q.......t.
   20f44:	....,...%.......
   20f54:	P(........k...U.
   20f64:	F.3.....`$...#..
   20f74:	X.......K.8.....
   20f84:	..+...G6../.l$g.
   20f94:	....j...=7]..$m.
   20fa4:	....LA].?......(
   20fb4:	.....6/...c.l...
   20fc4:	L.`.g...u.......
   20fd4:	$.|....-g.z."...
   20fe4:	B.....n.........
   20ff4:	..g........."...
   21004:	..... 6.}.....4.
   21014:	_.......5.......
   21024:	..u.......m..!".
   21034:	.dM.7...].......
   21044:	.<?.........."..
   21054:	..q.......2...;.
   21064:	...$..t.........
   21074:	.....&'.......y.
   21084:	..5.5.....).....
   21094:	y........ ......
   210a4:	..."..h..6l.$C..
   210b4:	'.|.W.....l.}...
   210c4:	&.....1.........
   210d4:	..()..x.....T...
   210e4:	............9...
   210f4:	..#.2.........e.
   21104:	i.I...{... . .r.
   21114:	M...........~...
   21124:	..{.#...e.Z.... 
   21134:	...._.......`.".
   21144:	=...0..-..):..;G
   21154:	u..%....!.......
   21164:	K...Z.....y.....
   21174:	;...;.".........
   21184:	......h...c.....
   21194:	l...y.o........!
   211a4:	......W....... .
   211b4:	........g.m.O.3.
   211c4:	..1..1.....'....
   211d4:	....`.9.....]...
   211e4:	3...?.....}...j.
   211f4:	..f.qS=...Z.L.|&
   21204:	..........Q.....
   21214:	j.7.........i...
   21224:	................
   21234:	..1.1...X.I.X...
   21244:	..........C.....
   21254:	..........*...3.
   21264:	....$...,...E%..
   21274:	......4.%.......
   21284:	......X.+.......
   21294:	..#........2i...
   212a4:	w...N..........,
   212b4:	..0.....S.:....!
   212c4:	.........$......
   212d4:	.......&........
   212e4:	T.~...f.W.....|.
   212f4:	..".....D.(..#..
   21304:	J.........y*i...
   21314:	........."...7..
   21324:	=.......t....4O.
   21334:	kM...1......{.3.
   21344:	(...D....34.g...
   21354:	............f.g.
   21364:	..........M.....
   21374:	u.....$...W.T.%.
   21384:	Q.......~.......
   21394:	..............x.
   213a4:	..K.....0..../..
   213b4:	u.q...........+.
   213c4:	...7/._.C...'...
   213d4:	7.P.Z.......e.{.
   213e4:	..{.(.....?.C.5)
   213f4:	F.A."... .......
   21404:	.........0..j.T.
   21414:	q.........8.....
   21424:	w.M..(..........
   21434:	....> ..........
   21444:	:.l...........S.
   21454:	u.....S.........
   21464:	X...k.......*...
   21474:	..z..../........
   21484:	....-...../.....
   21494:	..x...g.2.......
   214a4:	........q.......
   214b4:	0.............h.
   214c4:	R.....L.o....(..
   214d4:	........N..6..6.
   214e4:	..~.............
   214f4:	*.@.;..#q.......
   21504:	p... ...?...=.~.
   21514:	..."....Y.|.V...
   21524:	..T.N.7..$..k...
   21534:	5...Z.9.u.G.v...
   21544:	... #...l.....J.
   21554:	m.....P.....G...
   21564:	....i.{...v.....
   21574:	............c...
   21584:	..\...I......*C.
   21594:	......=.........
   215a4:	..}.u..!......;.
   215b4:	H.n.i.M.*.....p.
   215c4:	....5.....*.j...
   215d4:	..a14....._.....
   215e4:	g.X.......t....<
   215f4:	...b...6S.V.[.p.
   21604:	......b...D..$..
   21614:	. >._.%.t.r.o...
   21624:	....=.......S...
   21634:	............&...
   21644:	O.......0.......
   21654:	..........x.....
   21664:	..!.a...1.....f.
   21674:	4...?...V.}.....
   21684:	..[.....Y ..>.5.
   21694:	....,.C.z...#.3.
   216a4:	..........c.....
   216b4:	B..#....7._.....
   216c4:	..x.....o...*'..
   216d4:	.'<...6.j.O.M...
   216e4:	..........e..._.
   216f4:	....)...R.)!2...
   21704:	..........a.....
   21714:	~...6.....t...;.
   21724:	[...H.......,...
   21734:	......A...$.)...
   21744:	c...B.-...%.^..$
   21754:	..e.............
   21764:	e.......?-..!.E.
   21774:	!.@.m.`.....v.W.
   21784:	....&......?....
   21794:	Z.........a.9.S.
   217a4:	^...u.8...p.....
   217b4:	.!)...3...."..+.
   217c4:	......z...D...`.
   217d4:	~......:...(....
   217e4:	W........&G.Y...
   217f4:	.....,...)......
   21804:	..C.e.....a.....
   21814:	....8..... ...(.
   21824:	..........Q.....
   21834:	..........].....
   21844:	..U.y.....7.....
   21854:	..............g.
   21864:	}......;..g...A.
   21874:	.. .............
   21884:	......Y...p.....
   21894:	......I.6.R...T.
   218a4:	7.}.......Q.q...
   218b4:	..$...`.O.R.....
   218c4:	....z...[.^.N...
   218d4:	..4.......m.(.M.
   218e4:	..D...#.'...z.S.
   218f4:	......*.+....(..
   21904:	..........9...=.
   21914:	..].........[...
   21924:	....o..'Y.s.....
   21934:	....P...>.....e.
   21944:	....=.^.......K.
   21954:	....A...........
   21964:	....a.....0...s.
   21974:	D.F'}.K.#...9...
   21984:	............J...
   21994:	.)..........c...
   219a4:	..3.. A.2.......
   219b4:	............3...
   219c4:	i.+.........V.j.
   219d4:	....v...........
   219e4:	v92.3.w.>.......
   219f4:	..{.y.@.4....&e.
   21a04:	".w........)..kH
   21a14:	y."+......f.`...
   21a24:	....f.k.p.<.....
   21a34:	8(....}.h.......
   21a44:	i...........j.O$
   21a54:	m...q.......l...
   21a64:	....."..........
   21a74:	z%............>.
   21a84:	X...0.....E.....
   21a94:	........c.....t.
   21aa4:	5.!.............
   21ab4:	S.....G.......^.
   21ac4:	U.......b...... 
   21ad4:	j...k...........
   21ae4:	..v.........K...
   21af4:	....Q.=.>...t.:.
   21b04:	..;.....K.....".
   21b14:	..6.q.n..2{.[...
   21b24:	.............#..
   21b34:	..(.......0...k.
   21b44:	................
   21b54:	g./.......#.....
   21b64:	r.J.....U......&
   21b74:	B..)..D...s.P...
   21b84:	t.........T6..v!
   21b94:	..........e.....
   21ba4:	......s.........
   21bb4:	......./......F.
   21bc4:	....../.b....%..
   21bd4:	..{.........i...
   21be4:	......a..)..u...
   21bf4:	......)...R.>(..
   21c04:	....{...Q.U.....
   21c14:	..q.............
   21c24:	Y.P.......<.8...
   21c34:	........$.......
   21c44:	#.k.......k....)
   21c54:	4.$.......G.o...
   21c64:	..H.Z.O.....(...
   21c74:	..... G...d.O...
   21c84:	..(.......[.....
   21c94:	b.m.........J...
   21ca4:	..`... .........
   21cb4:	,...$.":-.~."...
   21cc4:	..Q.2.H.....0.$.
   21cd4:	l.a*v.|.....V.z.
   21ce4:	..........|...y.
   21cf4:	....(.."i.......
   21d04:	........0......,
   21d14:	G...............
   21d24:	..............?.
   21d34:	.../!..5s.@"..-.
   21d44:	..j.........i.#.
   21d54:	......).8.z.....
   21d64:	....n.......6...
   21d74:	.8....u.........
   21d84:	......'.V.......
   21d94:	..C.K.&.....6.g.
   21da4:	..f...M...b.y...
   21db4:	....g...!...V.,.
   21dc4:	g.$...r...F.U.C.
   21dd4:	............t. .
   21de4:	..........C.....
   21df4:	..........E...s.
   21e04:	..p...;.....F.`.
   21e14:	........l.I.%.<.
   21e24:	=.....,.........
   21e34:	..d.A.|.Z.1.....
   21e44:	..g.... ........
   21e54:	+.........,.....
   21e64:	....$. .......F.
   21e74:	....g.~.}.......
   21e84:	..........A#8...
   21e94:	......>... ...y.
   21ea4:	s.............A.
   21eb4:	..@...........!.
   21ec4:	....h.........7.
   21ed4:	}.......n.g.....
   21ee4:	C...e.:.E.<..%2.
   21ef4:	v.h.Y.}.x.....9.
   21f04:	......&"........
   21f14:	..H.....P.......
   21f24:	..Q.........X.5 
   21f34:	..............w.
   21f44:	..)..'N...V.....
   21f54:	..,.7...=.9...k.
   21f64:	..B.&.v.........
   21f74:	....f.s.........
   21f84:	......G...%.....
   21f94:	%...f...F.~.4.].
   21fa4:	).M.i....(......
   21fb4:	..s.?.....l...u.
   21fc4:	8.F...;.;.......
   21fd4:	i...[.9.N...I...
   21fe4:	`...c.....S.....
   21ff4:	..o.a.m.....K...
   22004:	............%.w.
   22014:	`.....E./.....T.
   22024:	......`.......|.
   22034:	......d.K.8.....
   22044:	v.........\...4.
   22054:	......;...7.k.m.
   22064:	........_... .q.
   22074:	..J%..B.F.Z...W.
   22084:	....d.".5.......
   22094:	Z.+.f.......*.T.
   220a4:	......].L...B.^.
   220b4:	....j.i)T.K.....
   220c4:	T...K...P...c...
   220d4:	..........T.....
   220e4:	............F#..
   220f4:	J... .....t...].
   22104:	Z.....8..:....H.
   22114:	..!.q...v......'
   22124:	..`.......s. .Y.
   22134:	....."i...C...L.
   22144:	U...|.8.U...Z...
   22154:	....I...........
   22164:	.... ..*M..*....
   22174:	..........I.....
   22184:	....?...H...J...
   22194:	......h...y.@...
   221a4:	................
   221b4:	......n.X.$.B.@.
   221c4:	..N.%.j.a.`.....
   221d4:	..d.E.e.....r...
   221e4:	..... ].....4 S.
   221f4:	E.&.......v.!./.
   22204:	..F./.C.........
   22214:	.!..`...(.......
   22224:	........Z...D!..
   22234:	].......K.......
   22244:	....i.|... ...L.
   22254:	|.:.;...........
   22264:	..|.#...........
   22274:	}..&..f.X...s.K.
   22284:	.........$F...#.
   22294:	...............!
   222a4:	..............T.
   222b4:	..h...........f.
   222c4:	..g.........9.#.
   222d4:	0.Q.S.......o3..
   222e4:	[.....?.W.....i.
   222f4:	......k.....V...
   22304:	.._.7.......N...
   22314:	........ ...D...
   22324:	......[.....\...
   22334:	..../...d.......
   22344:	v...x.z...3.m...
   22354:	......c.....j.7.
   22364:	..y.h.........J.
   22374:	....p..._.....\.
   22384:	x...b.......p"9.
   22394:	....s...Q.y...C.
   223a4:	\.3. ...D.}.N...
   223b4:	..n.......$&c...
   223c4:	....&...........
   223d4:	+.........C.-.).
   223e4:	<.d.a...l.m...U(
   223f4:	..........G.Z...
   22404:	..$.+.........'.
   22414:	..I.#...........
   22424:	..j...P.....u.Y.
   22434:	......8.m.F...0.
   22444:	&.....+ ^.......
   22454:	w...}.$...^.}.|.
   22464:	O...{.Z.g.y.J...
   22474:	x....3...!......
   22484:	....]...].f...I.
   22494:	m...........t.p.
   224a4:	......_.A...#...
   224b4:	U...G ..........
   224c4:	....O.....w.o...
   224d4:	A.^.........^...
   224e4:	........c.3.....
   224f4:	.... .......M.@.
   22504:	......3.'$..:.6 
   22514:	........k.K.....
   22524:	....V.......&..#
   22534:	....W.j.....z.?.
   22544:	&. ./"Q.}.O.....
   22554:	......f.$.w..._.
   22564:	..F.............
   22574:	..z...~...A.....
   22584:	..X..."..._...v.
   22594:	B...............
   225a4:	9.........|.%...
   225b4:	<...O.|.......-.
   225c4:	........].....}.
   225d4:	.5..u.=.@.....g.
   225e4:	=.0.....k.......
   225f4:	....!.........L.
   22604:	?.........,...U.
   22614:	L...0.....z)....
   22624:	....O.Z.....2...
   22634:	..,.......k.x...
   22644:	......)...... F.
   22654:	............H...
   22664:	............>...
   22674:	-.%...j...5.5.=.
   22684:	Q...i.....5.i...
   22694:	T.G.M...I.......
   226a4:	e...........#...
   226b4:	..,.E.......{...
   226c4:	8.......~...I.D.
   226d4:	..6.v.:.........
   226e4:	h...).`.w.......
   226f4:	}...~...........
   22704:	j...^.....2.q...
   22714:	f.t.U.....A.{.c.
   22724:	W.\.............
   22734:	......{.......m.
   22744:	n.I.....G.[.....
   22754:	........)...U.$.
   22764:	....n...F.....p.
   22774:	..L.............
   22784:	H.D...W.2.......
   22794:	......>...m.L.i.
   227a4:	.........)......
   227b4:	..=.~.~... .....
   227c4:	..5...!.........
   227d4:	..........&...S.
   227e4:	v.........V.....
   227f4:	8.3..!....y.u...
   22804:	....b.....C...^.
   22814:	....'.....H.....
   22824:	..,.....Y.......
   22834:	......x.....s.B.
   22844:	....T&x...K...8.
   22854:	*.....5.I.......
   22864:	e...~.....c.....
   22874:	?...............
   22884:	/.....&.M.......
   22894:	..........[.....
   228a4:	..........f.....
   228b4:	&.......{.....c.
   228c4:	%.@...4...E..,..
   228d4:	y.7...6.......\.
   228e4:	..#.....#.>.....
   228f4:	....z.....i.....
   22904:	..Q...p.....~...
   22914:	..f...d.....j...
   22924:	.....!..+.Q.z.U.
   22934:	0.G.....x..#..I.
   22944:	.&......g.......
   22954:	X.h.............
   22964:	..............x.
   22974:	e...%...........
   22984:	............#...
   22994:	m.@...X.`."...~.
   229a4:	+.......).......
   229b4:	......r...P.....
   229c4:	..........&...R.
   229d4:	,.k.3 ....D.....
   229e4:	....6.=.....C...
   229f4:	..4...V...>...:.
   22a04:	........~.......
   22a14:	......[....... .
   22a24:	..........z.F...
   22a34:	..d.............
   22a44:	y.....`.........
   22a54:	............%._.
   22a64:	..u.........m...
   22a74:	......z.u. ...j.
   22a84:	l........./.B.c.
   22a94:	&...........2...
   22aa4:	@.............j.
   22ab4:	....1.....l.C.Y.
   22ac4:	A.......9.......
   22ad4:	..J.Z.c.........
   22ae4:	.._...F.h...X...
   22af4:	..../...........
   22b04:	H.<.............
   22b14:	......l.........
   22b24:	....9.G.$.^.w.?.
   22b34:	l.........G.a.>.
   22b44:	o.@.....".......
   22b54:	4...3.n(..Q.B.W.
   22b64:	..N.)...........
   22b74:	.._...*.v.....".
   22b84:	&.......Q.h...I.
   22b94:	8...<.x.9.......
   22ba4:	6.......e.......
   22bb4:	a. .Z%..O#/.....
   22bc4:	....8...7.,....%
   22bd4:	..k.......^.....
   22be4:	....-...6.I...Q.
   22bf4:	W.k.......7,..U.
   22c04:	..-.....S.......
   22c14:	."..k. ...Z.....
   22c24:	(.......".=.....
   22c34:	3...X.;.I.....f.
   22c44:	q...$.D.......P.
   22c54:	]...............
   22c64:	....U.m.C...E...
   22c74:	..........u.....
   22c84:	J...z.r.....Q...
   22c94:	+...........5.1.
   22ca4:	........Z.@'i.].
   22cb4:	......V...."..4.
   22cc4:	......&.......z.
   22cd4:	?.I.........N.5.
   22ce4:	..I.8...9...o.c.
   22cf4:	......a...).{...
   22d04:	............"...
   22d14:	..6.Q.L.......Z.
   22d24:	..j.}.....e.#.*.
   22d34:	o.j...V.7.......
   22d44:	..T...y.u.....9.
   22d54:	;....!..Z.... b.
   22d64:	y...7.....N.....
   22d74:	..3...1.p.......
   22d84:	............N...
   22d94:	#.....].). .{...
   22da4:	5._(..q.........
   22db4:	W.........W.R..,
   22dc4:	-.....k.....v.[ 
   22dd4:	....U.-.s.....].
   22de4:	..&...f.......\.
   22df4:	..o...i....&....
   22e04:	......X.....&.V.
   22e14:	..............u.
   22e24:	..F._...P.......
   22e34:	....A.d&....Q...
   22e44:	....].2...../...
   22e54:	..W...o.......{.
   22e64:	...&.._...8.....
   22e74:	........2...8...
   22e84:	..u.............
   22e94:	..[.V...I. .O...
   22ea4:	C.<.....z.1.6...
   22eb4:	j.....n.P.A.....
   22ec4:	..'.......+.....
   22ed4:	{.........h.....
   22ee4:	".N.......4.v.r.
   22ef4:	..&......./.....
   22f04:	`.Q.a.....D.....
   22f14:	K...............
   22f24:	y...............
   22f34:	..o...........e.
   22f44:	..K.].J.M.=...t.
   22f54:	....1.........}.
   22f64:	..,.........k...
   22f74:	........~.T.....
   22f84:	......!.......M.
   22f94:	|.&...d.....4...
   22fa4:	!.......F.'.....
   22fb4:	..(.....s.....C.
   22fc4:	..}.....I...i.A 
   22fd4:	..c...[...J.....
   22fe4:	...($.D.... ....
   22ff4:	......R...d...=.
   23004:	<.!.u......._.A.
   23014:	].,.+.....^.....
   23024:	................
   23034:	V...........C...
   23044:	U.7.....>.......
   23054:	....e)....I...I.
   23064:	C.4.\.....].....
   23074:	..........S.....
   23084:	....P....*..R.H.
   23094:	:.c...V...r.9...
   230a4:	......F.6.......
   230b4:	................
   230c4:	...._.......D...
   230d4:	{.\.\........._.
   230e4:	..s.....W.......
   230f4:	..,.............
   23104:	....@.........[.
   23114:	..........}.....
   23124:	..Z...1...\.r...
   23134:	................
   23144:	....E.......!.s.
   23154:	..[.`.......S.h.
   23164:	........y.3.....
   23174:	........h.......
   23184:	....X.......{.!.
   23194:	~...4...........
   231a4:	..........@.9.b.
   231b4:	..d...........+.
   231c4:	;.j...6.........
   231d4:	v.....9.....:.M.
   231e4:	X.k.......V.....
   231f4:	......M.........
   23204:	..7.....2.$.....
   23214:	8.\...a.........
   23224:	3...e.A.........
   23234:	......E.....O...
   23244:	......A...Q.f.U.
   23254:	..z...i.Z.W.x.^.
   23264:	]...P...8.......
   23274:	T.b.....*.......
   23284:	....1...X.G...c.
   23294:	..h.............
   232a4:	g...5...D...z...
   232b4:	..n..$......g...
   232c4:	..\...........a.
   232d4:	q.....h.{.......
   232e4:	... ....6.....*.
   232f4:	....9.....0.4...
   23304:	....[........%b.
   23314:	<...D...........
   23324:	d.S.B.I.6...;...
   23334:	..........].D...
   23344:	V#'......#.."...
   23354:	."..@...P.z.....
   23364:	..........o...j.
   23374:	..=.......*.....
   23384:	..............U1
   23394:	M...).l.."..b.-.
   233a4:	..].....8.......
   233b4:	7.........}...\.
   233c4:	U...............
   233d4:	......d.).....~.
   233e4:	f.M.............
   233f4:	q.9.>...... \...
   23404:	............~.7.
   23414:	....>...........
   23424:	E.....a...I.....
   23434:	......{.X.....b.
   23444:	....i.....L.". .
   23454:	....../.n.Y.r...
   23464:	....u.5.R.}.....
   23474:	..H.....&.}.....
   23484:	z.&.........T.L.
   23494:	".).............
   234a4:	......H.F.......
   234b4:	..............3.
   234c4:	..{.U...E...r...
   234d4:	..........D.....
   234e4:	..i.Q.{.........
   234f4:	....n.y.D....'%.
   23504:	......1.......f.
   23514:	....F.....]...l.
   23524:	........*#......
   23534:	T.........I.....
   23544:	..o...&.........
   23554:	Y...p...........
   23564:	......4...n...3.
   23574:	..3.............
   23584:	........y...B...
   23594:	e.Y.].8.....%.y.
   235a4:	................
   235b4:	@...~.|.>...9.H.
   235c4:	..............>.
   235d4:	.......#........
   235e4:	;...~...1...i.l.
   235f4:	........f.....q.
   23604:	..&'..T.........
   23614:	y...*.k..(*.[.p.
   23624:	W.........f.S..4
   23634:	...2R.?.....".<.
   23644:	..s......0..Q...
   23654:	W..#....Y.].....
   23664:	..j.u.....?...s.
   23674:	b.5..-x.....3...
   23684:	........I.......
   23694:	y.......G.e...G.
   236a4:	..L...V...y.....
   236b4:	........Q.72..j.
   236c4:	....s.0...b.....
   236d4:	.!..W.9.........
   236e4:	....C.".......G.
   236f4:	......=...q..6C.
   23704:	{.x.........4...
   23714:	<.....0.......x.
   23724:	....X.$.........
   23734:	..p.......T...z.
   23744:	O.....K.K.$.....
   23754:	C...L.......j...
   23764:	..%.....2....!s.
   23774:	..........u.H...
   23784:	....9...W*..@...
   23794:	....x.,...$...>.
   237a4:	..8...`.9...E...
   237b4:	_.G.............
   237c4:	Q.....a.l.......
   237d4:	..........|.....
   237e4:	c.4.............
   237f4:	......J.K.U.V...
   23804:	....0.1.........
   23814:	......7#..O...N.
   23824:	+...n.b..._.M.W.
   23834:	........b......"
   23844:	..-.....X&......
   23854:	8...n...u.....Z.
   23864:	......<........(
   23874:	V.V.......(.....
   23884:	p...!.".A...H...
   23894:	M. .......>.....
   238a4:	p...6./.e.*.....
   238b4:	....8.......(...
   238c4:	....0.......I.[.
   238d4:	....W.........3.
   238e4:	^.......X.......
   238f4:	3.(.....~...k...
   23904:	".....N.........
   23914:	I.....x.....v...
   23924:	=.q.........s.|.
   23934:	..../.<.......,.
   23944:	+!....V.....q.^.
   23954:	..3.......:.:.t.
   23964:	..=.......[.}...
   23974:	..............-.
   23984:	..;...,....#<...
   23994:	..#........._.}.
   239a4:	W.....S.....&.Z.
   239b4:	..u.Z.....y!%...
   239c4:	|.0.`.K.......6.
   239d4:	....K.s.{.T.v...
   239e4:	....}.3.<.......
   239f4:	..4...`.+.x..&B.
   23a04:	....O...M.......
   23a14:	....i.........7.
   23a24:	o.....=.........
   23a34:	....q.6...V...8.
   23a44:	:...I...W.4.p...
   23a54:	+...k.g.N...H...
   23a64:	..q.."..........
   23a74:	......r.....a.b.
   23a84:	..C.-.......[...
   23a94:	!.b.Z.W.G.W"..k.
   23aa4:	%...:.....5.....
   23ab4:	..^...l.....".U.
   23ac4:	....=...K.8.....
   23ad4:	..!...%..2..@...
   23ae4:	..u.....5&..u...
   23af4:	s.....?.......%.
   23b04:	......T...8.}.p.
   23b14:	....g..........$
   23b24:	Z.n.........Z..#
   23b34:	........(.......
   23b44:	H.D.........(...
   23b54:	..]...,.).......
   23b64:	<.t...8.....G...
   23b74:	..3...U.] ....".
   23b84:	..^.........z...
   23b94:	~.......... ....
   23ba4:	..F.....Y.......
   23bb4:	....P.......D.W.
   23bc4:	..k...H.m.....%.
   23bd4:	......|.........
   23be4:	..........T.{.s.
   23bf4:	`..!>...5.\...9.
   23c04:	..Y.K.........t.
   23c14:	....U.d.x.*.....
   23c24:	............D...
   23c34:	....J.....7.....
   23c44:	..C...8.........
   23c54:	7.../.).......N.
   23c64:	p.....h.....e...
   23c74:	u.....?.........
   23c84:	....F.=...y.....
   23c94:	......T...N.....
   23ca4:	.)..c...N.C.h...
   23cb4:	........!.....!.
   23cc4:	C.e...T'd.....<.
   23cd4:	J...............
   23ce4:	 ...............
   23cf4:	...&B...?.....m.
   23d04:	..>...2...A.U...
   23d14:	............W...
   23d24:	..K.........y...
   23d34:	....L.(.....u.+.
   23d44:	..........H...e.
   23d54:	*.........;.A...
   23d64:	'.Q...[.....M...
   23d74:	....$.-.N.A.!...
   23d84:	..{.....X.G.....
   23d94:	..].b...........
   23da4:	H...w...+.....h.
   23db4:	v....$..>.....[.
   23dc4:	......B.........
   23dd4:	... ....B.......
   23de4:	....C.?.........
   23df4:	\.%...F...G.W.j.
   23e04:	..{.....E.z...&.
   23e14:	................
   23e24:	..k...G.......2.
   23e34:	{...D...F.$.....
   23e44:	....1.........t.
   23e54:	5.-.......Z...!.
   23e64:	C.1.....<.....n.
   23e74:	..2.g.u.i.2.g...
   23e84:	../.6. .....&.<.
   23e94:	..,.....6.l.=.g.
   23ea4:	.....(....Z...g.
   23eb4:	..k.f......"y.`.
   23ec4:	......O...[.....
   23ed4:	..P.T.........m+
   23ee4:	........!...P...
   23ef4:	/...v.......|...
   23f04:	.. ..._.t.F.....
   23f14:	....i...&.R.1...
   23f24:	..S.............
   23f34:	-"......F.....p.
   23f44:	....../#M.......
   23f54:	.....(U.........
   23f64:	..l.......@.F...
   23f74:	W.x.............
   23f84:	......p.........
   23f94:	..s...)...V.....
   23fa4:	1.....{.\.......
   23fb4:	!...h...I.......
   23fc4:	........3...#.8$
   23fd4:	......i...F.u...
   23fe4:	I...............
   23ff4:	S.....%...s.J...
   24004:	..T.............
   24014:	....L.....d.....
   24024:	..c.2...o.......
   24034:	M.....;...'%....
   24044:	..l.....b.c.....
   24054:	w.X.......:.u.t.
   24064:	....2....... ...
   24074:	............+...
   24084:	M...}.....A.N...
   24094:	..O.7.....".....
   240a4:	..4.(.?.....&%..
   240b4:	..Y...c.>.......
   240c4:	..;.R.........H.
   240d4:	a....(+...*.....
   240e4:	..?.......T.j..&
   240f4:	..E.8.......'.P.
   24104:	....G.......3...
   24114:	^.............|.
   24124:	8.O...d.........
   24134:	....w...h.?.*...
   24144:	+...........{.o.
   24154:	E.......G.T.....
   24164:	Z...F...........
   24174:	+.j.......w...b.
   24184:	E.<.....k..+..&.
   24194:	..............+.
   241a4:	..:.....L.).5...
   241b4:	..I...Y...O!....
   241c4:	..B.<.y..-....O.
   241d4:	8...u...t'......
   241e4:	Y.D.............
   241f4:	....?.a.(.......
   24204:	....:......)..,#
   24214:	i.~.;.Q.<.......
   24224:	t...h.......8...
   24234:	..3.....S...!.w.
   24244:	...."...........
   24254:	....X.P.X...C.v.
   24264:	2.<.........Z...
   24274:	........@...`...
   24284:	..d.K.6.#.p.....
   24294:	..Z ......%.n.*.
   242a4:	-.m.s.....@.=.".
   242b4:	..y.......>.. V.
   242c4:	../.'...w+f.....
   242d4:	..p.y...........
   242e4:	..........q.....
   242f4:	......[...b'$.2.
   24304:	b.......)...N.-.
   24314:	R...........k.^.
   24324:	........@.....H.
   24334:	2.q.o.p.m...G...
   24344:	........H.v.....
   24354:	....t.z.....4...
   24364:	....t...f...7(..
   24374:	................
   24384:	........*.......
   24394:	........m...N.:.
   243a4:	................
   243b4:	....m...u...y...
   243c4:	......U.........
   243d4:	%.....5.h.d.....
   243e4:	..R...8.a.2.t...
   243f4:	..%.....I......(
   24404:	/......*..-...o-
   24414:	..D.............
   24424:	..I...*..%..)...
   24434:	............Z.;.
   24444:	........:.'.....
   24454:	f.....".....3...
   24464:	f...o.......n.D.
   24474:	N.E.....8.j.i...
   24484:	....q.9...)...S.
   24494:	................
   244a4:	t.?.<...Y.\...~.
   244b4:	................
   244c4:	..............F.
   244d4:	..i...u........(
   244e4:	!.E+............
   244f4:	....Q...O...t...
   24504:	................
   24514:	..z........"..J.
   24524:	........S.......
   24534:	....P.E.#.;...Q.
   24544:	y...v.....v.^...
   24554:	;.......R.H.g...
   24564:	..3.T.].....&...
   24574:	...#P.....)...y.
   24584:	F...2.....#.....
   24594:	..K.....t.d...u.
   245a4:	................
   245b4:	..&.....r.".V...
   245c4:	....d.:.O.......
   245d4:	..&.......0.;...
   245e4:	........;...=...
   245f4:	......5*v.1.%...
   24604:	/...........P.f.
   24614:	..........I.)...
   24624:	..............].
   24634:	..I...0.......#.
   24644:	..T..... ...0...
   24654:	.. .........`...
   24664:	......J...w.....
   24674:	l.....".........
   24684:	..........4.}...
   24694:	9...o...........
   246a4:	<.}.............
   246b4:	.2......^2-.....
   246c4:	....b.:...8...*.
   246d4:	!...........r.S.
   246e4:	......K.2.r.$...
   246f4:	....7.0...v...X.
   24704:	........H...<.h.
   24714:	?.`...Y.h.. t...
   24724:	*.....d&b.......
   24734:	..1._.4...}.K...
   24744:	..d.........n.z.
   24754:	..$."...1.\.....
   24764:	........P....!..
   24774:	..A.:..!....:...
   24784:	..^.A.....K.H.7.
   24794:	......=.w.7.K.N.
   247a4:	..'.;.......O.%.
   247b4:	/.....*.....O...
   247c4:	......q.6.{.O.).
   247d4:	..b.^...A.....t.
   247e4:	_.....`...8...{.
   247f4:	......{...E.@.R.
   24804:	..........O.q.+.
   24814:	............&...
   24824:	}.D...J.R.Q.t...
   24834:	........y.X.X...
   24844:	V.......I.....C.
   24854:	......m...2.N...
   24864:	........2.....S.
   24874:	o.D+..+...'...Z.
   24884:	..2.....}.......
   24894:	....,.l.t.|.l. .
   248a4:	............p.&.
   248b4:	..a.^...........
   248c4:	....r.&......$..
   248d4:	....P...%.v.....
   248e4:	,./.k.........~.
   248f4:	......a.@.{...~.
   24904:	5.C.>...6...t...
   24914:	..L...T.Z...M.l.
   24924:	R.+...L.9.......
   24934:	....C...b.<![.x.
   24944:	<...o.6...e.V.j.
   24954:	}.|._.....k.....
   24964:	................
   24974:	....&.S...v...T.
   24984:	.!..6...-...."..
   24994:	.*r.{...........
   249a4:	....f.%.....q.\.
   249b4:	...'....... ....
   249c4:	......t.........
   249d4:	..1...I...Y.t.!.
   249e4:	......#.......I%
   249f4:	z.).d.b...B.....
   24a04:	.. .>.....^.....
   24a14:	........U...@...
   24a24:	............U...
   24a34:	..G.....).......
   24a44:	..O....5o...n.9.
   24a54:	C.2.....`...&.E.
   24a64:	.......... ...o.
   24a74:	..7...Y...Y.t.V.
   24a84:	E.y.....(...~...
   24a94:	2.....".!...3...
   24aa4:	....h.A.........
   24ab4:	@.....g.........
   24ac4:	..J...e.......=.
   24ad4:	........_./...A.
   24ae4:	..P.........(...
   24af4:	" B.I.$.K.......
   24b04:	$.....z.......=.
   24b14:	......0...A...O.
   24b24:	............W...
   24b34:	s.....>.`....#..
   24b44:	..E.F ~.z...P...
   24b54:	....K...L.......
   24b64:	1...%.......n.N.
   24b74:	..........E.'...
   24b84:	8...8.].R.7.$.`.
   24b94:	../.........1...
   24ba4:	|...0.B...5.<...
   24bb4:	..|.(...w"B.\...
   24bc4:	t.......Y.......
   24bd4:	........+  ...t.
   24be4:	............d.X.
   24bf4:	..C.g.....4...?.
   24c04:	-....1..Q.\;}...
   24c14:	../...u.....]...
   24c24:	................
   24c34:	..........9.....
   24c44:	j...%...K.....E.
   24c54:	....R.b$....C.B.
   24c64:	......5.....W...
   24c74:	....f.:.......S.
   24c84:	(...Y...........
   24c94:	..X.....j.9.y.Y.
   24ca4:	%.......L.'.A...
   24cb4:	..Z.....D.......
   24cc4:	........t.......
   24cd4:	........a.......
   24ce4:	........|.......
   24cf4:	..w.......O...8.
   24d04:	a...............
   24d14:	..m...Z.....O...
   24d24:	....}.8........&
   24d34:	K. .N.u.a.Z.....
   24d44:	..K...y..*..y...
   24d54:	./..e.i.7.......
   24d64:	W...'.%.......1.
   24d74:	T....(..0.W.?...
   24d84:	........9.......
   24d94:	....C...+...P.$.
   24da4:	.!..i...&.).....
   24db4:	....C.K.........
   24dc4:	....}...p)..U...
   24dd4:	........!.n.n..7
   24de4:	..n.........a.^.
   24df4:	f.Q.>...2.......
   24e04:	......9.....:.j.
   24e14:	....d...~.......
   24e24:	0.....6.j.....-.
   24e34:	..i.......".,...
   24e44:	..........<.{..*
   24e54:	..K.......v...X.
   24e64:	F...f...2.2.%...
   24e74:	......}.+..&t...
   24e84:	...$..}.......1.
   24e94:	..B.......#.2...
   24ea4:	..........#...z.
   24eb4:	..Q.#.<...$.f...
   24ec4:	m.....H.........
   24ed4:	G.k.."....9.....
   24ee4:	k...\%..H...U...
   24ef4:	Z.w.............
   24f04:	z.D.f.r.3.X....#
   24f14:	....+.,...6.....
   24f24:	..y.....Z...).4.
   24f34:	....c...J.......
   24f44:	..].v.X...9.^...
   24f54:	,.......S.....;.
   24f64:	..........Q.....
   24f74:	F...W..-p....._.
   24f84:	F.............n.
   24f94:	.'....z.'...k...
   24fa4:	......3.c...+...
   24fb4:	..{.!.o...M.....
   24fc4:	......}.....d..$
   24fd4:	^.M.......e.R.."
   24fe4:	v.....8...Z...I.
   24ff4:	..........."....
   25004:	......t.......P.
   25014:	....y.........m.
   25024:	..'.l.....[...&.
   25034:	 .........u.L...
   25044:	......?!..9.....
   25054:	..@...3.........
   25064:	............*.h.
   25074:	%...i.....>.<.<.
   25084:	....8...W...$...
   25094:	....=...x.......
   250a4:	X.:.7.M...m.....
   250b4:	..|.<...8.......
   250c4:	........R.....).
   250d4:	...5..........-.
   250e4:	......G...!.Z.'.
   250f4:	..........t.7.i.
   25104:	=.....5.i...W...
   25114:	?.T.u...t.:._*..
   25124:	..+.)...p.f.....
   25134:	...._.....I.|...
   25144:	C.....%.t.. ...-
   25154:	..>...].d.......
   25164:	..J...+...U.....
   25174:	W.......L.j...l)
   25184:	7.......u.......
   25194:	..j...t...U.....
   251a4:	..o.Z.j.....f.d.
   251b4:	....m.7.....5...
   251c4:	N.....A...o...9.
   251d4:	..j.l.....X.....
   251e4:	@...........>...
   251f4:	n.f...l.........
   25204:	......}.......b.
   25214:	|.Q.....5.0.q...
   25224:	..S.....7.2.'...
   25234:	F.....k.........
   25244:	8...-...V.......
   25254:	....L...X.p.`...
   25264:	....v.....V.H...
   25274:	..........".&...
   25284:	7...(.-.W.......
   25294:	..s.{.)...b...!.
   252a4:	....=.........b.
   252b4:	............5...
   252c4:	l.....^.$.......
   252d4:	..V.c...#.o.....
   252e4:	....V...........
   252f4:	>.L.M..!....b...
   25304:	..v.......p...r.
   25314:	N...e...J&/.`...
   25324:	A.8.i.c.........
   25334:	w.g.........9.X.
   25344:	;......'X.......
   25354:	 .j.M.L.l...'...
   25364:	e.r.a...%...~._.
   25374:	..E.c...........
   25384:	..>.O.M.x..."...
   25394:	..~.c...r.[.....
   253a4:	....e.H.E.....?.
   253b4:	..y.@.K.........
   253c4:	....E.G...k....$
   253d4:	Z...H.........V.
   253e4:	7.......K...a.O.
   253f4:	f.........9.....
   25404:	............S...
   25414:	..e.U...@...,.{.
   25424:	..&.\.. ....R...
   25434:	....."....T..%$.
   25444:	...'............
   25454:	..u.............
	...

000254a4 <sample_3_standard_DRUMS_scratch>:
   254a4:	.... .....A.....
   254b4:	....82....!.2.."
   254c4:	U...f....... ...
   254d4:	Z..(........4...
   254e4:	..T+..w.J+-.;.`.
   254f4:	i..S..........r.
   25504:	.8_.D.......g.L.
   25514:	.@...(......|...
   25524:	..V.B...n'"...7.
   25534:	..L6...........*
   25544:	..iM..^@J...;...
   25554:	jA...Z...W......
   25564:	....@.."_.s.P..Y
   25574:	....w.i.D....#..
   25584:	.....#M.....l...
   25594:	..0.............
   255a4:	`.............O.
   255b4:	........1$6..(..
   255c4:	n...1..,..A.T...
   255d4:	;.$.8.7.K.w.#..:
   255e4:	......S.j+....6.
   255f4:	........!..*....
   25604:	......h%.......%
   25614:	a%.4......o...s.
   25624:	..y..*..;Y...$t.
   25634:	.............1u.
   25644:	Y:a.........\!..
   25654:	.0...#......0.c.
   25664:	K....22.....j.:.
   25674:	..%<Y.l.........
   25684:	..t..8".[.......
   25694:	|......"...K..Q8
   256a4:	&.......4...w.N.
   256b4:	^...........E...
   256c4:	....x.....%.e...
   256d4:	_......+....;..B
   256e4:	..A.....i7O ....
   256f4:	..!.uEn...T..3s.
   25704:	..........n.t...
   25714:	..<..8..:...R:.-
   25724:	..&.....A){.....
   25734:	../e).........l.
   25744:	.......,..t.....
   25754:	5...B.d..+......
   25764:	...!k.g...L.}.r7
   25774:	B.....C.g...O5..
   25784:	7...J.......5.I.
   25794:	.......,.?....E.
   257a4:	...'.8L. ....9.<
   257b4:	c...u....7....{.
   257c4:	"........._....*
   257d4:	o......7[!~.....
   257e4:	].....\.........
   257f4:	{.............K.
   25804:	........c......5
   25814:	......a.....U...
   25824:	)..0......?.....
   25834:	....\.."].!.....
   25844:	....3.......#...
   25854:	.5 6......P..<..
   25864:	2...l.m=....9...
   25874:	BH36....f..6&)l.
   25884:	p.C.4)|,.......K
   25894:	.%..&.9...4%....
   258a4:	...-.!..:.....n.
   258b4:	Y.d....'....;...
   258c4:	..r..........&j.
   258d4:	...............0
   258e4:	......f.g.......
   258f4:	..uJ.*..L.....T.
   25904:	.....?6 ........
   25914:	..p....$..4.....
   25924:	3._.[......:....
   25934:	3.x"a...A...gV..
   25944:	.....0.2....m...
   25954:	q?........t,....
   25964:	k.C..#........s(
   25974:	......g..=......
   25984:	1.R........"....
   25994:	......\-7...a.G.
   259a4:	=...}.....W?..;.
   259b4:	:......./..9....
   259c4:	...1.9..X....A.+
   259d4:	|......Oe...e...
   259e4:	...+......-....,
   259f4:	....9.. l....'Q.
   25a04:	.....:..........
   25a14:	g..2.(B1....Q.M.
   25a24:	.....#........P.
   25a34:	D......:..(.....
   25a44:	.....5T \......A
   25a54:	.....+.JF...'..(
   25a64:	....*5Z&+...z..9
   25a74:	..l... 7t.m.,...
   25a84:	x...m...........
   25a94:	....".<&Y.....n.
   25aa4:	........3.9-....
   25ab4:	....?.(...o...^.
   25ac4:	......9)h-..P.^.
   25ad4:	..j......,..r..)
   25ae4:	..l.g..>:$....G"
   25af4:	..r....,x.($....
   25b04:	.....&2......2k.
   25b14:	@.+......!......
   25b24:	%... ...%-.9....
   25b34:	.......S<.......
   25b44:	k.....X+..Q.w.q.
   25b54:	...........A../.
   25b64:	..h..*G...D...Z.
   25b74:	....Q.. ..d.....
   25b84:	...6..8.f.4.0...
   25b94:	........'.....?.
   25ba4:	.......7..{...p.
   25bb4:	....-...`...T...
   25bc4:	..........M#M)..
   25bd4:	......J.......Q.
   25be4:	n=/.*#..u.J.....
   25bf4:	.....,..c.......
   25c04:	....d.....G.....
   25c14:	.-......~..GL...
   25c24:	........X.....?#
   25c34:	.....8e..B1.@..,
   25c44:	..n........ ,...
   25c54:	..."......v7u...
   25c64:	........N.......
   25c74:	......%*..H.....
   25c84:	E.j=W..3.=......
   25c94:	6.......)!....K.
   25ca4:	..Z......%...51.
   25cb4:	.-..:.2.b...}.."
   25cc4:	.;........}.O...
   25cd4:	E0....f...}.....
   25ce4:	..N7A...Y......"
   25cf4:	:.V(o._b}.7.A"H.
   25d04:	....B.....n.....
   25d14:	....,.3+u.Q...v4
   25d24:	..4%..T.F&5....6
   25d34:	?.d......(J.0&..
   25d44:	' ....s.V".;c.A.
   25d54:	...?h........<..
   25d64:	..P..*....`..&..
   25d74:	.......6;......*
   25d84:	 .....{.."t.....
   25d94:	B...e....#*.....
   25da4:	..1........(=..5
   25db4:	..|7......;.q.f.
   25dc4:	z.j...=.....".4#
   25dd4:	\$....;.N.7....1
   25de4:	.0%...Y...>....'
   25df4:	.2>...\....... .
   25e04:	E3."... ..b.D.[.
   25e14:	**.%............
   25e24:	.%..m.h.......e.
   25e34:	..T%k.....j.....
   25e44:	. Y.;..... .b.k.
   25e54:	Z.....^.....8...
   25e64:	X...w.....]._'#.
   25e74:	.....4F.w.f.|.W.
   25e84:	~.2..].......P..
   25e94:	)....?..F.V../D.
   25ea4:	........S.<.....
   25eb4:	`.Z.u.e.6.....v.
   25ec4:	b.....6&..u.....
   25ed4:	j......F........
   25ee4:	......!8......W.
   25ef4:	'.Z....$n.v<Z.z.
   25f04:	f.m<....&.......
   25f14:	r.,.].y"........
   25f24:	:,\.).p.e.$.|...
   25f34:	.D............_.
   25f44:	......%.d.X.!...
   25f54:	k...H....%.."...
   25f64:	]..5..q ..|.....
   25f74:	...#A.......a...
   25f84:	..;.h.d...f...'$
   25f94:	......v.....;.'.
   25fa4:	^...z.M$......-.
   25fb4:	...3...2.....(b.
   25fc4:	....@..#...6....
   25fd4:	.@....2...j.:"..
   25fe4:	....A...........
   25ff4:	3.<.].p........1
   26004:	|.......Q..$G.i!
   26014:	........[.......
   26024:	..o.p..(........
   26034:	.0..^..&a.u.[.A.
   26044:	Z.F.......,.q.T.
   26054:	S...N...D.k...r.
   26064:	....8....I......
   26074:	..S...y.....X.A1
   26084:	/....73..Di.a..3
   26094:	G.@.7%i.........
   260a4:	W...6/K...E.....
   260b4:	...)..w....,....
   260c4:	..l..@....#.....
   260d4:	.....5v.].!B..n"
   260e4:	....o?..c.A!}...
   260f4:	...PK..-......i.
   26104:	.$..<..../..\.<.
   26114:	.....)A.......u.
   26124:	......6...MI...,
   26134:	..........A.:..E
   26144:	W...p-g...U..._.
   26154:	r7....;.$....&..
   26164:	>..'...!p.V8~...
   26174:	j#..w.O...(...u.
   26184:	... m.......y..$
   26194:	................
	...

000262a4 <sample_7_standard_DRUMS_verbclickwave>:
   262a4:	....,...;.O.....
   262b4:	t...A.!.....2...
   262c4:	..j.9.$.O.......
   262d4:	................
   262e4:	g.........G._...
   262f4:	3.^.J...........
   26304:	....V.......P.B.
   26314:	....m.........m.
   26324:	1r..$..&1r..1r..
   26334:	$.1r$.$.1r1r$.1r
   26344:	KX$.1r^H..V.1r$.
   26354:	Y..U$.1r1r..$.1r
   26364:	5....j.0r.+5:...
   26374:	...._C..G.+... (
   26384:	P.#.1ry...=.r..G
   26394:	..f.."."..`=.G[.
   263a4:	..OSF.n.*]..$.1r
   263b4:	.I....;..Ga.E..n
   263c4:	........@...S<#.
   263d4:	...J46$...1r....
   263e4:	.eb...1r..$.\n..
   263f4:	...a..$.|(.*...5
   26404:	D...1r.....Q..m.
   26414:	..E5....C.... ..
   26424:	T..H...1=...9,..
   26434:	@..F.*m..2..2...
   26444:	s....@.J..?.9Rl9
   26454:	..P..4.....)....
   26464:	.E......w#..+...
   26474:	....b.Q...R.#...
   26484:	..7........4e.c.
   26494:	m!d...A5..?...I2
   264a4:	..9..G... ...../
   264b4:	..a...c..E^.Q.0.
   264c4:	B.8.......p.....
   264d4:	........:8......
   264e4:	.....)y.5..O..2.
   264f4:	K.x ...;P.....).
   26504:	v.......f*z.z.#!
   26514:	..............&.
   26524:	.........)......
   26534:	......h.....\.X.
   26544:	...!S.~.....`.K.
   26554:	..].......".....
   26564:	...%...........5
   26574:	....y)..M.K<....
   26584:	.,..y.......U.A.
   26594:	..*...........t,
   265a4:	....$.1r(X..1r$.
   265b4:	V.ZEb...1rM.$.1r
   265c4:	g.$.1r.....:....
   265d4:	.9..3.A;........
   265e4:	Y.........V...).
   265f4:	..H...1.y.8.....
   26604:	......U.........
   26614:	..n.k...{..*..h.
   26624:	...+..+..+.....L
   26634:	....I.M.....v..%
   26644:	B....../..$.....
   26654:	..3........1....
   26664:	5,..b.\DD...A5L.
   26674:	".F(....4..;D.$.
   26684:	....6.v...7...^.
   26694:	K...... ..H..!d.
   266a4:	X.3>.....I.8...6
   266b4:	(...z$4...0&{...
   266c4:	.*....zP.....@..
   266d4:	..8%..s..).'..].
   266e4:	..5...\...L.....
   266f4:	................
   26704:	. [.S...;.....A.
   26714:	......U*o.L.....
   26724:	@...........U.R.
   26734:	..j...d..!......
   26744:	..............E.
   26754:	...._)..........
   26764:	......V...J.....
   26774:	...'....x...M...
   26784:	.....'D.\.v.../(
   26794:	....].O...b.',V.
   267a4:	......$.....>...
   267b4:	........a.......
   267c4:	........O...=...
   267d4:	................
   267e4:	..C.............
   267f4:	a...*...........
   26804:	..|.~.\.....|...
   26814:	#...y.....a.O...
   26824:	'.......~.....V.
   26834:	../.j.......X...
   26844:	..W...@.(.......
   26854:	....../.#.......
   26864:	v...D.#.c.c...&.
   26874:	............L.T.
   26884:	....~.....|...8.
   26894:	..+.............
   268a4:	L.....*.t.!.a'..
   268b4:	..M.......,.:.t.
   268c4:	p.........X.".G.
   268d4:	........k.....c.
   268e4:	>.....J.......v.
   268f4:	v...'.....^.6.R.
   26904:	........G.......
   26914:	..6.......n.....
   26924:	{.....L...[. .<.
   26934:	W.......'.O.....
   26944:	........1.a.....
   26954:	..r.......K.N...
   26964:	..(.z...".......
   26974:	,.#...a.J.V.....
   26984:	..........b.....
   26994:	o...6.j.........
   269a4:	n...............
   269b4:	....!.}. .0.....
   269c4:	e.........$.|...
   269d4:	..R./.......9...
   269e4:	..^...,.........
   269f4:	........J.].....
   26a04:	..........i.\...
   26a14:	..e...?.....L...
   26a24:	..H.v.F.A.%...>.
   26a34:	X.........!.-...
   26a44:	#.'...F.......].
   26a54:	G.t...).....*...
   26a64:	....l.......8.=.
   26a74:	.._...........0.
   26a84:	P.........].....
   26a94:	x.........o.y.g.
   26aa4:	......@.........
   26ab4:	......J.........
   26ac4:	p...'...'.L...".
   26ad4:	....<...o...i...
   26ae4:	D.........x.....
   26af4:	..).j.......[.w.
   26b04:	..|...........].
   26b14:	..N.z...?.......
   26b24:	......9...L.....
   26b34:	..j.............
   26b44:	..d.T.T...<...!.
   26b54:	..b.............
   26b64:	..D.I.........E.
   26b74:	G...y.....k.%...
   26b84:	Z.....}.......".
   26b94:	..i..._.f.t...>.
   26ba4:	........../...i.
   26bb4:	$.(...~.........
   26bc4:	..q...........p.
   26bd4:	5.G.......K.s...
   26be4:	..~.h.D.........
   26bf4:	S.d.....A...q.*.
   26c04:	7.r.8...........
	...

00026ca4 <sample_10_standard_DRUMS_verbclickwave>:
   26ca4:	....,...;.O.....
   26cb4:	t...A.!.....2...
   26cc4:	..j.9.$.O.......
   26cd4:	................
   26ce4:	g.........G._...
   26cf4:	3.^.J...........
   26d04:	....V.......P.B.
   26d14:	....m.........m.
   26d24:	1r..$..&1r..1r..
   26d34:	$.1r$.$.1r1r$.1r
   26d44:	KX$.1r^H..V.1r$.
   26d54:	Y..U$.1r1r..$.1r
   26d64:	5....j.0r.+5:...
   26d74:	...._C..G.+... (
   26d84:	P.#.1ry...=.r..G
   26d94:	..f.."."..`=.G[.
   26da4:	..OSF.n.*]..$.1r
   26db4:	.I....;..Ga.E..n
   26dc4:	........@...S<#.
   26dd4:	...J46$...1r....
   26de4:	.eb...1r..$.\n..
   26df4:	...a..$.|(.*...5
   26e04:	D...1r.....Q..m.
   26e14:	..E5....C.... ..
   26e24:	T..H...1=...9,..
   26e34:	@..F.*m..2..2...
   26e44:	s....@.J..?.9Rl9
   26e54:	..P..4.....)....
   26e64:	.E......w#..+...
   26e74:	....b.Q...R.#...
   26e84:	..7........4e.c.
   26e94:	m!d...A5..?...I2
   26ea4:	..9..G... ...../
   26eb4:	..a...c..E^.Q.0.
   26ec4:	B.8.......p.....
   26ed4:	........:8......
   26ee4:	.....)y.5..O..2.
   26ef4:	K.x ...;P.....).
   26f04:	v.......f*z.z.#!
   26f14:	..............&.
   26f24:	.........)......
   26f34:	......h.....\.X.
   26f44:	...!S.~.....`.K.
   26f54:	..].......".....
   26f64:	...%...........5
   26f74:	....y)..M.K<....
   26f84:	.,..y.......U.A.
   26f94:	..*...........t,
   26fa4:	....$.1r(X..1r$.
   26fb4:	V.ZEb...1rM.$.1r
   26fc4:	g.$.1r.....:....
   26fd4:	.9..3.A;........
   26fe4:	Y.........V...).
   26ff4:	..H...1.y.8.....
   27004:	......U.........
   27014:	..n.k...{..*..h.
   27024:	...+..+..+.....L
   27034:	....I.M.....v..%
   27044:	B....../..$.....
   27054:	..3........1....
   27064:	5,..b.\DD...A5L.
   27074:	".F(....4..;D.$.
   27084:	....6.v...7...^.
   27094:	K...... ..H..!d.
   270a4:	X.3>.....I.8...6
   270b4:	(...z$4...0&{...
   270c4:	.*....zP.....@..
   270d4:	..8%..s..).'..].
   270e4:	..5...\...L.....
   270f4:	................
   27104:	. [.S...;.....A.
   27114:	......U*o.L.....
   27124:	@...........U.R.
   27134:	..j...d..!......
   27144:	..............E.
   27154:	...._)..........
   27164:	......V...J.....
   27174:	...'....x...M...
   27184:	.....'D.\.v.../(
   27194:	....].O...b.',V.
   271a4:	......$.....>...
   271b4:	........a.......
   271c4:	........O...=...
   271d4:	................
   271e4:	..C.............
   271f4:	a...*...........
   27204:	..|.~.\.....|...
   27214:	#...y.....a.O...
   27224:	'.......~.....V.
   27234:	../.j.......X...
   27244:	..W...@.(.......
   27254:	....../.#.......
   27264:	v...D.#.c.c...&.
   27274:	............L.T.
   27284:	....~.....|...8.
   27294:	..+.............
   272a4:	L.....*.t.!.a'..
   272b4:	..M.......,.:.t.
   272c4:	p.........X.".G.
   272d4:	........k.....c.
   272e4:	>.....J.......v.
   272f4:	v...'.....^.6.R.
   27304:	........G.......
   27314:	..6.......n.....
   27324:	{.....L...[. .<.
   27334:	W.......'.O.....
   27344:	........1.a.....
   27354:	..r.......K.N...
   27364:	..(.z...".......
   27374:	,.#...a.J.V.....
   27384:	..........b.....
   27394:	o...6.j.........
   273a4:	n...............
   273b4:	....!.}. .0.....
   273c4:	e.........$.|...
   273d4:	..R./.......9...
   273e4:	..^...,.........
   273f4:	........J.].....
   27404:	..........i.\...
   27414:	..e...?.....L...
   27424:	..H.v.F.A.%...>.
   27434:	X.........!.-...
   27444:	#.'...F.......].
   27454:	G.t...).....*...
   27464:	....l.......8.=.
   27474:	.._...........0.
   27484:	P.........].....
   27494:	x.........o.y.g.
   274a4:	......@.........
   274b4:	......J.........
   274c4:	p...'...'.L...".
   274d4:	....<...o...i...
   274e4:	D.........x.....
   274f4:	..).j.......[.w.
   27504:	..|...........].
   27514:	..N.z...?.......
   27524:	......9...L.....
   27534:	..j.............
   27544:	..d.T.T...<...!.
   27554:	..b.............
   27564:	..D.I.........E.
   27574:	G...y.....k.%...
   27584:	Z.....}.......".
   27594:	..i..._.f.t...>.
   275a4:	........../...i.
   275b4:	$.(...~.........
   275c4:	..q...........p.
   275d4:	5.G.......K.s...
   275e4:	..~.h.D.........
   275f4:	S.d.....A...q.*.
   27604:	7.r.8...........
	...

000276a4 <sample_0_standard_DRUMS_filtersnap>:
   276a4:	....5.3LE.l6..O.
   276b4:	:O..1..0q....9..
   276c4:	_L......gL..}9=.
   276d4:	).U..3S....c..l.
   276e4:	..j.dPD..6F#....
   276f4:	e..3HR%.<.!0....
   27704:	....[C<P|....8..
   27714:	. ......./.g....
   27724:	.......1........
   27734:	.:=ew.....V...@.
   27744:	.@H!..p.}.D.J-me
   27754:	.8.. ...@.N.K.A.
   27764:	.;.<..........~ 
   27774:	.S.n.5..".......
   27784:	.*/....".+ML.?..
   27794:	A.........U..C.d
   277a4:	.y.e........Z.J.
   277b4:	..G..C.>........
   277c4:	...-=8.H......B.
   277d4:	N..........+.B.Q
   277e4:	^W.U.N.D.3..[...
   277f4:	......M.0.|.I.k.
   27804:	o(l/.0,..(....(.
   27814:	9.P........&.2E9
   27824:	K;C:*743./.,.'..
   27834:	...... .3.......
   27844:	~.%.j.|.........
   27854:	....E.o.\...M.. 
   27864:	7$;'.)`+},--P-I-
   27874:	:-.,.,.'..Q.|...
   27884:	..-...........T.
   27894:	[.L.............
   278a4:	..>.+...l.M.j...
   278b4:	........=.o.4.C.
   278c4:	/...$...........
   278d4:	........6.M.X.N.
   278e4:	...._.....,.q...
   278f4:	....#.%.A...g...
   27904:	V...$.....v.....
   27914:	..6...%.=.$...n.
   27924:	................
   27934:	........k .!.!4"
   27944:	."."%#U#x#.#.#k#
   27954:	I#.".".".!. - Q.
   27964:	5.........o.!...
   27974:	4.....7.w.......
   27984:	........8.......
   27994:	....*.......3.'.
   279a4:	......J.d.....Y.
   279b4:	......+.,./.....
   279c4:	..N.......{.....
   279d4:	..).....E...}...
   279e4:	................
	...

00027aa4 <sample_42_standard_DRUMS_belltree>:
	...
   27ad4:	................
   27ae4:	..............G.
   27af4:	....K.........E.
   27b04:	..).......2.m...
   27b14:	*.........1...2.
   27b24:	........(...w.N.
   27b34:	..h.......I.}...
   27b44:	........>.......
   27b54:	......8.h.#.8.G.
   27b64:	..G.m...........
   27b74:	......1.7...[.*.
   27b84:	[.......[...W.W.
   27b94:	[.|.......\...r.
   27ba4:	....>.......t...
   27bb4:	......S...9.....
   27bc4:	 ...5.U.s...Y...
   27bd4:	..a._.....@...O.
   27be4:	..;.........o...
   27bf4:	N.!.(.......N...
   27c04:	2.....B.q.....M.
   27c14:	.. .....+.......
   27c24:	Q...P.........y.
   27c34:	L.4.b.........?.
   27c44:	..B.[...........
   27c54:	......|...V.....
   27c64:	k.....$...>...=.
   27c74:	..@...I.........
   27c84:	..D.7.....w.o...
   27c94:	..........P...|.
   27ca4:	................
   27cb4:	w.,.y.......>...
   27cc4:	..5.......%...H.
   27cd4:	).Y.;.,.;...i.k.
   27ce4:	o.9...#.........
   27cf4:	7. .......|...v.
   27d04:	..#.>.w.9.......
   27d14:	0.&...l.1.z.A.%.
   27d24:	9.D.....6...I.4.
   27d34:	..^._.q.....q...
   27d44:	....m.H.........
   27d54:	#.'.........Q...
   27d64:	............Q...
   27d74:	A.............D.
   27d84:	<...............
   27d94:	:.`.......C.!.4.
   27da4:	v...............
   27db4:	Y...........o...
   27dc4:	..#.Y...F.D...9.
   27dd4:	(...s.......k.L.
   27de4:	..s.............
   27df4:	P...............
   27e04:	....Q.6...).....
   27e14:	............w...
   27e24:	u...........s...
   27e34:	E..._.....w.....
   27e44:	..........@.....
   27e54:	..^...S.:.w...m.
   27e64:	/.g...........[.
   27e74:	......J.5...D.R.
   27e84:	........K.....u.
   27e94:	C.p.".......x...
   27ea4:	+.*. ...........
   27eb4:	..e...M.(.......
   27ec4:	..+.G.~.........
   27ed4:	..............,.
   27ee4:	......d.........
   27ef4:	......K...Z.%...
   27f04:	^...v...'.....f.
   27f14:	9.....K.R.....t.
   27f24:	..J...@.d.......
   27f34:	....x.>.x.5.x...
   27f44:	W...{.......L.f.
   27f54:	....W.J.^.......
   27f64:	*.Y.S.......-.X.
   27f74:	n.....a.z.......
   27f84:	....x.......9...
   27f94:	..I...........~.
   27fa4:	?.........H...c.
   27fb4:	......n.O.H...|.
   27fc4:	{.}.f.5...v.'.5.
   27fd4:	<.|.c...........
   27fe4:	L.N.....~.+.W.#.
   27ff4:	..}.E.@...(.H...
   28004:	..}...%.....]...
   28014:	....R.4.2.......
   28024:	Z.............d.
   28034:	\.......A.J.....
   28044:	..'.z.h.B.......
   28054:	......y.i.....I.
   28064:	~.O...>.........
   28074:	....(...i.P.....
   28084:	......m.....R...
   28094:	........g.k.j...
   280a4:	..o...........q.
   280b4:	..,.........R./.
   280c4:	..J.Q.....Z.....
   280d4:	..H.$.X.........
   280e4:	....2.w...n.b.. 
   280f4:	..,...u.........
   28104:	..`.d...P.......
   28114:	..8...A...D.|&..
   28124:	.!O.......e.y.d.
   28134:	5.....@.........
   28144:	..J.......W....#
   28154:	..0#......R...d.
   28164:	.&..A.........Q.
   28174:	y.[.........U...
   28184:	."[.......].....
   28194:	........c... ...
   281a4:	+...........i.).
   281b4:	....&.$.9.=.3.B.
   281c4:	..%.....(.T.....
   281d4:	..`.....H.n.7...
   281e4:	X.J.....3...]...
   281f4:	......#.........
   28204:	h&[.L,<.Y.Z...+.
   28214:	v.......+...].L.
   28224:	r...].I.j.....a.
   28234:	............V...
   28244:	b.A.g...........
   28254:	....0.p.......0.
   28264:	....R.%.......'.
   28274:	H......!........
   28284:	......4..!..z...
   28294:	......v.).......
   282a4:	:.!.......~._...
   282b4:	....b.A ......].
   282c4:	&...........D.&.
   282d4:	o.p...y...... ..
   282e4:	0.....c. .0...5.
   282f4:	......k._.....=.
   28304:	m...c.y...<.E.,.
   28314:	....y.7.......=.
   28324:	......X.4#s.u...
   28334:	..i&...$....g.W.
   28344:	)...$...i.....D.
   28354:	......I.......P.
   28364:	..C..42...a.....
   28374:	*.g........#..s.
   28384:	......5..+..k...
   28394:	........j.....V.
   283a4:	r...z.x.....u-3.
   283b4:	.."....,:.R...M.
   283c4:	..........S.|.t.
   283d4:	o...*.......,...
   283e4:	....."K.+6......
   283f4:	..$...k.....u.v.
   28404:	..v.............
   28414:	....X.(&......J.
   28424:	..6...Z...;.P.*.
   28434:	]...n.....).....
   28444:	T...0...........
   28454:	J...............
   28464:	..L.7+...7...$4.
   28474:	.+k..#........'.
   28484:	......6.$6p..1..
   28494:	l.k.........,.^.
   284a4:	................
   284b4:	['..L.[.^.2...*.
   284c4:	..J.......1.*.w.
   284d4:	..-...*...%.x...
   284e4:	......... ....].
   284f4:	........`.3.e...
   28504:	..,......#...'..
   28514:	."......V..#..a.
   28524:	......S.p...0.X.
   28534:	.(..>.X.......c.
   28544:	..C..*k.r1......
   28554:	.....*g..(....}.
   28564:	..c...#.= ..1...
   28574:	....\.C.......S.
   28584:	....O..,....."..
   28594:	.1..o.P.C.....*.
   285a4:	y.u.....k.......
   285b4:	..x.......@+..."
   285c4:	....s...<!..j...
   285d4:	....[...u.......
   285e4:	|...%.......^...
   285f4:	..........+.)...
   28604:	............k...
   28614:	!$..Y.J.........
   28624:	3.a.a.....`#&...
   28634:	.!......G.O.N...
   28644:	..Y...!.b.......
   28654:	.........$..(...
   28664:	N....>j..P\.(E..
   28674:	... ;..1z..<...I
   28684:	...Eg.PvO..8..i.
   28694:	."... ..........
   286a4:	..m..%........p.
   286b4:	...%).8...C'..w%
   286c4:	{..!..p.....P...
   286d4:	..........l.#...
   286e4:	V.7.u..-k.......
   286f4:	<.....}6 ...p...
   28704:	F.!.@-m.Q.......
   28714:	..(.=...x.....}8
   28724:	l.y*......+.....
   28734:	6.3.....5'm./.P.
   28744:	^........'..h...
   28754:	/.g.......*..6T.
   28764:	......W....*n.h.
   28774:	-..........<%..)
   28784:	j.a.....q.....d.
   28794:	................
   287a4:	..j.4.t2..r;R..,
   287b4:	$.<..+q..#..l...
   287c4:	].\......Q...Q..
   287d4:	(.:....*....T...
   287e4:	_.d...vW...S^...
   287f4:	.....5..J...d.(.
   28804:	2.P._+......8...
   28814:	......k.-.....=*
   28824:	...'........7...
   28834:	..S...&.65..A...
   28844:	..K.d...Y...E...
   28854:	T.&....!d.~.....
   28864:	..=...}$q...[+..
   28874:	K9~.ZA].K..0Z.F&
   28884:	......\....*...Q
   28894:	....o....O...-..
   288a4:	.............88.
   288b4:	......X...]...`.
   288c4:	...$~..7...6W...
   288d4:	C.T...H.=....%..
   288e4:	d1..........T..&
   288f4:	..n...~.:.....f.
   28904:	H.........8...e)
   28914:	......i.....o...
   28924:	g.s'....x&..|...
   28934:	..3....$....9...
   28944:	X......@L..1C...
   28954:	..O.|.w.........
   28964:	........d.|.....
   28974:	#...G.......].v.
   28984:	..{ ....b.f.....
   28994:	.........0g.>3..
   289a4:	.......'..z.....
   289b4:	.......6....x.\.
   289c4:	......'."...m...
   289d4:	.........."'....
   289e4:	..a.....P.>P;..u
   289f4:	....e...EH......
   28a04:	......G..)...I..
   28a14:	..<.5..#..!...;.
   28a24:	W......9...V..'@
   28a34:	..i.O#X...s.o.e.
   28a44:	....`"... :. ...
   28a54:	....z..1...:.../
   28a64:	......j.f.....[.
   28a74:	n...L.j...C.6.c.
   28a84:	......r ..Q2...,
   28a94:	t...........%.m.
   28aa4:	..D ...@..e.o...
   28ab4:	x"t...C.....Q...
   28ac4:	y.y....._.f%...Q
   28ad4:	...N........./u.
   28ae4:	U.i.........?...
   28af4:	.!../...........
   28b04:	..=.4..3..;?q...
   28b14:	..>.........7...
   28b24:	p. .V...i......%
   28b34:	*.)...G.. *.....
   28b44:	............'.14
   28b54:	...-..e...!.?.S.
   28b64:	..U..&H.:*....k.
   28b74:	z.B<m..5..D..!z.
   28b84:	@...z..=..e;....
   28b94:	.$...'3.t.M.....
   28ba4:	*.%.....@...=...
   28bb4:	......B.c.......
   28bc4:	R.%...j...G...t.
   28bd4:	......*.q.].&&..
   28be4:	.$0.........@...
   28bf4:	..2>o.q...d...o.
   28c04:	......m.u.^.....
   28c14:	'.....=........"
   28c24:	5...........K...
   28c34:	... ..u.........
   28c44:	..%#..j.......1.
   28c54:	{...}...y.]._...
   28c64:	/...]...+..,..A4
   28c74:	......V.....m...
   28c84:	..m..D.../u...~.
   28c94:	..@.....{...%.n.
   28ca4:	............ ...
   28cb4:	....z.....8.+.b.
   28cc4:	c........3...!..
   28cd4:	P.....>.6...j!..
   28ce4:	..@...)!%..J..G.
   28cf4:	..:.O/^.....5...
   28d04:	.....<...<G...m.
   28d14:	....m.A.I.......
   28d24:	]...."u...n.....
   28d34:	........A.B.r...
   28d44:	[.5.!.....g..1/.
   28d54:	.3%.............
   28d64:	....h.......0...
   28d74:	..:.......*.l...
   28d84:	.,..........Z...
   28d94:	........}.......
   28da4:	....{...\8D..0..
   28db4:	..[.%.m.~.......
   28dc4:	.5..^.g.........
   28dd4:	\.............=.
   28de4:	..^...?.);.../9.
   28df4:	&!%...(.....)...
   28e04:	^.T,......m.6.H.
   28e14:	g.........../3..
   28e24:	.)..0.X.N+d.U0..
   28e34:	p...4..6@.......
   28e44:	......f.W.....^.
   28e54:	I8..!-..K.T.[...
   28e64:	.....,5..'......
   28e74:	^.B...'...J....#
   28e84:	..m ....k0...?..
   28e94:	....8.G.L.......
   28ea4:	...-..J...#...e.
   28eb4:	Y%..............
   28ec4:	:3...2....T...r.
   28ed4:	....1...0...2..$
   28ee4:	.............%..
   28ef4:	....."..l.......
   28f04:	..U...V......!..
   28f14:	".N.0...g.c.....
   28f24:	M...e...Q.F.....
   28f34:	.....-Q.....r...
   28f44:	......j...p...L.
   28f54:	d.......H.~.B...
   28f64:	..3.h.J.`...U...
   28f74:	....R.r.....T.~.
   28f84:	H...:.%.........
   28f94:	l...6.....H)..H.
   28fa4:	......7.G.......
   28fb4:	..Q..&..6.......
   28fc4:	.!..."}.....k..1
   28fd4:	..j.0...V21..."(
   28fe4:	...8....K....(..
   28ff4:	....?..)u.......
   29004:	.!..P.....s.....
   29014:	..W.............
   29024:	X...........-.$.
   29034:	."....i.....{../
   29044:	..[.......|.c.n.
   29054:	Z.........i.}.c.
   29064:	............`...
   29074:	..........F.....
   29084:	`.. 3.........y.
   29094:	(.Q.. ....\.....
   290a4:	A...#+...%c...l.
   290b4:	3.8,'.u.......0.
   290c4:	...-..f...l.....
   290d4:	."T.$ ..'...X...
   290e4:	..*.....k.\.^...
   290f4:	..N.a.....[.~.].
   29104:	..R...'.0.......
   29114:	f.y.....r...N.z.
   29124:	#...h.....K.q.s.
   29134:	....{...q.......
   29144:	m.f.P....(...'j.
   29154:	}...b...........
   29164:	X...@..;6..%u...
   29174:	.0..i.g.&...7.m.
   29184:	..........L...E!
   29194:	_...M...F.....u.
   291a4:	U...y.......~./&
   291b4:	.........,..."..
   291c4:	..............7.
   291d4:	......z&....;.1.
   291e4:	....(..#b...:...
   291f4:	....Q.z.d.j.H...
   29204:	..%.A!l.|...~...
   29214:	....r.........}.
   29224:	/.."....).R.\.L.
   29234:	S.....T...5...[.
   29244:	(...l...=.......
   29254:	....b...&...p...
   29264:	....8...........
   29274:	..b.....}.s.....
   29284:	..K...[...].o.M.
   29294:	F.......w.....U.
   292a4:	..............s.
   292b4:	........~.}.J.k.
   292c4:	T.+...j)..313...
   292d4:	.#%...c...'.....
   292e4:	..M.....>...,...
   292f4:	....s.....b...f.
   29304:	........[.....m.
   29314:	..+.%...........
   29324:	..G#?.....P.P.8.
   29334:	k..$...7w.......
   29344:	....b..!....t...
   29354:	J.U.<."...b...v.
   29364:	..........@.z...
   29374:	................
   29384:	....P....%......
   29394:	..W$s..0K...]...
   293a4:	q...p...........
   293b4:	`.N.....E.....|.
   293c4:	\...l...'.w...Q.
   293d4:	....L.1.....T...
   293e4:	*.c.(...........
   293f4:	....O.K.........
   29404:	H. ...Y.1.....g.
   29414:	J.Y...8.....{.{.
   29424:	......b.........
   29434:	....3.%.........
   29444:	...............#
   29454:	......J...^....$
   29464:	...1..,.S.d.....
   29474:	-...u.....a.. 0.
   29484:	............Z.S.
   29494:	..M!....... ....
   294a4:	....".k.8.......
   294b4:	....\*..5.?.J...
   294c4:	o.m.t./.m......"
   294d4:	Y.......U.....b.
   294e4:	J........#......
   294f4:	..J...........4.
   29504:	..C...Y.o.-.....
   29514:	....G.!.....%...
   29524:	....."\.....U...
   29534:	........x.;.....
   29544:	................
   29554:	..........5.j.z.
   29564:	....A.0.........
   29574:	................
   29584:	......-.......Q.
   29594:	....B.........h.
   295a4:	..?...5...-.a..+
   295b4:	............?...
   295c4:	z.,.......>.I-A.
   295d4:	..S...e.........
   295e4:	{.S.`.d...R.....
   295f4:	....3.[...>.....
   29604:	......R.........
   29614:	....'.V.J.J.[...
   29624:	....M.S.....[.v.
   29634:	o.. ........=.1.
   29644:	....n.......n.3.
   29654:	g.........D.t.j.
   29664:	..v.............
   29674:	..|.(.6.1..)~...
   29684:	....h!u.8.......
   29694:	....T.S.........
   296a4:	F.....l...L.^...
   296b4:	..?.+.U.........
   296c4:	T...K.?.c.U.....
   296d4:	......k.........
   296e4:	 ...6.2.O..."...
   296f4:	b...G.m...{.....
   29704:	2.........z.....
   29714:	N.r.u.J...V...3.
   29724:	9.......6...^...
   29734:	].r...d.....Z1..
   29744:	....H.&.........
   29754:	......2...-.....
   29764:	..Y.>.....!...&.
   29774:	..1.W.q.3...F...
   29784:	!.......b...Z.<.
   29794:	......... ......
   297a4:	u.r.R.S.|.C.e...
   297b4:	..t...\...B.....
   297c4:	..Y.....b.m.....
   297d4:	%.....{...m...+.
   297e4:	t...K I...y.p..!
   297f4:	E...J.:.M.....'.
   29804:	..).......I.....
   29814:	O.g.....[.".....
   29824:	.. .&.H.......m.
   29834:	`.....|...{.....
   29844:	..%.............
   29854:	*.:...7...c.....
   29864:	Z.).H.....?.....
   29874:	g...l.3.....\...
   29884:	.. .J...".e.....
   29894:	..c.\.....{.`.6.
   298a4:	..%.....<.......
   298b4:	......J.....]...
   298c4:	....c.+.7.h.4.$.
   298d4:	..t.............
   298e4:	m...d.....S.....
   298f4:	........*...R.M.
   29904:	....'.Z.n.a...T.
   29914:	..S...."#.......
   29924:	........Y...A.I.
   29934:	..?.....>.V...{.
   29944:	_.....G.^...f...
   29954:	......Q.....@.."
   29964:	B."...N./.r.r...
   29974:	..f.~.......$,S.
   29984:	,...W.S$........
   29994:	..........Q...{.
   299a4:	#.}...M.....=...
   299b4:	3.....@.....%.,.
   299c4:	Z...p.p.L...<.g.
   299d4:	|...{.Q...7.*...
   299e4:	............../.
   299f4:	......y.....M.2.
   29a04:	+.......&...+.6.
   29a14:	E.......g...+.=.
   29a24:	o.....S...{...1.
   29a34:	................
   29a44:	;...~.`.......T.
   29a54:	........!.b...-.
   29a64:	&.........n...0.
   29a74:	D.R.......*.....
   29a84:	p.#...P...N.....
   29a94:	z.m.........z.r.
   29aa4:	..........Z.D.F.
   29ab4:	................
   29ac4:	....8...........
   29ad4:	}...|.....h./!$.
   29ae4:	..Y....... ...N.
   29af4:	..%.K.....1%....
   29b04:	`.g.]...^..._.Y.
   29b14:	......f.R...`.2.
   29b24:	..w.....F.....5.
   29b34:	......v.{.......
   29b44:	l.'...g...y.$ ..
   29b54:	+...............
   29b64:	..7.'...........
   29b74:	..*...7.`.f...7.
   29b84:	..........U.....
   29b94:	..F.C.^.....j...
   29ba4:	w..!..L.t.......
   29bb4:	s.v...Y.....U.'.
   29bc4:	........q...+...
   29bd4:	s...........+.W.
   29be4:	*.i...S.......M.
   29bf4:	..Q.B.k.[.i.{...
   29c04:	..|.............
   29c14:	..........k...8.
   29c24:	{.........v...+.
   29c34:	[...5.4.F.......
   29c44:	F...l...W.K.N...
   29c54:	....{.m.v.[.....
   29c64:	H.3.$.T.......~.
   29c74:	o.....m.......<.
   29c84:	..r.2....._...".
   29c94:	...._.v.......Y.
   29ca4:	......U.p.....v.
   29cb4:	..a.....E.....a.
   29cc4:	..=.|.M.R.......
   29cd4:	s...............
   29ce4:	........?.......
   29cf4:	........M.m.....
   29d04:	..:...........N.
   29d14:	b./.....f.......
   29d24:	....E.N.....,...
   29d34:	..........}....!
   29d44:	2.G.e.o.....U...
   29d54:	........Y...x.o.
   29d64:	F.e.........m...
   29d74:	..).A...}.W.I.3.
   29d84:	u...........b...
   29d94:	<...w.;.B.......
   29da4:	....w.....2.....
   29db4:	~.w.U.u.....s...
   29dc4:	......?...>.....
   29dd4:	J.............(.
   29de4:	..........d.....
   29df4:	..g...........*.
   29e04:	..t.1.r.........
   29e14:	....G...........
   29e24:	G...'.....6.@...
   29e34:	................
   29e44:	..../.....c.t...
   29e54:	....~.5.C.:..._.
   29e64:	........,.......
   29e74:	'.8.......r...;.
   29e84:	......F.........
   29e94:	^.........B.E...
   29ea4:	..~.h.L.....x...
   29eb4:	..".J.o...T.X...
   29ec4:	..o...........!.
   29ed4:	..s.............
   29ee4:	E.D...P.s.O.g.6.
   29ef4:	u.2...).N.U.l...
   29f04:	4.n.e.J.......2.
   29f14:	......n...C.....
   29f24:	....\...A.......
   29f34:	.... ...........
   29f44:	q.6.......-.....
   29f54:	q...........Q...
   29f64:	..............d.
   29f74:	#. .....A.G.{.@.
   29f84:	s.....|.3.T...B.
   29f94:	g...Z.....1...F.
   29fa4:	....g...J.......
   29fb4:	......A.i...T...
   29fc4:	..%.......m.....
   29fd4:	y.-.....H...Y...
   29fe4:	..5.<.f.........
   29ff4:	....6...P.e.....
   2a004:	..h.....3.......
   2a014:	P.+.....B.......
   2a024:	g...............
   2a034:	..F.............
   2a044:	..F.N...9.......
   2a054:	..r.........u...
   2a064:	....O.l./.....Q.
   2a074:	....@.M...?.n...
   2a084:	............K.z.
   2a094:	R.c. ...........
   2a0a4:	E.>...e.....0.Q.
   2a0b4:	6.....;.M...s...
   2a0c4:	T.....`...#...(.
   2a0d4:	..N...L...k.....
   2a0e4:	x...|...Y.a...@.
   2a0f4:	C.......D...I...
   2a104:	......'._...B...
   2a114:	X.......>.4.....
   2a124:	......y.....E.P.
   2a134:	X.;.......J...;.
   2a144:	....H.....f.....
   2a154:	..............O.
   2a164:	....H.....l...@.
   2a174:	....Q.&...8.....
   2a184:	..2.............
   2a194:	......=.........
   2a1a4:	i.o.:...........
   2a1b4:	+.....g.....|...
   2a1c4:	....{.....$...2.
   2a1d4:	[.....8.R.+.....
   2a1e4:	....../.......6.
   2a1f4:	]...~.........W.
   2a204:	....w./.......w.
   2a214:	..6.I.....d.,...
   2a224:	.......... .....
   2a234:	..........+.v...
   2a244:	....M.a...U...S.
   2a254:	|.......1.n.....
   2a264:	p...........u...
   2a274:	......h._... .Y.
   2a284:	&...3...x.....,.
   2a294:	..J.T.|.......~.
   2a2a4:	....s.........0.
   2a2b4:	5.........X.....
   2a2c4:	..)...../.3.....
   2a2d4:	..E.%.....b.L...
   2a2e4:	....^...F...$.X.
   2a2f4:	..i.............
   2a304:	......w...v...(.
   2a314:	'.e.....!.3.\.A.
   2a324:	a.....f.\.B.....
   2a334:	..*.].2...c... .
   2a344:	p...e...........
   2a354:	4...........B...
   2a364:	......<.r.......
   2a374:	..&.......C.|...
   2a384:	......r.5.......
   2a394:	$.y.b.s.-.*. .f.
   2a3a4:	k...........o...
   2a3b4:	2.+.............
   2a3c4:	..O.......c.....
   2a3d4:	........u...r...
   2a3e4:	........H.......
   2a3f4:	 ...1.........R.
   2a404:	....~.....4.....
   2a414:	p.....R.......q.
   2a424:	F...........=...
   2a434:	H.{.....I...h...
   2a444:	..+.{.....H...%.
   2a454:	................
   2a464:	^.....W.?.......
   2a474:	............?.$.
   2a484:	o...m.`.3.....U.
   2a494:	k.....r.c...$...
   2a4a4:	....i...........
   2a4b4:	^...\.....j.@.B.
   2a4c4:	....z.n.........
   2a4d4:	..G...-.V.m.w...
   2a4e4:	......?...f.'...
   2a4f4:	@...........F...
   2a504:	..:...i.8...4...
   2a514:	(.2.G...........
   2a524:	....N.z.,.......
   2a534:	M.......V.....4.
   2a544:	..........8.....
   2a554:	..w.......g...j.
   2a564:	5.M.^.......k.(.
   2a574:	..n...>.Q.......
   2a584:	e.....-.....\...
   2a594:	..............v.
   2a5a4:	............)...
   2a5b4:	..4.......U...m.
   2a5c4:	<...B.....~...1.
   2a5d4:	........x...*...
   2a5e4:	..$.......6.....
   2a5f4:	........m.X..._.
   2a604:	......q.B.;.g...
   2a614:	...."...u.F.Q.?.
   2a624:	!.l.I...R.r.....
   2a634:	}...+....... ...
   2a644:	k.....G.<.......
   2a654:	..}.....h...T.y.
   2a664:	-.$.........T.t.
   2a674:	..........=...).
   2a684:	..Y...-.D.R.....
   2a694:	_.......;._.U.V.
   2a6a4:	..W...........!.
   2a6b4:	........0.Y.....
   2a6c4:	....k.<.....D...
   2a6d4:	........R.L..._.
   2a6e4:	......=.........
   2a6f4:	..=.....3...v...
   2a704:	n.;...p.8.....I.
   2a714:	....W...G.....*.
   2a724:	..e.............
   2a734:	......!.........
   2a744:	....i.....@.0...
   2a754:	..............H.
   2a764:	......Q.........
   2a774:	....H.....i.S...
   2a784:	k.....*...O...X.
   2a794:	..'.!...........
   2a7a4:	2.(.........\...
   2a7b4:	..N.............
   2a7c4:	................
   2a7d4:	2.y.H...........
   2a7e4:	..j.........:...
   2a7f4:	........D...A...
   2a804:	P.~...\.....z.3.
   2a814:	h...+...l.......
   2a824:	R.O...a.2.3.....
   2a834:	*.........i.=.<.
   2a844:	c.....v.].....C.
   2a854:	....H...E.R.W.<.
   2a864:	..).............
   2a874:	....:...........
   2a884:	.. .7...N.....B.
   2a894:	g.l.%.....k...~.
   2a8a4:	..........J.....
   2a8b4:	....4.r.&.{.K.A.
   2a8c4:	X.....3.@.......
   2a8d4:	....z.....7.-.s.
   2a8e4:	..G.'.......!...
   2a8f4:	S.........m.....
   2a904:	9.t...+.........
   2a914:	..O.....q.e.z...
   2a924:	......Y...I.....
   2a934:	......S...2.<...
   2a944:	..K...}.....&...
   2a954:	^.E.k.q.....p...
   2a964:	l.....I.....%.f.
   2a974:	....S.....*.....
   2a984:	....-...t.C.....
   2a994:	Q.....$.........
   2a9a4:	<.............S.
   2a9b4:	........2.......
   2a9c4:	7.........3.m...
   2a9d4:	s...*...........
   2a9e4:	....<.......<...
   2a9f4:	....".o.w.7.s...
   2aa04:	..`.[.......0...
   2aa14:	;.........5...$.
   2aa24:	....<...P.....0.
   2aa34:	..E.......".....
   2aa44:	;.P.:.I.......#.
   2aa54:	..0.....w...F...
   2aa64:	D.....4.G.....a.
   2aa74:	......z.........
   2aa84:	7.......6...E.z.
   2aa94:	......t...(.w...
   2aaa4:	..].........K.Y.
   2aab4:	~...e.O.,...5.-.
   2aac4:	.........."...K.
   2aad4:	........Q.1...1.
   2aae4:	....g...........
   2aaf4:	..........a.q...
   2ab04:	b.G...].........
   2ab14:	......#.....}.@.
   2ab24:	....1.R.{.A.8.s.
   2ab34:	k...2.....".Z...
   2ab44:	6.........y.a.x.
   2ab54:	......a.F...^...
   2ab64:	....E.p.#.*.i.H.
   2ab74:	....4.......-...
   2ab84:	=...........$...
   2ab94:	..N.......3.$...
   2aba4:	q.......C.=.,...
   2abb4:	....h...3.g...G.
   2abc4:	......C.8.9...x.
   2abd4:	....V.......t...
   2abe4:	....O...9.......
   2abf4:	......W...}.....
   2ac04:	|...p.>...K...-.
   2ac14:	....y.m...o.I.%.
   2ac24:	G.......o.\...r.
   2ac34:	 ...w.w.........
   2ac44:	C.!.........<...
   2ac54:	..M.o.........9.
   2ac64:	b...q.....E.@...
   2ac74:	..P.z.......O...
   2ac84:	..+.C.U.B.L...B.
   2ac94:	......h.........
   2aca4:	1...........*...
   2acb4:	/.............>.
   2acc4:	..............].
   2acd4:	0.J...........Q.
   2ace4:	S.E.............
   2acf4:	..O...K.j.......
   2ad04:	..D.U.....@.....
   2ad14:	................
   2ad24:	<.].5...........
   2ad34:	<.L.>.S.).|.....
   2ad44:	x...@.3.......8.
   2ad54:	H.....R.0.t.z...
   2ad64:	P...........8...
   2ad74:	y...o.m.........
   2ad84:	z.....8...l.u.-.
   2ad94:	G.d...#.?...g...
   2ada4:	6.J.L.>...~.....
   2adb4:	,.........N.....
   2adc4:	{...M...........
   2add4:	......L.1.^.1.7.
   2ade4:	........M.-.u...
   2adf4:	..m.............
   2ae04:	).'.............
   2ae14:	......:.8.y.A.u.
   2ae24:	................
   2ae34:	..,.L.........<.
   2ae44:	..W.,.........z.
   2ae54:	 .....^.......[.
   2ae64:	....G...:.....E.
   2ae74:	....)...1...s...
   2ae84:	..........x.....
   2ae94:	#...z.m.u.....I.
   2aea4:	....{./.j.......
   2aeb4:	#.m...s...@.e.e.
   2aec4:	...... .........
   2aed4:	2...%...9.......
   2aee4:	c.l.a.........0.
   2aef4:	a.B.....D.......
   2af04:	........w.......
   2af14:	..............p.
   2af24:	R.......l.W.....
   2af34:	/.*.).......w.[.
   2af44:	..A.....1.Q...D.
   2af54:	..u.....<.0.a.B.
   2af64:	...._.........=.
   2af74:	..m...........`.
   2af84:	......4...S.....
   2af94:	6...t...-.......
   2afa4:	H.M.........y...
   2afb4:	......%.$.].....
   2afc4:	L.c.....h.).y.=.
   2afd4:	..9.............
   2afe4:	@.......|.e.....
   2aff4:	....~.#.s...Q...
   2b004:	~...............
   2b014:	....].c...w.....
   2b024:	................
   2b034:	................
   2b044:	......t...=.....
   2b054:	....R...........
   2b064:	Q...........6.p.
   2b074:	..w...........I.
   2b084:	..<...a...>...s.
   2b094:	..b...k.......m.
   2b0a4:	..........>.L...
   2b0b4:	..e.............
   2b0c4:	h.....8.........
   2b0d4:	..I.....4.d.H.I.
   2b0e4:	....m...E.......
   2b0f4:	..T.....x.....l.
   2b104:	....T...S...+.C.
   2b114:	....\.....`...M.
   2b124:	[.3...x.T.J.....
   2b134:	 ...?...........
   2b144:	>.:...G.......:.
   2b154:	h.{.....J.y...?.
   2b164:	..k...........+.
   2b174:	........f._...=.
   2b184:	..z.......{...A.
   2b194:	..........M.I...
   2b1a4:	....R...........
   2b1b4:	..].F...........
   2b1c4:	............4...
   2b1d4:	........F.......
   2b1e4:	..............L.
   2b1f4:	F...&...Z.L.}...
   2b204:	............^.n.
   2b214:	..........P.x...
   2b224:	s...z.o.....W...
   2b234:	....1...V.......
   2b244:	,.6.....q.".....
   2b254:	......`.W.O.g.^.
   2b264:	......z.........
   2b274:	..........)...{.
   2b284:	........H...b.T.
   2b294:	....,...........
   2b2a4:	....#.......f...
   2b2b4:	....W...s.l.`...
   2b2c4:	..\.~.....M.#...
   2b2d4:	............'...
   2b2e4:	G...@.S...@.f...
   2b2f4:	......J...(.....
   2b304:	/...9.g.C.y.....
   2b314:	u.9.............
   2b324:	z...o.x.....].^.
   2b334:	........i...[...
   2b344:	p.%... .<.......
   2b354:	....C.}.#.....z.
   2b364:	..k.\. .^.......
   2b374:	......O...l.....
   2b384:	..........\.g.w.
   2b394:	......+.........
   2b3a4:	}.......:...n.@.
   2b3b4:	R...#.....c.%...
   2b3c4:	'.............P.
   2b3d4:	............C.8.
   2b3e4:	U.............5.
   2b3f4:	..W...<.....}.3.
   2b404:	..]...0.3...u...
   2b414:	..^.............
   2b424:	..m...9.M.d.N...
   2b434:	~.A.^."...~..._.
   2b444:	..z.[.S.....}...
   2b454:	..P.>.........K.
   2b464:	[.......W...e.s.
   2b474:	..i.....c.i.G...
   2b484:	..%.....x.r.....
   2b494:	..~.........[...
   2b4a4:	........1.s...4.
   2b4b4:	..X.\...u.......
   2b4c4:	<.~.......=.....
   2b4d4:	#...........>...
   2b4e4:	........$.....V.
	...

0002b6a4 <sample_28_standard_DRUMS_timpani>:
   2b6a4:	................
   2b6b4:	..O.......!..F.O
   2b6c4:	[b.Y9T"@.1......
   2b6d4:	8.......\.~.=.Q.
   2b6e4:	....m...(*.>.=XL
   2b6f4:	.I.WAD.q.q.#..0.
   2b704:	..H.F.......i...
   2b714:	..............T.
   2b724:	..E..].q.q.q.q.q
   2b734:	.q.q.q.q.e.ckC..
   2b744:	Z.]...s...%.....
   2b754:	................
   2b764:	.........)5=.]uU
   2b774:	.m.g.q.q.q~O....
   2b784:	B$G...D.W.R.S.s.
   2b794:	..........'.m({+
   2b7a4:	l$."..].j......8
   2b7b4:	ZN.S.T.?.%...&e.
   2b7c4:	..U.%...h.U.....
   2b7d4:	......[.........
   2b7e4:	E.Q..>.K.=[+C3.)
   2b7f4:	......'.........
   2b804:	.._+....m.S.....
   2b814:	..3...Y.Z.<..../
   2b824:	.Q.Q.JFM.U.q.l4L
   2b834:	\...k.G.....[...
   2b844:	......Z.........
   2b854:	>.....K.....5...
   2b864:	.......(...<.1O+
   2b874:	T...X.....f.....
   2b884:	....?.....i..=.A
   2b894:	.J.H':,]Mc.e.DvK
   2b8a4:	o@.X.d.J_ECCuB.,
   2b8b4:	....$...a.Q.3.@.
   2b8c4:	................
   2b8d4:	..x.s.....2.... 
   2b8e4:	^*.Jr],f.N.M.4};
   2b8f4:	.A.).5.B.K.I.b.Y
   2b904:	 J.,o.#.[.....R.
   2b914:	s.....(.O"."..b.
   2b924:	_...............
   2b934:	..........o._...
   2b944:	{.../...........
   2b954:	.........-y6.K.g
   2b964:	.q.q.q.q.q.q.m.L
   2b974:	[?.>..~...Z.p.F.
   2b984:	......J.........
   2b994:	L.}.............
   2b9a4:	6.L.v.p.....]...
   2b9b4:	[.... .1R(&6.4n:
   2b9c4:	.:.7.IKZjk.q.q.q
   2b9d4:	.q.q'm.k.Q'4.1.,
   2b9e4:	.#=.G.A.........
   2b9f4:	}.:.............
   2ba04:	..........F.F...
   2ba14:	..8...p........(
   2ba24:	4.....h.....a...
   2ba34:	$".;.e.e.b.[.Y.f
   2ba44:	.q.q.q_q.kXZ.7.(
   2ba54:	+.c...0.0.T.U...
   2ba64:	....7.=.........
   2ba74:	................
   2ba84:	...........0B6.<
   2ba94:	.A.M.T.X3Y.T%].j
   2baa4:	.q.q.q.q.q.q.k.M
   2bab4:	.%8'.1Q.....>...
   2bac4:	....8.~.-.......
   2bad4:	..}...=.........
   2bae4:	'.....1.9....'##
   2baf4:	^#V.....C.1...?.
   2bb04:	...#.&.."2.C.X>`
   2bb14:	5f@n;jRl.q.n.h<a
   2bb24:	.Q.D.)..J.....'.
   2bb34:	........R.n.....
   2bb44:	................
   2bb54:	......3.H.......
   2bb64:	L...W6.Z.a{b"O.J
   2bb74:	iN.q.q.q.q.q.q.q
   2bb84:	jd.KJ7`4........
   2bb94:	;.......I.Q.B...
   2bba4:	Z.F.X.....}.....
   2bbb4:	..^...~...q."...
   2bbc4:	e...I...5.......
   2bbd4:	..q.....W.N.R".4
   2bbe4:	.L5SrM.Z.q.q.q.q
   2bbf4:	.q8o.X.9.0.)`...
   2bc04:	G.;.2...(.......
   2bc14:	..|.)...........
   2bc24:	................
   2bc34:	..........B.s...
   2bc44:	U.....u*.E.q.q.q
   2bc54:	.q.q.q.q.q.N">.(
   2bc64:	..4...(...0.....
   2bc74:	[.......L.3.O...
   2bc84:	z.....>.........
   2bc94:	..=.8.........Q.
   2bca4:	....<.....u.u...
   2bcb4:	..:.w-.5H/.+I9.K
   2bcc4:	.Q.X.o.q.g.e/Z5B
   2bcd4:	{;D@.4.@6CV-.9.@
   2bce4:	u8.-..A.........
   2bcf4:	................
   2bd04:	....t.......1...
   2bd14:	..s. .T....-.9(L
   2bd24:	9T.g8p.q.q.q.q.q
   2bd34:	.q.j.<C-......>.
   2bd44:	..].......;...?.
   2bd54:	..5.z.6.......Q.
   2bd64:	c...........|...
   2bd74:	l...u.....2.....
   2bd84:	G.....*...i.w..0
   2bd94:	.3q6.J.d.q.q.q.d
   2bda4:	%KNA.4.5.4A7.<.D
   2bdb4:	iF.;)8P1.1....Z.
   2bdc4:	....u.0.........
   2bdd4:	......>.{...t.8.
   2bde4:	..k.....D.......
   2bdf4:	...%c).F"W.JuR.q
   2be04:	.q.q.q.q.q.Sl9.5
   2be14:	.2.*.+..?...6.6.
   2be24:	................
   2be34:	Y.7.....`.....3.
   2be44:	......I...d...|.
   2be54:	....V.....3...i.
   2be64:	..@.....b..0.<.?
   2be74:	.Q.c.acTcJ:QR_.d
   2be84:	UR52]".". !..".+
   2be94:	.)K.............
   2bea4:	~...............
   2beb4:	....h...B.Z.b.E.
   2bec4:	......t....../YA
   2bed4:	.C%J.T)_#h&a.^{_
   2bee4:	.g.qto/Y.B.%A.v.
   2bef4:	E...W.... ......
   2bf04:	......i.........
   2bf14:	......)...u.?...
   2bf24:	....f.5.....=...
   2bf34:	'.......x.W.V#!.
   2bf44:	X.G.8%.&.)o-"1_B
   2bf54:	.L\R.^.`.Y.@.,y4
   2bf64:	=E.F.8..........
   2bf74:	....r...........
   2bf84:	......A.....z.g.
   2bf94:	..........0.....
   2bfa4:	...*F2&+9/'?.=7H
   2bfb4:	.R.X.[.c.o.j*U.:
   2bfc4:	L&.....$. ......
   2bfd4:	h.}.c...........
   2bfe4:	..u.....v.o.r...
   2bff4:	..D.J.~...r.....
   2c004:	......P.$...$.K.
   2c014:	..g..'a-.0[+w&.$
   2c024:	. .....$.<eO.K.A
   2c034:	mLJ].a.Pw=T7.*..
   2c044:	|.-..'. ^.......
   2c054:	..........X...0.
   2c064:	5...'...........
   2c074:	..w.....V...2.M,
   2c084:	.=CF.F.S.VKLu<.=
   2c094:	HE.K.V.T.F.>.3.(
   2c0a4:	.$E#..7.....e...
   2c0b4:	..Q.p.|...F...T.
   2c0c4:	"...C.e.........
   2c0d4:	..............(.
   2c0e4:	...... ...l.....
   2c0f4:	. (....$..;6.,_'
   2c104:	.+54.; A=F+D.I.N
   2c114:	wIt=.5.:.2J.....
   2c124:	Z.....[.........
   2c134:	9...........6.@.
   2c144:	......1.....#...
   2c154:	D.......m2.LgN8E
   2c164:	IK.T.O1GvA.@.D.@
   2c174:	.0.'.*88.B4?m5.(
   2c184:	..".`.).T.......
   2c194:	......d.(...r.N.
   2c1a4:	m.q...M.+.l.....
   2c1b4:	........i...c.}.
   2c1c4:	............+...
   2c1d4:	...#.3.7"3.1.<.J
   2c1e4:	.J.=.;.G.KuG.B.0
   2c1f4:	......Y.w.p.....
   2c204:	..........A.....
   2c214:	F...:...........
   2c224:	..@.......k.....
   2c234:	h...s).<nE.J.W.b
   2c244:	.\7O<E.<"7.?.?.2
   2c254:	.%....3...B...u.
   2c264:	t.....y...l.2.B.
   2c274:	~...............
   2c284:	..N.y...=.....4.
   2c294:	....3.'.....0...
   2c2a4:	.......).1S6.9D9
   2c2b4:	J1/&..d..".3.HqT
   2c2c4:	3T.Q.Jr4A.......
   2c2d4:	`...{.h.2.n.(...
   2c2e4:	d.....O.].V.....
   2c2f4:	a...........C...
   2c304:	F.q.........v.B(
   2c314:	.4L9.2m2.;.C.F.H
   2c324:	*P4RzD.1:$......
   2c334:	..N.....z.p.....
   2c344:	..].............
   2c354:	..0.....9.......
   2c364:	5.].....m.....@.
   2c374:	..g.....x...!.I 
   2c384:	N.....F..'.%.%.+
   2c394:	./.4.4.3J8.;.9.<
   2c3a4:	e=19K4.)..R.....
   2c3b4:	......7...!.v...
   2c3c4:	..T.".......<...
   2c3d4:	....$...h...l...
   2c3e4:	r...f.......,#A#
   2c3f4:	.&.4.AQI.I+C.:?.
   2c404:	.).0.4+..$. k...
   2c414:	..........x.....
   2c424:	..`.[...........
   2c434:	..K.I...1.....:.
   2c444:	..J.............
   2c454:	......'.J.Q...a.
   2c464:	.%.*.+.&[& -.4,<
   2c474:	.F.P.PZBK...V...
   2c484:	......l...&.n.t.
   2c494:	......_....."...
   2c4a4:	..u.K.).....^.*.
   2c4b4:	F.....G.Q.......
   2c4c4:	...#.).++.N6N:.<
   2c4d4:	(DtG.C$8.+.%."..
   2c4e4:	."-(4$..%.!.....
   2c4f4:	r...^...........
   2c504:	....+.^....._.p.
   2c514:	....M.G...6...Q.
   2c524:	..........3.....
   2c534:	....w.).}.(.-.4.
   2c544:	@$.3.C.D.3.#l .#
   2c554:	.(./.0..[,h$6.V.
   2c564:	f.w...\.........
   2c574:	....].-.~.......
   2c584:	....A.e.|.n.....
   2c594:	........V#.).).&
   2c5a4:	.&.+'4~6W;.ArA.=
   2c5b4:	45 '..].........
   2c5c4:	........M.......
   2c5d4:	..........<.1...
   2c5e4:	..<.%...c./.k...
   2c5f4:	..}._.......Z.6.
   2c604:	..p.......I...k.
   2c614:	....D...4.......
   2c624:	2!.'.,.4 A.G.>E/
   2c634:	.#..V.*.......;.
   2c644:	........h...8...
   2c654:	..-.............
   2c664:	a.a...e..._.....
   2c674:	...(.%..[...H..'
   2c684:	.2.6"5.0./.1.3i4
   2c694:	./g'h#..........
   2c6a4:	................
   2c6b4:	....8.@...P.).C.
   2c6c4:	..o.?.....<.....
   2c6d4:	..........6.>.(.
   2c6e4:	....[.-.Z.... .$
   2c6f4:	.!G.j.....b*Q4.6
   2c704:	.0J*.)=+.'.!....
   2c714:	..0.N...........
   2c724:	o.t.....*.......
   2c734:	o.....j...,.....
   2c744:	........m...a...
   2c754:	y.\....*c1.6p:.:
   2c764:	.9.8.7.5726..). 
   2c774:	....S.....&.....
   2c784:	......L.).......
   2c794:	..w... .q.......
   2c7a4:	........6.:...i.
   2c7b4:	....2.....]...S.
   2c7c4:	....%.......}.= 
   2c7d4:	i).3X7.0.*0)1*.!
   2c7e4:	............r...
   2c7f4:	.......... ...q.
   2c804:	~...?.........}.
   2c814:	$...........-._.
   2c824:	l.b.....}....,.5
   2c834:	.8.8.8^6.2...).$
   2c844:	.".!= ~./...%.v.
   2c854:	..j.[...m...:...
   2c864:	Q.n...`.........
   2c874:	E.......b..._...
   2c884:	).....t.S.......
   2c894:	_.....W.'...r...
   2c8a4:	....r.....:....!
   2c8b4:	.-.9;D.B.4."G.^.
   2c8c4:	&.-.$...........
   2c8d4:	..Q...~.......`.
   2c8e4:	0.\.........7...
   2c8f4:	............|...
   2c904:	..M.....l......(
   2c914:	z0.2.2}4t7.6.0E(
   2c924:	.!....\...'.....
   2c934:	|.k...%.J.Q.z.Z.
   2c944:	..;.....A.F.3.q.
   2c954:	N...;.....]...L.
   2c964:	P.....q...S...C.
   2c974:	1.....@.t.....?.
   2c984:	B.......O).3[8.5
   2c994:	01./f+.%X"..U...
   2c9a4:	g.G.q...F...Z...
   2c9b4:	......9.......O.
   2c9c4:	h.<.T._.....W.[.
   2c9d4:	..X.B...u.......
   2c9e4:	Q...*".,{3.2J..-
   2c9f4:	./.3.4.0.(."L...
   2ca04:	........Q.P.....
   2ca14:	........[.&./...
   2ca24:	........".N...Z.
   2ca34:	..S.............
   2ca44:	8...........O.(.
   2ca54:	........e...G._.
   2ca64:	}.^.*..!.'])9)3&
   2ca74:	7 ..T.......o...
   2ca84:	..;.../...B.)...
   2ca94:	+.....l.....>.h.
   2caa4:	`.......0...+...
   2cab4:	Z.......t......#
   2cac4:	.((-...-<..0j0.(
   2cad4:	..............g.
   2cae4:	....R.....".#...
   2caf4:	................
   2cb04:	..=.....%.g.....
   2cb14:	G...........$...
   2cb24:	..#.............
   2cb34:	......1...l...A%
   2cb44:	.).(d'.%3!....G.
   2cb54:	5.........T.h...
   2cb64:	..........p.....
   2cb74:	L.......k.`._.$.
   2cb84:	..d.S.....L.=.I.
   2cb94:	....l....&.-.4.7
   2cba4:	F8.4.-2%"...$...
   2cbb4:	.. .\.H.....U...
   2cbc4:	W.....2.b.....V.
   2cbd4:	........6.....I.
   2cbe4:	v.....R...f.....
   2cbf4:	......1.....)...
   2cc04:	....D...9...N.'.
   2cc14:	........~.~&...0
   2cc24:	.+*#..y.........
   2cc34:	..........'.....
   2cc44:	....>.^.........
   2cc54:	=.r.s.....<...B.
   2cc64:	_.........v.....
   2cc74:	].!!\,.5.:.;.:.8
   2cc84:	.5.0y+.#......Z.
   2cc94:	..4.............
   2cca4:	F.....?.B.c.....
   2ccb4:	..t.....w.M.....
   2ccc4:	......V.@.....b.
   2ccd4:	..k.............
   2cce4:	..{.........x...
   2ccf4:	.....%l&.!..}...
   2cd04:	....(...[.(...s.
   2cd14:	'.#.......a...9.
   2cd24:	..k.*.W.0.....-.
   2cd34:	....h.H.|.5._...
   2cd44:	..s.U......!/&.*
   2cd54:	.-@,.).).+.,.-1,
   2cd64:	.&p.............
   2cd74:	..h.....0.....z.
   2cd84:	....s.....F.....
   2cd94:	..k.y...|...I.l.
   2cda4:	:.....X.....i.<.
   2cdb4:	)...0.........Q.
   2cdc4:	..........i...D.
   2cdd4:	....\ f".$.'.%p.
   2cde4:	....}...........
   2cdf4:	..........n... .
   2ce04:	......I.?... ...
   2ce14:	`.....!.|...u.:.
   2ce24:	S.P.G..%])1+@+.(
   2ce34:	.$.%Y(.)v&......
   2ce44:	............C...
   2ce54:	..@...F...N.c.:.
   2ce64:	..`.......a.X...
   2ce74:	/...........x...
   2ce84:	M.y...].....m...
   2ce94:	#.7.d.....#.M...
   2cea4:	r...;..#e).).&c#
   2ceb4:	. ..l...\.......
   2cec4:	..........).....
   2ced4:	..j.4...(.N.....
   2cee4:	T.t...........Y.
   2cef4:	....e.....g.....
   2cf04:	...!.$.*D2x7.7d1
   2cf14:	.&..........5...
   2cf24:	0.....F.....U.[.
   2cf34:	....U.....a...t.
   2cf44:	....T...........
   2cf54:	Q.......K...(...
   2cf64:	....V.A.........
   2cf74:	....\.../.....m.
   2cf84:	d...@...2!&$.%+%
   2cf94:	.#/!%.........-.
   2cfa4:	..f.,...........
   2cfb4:	..B.......N...|.
   2cfc4:	x.....S.........
   2cfd4:	....>.i.N.. .%M*
   2cfe4:	.-...,.'."c...N.
   2cff4:	..0...~.......T.
   2d004:	L...............
   2d014:	..A.T...^...w...
   2d024:	..........$...S.
   2d034:	....9.".d...a...
   2d044:	=.^...S...".v...
   2d054:	..........D.O.?.
   2d064:	..|..#.)n,.+1'."
   2d074:	. ..B...8.......
   2d084:	..I.........9...
   2d094:	........P.H.....
   2d0a4:	w...D.U...?...D 
   2d0b4:	..L.@...!".'.'J%
   2d0c4:	.#."....P.0...m.
   2d0d4:	v.........D.....
   2d0e4:	v.......&.....6.
   2d0f4:	..........U...4.
   2d104:	5...,.......L...
   2d114:	..........P.....
   2d124:	p./...t.........
   2d134:	0.....w...J.....
   2d144:	..... d".". )...
   2d154:	..}.\.0.7.......
   2d164:	p.I.....t.......
   2d174:	..........2.....
   2d184:	..?.......E.=#j(
   2d194:	.,.-/+.&.!..s.!.
   2d1a4:	............{...
   2d1b4:	Z.:.1.Z...{.....
   2d1c4:	....}.C...,.....
   2d1d4:	4.........Z.7...
   2d1e4:	P.(.......<.....
   2d1f4:	..7...o.....Q.`.
   2d204:	g.t.!...?.X..._.
   2d214:	....2.!...{$[&."
   2d224:	........v...=...
   2d234:	........X.w...4.
   2d244:	.._...A...#.....
   2d254:	a.......r.......
   2d264:	..]...h#Z$.#."."
   2d274:	."."."."G!j.....
   2d284:	......h...:.X...
   2d294:	n.....A.......}.
   2d2a4:	......m.....M...
   2d2b4:	..w.z...6.......
   2d2c4:	l.z...k...[.J...
   2d2d4:	......N.......m.
   2d2e4:	{.........U.*".%
   2d2f4:	O&.$.".!r..... .
   2d304:	......R.........
   2d314:	................
   2d324:	....[...A.h... .
   2d334:	K.v.......3.....
   2d344:	....<...w.....$ 
   2d354:	) 2...........;.
   2d364:	......i.+.......
   2d374:	6...!...........
   2d384:	......U.t.......
   2d394:	....:.O.K.......
   2d3a4:	..m.............
   2d3b4:	....q.N.....N...
   2d3c4:	4.............+%
   2d3d4:	.,i..(6.V.9.U.~.
   2d3e4:	..4.....m.\.....
   2d3f4:	....g...v...:...
   2d404:	!.o...../.......
   2d414:	?.U...U..%.,.-.&
   2d424:	........D.A.&...
   2d434:	..^...<.......d.
   2d444:	c.&...H.......;.
   2d454:	......l.X.e.....
   2d464:	J...............
   2d474:	D...}.;.........
   2d484:	..0.........F...
   2d494:	..c...6...'.r...
   2d4a4:	0.9#.'.'o%.... .
   2d4b4:	................
   2d4c4:	f...c.....!.&...
   2d4d4:	X.Z...\.:...l.C.
   2d4e4:	..!./.f.....2...
   2d4f4:	..k.C...y.y.J..!
   2d504:	?#.#......0.+...
   2d514:	1.t.8.......#...
   2d524:	..j.....D.......
   2d534:	......=.b.v.?.b.
   2d544:	........L.....I.
   2d554:	z.C.7...........
   2d564:	^...g.,.........
   2d574:	......d...9..#.)
   2d584:	g*.'h$."..;.....
   2d594:	r.....#...(.c...
   2d5a4:	4.F.P.`.........
   2d5b4:	..-.f.....<...&.
   2d5c4:	X.l.......C.....
   2d5d4:	....)...x.M.....
   2d5e4:	..6.v.p.........
   2d5f4:	......P...3.....
   2d604:	V.......u..._.c.
   2d614:	`...k...}...m.U.
   2d624:	................
   2d634:	........c...@...
   2d644:	....Q.i.$.s...T.
   2d654:	j...3.I $"m#.$.%
   2d664:	.$.#. 5...`.....
   2d674:	..I.......N.q...
   2d684:	x.4.........`...
   2d694:	!.^.....l...#.`.
   2d6a4:	\.....W.0.i.#.j.
   2d6b4:	...!............
   2d6c4:	....7...........
   2d6d4:	..E.....X.B.....
   2d6e4:	..........\.s.!.
   2d6f4:	..p.@...1...[...
   2d704:	........V.|...".
   2d714:	}...............
   2d724:	Z...g.b.'.......
   2d734:	..}.h.e$*(.'n$..
   2d744:	..d...Z.........
   2d754:	......).).#.....
   2d764:	................
   2d774:	..8.......3.....
   2d784:	................
   2d794:	..(.......C.x./.
   2d7a4:	 .n...v...|...J.
   2d7b4:	......S.....B...
   2d7c4:	..........J.....
   2d7d4:	I.7.....L.#.....
   2d7e4:	+...H.......%...
   2d7f4:	......i.Z.....".
   2d804:	..i...........,.
   2d814:	. y!....U.H...!.
   2d824:	....v...........
   2d834:	................
   2d844:	..*.....F.......
   2d854:	....,.o...b.....
   2d864:	............w...
   2d874:	D...J.....B.....
   2d884:	z.....i.q...../.
   2d894:	....D.....5.....
   2d8a4:	:.I.X.....V.P.^.
   2d8b4:	..I.:...........
   2d8c4:	..2.Q.$.7.t.O...
   2d8d4:	..g.....8...'.Q.
   2d8e4:	X......#F*$,.(.!
   2d8f4:	....+.........G.
   2d904:	y.&.:...N...-...
   2d914:	..^.......Z.6.J.
   2d924:	n.............%.
   2d934:	............*.*.
   2d944:	....:...e.....J.
   2d954:	J.j.......g...z.
   2d964:	z.-.9...P.......
   2d974:	M.x... .........
   2d984:	......5.....Q...
   2d994:	..|.d...8.......
   2d9a4:	..L.4...Z.......
   2d9b4:	..o.............
   2d9c4:	..$ . ..r.....f.
   2d9d4:	[.|.;.f.n.....X.
   2d9e4:	......t.2...l.2.
   2d9f4:	....m.........c.
   2da04:	..Y.\.S.S.T...>.
   2da14:	..........!.m...
   2da24:	0.....C.g...5.8.
   2da34:	....d.5.r...g...
   2da44:	....'.....l.l...
   2da54:	....../...U.....
   2da64:	..2.T.w.`.......
   2da74:	....w.......i.4.
   2da84:	....9...~...,...
   2da94:	I.S.......L.s.2.
   2daa4:	........1.H.f.{.
   2dab4:	)...r.].........
   2dac4:	A...............
   2dad4:	......r.@...e.N.
   2dae4:	....H.o.0...p.{.
   2daf4:	..$.[...M.......
   2db04:	....7...z.......
   2db14:	......w.........
   2db24:	......H.......e.
   2db34:	......!.1./.....
   2db44:	..............3.
   2db54:	..T.X.O...q...y.
   2db64:	....8.M.5.......
   2db74:	V...p...........
   2db84:	....$.....K.....
   2db94:	%... ...V...Z...
   2dba4:	b...[.....K.....
   2dbb4:	........?.......
   2dbc4:	....B...2.2...n.
   2dbd4:	l.......Q...3...
   2dbe4:	...._.d.^.k.w.Y.
   2dbf4:	).....N...7...8.
   2dc04:	................
   2dc14:	......O...'.c...
   2dc24:	......J.........
   2dc34:	}..........."...
   2dc44:	........0. .....
   2dc54:	..9...4.f.......
   2dc64:	..G.>.,./.....y.
   2dc74:	R.......4.[.4...
   2dc84:	..K...Y.}.&...c.
   2dc94:	....U.t.........
   2dca4:	A...(...^.......
   2dcb4:	.. .1.L.......,.
   2dcc4:	..$.$.......B...
   2dcd4:	`.....|...*.....
   2dce4:	'...)...........
   2dcf4:	/.;.].].e.O.w...
   2dd04:	....s.........Z.
   2dd14:	x...M...2...0.5.
   2dd24:	..)...p.........
   2dd34:	t.\.............
   2dd44:	..x.O...%...}...
   2dd54:	..N.............
   2dd64:	............L...
   2dd74:	....%...%.......
   2dd84:	G.L.............
   2dd94:	........y...w.P.
   2dda4:	..X.....B.x.v...
   2ddb4:	....-...R.......
   2ddc4:	~.......5.......
   2ddd4:	7...j.z.........
   2dde4:	M...(.....`.....
   2ddf4:	....S.,.........
   2de04:	u.\...T.;.......
   2de14:	R...r.v.n.4.S./.
   2de24:	j.....1...Z...,.
   2de34:	..Y.k.D.m.G.....
   2de44:	v.S.............
   2de54:	..N........._...
   2de64:	............T...
   2de74:	..9...9.G.......
   2de84:	!...p...........
   2de94:	..L.......:.M...
   2dea4:	....R...........
   2deb4:	......5...y.....
   2dec4:	V.K...,.........
   2ded4:	o.......=.|.... 
   2dee4:	a.4...w./... ...
   2def4:	....&...8.S.x.f.
   2df04:	*...<.......n...
   2df14:	..2.....'.....p.
   2df24:	....".I.A.....F.
   2df34:	..?...r...^.....
   2df44:	Q.;...........P.
   2df54:	................
   2df64:	i.L...e.......9.
   2df74:	..y.........;...
   2df84:	........X...J...
   2df94:	`.........1...0.
   2dfa4:	..........!.p...
   2dfb4:	........{.......
   2dfc4:	......L.....Y...
   2dfd4:	h...8.......K...
   2dfe4:	....n./.7.~.....
   2dff4:	6...%.Y...G.....
   2e004:	1.......v.U.;...
   2e014:	....O...p.).0...
   2e024:	..H.....:.K.....
   2e034:	......0.~...u.1.
   2e044:	....+.0.......X.
   2e054:	......b.......-.
   2e064:	+. .\.W.v.O.&...
   2e074:	 .......W.=...@.
   2e084:	..:...X.0.......
   2e094:	........0.....b.
   2e0a4:	..........R.....
   2e0b4:	O.........T...>.
   2e0c4:	....>.[.V...U.+.
   2e0d4:	".+...n.....\.r.
   2e0e4:	..<.....)...(...
   2e0f4:	..T.&.].......(.
   2e104:	}...............
   2e114:	X.H...%...n.P...
   2e124:	......$...I.X.2.
   2e134:	..$..._.........
   2e144:	................
   2e154:	................
   2e164:	..o.......E.Y.m.
   2e174:	....`.Y.x..... .
   2e184:	$..._...........
   2e194:	..X.F.........y.
   2e1a4:	2.p.....T.q.....
   2e1b4:	..B.V...q.8...o.
   2e1c4:	M.v.............
   2e1d4:	..;.......@.....
   2e1e4:	................
   2e1f4:	......3.0.....6.
   2e204:	..8.'.....l...-.
   2e214:	..d.......V...e.
   2e224:	|...b...g.......
   2e234:	S.s.u...N.C.]...
   2e244:	"...z.....|...q.
   2e254:	....M.......[.t.
   2e264:	....U.....i...#.
   2e274:	..R.............
   2e284:	........'.......
   2e294:	..........I.....
   2e2a4:	..............).
   2e2b4:	..,.U.....-.....
   2e2c4:	..`.....).4...=.
   2e2d4:	..,.s.S.M.V.q...
   2e2e4:	........L.....N.
   2e2f4:	....E.5.Z.M.....
   2e304:	......J.........
   2e314:	~.6.7.^.K.....<.
   2e324:	................
   2e334:	V.p.............
   2e344:	....m._...T.;...
   2e354:	....X.r.....]...
   2e364:	..N.....9.e.....
   2e374:	....../.......P.
   2e384:	H.........9.....
   2e394:	..G.....P.......
   2e3a4:	*.............3.
   2e3b4:	..)...g.....x.l.
   2e3c4:	T.+.......5...[.
   2e3d4:	..o.|...(.....;.
   2e3e4:	......Z.....|.X.
   2e3f4:	....p.........:.
   2e404:	....L.....>...6.
   2e414:	............q...
   2e424:	.... .........:.
   2e434:	................
   2e444:	....+...T._.....
   2e454:	....&.z.......a.
   2e464:	r.>.z.........(.
   2e474:	..x.(...{...K...
   2e484:	....G.9.....8...
   2e494:	..X.....g.....=.
   2e4a4:	G.j...\...Q.m.^.
   2e4b4:	....8.........o.
   2e4c4:	V...........D...
   2e4d4:	....d...........
   2e4e4:	@.....8.........
   2e4f4:	...... .....:...
   2e504:	r.....O.j...|...
   2e514:	y...o.5.&.W...!.
   2e524:	......i...K.....
   2e534:	..............n.
   2e544:	$.........`...".
   2e554:	....g.x.........
   2e564:	....3.|...6...%.
   2e574:	1.a...U...N.^.$.
   2e584:	......Y...\.....
   2e594:	K.......F.=.....
   2e5a4:	z...........-...
   2e5b4:	......>.\...p...
   2e5c4:	..2...+.v.....j.
   2e5d4:	......M.........
   2e5e4:	Z...........`...
   2e5f4:	..@.....3.w.I.1.
   2e604:	D.....3...5.8...
   2e614:	......P...}.....
   2e624:	....S.4."...g...
   2e634:	u._...........H.
   2e644:	..8._.^.G...R...
   2e654:	....E...'.......
   2e664:	..>...P.....V...
   2e674:	....r...H.....r.
   2e684:	....1.........T.
   2e694:	....".s...7.....
   2e6a4:	U...........)...
   2e6b4:	x.9.n...:.0.%...
   2e6c4:	H...}.......4...
   2e6d4:	........W.8.4...
   2e6e4:	..#._...b...L...
   2e6f4:	......1.X.......
   2e704:	,.....`.}...K.d.
   2e714:	....U.D.(.......
   2e724:	}.............A.
   2e734:	}.....2.&.......
   2e744:	w.J.......+.Z.p.
   2e754:	..I...d.#...f...
   2e764:	......i.........
   2e774:	8.......{.......
   2e784:	..".;.'.{.....B.
   2e794:	................
   2e7a4:	..u.../.....D.j.
   2e7b4:	/.............5.
   2e7c4:	....;.U...g.L...
   2e7d4:	..5.l...N.3.....
   2e7e4:	E...h...g.......
   2e7f4:	................
   2e804:	3.j.}.....p.....
   2e814:	b.........A...h.
   2e824:	E.K...l.>...J...
   2e834:	....r...........
   2e844:	../.....p.......
   2e854:	?.-.A.g.N._...b.
   2e864:	#...k.......u.%.
   2e874:	c.%...S.....q.M.
   2e884:	......A.N...t...
   2e894:	=.t.e.....d.....
   2e8a4:	,.....J.....P.}.
   2e8b4:	5.c.'.......D...
   2e8c4:	(...B.........(.
   2e8d4:	......_.6.U.....
   2e8e4:	..'.F.......8...
   2e8f4:	..S.~.........l.
   2e904:	..\.............
   2e914:	....T......... .
   2e924:	X.....X.?.9.....
   2e934:	_...s.....L.....
   2e944:	....=.w...e.....
   2e954:	].....s...2.....
   2e964:	'...0...........
   2e974:	......].....I...
   2e984:	......D...g.o...
   2e994:	O.X...=...X.\...
   2e9a4:	W...#.N.z.......
   2e9b4:	..............C.
   2e9c4:	..Q.....:...F...
   2e9d4:	..C.p.h.>.......
   2e9e4:	H.i.....Y.d.....
   2e9f4:	..A.&.g.X.....V.
   2ea04:	b...^._......._.
   2ea14:	......P.#.......
   2ea24:	........X.......
   2ea34:	....=.......g.a.
   2ea44:	U.S.g.F......./.
   2ea54:	..&...........A.
   2ea64:	..............3.
   2ea74:	v.n.M...........
   2ea84:	i...E.....c.A...
   2ea94:	................
   2eaa4:	..h...G... .....
   2eab4:	_.....c...].]...
   2eac4:	/...P.......o...
   2ead4:	........U.....x.
   2eae4:	....b...+.>.`...
   2eaf4:	..........c...|.
   2eb04:	\.N.....{.......
   2eb14:	..L.e...h.......
   2eb24:	~.#...=.w..."...
   2eb34:	....[...G.}.....
   2eb44:	..x...7.|.......
   2eb54:	h...............
   2eb64:	............v...
   2eb74:	i.............1.
   2eb84:	............^...
   2eb94:	....F.......V.x.
   2eba4:	........C.D.....
   2ebb4:	....3.X.........
   2ebc4:	`.........0.K...
   2ebd4:	..........f.....
   2ebe4:	k...........`.l.
   2ebf4:	....b.......B.j.
   2ec04:	c.~.............
   2ec14:	........^...1...
   2ec24:	....I...........
   2ec34:	Z.0.,...J.Y.!.N.
   2ec44:	..n.Q.v.........
   2ec54:	......5.....l...
   2ec64:	E...@...S.&...m.
   2ec74:	#.....~...j.....
   2ec84:	..........p.-...
   2ec94:	......S.A.......
   2eca4:	,.....\.L.7.....
   2ecb4:	........p.#...Z.
   2ecc4:	..w....._.....(.
   2ecd4:	....&...q.....).
   2ece4:	..........:.z...
   2ecf4:	e...5....... ...
   2ed04:	..&...}...(.....
   2ed14:	..".....5.8.C._.
   2ed24:	..x...|.~.Z.....
   2ed34:	(...............
   2ed44:	....E.......*...
   2ed54:	}.I.M.7.........
   2ed64:	..5...F.....f...
   2ed74:	2...............
   2ed84:	{...........G...
   2ed94:	....".....L.+.<.
   2eda4:	7.=.Z...e.o.....
   2edb4:	............g...
   2edc4:	......G.....X...
   2edd4:	%.............?.
   2ede4:	{.r.......`.)...
   2edf4:	..1.......i.6.n.
   2ee04:	)...}.....3.C...
   2ee14:	@.].........s...
   2ee24:	..W.......S...s.
   2ee34:	......P.m...^.`.
   2ee44:	..N.A.x...e.....
   2ee54:	).....T.e.....d.
   2ee64:	..x.............
   2ee74:	......Y...W.....
   2ee84:	..g.b.S.........
   2ee94:	..i.p.......:.\.
   2eea4:	....N...........
   2eeb4:	..F.....h...s.u.
   2eec4:	9...?...........
   2eed4:	^.........L...b.
   2eee4:	....y.G...Z.....
   2eef4:	1.O.s.......z.h.
   2ef04:	x.....h.........
   2ef14:	)...Z.6.1.......
   2ef24:	......P.g.M...#.
   2ef34:	E.......t...V...
   2ef44:	....X.L.j.......
   2ef54:	o.r.............
   2ef64:	$.X.A...f.u.A...
   2ef74:	4.....F.../...Y.
   2ef84:	................
   2ef94:	v.$.<...?.......
   2efa4:	........_.,...G.
   2efb4:	......#.........
   2efc4:	..../.C.......9.
   2efd4:	......*...I...t.
   2efe4:	................
   2eff4:	..............a.
   2f004:	......q...J.t...
   2f014:	..d...u.d.....Q.
   2f024:	..x.........X...
   2f034:	t.......e.7.!...
   2f044:	N.V.k...).......
   2f054:	a.........Q.\...
   2f064:	........,...y...
   2f074:	..........u...-.
   2f084:	L.........'.....
   2f094:	......u.1.....#.
   2f0a4:	9.....q.s.'...C.
   2f0b4:	5...%.....}...3.
   2f0c4:	..t.....K.......
   2f0d4:	h.....E.c.....y.
   2f0e4:	..........A.%...
   2f0f4:	r...8.s.X.......
   2f104:	<.r...\.4.\.-.f.
   2f114:	..........Y...T.
   2f124:	..[.]...t.......
   2f134:	......6.....S.N.
   2f144:	........G.....m.
   2f154:	....3...........
   2f164:	....l.....q.>.Z.
   2f174:	*...^.......u...
   2f184:	Q...7.....n.....
   2f194:	....T.........I.
   2f1a4:	C.X...G.....i...
   2f1b4:	d...^...~...`...
   2f1c4:	S.........o...g.
   2f1d4:	v...+...........
   2f1e4:	........*.9.X...
   2f1f4:	............#...
   2f204:	..&.......-.!.'.
   2f214:	....@.....m.....
   2f224:	a./.6.!.........
   2f234:	......*.....a...
   2f244:	/...............
   2f254:	............[...
   2f264:	....(.....Q...A.
   2f274:	:.?.[...g.q.....
   2f284:	............e...
   2f294:	......F.....W...
   2f2a4:	%.............>.
   2f2b4:	z.q.......`.)...
   2f2c4:	................
	...

0002f4a4 <sample_16_standard_DRUMS_crash5>:
   2f4a4:	........U.......
   2f4b4:	......<.<...1.T.
   2f4c4:	A.....5.......;.
   2f4d4:	......g.o...F...
   2f4e4:	W._.....k.......
   2f4f4:	e.6.)...........
   2f504:	J.5.f.....+.....
   2f514:	[.6...p.!.$.....
   2f524:	B.........".....
   2f534:	................
   2f544:	l...k.|.......& 
   2f554:	3...;.7...O.....
   2f564:	..:...l.........
   2f574:	..(.....9.....6.
   2f584:	E.......R.B...o.
   2f594:	F...<...V.^.....
   2f5a4:	......C.....4.5!
   2f5b4:	.!2.7$|.O.>$4.m.
   2f5c4:	..F...u.-.h.].E.
   2f5d4:	-.....2...-...k.
   2f5e4:	t.....;(..}<M...
   2f5f4:	......U...d.....
   2f604:	..[.p.........b.
   2f614:	,.T!..]Bg../....
   2f624:	......*.y.......
   2f634:	&.....T...].....
   2f644:	x.w.....*.......
   2f654:	&.H."*#.........
   2f664:	..w.......y.....
   2f674:	.,%&............
   2f684:	..=.....0.{.....
   2f694:	[.T........!..$#
   2f6a4:	..j.*1.../......
   2f6b4:	p...Y...........
   2f6c4:	....t...........
   2f6d4:	..!....".;.#.9n.
   2f6e4:	........^.v...9.
   2f6f4:	 .*.X.n.........
   2f704:	......9..A...#X6
   2f714:	.&.!i...........
   2f724:	."..0....1....G.
   2f734:	....{.7.=...E.,.
   2f744:	1.......H.4?v.X.
   2f754:	M.....g.....e...
   2f764:	..o...~...).6$..
   2f774:	.9o....*].....f.
   2f784:	..i._.P.K.....r.
   2f794:	U.........Z.=9..
   2f7a4:	<"".z...9.......
   2f7b4:	}.....y.i...f...
   2f7c4:	...&............
   2f7d4:	.D...!..Y.3.).".
   2f7e4:	c.F...l.....[.|.
   2f7f4:	..0...V.......2.
   2f804:	."=..#j....-3...
   2f814:	V........'+...g.
   2f824:	......aG..;..#A.
   2f834:	>"..........F...
   2f844:	..m.........IK..
   2f854:	..0.N...;...B...
   2f864:	[.....?.z..*[..:
   2f874:	Q.......9...s.W.
   2f884:	x"..c.K.....~../
   2f894:	..51...Y..&..(j.
   2f8a4:	....`........9U.
   2f8b4:	.4....r.)..'..E.
   2f8c4:	\...|.T...v...].
   2f8d4:	..%X..V./.....v.
   2f8e4:	....*.T.?].....+
   2f8f4:	........*.......
   2f904:	g.#..4......K*..
   2f914:	......2...^.....
   2f924:	f.p5.....'].....
   2f934:	.........)."J.n.
   2f944:	@.I.......I....&
   2f954:	....v.......t...
   2f964:	;...="..>.B...q.
   2f974:	..3..! ...V8....
   2f984:	I..%....X.......
   2f994:	)%t.....n.. ..;.
   2f9a4:	K./.;.I.7.n....E
   2f9b4:	*.=.YKw..S..y..*
   2f9c4:	....n...........
   2f9d4:	....AO..C.[.....
   2f9e4:	@.z.T(...../....
   2f9f4:	m(..q...W..'P...
   2fa04:	u.....q.Q.......
   2fa14:	.......3E.......
   2fa24:	7=..v.....7.i.`.
   2fa34:	....%......%..[.
   2fa44:	;.....2NY...{.E.
   2fa54:	......8...G.....
   2fa64:	.......8m.Z...i.
   2fa74:	L.C"l.."x.....c.
   2fa84:	....,.&..P..1.8.
   2fa94:	..Q,..W.........
   2faa4:	6%C.@2..v.).....
   2fab4:	.<..q,....c...`%
   2fac4:	.....0...;....|.
   2fad4:	......K.......#.
   2fae4:	....b.......]...
   2faf4:	I.C....<0.Q/....
   2fb04:	r%..~.B.O.P.!>..
   2fb14:	....&...P....5..
   2fb24:	./......[2..l.0.
   2fb34:	..^......:..#...
   2fb44:	.*....w.....+.2.
   2fb54:	U.Y.o6k.v...H.< 
   2fb64:	..m..........1..
   2fb74:	B.H..C..! ...>K.
   2fb84:	...........-..f.
   2fb94:	.4..~Z...I!.D...
   2fba4:	.0..%.M.L0i.D...
   2fbb4:	u.33k..I....I..(
   2fbc4:	...C..%(;.....y.
   2fbd4:	X.$...G.....v...
   2fbe4:	...!Y!h.......\.
   2fbf4:	R...;...C...I...
   2fc04:	F.T.q8$..Wp.....
   2fc14:	....+......5....
   2fc24:	:.6.m&@....A..y(
   2fc34:	....\>r.....".P.
   2fc44:	G....)..S....%".
   2fc54:	"."...Z.......?.
   2fc64:	..^....YN..Z..=.
   2fc74:	..-.z....,7.....
   2fc84:	..........:.Y5..
   2fc94:	..].d>...&...%..
   2fca4:	..'.l.d......@..
   2fcb4:	Z..6......9...`.
   2fcc4:	..3.;...|.......
   2fcd4:	.$..YY..1.n.z...
   2fce4:	.....5..2..N....
   2fcf4:	......H...Q.W...
   2fd04:	i.....(.M...(8..
   2fd14:	,2.....V..j.....
   2fd24:	.?W.....'......O
   2fd34:	...57........3..
   2fd44:	Q.+...12....E&..
   2fd54:	+...........v?/.
   2fd64:	..!?J.$.....OT..
   2fd74:	.;.......&..'...
   2fd84:	....=...{.......
   2fd94:	.G...!... Y.....
   2fda4:	...._2....n2`...
   2fdb4:	 .J-..Q...t.#...
   2fdc4:	].z.z..3_.z..%n.
   2fdd4:	.......N%.8...fB
   2fde4:	..........*.....
   2fdf4:	q....6.... .....
   2fe04:	H....8.._.h..,..
   2fe14:	#....B..b7....!.
   2fe24:	z.....h....!..T`
   2fe34:	..6X..{..8M.....
   2fe44:	....?.B@........
   2fe54:	.-$..\u.0......#
   2fe64:	.._..$.9...p....
   2fe74:	W"..z7....t.i...
   2fe84:	k-.....7$..;M...
   2fe94:	.M+.....o...^...
   2fea4:	........j)..c.[T
   2feb4:	M.......-.r ....
   2fec4:	P.I...N.;T.....1
   2fed4:	...........3....
   2fee4:	F.............0.
   2fef4:	w...H.1...?.b...
   2ff04:	.......0u.......
   2ff14:	.... ..W;...^...
   2ff24:	&'..`.....+.....
   2ff34:	..Q....6b..N..=.
   2ff44:	p..>..........e.
   2ff54:	...%T.L...b..5.'
   2ff64:	..s.L....$k.Wj..
   2ff74:	.B ..,l..7..>..>
   2ff84:	.!N.1.4...QL..0B
   2ff94:	P.^..r...i.. .m.
   2ffa4:	/.u............@
   2ffb4:	A.Y2...5..2...:.
   2ffc4:	(.....h>....#.W.
   2ffd4:	......F..%A.....
   2ffe4:	.<....k..:,..0v.
   2fff4:	..........e..,..
   30004:	..c.C$r.7.[.....
   30014:	....:A..........
   30024:	..~...*.........
   30034:	...".....Yf... .
   30044:	....3)<./L....;9
   30054:	..GU'..,....Y...
   30064:	q.......e....3i.
   30074:	Pk6..5-..Z0.!1..
   30084:	,>Y.f..Q..:.(..4
   30094:	e...L...... `.8%
   300a4:	^..K........F...
   300b4:	..}...^%........
   300c4:	r.;..Y..X.....uM
   300d4:	L....`>.V.2....3
   300e4:	l.....!..,X.}...
   300f4:	b*).9.....Q.c..!
   30104:	..8?K..$...#....
   30114:	....h>.....6....
   30124:	.-....<0...?..#.
   30134:	.......i..;..*..
   30144:	+5p.....v...2...
   30154:	.'.......'..j...
   30164:	l.~..KZ......r;.
   30174:	...,... +..$A.W.
   30184:	.....&....?....4
   30194:	....*Bt..(..a...
   301a4:	.2......D.....9.
   301b4:	:.v;g..86.d.....
   301c4:	<..'.........G..
   301d4:	..<.s.o4....[$..
   301e4:	..^.........; ..
   301f4:	......MCi...Y...
   30204:	.4......;).%....
   30214:	..U$.....@..[...
   30224:	....9%......+".'
   30234:	P......-.....J..
   30244:	.....M,.7.....6,
   30254:	...!?.H....E..%.
   30264:	..)...z.R&...Q..
   30274:	.r..E<=...n9..i.
   30284:	..}.).d0..-.....
   30294:	;...".tl$...K...
   302a4:	A#..TE...-\..r..
   302b4:	4>..............
   302c4:	>....4.....-..2-
   302d4:	...AW.k.o.k....?
   302e4:	".....D'......a.
   302f4:	.1...&..h.YA....
   30304:	...=&..1...1....
   30314:	....d4g.....Y1..
   30324:	.!c..D....'+....
   30334:	..).z..!....<. .
   30344:	....?......4....
   30354:	.d......|A].Q"..
   30364:	]..J.....6...r..
   30374:	.h..........6...
   30384:	9..7c..K=..Ds...
   30394:	.GL..N........P.
   303a4:	 .............Q.
   303b4:	!.w1....,*......
   303c4:	.F....k........2
   303d4:	p.I...:.n...EH..
   303e4:	...-L..7...g...&
   303f4:	r.............e!
   30404:	..K)...".):..U..
   30414:	8_0.r....1......
   30424:	....z....1i.....
   30434:	......O.....L..:
   30444:	....v.W..."....E
   30454:	:..&..z(o.6.Y...
   30464:	.9..s.<.4.......
   30474:	.CB...c....G(...
   30484:	f...........\1S.
   30494:	E0...&....W.d.o.
   304a4:	........V.,....C
   304b4:	......I?......V.
   304c4:	.$G..3;.b.r.S!;.
   304d4:	...H6.Q..@......
   304e4:	%.6.....\,...r..
   304f4:	#P1..rI...'&....
   30504:	..{.G..Fw...B...
   30514:	a6..\..>.......0
   30524:	Q.......G ......
   30534:	.A.........A....
   30544:	..T..r`...8..&..
   30554:	..............7.
   30564:	....t.J07.|...93
   30574:	.. ...-..._.....
   30584:	.$ ...C.."....L.
   30594:	...M............
   305a4:	8.m...E!.....]].
   305b4:	.0=..T.......#..
   305c4:	x$....E..#c.~...
   305d4:	Z p........'#...
   305e4:	.....#)...Y..r..
   305f4:	.AQ.....}...c>@.
   30604:	......j.....r..C
   30614:	...g...<....#.I.
   30624:	..u.Y........r..
   30634:	wA......6K......
   30644:	q..2..C(-......I
   30654:	..u..$r.....f...
   30664:	1...............
   30674:	.../..a._.......
   30684:	:..If.+.d1m.....
   30694:	Y.b.T!..1...0.Z.
   306a4:	....JE@...h+....
   306b4:	L.U.D.........o.
   306c4:	..."..h9>...%.r.
   306d4:	..U...8.+..H..q.
   306e4:	../9....~.+..'..
   306f4:	p.8#..}...`...l.
   30704:	/...N...........
   30714:	....n..@........
   30724:	Y........A......
   30734:	...>E.>.(..+..h.
   30744:	..)"....`... ...
   30754:	<.~.....+.....].
   30764:	......m8a.r...E.
   30774:	.=...3...,..N..A
   30784:	n....%... ... ..
   30794:	...R..+9_..\..N.
   307a4:	0.S...i.........
   307b4:	.F`...?...o.W.y.
   307c4:	..h.U.?I...53.I;
   307d4:	........u.T.. ..
   307e4:	x.h0......v..U..
   307f4:	v..E0..9...-l.3.
   30804:	i..-P.;D...4Z.K.
   30814:	.K..G.)...Q...R.
   30824:	.60....!....J...
   30834:	.5..E*..r)....-.
   30844:	k.2...,.r.A. _\.
   30854:	........$....7..
   30864:	..5.......@...A.
   30874:	.Bq...... >.J...
   30884:	.+....d.07....S>
   30894:	....8.........V.
   308a4:	................
   308b4:	-.-%M.......GIV.
   308c4:	E.l.....0...K.Z.
   308d4:	...........#....
   308e4:	*;..u......#...)
   308f4:	m.........$.S...
   30904:	....v&..@.?....D
   30914:	...R..j,....p.a=
   30924:	......n.y3}.Y.1.
   30934:	.,...#..Z..-....
   30944:	."..'.h....K..#.
   30954:	|!]7q.).....1...
   30964:	...."...J.y...K3
   30974:	..G.u..D....m.11
   30984:	..G./.#.....:...
   30994:	M.....:@u...<...
   309a4:	...1.......E..3.
   309b4:	..q._T......}...
   309c4:	N9..p.:.SNt.....
   309d4:	.*....F8..*.h..)
   309e4:	..,.....9O..;...
   309f4:	.;...&{.........
   30a04:	.....'m.1..e}...
   30a14:	z..&_...U.....z.
   30a24:	..-.e.O.O...@...
   30a34:	.........-..<.W.
   30a44:	.9..y.}.k...\...
   30a54:	....h..9e.v+.&).
   30a64:	B.@.hH..Q._.5,..
   30a74:	.....F..k.-.2...
   30a84:	./^...R..H......
   30a94:	 .t...m"......x.
   30aa4:	[C.. ..._,..c]$.
   30ab4:	d%...'........F.
   30ac4:	V.,.:...s...4C..
   30ad4:	.....6.....)"...
   30ae4:	....3.U.<V_.....
   30af4:	E..].....8].....
   30b04:	..W.q...<F..t1.:
   30b14:	J......(..D.2-..
   30b24:	..Y.,.e.O.YAT...
   30b34:	V'....l.@.....D.
   30b44:	...;F.p.|f&.X...
   30b54:	....\.{.@.....} 
   30b64:	..P...`.E.3..=M.
   30b74:	.*5....G..t.)...
   30b84:	....H.:.....$%..
   30b94:	...-T.z...*.* ..
   30ba4:	.2x.[.....u.....
   30bb4:	Z...o.D.x.......
   30bc4:	..,.=..0(...W...
   30bd4:	P...... ..X.....
   30be4:	.... .n......;..
   30bf4:	...:x.r.w...m#..
   30c04:	7.........139.Z.
   30c14:	c.I3..\..*?.....
   30c24:	S%........s,....
   30c34:	..%.Y. ........)
   30c44:	....g.k().*.Fm..
   30c54:	.......%....."T.
   30c64:	N.y$4.5.........
   30c74:	}4......}.......
   30c84:	.....Nb..@....].
   30c94:	..n.........b...
   30ca4:	.......2........
   30cb4:	X.o.../......7/.
   30cc4:	$.. o.....*J%...
   30cd4:	....V.s.=...."..
   30ce4:	8.q..........M..
   30cf4:	....u.....z...c.
   30d04:	....q....U..i-..
   30d14:	.*..............
   30d24:	*...j.G.../<../^
   30d34:	)..8Y @.l.....!.
   30d44:	..$...DC[..7...%
   30d54:	....)....%]...r.
   30d64:	U.,...t.G..!....
   30d74:	,..2@.[...,.i...
   30d84:	..........#.uJ..
   30d94:	..>9:.....S..&H.
   30da4:	.)..H...#.}-f...
   30db4:	U.....n...i.....
   30dc4:	...'...2...CT...
   30dd4:	P]...q.../!.....
   30de4:	t......6...HI..Q
   30df4:	C.D.w..+..).O'..
   30e04:	k%*.....A->.E!P.
   30e14:	g...../<....o...
   30e24:	......7.}."..@..
   30e34:	5an..%7.*!..V...
   30e44:	..N7\.Db.....2:.
   30e54:	.....=......(...
   30e64:	h...1...j.W.....
   30e74:	[JI........:f...
   30e84:	,.A.-...b8z..&..
   30e94:	A.....O.C.$.6(..
   30ea4:	....?.I#....6...
   30eb4:	SHU./...p...7.*.
   30ec4:	.......,....(.o.
   30ed4:	y&|..#..i.....g.
   30ee4:	{........(k....!
   30ef4:	..t....7..G.9...
   30f04:	........F...9.".
   30f14:	...8............
   30f24:	..W.....D.D....$
   30f34:	.....&(..&o.....
   30f44:	..0../l...)...\.
   30f54:	t....4..(...x.nA
   30f64:	..!.4.m.........
   30f74:	.....2o.5....!'.
   30f84:	..1..)....-H..I<
   30f94:	...&s.O.].|.....
   30fa4:	D3...J-.(...b..)
   30fb4:	.._..7......o..+
   30fc4:	?.|....%A.+.T...
   30fd4:	..p.6&e.../.....
   30fe4:	I k...`...A\..X.
   30ff4:	..@.k......3....
   31004:	..(..5H.V.....E.
   31014:	........b.;.....
   31024:	.,..".(.D....1x.
   31034:	.4....f08.......
   31044:	7..7K..3i...+'o.
   31054:	..........y.....
   31064:	[.........M'..fS
   31074:	...({...F)....O.
   31084:	..p.e.:....)u...
   31094:	..p.`.U..%6. ...
   310a4:	......[.......u.
   310b4:	................
   310c4:	h. .......y.....
   310d4:	5/....).Q.x.....
   310e4:	....../.....U.T.
   310f4:	.J"..1..a.i.1.8.
   31104:	C...X.....8._..6
   31114:	e....Z..\.:..<..
   31124:	v.;......8......
   31134:	M.iU..0.$.}.Y...
   31144:	j.......XH......
   31154:	I)....).%.A.&.#.
   31164:	S.....W.[.......
   31174:	...../E...I.Y...
   31184:	....H...........
   31194:	....2....6..T...
   311a4:	........*.*..*..
   311b4:	..faH......Fu..B
   311c4:	..E.q.....b....:
   311d4:	t...M..<..R.... 
   311e4:	..0.....I...n..M
   311f4:	..a6e.........F.
   31204:	$.....O.....b.8.
   31214:	;'n...k)n.;=..R.
   31224:	............ ..#
   31234:	..f....0......*.
   31244:	.&a....r..Dm...@
   31254:	...D.......(..f.
   31264:	F...a.l.......@.
   31274:	...n..O2........
   31284:	..Y.]../k....m..
   31294:	.F..g..0q.......
   312a4:	........<.......
   312b4:	.1(.........g'L.
   312c4:	..n..I...r..=@..
   312d4:	Z..,#..j...1....
   312e4:	..K.W........N..
   312f4:	.r.. b......5...
   31304:	.......f8.pP....
   31314:	......L..[...+..
   31324:	..Y...L.........
   31334:	...^...J...;....
   31344:	=.h...n...D..%..
   31354:	....}.*.......y.
   31364:	......>.$.G&/...
   31374:	..,......'...;t.
   31384:	[....../e.N<E.Q.
   31394:	M.....O...:.....
   313a4:	..).,.U.........
   313b4:	.......)......F.
   313c4:	o...;...u."...**
   313d4:	w.2P......6..#'.
   313e4:	....~.4..(......
   313f4:	b.P:..$.......T.
   31404:	..1.....A.<...G!
   31414:	N........... ...
   31424:	........D.......
   31434:	.1.._.l.......e.
   31444:	'.............:.
   31454:	....G.q.:.(.....
   31464:	..i..4y.$...@...
   31474:	....v._.......y.
   31484:	....!..6..F5*...
   31494:	....x.})....W...
   314a4:	...5..=5.......F
   314b4:	c.IP..i.......$.
   314c4:	......v.....a...
   314d4:	c..(............
   314e4:	..........=.....
   314f4:	.F...9........I.
   31504:	F......)..4e...H
   31514:	........^..XX.E.
   31524:	..D&....r.....X.
   31534:	A%...-..j.1.5.*.
   31544:	...._..'..?-*..)
   31554:	h.(....'N.......
   31564:	..&'....Y.....e2
   31574:	B..a....@.C.*...
   31584:	T+..X4...?9..@..
   31594:	.5...#....R'....
   315a4:	.......#...B...a
   315b4:	......6...8.....
   315c4:	^.........].H...
   315d4:	;...o...f.......
   315e4:	.........+A...#.
   315f4:	...$..}47.^.....
   31604:	i....7...Hc...a.
   31614:	..)...........r.
   31624:	s.........4!..nS
   31634:	....n.......h...
   31644:	....e.$....,....
   31654:	/..;.......L..R%
   31664:	.....'..........
   31674:	..j/O.."|..+....
   31684:	Y...p...(.Q...2.
   31694:	.)..~.`..'_.<...
   316a4:	..V...c.T%.....2
   316b4:	...(#.U.E...g..!
   316c4:	`..@L.X....:h..-
   316d4:	....M.........,&
   316e4:	........../.|...
   316f4:	..............f.
   31704:	n........[...%..
   31714:	-....-..|.......
   31724:	..p...l.S...a"K.
   31734:	.=...37.....-...
   31744:	......F.+.p.N...
   31754:	=...s.:...u.....
   31764:	..#.. ..[-v.{...
   31774:	....."..{.t.L..'
   31784:	..M.......KGO.f(
   31794:	... ..6.....a...
   317a4:	..S-h.[!f.<.....
   317b4:	..(.N.=..5......
   317c4:	.....#..f...Q...
   317d4:	................
   317e4:	..Q.......{$&.%.
   317f4:	......*.........
   31804:	....K.`...!.b.."
   31814:	W.....{.........
   31824:	....!.....`"...1
   31834:	..r.........N...
   31844:	O.g... .i.z;..W.
   31854:	I.+..)!.K.F.w#..
   31864:	....... T...../9
   31874:	...B...6`...&.X.
   31884:	....t.+.v...d.0&
   31894:	B.h.k......./...
   318a4:	).........S...0.
   318b4:	0.Q.l....53..4..
   318c4:	..N.t..'7.=.....
   318d4:	U.N.. 9...U.....
   318e4:	.........,g...".
   318f4:	.#..i......(..X'
   31904:	#...G.W.i.M...l.
   31914:	w.......X.r.....
   31924:	....t.g...?...i8
   31934:	N.."l.Q.......t.
   31944:	....,...%.......
   31954:	P(........k...U.
   31964:	F.3.....`$...#..
   31974:	X.......K.8.....
   31984:	..+...G6../.l$g.
   31994:	....j...=7]..$m.
   319a4:	....LA].?......(
   319b4:	.....6/...c.l...
   319c4:	L.`.g...u.......
   319d4:	$.|....-g.z."...
   319e4:	B.....n.........
   319f4:	..g........."...
   31a04:	..... 6.}.....4.
   31a14:	_.......5.......
   31a24:	..u.......m..!".
   31a34:	.dM.7...].......
   31a44:	.<?.........."..
   31a54:	..q.......2...;.
   31a64:	...$..t.........
   31a74:	.....&'.......y.
   31a84:	..5.5.....).....
   31a94:	y........ ......
   31aa4:	..."..h..6l.$C..
   31ab4:	'.|.W.....l.}...
   31ac4:	&.....1.........
   31ad4:	..()..x.....T...
   31ae4:	............9...
   31af4:	..#.2.........e.
   31b04:	i.I...{... . .r.
   31b14:	M...........~...
   31b24:	..{.#...e.Z.... 
   31b34:	...._.......`.".
   31b44:	=...0..-..):..;G
   31b54:	u..%....!.......
   31b64:	K...Z.....y.....
   31b74:	;...;.".........
   31b84:	......h...c.....
   31b94:	l...y.o........!
   31ba4:	......W....... .
   31bb4:	........g.m.O.3.
   31bc4:	..1..1.....'....
   31bd4:	....`.9.....]...
   31be4:	3...?.....}...j.
   31bf4:	..f.qS=...Z.L.|&
   31c04:	..........Q.....
   31c14:	j.7.........i...
   31c24:	................
   31c34:	..1.1...X.I.X...
   31c44:	..........C.....
   31c54:	..........*...3.
   31c64:	....$...,...E%..
   31c74:	......4.%.......
   31c84:	......X.+.......
   31c94:	..#........2i...
   31ca4:	w...N..........,
   31cb4:	..0.....S.:....!
   31cc4:	.........$......
   31cd4:	.......&........
   31ce4:	T.~...f.W.....|.
   31cf4:	..".....D.(..#..
   31d04:	J.........y*i...
   31d14:	........."...7..
   31d24:	=.......t....4O.
   31d34:	kM...1......{.3.
   31d44:	(...D....34.g...
   31d54:	............f.g.
   31d64:	..........M.....
   31d74:	u.....$...W.T.%.
   31d84:	Q.......~.......
   31d94:	..............x.
   31da4:	..K.....0..../..
   31db4:	u.q...........+.
   31dc4:	...7/._.C...'...
   31dd4:	7.P.Z.......e.{.
   31de4:	..{.(.....?.C.5)
   31df4:	F.A."... .......
   31e04:	.........0..j.T.
   31e14:	q.........8.....
   31e24:	w.M..(..........
   31e34:	....> ..........
   31e44:	:.l...........S.
   31e54:	u.....S.........
   31e64:	X...k.......*...
   31e74:	..z..../........
   31e84:	....-...../.....
   31e94:	..x...g.2.......
   31ea4:	........q.......
   31eb4:	0.............h.
   31ec4:	R.....L.o....(..
   31ed4:	........N..6..6.
   31ee4:	..~.............
   31ef4:	*.@.;..#q.......
   31f04:	p... ...?...=.~.
   31f14:	..."....Y.|.V...
   31f24:	..T.N.7..$..k...
   31f34:	5...Z.9.u.G.v...
   31f44:	... #...l.....J.
   31f54:	m.....P.....G...
   31f64:	....i.{...v.....
   31f74:	............c...
   31f84:	..\...I......*C.
   31f94:	......=.........
   31fa4:	..}.u..!......;.
   31fb4:	H.n.i.M.*.....p.
   31fc4:	....5.....*.j...
   31fd4:	..a14....._.....
   31fe4:	g.X.......t....<
   31ff4:	...b...6S.V.[.p.
   32004:	......b...D..$..
   32014:	. >._.%.t.r.o...
   32024:	....=.......S...
   32034:	............&...
   32044:	O.......0.......
   32054:	..........x.....
   32064:	..!.a...1.....f.
   32074:	4...?...V.}.....
   32084:	..[.....Y ..>.5.
   32094:	....,.C.z...#.3.
   320a4:	..........c.....
   320b4:	B..#....7._.....
   320c4:	..x.....o...*'..
   320d4:	.'<...6.j.O.M...
   320e4:	..........e..._.
   320f4:	....)...R.)!2...
   32104:	..........a.....
   32114:	~...6.....t...;.
   32124:	[...H.......,...
   32134:	......A...$.)...
   32144:	c...B.-...%.^..$
   32154:	..e.............
   32164:	e.......?-..!.E.
   32174:	!.@.m.`.....v.W.
   32184:	....&......?....
   32194:	Z.........a.9.S.
   321a4:	^...u.8...p.....
   321b4:	.!)...3...."..+.
   321c4:	......z...D...`.
   321d4:	~......:...(....
   321e4:	W........&G.Y...
   321f4:	.....,...)......
   32204:	..C.e.....a.....
   32214:	....8..... ...(.
   32224:	..........Q.....
   32234:	..........].....
   32244:	..U.y.....7.....
   32254:	..............g.
   32264:	}......;..g...A.
   32274:	.. .............
   32284:	......Y...p.....
   32294:	......I.6.R...T.
   322a4:	7.}.......Q.q...
   322b4:	..$...`.O.R.....
   322c4:	....z...[.^.N...
   322d4:	..4.......m.(.M.
   322e4:	..D...#.'...z.S.
   322f4:	......*.+....(..
   32304:	..........9...=.
   32314:	..].........[...
   32324:	....o..'Y.s.....
   32334:	....P...>.....e.
   32344:	....=.^.......K.
   32354:	....A...........
   32364:	....a.....0...s.
   32374:	D.F'}.K.#...9...
   32384:	............J...
   32394:	.)..........c...
   323a4:	..3.. A.2.......
   323b4:	............3...
   323c4:	i.+.........V.j.
   323d4:	....v...........
   323e4:	v92.3.w.>.......
   323f4:	..{.y.@.4....&e.
   32404:	".w........)..kH
   32414:	y."+......f.`...
   32424:	....f.k.p.<.....
   32434:	8(....}.h.......
   32444:	i...........j.O$
   32454:	m...q.......l...
   32464:	....."..........
   32474:	z%............>.
   32484:	X...0.....E.....
   32494:	........c.....t.
   324a4:	5.!.............
   324b4:	S.....G.......^.
   324c4:	U.......b...... 
   324d4:	j...k...........
   324e4:	..v.........K...
   324f4:	....Q.=.>...t.:.
   32504:	..;.....K.....".
   32514:	..6.q.n..2{.[...
   32524:	.............#..
   32534:	..(.......0...k.
   32544:	................
   32554:	g./.......#.....
   32564:	r.J.....U......&
   32574:	B..)..D...s.P...
   32584:	t.........T6..v!
   32594:	..........e.....
   325a4:	......s.........
   325b4:	......./......F.
   325c4:	....../.b....%..
   325d4:	..{.........i...
   325e4:	......a..)..u...
   325f4:	......)...R.>(..
   32604:	....{...Q.U.....
   32614:	..q.............
   32624:	Y.P.......<.8...
   32634:	........$.......
   32644:	#.k.......k....)
   32654:	4.$.......G.o...
   32664:	..H.Z.O.....(...
   32674:	..... G...d.O...
   32684:	..(.......[.....
   32694:	b.m.........J...
   326a4:	..`... .........
   326b4:	,...$.":-.~."...
   326c4:	..Q.2.H.....0.$.
   326d4:	l.a*v.|.....V.z.
   326e4:	..........|...y.
   326f4:	....(.."i.......
   32704:	........0......,
   32714:	G...............
   32724:	..............?.
   32734:	.../!..5s.@"..-.
   32744:	..j.........i.#.
   32754:	......).8.z.....
   32764:	....n.......6...
   32774:	.8....u.........
   32784:	......'.V.......
   32794:	..C.K.&.....6.g.
   327a4:	..f...M...b.y...
   327b4:	....g...!...V.,.
   327c4:	g.$...r...F.U.C.
   327d4:	............t. .
   327e4:	..........C.....
   327f4:	..........E...s.
   32804:	..p...;.....F.`.
   32814:	........l.I.%.<.
   32824:	=.....,.........
   32834:	..d.A.|.Z.1.....
   32844:	..g.... ........
   32854:	+.........,.....
   32864:	....$. .......F.
   32874:	....g.~.}.......
   32884:	..........A#8...
   32894:	......>... ...y.
   328a4:	s.............A.
   328b4:	..@...........!.
   328c4:	....h.........7.
   328d4:	}.......n.g.....
   328e4:	C...e.:.E.<..%2.
   328f4:	v.h.Y.}.x.....9.
   32904:	......&"........
   32914:	..H.....P.......
   32924:	..Q.........X.5 
   32934:	..............w.
   32944:	..)..'N...V.....
   32954:	..,.7...=.9...k.
   32964:	..B.&.v.........
   32974:	....f.s.........
   32984:	......G...%.....
   32994:	%...f...F.~.4.].
   329a4:	).M.i....(......
   329b4:	..s.?.....l...u.
   329c4:	8.F...;.;.......
   329d4:	i...[.9.N...I...
   329e4:	`...c.....S.....
   329f4:	..o.a.m.....K...
   32a04:	............%.w.
   32a14:	`.....E./.....T.
   32a24:	......`.......|.
   32a34:	......d.K.8.....
   32a44:	v.........\...4.
   32a54:	......;...7.k.m.
   32a64:	........_... .q.
   32a74:	..J%..B.F.Z...W.
   32a84:	....d.".5.......
   32a94:	Z.+.f.......*.T.
   32aa4:	......].L...B.^.
   32ab4:	....j.i)T.K.....
   32ac4:	T...K...P...c...
   32ad4:	..........T.....
   32ae4:	............F#..
   32af4:	J... .....t...].
   32b04:	Z.....8..:....H.
   32b14:	..!.q...v......'
   32b24:	..`.......s. .Y.
   32b34:	....."i...C...L.
   32b44:	U...|.8.U...Z...
   32b54:	....I...........
   32b64:	.... ..*M..*....
   32b74:	..........I.....
   32b84:	....?...H...J...
   32b94:	......h...y.@...
   32ba4:	................
   32bb4:	......n.X.$.B.@.
   32bc4:	..N.%.j.a.`.....
   32bd4:	..d.E.e.....r...
   32be4:	..... ].....4 S.
   32bf4:	E.&.......v.!./.
   32c04:	..F./.C.........
   32c14:	.!..`...(.......
   32c24:	........Z...D!..
   32c34:	].......K.......
   32c44:	....i.|... ...L.
   32c54:	|.:.;...........
   32c64:	..|.#...........
   32c74:	}..&..f.X...s.K.
   32c84:	.........$F...#.
   32c94:	...............!
   32ca4:	..............T.
   32cb4:	..h...........f.
   32cc4:	..g.........9.#.
   32cd4:	0.Q.S.......o3..
   32ce4:	[.....?.W.....i.
   32cf4:	......k.....V...
   32d04:	.._.7.......N...
   32d14:	........ ...D...
   32d24:	......[.....\...
   32d34:	..../...d.......
   32d44:	v...x.z...3.m...
   32d54:	......c.....j.7.
   32d64:	..y.h.........J.
   32d74:	....p..._.....\.
   32d84:	x...b.......p"9.
   32d94:	....s...Q.y...C.
   32da4:	\.3. ...D.}.N...
   32db4:	..n.......$&c...
   32dc4:	....&...........
   32dd4:	+.........C.-.).
   32de4:	<.d.a...l.m...U(
   32df4:	..........G.Z...
   32e04:	..$.+.........'.
   32e14:	..I.#...........
   32e24:	..j...P.....u.Y.
   32e34:	......8.m.F...0.
   32e44:	&.....+ ^.......
   32e54:	w...}.$...^.}.|.
   32e64:	O...{.Z.g.y.J...
   32e74:	x....3...!......
   32e84:	....]...].f...I.
   32e94:	m...........t.p.
   32ea4:	......_.A...#...
   32eb4:	U...G ..........
   32ec4:	....O.....w.o...
   32ed4:	A.^.........^...
   32ee4:	........c.3.....
   32ef4:	.... .......M.@.
   32f04:	......3.'$..:.6 
   32f14:	........k.K.....
   32f24:	....V.......&..#
   32f34:	....W.j.....z.?.
   32f44:	&. ./"Q.}.O.....
   32f54:	......f.$.w..._.
   32f64:	..F.............
   32f74:	..z...~...A.....
   32f84:	..X..."..._...v.
   32f94:	B...............
   32fa4:	9.........|.%...
   32fb4:	<...O.|.......-.
   32fc4:	........].....}.
   32fd4:	.5..u.=.@.....g.
   32fe4:	=.0.....k.......
   32ff4:	....!.........L.
   33004:	?.........,...U.
   33014:	L...0.....z)....
   33024:	....O.Z.....2...
   33034:	..,.......k.x...
   33044:	......)...... F.
   33054:	............H...
   33064:	............>...
   33074:	-.%...j...5.5.=.
   33084:	Q...i.....5.i...
   33094:	T.G.M...I.......
   330a4:	e...........#...
   330b4:	..,.E.......{...
   330c4:	8.......~...I.D.
   330d4:	..6.v.:.........
   330e4:	h...).`.w.......
   330f4:	}...~...........
   33104:	j...^.....2.q...
   33114:	f.t.U.....A.{.c.
   33124:	W.\.............
   33134:	......{.......m.
   33144:	n.I.....G.[.....
   33154:	........)...U.$.
   33164:	....n...F.....p.
   33174:	..L.............
   33184:	H.D...W.2.......
   33194:	......>...m.L.i.
   331a4:	.........)......
   331b4:	..=.~.~... .....
   331c4:	..5...!.........
   331d4:	..........&...S.
   331e4:	v.........V.....
   331f4:	8.3..!....y.u...
   33204:	....b.....C...^.
   33214:	....'.....H.....
   33224:	..,.....Y.......
   33234:	......x.....s.B.
   33244:	....T&x...K...8.
   33254:	*.....5.I.......
   33264:	e...~.....c.....
   33274:	?...............
   33284:	/.....&.M.......
   33294:	..........[.....
   332a4:	..........f.....
   332b4:	&.......{.....c.
   332c4:	%.@...4...E..,..
   332d4:	y.7...6.......\.
   332e4:	..#.....#.>.....
   332f4:	....z.....i.....
   33304:	..Q...p.....~...
   33314:	..f...d.....j...
   33324:	.....!..+.Q.z.U.
   33334:	0.G.....x..#..I.
   33344:	.&......g.......
   33354:	X.h.............
   33364:	..............x.
   33374:	e...%...........
   33384:	............#...
   33394:	m.@...X.`."...~.
   333a4:	+.......).......
   333b4:	......r...P.....
   333c4:	..........&...R.
   333d4:	,.k.3 ....D.....
   333e4:	....6.=.....C...
   333f4:	..4...V...>...:.
   33404:	........~.......
   33414:	......[....... .
   33424:	..........z.F...
   33434:	..d.............
   33444:	y.....`.........
   33454:	............%._.
   33464:	..u.........m...
   33474:	......z.u. ...j.
   33484:	l........./.B.c.
   33494:	&...........2...
   334a4:	@.............j.
   334b4:	....1.....l.C.Y.
   334c4:	A.......9.......
   334d4:	..J.Z.c.........
   334e4:	.._...F.h...X...
   334f4:	..../...........
   33504:	H.<.............
   33514:	......l.........
   33524:	....9.G.$.^.w.?.
   33534:	l.........G.a.>.
   33544:	o.@.....".......
   33554:	4...3.n(..Q.B.W.
   33564:	..N.)...........
   33574:	.._...*.v.....".
   33584:	&.......Q.h...I.
   33594:	8...<.x.9.......
   335a4:	6.......e.......
   335b4:	a. .Z%..O#/.....
   335c4:	....8...7.,....%
   335d4:	..k.......^.....
   335e4:	....-...6.I...Q.
   335f4:	W.k.......7,..U.
   33604:	..-.....S.......
   33614:	."..k. ...Z.....
   33624:	(.......".=.....
   33634:	3...X.;.I.....f.
   33644:	q...$.D.......P.
   33654:	]...............
   33664:	....U.m.C...E...
   33674:	..........u.....
   33684:	J...z.r.....Q...
   33694:	+...........5.1.
   336a4:	........Z.@'i.].
   336b4:	......V...."..4.
   336c4:	......&.......z.
   336d4:	?.I.........N.5.
   336e4:	..I.8...9...o.c.
   336f4:	......a...).{...
   33704:	............"...
   33714:	..6.Q.L.......Z.
   33724:	..j.}.....e.#.*.
   33734:	o.j...V.7.......
   33744:	..T...y.u.....9.
   33754:	;....!..Z.... b.
   33764:	y...7.....N.....
   33774:	..3...1.p.......
   33784:	............N...
   33794:	#.....].). .{...
   337a4:	5._(..q.........
   337b4:	W.........W.R..,
   337c4:	-.....k.....v.[ 
   337d4:	....U.-.s.....].
   337e4:	..&...f.......\.
   337f4:	..o...i....&....
   33804:	......X.....&.V.
   33814:	..............u.
   33824:	..F._...P.......
   33834:	....A.d&....Q...
   33844:	....].2...../...
   33854:	..W...o.......{.
   33864:	...&.._...8.....
   33874:	........2...8...
   33884:	..u.............
   33894:	..[.V...I. .O...
   338a4:	C.<.....z.1.6...
   338b4:	j.....n.P.A.....
   338c4:	..'.......+.....
   338d4:	{.........h.....
   338e4:	".N.......4.v.r.
   338f4:	..&......./.....
   33904:	`.Q.a.....D.....
   33914:	K...............
   33924:	y...............
   33934:	..o...........e.
   33944:	..K.].J.M.=...t.
   33954:	....1.........}.
   33964:	..,.........k...
   33974:	........~.T.....
   33984:	......!.......M.
   33994:	|.&...d.....4...
   339a4:	!.......F.'.....
   339b4:	..(.....s.....C.
   339c4:	..}.....I...i.A 
   339d4:	..c...[...J.....
   339e4:	...($.D.... ....
   339f4:	......R...d...=.
   33a04:	<.!.u......._.A.
   33a14:	].,.+.....^.....
   33a24:	................
   33a34:	V...........C...
   33a44:	U.7.....>.......
   33a54:	....e)....I...I.
   33a64:	C.4.\.....].....
   33a74:	..........S.....
   33a84:	....P....*..R.H.
   33a94:	:.c...V...r.9...
   33aa4:	......F.6.......
   33ab4:	................
   33ac4:	...._.......D...
   33ad4:	{.\.\........._.
   33ae4:	..s.....W.......
   33af4:	..,.............
   33b04:	....@.........[.
   33b14:	..........}.....
   33b24:	..Z...1...\.r...
   33b34:	................
   33b44:	....E.......!.s.
   33b54:	..[.`.......S.h.
   33b64:	........y.3.....
   33b74:	........h.......
   33b84:	....X.......{.!.
   33b94:	~...4...........
   33ba4:	..........@.9.b.
   33bb4:	..d...........+.
   33bc4:	;.j...6.........
   33bd4:	v.....9.....:.M.
   33be4:	X.k.......V.....
   33bf4:	......M.........
   33c04:	..7.....2.$.....
   33c14:	8.\...a.........
   33c24:	3...e.A.........
   33c34:	......E.....O...
   33c44:	......A...Q.f.U.
   33c54:	..z...i.Z.W.x.^.
   33c64:	]...P...8.......
   33c74:	T.b.....*.......
   33c84:	....1...X.G...c.
   33c94:	..h.............
   33ca4:	g...5...D...z...
   33cb4:	..n..$......g...
   33cc4:	..\...........a.
   33cd4:	q.....h.{.......
   33ce4:	... ....6.....*.
   33cf4:	....9.....0.4...
   33d04:	....[........%b.
   33d14:	<...D...........
   33d24:	d.S.B.I.6...;...
   33d34:	..........].D...
   33d44:	V#'......#.."...
   33d54:	."..@...P.z.....
   33d64:	..........o...j.
   33d74:	..=.......*.....
   33d84:	..............U1
   33d94:	M...).l.."..b.-.
   33da4:	..].....8.......
   33db4:	7.........}...\.
   33dc4:	U...............
   33dd4:	......d.).....~.
   33de4:	f.M.............
   33df4:	q.9.>...... \...
   33e04:	............~.7.
   33e14:	....>...........
   33e24:	E.....a...I.....
   33e34:	......{.X.....b.
   33e44:	....i.....L.". .
   33e54:	....../.n.Y.r...
   33e64:	....u.5.R.}.....
   33e74:	..H.....&.}.....
   33e84:	z.&.........T.L.
   33e94:	".).............
   33ea4:	......H.F.......
   33eb4:	..............3.
   33ec4:	..{.U...E...r...
   33ed4:	..........D.....
   33ee4:	..i.Q.{.........
   33ef4:	....n.y.D....'%.
   33f04:	......1.......f.
   33f14:	....F.....]...l.
   33f24:	........*#......
   33f34:	T.........I.....
   33f44:	..o...&.........
   33f54:	Y...p...........
   33f64:	......4...n...3.
   33f74:	..3.............
   33f84:	........y...B...
   33f94:	e.Y.].8.....%.y.
   33fa4:	................
   33fb4:	@...~.|.>...9.H.
   33fc4:	..............>.
   33fd4:	.......#........
   33fe4:	;...~...1...i.l.
   33ff4:	........f.....q.
   34004:	..&'..T.........
   34014:	y...*.k..(*.[.p.
   34024:	W.........f.S..4
   34034:	...2R.?.....".<.
   34044:	..s......0..Q...
   34054:	W..#....Y.].....
   34064:	..j.u.....?...s.
   34074:	b.5..-x.....3...
   34084:	........I.......
   34094:	y.......G.e...G.
   340a4:	..L...V...y.....
   340b4:	........Q.72..j.
   340c4:	....s.0...b.....
   340d4:	.!..W.9.........
   340e4:	....C.".......G.
   340f4:	......=...q..6C.
   34104:	{.x.........4...
   34114:	<.....0.......x.
   34124:	....X.$.........
   34134:	..p.......T...z.
   34144:	O.....K.K.$.....
   34154:	C...L.......j...
   34164:	..%.....2....!s.
   34174:	..........u.H...
   34184:	....9...W*..@...
   34194:	....x.,...$...>.
   341a4:	..8...`.9...E...
   341b4:	_.G.............
   341c4:	Q.....a.l.......
   341d4:	..........|.....
   341e4:	c.4.............
   341f4:	......J.K.U.V...
   34204:	....0.1.........
   34214:	......7#..O...N.
   34224:	+...n.b..._.M.W.
   34234:	........b......"
   34244:	..-.....X&......
   34254:	8...n...u.....Z.
   34264:	......<........(
   34274:	V.V.......(.....
   34284:	p...!.".A...H...
   34294:	M. .......>.....
   342a4:	p...6./.e.*.....
   342b4:	....8.......(...
   342c4:	....0.......I.[.
   342d4:	....W.........3.
   342e4:	^.......X.......
   342f4:	3.(.....~...k...
   34304:	".....N.........
   34314:	I.....x.....v...
   34324:	=.q.........s.|.
   34334:	..../.<.......,.
   34344:	+!....V.....q.^.
   34354:	..3.......:.:.t.
   34364:	..=.......[.}...
   34374:	..............-.
   34384:	..;...,....#<...
   34394:	..#........._.}.
   343a4:	W.....S.....&.Z.
   343b4:	..u.Z.....y!%...
   343c4:	|.0.`.K.......6.
   343d4:	....K.s.{.T.v...
   343e4:	....}.3.<.......
   343f4:	..4...`.+.x..&B.
   34404:	....O...M.......
   34414:	....i.........7.
   34424:	o.....=.........
   34434:	....q.6...V...8.
   34444:	:...I...W.4.p...
   34454:	+...k.g.N...H...
   34464:	..q.."..........
   34474:	......r.....a.b.
   34484:	..C.-.......[...
   34494:	!.b.Z.W.G.W"..k.
   344a4:	%...:.....5.....
   344b4:	..^...l.....".U.
   344c4:	....=...K.8.....
   344d4:	..!...%..2..@...
   344e4:	..u.....5&..u...
   344f4:	s.....?.......%.
   34504:	......T...8.}.p.
   34514:	....g..........$
   34524:	Z.n.........Z..#
   34534:	........(.......
   34544:	H.D.........(...
   34554:	..]...,.).......
   34564:	<.t...8.....G...
   34574:	..3...U.] ....".
   34584:	..^.........z...
   34594:	~.......... ....
   345a4:	..F.....Y.......
   345b4:	....P.......D.W.
   345c4:	..k...H.m.....%.
   345d4:	......|.........
   345e4:	..........T.{.s.
   345f4:	`..!>...5.\...9.
   34604:	..Y.K.........t.
   34614:	....U.d.x.*.....
   34624:	............D...
   34634:	....J.....7.....
   34644:	..C...8.........
   34654:	7.../.).......N.
   34664:	p.....h.....e...
   34674:	u.....?.........
   34684:	....F.=...y.....
   34694:	......T...N.....
   346a4:	.)..c...N.C.h...
   346b4:	........!.....!.
   346c4:	C.e...T'd.....<.
   346d4:	J...............
   346e4:	 ...............
   346f4:	...&B...?.....m.
   34704:	..>...2...A.U...
   34714:	............W...
   34724:	..K.........y...
   34734:	....L.(.....u.+.
   34744:	..........H...e.
   34754:	*.........;.A...
   34764:	'.Q...[.....M...
   34774:	....$.-.N.A.!...
   34784:	..{.....X.G.....
   34794:	..].b...........
   347a4:	H...w...+.....h.
   347b4:	v....$..>.....[.
   347c4:	......B.........
   347d4:	... ....B.......
   347e4:	....C.?.........
   347f4:	\.%...F...G.W.j.
   34804:	..{.....E.z...&.
   34814:	................
   34824:	..k...G.......2.
   34834:	{...D...F.$.....
   34844:	....1.........t.
   34854:	5.-.......Z...!.
   34864:	C.1.....<.....n.
   34874:	..2.g.u.i.2.g...
   34884:	../.6. .....&.<.
   34894:	..,.....6.l.=.g.
   348a4:	.....(....Z...g.
   348b4:	..k.f......"y.`.
   348c4:	......O...[.....
   348d4:	..P.T.........m+
   348e4:	........!...P...
   348f4:	/...v.......|...
   34904:	.. ..._.t.F.....
   34914:	....i...&.R.1...
   34924:	..S.............
   34934:	-"......F.....p.
   34944:	....../#M.......
   34954:	.....(U.........
   34964:	..l.......@.F...
   34974:	W.x.............
   34984:	......p.........
   34994:	..s...)...V.....
   349a4:	1.....{.\.......
   349b4:	!...h...I.......
   349c4:	........3...#.8$
   349d4:	......i...F.u...
   349e4:	I...............
   349f4:	S.....%...s.J...
   34a04:	..T.............
   34a14:	....L.....d.....
   34a24:	..c.2...o.......
   34a34:	M.....;...'%....
   34a44:	..l.....b.c.....
   34a54:	w.X.......:.u.t.
   34a64:	....2....... ...
   34a74:	............+...
   34a84:	M...}.....A.N...
   34a94:	..O.7.....".....
   34aa4:	..4.(.?.....&%..
   34ab4:	..Y...c.>.......
   34ac4:	..;.R.........H.
   34ad4:	a....(+...*.....
   34ae4:	..?.......T.j..&
   34af4:	..E.8.......'.P.
   34b04:	....G.......3...
   34b14:	^.............|.
   34b24:	8.O...d.........
   34b34:	....w...h.?.*...
   34b44:	+...........{.o.
   34b54:	E.......G.T.....
   34b64:	Z...F...........
   34b74:	+.j.......w...b.
   34b84:	E.<.....k..+..&.
   34b94:	..............+.
   34ba4:	..:.....L.).5...
   34bb4:	..I...Y...O!....
   34bc4:	..B.<.y..-....O.
   34bd4:	8...u...t'......
   34be4:	Y.D.............
   34bf4:	....?.a.(.......
   34c04:	....:......)..,#
   34c14:	i.~.;.Q.<.......
   34c24:	t...h.......8...
   34c34:	..3.....S...!.w.
   34c44:	...."...........
   34c54:	....X.P.X...C.v.
   34c64:	2.<.........Z...
   34c74:	........@...`...
   34c84:	..d.K.6.#.p.....
   34c94:	..Z ......%.n.*.
   34ca4:	-.m.s.....@.=.".
   34cb4:	..y.......>.. V.
   34cc4:	../.'...w+f.....
   34cd4:	..p.y...........
   34ce4:	..........q.....
   34cf4:	......[...b'$.2.
   34d04:	b.......)...N.-.
   34d14:	R...........k.^.
   34d24:	........@.....H.
   34d34:	2.q.o.p.m...G...
   34d44:	........H.v.....
   34d54:	....t.z.....4...
   34d64:	....t...f...7(..
   34d74:	................
   34d84:	........*.......
   34d94:	........m...N.:.
   34da4:	................
   34db4:	....m...u...y...
   34dc4:	......U.........
   34dd4:	%.....5.h.d.....
   34de4:	..R...8.a.2.t...
   34df4:	..%.....I......(
   34e04:	/......*..-...o-
   34e14:	..D.............
   34e24:	..I...*..%..)...
   34e34:	............Z.;.
   34e44:	........:.'.....
   34e54:	f.....".....3...
   34e64:	f...o.......n.D.
   34e74:	N.E.....8.j.i...
   34e84:	....q.9...)...S.
   34e94:	................
   34ea4:	t.?.<...Y.\...~.
   34eb4:	................
   34ec4:	..............F.
   34ed4:	..i...u........(
   34ee4:	!.E+............
   34ef4:	....Q...O...t...
   34f04:	................
   34f14:	..z........"..J.
   34f24:	........S.......
   34f34:	....P.E.#.;...Q.
   34f44:	y...v.....v.^...
   34f54:	;.......R.H.g...
   34f64:	..3.T.].....&...
   34f74:	...#P.....)...y.
   34f84:	F...2.....#.....
   34f94:	..K.....t.d...u.
   34fa4:	................
   34fb4:	..&.....r.".V...
   34fc4:	....d.:.O.......
   34fd4:	..&.......0.;...
   34fe4:	........;...=...
   34ff4:	......5*v.1.%...
   35004:	/...........P.f.
   35014:	..........I.)...
   35024:	..............].
   35034:	..I...0.......#.
   35044:	..T..... ...0...
   35054:	.. .........`...
   35064:	......J...w.....
   35074:	l.....".........
   35084:	..........4.}...
   35094:	9...o...........
   350a4:	<.}.............
   350b4:	.2......^2-.....
   350c4:	....b.:...8...*.
   350d4:	!...........r.S.
   350e4:	......K.2.r.$...
   350f4:	....7.0...v...X.
   35104:	........H...<.h.
   35114:	?.`...Y.h.. t...
   35124:	*.....d&b.......
   35134:	..1._.4...}.K...
   35144:	..d.........n.z.
   35154:	..$."...1.\.....
   35164:	........P....!..
   35174:	..A.:..!....:...
   35184:	..^.A.....K.H.7.
   35194:	......=.w.7.K.N.
   351a4:	..'.;.......O.%.
   351b4:	/.....*.....O...
   351c4:	......q.6.{.O.).
   351d4:	..b.^...A.....t.
   351e4:	_.....`...8...{.
   351f4:	......{...E.@.R.
   35204:	..........O.q.+.
   35214:	............&...
   35224:	}.D...J.R.Q.t...
   35234:	........y.X.X...
   35244:	V.......I.....C.
   35254:	......m...2.N...
   35264:	........2.....S.
   35274:	o.D+..+...'...Z.
   35284:	..2.....}.......
   35294:	....,.l.t.|.l. .
   352a4:	............p.&.
   352b4:	..a.^...........
   352c4:	....r.&......$..
   352d4:	....P...%.v.....
   352e4:	,./.k.........~.
   352f4:	......a.@.{...~.
   35304:	5.C.>...6...t...
   35314:	..L...T.Z...M.l.
   35324:	R.+...L.9.......
   35334:	....C...b.<![.x.
   35344:	<...o.6...e.V.j.
   35354:	}.|._.....k.....
   35364:	................
   35374:	....&.S...v...T.
   35384:	.!..6...-...."..
   35394:	.*r.{...........
   353a4:	....f.%.....q.\.
   353b4:	...'....... ....
   353c4:	......t.........
   353d4:	..1...I...Y.t.!.
   353e4:	......#.......I%
   353f4:	z.).d.b...B.....
   35404:	.. .>.....^.....
   35414:	........U...@...
   35424:	............U...
   35434:	..G.....).......
   35444:	..O....5o...n.9.
   35454:	C.2.....`...&.E.
   35464:	.......... ...o.
   35474:	..7...Y...Y.t.V.
   35484:	E.y.....(...~...
   35494:	2.....".!...3...
   354a4:	....h.A.........
   354b4:	@.....g.........
   354c4:	..J...e.......=.
   354d4:	........_./...A.
   354e4:	..P.........(...
   354f4:	" B.I.$.K.......
   35504:	$.....z.......=.
   35514:	......0...A...O.
   35524:	............W...
   35534:	s.....>.`....#..
   35544:	..E.F ~.z...P...
   35554:	....K...L.......
   35564:	1...%.......n.N.
   35574:	..........E.'...
   35584:	8...8.].R.7.$.`.
   35594:	../.........1...
   355a4:	|...0.B...5.<...
   355b4:	..|.(...w"B.\...
   355c4:	t.......Y.......
   355d4:	........+  ...t.
   355e4:	............d.X.
   355f4:	..C.g.....4...?.
   35604:	-....1..Q.\;}...
   35614:	../...u.....]...
   35624:	................
   35634:	..........9.....
   35644:	j...%...K.....E.
   35654:	....R.b$....C.B.
   35664:	......5.....W...
   35674:	....f.:.......S.
   35684:	(...Y...........
   35694:	..X.....j.9.y.Y.
   356a4:	%.......L.'.A...
   356b4:	..Z.....D.......
   356c4:	........t.......
   356d4:	........a.......
   356e4:	........|.......
   356f4:	..w.......O...8.
   35704:	a...............
   35714:	..m...Z.....O...
   35724:	....}.8........&
   35734:	K. .N.u.a.Z.....
   35744:	..K...y..*..y...
   35754:	./..e.i.7.......
   35764:	W...'.%.......1.
   35774:	T....(..0.W.?...
   35784:	........9.......
   35794:	....C...+...P.$.
   357a4:	.!..i...&.).....
   357b4:	....C.K.........
   357c4:	....}...p)..U...
   357d4:	........!.n.n..7
   357e4:	..n.........a.^.
   357f4:	f.Q.>...2.......
   35804:	......9.....:.j.
   35814:	....d...~.......
   35824:	0.....6.j.....-.
   35834:	..i.......".,...
   35844:	..........<.{..*
   35854:	..K.......v...X.
   35864:	F...f...2.2.%...
   35874:	......}.+..&t...
   35884:	...$..}.......1.
   35894:	..B.......#.2...
   358a4:	..........#...z.
   358b4:	..Q.#.<...$.f...
   358c4:	m.....H.........
   358d4:	G.k.."....9.....
   358e4:	k...\%..H...U...
   358f4:	Z.w.............
   35904:	z.D.f.r.3.X....#
   35914:	....+.,...6.....
   35924:	..y.....Z...).4.
   35934:	....c...J.......
   35944:	..].v.X...9.^...
   35954:	,.......S.....;.
   35964:	..........Q.....
   35974:	F...W..-p....._.
   35984:	F.............n.
   35994:	.'....z.'...k...
   359a4:	......3.c...+...
   359b4:	..{.!.o...M.....
   359c4:	......}.....d..$
   359d4:	^.M.......e.R.."
   359e4:	v.....8...Z...I.
   359f4:	..........."....
   35a04:	......t.......P.
   35a14:	....y.........m.
   35a24:	..'.l.....[...&.
   35a34:	 .........u.L...
   35a44:	......?!..9.....
   35a54:	..@...3.........
   35a64:	............*.h.
   35a74:	%...i.....>.<.<.
   35a84:	....8...W...$...
   35a94:	....=...x.......
   35aa4:	X.:.7.M...m.....
   35ab4:	..|.<...8.......
   35ac4:	........R.....).
   35ad4:	...5..........-.
   35ae4:	......G...!.Z.'.
   35af4:	..........t.7.i.
   35b04:	=.....5.i...W...
   35b14:	?.T.u...t.:._*..
   35b24:	..+.)...p.f.....
   35b34:	...._.....I.|...
   35b44:	C.....%.t.. ...-
   35b54:	..>...].d.......
   35b64:	..J...+...U.....
   35b74:	W.......L.j...l)
   35b84:	7.......u.......
   35b94:	..j...t...U.....
   35ba4:	..o.Z.j.....f.d.
   35bb4:	....m.7.....5...
   35bc4:	N.....A...o...9.
   35bd4:	..j.l.....X.....
   35be4:	@...........>...
   35bf4:	n.f...l.........
   35c04:	......}.......b.
   35c14:	|.Q.....5.0.q...
   35c24:	..S.....7.2.'...
   35c34:	F.....k.........
   35c44:	8...-...V.......
   35c54:	....L...X.p.`...
   35c64:	....v.....V.H...
   35c74:	..........".&...
   35c84:	7...(.-.W.......
   35c94:	..s.{.)...b...!.
   35ca4:	....=.........b.
   35cb4:	............5...
   35cc4:	l.....^.$.......
   35cd4:	..V.c...#.o.....
   35ce4:	....V...........
   35cf4:	>.L.M..!....b...
   35d04:	..v.......p...r.
   35d14:	N...e...J&/.`...
   35d24:	A.8.i.c.........
   35d34:	w.g.........9.X.
   35d44:	;......'X.......
   35d54:	 .j.M.L.l...'...
   35d64:	e.r.a...%...~._.
   35d74:	..E.c...........
   35d84:	..>.O.M.x..."...
   35d94:	..~.c...r.[.....
   35da4:	....e.H.E.....?.
   35db4:	..y.@.K.........
   35dc4:	....E.G...k....$
   35dd4:	Z...H.........V.
   35de4:	7.......K...a.O.
   35df4:	f.........9.....
   35e04:	............S...
   35e14:	..e.U...@...,.{.
   35e24:	..&.\.. ....R...
   35e34:	....."....T..%$.
   35e44:	...'............
   35e54:	..u.............
	...

00035ea4 <sample_32_standard_DRUMS_sambawhistle>:
   35ea4:	........L:...7..
   35eb4:	..3......?>.3(4.
   35ec4:	..w....-~1....8.
   35ed4:	......5<..n...&.
   35ee4:	5....'A9........
   35ef4:	7....HN-C...s...
   35f04:	....2L.$c...s...
   35f14:	X.{+.:4.......O.
   35f24:	..gA.(....T.....
   35f34:	...=......F...%.
   35f44:	.:.)%...........
   35f54:	'D... r........*
   35f64:	.<..B...-...0..>
   35f74:	.'e!B..........@
   35f84:	..|#)...B.1.z0.6
   35f94:	............1Gm!
   35fa4:	N ...........JI.
   35fb4:	!$........{+VAu.
   35fc4:	."D.....|.$J/%..
   35fd4:	......w...{T..."
   35fe4:	?.F...f...aG..4.
   35ff4:	..A..._..+f*.../
   36004:	".....7.#E....0(
   36014:	1...C....M..{...
   36024:	`...;....P..."5.
   36034:	...(.....M.../..
   36044:	..32..m..?7..>..
   36054:	...<.....,..IH].
   36064:	...;..Q0h....S..
   36074:	..G:...6.....P..
   36084:	..F'%.:7.....H..
   36094:	B...K..7$....?..
   360a4:	V%.....9T....A..
   360b4:	.*..,.E;Z.v..A..
   360c4:	.(.... 5<..$.0..
   360d4:	.$^....5...6....
   360e4:	..T.N.7+...?..[.
   360f4:	..........\5....
   36104:	z....+..z.?.....
   36114:	%.!../....N.....
   36124:	..1..$.... .....
   36134:	...)..M...,.y...
   36144:	./....^.......k.
   36154:	Y?....b.?.4....-
   36164:	e-......(......K
   36174:	..z ..}.g...@/8F
   36184:	.............CX6
   36194:	m...x......+\?j+
   361a4:	........c..A./.(
   361b4:	=..........;G.n.
   361c4:	.........J.+..6.
   361d4:	h...q.8!.I. .#..
   361e4:	R.;...VC.;.!....
   361f4:	E......F..T.H...
   36204:	B.4..6-<....%.\.
   36214:	..s.;>f0.-......
   36224:	..LE.-.0.!V.....
   36234:	..3W.&.5..k.....
   36244:	..lO.$B5........
   36254:	.8HCg&.#......a.
   36264:	.K02.*..........
   36274:	BP.".1........z.
   36284:	.H..&-*.....[."4
   36294:	`42../......z..G
   362a4:	....p3.........M
   362b4:	.....7..../...6M
   362c4:	.....C..f.O...,?
   362d4:	`...?I3..._...v/
   362e4:	..5..[..f.64!...
   362f4:	..+.obA....J .w.
   36304:	.*...Y.....Jw...
   36314:	.)"..C.2..b1..T.
   36324:	.!.....D....d...
   36334:	.....!iW..#.....
   36344:	($Q...H^u.......
   36354:	s'...'.X..t...r.
   36364:	O0.../hJ....g...
   36374:	=3...C..........
   36384:	.<...Oo.D...y...
   36394:	.7,..XN.........
   363a4:	T1...SU.9......A
   363b4:	k#...?..%.....uR
   363c4:	......t...\....J
   363d4:	...!......^..-.2
   363e4:	....Y...y...k4..
   363f4:	.(......&.5<.''%
   36404:	T...}.{....FL..)
   36414:	..r...S...\1.$E.
   36424:	......V.vD.../..
   36434:	..C.B..!b8.!..6.
   36444:	......S9.$/-....
   36454:	L...m!.4...!..a.
   36464:	....>;.%.'f.....
   36474:	]....;....\.....
   36484:	v..:."_+..w.A.C.
   36494:	D%.9...4t.8.~...
   364a4:	.I.&N.Q...@.....
   364b4:	.L..`,(...t....%
   364c4:	4=T..$D.....X.Y?
   364d4:	@)W.J.....B....B
   364e4:	...$..-...I...i6
   364f4:	C.},d.[......7.#
   36504:	...'....Q....A..
   36514:	.............C..
   36524:	..'.........dE..
   36534:	B..!...)..T..D..
   36544:	b..5..\1.....A..
   36554:	...H<.w(A.H.O,..
   36564:	6..\M....!^.Y.A.
   36574:	..Oa..0.l...r...
   36584:	..9M.+o...4...8.
   36594:	...+.V../...{...
   365a4:	....rj..>.V...n.
   365b4:	.....vz.(.|.K.6.
   365c4:	..U..s=...]...@.
   365d4:	....?n..q.......
   365e4:	G"O..h.... .....
   365f4:	.$..._7.........
   36604:	.)J .O..e...4.E/
   36614:	..=/j70.(.b....A
   36624:	w..D....X...B.`8
   36634:	..1G..;.*....>k#
   36644:	..K'..=...n.LN..
   36654:	.'......`.6&.=..
   36664:	..2...r....D.%.-
   36674:	&...r...,/7;.!h!
   36684:	..q.....PK.%./..
   36694:	....m..-.?w ~,G.
   366a4:	.......Q.0.+....
   366b4:	t.@....M/'f.O...
   366c4:	K....G.4.<..2...
   366d4:	.....QQ%nEg.....
   366e4:	%.77.@.0.,......
   366f4:	L..P)+.<........
   36704:	...J_%.81.......
   36714:	`4,3j-.(....b...
   36724:	.J...:..........
   36734:	.J...<....%.....
   36744:	.7..@1....5...N9
   36754:	..C)K"..a......@
   36764:	...4...........7
   36774:	m..B......X.o.."
   36784:	*.$L......;..!..
   36794:	..OH.........&..
   367a4:	F..C..*.T...~'N.
   367b4:	...@........`)..
   367c4:	...?........>)..
   367d4:	.!.:..j$..3..(8.
   367e4:	:-X8...-....S"..
   367f4:	f4.<W..0H....(..
   36804:	%(.VQ.(*..t.!'+.
   36814:	<..i..b.}.L..#..
   36824:	.."l..>.7.z.. s.
   36834:	A.ah....H...7#S.
   36844:	..KZ..Y......'..
   36854:	N }I......K.j/..
   36864:	.(H+{.^......0s.
   36874:	.:..P.....+...R.
   36884:	.<r...0....,."..
   36894:	.*.. .V.+..;....
   368a4:	....Z......3..'.
   368b4:	x.[.6.+.&/s.%...
   368c4:	....z.?.w0M...B.
   368d4:	..T.X...........
   368e4:	....V..5..>.....
   368f4:	y.g..2.!....0...
   36904:	..d..9K.b.......
   36914:	...5.*..u.G.....
   36924:	...:............
   36934:	@/.2......'.....
   36944:	%*=3....r.#.=..2
   36954:	!.:7......O.o..2
   36964:	...8T.....t..).$
   36974:	...1b.....$..?..
   36984:	...,........WH..
   36994:	..z-P...}.V..J..
   369a4:	9..&0.W.....W:..
   369b4:	..."......M.^"j.
   369c4:	e.x.....b.....7.
   369d4:	..D.....(...4.E.
   369e4:	...../l.......N.
   369f4:	.....B0.........
   36a04:	M,...GO.7.'.w...
   36a14:	.2-..<....6.2.&.
   36a24:	.1[..3%"p.......
   36a34:	.4...3F.I.B.>...
   36a44:	.1.&.2C.I.K...4.
   36a54:	.4,-.)..|.7.....
   36a64:	.+`2....d.w....)
   36a74:	.!.6..W.T.F....)
   36a84:	7#..>.^.Y....0.#
   36a94:	w&....>.%....8."
   36aa4:	Q%.........*.0.!
   36ab4:	....{.n....<i&.$
   36ac4:	q.....]....3o$&.
   36ad4:	g.....R..C.$.(..
   36ae4:	..>.....=;. ....
   36af4:	.......G41.%..A.
   36b04:	d.... .E.)2!S...
   36b14:	....NBk4.5k...^.
   36b24:	.....I.(@8..R...
   36b34:	...6.=_/z ..7...
   36b44:	y.CL.+t6....D...
   36b54:	.."G%&@1..{.....
   36b64:	.4.2",.!i.....I.
   36b74:	.F%.O8....m.....
   36b84:	.E!.#;..........
   36b94:	S3.../,........9
   36ba4:	v..+. ......8.T@
   36bb4:	...6....(......6
   36bc4:	...C............
	...

00036ca4 <sample_45_standard_DRUMS_mbongotone>:
   36ca4:	....Z.Q.........
   36cb4:	..P...0.5.|...H.
   36cc4:	R.,...-........)
   36cd4:	..]..<I(.=.JB;.P
   36ce4:	"SbDcG#F.(C,..".
   36cf4:	......k.T.......
   36d04:	?...L.........F.
   36d14:	......T...;.....
   36d24:	...../.=.E!\2`.f
   36d34:	Ls$nVkLn.g.f.X.Q
   36d44:	.H.;g5-#n.I...Q.
   36d54:	..\.*...........
   36d64:	....X.*...V...b.
   36d74:	..g.v...=...c.x.
   36d84:	.... .....[...>.
   36d94:	L.(.2.0.g.1'./.6
   36da4:	.>+B.G.J.I.E%CW>
   36db4:	.?.;.3.,;(=.....
   36dc4:	..D...6.z...G...
   36dd4:	..(.....T.....A.
   36de4:	............e..$
   36df4:	Y5RAbJDW.^.a.h.g
   36e04:	.k.g.`'_"T.E8<~,
   36e14:	....*...H.....:.
   36e24:	................
   36e34:	..l.........{...
   36e44:	..............Q.
   36e54:	{.&.....f.?...t.
   36e64:	....A...<...^...
   36e74:	..'...........n.
   36e84:	......Q.....m...
   36e94:	...._.......G...
   36ea4:	l...~.....u.....
   36eb4:	)...............
   36ec4:	f...>...K&.$[$v%
   36ed4:	 ".!g...........
   36ee4:	........-.i...(.
   36ef4:	X.......E.b.....
   36f04:	g.......v...w.[.
   36f14:	....r.........i.
   36f24:	....V.....@...l.
   36f34:	)...Q.........E.
   36f44:	......T...a...B.
   36f54:	....-.U...x.k.#.
   36f64:	0...!.........Z.
   36f74:	..F...l.a.......
   36f84:	Q.c.....G.......
   36f94:	M.3.o.$.y...5.J.
   36fa4:	..I.....G.......
   36fb4:	f...G.......B.d.
   36fc4:	......I.........
   36fd4:	......).n.G...Y.
   36fe4:	................
   36ff4:	................
   37004:	..............Z.
   37014:	H.......o...K.^.
   37024:	........u. .z.R.
   37034:	..l.(.y...../...
   37044:	..l.v.Z.W.8.....
   37054:	#.4.............
   37064:	..o...).j.......
   37074:	'.x...R...).\.f.
   37084:	..j.R.......F.u.
   37094:	......h...x...).
   370a4:	....Z...........
   370b4:	..u...3.....q.3.
   370c4:	..Q.>...........
   370d4:	*.............A.
   370e4:	q.............|.
   370f4:	....E...Q.......
   37104:	........i...S...
   37114:	........t.......
   37124:	z...X...y.....c.
   37134:	v.......;.......
   37144:	..}.....s.L.....
   37154:	..~...1.........
   37164:	................
   37174:	T.^.]...3.......
   37184:	......~.....Q.3.
   37194:	..|.....-.!.....
   371a4:	M.t.../.J.h.....
   371b4:	P...4.......(...
   371c4:	s.e."...:... .K.
   371d4:	............@...
   371e4:	r.Q...........%.
   371f4:	-...3.........`.
   37204:	Q.......G.....=.
   37214:	%.....).....i.0.
   37224:	;.....V.....F...
   37234:	F.E.@...~./.:.r.
   37244:	..e.........>...
   37254:	v.............P.
   37264:	........W...\...
   37274:	........'.>...^.
   37284:	W...K.....0.....
   37294:	/.5.........$...
   372a4:	s.1.Z.p.i.......
   372b4:	r.........b.....
   372c4:	q.......#.......
   372d4:	'.....3.......B.
   372e4:	..m.@...h.....L.
   372f4:	..............E.
   37304:	..=.....K.r.:...
   37314:	....r...........
   37324:	.._...........^.
   37334:	G.Z.......?.D...
   37344:	..G...L._.......
   37354:	y.........1.&...
   37364:	w.$... .8.f...q.
   37374:	....a.i.....'...
   37384:	......s...j...f.
   37394:	}.........`.....
   373a4:	..........Q.....
   373b4:	......x. .'.-...
   373c4:	....g.d...Z.....
   373d4:	....m...V...e.).
   373e4:	7.z.............
   373f4:	H.....O...".....
   37404:	..N...Q...k.....
   37414:	7.M.).....H.....
   37424:	:...............
   37434:	T.(...x.6...E.].
   37444:	..l.u...........
   37454:	].....T.....b...
   37464:	2.....U.........
   37474:	B.7...........,.
   37484:	#.............;.
   37494:	4...j.......7...
   374a4:	......9.......U.
   374b4:	..O.1...5.......
   374c4:	....8.f.Y.......
   374d4:	..........@.b.F.
   374e4:	......#...[.>...
   374f4:	=...............
   37504:	s.....w.F.I...Y.
   37514:	..............".
   37524:	..1.....,.!.....
   37534:	%.W.....$.A.....
   37544:	 ...........M.q.
   37554:	I.....K.T.......
   37564:	E...X.....:. ...
   37574:	..m.i.B.....W...
   37584:	........3.......
   37594:	......7.........
   375a4:	....n.........h.
   375b4:	..;._...?.P...e.
   375c4:	w.......[.....U.
   375d4:	{.....c.......E.
   375e4:	......^.....V.1.
   375f4:	..........6.....
   37604:	&...............
   37614:	8.....&...6.;.1.
   37624:	................
   37634:	....Y.,.....w.N.
   37644:	l.....T.........
   37654:	q.y.........4...
   37664:	B...`.>.G.g.x.g.
   37674:	....T...f.....7.
   37684:	................
   37694:	0.Z.....H.....$.
   376a4:	..............A.
   376b4:	................
   376c4:	I...k.....L.H...
   376d4:	..K...j...%...$.
   376e4:	..=.....v.g...`.
   376f4:	................
   37704:	..E.....<.}...).
   37714:	..-.....&.J._...
   37724:	......v.K.......
   37734:	..........f...#.
   37744:	$._...A.......K.
   37754:	5./.%.....l. ...
   37764:	u.4.............
   37774:	i.s.p.j... .b...
   37784:	..n.....6.4.)...
   37794:	......[...X.....
   377a4:	[.X.....W.......
   377b4:	....z...........
   377c4:	................
   377d4:	..H.P.K.........
   377e4:	....q...........
   377f4:	..............9.
   37804:	#...j._.......L.
   37814:	>.....B.....[.`.
   37824:	........|.......
   37834:	............;.f.
   37844:	h.......8.F.^...
   37854:	........3.L.....
   37864:	....W.......2.[.
   37874:	4.K.....^.k...T.
   37884:	$.......u.......
   37894:	............[.Q.
   378a4:	w.........K.....
   378b4:	........`.s.W...
   378c4:	....D.......w.y.
   378d4:	0.....J._.<.....
   378e4:	9.....).....N...
   378f4:	................
   37904:	............i...
   37914:	......$.....>...
   37924:	..Q.t.R.u.j.....
   37934:	x.......q...4...
   37944:	..V. ...........
   37954:	................
   37964:	......8.[.k.....
   37974:	........a.....C.
   37984:	n...........\.8.
   37994:	!...r.w.F.=.....
   379a4:	............s.}.
   379b4:	....c...........
   379c4:	....~...........
   379d4:	..D.V.......}...
   379e4:	..F.{...........
   379f4:	........L.......
   37a04:	....E.c.........
   37a14:	..z.A.L.......).
   37a24:	&.....1...0.....
   37a34:	..'.2.......8.m.
   37a44:	................
   37a54:	................
   37a64:	................
   37a74:	a.u.n.D.J.......
   37a84:	;.8.............
   37a94:	........>.D.x...
   37aa4:	......L.h.f.....
   37ab4:	............O.+.
   37ac4:	V.x.7.H......._.
   37ad4:	........!.......
   37ae4:	Z._.).+.....t.].
   37af4:	..*.>.......x...
   37b04:	..=.L.:.....{...
   37b14:	Q.h.\...+.......
   37b24:	......../.-.....
   37b34:	..P.1...........
   37b44:	................
   37b54:	`.z.............
   37b64:	....2...K.L.c.s.
   37b74:	p...............
   37b84:	....!.).........
   37b94:	..Q.........q.Z.
   37ba4:	9.J.6...).....I.
   37bb4:	Z.s.............
   37bc4:	.......... .I.K.
   37bd4:	v...z.....|.....
   37be4:	h...B.;.Z.......
   37bf4:	....r.;...Q.6.<.
   37c04:	i...x...........
   37c14:	..=.[.l.......}.
   37c24:	g.>.$...........
   37c34:	................
   37c44:	................
   37c54:	................
   37c64:	 ...G.F.".c. ./.
   37c74:	3.......".6.....
   37c84:	................
   37c94:	..2...8._.J.s.V.
   37ca4:	L.}.B.=.D.#.....
   37cb4:	......h.q.I.`.`.
   37cc4:	X.............,.
   37cd4:	....$... .B...=.
   37ce4:	=...P.6.=.K.F.].
   37cf4:	F.S.c.q.u.m.g.[.
   37d04:	................
   37d14:	Q.k.h.(.|.g.E...
   37d24:	u.........N.N.|.
   37d34:	Z._.z.<.G.S...-.
   37d44:	6...).....=.....
   37d54:	P.8.G.g.Z._.d.2.
   37d64:	)...............
   37d74:	....}...}.......
   37d84:	............4.Q.
   37d94:	T...;.1.).=...$.
   37da4:	2...-.%.$.O.D.%.
   37db4:	P.Y.L.|.^.N.b.9.
   37dc4:	3.......n.^.P.4.
   37dd4:	9.*.4.^.s.......
   37de4:	........4.B._.d.
   37df4:	p...z._.m.U.].N.
   37e04:	<.Z.8.B.O.F.=.8.
   37e14:	1...'...........
   37e24:	..........i.T.x.
   37e34:	S.g...x.........
   37e44:	....$...J.L.P.L.
   37e54:	L.=.,.).........
   37e64:	......3...;.<.6.
   37e74:	I.3...%.........
   37e84:	............}...
   37e94:	h.}.............
   37ea4:	..........).4.K.
   37eb4:	[.<.d.L...G./...
   37ec4:	G...<.f./.i._.I.
   37ed4:	g.*.$.).........
   37ee4:	........k.s.`.S.
   37ef4:	................
   37f04:	....*.*...9.1.G.
   37f14:	K.,.G.B. .(.....
   37f24:	"...$.'...3.I...
   37f34:	@.8.../.........
   37f44:	................
   37f54:	................
   37f64:	................
   37f74:	................
   37f84:	........,.7.6.F.
   37f94:	@.;.4.7.6.......
   37fa4:	................
   37fb4:	................
   37fc4:	................
   37fd4:	........ .'...,.
   37fe4:	@.J.1.A.D.9.Q...
   37ff4:	..6.............
   38004:	................
   38014:	................
   38024:	........ .'.....
   38034:	................
   38044:	..........3.....
   38054:	................
   38064:	................
   38074:	............-...
   38084:	................
   38094:	................
   380a4:	................
   380b4:	................
   380c4:	................
   380d4:	..../.6...#.).'.
   380e4:	................
   380f4:	................
   38104:	................
   38114:	................
   38124:	..............1.
   38134:	..).=.).>.....".
   38144:	................
   38154:	................
   38164:	................
   38174:	................
   38184:	........*.6.b._.
   38194:	U.i.q.n.c.K.F.@.
   381a4:	6...............
   381b4:	................
   381c4:	................
   381d4:	................
   381e4:	................
	...

000382a4 <sample_47_standard_DRUMS_timpani>:
   382a4:	................
   382b4:	..O.......!..F.O
   382c4:	[b.Y9T"@.1......
   382d4:	8.......\.~.=.Q.
   382e4:	....m...(*.>.=XL
   382f4:	.I.WAD.q.q.#..0.
   38304:	..H.F.......i...
   38314:	..............T.
   38324:	..E..].q.q.q.q.q
   38334:	.q.q.q.q.e.ckC..
   38344:	Z.]...s...%.....
   38354:	................
   38364:	.........)5=.]uU
   38374:	.m.g.q.q.q~O....
   38384:	B$G...D.W.R.S.s.
   38394:	..........'.m({+
   383a4:	l$."..].j......8
   383b4:	ZN.S.T.?.%...&e.
   383c4:	..U.%...h.U.....
   383d4:	......[.........
   383e4:	E.Q..>.K.=[+C3.)
   383f4:	......'.........
   38404:	.._+....m.S.....
   38414:	..3...Y.Z.<..../
   38424:	.Q.Q.JFM.U.q.l4L
   38434:	\...k.G.....[...
   38444:	......Z.........
   38454:	>.....K.....5...
   38464:	.......(...<.1O+
   38474:	T...X.....f.....
   38484:	....?.....i..=.A
   38494:	.J.H':,]Mc.e.DvK
   384a4:	o@.X.d.J_ECCuB.,
   384b4:	....$...a.Q.3.@.
   384c4:	................
   384d4:	..x.s.....2.... 
   384e4:	^*.Jr],f.N.M.4};
   384f4:	.A.).5.B.K.I.b.Y
   38504:	 J.,o.#.[.....R.
   38514:	s.....(.O"."..b.
   38524:	_...............
   38534:	..........o._...
   38544:	{.../...........
   38554:	.........-y6.K.g
   38564:	.q.q.q.q.q.q.m.L
   38574:	[?.>..~...Z.p.F.
   38584:	......J.........
   38594:	L.}.............
   385a4:	6.L.v.p.....]...
   385b4:	[.... .1R(&6.4n:
   385c4:	.:.7.IKZjk.q.q.q
   385d4:	.q.q'm.k.Q'4.1.,
   385e4:	.#=.G.A.........
   385f4:	}.:.............
   38604:	..........F.F...
   38614:	..8...p........(
   38624:	4.....h.....a...
   38634:	$".;.e.e.b.[.Y.f
   38644:	.q.q.q_q.kXZ.7.(
   38654:	+.c...0.0.T.U...
   38664:	....7.=.........
   38674:	................
   38684:	...........0B6.<
   38694:	.A.M.T.X3Y.T%].j
   386a4:	.q.q.q.q.q.q.k.M
   386b4:	.%8'.1Q.....>...
   386c4:	....8.~.-.......
   386d4:	..}...=.........
   386e4:	'.....1.9....'##
   386f4:	^#V.....C.1...?.
   38704:	...#.&.."2.C.X>`
   38714:	5f@n;jRl.q.n.h<a
   38724:	.Q.D.)..J.....'.
   38734:	........R.n.....
   38744:	................
   38754:	......3.H.......
   38764:	L...W6.Z.a{b"O.J
   38774:	iN.q.q.q.q.q.q.q
   38784:	jd.KJ7`4........
   38794:	;.......I.Q.B...
   387a4:	Z.F.X.....}.....
   387b4:	..^...~...q."...
   387c4:	e...I...5.......
   387d4:	..q.....W.N.R".4
   387e4:	.L5SrM.Z.q.q.q.q
   387f4:	.q8o.X.9.0.)`...
   38804:	G.;.2...(.......
   38814:	..|.)...........
   38824:	................
   38834:	..........B.s...
   38844:	U.....u*.E.q.q.q
   38854:	.q.q.q.q.q.N">.(
   38864:	..4...(...0.....
   38874:	[.......L.3.O...
   38884:	z.....>.........
   38894:	..=.8.........Q.
   388a4:	....<.....u.u...
   388b4:	..:.w-.5H/.+I9.K
   388c4:	.Q.X.o.q.g.e/Z5B
   388d4:	{;D@.4.@6CV-.9.@
   388e4:	u8.-..A.........
   388f4:	................
   38904:	....t.......1...
   38914:	..s. .T....-.9(L
   38924:	9T.g8p.q.q.q.q.q
   38934:	.q.j.<C-......>.
   38944:	..].......;...?.
   38954:	..5.z.6.......Q.
   38964:	c...........|...
   38974:	l...u.....2.....
   38984:	G.....*...i.w..0
   38994:	.3q6.J.d.q.q.q.d
   389a4:	%KNA.4.5.4A7.<.D
   389b4:	iF.;)8P1.1....Z.
   389c4:	....u.0.........
   389d4:	......>.{...t.8.
   389e4:	..k.....D.......
   389f4:	...%c).F"W.JuR.q
   38a04:	.q.q.q.q.q.Sl9.5
   38a14:	.2.*.+..?...6.6.
   38a24:	................
   38a34:	Y.7.....`.....3.
   38a44:	......I...d...|.
   38a54:	....V.....3...i.
   38a64:	..@.....b..0.<.?
   38a74:	.Q.c.acTcJ:QR_.d
   38a84:	UR52]".". !..".+
   38a94:	.)K.............
   38aa4:	~...............
   38ab4:	....h...B.Z.b.E.
   38ac4:	......t....../YA
   38ad4:	.C%J.T)_#h&a.^{_
   38ae4:	.g.qto/Y.B.%A.v.
   38af4:	E...W.... ......
   38b04:	......i.........
   38b14:	......)...u.?...
   38b24:	....f.5.....=...
   38b34:	'.......x.W.V#!.
   38b44:	X.G.8%.&.)o-"1_B
   38b54:	.L\R.^.`.Y.@.,y4
   38b64:	=E.F.8..........
   38b74:	....r...........
   38b84:	......A.....z.g.
   38b94:	..........0.....
   38ba4:	...*F2&+9/'?.=7H
   38bb4:	.R.X.[.c.o.j*U.:
   38bc4:	L&.....$. ......
   38bd4:	h.}.c...........
   38be4:	..u.....v.o.r...
   38bf4:	..D.J.~...r.....
   38c04:	......P.$...$.K.
   38c14:	..g..'a-.0[+w&.$
   38c24:	. .....$.<eO.K.A
   38c34:	mLJ].a.Pw=T7.*..
   38c44:	|.-..'. ^.......
   38c54:	..........X...0.
   38c64:	5...'...........
   38c74:	..w.....V...2.M,
   38c84:	.=CF.F.S.VKLu<.=
   38c94:	HE.K.V.T.F.>.3.(
   38ca4:	.$E#..7.....e...
   38cb4:	..Q.p.|...F...T.
   38cc4:	"...C.e.........
   38cd4:	..............(.
   38ce4:	...... ...l.....
   38cf4:	. (....$..;6.,_'
   38d04:	.+54.; A=F+D.I.N
   38d14:	wIt=.5.:.2J.....
   38d24:	Z.....[.........
   38d34:	9...........6.@.
   38d44:	......1.....#...
   38d54:	D.......m2.LgN8E
   38d64:	IK.T.O1GvA.@.D.@
   38d74:	.0.'.*88.B4?m5.(
   38d84:	..".`.).T.......
   38d94:	......d.(...r.N.
   38da4:	m.q...M.+.l.....
   38db4:	........i...c.}.
   38dc4:	............+...
   38dd4:	...#.3.7"3.1.<.J
   38de4:	.J.=.;.G.KuG.B.0
   38df4:	......Y.w.p.....
   38e04:	..........A.....
   38e14:	F...:...........
   38e24:	..@.......k.....
   38e34:	h...s).<nE.J.W.b
   38e44:	.\7O<E.<"7.?.?.2
   38e54:	.%....3...B...u.
   38e64:	t.....y...l.2.B.
   38e74:	~...............
   38e84:	..N.y...=.....4.
   38e94:	....3.'.....0...
   38ea4:	.......).1S6.9D9
   38eb4:	J1/&..d..".3.HqT
   38ec4:	3T.Q.Jr4A.......
   38ed4:	`...{.h.2.n.(...
   38ee4:	d.....O.].V.....
   38ef4:	a...........C...
   38f04:	F.q.........v.B(
   38f14:	.4L9.2m2.;.C.F.H
   38f24:	*P4RzD.1:$......
   38f34:	..N.....z.p.....
   38f44:	..].............
   38f54:	..0.....9.......
   38f64:	5.].....m.....@.
   38f74:	..g.....x...!.I 
   38f84:	N.....F..'.%.%.+
   38f94:	./.4.4.3J8.;.9.<
   38fa4:	e=19K4.)..R.....
   38fb4:	......7...!.v...
   38fc4:	..T.".......<...
   38fd4:	....$...h...l...
   38fe4:	r...f.......,#A#
   38ff4:	.&.4.AQI.I+C.:?.
   39004:	.).0.4+..$. k...
   39014:	..........x.....
   39024:	..`.[...........
   39034:	..K.I...1.....:.
   39044:	..J.............
   39054:	......'.J.Q...a.
   39064:	.%.*.+.&[& -.4,<
   39074:	.F.P.PZBK...V...
   39084:	......l...&.n.t.
   39094:	......_....."...
   390a4:	..u.K.).....^.*.
   390b4:	F.....G.Q.......
   390c4:	...#.).++.N6N:.<
   390d4:	(DtG.C$8.+.%."..
   390e4:	."-(4$..%.!.....
   390f4:	r...^...........
   39104:	....+.^....._.p.
   39114:	....M.G...6...Q.
   39124:	..........3.....
   39134:	....w.).}.(.-.4.
   39144:	@$.3.C.D.3.#l .#
   39154:	.(./.0..[,h$6.V.
   39164:	f.w...\.........
   39174:	....].-.~.......
   39184:	....A.e.|.n.....
   39194:	........V#.).).&
   391a4:	.&.+'4~6W;.ArA.=
   391b4:	45 '..].........
   391c4:	........M.......
   391d4:	..........<.1...
   391e4:	..<.%...c./.k...
   391f4:	..}._.......Z.6.
   39204:	..p.......I...k.
   39214:	....D...4.......
   39224:	2!.'.,.4 A.G.>E/
   39234:	.#..V.*.......;.
   39244:	........h...8...
   39254:	..-.............
   39264:	a.a...e..._.....
   39274:	...(.%..[...H..'
   39284:	.2.6"5.0./.1.3i4
   39294:	./g'h#..........
   392a4:	................
   392b4:	....8.@...P.).C.
   392c4:	..o.?.....<.....
   392d4:	..........6.>.(.
   392e4:	....[.-.Z.... .$
   392f4:	.!G.j.....b*Q4.6
   39304:	.0J*.)=+.'.!....
   39314:	..0.N...........
   39324:	o.t.....*.......
   39334:	o.....j...,.....
   39344:	........m...a...
   39354:	y.\....*c1.6p:.:
   39364:	.9.8.7.5726..). 
   39374:	....S.....&.....
   39384:	......L.).......
   39394:	..w... .q.......
   393a4:	........6.:...i.
   393b4:	....2.....]...S.
   393c4:	....%.......}.= 
   393d4:	i).3X7.0.*0)1*.!
   393e4:	............r...
   393f4:	.......... ...q.
   39404:	~...?.........}.
   39414:	$...........-._.
   39424:	l.b.....}....,.5
   39434:	.8.8.8^6.2...).$
   39444:	.".!= ~./...%.v.
   39454:	..j.[...m...:...
   39464:	Q.n...`.........
   39474:	E.......b..._...
   39484:	).....t.S.......
   39494:	_.....W.'...r...
   394a4:	....r.....:....!
   394b4:	.-.9;D.B.4."G.^.
   394c4:	&.-.$...........
   394d4:	..Q...~.......`.
   394e4:	0.\.........7...
   394f4:	............|...
   39504:	..M.....l......(
   39514:	z0.2.2}4t7.6.0E(
   39524:	.!....\...'.....
   39534:	|.k...%.J.Q.z.Z.
   39544:	..;.....A.F.3.q.
   39554:	N...;.....]...L.
   39564:	P.....q...S...C.
   39574:	1.....@.t.....?.
   39584:	B.......O).3[8.5
   39594:	01./f+.%X"..U...
   395a4:	g.G.q...F...Z...
   395b4:	......9.......O.
   395c4:	h.<.T._.....W.[.
   395d4:	..X.B...u.......
   395e4:	Q...*".,{3.2J..-
   395f4:	./.3.4.0.(."L...
   39604:	........Q.P.....
   39614:	........[.&./...
   39624:	........".N...Z.
   39634:	..S.............
   39644:	8...........O.(.
   39654:	........e...G._.
   39664:	}.^.*..!.'])9)3&
   39674:	7 ..T.......o...
   39684:	..;.../...B.)...
   39694:	+.....l.....>.h.
   396a4:	`.......0...+...
   396b4:	Z.......t......#
   396c4:	.((-...-<..0j0.(
   396d4:	..............g.
   396e4:	....R.....".#...
   396f4:	................
   39704:	..=.....%.g.....
   39714:	G...........$...
   39724:	..#.............
   39734:	......1...l...A%
   39744:	.).(d'.%3!....G.
   39754:	5.........T.h...
   39764:	..........p.....
   39774:	L.......k.`._.$.
   39784:	..d.S.....L.=.I.
   39794:	....l....&.-.4.7
   397a4:	F8.4.-2%"...$...
   397b4:	.. .\.H.....U...
   397c4:	W.....2.b.....V.
   397d4:	........6.....I.
   397e4:	v.....R...f.....
   397f4:	......1.....)...
   39804:	....D...9...N.'.
   39814:	........~.~&...0
   39824:	.+*#..y.........
   39834:	..........'.....
   39844:	....>.^.........
   39854:	=.r.s.....<...B.
   39864:	_.........v.....
   39874:	].!!\,.5.:.;.:.8
   39884:	.5.0y+.#......Z.
   39894:	..4.............
   398a4:	F.....?.B.c.....
   398b4:	..t.....w.M.....
   398c4:	......V.@.....b.
   398d4:	..k.............
   398e4:	..{.........x...
   398f4:	.....%l&.!..}...
   39904:	....(...[.(...s.
   39914:	'.#.......a...9.
   39924:	..k.*.W.0.....-.
   39934:	....h.H.|.5._...
   39944:	..s.U......!/&.*
   39954:	.-@,.).).+.,.-1,
   39964:	.&p.............
   39974:	..h.....0.....z.
   39984:	....s.....F.....
   39994:	..k.y...|...I.l.
   399a4:	:.....X.....i.<.
   399b4:	)...0.........Q.
   399c4:	..........i...D.
   399d4:	....\ f".$.'.%p.
   399e4:	....}...........
   399f4:	..........n... .
   39a04:	......I.?... ...
   39a14:	`.....!.|...u.:.
   39a24:	S.P.G..%])1+@+.(
   39a34:	.$.%Y(.)v&......
   39a44:	............C...
   39a54:	..@...F...N.c.:.
   39a64:	..`.......a.X...
   39a74:	/...........x...
   39a84:	M.y...].....m...
   39a94:	#.7.d.....#.M...
   39aa4:	r...;..#e).).&c#
   39ab4:	. ..l...\.......
   39ac4:	..........).....
   39ad4:	..j.4...(.N.....
   39ae4:	T.t...........Y.
   39af4:	....e.....g.....
   39b04:	...!.$.*D2x7.7d1
   39b14:	.&..........5...
   39b24:	0.....F.....U.[.
   39b34:	....U.....a...t.
   39b44:	....T...........
   39b54:	Q.......K...(...
   39b64:	....V.A.........
   39b74:	....\.../.....m.
   39b84:	d...@...2!&$.%+%
   39b94:	.#/!%.........-.
   39ba4:	..f.,...........
   39bb4:	..B.......N...|.
   39bc4:	x.....S.........
   39bd4:	....>.i.N.. .%M*
   39be4:	.-...,.'."c...N.
   39bf4:	..0...~.......T.
   39c04:	L...............
   39c14:	..A.T...^...w...
   39c24:	..........$...S.
   39c34:	....9.".d...a...
   39c44:	=.^...S...".v...
   39c54:	..........D.O.?.
   39c64:	..|..#.)n,.+1'."
   39c74:	. ..B...8.......
   39c84:	..I.........9...
   39c94:	........P.H.....
   39ca4:	w...D.U...?...D 
   39cb4:	..L.@...!".'.'J%
   39cc4:	.#."....P.0...m.
   39cd4:	v.........D.....
   39ce4:	v.......&.....6.
   39cf4:	..........U...4.
   39d04:	5...,.......L...
   39d14:	..........P.....
   39d24:	p./...t.........
   39d34:	0.....w...J.....
   39d44:	..... d".". )...
   39d54:	..}.\.0.7.......
   39d64:	p.I.....t.......
   39d74:	..........2.....
   39d84:	..?.......E.=#j(
   39d94:	.,.-/+.&.!..s.!.
   39da4:	............{...
   39db4:	Z.:.1.Z...{.....
   39dc4:	....}.C...,.....
   39dd4:	4.........Z.7...
   39de4:	P.(.......<.....
   39df4:	..7...o.....Q.`.
   39e04:	g.t.!...?.X..._.
   39e14:	....2.!...{$[&."
   39e24:	........v...=...
   39e34:	........X.w...4.
   39e44:	.._...A...#.....
   39e54:	a.......r.......
   39e64:	..]...h#Z$.#."."
   39e74:	."."."."G!j.....
   39e84:	......h...:.X...
   39e94:	n.....A.......}.
   39ea4:	......m.....M...
   39eb4:	..w.z...6.......
   39ec4:	l.z...k...[.J...
   39ed4:	......N.......m.
   39ee4:	{.........U.*".%
   39ef4:	O&.$.".!r..... .
   39f04:	......R.........
   39f14:	................
   39f24:	....[...A.h... .
   39f34:	K.v.......3.....
   39f44:	....<...w.....$ 
   39f54:	) 2...........;.
   39f64:	......i.+.......
   39f74:	6...!...........
   39f84:	......U.t.......
   39f94:	....:.O.K.......
   39fa4:	..m.............
   39fb4:	....q.N.....N...
   39fc4:	4.............+%
   39fd4:	.,i..(6.V.9.U.~.
   39fe4:	..4.....m.\.....
   39ff4:	....g...v...:...
   3a004:	!.o...../.......
   3a014:	?.U...U..%.,.-.&
   3a024:	........D.A.&...
   3a034:	..^...<.......d.
   3a044:	c.&...H.......;.
   3a054:	......l.X.e.....
   3a064:	J...............
   3a074:	D...}.;.........
   3a084:	..0.........F...
   3a094:	..c...6...'.r...
   3a0a4:	0.9#.'.'o%.... .
   3a0b4:	................
   3a0c4:	f...c.....!.&...
   3a0d4:	X.Z...\.:...l.C.
   3a0e4:	..!./.f.....2...
   3a0f4:	..k.C...y.y.J..!
   3a104:	?#.#......0.+...
   3a114:	1.t.8.......#...
   3a124:	..j.....D.......
   3a134:	......=.b.v.?.b.
   3a144:	........L.....I.
   3a154:	z.C.7...........
   3a164:	^...g.,.........
   3a174:	......d...9..#.)
   3a184:	g*.'h$."..;.....
   3a194:	r.....#...(.c...
   3a1a4:	4.F.P.`.........
   3a1b4:	..-.f.....<...&.
   3a1c4:	X.l.......C.....
   3a1d4:	....)...x.M.....
   3a1e4:	..6.v.p.........
   3a1f4:	......P...3.....
   3a204:	V.......u..._.c.
   3a214:	`...k...}...m.U.
   3a224:	................
   3a234:	........c...@...
   3a244:	....Q.i.$.s...T.
   3a254:	j...3.I $"m#.$.%
   3a264:	.$.#. 5...`.....
   3a274:	..I.......N.q...
   3a284:	x.4.........`...
   3a294:	!.^.....l...#.`.
   3a2a4:	\.....W.0.i.#.j.
   3a2b4:	...!............
   3a2c4:	....7...........
   3a2d4:	..E.....X.B.....
   3a2e4:	..........\.s.!.
   3a2f4:	..p.@...1...[...
   3a304:	........V.|...".
   3a314:	}...............
   3a324:	Z...g.b.'.......
   3a334:	..}.h.e$*(.'n$..
   3a344:	..d...Z.........
   3a354:	......).).#.....
   3a364:	................
   3a374:	..8.......3.....
   3a384:	................
   3a394:	..(.......C.x./.
   3a3a4:	 .n...v...|...J.
   3a3b4:	......S.....B...
   3a3c4:	..........J.....
   3a3d4:	I.7.....L.#.....
   3a3e4:	+...H.......%...
   3a3f4:	......i.Z.....".
   3a404:	..i...........,.
   3a414:	. y!....U.H...!.
   3a424:	....v...........
   3a434:	................
   3a444:	..*.....F.......
   3a454:	....,.o...b.....
   3a464:	............w...
   3a474:	D...J.....B.....
   3a484:	z.....i.q...../.
   3a494:	....D.....5.....
   3a4a4:	:.I.X.....V.P.^.
   3a4b4:	..I.:...........
   3a4c4:	..2.Q.$.7.t.O...
   3a4d4:	..g.....8...'.Q.
   3a4e4:	X......#F*$,.(.!
   3a4f4:	....+.........G.
   3a504:	y.&.:...N...-...
   3a514:	..^.......Z.6.J.
   3a524:	n.............%.
   3a534:	............*.*.
   3a544:	....:...e.....J.
   3a554:	J.j.......g...z.
   3a564:	z.-.9...P.......
   3a574:	M.x... .........
   3a584:	......5.....Q...
   3a594:	..|.d...8.......
   3a5a4:	..L.4...Z.......
   3a5b4:	..o.............
   3a5c4:	..$ . ..r.....f.
   3a5d4:	[.|.;.f.n.....X.
   3a5e4:	......t.2...l.2.
   3a5f4:	....m.........c.
   3a604:	..Y.\.S.S.T...>.
   3a614:	..........!.m...
   3a624:	0.....C.g...5.8.
   3a634:	....d.5.r...g...
   3a644:	....'.....l.l...
   3a654:	....../...U.....
   3a664:	..2.T.w.`.......
   3a674:	....w.......i.4.
   3a684:	....9...~...,...
   3a694:	I.S.......L.s.2.
   3a6a4:	........1.H.f.{.
   3a6b4:	)...r.].........
   3a6c4:	A...............
   3a6d4:	......r.@...e.N.
   3a6e4:	....H.o.0...p.{.
   3a6f4:	..$.[...M.......
   3a704:	....7...z.......
   3a714:	......w.........
   3a724:	......H.......e.
   3a734:	......!.1./.....
   3a744:	..............3.
   3a754:	..T.X.O...q...y.
   3a764:	....8.M.5.......
   3a774:	V...p...........
   3a784:	....$.....K.....
   3a794:	%... ...V...Z...
   3a7a4:	b...[.....K.....
   3a7b4:	........?.......
   3a7c4:	....B...2.2...n.
   3a7d4:	l.......Q...3...
   3a7e4:	...._.d.^.k.w.Y.
   3a7f4:	).....N...7...8.
   3a804:	................
   3a814:	......O...'.c...
   3a824:	......J.........
   3a834:	}..........."...
   3a844:	........0. .....
   3a854:	..9...4.f.......
   3a864:	..G.>.,./.....y.
   3a874:	R.......4.[.4...
   3a884:	..K...Y.}.&...c.
   3a894:	....U.t.........
   3a8a4:	A...(...^.......
   3a8b4:	.. .1.L.......,.
   3a8c4:	..$.$.......B...
   3a8d4:	`.....|...*.....
   3a8e4:	'...)...........
   3a8f4:	/.;.].].e.O.w...
   3a904:	....s.........Z.
   3a914:	x...M...2...0.5.
   3a924:	..)...p.........
   3a934:	t.\.............
   3a944:	..x.O...%...}...
   3a954:	..N.............
   3a964:	............L...
   3a974:	....%...%.......
   3a984:	G.L.............
   3a994:	........y...w.P.
   3a9a4:	..X.....B.x.v...
   3a9b4:	....-...R.......
   3a9c4:	~.......5.......
   3a9d4:	7...j.z.........
   3a9e4:	M...(.....`.....
   3a9f4:	....S.,.........
   3aa04:	u.\...T.;.......
   3aa14:	R...r.v.n.4.S./.
   3aa24:	j.....1...Z...,.
   3aa34:	..Y.k.D.m.G.....
   3aa44:	v.S.............
   3aa54:	..N........._...
   3aa64:	............T...
   3aa74:	..9...9.G.......
   3aa84:	!...p...........
   3aa94:	..L.......:.M...
   3aaa4:	....R...........
   3aab4:	......5...y.....
   3aac4:	V.K...,.........
   3aad4:	o.......=.|.... 
   3aae4:	a.4...w./... ...
   3aaf4:	....&...8.S.x.f.
   3ab04:	*...<.......n...
   3ab14:	..2.....'.....p.
   3ab24:	....".I.A.....F.
   3ab34:	..?...r...^.....
   3ab44:	Q.;...........P.
   3ab54:	................
   3ab64:	i.L...e.......9.
   3ab74:	..y.........;...
   3ab84:	........X...J...
   3ab94:	`.........1...0.
   3aba4:	..........!.p...
   3abb4:	........{.......
   3abc4:	......L.....Y...
   3abd4:	h...8.......K...
   3abe4:	....n./.7.~.....
   3abf4:	6...%.Y...G.....
   3ac04:	1.......v.U.;...
   3ac14:	....O...p.).0...
   3ac24:	..H.....:.K.....
   3ac34:	......0.~...u.1.
   3ac44:	....+.0.......X.
   3ac54:	......b.......-.
   3ac64:	+. .\.W.v.O.&...
   3ac74:	 .......W.=...@.
   3ac84:	..:...X.0.......
   3ac94:	........0.....b.
   3aca4:	..........R.....
   3acb4:	O.........T...>.
   3acc4:	....>.[.V...U.+.
   3acd4:	".+...n.....\.r.
   3ace4:	..<.....)...(...
   3acf4:	..T.&.].......(.
   3ad04:	}...............
   3ad14:	X.H...%...n.P...
   3ad24:	......$...I.X.2.
   3ad34:	..$..._.........
   3ad44:	................
   3ad54:	................
   3ad64:	..o.......E.Y.m.
   3ad74:	....`.Y.x..... .
   3ad84:	$..._...........
   3ad94:	..X.F.........y.
   3ada4:	2.p.....T.q.....
   3adb4:	..B.V...q.8...o.
   3adc4:	M.v.............
   3add4:	..;.......@.....
   3ade4:	................
   3adf4:	......3.0.....6.
   3ae04:	..8.'.....l...-.
   3ae14:	..d.......V...e.
   3ae24:	|...b...g.......
   3ae34:	S.s.u...N.C.]...
   3ae44:	"...z.....|...q.
   3ae54:	....M.......[.t.
   3ae64:	....U.....i...#.
   3ae74:	..R.............
   3ae84:	........'.......
   3ae94:	..........I.....
   3aea4:	..............).
   3aeb4:	..,.U.....-.....
   3aec4:	..`.....).4...=.
   3aed4:	..,.s.S.M.V.q...
   3aee4:	........L.....N.
   3aef4:	....E.5.Z.M.....
   3af04:	......J.........
   3af14:	~.6.7.^.K.....<.
   3af24:	................
   3af34:	V.p.............
   3af44:	....m._...T.;...
   3af54:	....X.r.....]...
   3af64:	..N.....9.e.....
   3af74:	....../.......P.
   3af84:	H.........9.....
   3af94:	..G.....P.......
   3afa4:	*.............3.
   3afb4:	..)...g.....x.l.
   3afc4:	T.+.......5...[.
   3afd4:	..o.|...(.....;.
   3afe4:	......Z.....|.X.
   3aff4:	....p.........:.
   3b004:	....L.....>...6.
   3b014:	............q...
   3b024:	.... .........:.
   3b034:	................
   3b044:	....+...T._.....
   3b054:	....&.z.......a.
   3b064:	r.>.z.........(.
   3b074:	..x.(...{...K...
   3b084:	....G.9.....8...
   3b094:	..X.....g.....=.
   3b0a4:	G.j...\...Q.m.^.
   3b0b4:	....8.........o.
   3b0c4:	V...........D...
   3b0d4:	....d...........
   3b0e4:	@.....8.........
   3b0f4:	...... .....:...
   3b104:	r.....O.j...|...
   3b114:	y...o.5.&.W...!.
   3b124:	......i...K.....
   3b134:	..............n.
   3b144:	$.........`...".
   3b154:	....g.x.........
   3b164:	....3.|...6...%.
   3b174:	1.a...U...N.^.$.
   3b184:	......Y...\.....
   3b194:	K.......F.=.....
   3b1a4:	z...........-...
   3b1b4:	......>.\...p...
   3b1c4:	..2...+.v.....j.
   3b1d4:	......M.........
   3b1e4:	Z...........`...
   3b1f4:	..@.....3.w.I.1.
   3b204:	D.....3...5.8...
   3b214:	......P...}.....
   3b224:	....S.4."...g...
   3b234:	u._...........H.
   3b244:	..8._.^.G...R...
   3b254:	....E...'.......
   3b264:	..>...P.....V...
   3b274:	....r...H.....r.
   3b284:	....1.........T.
   3b294:	....".s...7.....
   3b2a4:	U...........)...
   3b2b4:	x.9.n...:.0.%...
   3b2c4:	H...}.......4...
   3b2d4:	........W.8.4...
   3b2e4:	..#._...b...L...
   3b2f4:	......1.X.......
   3b304:	,.....`.}...K.d.
   3b314:	....U.D.(.......
   3b324:	}.............A.
   3b334:	}.....2.&.......
   3b344:	w.J.......+.Z.p.
   3b354:	..I...d.#...f...
   3b364:	......i.........
   3b374:	8.......{.......
   3b384:	..".;.'.{.....B.
   3b394:	................
   3b3a4:	..u.../.....D.j.
   3b3b4:	/.............5.
   3b3c4:	....;.U...g.L...
   3b3d4:	..5.l...N.3.....
   3b3e4:	E...h...g.......
   3b3f4:	................
   3b404:	3.j.}.....p.....
   3b414:	b.........A...h.
   3b424:	E.K...l.>...J...
   3b434:	....r...........
   3b444:	../.....p.......
   3b454:	?.-.A.g.N._...b.
   3b464:	#...k.......u.%.
   3b474:	c.%...S.....q.M.
   3b484:	......A.N...t...
   3b494:	=.t.e.....d.....
   3b4a4:	,.....J.....P.}.
   3b4b4:	5.c.'.......D...
   3b4c4:	(...B.........(.
   3b4d4:	......_.6.U.....
   3b4e4:	..'.F.......8...
   3b4f4:	..S.~.........l.
   3b504:	..\.............
   3b514:	....T......... .
   3b524:	X.....X.?.9.....
   3b534:	_...s.....L.....
   3b544:	....=.w...e.....
   3b554:	].....s...2.....
   3b564:	'...0...........
   3b574:	......].....I...
   3b584:	......D...g.o...
   3b594:	O.X...=...X.\...
   3b5a4:	W...#.N.z.......
   3b5b4:	..............C.
   3b5c4:	..Q.....:...F...
   3b5d4:	..C.p.h.>.......
   3b5e4:	H.i.....Y.d.....
   3b5f4:	..A.&.g.X.....V.
   3b604:	b...^._......._.
   3b614:	......P.#.......
   3b624:	........X.......
   3b634:	....=.......g.a.
   3b644:	U.S.g.F......./.
   3b654:	..&...........A.
   3b664:	..............3.
   3b674:	v.n.M...........
   3b684:	i...E.....c.A...
   3b694:	................
   3b6a4:	..h...G... .....
   3b6b4:	_.....c...].]...
   3b6c4:	/...P.......o...
   3b6d4:	........U.....x.
   3b6e4:	....b...+.>.`...
   3b6f4:	..........c...|.
   3b704:	\.N.....{.......
   3b714:	..L.e...h.......
   3b724:	~.#...=.w..."...
   3b734:	....[...G.}.....
   3b744:	..x...7.|.......
   3b754:	h...............
   3b764:	............v...
   3b774:	i.............1.
   3b784:	............^...
   3b794:	....F.......V.x.
   3b7a4:	........C.D.....
   3b7b4:	....3.X.........
   3b7c4:	`.........0.K...
   3b7d4:	..........f.....
   3b7e4:	k...........`.l.
   3b7f4:	....b.......B.j.
   3b804:	c.~.............
   3b814:	........^...1...
   3b824:	....I...........
   3b834:	Z.0.,...J.Y.!.N.
   3b844:	..n.Q.v.........
   3b854:	......5.....l...
   3b864:	E...@...S.&...m.
   3b874:	#.....~...j.....
   3b884:	..........p.-...
   3b894:	......S.A.......
   3b8a4:	,.....\.L.7.....
   3b8b4:	........p.#...Z.
   3b8c4:	..w....._.....(.
   3b8d4:	....&...q.....).
   3b8e4:	..........:.z...
   3b8f4:	e...5....... ...
   3b904:	..&...}...(.....
   3b914:	..".....5.8.C._.
   3b924:	..x...|.~.Z.....
   3b934:	(...............
   3b944:	....E.......*...
   3b954:	}.I.M.7.........
   3b964:	..5...F.....f...
   3b974:	2...............
   3b984:	{...........G...
   3b994:	....".....L.+.<.
   3b9a4:	7.=.Z...e.o.....
   3b9b4:	............g...
   3b9c4:	......G.....X...
   3b9d4:	%.............?.
   3b9e4:	{.r.......`.)...
   3b9f4:	..1.......i.6.n.
   3ba04:	)...}.....3.C...
   3ba14:	@.].........s...
   3ba24:	..W.......S...s.
   3ba34:	......P.m...^.`.
   3ba44:	..N.A.x...e.....
   3ba54:	).....T.e.....d.
   3ba64:	..x.............
   3ba74:	......Y...W.....
   3ba84:	..g.b.S.........
   3ba94:	..i.p.......:.\.
   3baa4:	....N...........
   3bab4:	..F.....h...s.u.
   3bac4:	9...?...........
   3bad4:	^.........L...b.
   3bae4:	....y.G...Z.....
   3baf4:	1.O.s.......z.h.
   3bb04:	x.....h.........
   3bb14:	)...Z.6.1.......
   3bb24:	......P.g.M...#.
   3bb34:	E.......t...V...
   3bb44:	....X.L.j.......
   3bb54:	o.r.............
   3bb64:	$.X.A...f.u.A...
   3bb74:	4.....F.../...Y.
   3bb84:	................
   3bb94:	v.$.<...?.......
   3bba4:	........_.,...G.
   3bbb4:	......#.........
   3bbc4:	..../.C.......9.
   3bbd4:	......*...I...t.
   3bbe4:	................
   3bbf4:	..............a.
   3bc04:	......q...J.t...
   3bc14:	..d...u.d.....Q.
   3bc24:	..x.........X...
   3bc34:	t.......e.7.!...
   3bc44:	N.V.k...).......
   3bc54:	a.........Q.\...
   3bc64:	........,...y...
   3bc74:	..........u...-.
   3bc84:	L.........'.....
   3bc94:	......u.1.....#.
   3bca4:	9.....q.s.'...C.
   3bcb4:	5...%.....}...3.
   3bcc4:	..t.....K.......
   3bcd4:	h.....E.c.....y.
   3bce4:	..........A.%...
   3bcf4:	r...8.s.X.......
   3bd04:	<.r...\.4.\.-.f.
   3bd14:	..........Y...T.
   3bd24:	..[.]...t.......
   3bd34:	......6.....S.N.
   3bd44:	........G.....m.
   3bd54:	....3...........
   3bd64:	....l.....q.>.Z.
   3bd74:	*...^.......u...
   3bd84:	Q...7.....n.....
   3bd94:	....T.........I.
   3bda4:	C.X...G.....i...
   3bdb4:	d...^...~...`...
   3bdc4:	S.........o...g.
   3bdd4:	v...+...........
   3bde4:	........*.9.X...
   3bdf4:	............#...
   3be04:	..&.......-.!.'.
   3be14:	....@.....m.....
   3be24:	a./.6.!.........
   3be34:	......*.....a...
   3be44:	/...............
   3be54:	............[...
   3be64:	....(.....Q...A.
   3be74:	:.?.[...g.q.....
   3be84:	............e...
   3be94:	......F.....W...
   3bea4:	%.............>.
   3beb4:	z.q.......`.)...
   3bec4:	................
	...

0003c0a4 <sample_12_standard_DRUMS_snare24>:
   3c0a4:	............W..!
   3c0b4:	;.:.\.J......(..
   3c0c4:	U.....H..._.....
   3c0d4:	C.....H.........
   3c0e4:	..3.0...NB..R.I1
   3c0f4:	.!.DY.C.$V....>6
   3c104:	........%.!...\.
   3c114:	pS.....N........
   3c124:	..].............
   3c134:	<...e.....Q..*..
   3c144:	..F...i,........
   3c154:	..I.....).....K.
   3c164:	..<...!...^$3.H.
   3c174:	5.........F.W...
   3c184:	a.x..,(.........
   3c194:	d!...3N.o4- .5.<
   3c1a4:	Z3.B#:.D.W..6U.C
   3c1b4:	.R.Q.M.;.R.HSJ..
   3c1c4:	.*.x.+S:#B.PO>.<
   3c1d4:	(M.4X].$.A;g.%XH
   3c1e4:	.:d6.3gYu..=u"HK
   3c1f4:	j..0$...."p.W...
   3c204:	R...Z.........N.
   3c214:	..b...........{.
   3c224:	..........k.....
   3c234:	 ...........@.J.
   3c244:	........\.2.'.-.
   3c254:	............f.%.
   3c264:	....O.......`...
   3c274:	..!.K...B.......
   3c284:	.V...1.#..0Z...W
   3c294:	T.:3.V.O."^a.<.F
   3c2a4:	.Z.;.UjUuHjUN>.K
   3c2b4:	{H.a:D.B.D.1.]o_
   3c2c4:	...U= !>O)..;x..
   3c2d4:	....q..CI.j...b.
   3c2e4:	.&............3.
   3c2f4:	z........."...;.
   3c304:	L.....P...D.<...
   3c314:	[.`...b.........
   3c324:	......".........
   3c334:	..e.............
   3c344:	................
   3c354:	..W...8....;....
   3c364:	./...A...;-$...a
   3c374:	...0]1.0.=N*sG1<
   3c384:	.A.D..CC.[.!RV.7
   3c394:	[BXL.'+KXR.9.#.Q
   3c3a4:	Z/V]...&26.E.)..
   3c3b4:	...O3.*.##.8....
   3c3c4:	$'..V2..........
   3c3d4:	..............F.
   3c3e4:	..y...........G.
   3c3f4:	R.X.........M...
   3c404:	5...J...~...d.*.
   3c414:	..@.g.3.i@......
   3c424:	........E!..2...
   3c434:	9$g.l#..r..,...(
   3c444:	...Qx.D......F@.
   3c454:	t"..6..Z...!;(.B
   3c464:	.*..$H...@YK...C
   3c474:	.7.+.A..X0U8]#.6
   3c484:	....M7....Q#....
   3c494:	.)k.....b.......
   3c4a4:	....i.'.G.....x.
   3c4b4:	..e.......c.n...
   3c4c4:	L.F.Z.).9...9...
   3c4d4:	..R.....@.d.....
   3c4e4:	(...U.D.r.....U.
   3c4f4:	+.`.'.../.@.%.S.
   3c504:	......( ..U...-A
   3c514:	L...B+......S#t8
   3c524:	..<8<(...:.....>
   3c534:	5.4F.....?L.H...
   3c544:	>..%.)..m".&V..X
   3c554:	...(.....1.!.!e.
   3c564:	O#.../...A...1..
   3c574:	I..#. W.O.......
   3c584:	........3.......
   3c594:	............^...
   3c5a4:	......8.r.y.B...
   3c5b4:	........h.......
   3c5c4:	w...%..#..v.Q"..
   3c5d4:	k..:..7.........
   3c5e4:	,........<......
   3c5f4:	....`.E........#
   3c604:	}......'..v%....
   3c614:	..)8p....6.!l..:
   3c624:	..+/{....1...6>.
   3c634:	a6....?..Z......
   3c644:	,3y....+VE......
   3c654:	/.PR.....-..#/..
   3c664:	\...$3<.:......>
   3c674:	......~.......Z.
   3c684:	..#.\...(.......
   3c694:	......O.....=.5.
   3c6a4:	..v...=.*...&.^.
   3c6b4:	"...?.7....._.@.
   3c6c4:	(.{...r...l.y...
   3c6d4:	_.....<.........
   3c6e4:	..)%....j...`e!.
   3c6f4:	..[>..\...-.(.E.
   3c704:	N..7O...=?<.R.AL
   3c714:	.*.....:."O1...Q
   3c724:	b.4..6.;...BD...
   3c734:	y4W.m2...=....[.
   3c744:	^...I9y........$
   3c754:	......t.Y.I.y...
   3c764:	..g...n.[.J...".
   3c774:	F.7.).....D.K...
   3c784:	................
   3c794:	1.........e.x...
   3c7a4:	b.....W... .....
   3c7b4:	...../....l../..
   3c7c4:	F.~....#..~....$
   3c7d4:	... 3.....:.l.TC
   3c7e4:	..j...p..>....m.
   3c7f4:	O*(....,.......3
   3c804:	[$...!.!..I.Q...
   3c814:	.B..N n6w.c&..?.
   3c824:	'... ......*)...
   3c834:	..x.x.....TJw.r.
   3c844:	....R....@...../
   3c854:	...#..........c.
   3c864:	,.^...{.....B.*.
   3c874:	..D.....[.....(.
   3c884:	..2...........T.
   3c894:	.. .?...\.....x.
   3c8a4:	..c.I.......3...
   3c8b4:	7.........8..@..
   3c8c4:	............|...
   3c8d4:	............o.d?
   3c8e4:	a.K.L...81..'...
   3c8f4:	..j....M..U....3
   3c904:	..d......?.....;
   3c914:	..a..#z..!:.....
   3c924:	j...6.....` ....
   3c934:	P.......S.....%.
   3c944:	..-...).........
   3c954:	i.........<.<...
   3c964:	5...C...x.u.A.<.
   3c974:	>...k.......p...
   3c984:	V..._,..n.q.....
   3c994:	....e)>.j.8...."
   3c9a4:	..i.J.Y....0X..%
   3c9b4:	]...$.....d.....
   3c9c4:	...'s.d.%.S..)..
   3c9d4:	0............%..
   3c9e4:	..g...%.........
   3c9f4:	.,d.[.., .......
   3ca04:	.#..9.......q...
   3ca14:	D...M...M..L....
   3ca24:	......<.p.......
   3ca34:	....g...u.......
   3ca44:	....G...].X...L.
   3ca54:	..k.......q...4.
   3ca64:	........W...p...
   3ca74:	...........!....
   3ca84:	........w.x...j.
   3ca94:	..........i.....
   3caa4:	..\ ..."}.c.T1..
   3cab4:	..m...7..&C...T'
   3cac4:	i..%a.J..<e.....
   3cad4:	......6.;._...h.
   3cae4:	..*!..E.....0.7.
   3caf4:	S...........f...
   3cb04:	........!.P.~...
   3cb14:	M.m.......V.....
   3cb24:	[.........7.....
   3cb34:	..........p.....
   3cb44:	..?.........9...
   3cb54:	................
   3cb64:	X.,.|.......?.l.
   3cb74:	..G.`.....#.....
   3cb84:	..N...8.........
   3cb94:	R...............
   3cba4:	..*.......v.J !.
   3cbb4:	.....$S.{..+....
   3cbc4:	@!.....$.....-..
   3cbd4:	l..&....~.\..$..
   3cbe4:	..P./...........
   3cbf4:	..h..0....t.....
   3cc04:	V.@.....X"....-.
   3cc14:	................
   3cc24:	p.....Q.......<.
   3cc34:	..w.............
   3cc44:	............A. .
   3cc54:	5...../.X.......
   3cc64:	......+.n.......
   3cc74:	........b.s.....
   3cc84:	....B.g.......f.
   3cc94:	.%............V.
   3cca4:	7........&I.l.q.
   3ccb4:	5._.N......&...&
   3ccc4:	..,...'...7.....
   3ccd4:	.!d....%;....(..
   3cce4:	..- ..3...D.>...
   3ccf4:	Z...!...A.q.>...
   3cd04:	..i.U.&.m...+...
   3cd14:	..............+.
   3cd24:	....s...2...!...
   3cd34:	....d.........C.
   3cd44:	........N.u.....
   3cd54:	..M.m.6.....A.C.
   3cd64:	`...7...........
   3cd74:	..L.<.s.N.....$.
   3cd84:	........b....(..
   3cd94:	.F....X...=!....
   3cda4:	....^.%...&*..V.
   3cdb4:	. `...4.........
   3cdc4:	..(.....2.......
   3cdd4:	..).....d.Y.z...
   3cde4:	..M..(2.....X...
   3cdf4:	........s.......
   3ce04:	1.M.....,.....0.
   3ce14:	................
   3ce24:	z...........z...
   3ce34:	c.m.....y.".'...
   3ce44:	..^.(.....'.....
   3ce54:	..{.............
   3ce64:	..X.&...L.3.p.b.
   3ce74:	..'......._.H.G"
   3ce84:	@.7'..s.,$..0...
   3ce94:	..z.......X.....
   3cea4:	..z.D.........<.
   3ceb4:	*.............#.
   3cec4:	..o.Z.;...|.....
   3ced4:	..+...........u.
   3cee4:	3.p.....:...m.z.
   3cef4:	@...............
   3cf04:	A...U.^. .].2...
   3cf14:	.............._.
   3cf24:	......f.v./...j.
   3cf34:	)...8.....n.].i.
   3cf44:	K...j.'.........
   3cf54:	......).K.......
   3cf64:	V...l...........
   3cf74:	........>.......
   3cf84:	D.....H.9.p...}.
   3cf94:	..^.$.h...@.....
   3cfa4:	....[.........D.
   3cfb4:	......3...Z.l...
   3cfc4:	........z...+...
   3cfd4:	F.=.......!.....
   3cfe4:	L.......U.y.....
   3cff4:	B.....Y.*.i.|...
   3d004:	$.....".Y.....v.
   3d014:	x...............
   3d024:	u._.Q.....9.....
   3d034:	..............(.
   3d044:	........2.....m.
   3d054:	....../...-.c...
   3d064:	..j...D.0...7.Z.
   3d074:	N.U.Z.!.....f...
   3d084:	x.r._.......z..!
   3d094:	5...%.....H.....
   3d0a4:	8...u...*.E...t.
   3d0b4:	$.="...$....H...
   3d0c4:	..n...s...4.....
   3d0d4:	5&..3.......;.R.
   3d0e4:	....]...B.......
   3d0f4:	D.^.......4.v...
   3d104:	$.7.....!...[...
   3d114:	n.....F.......1.
   3d124:	S...W...D.......
   3d134:	q......._.......
   3d144:	E.n.............
   3d154:	n.C...2.....~.^.
   3d164:	..........g..._.
   3d174:	....z...E.A.E...
   3d184:	).E.....\.P.[...
   3d194:	......e...%.K...
   3d1a4:	U.I...l.........
   3d1b4:	........1.V...".
   3d1c4:	(.v.6.......u._.
   3d1d4:	....(.........W.
   3d1e4:	[....."...C.D...
   3d1f4:	............%...
   3d204:	`.a.......7.....
   3d214:	Y.@...[.....3...
   3d224:	..3.k...p.....A.
   3d234:	....:.s.........
   3d244:	,...I...........
   3d254:	............Q...
   3d264:	..).!...*."...=.
   3d274:	........s.h.n...
   3d284:	t.x.....9..... .
   3d294:	}.J.Z.C.......J.
   3d2a4:	g.x...:...'...T.
   3d2b4:	..?...:...,.....
   3d2c4:	....^...b.....v.
   3d2d4:	X.$.....C...8...
   3d2e4:	......+.h...K.8.
   3d2f4:	g...[.....P.....
   3d304:	f.....m.l.E.y.;.
   3d314:	0...i...+.^...Y.
   3d324:	;.............b.
   3d334:	..\.7...a.....8.
   3d344:	s...............
   3d354:	..|.......X.....
   3d364:	k.....{.'.......
   3d374:	......=.|...k...
   3d384:	4.[.......l...x.
   3d394:	1.........k.....
   3d3a4:	].8.T.,...8.*.5.
   3d3b4:	................
   3d3c4:	........q.../...
   3d3d4:	..b.........5.g.
   3d3e4:	......V.S.7...Y.
   3d3f4:	........T.o.o...
   3d404:	..b./...g.......
   3d414:	l.....r.....v...
   3d424:	......]...Y.1.&.
   3d434:	l.$...5.\.../.].
   3d444:	M...4...R.q.|.b.
   3d454:	D.K.....:.......
   3d464:	:..._...F...$"..
   3d474:	......3.q.u.....
   3d484:	5...h.8.......D.
   3d494:	j...)...4...0...
   3d4a4:	]...........%...
   3d4b4:	........'.+.".a.
   3d4c4:	................
   3d4d4:	<.........u.....
   3d4e4:	z.=.*.}.........
   3d4f4:	....B.........&.
   3d504:	..........i.....
   3d514:	..j.].....X...-.
   3d524:	......r.........
   3d534:	....5.....*...k.
   3d544:	..X.............
   3d554:	O.A...c.......U.
   3d564:	:.Y.......A.m...
   3d574:	..&.....6.h...C.
   3d584:	..........w.....
   3d594:	....t.....m.....
   3d5a4:	....)...&...t...
   3d5b4:	G...........V.w.
   3d5c4:	0.d...R...L.{...
   3d5d4:	O.u.............
   3d5e4:	..T.A.s.....B...
   3d5f4:	................
   3d604:	..........B...%.
   3d614:	..t.....L...?.N.
   3d624:	..s...o.........
   3d634:	T...i.n.4.....j.
   3d644:	..H.y.G.V.......
   3d654:	......{.-...I...
   3d664:	|.T.....2.......
   3d674:	l..._...(.......
   3d684:	............C...
   3d694:	c.S.P.T.....^.p.
   3d6a4:	..M.....o.....0.
   3d6b4:	..X.Z...'.v...^.
   3d6c4:	<.%...<.......~.
   3d6d4:	............|...
   3d6e4:	....i.........`.
   3d6f4:	....E.O.....U.*.
   3d704:	....[...u.......
   3d714:	5.$.+.q.....z...
   3d724:	:./.)...........
   3d734:	..N.H.;.X.......
   3d744:	..........#.....
   3d754:	).J......./.<...
   3d764:	P.........[.....
   3d774:	&.........f.....
   3d784:	....v.......?...
   3d794:	......>.....Q...
   3d7a4:	..N...B.......\.
   3d7b4:	L.p.3...<.A.....
   3d7c4:	a...;.......#...
   3d7d4:	....../.1...a...
   3d7e4:	..........h.'...
   3d7f4:	....L...y.x.S...
   3d804:	..\.s.2.d...W...
   3d814:	2.....#...B.f...
   3d824:	..W..."...*.7.y.
   3d834:	i.+.......U...<.
   3d844:	......'.....1...
   3d854:	...._...........
   3d864:	................
   3d874:	u.......).......
   3d884:	..].j.u...K.....
   3d894:	....1.........^.
   3d8a4:	........7.L.2.w.
   3d8b4:	....|.v.E.`...~.
   3d8c4:	....+...C.......
   3d8d4:	F.^.....;...`.y.
   3d8e4:	....C...........
   3d8f4:	....x.......4...
   3d904:	....Q.B.|.P...f.
   3d914:	....3...;.....A.
   3d924:	................
   3d934:	U....... .....o.
   3d944:	............v...
   3d954:	......'.c...Y...
   3d964:	m.....I...&.....
   3d974:	........Q...~...
   3d984:	........F.....,.
   3d994:	5.8...".........
   3d9a4:	6.A...4.+.......
   3d9b4:	 .........Q.....
   3d9c4:	..G.......q...`.
   3d9d4:	......D.C...X...
   3d9e4:	j.$...........a.
   3d9f4:	..............=.
   3da04:	o...-.*...h...\.
   3da14:	K...Y...`...a...
   3da24:	............?...
   3da34:	}.&.R.....f./.2.
   3da44:	3.?.?.....$.....
   3da54:	......b.........
   3da64:	m.?...?.Z.r...J.
   3da74:	?.......h...}...
   3da84:	..z.(.....e.v.d.
   3da94:	]...Q.x.....[.B.
   3daa4:	..........&.....
   3dab4:	a...............
   3dac4:	..}...$.......0.
   3dad4:	..........p.F...
   3dae4:	".J.............
   3daf4:	Q.m.......=...L.
   3db04:	;.7...I.....3...
   3db14:	j.v...../.....R.
   3db24:	w.......D.w.p...
   3db34:	".....j.\.>.....
   3db44:	E...=...a.`.....
   3db54:	..d.$.H./...M.$.
   3db64:	...._.........Y.
   3db74:	|...[.....|.....
   3db84:	....!...s.......
   3db94:	-.......(.....X.
   3dba4:	..g....._...&.F.
   3dbb4:	M...C.........Z.
   3dbc4:	....v.........j.
   3dbd4:	..,.7.$...x.....
   3dbe4:	\.,.7...V.....S.
   3dbf4:	X...............
   3dc04:	I.....%._.....!.
   3dc14:	........z.......
   3dc24:	..u...5.x...k.y.
   3dc34:	y...p...j./.s...
   3dc44:	".....$.%.......
   3dc54:	`.y.Z.d.}.......
   3dc64:	....N.........C.
   3dc74:	..K.1...u.....$.
   3dc84:	.._...f...v...;.
   3dc94:	......u...G."...
   3dca4:	..m.....'...\.G.
   3dcb4:	..F...'.8.....P.
   3dcc4:	,.N.u.........^.
   3dcd4:	f.8.........0...
   3dce4:	....p.....;.....
   3dcf4:	..}.........7...
   3dd04:	..g.....c.H.....
   3dd14:	..A...+.....}...
   3dd24:	N...o.[.Y.....>.
   3dd34:	..........l.9.j.
   3dd44:	....d.........h.
   3dd54:	....h.....u.....
   3dd64:	R...?.......J.[.
   3dd74:	..b.b...I.....).
   3dd84:	i.....*.......".
   3dd94:	................
   3dda4:	..K...........[.
   3ddb4:	?.....b.M.,.H...
   3ddc4:	..J.F...-.......
   3ddd4:	................
   3dde4:	..........a.....
   3ddf4:	c.c.q.V.].U.E.O.
   3de04:	G.-.6.1.&.&...!.
   3de14:	................
   3de24:	................
   3de34:	..........t...t.
   3de44:	q.m.\.]._.K.L.F.
   3de54:	5.7./.-.........
   3de64:	................
   3de74:	................
   3de84:	........t.t.k.c.
   3de94:	Y.W.N.H.>.:.2.,.
   3dea4:	#...............
   3deb4:	................
   3dec4:	................
   3ded4:	|.u.n.g.`.Y.R.K.
   3dee4:	D.=.............
	...

0003e0a4 <sample_40_standard_DRUMS_tamborine>:
   3e0a4:	......-.=...\...
   3e0b4:	......A.[.....i.
   3e0c4:	A.....X.....x...
   3e0d4:	J.g...l.p.......
   3e0e4:	....|.....;.1...
   3e0f4:	K.<.w.('..i-....
   3e104:	b-v.3... jW....r
   3e114:	...#.E.....D>...
   3e124:	.8@.....3...I...
   3e134:	........."@.....
   3e144:	..h....C.....P..
   3e154:	.!.9..k.lHa.n..Q
   3e164:	.."...m...7..;..
   3e174:	....R.......X.g.
   3e184:	..C....). ....VC
   3e194:	H...7^.....I-...
   3e1a4:	}1..r..J..J..Sx.
   3e1b4:	....$.r....%..P.
   3e1c4:	..,.........d.H1
   3e1d4:	..%B.....+......
   3e1e4:	.2T...$T../."...
   3e1f4:	!.v..Ei...{5n...
   3e204:	....Q...b.......
   3e214:	/.|6..c..*......
   3e224:	E&..#..?....."..
   3e234:	9.....X..%..).8"
   3e244:	<.p....&....T)R.
   3e254:	j...I.........X.
   3e264:	....g....,1.u!..
   3e274:	k.V.j...... H.'.
   3e284:	.%B.........D..M
   3e294:	=..../#......U1.
   3e2a4:	...SH.f.]*..`.W.
   3e2b4:	p:T....;0.w..&f.
   3e2c4:	............q...
   3e2d4:	c.......c.......
   3e2e4:	..>.......4$;.J.
   3e2f4:	="B...`0..i.. ..
   3e304:	....8%v....:w.\$
   3e314:	........K.9.O@+.
   3e324:	v.14q.6.J..H/.x.
   3e334:	.UL....[....[U..
   3e344:	..l.2+w...@D..n.
   3e354:	.1.....%K.P.c.V&
   3e364:	....o.E...%...s.
   3e374:	O+..l.a.........
   3e384:	u.....B...p.6...
   3e394:	j...e.......#...
   3e3a4:	...$..8.}'v....H
   3e3b4:	.....=x....A..M.
   3e3c4:	uA......76....._
   3e3d4:	.....P......z.8.
   3e3e4:	h._5...(........
   3e3f4:	o...............
   3e404:	2.j)_...~+......
   3e414:	.!Q.I.3"..... W.
   3e424:	\..(....L..%..B.
   3e434:	Y)z.{...3.Y.#'..
   3e444:	 .e.,.Y...L5....
   3e454:	.#!....../:...a/
   3e464:	....."..).X.;.`.
   3e474:	......`.......q.
   3e484:	...#^.F.........
   3e494:	...........3t...
   3e4a4:	G...w.k..$N.%...
   3e4b4:	B.......B.%.....
   3e4c4:	..6....._.....!.
   3e4d4:	....j...@...v...
   3e4e4:	..\...q*......M.
   3e4f4:	..../.V.........
   3e504:	..1.1.o...3..(..
   3e514:	......v....9..d.
   3e524:	..%.....2/.... %
   3e534:	6.......Z.H../..
   3e544:	Q.......+...L..:
   3e554:	..J..1x...*.Q...
   3e564:	-.......l.....A.
   3e574:	.&..L..1<.A.....
   3e584:	=.......&...!.%.
   3e594:	...."._.3.k.....
   3e5a4:	..........0...o.
   3e5b4:	..........<.....
   3e5c4:	_...D.......?...
   3e5d4:	:...........R...
   3e5e4:	......{.....t.L.
   3e5f4:	2...R.....V.6...
   3e604:	c.....#.U.I.Y...
   3e614:	..{.1.....X.....
   3e624:	..|.a.....b.....
   3e634:	................
   3e644:	......|...E.....
   3e654:	..%...&.....'.Q.
   3e664:	..........*.I...
   3e674:	................
   3e684:	w.&.8.3.I.....V.
   3e694:	q.....K.R...G.).
   3e6a4:	..\.........7.0.
   3e6b4:	..6.........[...
   3e6c4:	......K.......J.
   3e6d4:	..o.f...........
   3e6e4:	`$........v.c.U&
   3e6f4:	....B3....`.....
   3e704:	...0....."2.....
   3e714:	........M.)...E.
   3e724:	../...Q..&......
   3e734:	..../.......u...
   3e744:	\.z...@.M.......
   3e754:	..b.............
   3e764:	..=.R.....9.+...
   3e774:	.&..A.....'...k.
   3e784:	..(.. ..+.......
   3e794:	................
   3e7a4:	....q.$.....7...
   3e7b4:	:...{.N.......s.
   3e7c4:	z...............
   3e7d4:	....*.....8.....
   3e7e4:	T...s.#.<.o...W.
   3e7f4:	B...........O...
   3e804:	F.\.o.c.......L.
   3e814:	...........#....
   3e824:	..1.......?.C.J.
   3e834:	..e.....X...)...
   3e844:	:&......2.H.'...
   3e854:	....J.\.....!.q.
   3e864:	....q...........
   3e874:	........u.....&.
   3e884:	;.......{...O...
   3e894:	].......c.....e.
   3e8a4:	......?.....G.R.
   3e8b4:	........l.....K.
   3e8c4:	....<...V...I.i.
   3e8d4:	................
   3e8e4:	................
   3e8f4:	............{...
   3e904:	....g...'.~...Q.
   3e914:	........B...4.}.
   3e924:	....Y.......S.>.
   3e934:	..z.............
   3e944:	;.W...5.j.M.d.&.
   3e954:	..`...h.........
   3e964:	....:.!.=.@.....
   3e974:	....U.../.......
   3e984:	............T...
   3e994:	..{.Q...........
   3e9a4:	..+.....O.L...z.
   3e9b4:	....P.>.I.N.7.l.
   3e9c4:	......p.B.X.X.0.
   3e9d4:	..........>.....
   3e9e4:	%...\.6. .....%.
   3e9f4:	................
   3ea04:	..........h...X.
   3ea14:	..............}.
   3ea24:	3...M.....4.=.S.
   3ea34:	....!...z.[.../.
   3ea44:	....w.....!.|.s.
   3ea54:	..q.9.a.G.......
   3ea64:	6...h.&.e.....T.
   3ea74:	...._...A.......
   3ea84:	U...t./...w...x.
   3ea94:	.. ...Q.......j.
   3eaa4:	t...p.........j.
   3eab4:	......N.......H.
   3eac4:	....O.b.......8.
   3ead4:	........N.!...t.
   3eae4:	".....n.....d.(.
   3eaf4:	T...S.W.....{.5.
   3eb04:	......P...t.....
   3eb14:	<.........:.6.;.
   3eb24:	7.:.........<.T.
   3eb34:	..z.....{.Q.....
   3eb44:	>.G.).../.Q.1...
   3eb54:	..........g...^.
   3eb64:	......c.........
   3eb74:	....P...L.M.9...
   3eb84:	........:.q...3.
   3eb94:	....a...!.......
   3eba4:	............`...
   3ebb4:	..W.V...t.......
   3ebc4:	....J.....o. ...
   3ebd4:	..`.:...s...c...
   3ebe4:	................
   3ebf4:	m.O...g.......b.
   3ec04:	P.......E...[...
   3ec14:	..G.....p.......
   3ec24:	..E.?...../.k...
   3ec34:	A...E.......J...
   3ec44:	y...X.....M.d...
   3ec54:	........1.:.J.f.
   3ec64:	....@.....Z.|...
   3ec74:	r...f...?.a...c.
   3ec84:	......M.......@.
   3ec94:	V.\.|.........X.
   3eca4:	......X.?...E.~.
   3ecb4:	..%...T...N.....
   3ecc4:	............]...
   3ecd4:	w.....*...H...0.
   3ece4:	[.......R.w.S...
   3ecf4:	......i.......+.
   3ed04:	..l.(.........Z.
   3ed14:	..f...{.........
   3ed24:	....Y...........
   3ed34:	............J.].
   3ed44:	/.........Y.....
   3ed54:	..N...)...f...).
   3ed64:	..#.......!.....
   3ed74:	........B...{.1.
   3ed84:	c...........+.l.
   3ed94:	i...............
   3eda4:	....1.......9.T.
   3edb4:	....X...y.....k.
   3edc4:	....)...>.2.....
   3edd4:	I.d.,.....;.....
   3ede4:	....V.i.......M.
   3edf4:	..L...<.g.....x.
   3ee04:	v.....J.`.4.....
   3ee14:	s.....X.........
   3ee24:	Z.Y.-.^...x.a.".
   3ee34:	..........(.....
   3ee44:	h...)...m...J...
   3ee54:	....:.A.........
   3ee64:	K.....3...].G...
   3ee74:	......:...X.....
   3ee84:	..u."...B.......
   3ee94:	p.<.s...........
   3eea4:	F...........1...
   3eeb4:	8......._.......
   3eec4:	X.`.I.....a...(.
   3eed4:	..{...,.....l...
   3eee4:	................
   3eef4:	....`..... ...p.
   3ef04:	..g...].......O.
   3ef14:	..\.........-...
   3ef24:	....(...m.......
   3ef34:	W.....x.....4...
   3ef44:	^.G...o.W.Z.-...
   3ef54:	(.}.....i...d.?.
   3ef64:	....L...........
   3ef74:	..B...^.O.}.S.h.
   3ef84:	s...p.~.i...O...
   3ef94:	..I.b.j.p.t...l.
   3efa4:	..o...b.....F...
   3efb4:	....0...A...[...
   3efc4:	..y...i.L...J...
   3efd4:	..............X.
   3efe4:	................
   3eff4:	v.....b.n.....+.
   3f004:	..].N...l.......
   3f014:	..............=.
   3f024:	....c...........
   3f034:	A.1.]...p.>.-.7.
   3f044:	..d.....S...l...
   3f054:	........8.M.a...
   3f064:	..W...U.........
   3f074:	....'.n.9.......
   3f084:	................
   3f094:	a...&.F...5.....
   3f0a4:	..a.c.U.........
   3f0b4:	....f...L.......
   3f0c4:	....i...{.q.....
   3f0d4:	................
   3f0e4:	k.G...X.p.......
   3f0f4:	l...O.......).z.
   3f104:	..y...P.........
   3f114:	........8...g...
   3f124:	..a.......x...1.
   3f134:	\.....F.....v.|.
   3f144:	..............l.
   3f154:	;.....`.h...}.K.
   3f164:	..X.....9.....F.
   3f174:	7...3...|.....r.
   3f184:	H...~.V.........
   3f194:	....f.h.......T.
   3f1a4:	........g.y.....
   3f1b4:	..+.u...".].....
   3f1c4:	d.>.............
   3f1d4:	`.s.q...5.'.....
   3f1e4:	..k...4.1.Y...v.
   3f1f4:	........v.1.J.J.
   3f204:	q.........R.#...
   3f214:	3.......4...C...
   3f224:	............t...
   3f234:	..W.".......5...
   3f244:	..D.......W.....
   3f254:	......W.4.V.....
   3f264:	..r.............
   3f274:	....I.5...#...'.
   3f284:	....0.......>...
   3f294:	`...@.....i...$.
   3f2a4:	..I...P.$.......
   3f2b4:	=...}.q.d.Q.V.P.
   3f2c4:	..1.....}.{...o.
   3f2d4:	..o.T......."...
   3f2e4:	....U.......I...
   3f2f4:	........?.J.....
   3f304:	..u.i.K.'.4.....
   3f314:	....Z...........
   3f324:	/.o._...w.k...^.
   3f334:	..{.I.H...:...`.
   3f344:	f.............f.
   3f354:	......P.......n.
   3f364:	................
   3f374:	S...~...@.......
   3f384:	......r.........
   3f394:	..........V.[...
   3f3a4:	..A...........j.
   3f3b4:	..-.$.Q.....Q.s.
   3f3c4:	..(...*...&.l...
   3f3d4:	..^.s...........
   3f3e4:	..E.y. ...|.`...
   3f3f4:	................
   3f404:	T.......i...K...
   3f414:	O...W.N.....:...
   3f424:	........!.a.+...
   3f434:	L...............
   3f444:	..(.d.u...Q.l.^.
   3f454:	........X.....K.
   3f464:	%...q.C.......K.
   3f474:	....F.)...y.....
   3f484:	..*.:.......z.$.
   3f494:	........4.......
   3f4a4:	........_.1.'.D.
   3f4b4:	....a...........
   3f4c4:	..K...q.....[.h.
   3f4d4:	........s.`...t.
   3f4e4:	b...(.?.D.......
   3f4f4:	S...s.......7.r.
   3f504:	........R...j...
   3f514:	j._.!.a.(...:...
   3f524:	....(.....P.>.|.
   3f534:	a.l.b.v...C.....
   3f544:	....6.C.....?...
   3f554:	......,.....Z...
   3f564:	'...:.....I.l.k.
   3f574:	......3.......O.
   3f584:	......T...H...|.
   3f594:	..q...........G.
   3f5a4:	i.....~...*...(.
   3f5b4:	|...............
   3f5c4:	W.......`.h...?.
   3f5d4:	..$...X.....~...
   3f5e4:	........9.......
   3f5f4:	..........b.w.v.
   3f604:	....~...Y.......
   3f614:	..{.s.....;.....
   3f624:	........O...7...
   3f634:	................
   3f644:	........`.....P.
   3f654:	....v.i.W...L. .
   3f664:	c.&...\.W.W... .
   3f674:	............w...
   3f684:	..........W.0...
   3f694:	......B.G.^.....
   3f6a4:	)...............
   3f6b4:	........:.....@.
   3f6c4:	\.........N.3...
   3f6d4:	......k...c.....
   3f6e4:	+.,...y...O.....
   3f6f4:	<.u.....Q.......
   3f704:	s...........i...
   3f714:	..........e...U.
   3f724:	......p.V.[...r.
   3f734:	......2.O...h...
   3f744:	..#.........7.V.
   3f754:	........8.....a.
   3f764:	9.....b...a.%...
   3f774:	0.s.r.*.........
   3f784:	......&...N.....
   3f794:	......O...;. .N.
   3f7a4:	..N.....t. .c...
   3f7b4:	........(.......
   3f7c4:	R.`.s.u...*.....
   3f7d4:	?...o.......T...
   3f7e4:	..........a.....
   3f7f4:	......a.u.....G.
   3f804:	..i.......'.q.q.
   3f814:	^...........Z...
   3f824:	k...[.v.........
   3f834:	_.].......g...~.
   3f844:	=.S...<.....%...
   3f854:	.. .B.....h.).i.
   3f864:	....|.;.!...2...
   3f874:	............|.T.
   3f884:	......(.&.....6.
   3f894:	....~.2.*.z.....
   3f8a4:	....V...........
   3f8b4:	....:.].X.......
   3f8c4:	........C.......
   3f8d4:	n.......).....#.
   3f8e4:	=.....E.+.^.9...
   3f8f4:	)...........T...
   3f904:	A.v.].s.......4.
   3f914:	............&.<.
   3f924:	....~.........).
   3f934:	O...Z...8.......
   3f944:	..1.....;.<.....
   3f954:	z.=.....r.A.....
   3f964:	(.Q...). ...M...
   3f974:	..s.......B...V.
   3f984:	}...........B...
   3f994:	1.r...h.L.......
   3f9a4:	....f...........
   3f9b4:	......Q.........
   3f9c4:	[.......H...Y...
   3f9d4:	k.;.......,.U.:.
   3f9e4:	..5.........3...
   3f9f4:	......K.i.N...[.
   3fa04:	{.v...........{.
   3fa14:	......L.......X.
   3fa24:	S...............
   3fa34:	................
   3fa44:	......1.r...|...
   3fa54:	................
   3fa64:	p.Q.a.....A.q.j.
   3fa74:	P...R.[...*.,...
   3fa84:	....2.........).
   3fa94:	*...............
   3faa4:	..t...:.........
   3fab4:	....V.h.q.v...j.
   3fac4:	................
   3fad4:	....=...k.`.....
   3fae4:	>.X...M.`.....<.
   3faf4:	..........t.....
   3fb04:	..a.!.........:.
   3fb14:	......2.........
   3fb24:	....\...........
   3fb34:	....{.y.b...=...
   3fb44:	S.....#...K.K...
   3fb54:	..........3...}.
   3fb64:	/.v.?...a.5.....
   3fb74:	..|.2.........u.
   3fb84:	^.....o.....&.F.
   3fb94:	s.............d.
   3fba4:	D...*.....c.....
   3fbb4:	....M.v...!.....
   3fbc4:	3.)....._.l.Q.;.
   3fbd4:	`.Z...0...O.2.".
   3fbe4:	1.......a.....j.
   3fbf4:	............k.z.
   3fc04:	x.......f.......
   3fc14:	..#...:.......t.
   3fc24:	..R.....u.4...i.
   3fc34:	......g.b...5.g.
   3fc44:	..O...{...|...H.
   3fc54:	..........v.E...
   3fc64:	r.....*.....{...
   3fc74:	........"....._.
   3fc84:	M.a.I...G.......
   3fc94:	G.X.N.7...T.....
   3fca4:	....k...J.....>.
   3fcb4:	N...........?.W.
   3fcc4:	R...............
	...

0003fea4 <sample_30_standard_DRUMS_cabasastrk>:
   3fea4:	............+.1.
   3feb4:	Q.........L.....
   3fec4:	..@.......W.....
   3fed4:	..k...\.........
   3fee4:	*...h.k...u.....
   3fef4:	H.............b.
   3ff04:	....P.^.../.s...
   3ff14:	(.#.....6.......
   3ff24:	......P...`...R.
   3ff34:	Y.V.6...........
   3ff44:	B.....y.c.......
   3ff54:	......K.T.=.G.>.
   3ff64:	T.C. .....'.+...
   3ff74:	5.k.i.3.....<...
   3ff84:	............X...
   3ff94:	n.;...v...\...z.
   3ffa4:	....(...r...,.m.
   3ffb4:	#.....e...I...:.
   3ffc4:	".......$.......
   3ffd4:	!.......O.......
   3ffe4:	....7.r.......X.
   3fff4:	....r._.H.z.z...
   40004:	..r.........'...
   40014:	........f.......
   40024:	......1.m.......
   40034:	........=.#%....
   40044:	..a.m.v..#...$B.
   40054:	....C...J.....[2
   40064:	..7!M...........
   40074:	.....:..}7......
   40084:	P.u.{..;?.L#....
   40094:	R...E...Y4....\.
   400a4:	...........'..G.
   400b4:	Z...`...(.9.....
   400c4:	.........F......
   400d4:	O...<.%.^..4<...
   400e4:	a.U.Y...]+..F2..
   400f4:	7...Z.M...#.>...
   40104:	a.{.....W.....5"
   40114:	......U...1...F.
   40124:	A.9.d..*\.......
   40134:	......L.$.......
   40144:	})..V..1..&..+..
   40154:	8..,..0..Q..4..G
   40164:	......5,[.Xj....
   40174:	8D..........Y!..
   40184:	..d.>&....1.....
   40194:	.6..W.wX...A.&..
   401a4:	,B....**..h.g.R.
   401b4:	.....6..s.}.V(`.
   401c4:	.)....U'..+<..>P
   401d4:	...$..T/..}..Dl.
   401e4:	FB?.D.....@.....
   401f4:	......<...B.9!..
   40204:	....@.w....1....
   40214:	......z.......7.
   40224:	......2.....I)s.
   40234:	CK.....%..&.C...
   40244:	...............6
   40254:	_.L&G..&..%.....
   40264:	<........7$..)..
   40274:	8.@._7...0b.7.B.
   40284:	8.E9a..2D.......
   40294:	O.....:.....&.+.
   402a4:	....+,L..:!.p...
   402b4:	+......'@.....a.
   402c4:	....a.L.........
   402d4:	..Q.......+.W...
   402e4:	S.I0............
   402f4:	a...S.i.)....,..
   40304:	...........$t.C7
   40314:	....-.e'.....*..
   40324:	...8X...k...x...
   40334:	..+...m...L.s...
   40344:	...)....6...%.m.
   40354:	....."...:..^/..
   40364:	... F.. ..Y....-
   40374:	.....?...Eu.w...
   40384:	...........&4...
   40394:	..J..._.\.......
   403a4:	1.....v...F..=i.
   403b4:	.+......H.....`2
   403c4:	=...=.....$....-
   403d4:	..F..2....O...Q.
   403e4:	..}.4....?......
   403f4:	t..2L.|5[.....I.
   40404:	..=...M.........
   40414:	....[.........<.
   40424:	<........3..+.O.
   40434:	....8 ..9.H...V.
   40444:	.......WT...N.q.
   40454:	......_..>..5...
   40464:	o.....|"........
   40474:	..=.n......,#...
   40484:	E...4.;4....:3..
   40494:	2!y... .i.5...f.
   404a4:	..(..5.....2..7.
   404b4:	N.8.....i...I...
   404c4:	..........j&U...
   404d4:	1.Y...."J..+....
   404e4:	.........>...._.
   404f4:	C.#.|0....F..../
   40504:	D..0...,....8...
   40514:	)...R!..:.P.....
   40524:	.........-...)B.
   40534:	......:.........
   40544:	....x.n.D...w...
   40554:	./...#....n.O..9
   40564:	s.H.. b.v!..L..*
   40574:	...'......*.\)..
   40584:	;...j.....+.W...
   40594:	..S.<...D.W.{.S.
   405a4:	....a...........
   405b4:	*...Q.z.+.....(.
   405c4:	....|.........k.
   405d4:	............]...
   405e4:	.,....4&....4.\.
   405f4:	...&....lJZ."...
   40604:	I.V....5...Cj.{.
   40614:	.#..............
   40624:	A...(.....C...t.
   40634:	K.N...*.....W...
   40644:	.-..r.Z.....Q...
   40654:	r.....R.k.E.... 
   40664:	d.F.s.1.!.{$..K.
   40674:	..c.]........'..
   40684:	.....).........!
   40694:	....z...........
   406a4:	s.r.....E.Q.L..'
   406b4:	7..(....B(..F.".
   406c4:	......h.........
   406d4:	,.............7.
   406e4:	Q.(......%Q.."..
   406f4:	A...[.D.........
   40704:	..l.....@.7.....
   40714:	g...%.g...Q.....
   40724:	R,........=.x.*.
   40734:	6.{.e.P...\#S.e.
   40744:	................
   40754:	....'...<.......
   40764:	1...w...../..(#.
   40774:	^ H....... .l...
   40784:	..."....t...=...
   40794:	a.......M.....A.
   407a4:	.&..S..$....N...
   407b4:	..*.t...$.....q.
   407c4:	. ..-.u.......W.
   407d4:	............4.Y.
   407e4:	..L.....<...v ..
   407f4:	......g.......J.
   40804:	....G.......g...
   40814:	C...Z...........
   40824:	R.....9...U.b...
   40834:	C.....7.:.......
   40844:	..'.c ..........
   40854:	....E..%..R.....
   40864:	............d...
   40874:	............r...
   40884:	D.......:.T.....
   40894:	#.........8.....
   408a4:	-.2.f.......F.T.
   408b4:	..../...#...A.2.
   408c4:	..@.....#.X.....
   408d4:	................
   408e4:	....b...].;.....
   408f4:	..m.Q...........
   40904:	..........v.....
   40914:	%...L.....f...A.
   40924:	I...'.q.].R...i.
   40934:	@...{.......H...
   40944:	..g...P.8.]...h.
   40954:	=.............e.
   40964:	....$.......u.Q.
   40974:	........q.J.N...
   40984:	......*.o.......
   40994:	......v.W...U...
   409a4:	....+...[.......
   409b4:	Z.e.....p.....c.
   409c4:	..M.R...`...b...
   409d4:	h.j...h.-.....&.
   409e4:	....s...........
   409f4:	6..... .........
   40a04:	......x.......u.
   40a14:	..&.....V.:...Y.
   40a24:	........o.~.$...
   40a34:	..P.......v.q. .
   40a44:	....N.@.a.....;.
   40a54:	..].............
   40a64:	............p.O.
   40a74:	`.T.d...1.0.....
   40a84:	..T... .....]...
   40a94:	p.=.........0...
   40aa4:	n.'.........Z.m.
   40ab4:	................
   40ac4:	5.j...<.....@...
   40ad4:	,.........V.....
   40ae4:	S.....|.[.]...,.
   40af4:	......Q.J.C.M...
   40b04:	..e.........'.m.
   40b14:	....V.X.A.....h.
   40b24:	4.'.:...d...x...
   40b34:	................
   40b44:	d...........`.U.
   40b54:	R...=.o.L.Y.....
   40b64:	....w...5...A...
   40b74:	..y.............
   40b84:	....+...W.....L.
   40b94:	R.c...).l.......
   40ba4:	......k.9.......
   40bb4:	........B.r.`...
   40bc4:	..c...p.........
   40bd4:	..j.+...#.......
   40be4:	................
   40bf4:	....]...........
   40c04:	........T.......
   40c14:	$.....x.......<.
   40c24:	..i.....[.m.....
   40c34:	..z...B.>.9.....
   40c44:	........d.......
   40c54:	Q.N.............
   40c64:	..M...m..._.P...
   40c74:	^.....%.....%...
   40c84:	m.#.E.".|.......
   40c94:	J.2...\.........
   40ca4:	..;.O.......'.#.
   40cb4:	......Z...#.....
   40cc4:	..f.w...........
   40cd4:	q.....t.i.d.....
   40ce4:	4.....f. .......
   40cf4:	z.....b.p.,.G...
   40d04:	....t...........
   40d14:	....w.....L.....
   40d24:	^.......J...8...
   40d34:	....a.....I...a.
   40d44:	7.....a.\...v...
   40d54:	......\.J.I...O.
   40d64:	....S...E...f...
   40d74:	O.....+.l...V...
   40d84:	%.G.*......."...
   40d94:	....q...%.Q.....
   40da4:	u.....|._.).....
   40db4:	......`.%.....J.
   40dc4:	..........q...^.
   40dd4:	_...]..._...G...
   40de4:	................
   40df4:	..........1...2.
   40e04:	^...*.k.........
   40e14:	P.=.-.#...a.....
   40e24:	m.....B.........
   40e34:	....x.G.........
   40e44:	........7.....".
   40e54:	..............>.
   40e64:	..U.J...1...`.l.
   40e74:	....v.......#...
   40e84:	....,.I.8...T...
   40e94:	..N...w.........
   40ea4:	..4.p......./...
   40eb4:	....>...9.......
   40ec4:	....i.........1.
   40ed4:	......8...p...).
   40ee4:	........V...)...
   40ef4:	..'...........%.
   40f04:	..g.../...6.....
   40f14:	..f.=.'...Y.....
   40f24:	................
   40f34:	....G.....[.....
   40f44:	......n.........
   40f54:	....,.......a.O.
   40f64:	b.......B.......
   40f74:	....O.....I.....
   40f84:	m... .;...,.#...
   40f94:	..v.}.>.........
   40fa4:	'...A.....[.....
   40fb4:	..g...$.n.8.....
   40fc4:	-...s.....S.u.s.
   40fd4:	..9...d...l.....
   40fe4:	U...T...(.....P.
   40ff4:	....O.].........
   41004:	......b.r.Q.....
   41014:	..x.....l.....7.
   41024:	..........>.....
   41034:	".@.X...x...O...
   41044:	..6...].....p...
   41054:	....g.......m...
   41064:	'...p...s...G...
   41074:	..4.>...>.'.....
   41084:	X.....1.......z.
   41094:	..)...........k.
   410a4:	..G.............
   410b4:	............ ...
   410c4:	@.......K.p.T.N.
   410d4:	J.{.............
   410e4:	.._...>.....L...
   410f4:	..Z.............
   41104:	%...%...........
   41114:	................
   41124:	......%.....A...
   41134:	V.....3.......G.
   41144:	.......... .....
   41154:	........n...-...
   41164:	'...;.......L...
   41174:	......N...T...B.
   41184:	.... ...Z...v...
   41194:	........E.....^.
   411a4:	......)...../...
   411b4:	..Q...........@.
   411c4:	....g...%...L...
   411d4:	Z...q.........(.
   411e4:	..6.4...E.......
   411f4:	6.....*.....8...
   41204:	../........... .
   41214:	............ ...
   41224:	9..... .........
   41234:	..K.....].....d.
   41244:	....V.....f.....
   41254:	,.....@...i...Q.
   41264:	..S.....=.%.r...
   41274:	......,...F.....
   41284:	................
   41294:	................
   412a4:	....(...........
   412b4:	................
   412c4:	................
   412d4:	....9...........
   412e4:	..9...,.......(.
   412f4:	....^.....=.....
   41304:	%.......3...*...
   41314:	..........@.....
   41324:	).....I.....8...
   41334:	........F.......
   41344:	,.....$...A.....
   41354:	..'.....%.......
   41364:	................
   41374:	........2... ...
   41384:	................
	...

000414a4 <sample_15_standard_DRUMS_floortombrite>:
   414a4:	.....Y.i.B.SUTz;
   414b4:	.X..Yr..`.*CF.+.
   414c4:	....L.[...L.f.L.
   414d4:	....g.9...k.L...
   414e4:	4...5.t!....^..(
   414f4:	s..6...:\..l.6..
   41504:	.]B35E.K./h..?0T
   41514:	.C..*n.?...:.6..
   41524:	......E>..;..2..
   41534:	... ;N.....M.1%.
   41544:	.a..Z.6Q......x 
   41554:	.&..6..W......{.
   41564:	....p.I...L.....
   41574:	N.K.{...]...M...
   41584:	9...........<...
   41594:	..0.f...... ...5
   415a4:	((k [..4.g...2.?
   415b4:	.D.,.'.=.C.&?=w.
   415c4:	k.ZN..61.......)
   415d4:	&$.......$...8..
   415e4:	+%.>............
   415f4:	n.U......._.....
   41604:	........G.T.....
   41614:	......6...e...4.
   41624:	-.L...p.....d...
   41634:	d.`...u...|./...
   41644:	1.......`..'/.{.
   41654:	.....@.(h6.04CA%
   41664:	.2.Y>"0F.5.=>...
   41674:	.1..O/L7z.. U2..
   41684:	.+..2....;.....1
   41694:	.$......p.U.....
   416a4:	......f...].....
   416b4:	..q...v.....`. .
   416c4:	G.L.W.+.......Y.
   416d4:	F.g.T.R...^...w.
   416e4:	..j...O.).....C.
   416f4:	..a...........C.
   41704:	y.....T.F..7r.['
   41714:	.%.M.8.-.\./.GY>
   41724:	.C6?.0XG.&.?d%.4
   41734:	_..*./.6....O...
   41744:	:..8..3.....F#Y.
   41754:	......<.....W...
   41764:	..R.....,.......
   41774:	....v...X...m...
   41784:	\.!.~.....W.l.>.
   41794:	....q...q.C.c...
   417a4:	....T.....3....9
   417b4:	y.~.,...3....!..
   417c4:	.0l......'.../.H
   417d4:	=..:hF.2.;qDy[.8
   417e4:	_$(M.Pl-.$.@{-.(
   417f4:	TL...(.%C&.....)
   41804:	..4.............
   41814:	f.P...R...g...4.
   41824:	..........N.....
   41834:	r...............
   41844:	.. .G.......7...
   41854:	}.........O.<...
   41864:	..-.y...%...@...
   41874:	..."..$...w....#
   41884:	.&."c4.F$:.2.0fC
   41894:	.2.H.G.,.>V17..A
   418a4:	.X.#.&{F.'...E.0
   418b4:	...14)..O"......
   418c4:	R.U.5...).....4.
   418d4:	4...w.".........
   418e4:	..z.....I.4.7.e.
   418f4:	................
   41904:	A.e.v...)...S...
   41914:	f.......c...d.?.
   41924:	....K...........
   41934:	.../.....-. z.F8
   41944:	.B.).@.A58.J.AoJ
   41954:	.G.A.<.9.4 <"6h$
   41964:	|-G2..z$)..)|...
   41974:	e...5.,.......{.
   41984:	..=.<.V.C.......
   41994:	 .u.....N.......
   419a4:	..+.....2...;...
   419b4:	..W.1...........
   419c4:	P.[.X.....z.N.0.
   419d4:	R...............
   419e4:	........~.V.....
   419f4:	(...i...;....9..
   41a04:	[.o&.2./@6.3IC.H
   41a14:	|4.Ql8.;&GG<.6>1
   41a24:	.0.*.4.0.4X(.&.)
   41a34:	..Q.....z.......
   41a44:	'........ '...q.
   41a54:	..G.>.L.`.......
   41a64:	....?.^.........
   41a74:	..L...8.......S.
   41a84:	5.T.....+.0.....
   41a94:	`.........&...C.
   41aa4:	..............U.
   41ab4:	..F.5.z...V.....
   41ac4:	..p.....o0o...V,
   41ad4:	s+.-.5.1h;.F.6.@
   41ae4:	.>$5M3.F::...0.4
   41af4:	.*.+.1.*>&.'% ..
   41b04:	%.m.......s.....
   41b14:	j.........x.^.B.
   41b24:	c.c.*...........
   41b34:	3....._.e...;...
   41b44:	....J.'.'.h...%.
   41b54:	*...H.L.V...C.-.
   41b64:	..e...j.........
   41b74:	....;...........
   41b84:	......].W.4.1...
   41b94:	..&1....N&.'M.D.
   41ba4:	."!!./. ..w .)R!
   41bb4:	.%.*.$k.a,.1.&V*
   41bc4:	.&R%./.).#.!..J"
   41bd4:	......Q.-.G.e...
   41be4:	....[.U.........
   41bf4:	-...)...>.J. . .
   41c04:	<.........O...`.
   41c14:	c.Y.V.[.6.>...G.
   41c24:	}.\.....p.......
   41c34:	D...2.4...*.....
   41c44:	....y...G.......
   41c54:	..j.........H...
   41c64:	s.8.T.. .....(.%
   41c74:	.#.*.$.).-.+.*.2
   41c84:	_%...&b+.'.$..J.
   41c94:	.*.....!"$4.D...
   41ca4:	.(.'p....#...(.!
   41cb4:	|!Q J.........=.
   41cc4:	..?.N.....B.y...
   41cd4:	......R.......8.
   41ce4:	<...].:.....n...
   41cf4:	................
   41d04:	:.Q.v.}.......[.
   41d14:	~.X.f.5...i.c...
   41d24:	l.*.#.3.'.....}.
   41d34:	V.......+.......
   41d44:	.'.)Y)p,.(z0g,`/
   41d54:	.-.-...+E,.%F+..
   41d64:	...#.(.#....;%4.
   41d74:	).. .$/.B.0%....
   41d84:	........F.....W.
   41d94:	....(.i.F.....-.
   41da4:	?...4...A.....;.
   41db4:	..>.......f.D.W.
   41dc4:	..M...b....._.M.
   41dd4:	............6...
   41de4:	 .......H.......
   41df4:	..:.....9...D.`.
   41e04:	!.....x...q.....
   41e14:	!...<.*...v .%.(
   41e24:	.+.../b:#4.3./"8
   41e34:	.;.5.3|5.9.,U2r.
   41e44:	Y/.*.)7)(%.$. 8!
   41e54:	."W.!.c...).K.t.
   41e64:	................
   41e74:	B...............
   41e84:	L...........k...
   41e94:	c.&.3.q.....n...
   41ea4:	....x.].D.l.z...
   41eb4:	i.......8.....J.
   41ec4:	..'.......9.l...
   41ed4:	..}...W.E...l...
   41ee4:	3.*.....n.x"."]"
   41ef4:	."..~*.#.,.3{*.*
   41f04:	d4.7.0Y/.1.6.>.8
   41f14:	b:.?X:.5.4[0"1./
   41f24:	m-.,E&.%.! ". &.
   41f34:	................
   41f44:	....)...".....O.
   41f54:	......{...<.B...
   41f64:	....0.4.<...K...
   41f74:	p.......Y.].K.?.
   41f84:	..E...!.`...L.P.
   41f94:	B.....{..._.[.:.
   41fa4:	..[.n..._...+...
   41fb4:	d.......U.X.....
   41fc4:	h.4..&.(B+s/.1.3
   41fd4:	.5{/.0s1.0.2.3.4
   41fe4:	.5Q0c2.4.4.5.9U2
   41ff4:	.1.5.2./.1.3./<*
   42004:	N)D'.#..........
   42014:	5.>.%.?.-...r.Q.
   42024:	........,.......
   42034:	..$...........G.
   42044:	..<.5.a...r.....
   42054:	E.....G.....$.i.
   42064:	..d.8.].B..... .
   42074:	......F...X.....
   42084:	)...'.A.6.V...~.
   42094:	..........D!.$."
   420a4:	.&.).1n3.6.8.9!=
   420b4:	V<4=\>h<S:h7i;.<
   420c4:	.5./u2./.)&(.,f'
   420d4:	.$.). =.... ....
   420e4:	..M.|...b..... .
   420f4:	....>.....J.....
   42104:	......x.o.^.J...
   42114:	..&.e...........
   42124:	l.......G.....q.
   42134:	................
   42144:	D...............
   42154:	z. .)...+.X...!.
   42164:	......r.v.......
   42174:	....)..".%L%.&H+
   42184:	.0.0c..0.3.8*9.8
   42194:	.:.8.;.;.<A<.:.:
   421a4:	.7l2.1..l-u)b'. 
   421b4:	.!.%\...{...h...
   421c4:	../.......T.]./.
   421d4:	}...x...c./.....
   421e4:	..........%...^.
   421f4:	2.N...8.....d...
   42204:	9.d.{.....(.6...
   42214:	..p.i...........
   42224:	b.3...r...9.....
   42234:	....S.}.......:.
   42244:	..L.2...:.G...9.
   42254:	D.Y!k%.&.%.*;-.-
   42264:	A.3/./30.4.7.9n:
   42274:	.:.7.8.6.436.9.7
   42284:	./.-.0././#-x'@$
   42294:	.$..S.....e...\.
   422a4:	G.[.....v...C...
   422b4:	..8.X.....6...q.
   422c4:	..K.......X.....
   422d4:	p.......U.......
   422e4:	..%.)...J.......
   422f4:	..F...H...I.....
   42304:	'.....R.........
   42314:	y...9...........
   42324:	......".........
   42334:	...#.%.*.,./>0.1
   42344:	.2.2.3.5.3.4d5z3
   42354:	r6.6.0>0.3.2.1u2
   42364:	.,...1...+.+.'.%
   42374:	.$.$.#....q.....
   42384:	......+.I.......
   42394:	......T...,.....
   423a4:	|...g...m.......
   423b4:	....f...K.......
   423c4:	S.~...b.d.......
   423d4:	..I.G.........g.
   423e4:	%.....g...0...G.
   423f4:	....I.:.........
   42404:	..,...}.+.q.....
   42414:	d!X&:(.*4,&.00.1
   42424:	.1.3h8M8.5.5.5g7
   42434:	G7C6`4p3.6.3n16-
   42444:	k+.-.*>%.#."....
   42454:	..|.....L.$.....
   42464:	..".1...+.`...[.
   42474:	....o...#.{. ...
   42484:	..+.4...9.G.....
   42494:	X........._.....
   424a4:	c.I...........A.
   424b4:	..Z.t...a.V...j.
   424c4:	..6.............
   424d4:	....(.x..._...h.
   424e4:	......`.........
   424f4:	.!<#K%.&.).,.-[/
   42504:	.0\3.5.5.4.7o7.8
   42514:	.:.:.676_4`2.3.4
   42524:	.2.,.*>(.'.'.$. 
   42534:	..f...........M.
   42544:	..............&.
   42554:	{.I.............
   42564:	&...X...5.......
   42574:	_.;.....}.d.....
   42584:	..-.....\.M.....
   42594:	*.".........j.@.
   425a4:	..?...(...m.G...
   425b4:	................
   425c4:	g...0.;.........
   425d4:	... ."A&.).,.,..
   425e4:	.-.-x0l1.3.6.7g8
   425f4:	.8.6.7+9.:.8.6.4
   42604:	|4D4.0..1,.).(.(
   42614:	.$/.......'.....
   42624:	b.w...6.*.Y.=.v.
   42634:	i...I.....(.....
   42644:	/.........R.E...
   42654:	`.5.=.....~...p.
   42664:	....=.....!.....
   42674:	..;.........n...
   42684:	........l.j.....
   42694:	..-.>...?.!.....
   426a4:	..t.....D.s.*...
   426b4:	... .".%v'.).+P,
   426c4:	=/.1.1.0I1.1.1c2
   426d4:	.2.2.214.3.2.0i/
   426e4:	J/h0.1.0.-.-.-h.
   426f4:	Y.S,`).&.#.!. 2.
   42704:	0.|.e.....).....
   42714:	P.h.T.....5.....
   42724:	........O.>...r.
   42734:	....+...$...7.w.
   42744:	....'...s.Z.....
   42754:	1.....).....R.\.
   42764:	..;...\.....y...
   42774:	.... ...:.x.V...
   42784:	..../...5.M.+...
   42794:	..^...q....!.$.(
   427a4:	.(.*1,.-...0.113
   427b4:	.4.5n535.4.5.5.5
   427c4:	y4.2L2.2:3.1./Y+
   427d4:	S*.(.'.%}#."....
   427e4:	......X...O.T...
   427f4:	{.[.y.m.........
   42804:	......0.w...;.w.
   42814:	6.....H.U.......
   42824:	....\...l..... .
   42834:	T...........$...
   42844:	..l...w...$...~.
   42854:	l...X.L.......L.
   42864:	v.....|.....b...
   42874:	....).K...j.... 
   42884:	z$q&.(|*.,s/.1.2
   42894:	i3.4.4.4)6F7p8.8
   428a4:	<8.7u7 6.4$3.0J/
   428b4:	L-.+.)&(_%U"~.h.
   428c4:	........"...K...
   428d4:	......a...3...".
   428e4:	..S...&.......}.
   428f4:	..r.....&.k.....
   42904:	..........s.C...
   42914:	........x.......
   42924:	f.-.....,...y...
   42934:	@...1.E.Y...@.F.
   42944:	..........p.....
   42954:	m...:.1.....\...
   42964:	u.... ."?&.(Z).*
   42974:	.-|. /.0.2.4n7.8
   42984:	.8.:m:.:.:S:O857
   42994:	.5.3.1...,.+^+.*
   429a4:	.'.$.#+!..i.E...
   429b4:	....z.$.......'.
   429c4:	..`.........H...
   429d4:	Q...I...+.3...v.
   429e4:	t.....^.M.a.]...
   429f4:	..c.$.....<.5.h.
   42a04:	..............t.
   42a14:	..c...n.........
   42a24:	..?.O.3.....8.".
   42a34:	......F.+.A.....
   42a44:	..7.$.F.#.Q!.$I'
   42a54:	.+.-t/.0.0.1.2.4
   42a64:	.6.6.6.7.6=6.6d6
   42a74:	.5.5?3s1.0....(-
   42a84:	?,.+.*.).'d%.". 
   42a94:	..|.l.....d...X.
   42aa4:	\.........x.....
   42ab4:	....F...Z.$.A...
   42ac4:	1.....;.....I...
   42ad4:	T.5.....X.T...e.
   42ae4:	......L.........
   42af4:	#...b.".5.`.M...
   42b04:	g...........d...
   42b14:	..&.......E.....
   42b24:	......o.8.f.Y.~"
   42b34:	{%g'.(.*(,-/.1.1
   42b44:	.1>2t2.2.2.3.3<4
   42b54:	.4(3Q2.1.1=1.0./
   42b64:	.....-.,),.+.).(
   42b74:	.&.$F"......M.6.
   42b84:	..d.D...T.J...n.
   42b94:	....A...f...f.T.
   42ba4:	0...0.....<.....
   42bb4:	..J.....K.....].
   42bc4:	=...F...../.....
   42bd4:	u.....B.......G.
   42be4:	A...E.....l.....
   42bf4:	l.....I...b.....
   42c04:	 ...3.s.V.......
   42c14:	K....._.."`%3'.)
   42c24:	.+...0.2.3.5.7<8
   42c34:	.8.8.7.6x6.5.5U4
   42c44:	?4.3.2.1./...,.*
   42c54:	.(.&.$.#$". ..~.
   42c64:	1.I.............
   42c74:	......s.......J.
   42c84:	".w.&...].N.u.E.
   42c94:	v.D.6...e.......
   42ca4:	..7.......;.....
   42cb4:	....8.x.......(.
   42cc4:	....l......."...
   42cd4:	..,...V.I.....i.
   42ce4:	*.N.p.........].
   42cf4:	$.k.......>.....
   42d04:	.!.$.'d(.).*.,t/
   42d14:	.1.3.6.7.8.9$:i:
   42d24:	.;.;.:.9.8.5.4.4
   42d34:	`3L2.0...-.*.(.&
   42d44:	Z$.!......L.....
   42d54:	..r.....b...9.+.
   42d64:	..,.[...+.....%.
   42d74:	@.........z.....
   42d84:	..P...S.........
   42d94:	m.......l...)...
   42da4:	B...............
   42db4:	....O...@.F.....
   42dc4:	r.[.A.$.V.J.T.0.
   42dd4:	....|.....a.....
   42de4:	M.5...a...J".$9&
   42df4:	)(.).*?,3../.1.3
   42e04:	.5.6'7.7.7{8.8.8
   42e14:	.8p8.8.7:6.4.2.0
   42e24:	.. -l+l)m'z%.#.!
   42e34:	..F.........]...
   42e44:	....r...G.<...f.
   42e54:	..S.e.N.....A...
   42e64:	..8...k.:.3.y.R.
   42e74:	a.t.....x.?.I...
   42e84:	..............9.
   42e94:	................
   42ea4:	......\.........
   42eb4:	..........Y...e.
   42ec4:	......[.......$ 
   42ed4:	.!.#B%('.).*Q,%.
   42ee4:	./.1.2.3$4*4.3.4
   42ef4:	#4.4]4.4.4v4.4n3
   42f04:	.2.2h05/~-R,.+.)
   42f14:	.(]''&h$S". ....
   42f24:	..i.\.....8.x...
   42f34:	......,...|.9...
   42f44:	......Q.6.y...t.
   42f54:	......f.~...=.*.
   42f64:	E...#.&.}.......
   42f74:	......{.......".
   42f84:	........%...7...
   42f94:	x.#.+.......4.P.
   42fa4:	v.....(...x.....
   42fb4:	......i...s t#I&
   42fc4:	.(&+e--/c1E3z4.5
   42fd4:	.6.7Y9.:?:.9.8.7
   42fe4:	.6.5|4J3.1.1./..
   42ff4:	.,^+.)6(.&.$.#.!
   43004:	q ..............
   43014:	O.....Z.".......
   43024:	....}.....2.{...
   43034:	+...s...v...K...
   43044:	].p.......a.U.L.
   43054:	J...}.......>...
   43064:	Z.?.}._.x."...j.
   43074:	................
   43084:	$...-...........
   43094:	>.......W.......
   430a4:	b...r..!y#.%P(.*
   430b4:	6-*0.2T4.5'7.7c8
   430c4:	.9.9!9&9.9.8.8.8
   430d4:	'8.7.6|5.3.140..
   430e4:	.+O).&[$."U...K.
   430f4:	..........w...i.
   43104:	..Q.v...=.....-.
   43114:	......W.;...7.-.
   43124:	7.......).......
   43134:	H............._.
   43144:	....6.......%.n.
   43154:	................
   43164:	......z...|.;...
   43174:	..........O.n...
   43184:	........A.......
   43194:	..[ .".%p(.*u-./
   431a4:	.1\2.3.4k506q6.6
   431b4:	.7.7i8.8.8.8c8r7
   431c4:	u6.4.3x1./.-s+3)
   431d4:	O'.%.#.!}.....?.
   431e4:	>...............
   431f4:	^.H.$.....3.....
   43204:	......j.*.......
   43214:	..l...A.V.......
   43224:	<.c.^.....L.....
   43234:	................
   43244:	....o...........
   43254:	............A...
   43264:	].....0.....+...
   43274:	..........x E#.%
   43284:	+(/*.+X-.../.0{1
   43294:	.1.2x2k2.2.3.3h4
   432a4:	.4.4.4.4.3.2.1.0
   432b4:	./~.,-.+.).(f&b$
   432c4:	9"< ..........W.
   432d4:	..H.\.;.A.i.u...
   432e4:	.... .....b.K...
   432f4:	..?.|...t.......
   43304:	S.c.....a.3...(.
   43314:	....=. .R.......
   43324:	4...-.@.....(...
   43334:	..^.........../.
   43344:	w.1.7.L.j.......
   43354:	S...<.l.....j.C.
   43364:	..x...< ."_%.'3*
   43374:	a,j.S0.2.3^5.6W7
   43384:	u7.7.7(7.6r6.5.5
   43394:	H4?3.1.0}/...,.+
   433a4:	.)7(.&.%>#!!%...
   433b4:	............`.x.
   433c4:	@.!.....y...g...
   433d4:	....].....d.....
   433e4:	..5.......6.....
   433f4:	D.}...,..... .g.
   43404:	..t.,."...|.k...
   43414:	..$...L.%.......
   43424:	....".....I.E...
   43434:	....-.......2...
   43444:	....8.K.1.......
   43454:	.....".%p(.*.,..
   43464:	.0^1.2.3.5.5.6O7
   43474:	k7h7B7q7.7.7.7[6
   43484:	q554.2+1[/q-.+.)
   43494:	.'.%.#.!..{.(...
   434a4:	..]...#.....E...
   434b4:	".............1.
   434c4:	........u.x.F...
   434d4:	&...........{...
   434e4:	V.....=.j...N...
   434f4:	..Q.E.F.......~.
   43504:	......x.#.(.M...
   43514:	..w...........1.
   43524:	..........C.#.$.
   43534:	........R.....=.
   43544:	...!J$#&.(.)p+2-
   43554:	...0c2.4.5!7.8.8
   43564:	.9.8.8(8K7.6>6.5
   43574:	.463.1.0 ..,.).'
   43584:	.%i"..6.........
   43594:	Q.....J.x.......
   435a4:	..H.........g...
   435b4:	....I...R.......
   435c4:	9.c.....,.......
   435d4:	....q.*.........
   435e4:	D...X.....Q...@.
   435f4:	....`...........
   43604:	g.............'.
   43614:	....|.'.{.f.b.[.
   43624:	b.n.=.......e .#
   43634:	.%.'.*.+.-m/.0&2
   43644:	.2.3{4.4.4/5.5.5
   43654:	.4-4.3.2.201J0,/
   43664:	.-.,^+.*.(I'.%.$
   43674:	A"` Q.+.....@...
   43684:	..A.......N.v.'.
   43694:	..8.....5.......
   436a4:	Y.{...=.....9...
   436b4:	....%.........a.
   436c4:	..v.".........).
   436d4:	..I.........4...
   436e4:	....g.|.....0...
   436f4:	+.z.....?.......
   43704:	....s...w.V.l.^.
   43714:	[.g.G.....A".$.&
   43724:	.(.*u,.-B/f0.1.2
   43734:	i3.4.4.4.4.4.4.4
   43744:	04.3.3D261.0..?-
   43754:	.+Y*.(.'.%.#. ..
   43764:	....a.H.2.......
   43774:	k.J...m. .......
   43784:	0.....>.......L.
   43794:	..~.,...........
   437a4:	x...=.....s.....
   437b4:	t.M.....Y.......
   437c4:	..Q.U.^.........
   437d4:	j.9.>.D.1.Q.....
   437e4:	q...[...s.4.....
   437f4:	............h.-.
   43804:	....J...b!.#9&J(
   43814:	g*b,R../M1.2d3e4
   43824:	/5.5.5.6.5.5.4.4
   43834:	n3.2.1.0./B..,.*
   43844:	.)3'G%.#.!q.@...
   43854:	v.y.......C.B.8.
   43864:	........t...v...
   43874:	..".....J.*.....
   43884:	1.Z.....M.....z.
   43894:	..o......... ...
   438a4:	)...........Q.'.
   438b4:	9.n.....g.......
   438c4:	....0.......+...
   438d4:	..h.4.......i.!.
   438e4:	........p.......
   438f4:	....;.M!-#.%.&A(
   43904:	.)U+.,..|/.0.1.2
   43914:	u3.3_4e4.4.353.2
   43924:	.1.1$0./...-.+M*
   43934:	.(.'6%a#.!/...A.
   43944:	m.....8.........
   43954:	..[.......3.....
   43964:	..I.5.......e.(.
   43974:	....{.x...&.....
   43984:	..............z.
   43994:	@...7...4.......
   439a4:	n.........O.....
   439b4:	....:.....p.)...
   439c4:	..p.B.M.(.V.)...
   439d4:	....~.L.......3.
   439e4:	..] .".$.&.(.)L+
   439f4:	I,\-P.'/.0.0V1.1
   43a04:	,2=2B2.2.1.1Q1.0
   43a14:	./...-c,.*.)C(.&
   43a24:	.$G#k!......E.I.
   43a34:	....{.........y.
   43a44:	A...l.......O...
   43a54:	 ...}.E.$...(.D.
   43a64:	_.....D...E.....
   43a74:	..........m.G...
   43a84:	........H...6...
   43a94:	#.w.............
   43aa4:	........r...K...
   43ab4:	].....1.....s...
   43ac4:	....~.|.Z.......
   43ad4:	A..!.#.&!(.*.+.-
   43ae4:	q.s/Z091.1?2.2.2
   43af4:	p2@2.1B1.0.0././
   43b04:	=.t-e,@+.)X(.&.$
   43b14:	$#Y!l.........v.
   43b24:	5...v...c...]...
   43b34:	z...........8...
   43b44:	..P.8...........
   43b54:	G.........k.....
   43b64:	K.A.5...........
   43b74:	<.....Y.@.<.<.w.
   43b84:	......r.&.....L.
   43b94:	..........>...:.
   43ba4:	..v...|...l.....
   43bb4:	g.M.....5.......
   43bc4:	.....".#.%.'.)o+
   43bd4:	.,n../.0.2.2b3.3
   43be4:	.3.3`3.2.2V1j0*/
   43bf4:	.-.,U+.).(.&.%.#
   43c04:	.!>.O.q.s.x.o.Z.
   43c14:	......5.....5...
   43c24:	....s.T.......i.
   43c34:	..`.............
   43c44:	>. .............
   43c54:	..6.D.|...}.d...
   43c64:	..>...J.........
   43c74:	....R.......#...
   43c84:	..%.......".a...
   43c94:	F......."...k...
   43ca4:	b...>.........).
   43cb4:	..( .".$.%.'B).*
   43cc4:	.+.,.-a.././.0.0
   43cd4:	.0.1.0.0n0././..
   43ce4:	.,.+.*y($'n%.#'"
   43cf4:	. Y.............
   43d04:	m.%...i.....:...
   43d14:	........w.>...e.
   43d24:	..............$.
   43d34:	~...e.......q.e.
   43d44:	C.r.....b.......
   43d54:	>....._.}.......
   43d64:	....a...e.......
   43d74:	......S.........
   43d84:	n.....}.......-.
   43d94:	..4...8.....X.q.
   43da4:	. \")$.%.'.(J*U+
   43db4:	j,1-.-~..../D/-/
   43dc4:	./..}./..-.,a,.+
   43dd4:	.*.).(.',&.$.#.!
   43de4:	..........d.u...
   43df4:	..............[.
   43e04:	..u.&...........
   43e14:	....].D.2...W...
   43e24:	..X...z.6...<.d.
   43e34:	..'...N.........
   43e44:	.._.....D.8.F.C.
   43e54:	l.......*.......
   43e64:	....;...N.......
   43e74:	g.v.`.r.4.A.2...
   43e84:	..`.......h.....
   43e94:	.!.#.%.'{)!+.,.-
   43ea4:	..j/./f0.0.0.0.0
   43eb4:	b0.0./?/...-!-D,
   43ec4:	D+.*.(.'.&.$O#.!
   43ed4:	. $.).....}./...
   43ee4:	..v.R.R.....A...
   43ef4:	@.r...z.).......
   43f04:	........E.x.....
   43f14:	..$...z.A.!.....
   43f24:	T...&...p.B.0...
   43f34:	].~.....U.4.J...
   43f44:	....i.L.........
   43f54:	....$.p...N.....
   43f64:	b...:.......Y...
   43f74:	a.).......o.....
   43f84:	. .#:%.'.(o*.+.-
   43f94:	I.`/h011.1.2.2,3
   43fa4:	 3.2.2.2.1.0./..
   43fb4:	.-.+c*.(.&,%=#5!
   43fc4:	[.......Q.k.8...
   43fd4:	..7.........N...
   43fe4:	....}...u....._.
   43ff4:	..7...B.O.2.B.[.
   44004:	|...f...........
   44014:	P.....Y.@.-.a...
   44024:	....o.A.........
   44034:	'.......;.......
   44044:	#.r...z...j...w.
   44054:	....|.....y.....
   44064:	z.....>.........
   44074:	. X".#S%.&)(.).*
   44084:	.,4-".*/.0.0{1.1
   44094:	.2@2.2.1.1.0@0N/
   440a4:	+..,w+.)](.&.$."
   440b4:	. ..........+...
   440c4:	....X.........2.
   440d4:	..^.....:.....d.
   440e4:	............$.<.
   440f4:	}.....^.....l.h.
   44104:	....@.....U.R.].
   44114:	....^.........E.
   44124:	..P.............
   44134:	r.....W.......`.
   44144:	..........G...J.
   44154:	..#.....N.......
   44164:	*!/#.%.&.(f*.,[-
   44174:	.../.0'1.1.1#2#2
   44184:	.1y1.0w0./`/...-
   44194:	.-.,.*.)E(.&S%.#
   441a4:	.!v. ...J.......
   441b4:	|.W./.....w.....
   441c4:	......r.G.D.].v.
   441d4:	d.t.9.$.........
   441e4:	s.s.....0.......
   441f4:	....f...........
   44204:	....^.....y.....
   44214:	..........v.Z.I.
   44224:	g.........L.....
   44234:	..}.Y.)...z.u.K.
   44244:	C.......i.....- 
   44254:	W"z$T&.(.)L+.,=.
   44264:	./.0.1.2`3.3.3.3
   44274:	.3K3.272.1.1.06/
   44284:	...,.+.*.(.&f%.#
   44294:	.!" *. .....k...
   442a4:	..........I.....
   442b4:	..M...i.....w.X.
   442c4:	0.......].;.V...
   442d4:	..P.....i.I.B.a.
   442e4:	....1.......u.k.
   442f4:	k.....].%.......
   44304:	......D.......A.
   44314:	n.~.......T.....
   44324:	..E.......,.....
   44334:	..k.....C...t...
   44344:	.. "k$.&.(.*., .
   44354:	./.0.1.2.3S4.4.5
   44364:	.4.4.4@4.3.3R2.1
   44374:	g0F/.-Z,.*.(.&.$
   44384:	.". ..........F.
   44394:	....N.....%...q.
   443a4:	3.0...Z...|.....
   443b4:	4.../...z.......
   443c4:	..'...8.........
   443d4:	..R...S.........
   443e4:	..:...9.........
   443f4:	+.~...b.......O.
   44404:	......e.....y...
   44414:	........K...w.u.
   44424:	r.9.H.......A...
   44434:	..D!8# %.'.(p*.+
   44444:	A-.../.0.1.2b3.3
   44454:	.4.4.3.3P3.2]2.1
   44464:	.0./...--,.*.(/'
   44474:	T%V#F!%.....d.'.
   44484:	....P.......\...
   44494:	..H...B.y...2...
   444a4:	....K.....e.R.#.
   444b4:	O.v...j.........
   444c4:	..........v.0...
   444d4:	........d.......
   444e4:	P...o.6.........
   444f4:	......*.......N.
   44504:	....b...........
   44514:	..c./.....:...J.
   44524:	..C .".$.&.(f*.+
   44534:	d-.../.0.1.2T3.3
   44544:	V4v4.4A4.3V3.2.1
   44554:	.0./X..,.+0*.(8'
   44564:	.%.#L"{ ......S.
   44574:	..........c.....
   44584:	2.....:...n.....
   44594:	6.....n._.>...$.
   445a4:	..'.I.....Y...S.
   445b4:	........5.....v.
   445c4:	......k.....;...
   445d4:	....q.....h.R.4.
   445e4:	".....&.6.]...6.
   445f4:	..].....d.....X.
   44604:	w.w.[.i.*.....\.
   44614:	..... M#.%.'.).+
   44624:	,-.../.0.1.2.3.3
   44634:	.3.3.4.3.3.363.2
   44644:	.2V1k0J/<..,P+.)
   44654:	.(.&.$.". ......
   44664:	..-...'.....\...
   44674:	........H...>...
   44684:	....$.........|.
   44694:	g...........~.[.
   446a4:	-.8.Y.....p.....
   446b4:	............K...
   446c4:	..........U.....
   446d4:	l.h.....G...x...
   446e4:	..f.(.....6...`.
   446f4:	....k.....r.....
   44704:	1.}......!.$.%.'
   44714:	.)>+.,D../.0.1.2
   44724:	@3.3.3N4u4]4.4.4
   44734:	e3.252B180...-.+
   44744:	.*.(.&.$."......
   44754:	........u.:.....
   44764:	9.....].9.....i.
   44774:	....X.....[...X.
   44784:	,.....Q.....8...
   44794:	............&.Z.
   447a4:	..i.....H...P...
   447b4:	&.....q.......K.
   447c4:	).!...../.=.q...
   447d4:	G.....m./.......
   447e4:	....o.#.....<...
   447f4:	..4...$.c!q#^%H'
   44804:	.(.*.,~-.../.0.1
   44814:	.2.2.2.3$3.3.2.2
   44824:	22.1.1a0./..|-K,
   44834:	.+.).'.&.#.!....
   44844:	....z.R.;.......
   44854:	L..._...F.:.z...
   44864:	......1.....v.7.
   44874:	(.+.........,.y.
   44884:	..k.!.........'.
   44894:	`.....Q...k.....
   448a4:	..........g.....
   448b4:	$.............[.
   448c4:	....M.......;.I.
   448d4:	f.).......T.C...
   448e4:	..].......,"Y$E&
   448f4:	$(.).+.,m../.0.2
   44904:	.2.3S4.4.4.4.4v4
   44914:	 4.3.2"2.1.0..`-
   44924:	.+.*.(.&.$.".!..
   44934:	....v.7.....x...
   44944:	.... ...W.......
   44954:	....t.U.........
   44964:	..........1.Z...
   44974:	..2...'.........
   44984:	Z.....=.....@...
   44994:	..n.........4...
   449a4:	....b...........
   449b4:	..).x...!...\.".
   449c4:	........V.[.?...
   449d4:	......_.&...r .#
   449e4:	`%.'.).+.-%/.0.1
   449f4:	-3.4.4x5.5.6.6.6
   44a04:	.5/5.4.4e3x2a1%0
   44a14:	..L-.+.*u(.&.$."
   44a24:	. ......S.....*.
   44a34:	y...m...........
   44a44:	..&.....`.....~.
   44a54:	l.a.D.......4.|.
   44a64:	................
   44a74:	a.........s.....
   44a84:	4...M...........
   44a94:	..Z.......m.....
   44aa4:	....w...I...../.
   44ab4:	....L.........I.
   44ac4:	....3...i...{...
   44ad4:	/ g".$.&.(y*.,.-
   44ae4:	./d0.1t2b3.4.4.5
   44af4:	.5H5.4.4#4.3.2.1
   44b04:	.0./[..,.+.)G(.&
   44b14:	.$.". j.6.....M.
   44b24:	...._.......{...
   44b34:	B.....y.....d...
   44b44:	........$.......
   44b54:	...... ...b.Z.v.
   44b64:	..k.............
   44b74:	..T...Y.........
   44b84:	`...v.).....#.%.
   44b94:	g.....*.....1...
   44ba4:	........".......
   44bb4:	+...p.6.....<...
   44bc4:	E.k .".$.&T(.)a+
   44bd4:	.,..)/B0.1.122.2
   44be4:	.2.2.2.2.2.2.1.0
   44bf4:	.0./.-.,.+A*.(.'
   44c04:	%&.$.".!........
   44c14:	U.....U....._.$.
   44c24:	..Z.....,.....P.
   44c34:	..G...).........
   44c44:	........&.}...i.
   44c54:	R.Q..."...d.....
   44c64:	......a...^.....
   44c74:	2.w...~.......P.
   44c84:	C.).^.....k...a.
   44c94:	..i...h.....}...
   44ca4:	................
	...

00044ea4 <sample_8_standard_DRUMS_coldglass12wave>:
   44ea4:	.........(....b.
   44eb4:	........x......#
   44ec4:	..a#........=...
   44ed4:	........)#M.....
   44ee4:	y.........n.l.!.
   44ef4:	....j...........
   44f04:	L.m....!N.Q.....
   44f14:	'.T.a...;."..#\.
   44f24:	.!..............
   44f34:	.......(....b...
   44f44:	......x......#..
   44f54:	a#..............
	...

000450a4 <sample_44_standard_DRUMS_sinetick>:
   450a4:	....fz.x.u0rLmng
   450b4:	.`.Y.PQG.= 3:(..
   450c4:	....+...........
   450d4:	......g.........
   450e4:	F.......@.......
   450f4:	..W...s...t.....
   45104:	..k.....~...'(.3
   45114:	c=BGzP.X.`egCm#r
   45124:	.u.xhz.z........
	...

000452a4 <sample_23_standard_DRUMS_paisteping>:
   452a4:	.....$..g..%L..,
   452b4:	..rdi.b.M.......
   452c4:	..~.(.p.........
   452d4:	.$-.e.....<.....
   452e4:	....;.|.......YF
   452f4:	..Y33..?..{..-..
   45304:	.._>...*d.w..<'.
   45314:	?l{......,.....I
   45324:	...N..0.........
   45334:	I...B.i..$_.....
   45344:	....k7..Z...7@y.
   45354:	...**.k.........
   45364:	M.... C....!....
   45374:	<........&}.I.f.
   45384:	............."..
   45394:	...=...+........
   453a4:	.D........v.:...
   453b4:	.:.............8
   453c4:	....311...B.....
   453d4:	...#..........R.
   453e4:	..<.0.Y...;.....
   453f4:	>...q.B...."8...
   45404:	..e.........\.o.
   45414:	%.......}.{...;.
   45424:	......h.e.=.....
   45434:	..H...u.....x...
   45444:	[.<.............
   45454:	1.....j....(_...
   45464:	.&i.>.x ......w/
   45474:	<...9M......o...
   45484:	I.........z.;.B.
   45494:	....d.......</..
   454a4:	....%.......H..B
   454b4:	....`.......Q8}.
   454c4:	....3#q.........
   454d4:	N.....e"|.... ..
   454e4:	....=...c.....H.
   454f4:	..@.l.F!....O...
   45504:	....v...r.......
   45514:	Z.............v.
   45524:	....L..4..+.....
   45534:	t.....<...5.)...
   45544:	..9.....o.:*....
   45554:	..6.F........%w.
   45564:	n.R.R.b.r.y.(.`.
   45574:	 .....l...1.....
   45584:	.......>........
   45594:	..0..!/....J_.0.
   455a4:	.&..l...s.Q.....
   455b4:	..:./.....U.--..
   455c4:	#.Q ............
   455d4:	...'U...r.H....5
   455e4:	....G$..b..6..&.
   455f4:	....D.o1....(.@.
   45604:	s.....3......"..
   45614:	......Z...!.6...
   45624:	..+.......V.m...
   45634:	.'....0.....Y...
   45644:	T...^...Q.#.2.".
   45654:	..X.m...........
   45664:	..........j.H...
   45674:	S!].U.).`...g...
   45684:	.......,....x...
   45694:	w...........g...
   456a4:	q...|..........+
   456b4:	....M 0...)C../.
   456c4:	..............<.
   456d4:	.7..............
   456e4:	S.....o...@.....
   456f4:	..1...|.......d.
   45704:	........&.u...j.
   45714:	x.......q.T.).w.
   45724:	....G....!....).
   45734:	......G.6...P.S.
   45744:	'..."......(..9.
   45754:	e.Z....."...2*..
   45764:	..+.|.f......./.
   45774:	.(....l...,.....
   45784:	T...w...Q..!....
   45794:	....$.;.F.N.....
   457a4:	:.......~.P.c.#.
   457b4:	&.2.P.2!..,.....
   457c4:	..............O.
   457d4:	......&.I.......
   457e4:	.....#j.I.. ,.W.
   457f4:	h.L.p.......<...
   45804:	|......*....( ..
   45814:	....e.....a.=...
   45824:	......A.4.S.....
   45834:	...4*....%..U..&
   45844:	.......$m!......
   45854:	7...V...........
   45864:	.!.....)N.v.....
   45874:	j.n.......f.S...
   45884:	Y...............
   45894:	................
   458a4:	.${....,]..... .
   458b4:	..3...........|.
   458c4:	T...w. .U.f8y.6.
   458d4:	..............h.
   458e4:	W.n....!$.....~.
   458f4:	..&.....q. .....
   45904:	...5......M.8...
   45914:	=......%w.....X.
   45924:	....M.......i...
   45934:	.&..S. .........
   45944:	........&.....u.
   45954:	..............>.
   45964:	........o...[.l.
   45974:	{...6..4\.w.. ..
   45984:	@.i.....].1.].H.
   45994:	..D&......Z.T.K*
   459a4:	....x"#"....v.Z.
   459b4:	....3.....U58...
   459c4:	\.....*.a.......
   459d4:	.........$,....!
   459e4:	M...............
   459f4:	..y.......! ....
   45a04:	u7{.}..,\..!....
   45a14:	..e............0
   45a24:	..........'.....
   45a34:	&........ j.;..'
   45a44:	..@.!.....Y.B...
   45a54:	n....,*.........
   45a64:	H.A.......q.....
   45a74:	......k..)].....
   45a84:	.....&........K.
   45a94:	......D 6.a.-!..
   45aa4:	............?!..
   45ab4:	......j.X.......
   45ac4:	....a...Z...F...
   45ad4:	7.....2.C.....].
   45ae4:	V...`...E.......
   45af4:	....p.F.h.g.a...
   45b04:	f.......~9N.....
   45b14:	X...c!..i.x.....
   45b24:	....(.....'*....
   45b34:	......E.M.......
   45b44:	l.......i.\...5.
   45b54:	...(..........a.
   45b64:	..v.............
   45b74:	9.e.....J.......
   45b84:	..E.\........!H.
   45b94:	..j.........d...
   45ba4:	U.........7.....
   45bb4:	l...0...4.....-.
   45bc4:	A&?...#...k..*a.
   45bd4:	....$.....2,....
   45be4:	..*...~.|.......
   45bf4:	..G.............
   45c04:	b.............5.
   45c14:	.......,..x.....
   45c24:	...('.......7...
   45c34:	..............u.
   45c44:	....6...C...e...
   45c54:	,...P...?.."..k.
   45c64:	..H.O.2.3.......
   45c74:	q.....$.."..]...
   45c84:	 .....v.....3...
   45c94:	%.E.w...B.t.....
   45ca4:	.:.....53./.-.8.
   45cb4:	..:...../.....c.
   45cc4:	........b...-...
   45cd4:	..G.C...3.......
   45ce4:	......F5.....#;.
   45cf4:	m..._......&..'.
   45d04:	.%B.....l.d.....
   45d14:	Q.W.Y.....r...I.
   45d24:	........0.3...@.
   45d34:	....q.......>...
   45d44:	..C.i...".....z.
   45d54:	}.......}.2.....
   45d64:	....T...A.......
   45d74:	..|...o...{.\...
   45d84:	......,.*..#C...
   45d94:	....~"q.v./.....
   45da4:	..u.....i...N.*.
   45db4:	......4.....l.E.
   45dc4:	........$.z...`.
   45dd4:	m.L.............
   45de4:	..........$.H...
   45df4:	j.W...T.S.I.".f.
   45e04:	..P.;...H.Y.....
   45e14:	..H...(.......6.
   45e24:	>..........'..p.
   45e34:	T......2....u...
   45e44:	E.@.........U...
   45e54:	w...........U...
   45e64:	D...x...".....[.
   45e74:	M.........k..%i.
   45e84:	O./.y.......S...
   45e94:	@.o.d.......$.c.
   45ea4:	..S...z....'V...
   45eb4:	U.h.............
   45ec4:	....9.{'..(...i.
   45ed4:	B#H$v.5.........
   45ee4:	....t.F.~...P...
   45ef4:	......y...7...u.
   45f04:	....w.......C...
   45f14:	..g.......m.....
   45f24:	..9.b.......x...
   45f34:	........U.......
   45f44:	..............q.
   45f54:	.#.....9S.D.....
   45f64:	T.....\.'.......
   45f74:	..o...[.......=.
   45f84:	..(.s...........
   45f94:	..........:...].
   45fa4:	......k.q.......
   45fb4:	..?...%.........
   45fc4:	................
   45fd4:	........0...;...
   45fe4:	..J.....u...b...
   45ff4:	x.@...40{.......
   46004:	G...M...i.......
   46014:	W...............
   46024:	..S.....,...u.2.
   46034:	B...=.....!...0.
   46044:	[...[.".0./.....
   46054:	........2.......
   46064:	..........0.\.e.
   46074:	N.#.M...J.v.N...
   46084:	.#..R.9$..+.....
   46094:	..A.D.=.....`...
   460a4:	B...l.M.......t.
   460b4:	....I.......%...
   460c4:	....e.R.......O.
   460d4:	............4...
   460e4:	}.7.z...H.`.....
   460f4:	A...........X..#
   46104:	......%.K.y.....
   46114:	0.=.B.....Q.`...
   46124:	N.p.H.......q...
   46134:	e...............
   46144:	M.....0.....H...
   46154:	......F.....k...
   46164:	......v.>.i.....
   46174:	............c...
   46184:	7...........^...
   46194:	,...o.9.....7...
   461a4:	t.....0.....{...
   461b4:	..?.....d....$..
   461c4:	..=.....@...t..!
   461d4:	(.r...B.L...<...
   461e4:	..K.......y.Y.`.
   461f4:	d.V.....c.......
   46204:	....8.....U.?.H.
   46214:	..S.v...........
   46224:	....E.o...D...s.
   46234:	4.......T.......
   46244:	..........y.....
   46254:	..[.'.f.........
   46264:	......j.[.......
   46274:	e...[.Y.u.".?...
   46284:	@...8.....X...=.
   46294:	..0.i...G.......
   462a4:	..G.....7...D.$.
   462b4:	..J.C.......}.c.
   462c4:	..r.".....}.....
   462d4:	v...p...6.1.J...
   462e4:	\.........f.S...
   462f4:	..H.......C.....
   46304:	m.........r.=...
   46314:	................
   46324:	..(.P...........
   46334:	..`...W.P.@.....
   46344:	........0...C...
   46354:	t...............
   46364:	....x...V.......
   46374:	n.H...&...\.....
   46384:	..........'...#.
   46394:	..s.............
   463a4:	=.$...`.....7...
   463b4:	..O.........h...
   463c4:	..3.......L.....
   463d4:	........I.k...`.
   463e4:	........m.......
   463f4:	...."...m.....L.
   46404:	......2.....:.6.
   46414:	h.............g.
   46424:	:.....S...Q.....
   46434:	k...r...6...z.H.
   46444:	z.......i.o...p.
   46454:	5$).E.....D.t...
   46464:	......J.l.S.....
   46474:	..............G.
   46484:	..........d...'.
   46494:	."..s......!}!..
   464a4:	H.R... ...3.v...
   464b4:	........Q. .P...
   464c4:	..?...=...r.&...
   464d4:	..\.Z...<.v.....
   464e4:	....x.9.X...L...
   464f4:	..f...-...0.V...
   46504:	p...*.L.......P.
   46514:	....~...-.!.*.G.
   46524:	............g...
   46534:	W.s.............
   46544:	B.........,.u...
   46554:	&.r...Q...m.7.,!
   46564:	a.(.m........._.
   46574:	....y...c...J...
   46584:	9.4.Q.........v.
   46594:	..&...........O.
   465a4:	....!...........
   465b4:	......x.$.(...<.
   465c4:	..4...~.....4...
   465d4:	S.............Z.
   465e4:	1.i.......N...e.
   465f4:	........-.L.*.A.
   46604:	.... ...I...(...
   46614:	......*.......\.
   46624:	..-.s.*.8...7...
   46634:	......l.........
   46644:	......G.<.D.....
   46654:	<.........3...X.
   46664:	..N...i...W...?.
   46674:	m...W...g.......
   46684:	........z...b...
   46694:	....+.i.....*...
   466a4:	....(.P.....Q...
   466b4:	x...7...........
   466c4:	........\.....q.
   466d4:	....k...........
   466e4:	........(.......
   466f4:	......g.........
   46704:	..u...........j.
   46714:	p.^...].i.T.Y...
   46724:	c....._.......0.
   46734:	......=.K...K.a.
   46744:	........:.....).
   46754:	e.h.<.........Q.
   46764:	..........2.Y...
   46774:	u...5...........
   46784:	..5.........p...
   46794:	^...C.1.......Y.
   467a4:	................
   467b4:	=.A.........@...
   467c4:	......$...G.....
   467d4:	W.........+...c.
   467e4:	............o.j.
   467f4:	}.......).....7.
   46804:	....S.l.Q...P...
   46814:	..^.V.y.X.....3.
   46824:	..Q.....3.......
   46834:	G..$..<...7. ...
   46844:	....,...........
   46854:	......M.......d.
   46864:	c...N...........
   46874:	..O...K.....;.B.
   46884:	r.!.............
   46894:	........e.o...W.
   468a4:	......H...c.B.].
   468b4:	..A.4.8...c.....
   468c4:	L.-.}.}.....N...
   468d4:	..."].../.Y...q.
   468e4:	`...O...F.......
   468f4:	G.....^.-.u.....
   46904:	@...<.x.p.......
   46914:	r...p.........{.
   46924:	3.......o...|...
   46934:	Y.8...0.9.......
   46944:	....`.......W...
   46954:	..............y.
   46964:	............P...
   46974:	..H.......K...i.
   46984:	..f.!.l.7.......
   46994:	P.........5.....
   469a4:	..).....;...p...
   469b4:	m.....m...].....
   469c4:	G.A.......R.....
   469d4:	..t.........a...
   469e4:	* ..........5...
   469f4:	..;.3.........).
   46a04:	..w.............
   46a14:	"...r.......o.S.
   46a24:	 ...V.........d.
   46a34:	........p...2...
   46a44:	K...9.h...&.....
   46a54:	..........<.....
   46a64:	................
   46a74:	....9.l.....e. .
   46a84:	..c...#.....".~.
   46a94:	..|.............
   46aa4:	....!.....2.m...
   46ab4:	............V...
   46ac4:	..*.............
   46ad4:	....M.M.........
   46ae4:	..)...L.........
   46af4:	..m.!...C....._.
   46b04:	..:...P.....$.=.
   46b14:	........q.X.....
   46b24:	....>.......]...
   46b34:	a.<.....d.b.....
   46b44:	....."..U.s...6.
   46b54:	........P.;.....
   46b64:	v.............}.
   46b74:	....w.K.C.-.i...
   46b84:	......y...w.....
   46b94:	..........'...J.
   46ba4:	....~...d.e.7.+.
   46bb4:	..G.............
   46bc4:	..+...C.9.B...Z.
   46bd4:	..o.............
   46be4:	........w.......
   46bf4:	..........B.....
   46c04:	....3.V.......j.
   46c14:	0.......]...I...
   46c24:	..T.h.L.......$.
   46c34:	......W.j. ...1.
   46c44:	x.#.Z.R...].....
   46c54:	......f.E.....o.
   46c64:	................
   46c74:	6.........W.....
   46c84:	....<...s...8.S.
   46c94:	..[.......k...i.
   46ca4:	u.....".$...A.2.
   46cb4:	......O.........
   46cc4:	y.k.....z...9...
   46cd4:	;...........z...
   46ce4:	..0.....f...+.<.
   46cf4:	E.w.....&.G.....
   46d04:	u.....8.<.A.....
   46d14:	}.e.O...u... .@.
   46d24:	P.I...H.........
   46d34:	....l.N... .....
   46d44:	............?.h.
   46d54:	............9.:.
   46d64:	|.....Q...3.....
   46d74:	....|.v.....y...
   46d84:	....Q.?.....(...
   46d94:	..f.2...W.C.....
   46da4:	..G...<.....t...
   46db4:	l...4...O.w.....
   46dc4:	..O...<.G.z.....
   46dd4:	........~.......
   46de4:	6.A.w.Q.T...?...
   46df4:	..h.....D.!.....
   46e04:	....8...*.q.....
   46e14:	........3.......
   46e24:	..0...........I.
   46e34:	....C...o.V...k.
   46e44:	..*.....V.......
   46e54:	... '...6.......
   46e64:	..i.......R.o.9.
   46e74:	F.........W.....
   46e84:	c./.............
   46e94:	......{.u.4.....
   46ea4:	............q...
   46eb4:	U.............H.
   46ec4:	....>.......i...
   46ed4:	........X.c.....
   46ee4:	..............{.
   46ef4:	....S...G...B...
   46f04:	+.=...u.*.X...-.
   46f14:	6...x.m.........
   46f24:	4...j.....1.....
   46f34:	....J.....Z.U.5.
   46f44:	......*. .....0.
   46f54:	Y.......Z...;.u.
   46f64:	A.}...-.4...!...
   46f74:	=.......$.+.2...
   46f84:	r.......n.....G.
   46f94:	c.G...j.....y...
   46fa4:	..........I.....
   46fb4:	........L.U.....
   46fc4:	{.q...U.........
   46fd4:	P.........h.....
   46fe4:	E...H.........0.
   46ff4:	....}.G...(.c...
   47004:	..&.L.......3...
   47014:	O._.\.......M.X.
   47024:	....x.....r.K.X.
   47034:	o.......e.T...T.
   47044:	4...G...>...Z...
   47054:	1.......s...~...
   47064:	..8.*.......2...
   47074:	......).......o.
   47084:	......L...#.....
   47094:	..........l.H...
   470a4:	l.......o...^.'.
   470b4:	,.......Q.......
   470c4:	..............j.
   470d4:	......0.V.9...x.
   470e4:	....r.O.........
   470f4:	/...k.....&.....
   47104:	......J...d.~...
   47114:	......;.E.F.....
   47124:	................
   47134:	..Z...........(.
   47144:	......v...C.....
   47154:	e...O...........
   47164:	W...........4...
   47174:	b.M.<...<.......
   47184:	#...............
   47194:	u...3.{...W.^...
   471a4:	..+.............
   471b4:	..........D.j...
   471c4:	......0.....:...
   471d4:	............=...
   471e4:	4.P.u...X.....n.
   471f4:	....H...Z.......
   47204:	........&.......
   47214:	..f.6.1.......8.
   47224:	(.:.r.....Q...R.
   47234:	I.\.......m.....
   47244:	..h.A.........L.
   47254:	..@...w...8.=...
   47264:	..S.....U.P.....
   47274:	..r...q.........
   47284:	r.......+...Y.*.
   47294:	..J.V.......1.h.
   472a4:	1.....p...P.o...
   472b4:	E.....s.........
   472c4:	......=.......N.
   472d4:	R...E.....8...~.
   472e4:	f...,...........
   472f4:	..@...>.?.......
   47304:	P...o.....~...X.
   47314:	4...........X...
   47324:	4...........*...
   47334:	....}.^.:...l.].
   47344:	M.....H...[...u.
   47354:	....".H.;.......
   47364:	\...M.....!.v...
   47374:	....y..._.v.....
   47384:	....6...@...=...
   47394:	_.........6.Z.v.
   473a4:	K...&.P.c.......
   473b4:	......e...e.M...
   473c4:	..{...6...'.-...
   473d4:	..............`.
   473e4:	..-.c...T.......
   473f4:	'.K.P.....n.[...
   47404:	......".........
   47414:	b.k.u...y. .....
   47424:	..8.........5...
   47434:	..............K.
   47444:	........u.....K.
   47454:	................
   47464:	......S.a.......
   47474:	....../...l.....
   47484:	....y...........
   47494:	........I.......
   474a4:	z...'...&.....+.
   474b4:	..[.|.C.....r...
   474c4:	c.Z.!.......a...
   474d4:	w.A.......Z.....
   474e4:	......:.b... .;.
   474f4:	P.......E.@.....
   47504:	,.!.f.k...%.....
   47514:	_...&.u.r.....,.
   47524:	....!.6.:.......
   47534:	?.............@.
   47544:	x.J...l.e.....P.
   47554:	......?.......c.
   47564:	..t...y.....\.6.
   47574:	........v.......
   47584:	,.(.}...........
   47594:	....b.....<.~...
   475a4:	V.n.....|.....8.
   475b4:	~.\.....`.......
   475c4:	....8...'.....t.
   475d4:	......o...4.....
   475e4:	..].....y...O.u.
   475f4:	..y...........;.
   47604:	....;...........
   47614:	........].P...[.
   47624:	............E.2.
   47634:	l.......2.......
   47644:	..a...@.../.?.T.
   47654:	..Y._.p.A.y...B.
   47664:	........$.....3.
   47674:	W.......<.#.....
   47684:	......E...H.....
   47694:	..D.....0.u.4...
   476a4:	i...Q...H.J.....
   476b4:	'.M...h.!.....,.
   476c4:	v.-...F.........
   476d4:	..%.....b.....~.
   476e4:	O.B.I.........x.
   476f4:	7.5.|...A.V...g.
   47704:	......?.........
   47714:	..S.".........G.
   47724:	....H.H.........
   47734:	......L...a.....
   47744:	....K...U.Q...|.
   47754:	..u.g.].....Z.=.
   47764:	y...F...t.E.....
   47774:	........$.E.....
   47784:	x.4.............
   47794:	I......... .....
   477a4:	[.......6.K...D.
   477b4:	p.0.........v...
   477c4:	..........D.U.t.
   477d4:	E...............
   477e4:	.. ...=.......s.
   477f4:	E.2.V.P.Z.t.&...
   47804:	.... ...........
   47814:	........:.S.....
   47824:	-.q.........5.P.
   47834:	..u...i...t.]...
   47844:	....i...6...7...
   47854:	........3.N...T.
   47864:	..S.;.n...0.....
   47874:	B.&.............
   47884:	............1...
   47894:	..;.m...........
   478a4:	K.........w.w.@.
   478b4:	....i...........
   478c4:	......{...s.5...
   478d4:	............ ...
   478e4:	..........!.....
   478f4:	X.x.........;...
   47904:	..Q.~.......I.&.
   47914:	_.K...F...;.....
   47924:	....}...9.......
   47934:	..}...c.........
   47944:	..2...$.......\.
   47954:	....X.E.....s...
   47964:	E.B.....<...+.O.
   47974:	q....._.......z.
   47984:	................
   47994:	....~...:.h.u...
   479a4:	..(.............
   479b4:	......U.........
   479c4:	......{.......K.
   479d4:	y...l...0.......
   479e4:	y.b.....8.....p.
   479f4:	....p.r.......<.
   47a04:	..h.....l...Q...
   47a14:	*...:.;.......".
   47a24:	e.Y.d...........
   47a34:	......,.7.......
   47a44:	....W...........
   47a54:	z.....H...g.....
   47a64:	d...C.......@...
   47a74:	..6...R.....P...
   47a84:	^.....b.......y.
   47a94:	..s.........L...
   47aa4:	g.!.y...*.x.....
   47ab4:	E...........p.].
   47ac4:	............u...
   47ad4:	..O.6...H.......
   47ae4:	................
   47af4:	........`...[.q.
   47b04:	......:.........
   47b14:	$.....$... .....
   47b24:	:...v...........
   47b34:	....#...J.......
   47b44:	......K...6.-.T.
   47b54:	........a...G...
   47b64:	....A.....i.(...
   47b74:	..3.......;.....
   47b84:	].T.......6.u...
   47b94:	........z...6.o.
   47ba4:	U.0.......*.....
   47bb4:	..W...........s.
   47bc4:	..............+.
   47bd4:	O.p.....s.p.....
   47be4:	....H.....H.m...
   47bf4:	|.........$.....
   47c04:	..;.y...0.f.....
   47c14:	[.....3.k.Y.....
   47c24:	..........&.....
   47c34:	f.....].@... ...
   47c44:	....2.......a...
   47c54:	..t...T.(.......
   47c64:	............B...
   47c74:	..z...3.c.......
   47c84:	....U.s.....K...
   47c94:	......%.........
   47ca4:	M...G.J...m.....
   47cb4:	....+.j.......[.
   47cc4:	........<.....a.
   47cd4:	....i.v.F.....&.
   47ce4:	....!.......s.X.
   47cf4:	#...).k.....E.7.
   47d04:	A...'...P./.v./.
   47d14:	....?.....!.h...
   47d24:	....z...j.>...N.
   47d34:	j...)........._.
   47d44:	g.6.o...w...i.].
   47d54:	..u.............
   47d64:	/.<.............
   47d74:	..@.d...D...A...
   47d84:	..T.E.......6...
   47d94:	u.;...p.g.V.....
   47da4:	....v.).Y.......
   47db4:	....-.....(.G.6.
   47dc4:	......@.g.7.....
   47dd4:	..}..._...\.....
   47de4:	....^.....).....
   47df4:	..............a.
   47e04:	d...v.......".}.
   47e14:	........l.U...V.
   47e24:	4.c..... .....!.
   47e34:	..........Y.....
   47e44:	....=.&...7...z.
   47e54:	................
   47e64:	..:.......E...B.
   47e74:	?.........\.....
   47e84:	..#.;...;...&.P.
   47e94:	Q.......V.D...:.
   47ea4:	o.............<.
   47eb4:	).M.......m...<.
   47ec4:	..j.j.....=...:.
   47ed4:	....f...........
   47ee4:	....E.>.......H.
   47ef4:	..............~.
   47f04:	..6...\..... ...
   47f14:	K.............[.
   47f24:	..e.N./.`.......
   47f34:	h.].G...........
   47f44:	....1...|.......
   47f54:	....|...........
   47f64:	}.a...Z...2.....
   47f74:	H.........W.a...
   47f84:	U...............
   47f94:	..$.{.....%.c...
   47fa4:	............D...
   47fb4:	..v...........>.
   47fc4:	..t...v.l.......
   47fd4:	..U.............
   47fe4:	......@...6.....
   47ff4:	=...$...N.*.....
   48004:	'.....0.......R.
   48014:	..(.2.....P.....
   48024:	..]...V.n...>.u.
   48034:	..M.....!.......
   48044:	..............p.
   48054:	(...........@...
   48064:	J.....k...4.....
   48074:	....[.........i.
   48084:	c.q.............
   48094:	......|.....Q...
   480a4:	..X...X.W.......
   480b4:	G...............
   480c4:	....%.D.....v.L.
   480d4:	b.....R.........
   480e4:	....2...t.....z.
   480f4:	....g...%...h...
   48104:	B.......~.......
   48114:	..|.?..._.......
   48124:	w.~...E.........
   48134:	..s. .5.`.3.....
   48144:	3.?...,.Z.......
   48154:	0.4.....S.3.....
   48164:	......s...6.C.?.
   48174:	C.............=.
   48184:	......Y.........
   48194:	:.......g...a...
   481a4:	(.....c.[.......
   481b4:	y...2.a.m.......
   481c4:	......q.......-.
   481d4:	....(.5.L.......
   481e4:	..-.f.....|.F.{.
   481f4:	..y.......x.c...
   48204:	..%...u.0.j.....
   48214:	......*.n.B.....
   48224:	..p...&.....)...
   48234:	..............l.
   48244:	........L.....-.
   48254:	>...W.:.....f...
   48264:	....}.b...o...k.
   48274:	....:...A...$.%.
   48284:	3...#...........
   48294:	&.s.x.c.....-.e.
   482a4:	..k.....=.v.....
   482b4:	M.i.....B...5...
   482c4:	......;.........
   482d4:	....,...^.....t.
   482e4:	............(...
   482f4:	i.....{.........
   48304:	k.'.......+...>.
   48314:	......O.[.....t.
   48324:	v...g.....0.d.C.
   48334:	..B...].4.......
   48344:	D...........>...
   48354:	"...N.8...P.....
   48364:	!...)...5.a...9.
   48374:	......,.-.l...J.
   48384:	J.y.............
   48394:	..X.......].....
   483a4:	..y.:...........
   483b4:	..g.............
   483c4:	P...d.....A.c...
   483d4:	T.......M.R.W...
   483e4:	....I.5.......a.
   483f4:	................
   48404:	..).............
   48414:	........$.......
   48424:	..........(.R.j.
   48434:	..5.......\...I.
   48444:	....?.&.....~...
   48454:	d...........y...
   48464:	G...o.v.....?...
   48474:	............F.*.
   48484:	......z.=...v...
   48494:	x.\.s.H.=...z...
   484a4:	....L.*.........
   484b4:	..T.j...(.......
   484c4:	................
   484d4:	'.............A.
   484e4:	=...Z.........D.
   484f4:	......F.t...4...
   48504:	........a.....v.
   48514:	........}.......
   48524:	....D.@.p.......
   48534:	......O.e.]...X.
   48544:	2.......z.......
   48554:	d.........r.`...
   48564:	..........>.s...
   48574:	..X.......x...3.
   48584:	................
   48594:	............X.K.
   485a4:	....c..._.....N.
   485b4:	..6.............
   485c4:	......<.....0...
   485d4:	....0.....O.....
   485e4:	C.......z...y...
   485f4:	....l.8.........
   48604:	..^.......5.?...
   48614:	\.$.....K.....\.
   48624:	..\.....w...K.+.
   48634:	z...L...N.`.$.K.
   48644:	..........".(...
   48654:	..C...`.......[.
   48664:	....^...*.......
   48674:	-.I.......U...Y.
   48684:	h.........h...&.
   48694:	4.....2.J.'./...
   486a4:	..........K.o...
   486b4:	\.........|...O.
   486c4:	........V.q...`.
   486d4:	6.....".h.a.....
   486e4:	..%.7...-.V...).
   486f4:	o.........H.....
   48704:	H.........G...].
   48714:	C...............
   48724:	N.D.K.....L...f.
   48734:	....l.O.O.J.....
   48744:	?.a...=...!...).
   48754:	......R.b.......
   48764:	l.......J.v.....
   48774:	......~...L.....
   48784:	....X...E.z...E.
   48794:	6.......W.......
   487a4:	....c...{.<.....
   487b4:	..%.......C...e.
   487c4:	x.[.......o.....
   487d4:	:...............
   487e4:	T.............|.
   487f4:	......a.......Z.
   48804:	8...s...\.w.9.$.
   48814:	L.....'.z.......
   48824:	_.......M.......
   48834:	..a.....e.c.h.2.
   48844:	f.........S...O.
   48854:	a.....N.z.c...T.
   48864:	..2.....b.......
   48874:	..X...........x.
   48884:	X.......F.-...:.
   48894:	^.L./...-.6.|...
   488a4:	T...........[...
   488b4:	..........6.M...
   488c4:	E.`.....h.......
   488d4:	......9...l...^.
   488e4:	<...c.Y...Z.*...
   488f4:	../.....{.......
   48904:	..............7.
   48914:	....x.\.........
   48924:	..!.....*.......
   48934:	..w.7.....q.....
   48944:	..............c.
   48954:	....S.i.........
   48964:	......N.........
   48974:	..G.b...K.....r.
   48984:	..^.J.....b.....
   48994:	0.X.X...O.....a.
   489a4:	..q.............
   489b4:	5.....N.........
   489c4:	..=.....Z.......
   489d4:	v.Q...g.....`.7.
   489e4:	..V...4.H.+...#.
   489f4:	../.g...@.......
   48a04:	......e.K.......
   48a14:	........p.......
   48a24:	..v.............
   48a34:	..:.......2.....
   48a44:	..........#.....
   48a54:	..........v.B...
   48a64:	......y...../...
   48a74:	..i...k...s.....
   48a84:	a.....f.a.#...+.
   48a94:	g.....G...'...b.
   48aa4:	]...........C...
   48ab4:	E.....Y.........
   48ac4:	..........K...,.
   48ad4:	'...n...z.......
   48ae4:	S.......9.p.(...
   48af4:	........'.......
   48b04:	..d.......e. ...
   48b14:	..I...j.:...m...
   48b24:	5..."...........
   48b34:	..........=.Y...
   48b44:	T.I.%...I.....*.
   48b54:	....J.........{.
   48b64:	....{.O.....W...
   48b74:	....%.....).....
   48b84:	......x.@.....S.
   48b94:	4.........$.....
   48ba4:	o.$.g.#.........
   48bb4:	x.&.....B.....T.
   48bc4:	......)...^...L.
   48bd4:	......0.....h...
   48be4:	....+...[.A.Q.u.
   48bf4:	....&...........
   48c04:	 .j.p.T._...t...
   48c14:	..K...C.......].
   48c24:	..1.........?...
   48c34:	'.+...../.....^.
   48c44:	........X.M...f.
   48c54:	,...(...........
   48c64:	5.......'.....s.
   48c74:	....a.y.....$.U.
   48c84:	F.8.............
   48c94:	..J.........b.<.
   48ca4:	........\.......
   48cb4:	..B.b.......6...
   48cc4:	K.X.d...a...|.+.
   48cd4:	..h.......%.....
   48ce4:	....=...O.....6.
   48cf4:	..:.....K.^.....
   48d04:	B...2.......a...
   48d14:	l.j...[.....6.".
   48d24:	E...,...'.......
   48d34:	..m.........g...
   48d44:	........(.Z...<.
   48d54:	N.......l.B.....
   48d64:	W.w.l.....P.....
   48d74:	..Q.......".N...
   48d84:	....)...{.......
   48d94:	..........Q...v.
   48da4:	....V.......G.Q.
   48db4:	S.......u.......
   48dc4:	..l.....u...o...
   48dd4:	..v.....k.......
   48de4:	c...1...(.......
   48df4:	....9...w.k.W...
   48e04:	n.....S.|./.....
   48e14:	p..._.7...{.....
   48e24:	0.............X.
   48e34:	t.J./.......X...
   48e44:	......\...F.M...
   48e54:	......#.........
   48e64:	........W...r...
   48e74:	....?.d...R.l...
   48e84:	J.i...Q.V.B.S...
   48e94:	....=.......1...
   48ea4:	................
   48eb4:	`...........@...
   48ec4:	..............T.
   48ed4:	{.V.....[...G.`.
   48ee4:	....Q.3.S.=.n.X.
   48ef4:	..x.z.[.+.......
   48f04:	c.......x.......
   48f14:	......2.].e.....
   48f24:	....F...m...~...
   48f34:	E.......,.......
   48f44:	<...E.i.!...F...
   48f54:	......-.W...y...
   48f64:	......K.q.Y...9.
   48f74:	7._. .6.C...a...
   48f84:	~.b.......U.y.}.
   48f94:	l...<.u...x.f.c.
   48fa4:	....=.....4...(.
   48fb4:	............-...
   48fc4:	..(...O.........
   48fd4:	D...p.......|...
   48fe4:	................
   48ff4:	..........O...4.
   49004:	K...F...........
   49014:	......;.R...,.X.
   49024:	4...&.......j.k.
   49034:	..........x.....
   49044:	).......D.....G.
   49054:	......l.p.5.....
   49064:	n...............
   49074:	Z.:...7.t.....V.
   49084:	..m...Z.,.6...%.
   49094:	........!.....Q.
   490a4:	................
   490b4:	-.Z.@.^.......r.
   490c4:	..........Z.....
   490d4:	..$.......i.Q.1.
   490e4:	L.....K.....i. .
   490f4:	........l.......
   49104:	......X...c...g.
   49114:	......*...#.....
   49124:	^...........5.?.
   49134:	........1.~.<.#.
   49144:	..J.......v...0.
   49154:	I.....&.........
   49164:	......h.......j.
   49174:	......?.1.......
   49184:	N...w.*.....0...
   49194:	............../.
   491a4:	................
   491b4:	..H.....Y.....Y.
   491c4:	s.....].........
   491d4:	..w.^.^...R.^...
   491e4:	E.)...#.4.....B.
   491f4:	....Q.$...w.....
   49204:	..{.........e...
   49214:	..i.|.....y.~...
   49224:	+...~.$.......H.
   49234:	......o.u.......
   49244:	..}.............
   49254:	.._.L...........
   49264:	9.....<...}...=.
   49274:	d.:.4.:. .......
   49284:	o.......!.......
   49294:	~.......q.......
   492a4:	....6.].$.......
   492b4:	9.....".......b.
   492c4:	......^.........
   492d4:	~.....r.#. ...C.
   492e4:	....4.........2.
   492f4:	........m.Q.u.:.
   49304:	....M.....;...C.
   49314:	....v.q...0.....
   49324:	..#.#...*.....T.
   49334:	c.4.}.......O...
   49344:	n...@.........4.
   49354:	................
   49364:	(.c.*.|.........
   49374:	....A.....Y.....
   49384:	....>...Y.......
   49394:	.......... .=...
   493a4:	....../.l.....u.
   493b4:	#...Y.........2.
   493c4:	,.........=...;.
   493d4:	:...A.P.........
   493e4:	;...(.....V.....
   493f4:	].t.............
   49404:	t...9.C.........
   49414:	..a.....(.6...y.
   49424:	c.../._.......y.
   49434:	^.....f.6.F.K...
   49444:	........;.D.....
   49454:	9.h.....%.5.....
   49464:	t...V.J...A...W.
   49474:	..........I.S.G.
   49484:	N.........O.<...
   49494:	..8.<.....^.....
   494a4:	......y.....s.,.
   494b4:	..p.|...........
   494c4:	[.......C.......
   494d4:	P.\.............
   494e4:	..O...v......./.
   494f4:	N.I.....].......
   49504:	9.^...........?.
   49514:	p.O.#.....3.u.l.
   49524:	......t.9...6...
   49534:	v...Y.+.B...h...
   49544:	6.....9.u...@...
   49554:	..............<.
   49564:	..u.............
   49574:	<.......d.....].
   49584:	..............\.
   49594:	..I.........w.*.
   495a4:	..r.....|.y...2.
   495b4:	)...............
   495c4:	..s.....b.......
   495d4:	{.....U.....G.!.
   495e4:	..........:.c.!.
   495f4:	r...'.....,.f...
   49604:	....e...5...@.k.
   49614:	'.).......L.....
   49624:	..8.......f.....
   49634:	....&._.^...9.w.
   49644:	..............c.
   49654:	..3.<...:...O...
   49664:	..........9.4...
   49674:	i...m........./.
   49684:	........C.......
   49694:	......C.a...!...
   496a4:	....].....Q...(.
   496b4:	............~.].
   496c4:	@...z.......W.s.
   496d4:	s.J.H.....z.....
   496e4:	D.....w.......~.
   496f4:	..,...Q.........
   49704:	................
   49714:	s.......w.h.~...
   49724:	..b.P.../.-...S.
   49734:	..........a.....
   49744:	+.....C.........
   49754:	............p...
   49764:	........ .....6.
   49774:	*.,...........,.
   49784:	j.....M.].L.....
   49794:	..H.c.....<.....
   497a4:	..7.z.}.e.\.....
   497b4:	..B.L...........
   497c4:	....T.Q...N.M...
   497d4:	C.N.`...s.+.....
   497e4:	..3...3.a.......
   497f4:	.."."...I.~.....
   49804:	*...H...|...M.&.
   49814:	2...b.......0...
   49824:	..<...B.;.R.....
   49834:	..@...].E...5.Y.
   49844:	V...-.....X.!...
   49854:	....t...t.e.w...
   49864:	s.....b.........
   49874:	..<.........x...
   49884:	z.........o...Z.
   49894:	....+.*.m.......
   498a4:	....!.N.........
   498b4:	....T.....i.....
   498c4:	....E...,.......
   498d4:	..d.........L...
   498e4:	........c.o.&.T.
   498f4:	3...........I...
   49904:	....`...e.......
   49914:	....[.........}.
   49924:	........M.......
   49934:	........-...*...
   49944:	........z.......
   49954:	........@.T.Q...
   49964:	............|.1.
   49974:	....K.F.....=...
   49984:	..\.Z."...j...v.
   49994:	q.2.....a.......
   499a4:	..R.Q.&.......y.
   499b4:	H...L.....v.N...
   499c4:	K.f.........,...
   499d4:	..........X.Q...
   499e4:	x...N.(.].L.o.2.
   499f4:	G.........!.J...
   49a04:	..N.C.;.-...w...
   49a14:	!.........i.....
   49a24:	].].k...........
   49a34:	t.........H."...
   49a44:	....A.......p...
   49a54:	,.`...#.=.V.r.6.
   49a64:	t.y.?.....n.Z.Z.
   49a74:	......).C...c...
   49a84:	..b.p....._.....
   49a94:	|...?.,...}...9.
   49aa4:	......p.}.......
   49ab4:	......h.......;.
   49ac4:	#.f.........F...
   49ad4:	..7...........8.
   49ae4:	........2...j...
   49af4:	......?...P.b...
   49b04:	G.....8.......:.
   49b14:	P...Y...Q.1...>.
   49b24:	..a.........5.Q.
   49b34:	....T.......&.<.
   49b44:	'.........$...L.
   49b54:	7.=...).b.......
   49b64:	H...............
   49b74:	..I...B...,.....
   49b84:	..z.c.,...F...$.
   49b94:	................
   49ba4:	........i.H...R.
   49bb4:	h.b.....K.~.....
   49bc4:	....y.Q...~.....
   49bd4:	4...c.........h.
   49be4:	........&...6...
   49bf4:	............~...
   49c04:	....\.Z.........
   49c14:	D...b......._.1.
   49c24:	....d.....C.....
   49c34:	..........9...}.
   49c44:	&...)...@.O.z...
   49c54:	|.f.q.........D.
   49c64:	R.k.P.`.C.....H.
   49c74:	......(.......y.
   49c84:	....D...E.......
   49c94:	M.C.............
   49ca4:	....;.=.R...!...
   49cb4:	........1.o.....
   49cc4:	6.....`..._.....
   49cd4:	6....... .......
   49ce4:	E.`.D.....m.0...
   49cf4:	+.......*.......
   49d04:	f...............
   49d14:	....a...?.......
   49d24:	..E...B...w...M.
   49d34:	....y.h.....;.4.
   49d44:	..7.......o.(...
   49d54:	........f.0.....
   49d64:	......5.X.......
   49d74:	....C...........
   49d84:	 ...........'...
   49d94:	......E.....;...
   49da4:	@.........|...&.
   49db4:	........&.<.....
   49dc4:	....P...].......
   49dd4:	......~...0...".
   49de4:	x.A...o...G...%.
   49df4:	>.....(.........
   49e04:	D.........p.m.y.
   49e14:	T.E...{.........
   49e24:	..+.....:.p.....
   49e34:	........a.....n.
   49e44:	......-...e...K.
   49e54:	A...%.....Y.....
   49e64:	6.....U.V.\.....
   49e74:	........'.......
   49e84:	..a.V.../.:...f.
   49e94:	....v.T./.-.k...
   49ea4:	............0.D.
   49eb4:	..O...C.......M.
   49ec4:	......^.C.......
   49ed4:	..*.:.....Q.....
   49ee4:	|.T.............
   49ef4:	......F...>.[...
   49f04:	h.p.L.S.........
   49f14:	..z.............
   49f24:	y.....+.......p.
   49f34:	#...............
   49f44:	....g.&.^.....2.
   49f54:	P.s.....X.....w.
   49f64:	H.[.....C.'.W.I.
   49f74:	..=.|...g.v.....
   49f84:	........A.-.....
   49f94:	)...U.1.G.../.].
   49fa4:	..........\.....
   49fb4:	..L.......}...z.
   49fc4:	..t.T.*.o...2...
   49fd4:	......B.....0.+.
   49fe4:	3...%...;...e...
   49ff4:	......A.........
   4a004:	w...;.0...?...s.
   4a014:	........l.t.....
   4a024:	..........J.....
   4a034:	..;.8.....b.....
   4a044:	Y.......n.......
   4a054:	4.........@.....
   4a064:	6.......(.......
   4a074:	..........~.....
   4a084:	..f.S.......V.j.
   4a094:	................
   4a0a4:	....^...z.....(.
   4a0b4:	~...[.J.F...'...
   4a0c4:	V...7.9.........
   4a0d4:	)...../.O.......
   4a0e4:	r.....V.M...?...
   4a0f4:	..../...$.......
   4a104:	....1.......0...
   4a114:	......^.H...<...
   4a124:	......E.+...t...
   4a134:	................
   4a144:	..........C. .I.
   4a154:	q.!...........3.
   4a164:	....y...........
   4a174:	..........9.....
   4a184:	"...........x...
   4a194:	......}.........
   4a1a4:	m.p.Y.....c...r.
   4a1b4:	:...0.........l.
   4a1c4:	..e...c.B.......
   4a1d4:	..L.O...........
   4a1e4:	....V...........
   4a1f4:	....J.......f...
   4a204:	x...O...Y...{...
   4a214:	..............<.
   4a224:	....V.....(.J...
   4a234:	..p.....f.....}.
   4a244:	}.W.3...........
   4a254:	....P.=.).3.....
   4a264:	k.y.......Q.....
   4a274:	..m.o.^.....$...
   4a284:	........0.......
   4a294:	..m...r.......n.
   4a2a4:	..........b.|...
   4a2b4:	].s.....0.......
   4a2c4:	..>...D.........
   4a2d4:	..........#.b.n.
   4a2e4:	}.........U.....
   4a2f4:	....R...........
   4a304:	a...n.E.!.*.^.0.
   4a314:	'.....F.J.......
   4a324:	j...'...q.......
   4a334:	..............j.
   4a344:	........&.1.?...
   4a354:	|...........U...
   4a364:	..6.......?.C...
   4a374:	s.E.F.p.....r.>.
   4a384:	H...~.1.}.>.....
   4a394:	R...........u.4.
   4a3a4:	........p.....U.
   4a3b4:	................
   4a3c4:	..a.p...#.......
   4a3d4:	j...........Y...
   4a3e4:	L.......k.z.0...
   4a3f4:	\...F...A...>.P.
   4a404:	....7...........
   4a414:	..!.....|...T...
   4a424:	........R...b...
   4a434:	0...@...a.~.{...
   4a444:	H.....=...|.....
   4a454:	i...........J...
   4a464:	..E.............
   4a474:	....9.....=.9...
   4a484:	....v.7.........
   4a494:	J.....q.u.o.k.o.
   4a4a4:	............|...
   4a4b4:	..f...:.....h...
   4a4c4:	..I.........W.,.
   4a4d4:	......V.........
   4a4e4:	..e.....a.......
   4a4f4:	[.....w.......N.
   4a504:	..1...........`.
   4a514:	......g.p.......
   4a524:	..R...r.(.....1.
   4a534:	W.c...K...y.....
   4a544:	..".-.U.....3...
   4a554:	....4.........a.
   4a564:	s...........P...
   4a574:	@.....<.h...w.5.
   4a584:	`.:.............
   4a594:	......j.j.....A.
   4a5a4:	..........H.H...
   4a5b4:	........}.j.....
   4a5c4:	..Z.............
   4a5d4:	....b.....;.u...
   4a5e4:	..........,.....
   4a5f4:	..;...../.].....
   4a604:	........|.....,.
   4a614:	p.........~...y.
   4a624:	..c.Q.|.i.......
   4a634:	S...c.......^.P.
   4a644:	..............b.
   4a654:	......U.s.......
   4a664:	=.n.....{...'...
   4a674:	$...8.........'.
   4a684:	..3.0.....=.....
   4a694:	..\...........~.
   4a6a4:	i.6.....N.......
   4a6b4:	..............a.
   4a6c4:	..*.y...........
   4a6d4:	..l.......E...z.
   4a6e4:	..........:.....
   4a6f4:	......I...}.*...
   4a704:	I.C.<.i..... .A.
   4a714:	m.#...\.P...7.8.
   4a724:	..T.V.3...k...&.
   4a734:	%.;.i.U...&.....
   4a744:	..............p.
   4a754:	..[...U.........
   4a764:	^...(...........
   4a774:	....g...l.j.M.$.
   4a784:	............B...
   4a794:	8.......#.N.....
   4a7a4:	....k.[.......O.
   4a7b4:	....+...+.p.4...
   4a7c4:	......+.a.....u.
   4a7d4:	..n.....p..._...
   4a7e4:	....;.l.....c...
   4a7f4:	O...............
   4a804:	.... .0.t.#.....
   4a814:	...._.p.q...'...
   4a824:	................
   4a834:	....(...l.%."...
   4a844:	........y.......
   4a854:	....;.........{.
   4a864:	................
   4a874:	[...'.i...X.....
   4a884:	................
   4a894:	......t.......g.
   4a8a4:	..P.y.&.........
   4a8b4:	q...#.j.......u.
   4a8c4:	K...#.Z.......t.
   4a8d4:	0.....W.......D.
   4a8e4:	..>...w.........
   4a8f4:	....!.].u.......
   4a904:	o.B.........I...
   4a914:	..|.<...........
   4a924:	w...`.@.....|.P.
   4a934:	+...[...........
   4a944:	....0...6.q.k.?.
   4a954:	....}.4.a...9.H.
   4a964:	......K.......F.
   4a974:	..e.A.....=.....
   4a984:	Q.X.i.O...g.....
   4a994:	..}.Z.*.'.......
   4a9a4:	d.....'.^...0...
   4a9b4:	#.W...[...S...*.
   4a9c4:	....?.*._.&...6.
   4a9d4:	......h...u.....
   4a9e4:	..Y...).../.<...
   4a9f4:	F.....p.^.......
   4aa04:	....M...+...(...
   4aa14:	......3.....|...
   4aa24:	*.....7.........
   4aa34:	....V.......l.f.
   4aa44:	....Z...K.6.f...
   4aa54:	2.7.....w.D...(.
   4aa64:	.. .&.A.....}.T.
   4aa74:	..g...,.....O...
   4aa84:	..i.............
   4aa94:	..a.`...&...8...
   4aaa4:	U.........`.=...
   4aab4:	..8.....R...S...
   4aac4:	..y.........j...
   4aad4:	............U.}.
   4aae4:	..A.........<...
   4aaf4:	..W.....Q...0.:.
   4ab04:	f.{...2.........
   4ab14:	$.....5.......S.
   4ab24:	(...o.M...O.....
   4ab34:	........k.;.....
   4ab44:	....t.........k.
   4ab54:	....U.3.........
   4ab64:	........V.......
   4ab74:	z...........C...
   4ab84:	............]...
   4ab94:	h.4.....9.....].
   4aba4:	....<.......K.Y.
   4abb4:	........B.......
   4abc4:	C.F...N.'...'.b.
   4abd4:	..........F.....
   4abe4:	k.....@.....[.D.
   4abf4:	8.E.......}...W.
   4ac04:	................
   4ac14:	......>.........
   4ac24:	....@.~.z...m...
   4ac34:	................
   4ac44:	[.G.l...[.......
   4ac54:	$...............
   4ac64:	J.I.....p.G.0.l.
   4ac74:	V.Q.............
   4ac84:	].....7...4.C...
   4ac94:	E...........J...
   4aca4:	....M...G.K.....
   4acb4:	........u...U.C.
   4acc4:	......z...?.....
   4acd4:	..n...q.....)...
   4ace4:	..T.......u.e.!.
   4acf4:	K.x.............
   4ad04:	:.......>.y...f.
   4ad14:	B.....i.........
   4ad24:	........:...;.5.
   4ad34:	7.3.Y.H.........
   4ad44:	....z. .........
   4ad54:	............F...
   4ad64:	....Q...p.1.....
   4ad74:	..........4.....
   4ad84:	x.....".q...Z.u.
   4ad94:	..b.:...........
   4ada4:	........j.;.u...
   4adb4:	&...j...4.......
   4adc4:	&...$.u...~.z...
   4add4:	P.*...........?.
   4ade4:	Z.3.W.%.........
   4adf4:	..8....._...-...
   4ae04:	......].........
   4ae14:	..$...C...b.A...
   4ae24:	.._.......V."...
   4ae34:	................
   4ae44:	..%.......{.....
   4ae54:	..a...<.....s.D.
   4ae64:	F...n...s.......
   4ae74:	......^.[.......
   4ae84:	n.*.....'.&...>.
   4ae94:	..M.x.......*...
   4aea4:	~.....;...".....
   4aeb4:	..T.^...U...{...
   4aec4:	..............p.
   4aed4:	".......q.......
   4aee4:	<...0.......j.N.
   4aef4:	....w.....}.....
   4af04:	..x.......&.4...
   4af14:	................
   4af24:	..$...8.....Y...
   4af34:	....q.].....V...
   4af44:	..".............
   4af54:	..].............
   4af64:	........5.......
   4af74:	S.P...].4.c.....
   4af84:	4.]....._.....(.
   4af94:	........s.....6.
   4afa4:	............H...
   4afb4:	\.a.....b.?.....
   4afc4:	....Q...........
   4afd4:	}.........'.....
   4afe4:	....#.7.n...n...
   4aff4:	......#.x...a...
   4b004:	L.6.............
   4b014:	..f.f.........E.
   4b024:	......p.a...g...
   4b034:	o.#.....{.n.s...
   4b044:	....].$.,.......
   4b054:	......P.........
   4b064:	..'.......<.....
   4b074:	......8.....".+.
   4b084:	l.....6.....{...
   4b094:	....`.*.......(.
   4b0a4:	..p...,...S.....
   4b0b4:	..........l.....
   4b0c4:	..........9.1.f.
   4b0d4:	..f.........~.T.
   4b0e4:	................
   4b0f4:	u...f.....2.....
   4b104:	..........7.....
   4b114:	..y.........;...
   4b124:	....`...M.......
   4b134:	....".`.........
   4b144:	......W...../.l.
   4b154:	..........-...".
   4b164:	........&.....p.
   4b174:	....&...~.W.....
   4b184:	.. .R.....!...d.
   4b194:	Y.........-.....
   4b1a4:	..f.6.'...7.\.l.
   4b1b4:	........:. .L...
   4b1c4:	{...h...5.Y.L...
   4b1d4:	{.M...*.........
   4b1e4:	..........H.....
   4b1f4:	~...|.........P.
   4b204:	......`.;.....x.
   4b214:	....}.N...R.u...
   4b224:	........q.n.....
   4b234:	..<.u...........
   4b244:	........1.&...".
   4b254:	..u.......-...,.
   4b264:	|.....F.......4.
   4b274:	<.........[.....
   4b284:	z.......n.......
   4b294:	d.m.......f.D...
   4b2a4:	........1.......
   4b2b4:	....\.3.).5.....
   4b2c4:	u...B...........
   4b2d4:	..J.7.$.'...2...
   4b2e4:	U.....K.'.......
   4b2f4:	............Y...
   4b304:	X.m...6.....?...
   4b314:	....+.J...K.....
   4b324:	u.....N.......=.
   4b334:	..;.f...N.P.....
   4b344:	-...o...p.u.O...
   4b354:	........K.....i.
   4b364:	p.}.......B.0...
   4b374:	....C......./...
   4b384:	......4.....j...
   4b394:	w.....U.v...B.?.
   4b3a4:	..).......=...7.
   4b3b4:	..>.......s...p.
   4b3c4:	f...w.....-.8...
   4b3d4:	..o.7.....]...X.
   4b3e4:	......M...j...!.
   4b3f4:	....I...4.....Q.
   4b404:	..3...^.........
   4b414:	......O.3.i...C.
   4b424:	E.).........;.1.
   4b434:	].......Z.......
   4b444:	v.[.v...........
   4b454:	!...p...........
   4b464:	....e.l./.....c.
   4b474:	....o...........
   4b484:	{.M.5...".D.....
   4b494:	..N.............
   4b4a4:	....".~.P.......
   4b4b4:	..........4...9.
   4b4c4:	.._....... .j.f.
   4b4d4:	Y.c.z.......Z.@.
   4b4e4:	..d.w.........i.
   4b4f4:	......,...<.R...
   4b504:	m.....2...]...~.
   4b514:	....Q...A.<...F.
   4b524:	......".........
   4b534:	..........J.....
   4b544:	4...{.{...M.....
   4b554:	....8...P...9...
   4b564:	..C.3.J.!.....).
   4b574:	..4...y.p.B...?.
   4b584:	..........y...4.
   4b594:	..O.Y.6.......=.
   4b5a4:	}...H.7...?...K.
   4b5b4:	....!...(.......
   4b5c4:	0...H.X.i.....D.
   4b5d4:	....}.?.a.e.....
   4b5e4:	....8.....!.....
   4b5f4:	..".D.S.w.(.....
   4b604:	)...........3.`.
   4b614:	................
   4b624:	..Q.....u.|.x.u.
   4b634:	V.....).........
   4b644:	1.G...2.......M.
   4b654:	e.............h.
   4b664:	..s.h.u... ...s.
   4b674:	..........:...H.
   4b684:	,.........v./...
   4b694:	..........y.....
   4b6a4:	........U.,.....
   4b6b4:	................
   4b6c4:	....u...........
   4b6d4:	o.....a...}...A.
   4b6e4:	..G.T...].>.b...
   4b6f4:	^.i...........2.
   4b704:	k.R.....I.....q.
   4b714:	>...a...........
   4b724:	..K...D.....c.&.
   4b734:	..-...s.?.......
   4b744:	....&.........8.
   4b754:	..........D.4...
   4b764:	..Y.D...4...j...
   4b774:	e.........}...Q.
   4b784:	..].).........o.
   4b794:	o.K.o.........P.
   4b7a4:	..............|.
   4b7b4:	......(...C...;.
   4b7c4:	..J...&.\.......
   4b7d4:	......8.....h...
   4b7e4:	....f...{.......
   4b7f4:	....W.....z.....
   4b804:	G.V.......)...Y.
   4b814:	..%...;.#...%.0.
   4b824:	..Q.........7...
   4b834:	|...~.F.W.......
   4b844:	:...........3.y.
   4b854:	................
   4b864:	..p.......,.....
   4b874:	*.......3.....|.
   4b884:	J.....g.......6.
   4b894:	......c.q.......
   4b8a4:	..N.2...A.......
   4b8b4:	..V.......@.....
   4b8c4:	....x...p...i...
   4b8d4:	..c...;.......W.
   4b8e4:	....^......._.X.
   4b8f4:	..?...#.........
   4b904:	..b._.%.=...*...
   4b914:	..'.....q.......
   4b924:	Z.M.\.......|...
   4b934:	,.V.........f...
   4b944:	....~.......^...
   4b954:	..:.......6.....
   4b964:	................
   4b974:	..L.W.W.o.......
   4b984:	....N.....*.H.Y.
   4b994:	[.!........./.`.
   4b9a4:	W.K.....N.......
   4b9b4:	......1...E.7...
   4b9c4:	........~.......
   4b9d4:	....1.....9...F.
   4b9e4:	..........M.....
   4b9f4:	..F...........j.
   4ba04:	......8.^.=.,...
   4ba14:	............J...
   4ba24:	......a.........
   4ba34:	..J..... .../.`.
   4ba44:	....q.&...>.R.a.
   4ba54:	..[...v.(...d...
   4ba64:	....$.........@.
   4ba74:	..Q.............
	...

0004baa4 <sample_29_standard_DRUMS_agogolotone>:
   4baa4:	................
   4bab4:	m........./.ZF..
   4bac4:	.aW....M........
   4bad4:	.. ....?7....ep.
   4bae4:	.*&$..aW..K.....
   4baf4:	..\.t...-`.. f..
   4bb04:	Z..6..-&\.I.....
   4bb14:	..$.+7...=<...7C
   4bb24:	+..PS...gE......
   4bb34:	g."..)..{..(...Y
   4bb44:	....[>..*%....a.
   4bb54:	C.....n>u..J....
   4bb64:	s...|@......D..!
   4bb74:	..........e.....
   4bb84:	.T..^..#!.I?,...
   4bb94:	G.w..... ....Y..
   4bba4:	.!....h'%..9..S.
   4bbb4:	,G....|.N.2.`...
   4bbc4:	*..=-..r.....C#.
   4bbd4:	R.<...X.....P...
   4bbe4:	l..dq...C)...M-.
   4bbf4:	..:.... ...$e.WN
   4bc04:	S.%2....5Xh.n>..
   4bc14:	..E.K. .... ...4
   4bc24:	....5g..bHL.....
   4bc34:	...+[..)C.{L/...
   4bc44:	.:...D......I..5
   4bc54:	..............-.
   4bc64:	<G......=..J8.v.
   4bc74:	H.....C.........
   4bc84:	..f...}'........
   4bc94:	..?.L.:.........
   4bca4:	=....._(6.|.W3..
   4bcb4:	..A.d...s.......
   4bcc4:	...'.....@g.e$..
   4bcd4:	......n<........
   4bce4:	n.B......"k.{.P.
   4bcf4:	h.(a..G.A.......
   4bd04:	.):..@...7..`..T
   4bd14:	...%....o.r..$!.
   4bd24:	.0..6%;.X..@]..I
   4bd34:	..d..&X..0......
   4bd44:	J.'...o(...]t...
   4bd54:	:$..}"4.......`.
   4bd64:	..." ..`r.d...P.
   4bd74:	_2...0%...a...M.
   4bd84:	|..2}.\..... 1..
   4bd94:	.5......l......!
   4bda4:	~........,..X:..
   4bdb4:	<.......Z.......
   4bdc4:	....p.....`.1.u%
   4bdd4:	e..,..3.*...&...
   4bde4:	....M...>.1.N..;
   4bdf4:	....i.....a. .s.
   4be04:	C.....{...@*X...
   4be14:	.....)F.I0......
   4be24:	P.]...h.D.......
   4be34:	.+...:..........
   4be44:	K.*.X..%....O...
   4be54:	.8....}.}.o"....
   4be64:	........&.`.Z/1.
   4be74:	(+M.U..7r.......
   4be84:	....I.......;9!.
   4be94:	..@+&.......;...
   4bea4:	a.....'.4(..U.-.
   4beb4:	A..(...... ..!..
   4bec4:	...............(
   4bed4:	......?.<'......
   4bee4:	......F...m.....
   4bef4:	H.W..#.. ...".p.
   4bf04:	E.x...#.k.v.....
   4bf14:	.....-I.....l...
   4bf24:	....J.H.........
   4bf34:	d-....9.........
   4bf44:	....l.O.n.W.. ..
   4bf54:	..#._.....F'.. .
   4bf64:	..........<.i...
   4bf74:	.......(t.....s.
   4bf84:	}.).............
   4bf94:	................
   4bfa4:	....0.........6.
   4bfb4:	Y.J!M....%......
   4bfc4:	G.....x...\....%
   4bfd4:	........;.......
   4bfe4:	..D...y.../.J...
   4bff4:	w.{.......(.x...
   4c004:	..<.2.......u...
   4c014:	b...M...+...M...
   4c024:	7.......&.....E.
   4c034:	..........g.X...
   4c044:	....J...........
   4c054:	k...#.".....6...
   4c064:	......_.....*...
   4c074:	..............z.
   4c084:	..........Y.z...
   4c094:	K.....*..##.....
   4c0a4:	........b.|.....
   4c0b4:	....E.....A.....
   4c0c4:	..Z.U.l.J.v.....
   4c0d4:	(.....8........&
   4c0e4:	........k.b.@.x.
   4c0f4:	.....!......c...
   4c104:	....N...........
   4c114:	......@.......!.
   4c124:	........(.G.v...
   4c134:	......(...T...>.
   4c144:	..x.#.5...c.....
   4c154:	..q.............
   4c164:	y.D.............
   4c174:	O...*.=.t.a.....
   4c184:	......../.......
   4c194:	..J...l...=.$...
   4c1a4:	m.........=...s.
   4c1b4:	......r.....;...
   4c1c4:	....E.B...l.r...
   4c1d4:	Z...@.....y.....
   4c1e4:	t.B.E.B.7.{...;.
   4c1f4:	:.E...../.:.%.b.
   4c204:	....T...I.^.....
   4c214:	i...J.....:...4.
   4c224:	....9./.~.......
   4c234:	....E...0...d...
   4c244:	U.g.`.7...|.&...
   4c254:	..U.F.......n...
   4c264:	............S.U.
   4c274:	....c...........
   4c284:	....6.......R.t.
   4c294:	O...........z.R.
   4c2a4:	....h.....>.....
   4c2b4:	..(...........w.
   4c2c4:	......b...?.....
   4c2d4:	^.......>.@.....
   4c2e4:	....k...^.......
   4c2f4:	..~.............
   4c304:	..t...a.....q...
   4c314:	[...j.........1.
   4c324:	3...\...p...P...
   4c334:	P.......=.....5.
   4c344:	&.;.../.t.j.a...
   4c354:	....u..."...\...
   4c364:	0.......'.y.....
   4c374:	........U...c.R.
   4c384:	..>...~.....D...
   4c394:	 .......s.......
   4c3a4:	......s...T.'.C.
   4c3b4:	F.%.O.<...w.....
   4c3c4:	....0.........p.
   4c3d4:	P.............O.
   4c3e4:	$...O./...=.....
   4c3f4:	V...A.%...~.....
   4c404:	........<...]...
   4c414:	........1.......
   4c424:	u.M.........\...
   4c434:	....k...........
   4c444:	................
   4c454:	d...x.,.......t.
   4c464:	........N."...Q.
   4c474:	#._.q...........
   4c484:	T.C.......1.....
   4c494:	................
   4c4a4:	......c...-.]...
   4c4b4:	).-.............
   4c4c4:	..".V.......c.*.
   4c4d4:	....1.B...]...d.
   4c4e4:	..6.j..... ...x.
   4c4f4:	........w.b...N.
   4c504:	o.......C.c.....
   4c514:	........_.......
   4c524:	..i.............
   4c534:	C.............t.
   4c544:	#.p.O.....*.s.v.
   4c554:	........(.j.....
   4c564:	..Q...3...g.8.B.
   4c574:	0.....v.@.......
   4c584:	....C.....S.>...
   4c594:	................
   4c5a4:	....R.}.........
   4c5b4:	O...........b...
   4c5c4:	j.|.............
   4c5d4:	".....".....!.w.
   4c5e4:	......'.........
   4c5f4:	......i.v.8...;.
   4c604:	l...H...........
   4c614:	..2.D.Y.K.......
   4c624:	....>.$.......k.
   4c634:	..............3.
   4c644:	B...............
   4c654:	....,...D.......
   4c664:	........s.4...j.
   4c674:	................
   4c684:	..[.......Y.|...
   4c694:	......].P.s.$.B.
   4c6a4:	............1...
   4c6b4:	................
   4c6c4:	......v...+.....
   4c6d4:	..a.6.....T.c...
   4c6e4:	....*.l...A.....
   4c6f4:	........=.......
   4c704:	0.n.........L...
   4c714:	................
   4c724:	....}...........
   4c734:	W.S.......Q.L.i.
   4c744:	^...............
   4c754:	..........O.@.J.
   4c764:	2.z...h...S._...
   4c774:	..`.....<.......
   4c784:	......6.........
   4c794:	,...@.....P...U.
   4c7a4:	....o...9.@...-.
   4c7b4:	M.`...........@.
   4c7c4:	....`...........
   4c7d4:	2.D.............
   4c7e4:	....=...-...:.<.
   4c7f4:	....5.....f.....
   4c804:	..........:.....
   4c814:	}.F.q.....Z.....
   4c824:	..6.&...#.....b.
   4c834:	#.b...w.B... ...
   4c844:	..l.../.&.|...;.
   4c854:	t...J.N...1...@.
   4c864:	'...}.....1...7.
   4c874:	....H...........
   4c884:	..8.....g...u.B.
   4c894:	......$.....a.w.
   4c8a4:	5.W.......L.....
   4c8b4:	..........y.C...
   4c8c4:	........C.O.....
   4c8d4:	Z.v.........P...
   4c8e4:	%...........W...
   4c8f4:	....,.......P.6.
   4c904:	..N.c.......q.>.
   4c914:	..........v.....
   4c924:	....4.6...+.....
   4c934:	....{.......I...
   4c944:	..j...|.&.......
   4c954:	|...P.......P...
   4c964:	3.+.............
   4c974:	......z...B...7.
   4c984:	;...........k...
   4c994:	F.3.........=...
   4c9a4:	m.9.\.........K.
   4c9b4:	>...b.}.@...\.@.
   4c9c4:	d.+.............
   4c9d4:	..3...n.l.j.F...
   4c9e4:	....>.....>.M...
   4c9f4:	..}.......W.....
   4ca04:	............L...
   4ca14:	......!.>...-...
   4ca24:	s...........U.H.
   4ca34:	......c.....{.O.
   4ca44:	..Y.N.h...X...T.
   4ca54:	=.{...6...b.....
   4ca64:	..f.............
   4ca74:	..n.9.......=...
   4ca84:	..=...........6.
   4ca94:	......O.D.......
   4caa4:	9.....@.Z...K.2.
   4cab4:	....G...}.......
   4cac4:	).......m.b.....
   4cad4:	..c.............
   4cae4:	....~...........
   4caf4:	=...............
   4cb04:	8...#.b.......T.
   4cb14:	j...b.d...s.:...
   4cb24:	^.(.=.^...,...C.
   4cb34:	....=.l.......U.
   4cb44:	..'.......%.h...
   4cb54:	..............j.
   4cb64:	............I...
   4cb74:	....+.,.....M.N.
   4cb84:	..........W._...
   4cb94:	..........u...B.
   4cba4:	~....._.....X.4.
   4cbb4:	........b.....l.
   4cbc4:	8.@...|...1...x.
   4cbd4:	....$.........2.
   4cbe4:	u.k.....o...*...
   4cbf4:	U.[...........i.
   4cc04:	............x...
   4cc14:	s.....@...m.K...
   4cc24:	c.t...'.........
   4cc34:	..8.%.<.>.....H.
   4cc44:	..w...$...G.....
   4cc54:	m.c.x.3.........
   4cc64:	........<...$...
   4cc74:	..=.j.$.........
   4cc84:	D...!.....k...`.
   4cc94:	....?...........
   4cca4:	..F...-.........
   4ccb4:	{.%...J.[.D.....
   4ccc4:	................
   4ccd4:	........E.T.....
   4cce4:	V...-.....w...s.
   4ccf4:	..F.,.....Y...'.
   4cd04:	................
   4cd14:	/...m.......e.A.
   4cd24:	....J.....,.v...
   4cd34:	U.....c.....(...
   4cd44:	........^.8.....
   4cd54:	....z.......t...
   4cd64:	G...%...G.q.....
   4cd74:	....;...........
   4cd84:	..j.,.......;...
   4cd94:	..H.0.....>.....
   4cda4:	..+.\.#.$...<...
   4cdb4:	+.p...,.......,.
   4cdc4:	Z.......B...^...
   4cdd4:	..K...P.....(...
   4cde4:	....2...m.i.s.q.
   4cdf4:	..........'.{...
   4ce04:	....S.W...i.....
   4ce14:	^.].w.k.=...'...
   4ce24:	2...V.....)...s.
   4ce34:	....|...].......
   4ce44:	..s.........?...
   4ce54:	..............+.
   4ce64:	4...7...=.....E.
   4ce74:	..J.......=.....
   4ce84:	....w.>.i...m.-.
   4ce94:	........o.......
   4cea4:	j.......J.......
   4ceb4:	y...x........._.
   4cec4:	....8.......]...
   4ced4:	(.............%.
   4cee4:	j.......].;.|...
   4cef4:	..z.x.....o.....
   4cf04:	..o.h...........
   4cf14:	$...f.<...[.....
   4cf24:	........F...9...
   4cf34:	..O.<...F.......
   4cf44:	p.,.n.......<...
   4cf54:	....N.......T...
   4cf64:	..V.].;.....(...
   4cf74:	..A.=...).k.h...
   4cf84:	......b...].....
   4cf94:	q.........W.....
   4cfa4:	9.1.....K.......
   4cfb4:	X.*.............
   4cfc4:	................
   4cfd4:	........m.].5. .
   4cfe4:	{.6...U.........
   4cff4:	i.......y.j.....
   4d004:	...... .h.#.....
   4d014:	................
   4d024:	..Y.....}.....4.
   4d034:	......X.7.......
   4d044:	............>.O.
   4d054:	..8.........e.E.
   4d064:	..........?...-.
   4d074:	L.z.....j.v.....
   4d084:	`.v...{.r.......
   4d094:	..=...?.........
   4d0a4:	....m.........b.
   4d0b4:	_.......=.z.....
   4d0c4:	@.....X.....j...
   4d0d4:	..H.).q...P...q.
   4d0e4:	..".].u.....(...
   4d0f4:	..X.w...M.......
   4d104:	....w.......a...
   4d114:	....%...b.#.M...
   4d124:	..#.%.d.A...-.O.
   4d134:	..~.R.......o...
   4d144:	T.....@...p...?.
   4d154:	....y.$.......e.
   4d164:	..v.T.<...-.....
   4d174:	..>.............
   4d184:	C...#...d.=.c...
   4d194:	..<.......".....
   4d1a4:	................
   4d1b4:	..u.Z...2.....v.
   4d1c4:	..........|.....
   4d1d4:	............_._.
   4d1e4:	..c.....c...B.m.
   4d1f4:	>...P...%.......
   4d204:	E...>.....9...w.
   4d214:	....D.....m.<.e.
   4d224:	p.].........2...
   4d234:	....r.j...r.5...
   4d244:	........w.j.....
   4d254:	................
   4d264:	..........g.....
   4d274:	..B.......r.....
   4d284:	....*.=.........
   4d294:	........].......
   4d2a4:	7.....#.........
   4d2b4:	..$.....G...T...
   4d2c4:	......*.|.m.)...
   4d2d4:	......}.c.U.....
   4d2e4:	..9.b...........
   4d2f4:	e.8.......h.L...
   4d304:	|.......5.G...$.
   4d314:	S...........B...
   4d324:	..!...2...s.....
   4d334:	,...H...k.Y.n...
   4d344:	U.5.g.........4.
   4d354:	......x.....w.E.
   4d364:	b. .......1...*.
   4d374:	%.G.......(...&.
   4d384:	..^.S.......t...
   4d394:	..B...........9.
   4d3a4:	O...............
   4d3b4:	8.Y.=.T...V.c...
   4d3c4:	\..."...A.......
   4d3d4:	........8...6.i.
   4d3e4:	0.......f...:...
   4d3f4:	......S.....M.'.
   4d404:	Z.>...j.P.w.3.o.
   4d414:	..t.........R.k.
   4d424:	......=.#.......
   4d434:	J.5.......T.....
   4d444:	..........e.....
   4d454:	"...0...w.m...9.
   4d464:	..x.......p.Y.D.
   4d474:	........J. ...r.
   4d484:	..3...[.d.P.4.o.
   4d494:	......J.v...L.c.
   4d4a4:	J.......(...{...
   4d4b4:	....#.....R...<.
   4d4c4:	5.q.........o...
   4d4d4:	..s.Z.......P.W.
   4d4e4:	..........5.).4.
   4d4f4:	..8...P.........
   4d504:	3.T.....v.......
   4d514:	........}.J.v.S.
   4d524:	..v.............
   4d534:	....H._.........
   4d544:	..............b.
   4d554:	....3.V...J.....
   4d564:	......2.......`.
   4d574:	....u...\...=...
   4d584:	G.........w.....
   4d594:	Z.....=.B.S.....
   4d5a4:	o...L.......V.z.
   4d5b4:	!.|.L...{.6...^.
   4d5c4:	K...<.~.......s.
   4d5d4:	:.............O.
   4d5e4:	4.b... .........
   4d5f4:	........*.2.L.Z.
   4d604:	................
   4d614:	*...n.i.........
   4d624:	..........g.o...
   4d634:	..........^.+.C.
   4d644:	..v......./.g.X.
   4d654:	7...............
   4d664:	..Z.@.....p._.9.
   4d674:	..z...e...=.....
   4d684:	....E...H.......
   4d694:	....)...........
   4d6a4:	e.........u.....
   4d6b4:	w.3.D.m.........
   4d6c4:	).........W.....
   4d6d4:	..m.........B.i.
   4d6e4:	../.....k.......
   4d6f4:	..v...*.c.z.....
   4d704:	G.p.,...........
   4d714:	..g.............
   4d724:	_...y...O.......
   4d734:	....I...........
   4d744:	:.....R.......>.
   4d754:	..+.}.....x.....
   4d764:	.."...e.......S.
   4d774:	......p.K...q.x.
   4d784:	....!...2.......
   4d794:	........!.1.....
   4d7a4:	........b...I.H.
   4d7b4:	........H.......
   4d7c4:	....!.......e...
   4d7d4:	L.M.......%.....
   4d7e4:	2.....'.V...C...
   4d7f4:	4.............S.
   4d804:	|.m.".......O...
   4d814:	................
   4d824:	/...N.....:.....
   4d834:	....)...........
   4d844:	..%.............
   4d854:	..W.............
   4d864:	K.......^...,.F.
   4d874:	1.b...k...A...o.
   4d884:	{.............8.
   4d894:	..h.......q.....
   4d8a4:	7.P.............
   4d8b4:	...... .....d...
   4d8c4:	....H...........
   4d8d4:	......1.G.......
   4d8e4:	;.(.g.9.........
   4d8f4:	............n...
   4d904:	..".............
   4d914:	......3.....r...
   4d924:	....*...t.O.....
   4d934:	`.o.#.U.|.......
   4d944:	....;.....d.d...
   4d954:	Y.T.......x.....
   4d964:	..G.0.F.....p.).
   4d974:	^...o...%.....M.
   4d984:	<.....K.n.......
   4d994:	2.....Y.........
   4d9a4:	..[.m.3.........
   4d9b4:	..........=.....
   4d9c4:	......o.....1...
   4d9d4:	....v...,...X...
   4d9e4:	2...^...........
   4d9f4:	..#...|.........
   4da04:	..K.b.".d.T.....
   4da14:	2.3.......L.....
   4da24:	Y...............
   4da34:	......R...M.....
   4da44:	..o...n.......r.
   4da54:	..7.....c...'.{.
   4da64:	{.I.....d.......
   4da74:	....j...s...&.u.
   4da84:	..u...........,.
   4da94:	..c.v...........
   4daa4:	T.....`.......B.
   4dab4:	..k.>...^.......
   4dac4:	..{.....v...A.Q.
   4dad4:	D.].Q.K.!.c.l.-.
   4dae4:	+.....P...i.h.h.
   4daf4:	f...............
   4db04:	'.{...^.....i.$.
   4db14:	............%.E.
   4db24:	*.c.-...........
   4db34:	........=.......
   4db44:	1.....(.@...1.b.
   4db54:	@.......%.>.....
   4db64:	..n...V.L...=.I.
   4db74:	{.....m.....B.|.
   4db84:	......x.........
   4db94:	....b.O.....Z...
   4dba4:	n.|.h.....8...T.
   4dbb4:	......q.n.i...p.
   4dbc4:	....-.......K.V.
   4dbd4:	...._...-...z.I.
   4dbe4:	Y.P...)...N.;...
   4dbf4:	..i.I.P.A.......
   4dc04:	d.7...........=.
   4dc14:	..............l.
   4dc24:	..{.c...Y.......
   4dc34:	........U.V...Q.
   4dc44:	......p.......m.
   4dc54:	..@.(...........
   4dc64:	....z...).K.....
   4dc74:	..........N."...
   4dc84:	p...............
   4dc94:	....9.O.........
   4dca4:	..........X.....
   4dcb4:	4...............
   4dcc4:	6.....P.........
   4dcd4:	..........#.....
   4dce4:	................
   4dcf4:	................
   4dd04:	........#.......
   4dd14:	..............$.
   4dd24:	................
   4dd34:	................
   4dd44:	................
   4dd54:	................
   4dd64:	................
   4dd74:	................
	...

0004dea4 <sample_39_standard_DRUMS_cabasastrk>:
   4dea4:	............+.1.
   4deb4:	Q.........L.....
   4dec4:	..@.......W.....
   4ded4:	..k...\.........
   4dee4:	*...h.k...u.....
   4def4:	H.............b.
   4df04:	....P.^.../.s...
   4df14:	(.#.....6.......
   4df24:	......P...`...R.
   4df34:	Y.V.6...........
   4df44:	B.....y.c.......
   4df54:	......K.T.=.G.>.
   4df64:	T.C. .....'.+...
   4df74:	5.k.i.3.....<...
   4df84:	............X...
   4df94:	n.;...v...\...z.
   4dfa4:	....(...r...,.m.
   4dfb4:	#.....e...I...:.
   4dfc4:	".......$.......
   4dfd4:	!.......O.......
   4dfe4:	....7.r.......X.
   4dff4:	....r._.H.z.z...
   4e004:	..r.........'...
   4e014:	........f.......
   4e024:	......1.m.......
   4e034:	........=.#%....
   4e044:	..a.m.v..#...$B.
   4e054:	....C...J.....[2
   4e064:	..7!M...........
   4e074:	.....:..}7......
   4e084:	P.u.{..;?.L#....
   4e094:	R...E...Y4....\.
   4e0a4:	...........'..G.
   4e0b4:	Z...`...(.9.....
   4e0c4:	.........F......
   4e0d4:	O...<.%.^..4<...
   4e0e4:	a.U.Y...]+..F2..
   4e0f4:	7...Z.M...#.>...
   4e104:	a.{.....W.....5"
   4e114:	......U...1...F.
   4e124:	A.9.d..*\.......
   4e134:	......L.$.......
   4e144:	})..V..1..&..+..
   4e154:	8..,..0..Q..4..G
   4e164:	......5,[.Xj....
   4e174:	8D..........Y!..
   4e184:	..d.>&....1.....
   4e194:	.6..W.wX...A.&..
   4e1a4:	,B....**..h.g.R.
   4e1b4:	.....6..s.}.V(`.
   4e1c4:	.)....U'..+<..>P
   4e1d4:	...$..T/..}..Dl.
   4e1e4:	FB?.D.....@.....
   4e1f4:	......<...B.9!..
   4e204:	....@.w....1....
   4e214:	......z.......7.
   4e224:	......2.....I)s.
   4e234:	CK.....%..&.C...
   4e244:	...............6
   4e254:	_.L&G..&..%.....
   4e264:	<........7$..)..
   4e274:	8.@._7...0b.7.B.
   4e284:	8.E9a..2D.......
   4e294:	O.....:.....&.+.
   4e2a4:	....+,L..:!.p...
   4e2b4:	+......'@.....a.
   4e2c4:	....a.L.........
   4e2d4:	..Q.......+.W...
   4e2e4:	S.I0............
   4e2f4:	a...S.i.)....,..
   4e304:	...........$t.C7
   4e314:	....-.e'.....*..
   4e324:	...8X...k...x...
   4e334:	..+...m...L.s...
   4e344:	...)....6...%.m.
   4e354:	....."...:..^/..
   4e364:	... F.. ..Y....-
   4e374:	.....?...Eu.w...
   4e384:	...........&4...
   4e394:	..J..._.\.......
   4e3a4:	1.....v...F..=i.
   4e3b4:	.+......H.....`2
   4e3c4:	=...=.....$....-
   4e3d4:	..F..2....O...Q.
   4e3e4:	..}.4....?......
   4e3f4:	t..2L.|5[.....I.
   4e404:	..=...M.........
   4e414:	....[.........<.
   4e424:	<........3..+.O.
   4e434:	....8 ..9.H...V.
   4e444:	.......WT...N.q.
   4e454:	......_..>..5...
   4e464:	o.....|"........
   4e474:	..=.n......,#...
   4e484:	E...4.;4....:3..
   4e494:	2!y... .i.5...f.
   4e4a4:	..(..5.....2..7.
   4e4b4:	N.8.....i...I...
   4e4c4:	..........j&U...
   4e4d4:	1.Y...."J..+....
   4e4e4:	.........>...._.
   4e4f4:	C.#.|0....F..../
   4e504:	D..0...,....8...
   4e514:	)...R!..:.P.....
   4e524:	.........-...)B.
   4e534:	......:.........
   4e544:	....x.n.D...w...
   4e554:	./...#....n.O..9
   4e564:	s.H.. b.v!..L..*
   4e574:	...'......*.\)..
   4e584:	;...j.....+.W...
   4e594:	..S.<...D.W.{.S.
   4e5a4:	....a...........
   4e5b4:	*...Q.z.+.....(.
   4e5c4:	....|.........k.
   4e5d4:	............]...
   4e5e4:	.,....4&....4.\.
   4e5f4:	...&....lJZ."...
   4e604:	I.V....5...Cj.{.
   4e614:	.#..............
   4e624:	A...(.....C...t.
   4e634:	K.N...*.....W...
   4e644:	.-..r.Z.....Q...
   4e654:	r.....R.k.E.... 
   4e664:	d.F.s.1.!.{$..K.
   4e674:	..c.]........'..
   4e684:	.....).........!
   4e694:	....z...........
   4e6a4:	s.r.....E.Q.L..'
   4e6b4:	7..(....B(..F.".
   4e6c4:	......h.........
   4e6d4:	,.............7.
   4e6e4:	Q.(......%Q.."..
   4e6f4:	A...[.D.........
   4e704:	..l.....@.7.....
   4e714:	g...%.g...Q.....
   4e724:	R,........=.x.*.
   4e734:	6.{.e.P...\#S.e.
   4e744:	................
   4e754:	....'...<.......
   4e764:	1...w...../..(#.
   4e774:	^ H....... .l...
   4e784:	..."....t...=...
   4e794:	a.......M.....A.
   4e7a4:	.&..S..$....N...
   4e7b4:	..*.t...$.....q.
   4e7c4:	. ..-.u.......W.
   4e7d4:	............4.Y.
   4e7e4:	..L.....<...v ..
   4e7f4:	......g.......J.
   4e804:	....G.......g...
   4e814:	C...Z...........
   4e824:	R.....9...U.b...
   4e834:	C.....7.:.......
   4e844:	..'.c ..........
   4e854:	....E..%..R.....
   4e864:	............d...
   4e874:	............r...
   4e884:	D.......:.T.....
   4e894:	#.........8.....
   4e8a4:	-.2.f.......F.T.
   4e8b4:	..../...#...A.2.
   4e8c4:	..@.....#.X.....
   4e8d4:	................
   4e8e4:	....b...].;.....
   4e8f4:	..m.Q...........
   4e904:	..........v.....
   4e914:	%...L.....f...A.
   4e924:	I...'.q.].R...i.
   4e934:	@...{.......H...
   4e944:	..g...P.8.]...h.
   4e954:	=.............e.
   4e964:	....$.......u.Q.
   4e974:	........q.J.N...
   4e984:	......*.o.......
   4e994:	......v.W...U...
   4e9a4:	....+...[.......
   4e9b4:	Z.e.....p.....c.
   4e9c4:	..M.R...`...b...
   4e9d4:	h.j...h.-.....&.
   4e9e4:	....s...........
   4e9f4:	6..... .........
   4ea04:	......x.......u.
   4ea14:	..&.....V.:...Y.
   4ea24:	........o.~.$...
   4ea34:	..P.......v.q. .
   4ea44:	....N.@.a.....;.
   4ea54:	..].............
   4ea64:	............p.O.
   4ea74:	`.T.d...1.0.....
   4ea84:	..T... .....]...
   4ea94:	p.=.........0...
   4eaa4:	n.'.........Z.m.
   4eab4:	................
   4eac4:	5.j...<.....@...
   4ead4:	,.........V.....
   4eae4:	S.....|.[.]...,.
   4eaf4:	......Q.J.C.M...
   4eb04:	..e.........'.m.
   4eb14:	....V.X.A.....h.
   4eb24:	4.'.:...d...x...
   4eb34:	................
   4eb44:	d...........`.U.
   4eb54:	R...=.o.L.Y.....
   4eb64:	....w...5...A...
   4eb74:	..y.............
   4eb84:	....+...W.....L.
   4eb94:	R.c...).l.......
   4eba4:	......k.9.......
   4ebb4:	........B.r.`...
   4ebc4:	..c...p.........
   4ebd4:	..j.+...#.......
   4ebe4:	................
   4ebf4:	....]...........
   4ec04:	........T.......
   4ec14:	$.....x.......<.
   4ec24:	..i.....[.m.....
   4ec34:	..z...B.>.9.....
   4ec44:	........d.......
   4ec54:	Q.N.............
   4ec64:	..M...m..._.P...
   4ec74:	^.....%.....%...
   4ec84:	m.#.E.".|.......
   4ec94:	J.2...\.........
   4eca4:	..;.O.......'.#.
   4ecb4:	......Z...#.....
   4ecc4:	..f.w...........
   4ecd4:	q.....t.i.d.....
   4ece4:	4.....f. .......
   4ecf4:	z.....b.p.,.G...
   4ed04:	....t...........
   4ed14:	....w.....L.....
   4ed24:	^.......J...8...
   4ed34:	....a.....I...a.
   4ed44:	7.....a.\...v...
   4ed54:	......\.J.I...O.
   4ed64:	....S...E...f...
   4ed74:	O.....+.l...V...
   4ed84:	%.G.*......."...
   4ed94:	....q...%.Q.....
   4eda4:	u.....|._.).....
   4edb4:	......`.%.....J.
   4edc4:	..........q...^.
   4edd4:	_...]..._...G...
   4ede4:	................
   4edf4:	..........1...2.
   4ee04:	^...*.k.........
   4ee14:	P.=.-.#...a.....
   4ee24:	m.....B.........
   4ee34:	....x.G.........
   4ee44:	........7.....".
   4ee54:	..............>.
   4ee64:	..U.J...1...`.l.
   4ee74:	....v.......#...
   4ee84:	....,.I.8...T...
   4ee94:	..N...w.........
   4eea4:	..4.p......./...
   4eeb4:	....>...9.......
   4eec4:	....i.........1.
   4eed4:	......8...p...).
   4eee4:	........V...)...
   4eef4:	..'...........%.
   4ef04:	..g.../...6.....
   4ef14:	..f.=.'...Y.....
   4ef24:	................
   4ef34:	....G.....[.....
   4ef44:	......n.........
   4ef54:	....,.......a.O.
   4ef64:	b.......B.......
   4ef74:	....O.....I.....
   4ef84:	m... .;...,.#...
   4ef94:	..v.}.>.........
   4efa4:	'...A.....[.....
   4efb4:	..g...$.n.8.....
   4efc4:	-...s.....S.u.s.
   4efd4:	..9...d...l.....
   4efe4:	U...T...(.....P.
   4eff4:	....O.].........
   4f004:	......b.r.Q.....
   4f014:	..x.....l.....7.
   4f024:	..........>.....
   4f034:	".@.X...x...O...
   4f044:	..6...].....p...
   4f054:	....g.......m...
   4f064:	'...p...s...G...
   4f074:	..4.>...>.'.....
   4f084:	X.....1.......z.
   4f094:	..)...........k.
   4f0a4:	..G.............
   4f0b4:	............ ...
   4f0c4:	@.......K.p.T.N.
   4f0d4:	J.{.............
   4f0e4:	.._...>.....L...
   4f0f4:	..Z.............
   4f104:	%...%...........
   4f114:	................
   4f124:	......%.....A...
   4f134:	V.....3.......G.
   4f144:	.......... .....
   4f154:	........n...-...
   4f164:	'...;.......L...
   4f174:	......N...T...B.
   4f184:	.... ...Z...v...
   4f194:	........E.....^.
   4f1a4:	......)...../...
   4f1b4:	..Q...........@.
   4f1c4:	....g...%...L...
   4f1d4:	Z...q.........(.
   4f1e4:	..6.4...E.......
   4f1f4:	6.....*.....8...
   4f204:	../........... .
   4f214:	............ ...
   4f224:	9..... .........
   4f234:	..K.....].....d.
   4f244:	....V.....f.....
   4f254:	,.....@...i...Q.
   4f264:	..S.....=.%.r...
   4f274:	......,...F.....
   4f284:	................
   4f294:	................
   4f2a4:	....(...........
   4f2b4:	................
   4f2c4:	................
   4f2d4:	....9...........
   4f2e4:	..9...,.......(.
   4f2f4:	....^.....=.....
   4f304:	%.......3...*...
   4f314:	..........@.....
   4f324:	).....I.....8...
   4f334:	........F.......
   4f344:	,.....$...A.....
   4f354:	..'.....%.......
   4f364:	................
   4f374:	........2... ...
   4f384:	................
	...

0004f4a4 <sample_34_standard_DRUMS_guiro2>:
   4f4a4:	........_.......
   4f4b4:	.....)..?B.../..
   4f4c4:	J.%...t.......D.
   4f4d4:	....4.......`...
   4f4e4:	h.Z...t.....N...
   4f4f4:	.*s...G.....r...
   4f504:	R...#...7...C.x.
   4f514:	..........!.!...
   4f524:	=.........h.....
   4f534:	A.....U...}.....
   4f544:	....R.F!........
   4f554:	n.i...!.q. .....
   4f564:	......P........:
   4f574:	...t...B..$.....
   4f584:	.P..Io:..{...e..
   4f594:	.Q..D)..J...s.-.
   4f5a4:	......K...+.....
   4f5b4:	k.....O.A.......
   4f5c4:	1.S.9.D. .n.....
   4f5d4:	......4......<..
   4f5e4:	.{K..P......V...
   4f5f4:	..n....+E...p...
   4f604:	7...&.M.L...^.G.
   4f614:	D.~.............
   4f624:	..|.......{.b...
   4f634:	..h.w...........
   4f644:	..N>............
   4f654:	.%..n.\..2......
   4f664:	.. .H.F.........
   4f674:	....l.x.>...2...
   4f684:	^...D.j...Q.P...
   4f694:	....i...N.@.....
   4f6a4:	>...0.....d.....
   4f6b4:	..a33..2..'"....
   4f6c4:	6...............
   4f6d4:	....X.........x.
   4f6e4:	..q...........i.
   4f6f4:	..H.....L.6.0.H.
   4f704:	..x.......8.^.h.
   4f714:	`.l...*.I.......
   4f724:	l.......l...Z...
   4f734:	..}.......J.[.H.
   4f744:	........*.|...E.
   4f754:	..M.....p.u.....
   4f764:	..........:...#.
   4f774:	..6.*.......V...
   4f784:	..........U.T...
   4f794:	l.......6.U...n.
   4f7a4:	..R...\...{...$.
   4f7b4:	z.......f.......
   4f7c4:	..R...k.<.:.l...
   4f7d4:	..............W.
   4f7e4:	D.f...!.>...C...
   4f7f4:	............. <.
   4f804:	P.2.....G.F.$.v.
   4f814:	....v.T.R.......
   4f824:	F.,.....\.(.K...
   4f834:	..V...p.7.2...).
   4f844:	......v.....j...
   4f854:	4.z...F.........
   4f864:	..T.....O.......
   4f874:	................
   4f884:	H.......".l.....
   4f894:	..............j.
   4f8a4:	k.5.....h.......
   4f8b4:	&...............
   4f8c4:	..n...Q...).....
   4f8d4:	).9...#.........
   4f8e4:	......<...`...H.
   4f8f4:	[.H....+..d.....
   4f904:	................
   4f914:	..}.........V...
   4f924:	..R.....$.......
   4f934:	..........x.@./.
   4f944:	....".l.n...D...
   4f954:	x...........r...
   4f964:	................
   4f974:	>...`...........
   4f984:	....T...v.%...6.
   4f994:	w.....L... .z...
   4f9a4:	............k...
   4f9b4:	.. .0...N.......
   4f9c4:	......T.h.x.....
   4f9d4:	..D.....!.R...Y.
   4f9e4:	........>.4.....
   4f9f4:	u.d.....*.}...h.
   4fa04:	.... ..... .....
   4fa14:	..l.b.......N...
   4fa24:	....Z...........
   4fa34:	3.h.....a.u.(...
   4fa44:	......l.D.c...i.
   4fa54:	d...R.........).
   4fa64:	....}.........z.
   4fa74:	X.......j...J.E.
   4fa84:	d.........a.....
   4fa94:	m.........:.....
   4faa4:	......../.......
   4fab4:	..<.....O.......
   4fac4:	......u.........
   4fad4:	............_...
   4fae4:	........T.....B.
   4faf4:	~.........t.....
   4fb04:	....../.q.x...`.
   4fb14:	..s.<.....$.....
   4fb24:	..........G...Y.
   4fb34:	1...x.....d.....
   4fb44:	B.B...F.6.......
   4fb54:	......j.V...j...
   4fb64:	..X.V...j.x.....
   4fb74:	5.....T.M.t.H...
   4fb84:	z.h.l.'.........
   4fb94:	..G...B.........
   4fba4:	......y...P.E...
   4fbb4:	&...............
   4fbc4:	..n.............
   4fbd4:	*...L.P.J! ..)].
   4fbe4:	........2.......
   4fbf4:	... ..z#E.......
   4fc04:	;.....F.C. ...[.
   4fc14:	..Z.`.w.k...t. .
   4fc24:	..b...........7.
   4fc34:	............L...
   4fc44:	L...|.........8.
   4fc54:	......:.........
   4fc64:	D.S...0.........
   4fc74:	.....(..........
   4fc84:	..{..._.^.......
   4fc94:	l.o.8.~.z.2.....
   4fca4:	:...].....h.....
   4fcb4:	f.....@.....V.p.
   4fcc4:	..S.....s.>.w...
   4fcd4:	<...)....."...M.
   4fce4:	H...6...S.......
   4fcf4:	..'.q.0...\.{...
   4fd04:	&.....V.....R.&.
   4fd14:	......r...!.....
   4fd24:	..........)...*.
   4fd34:	..*.F.......s...
   4fd44:	....l.W.......D.
   4fd54:	................
   4fd64:	X.r.?.).....~...
   4fd74:	\...B.8.....V.8.
   4fd84:	....B.....B.~...
   4fd94:	....j.....l.....
   4fda4:	0...s.(.:.......
   4fdb4:	.._..UE..jS..V..
   4fdc4:	.1|.....,......+
   4fdd4:	R..2...0k..+....
   4fde4:	B.....T...q.....
   4fdf4:	..n.....".......
   4fe04:	W.6...K...6...c.
   4fe14:	D.....u...$.*...
   4fe24:	......F.....Q...
   4fe34:	@.N.........r...
   4fe44:	................
   4fe54:	...2..`-s..#..3.
   4fe64:	........d...D...
   4fe74:	....H....... .H.
   4fe84:	........\.f...h.
   4fe94:	j.........*.9...
   4fea4:	......R.......B.
   4feb4:	T.....1.:.b...>.
   4fec4:	....T.....N.....
   4fed4:	............x..-
   4fee4:	-..K9.b?8.....\.
   4fef4:	5.....?.5"d.u)!.
   4ff04:	.'M.............
   4ff14:	l.........:.u...
   4ff24:	..3.......\...2.
   4ff34:	s.........6. ...
   4ff44:	..{.....:.......
   4ff54:	V.......p...\.<.
   4ff64:	....J...".......
   4ff74:	..v.L.Z.x.N.....
   4ff84:	..Q...*.........
   4ff94:	+.d.@...P..... .
   4ffa4:	|...p'|.....<...
   4ffb4:	@.j.........n...
   4ffc4:	....f...........
   4ffd4:	........ ...d...
   4ffe4:	..W.....".`...d.
   4fff4:	r.....].........
   50004:	i.....@.c.@.f...
   50014:	Q.....<.....D...
   50024:	....9...;...t...
   50034:	.*..{7..A%R.....
   50044:	N...R.....X.....
   50054:	....*...........
   50064:	....^.^...X.....
   50074:	......}.........
   50084:	...."...d.......
   50094:	......T.........
   500a4:	Q.L.)...........
   500b4:	..0.(...n.r. .T.
   500c4:	....)...........
   500d4:	<.....u.;.4.-...
   500e4:	........z.....#.
   500f4:	..7...0.........
   50104:	^.".....Z.s.....
   50114:	..........4.h...
   50124:	l...............
   50134:	z.....d...+.....
   50144:	....p.......v...
   50154:	O.....r.....x.G.
   50164:	.. .a.......n...
   50174:	..W......?...;..
   50184:	.%z...........x.
   50194:	d.0...{$k..)..t.
   501a4:	..<.l...........
   501b4:	 ...j...........
   501c4:	C...~.....V.y...
   501d4:	..............u.
   501e4:	........].7.....
   501f4:	......0.5.......
   50204:	............D.g.
   50214:	t........!....b.
   50224:	.#...)+..1..1#F.
   50234:	l.......z.......
   50244:	............l...
   50254:	..e.....R.......
   50264:	1.....z.......9.
   50274:	......#...p.....
   50284:	................
   50294:	...%...)2.8.t...
   502a4:	..H.n...6#...$..
   502b4:	. f...y.~.+...N.
   502c4:	A.n.....I...Q...
   502d4:	....D...{.N.b...
   502e4:	....X.......%.\.
   502f4:	#.............D.
   50304:	......P...8...6.
   50314:	....n.=.....9...
   50324:	...............&
   50334:	F.2.....z.......
   50344:	d...t...J...Q.>.
   50354:	..........%.....
   50364:	....t...........
   50374:	F.....N.a...t...
   50384:	j.....n.k...W.>.
   50394:	x.....T... .....
   503a4:	....n...0...>...
   503b4:	........>.d...y!
   503c4:	...B..(H...D/.J9
   503d4:	.. '........c...
   503e4:	.2..>3...4y.]#..
   503f4:	0.....5.........
   50404:	n...........N...
   50414:	..g...v...F...r.
   50424:	..:...j. .......
   50434:	........T.......
   50444:	....L.`...p...[.
   50454:	..............p.
   50464:	..q.,...K.......
   50474:	..r.F.+...[.....
   50484:	V.....v.@.......
   50494:	..*.........g.%.
   504a4:	X.P...c.........
   504b4:	........z.......
   504c4:	0.sG..E`...\...P
   504d4:	...6#.......!&..
   504e4:	.A<..FY..E...5..
   504f4:	T.w.".....k.D...
   50504:	....M...........
   50514:	. C.....k...j...
   50524:	....*.6...|.....
   50534:	......6.~.m...'.
   50544:	........j..."...
   50554:	............H...
   50564:	....T...........
   50574:	4.l.........%...
   50584:	..x...i...t.l.r.
   50594:	..}.....N.....t.
   505a4:	U.b.............
   505b4:	0.........}.x...
   505c4:	..v.E.q...\.Q...
   505d4:	>.J.....Z.\..)..
   505e4:	a2@..5.../..$,l.
   505f4:	..w.......J..../
   50604:	...&...'..P.....
   50614:	f...............
   50624:	....0.....R.Q...
   50634:	?......... .....
   50644:	................
   50654:	..b.u...........
   50664:	..o.w...........
   50674:	......f.`...)...
   50684:	........../.i...
   50694:	P.....u.........
   506a4:	..9...:.....j...
   506b4:	..N.h...`.T.....
   506c4:	..Z.....H.......
   506d4:	..H.r.u.C)...E..
   506e4:	qE...<.../......
   506f4:	8...~..8...6e..1
   50704:	..."........$...
   50714:	l...?.B.....x.v.
   50724:	......'.......6.
   50734:	....V.......l.G.
   50744:	F...............
   50754:	+.w.......&.d.r.
   50764:	..r...D.Z.......
   50774:	..............1.
   50784:	~.1.K.....j.....
   50794:	..3...v.|.......
   507a4:	....n...g.|.....
   507b4:	......[.E.......
   507c4:	....x...%.N.....
   507d4:	2.v.............
   507e4:	....+.9.&.<...,.
   507f4:	....J...9.".....
   50804:	0.<.............
   50814:	..x.P.t.........
   50824:	....>.......(...
   50834:	&.............t.
   50844:	..{.t.J.<...N...
   50854:	5.`.v.......m.p.
   50864:	9.5.......\.N...
   50874:	....B.h...t...v.
   50884:	....P...V...T.-.
   50894:	..k.......j$..v3
   508a4:	...-...%........
   508b4:	j...3...4!*.>$..
   508c4:	.#y.............
   508d4:	....F...........
   508e4:	>.x.....=.......
   508f4:	......&...&.&...
   50904:	......'.J.......
   50914:	).d.........,...
   50924:	........$.......
   50934:	......>.......^.
   50944:	....G...*.*.../.
   50954:	../...-.....&.&.
   50964:	..<.......`.....
   50974:	`.>...t.....I...
   50984:	..9...).......b.
   50994:	..........8.....
   509a4:	....O.s.....H...
   509b4:	p.?...E.D.......
   509c4:	).e.......j.....
   509d4:	................
   509e4:	......O.B...@.L.
   509f4:	O...V...].}.".P.
   50a04:	............\.v.
   50a14:	 ...........J.R.
   50a24:	....`.....+.....
   50a34:	................
	...

00050aa4 <sample_6_standard_DRUMS_sinetick>:
   50aa4:	....fz.x.u0rLmng
   50ab4:	.`.Y.PQG.= 3:(..
   50ac4:	....+...........
   50ad4:	......g.........
   50ae4:	F.......@.......
   50af4:	..W...s...t.....
   50b04:	..k.....~...'(.3
   50b14:	c=BGzP.X.`egCm#r
   50b24:	.u.xhz.z........
	...

00050ca4 <sample_37_standard_DRUMS_quicadown>:
   50ca4:	......k.........
   50cb4:	....u.t.........
   50cc4:	....I.....R.D.w.
   50cd4:	6...S.....].....
   50ce4:	........@.....M.
   50cf4:	....O.o.\...-.\.
   50d04:	........g.o.....
   50d14:	../...G.....!...
   50d24:	"...E.D.....c...
   50d34:	~.?.........6.e.
   50d44:	T.........G.....
   50d54:	..H.....[.......
   50d64:	y.E.G...e.......
   50d74:	P.........r.1...
   50d84:	......(.........
   50d94:	<......%.'.&.%."
   50da4:	x....... ...c...
   50db4:	......p.f.Z.....
   50dc4:	..[.......J.m.<.
   50dd4:	..../.P.<.....{.
   50de4:	.....#{&.$.". ..
   50df4:	......`.Z.Y.l...
   50e04:	i.....w...m.....
   50e14:	*.L.i.q.........
   50e24:	M.S...[.f.w.(!.+
   50e34:	.2.4.2k.S).#~...
   50e44:	o...M.j.........
   50e54:	........$...X.-.
   50e64:	!...............
   50e74:	)..........&10y4
   50e84:	.2...+n'J!/.@...
   50e94:	..3.L.W...].....
   50ea4:	2...$.,...".....
   50eb4:	8.6.#.......q...
   50ec4:	..k..'.6Y?.B.@.;
   50ed4:	36./.)$!....U.*.
   50ee4:	....+...........
   50ef4:	..m.......G.....
   50f04:	....^.....3...=.
   50f14:	t....9;=~9.4.2..
   50f24:	.'.!N...........
   50f34:	......3.........
   50f44:	s.)...O.G.....B.
   50f54:	..^..........0j?
   50f64:	CG.H'E.?}9.2f,."
   50f74:	Z.-...2...p.....
   50f84:	........V.1.....
   50f94:	6...H.Q...a.n.A.
   50fa4:	2.......I'.6Z@.B
   50fb4:	f=/8.5r2.*.#....
   50fc4:	..H.......7.E.6.
   50fd4:	..f.............
   50fe4:	....=.o...;...b.
   50ff4:	..n  8&H.NbN,J.C
   51004:	.=.6m/.$S.......
   51014:	....Y.......R...
   51024:	!...`...p.......
   51034:	t...........Q.K.
   51044:	./.>.G.HJAi<.:.6
   51054:	u..&..........y.
   51064:	..E.............
   51074:	....#...U...^.s.
   51084:	....6.L....(.ALP
   51094:	.U4S.M-H.B.:}3.&
   510a4:	......'.4.I.M...
   510b4:	O.=.N...t.......
   510c4:	......=.....V...
   510d4:	k......!.7.E.LsI
   510e4:	.A.>.<.8[0.(....
   510f4:	..............q.
   51104:	`.....y...y.....
   51114:	....>...i.Q.....
   51124:	...5.L.X.Y'U.N.H
   51134:	.@y:.1$"....5...
   51144:	....v.{.........
   51154:	0.&.........k...
   51164:	....k.H.7...@..-
   51174:	.B.M.Q.J.B.?.=.6
   51184:	./.%&...3...#...
   51194:	......?.....`.h.
   511a4:	$.L.......!.....
   511b4:	..j.P....'.D.X.`
   511c4:	y^.W.O.Hf@T9.-..
   511d4:	?.H.U.....(.j.x.
   511e4:	....(...........
   511f4:	......&.c.....7.
   51204:	......#;.L.U.T.J
   51214:	.D.Cu>.6......T.
   51224:	..@...#...U.....
   51234:	S...>.....:...o.
   51244:	..6.w...t.z.....
   51254:	.9.TUd.g.b.Z8RKI
   51264:	.A.8.(^.".......
   51274:	o.............@.
   51284:	..m.z.].....?./.
   51294:	..=.......>..03H
   512a4:	.VN[.SLK.G.D.=.6
   512b4:	.*|...g.........
   512c4:	../...q...P.....
   512d4:	................
   512e4:	.......(.J.cum.k
   512f4:	.d.\.T L.Ce6."W.
   51304:	S.;.`.+.........
   51314:	....h...b.......
   51324:	R...............
   51334:	..?(.E.Y.d.`.U.O
   51344:	.K.E.=q4.!....'.
   51354:	u...v...;.....~.
   51364:	..$...e.........
   51374:	B...y.j......!.C
   51384:	.`.p.qek.a.Y.PxH
   51394:	~<.*..\.........
   513a4:	..|...$....._...
   513b4:	..........#.w...
   513c4:	......k.."&B.Y-e
   513d4:	6d.Z.R.M.G|?t6.%
   513e4:	....$.....z.....
   513f4:	..].-...^.8.h...
   51404:	r...r...3.......
   51414:	c...O8,U.g/kWf.^
   51424:	.V.M.El:.+....n.
   51434:	..2.......c.G.G.
   51444:	............s...
   51454:	....f...........
   51464:	.7{N=[W\.T>M.G.B
   51474:	.:.1.$..}.......
   51484:	............n...
   51494:	..q.........N...
   514a4:	b.........D/.HUX
   514b4:	.]AY.R.J.C.<E3.&
   514c4:	..w...5...t.....
   514d4:	a.E...........7.
   514e4:	......&.........
   514f4:	....}../iC.M{NCI
   51504:	:C.>.9.3P++...^.
   51514:	g.......K.......
   51524:	....Z.I.?...7...
   51534:	....;...........
   51544:	.'.<-J.N-KqE.?q9
   51554:	.3.+. ......n...
   51564:	..F...%...B...k.
   51574:	........w.A.....
   51584:	K.p..........+.:
   51594:	`B.A.<.7.3-/v)."
   515a4:	%..... .|.K.....
   515b4:	u...i.....i.5...
   515c4:	....d.......x...
   515d4:	T...|.l&M6.>f@.=
   515e4:	.9.3...)."..)...
   515f4:	....^...........
   51604:	............8...
   51614:	..T.O.~.......s.
   51624:	...&.1n5.3./.,.(
   51634:	.$..o.?.i...g.7.
   51644:	................
   51654:	..J.q...".?.x...
   51664:	..p.......n..#./
   51674:	.3o3.0.,W(.$N.a.
   51684:	..1...........x.
   51694:	<.7.u.......g...
   516a4:	....L.D.....V.n.
   516b4:	..<.U...n#.).*;(
   516c4:	.%8"y.:.h.......
   516d4:	..M.............
   516e4:	Y...............
   516f4:	$.2.........h...
   51704:	..f <&.'.&Y#@ ..
   51714:	6.U.#.......X...
   51724:	T.........(...v.
   51734:	....(...;.....F.
   51744:	..F.....|.".....
   51754:	....n.M.(.......
   51764:	............|...
   51774:	..5.5.h...+.3.o.
   51784:	..h.A.......!...
   51794:	r.r.E.......y...
   517a4:	k.....9.[.....P.
   517b4:	....c.....Y.h...
   517c4:	U.......4.5.7...
   517d4:	y.........3...>.
   517e4:	..z.8.=.......q.
   517f4:	....j.2.........
   51804:	....8.........=.
   51814:	......C.....?...
   51824:	J..._.;.......$.
   51834:	..H.....E...f...
   51844:	......|.........
   51854:	......d.........
   51864:	......:...`.....
   51874:	....e...+.......
   51884:	m.3.'.....N.....
   51894:	......[.V.+.`...
   518a4:	..n.*...........
   518b4:	..........6.i.v.
   518c4:	..c.!.......}...
   518d4:	C.....K.#.....].
   518e4:	....J...........
   518f4:	5.).'...^.......
   51904:	F...............
   51914:	x.......].......
   51924:	..3.....P.;...l.
   51934:	....].Z.......U.
   51944:	#.......2.......
   51954:	................
	...

00051aa4 <sample_2_standard_DRUMS_verbclickwave>:
   51aa4:	....,...;.O.....
   51ab4:	t...A.!.....2...
   51ac4:	..j.9.$.O.......
   51ad4:	................
   51ae4:	g.........G._...
   51af4:	3.^.J...........
   51b04:	....V.......P.B.
   51b14:	....m.........m.
   51b24:	1r..$..&1r..1r..
   51b34:	$.1r$.$.1r1r$.1r
   51b44:	KX$.1r^H..V.1r$.
   51b54:	Y..U$.1r1r..$.1r
   51b64:	5....j.0r.+5:...
   51b74:	...._C..G.+... (
   51b84:	P.#.1ry...=.r..G
   51b94:	..f.."."..`=.G[.
   51ba4:	..OSF.n.*]..$.1r
   51bb4:	.I....;..Ga.E..n
   51bc4:	........@...S<#.
   51bd4:	...J46$...1r....
   51be4:	.eb...1r..$.\n..
   51bf4:	...a..$.|(.*...5
   51c04:	D...1r.....Q..m.
   51c14:	..E5....C.... ..
   51c24:	T..H...1=...9,..
   51c34:	@..F.*m..2..2...
   51c44:	s....@.J..?.9Rl9
   51c54:	..P..4.....)....
   51c64:	.E......w#..+...
   51c74:	....b.Q...R.#...
   51c84:	..7........4e.c.
   51c94:	m!d...A5..?...I2
   51ca4:	..9..G... ...../
   51cb4:	..a...c..E^.Q.0.
   51cc4:	B.8.......p.....
   51cd4:	........:8......
   51ce4:	.....)y.5..O..2.
   51cf4:	K.x ...;P.....).
   51d04:	v.......f*z.z.#!
   51d14:	..............&.
   51d24:	.........)......
   51d34:	......h.....\.X.
   51d44:	...!S.~.....`.K.
   51d54:	..].......".....
   51d64:	...%...........5
   51d74:	....y)..M.K<....
   51d84:	.,..y.......U.A.
   51d94:	..*...........t,
   51da4:	....$.1r(X..1r$.
   51db4:	V.ZEb...1rM.$.1r
   51dc4:	g.$.1r.....:....
   51dd4:	.9..3.A;........
   51de4:	Y.........V...).
   51df4:	..H...1.y.8.....
   51e04:	......U.........
   51e14:	..n.k...{..*..h.
   51e24:	...+..+..+.....L
   51e34:	....I.M.....v..%
   51e44:	B....../..$.....
   51e54:	..3........1....
   51e64:	5,..b.\DD...A5L.
   51e74:	".F(....4..;D.$.
   51e84:	....6.v...7...^.
   51e94:	K...... ..H..!d.
   51ea4:	X.3>.....I.8...6
   51eb4:	(...z$4...0&{...
   51ec4:	.*....zP.....@..
   51ed4:	..8%..s..).'..].
   51ee4:	..5...\...L.....
   51ef4:	................
   51f04:	. [.S...;.....A.
   51f14:	......U*o.L.....
   51f24:	@...........U.R.
   51f34:	..j...d..!......
   51f44:	..............E.
   51f54:	...._)..........
   51f64:	......V...J.....
   51f74:	...'....x...M...
   51f84:	.....'D.\.v.../(
   51f94:	....].O...b.',V.
   51fa4:	......$.....>...
   51fb4:	........a.......
   51fc4:	........O...=...
   51fd4:	................
   51fe4:	..C.............
   51ff4:	a...*...........
   52004:	..|.~.\.....|...
   52014:	#...y.....a.O...
   52024:	'.......~.....V.
   52034:	../.j.......X...
   52044:	..W...@.(.......
   52054:	....../.#.......
   52064:	v...D.#.c.c...&.
   52074:	............L.T.
   52084:	....~.....|...8.
   52094:	..+.............
   520a4:	L.....*.t.!.a'..
   520b4:	..M.......,.:.t.
   520c4:	p.........X.".G.
   520d4:	........k.....c.
   520e4:	>.....J.......v.
   520f4:	v...'.....^.6.R.
   52104:	........G.......
   52114:	..6.......n.....
   52124:	{.....L...[. .<.
   52134:	W.......'.O.....
   52144:	........1.a.....
   52154:	..r.......K.N...
   52164:	..(.z...".......
   52174:	,.#...a.J.V.....
   52184:	..........b.....
   52194:	o...6.j.........
   521a4:	n...............
   521b4:	....!.}. .0.....
   521c4:	e.........$.|...
   521d4:	..R./.......9...
   521e4:	..^...,.........
   521f4:	........J.].....
   52204:	..........i.\...
   52214:	..e...?.....L...
   52224:	..H.v.F.A.%...>.
   52234:	X.........!.-...
   52244:	#.'...F.......].
   52254:	G.t...).....*...
   52264:	....l.......8.=.
   52274:	.._...........0.
   52284:	P.........].....
   52294:	x.........o.y.g.
   522a4:	......@.........
   522b4:	......J.........
   522c4:	p...'...'.L...".
   522d4:	....<...o...i...
   522e4:	D.........x.....
   522f4:	..).j.......[.w.
   52304:	..|...........].
   52314:	..N.z...?.......
   52324:	......9...L.....
   52334:	..j.............
   52344:	..d.T.T...<...!.
   52354:	..b.............
   52364:	..D.I.........E.
   52374:	G...y.....k.%...
   52384:	Z.....}.......".
   52394:	..i..._.f.t...>.
   523a4:	........../...i.
   523b4:	$.(...~.........
   523c4:	..q...........p.
   523d4:	5.G.......K.s...
   523e4:	..~.h.D.........
   523f4:	S.d.....A...q.*.
   52404:	7.r.8...........
	...

000524a4 <sample_5_standard_DRUMS_stix>:
   524a4:	....*...Ka.../..
   524b4:	....i9hi...@..]>
   524c4:	,.^.~....:..K...
   524d4:	W..R)...h....&{.
   524e4:	nB\.!../..A.x..9
   524f4:	..J....<.....(..
   52504:	F....-........l=
   52514:	......k.i)....3.
   52524:	.Z....1 {...$..(
   52534:	c.....1..p....IG
   52544:	q.(.\.....x.z5Y.
   52554:	..m...`(..wG....
   52564:	fn6.B.!.. .;(...
   52574:	.A_...`&."..w..8
   52584:	..S..M..........
   52594:	...pE.g..'..P..W
   525a4:	..K8.....W..(>..
   525b4:	.C....gG..H.K.l0
   525c4:	......)DM.(E....
   525d4:	.9..~..../...)..
   525e4:	.7n...N`..~.....
   525f4:	iO^..(h...B.....
   52604:	..!...O4..j..../
   52614:	..W...7L...*....
   52624:	p..,.=V.z....]..
   52634:	r...)..*U.. ....
   52644:	.U..P......+L..*
   52654:	J....+........L0
   52664:	..O.N.z....5."..
   52674:	..;5..O.....t.&.
   52684:	.>......cBN*....
   52694:	.$#..;....<.s!..
   526a4:	_.g../.#.. .....
   526b4:	F..p......B..C..
   526c4:	O...,..-..2.5..*
   526d4:	......... ].....
   526e4:	...(....).../T..
   526f4:	. ......Y$......
   52704:	,.......e..)H"..
   52714:	..I.n...G.o...S.
   52724:	m......+...F5...
   52734:	........7'b.K0".
   52744:	n...+.p.g2..X.3.
   52754:	.*..x..X..H.P.. 
   52764:	.....F.#..9.`...
   52774:	d...."....Q.....
	...

000528a4 <sample_14_standard_DRUMS_hatopenms>:
   528a4:	....>.."\.r.S.Y.
   528b4:	...-z.qJe....(..
   528c4:	...7..N.f....%..
   528d4:	..b.y1{...m.....
   528e4:	w%....6.v.>C....
   528f4:	l K..+g...k)....
   52904:	..&...r@.....$,.
   52914:	....3.H...f...`.
   52924:	..q9...z"..&....
   52934:	.-...........#..
   52944:	.5..I@N....?1...
   52954:	F.... !.......B.
   52964:	..........l.."v.
   52974:	.....T..&=...I(.
   52984:	.<C.U...z.....1.
   52994:	G....8..m.......
   529a4:	w.^.......'..6=.
   529b4:	......F9...N....
   529c4:	....Z..!...?8...
   529d4:	......%+..H"....
   529e4:	;...0.0.r..=...\
   529f4:	..o.....W...h...
   52a04:	.;L.N........)..
   52a14:	.&(.......g.....
   52a24:	.%.........Y...,
   52a34:	......7.......#.
   52a44:	7.1...X.|...:._.
   52a54:	.+.........'...2
   52a64:	.."..1Z...^E....
   52a74:	t.O.....;.....\2
   52a84:	....1.f../....).
   52a94:	P.......1.Rh..7@
   52aa4:	v.V.............
   52ab4:	........M.....g.
   52ac4:	z9..t.j...D.....
   52ad4:	..U.......O..'..
   52ae4:	1S;..!J./.......
   52af4:	..x.j'......7...
   52b04:	..^.. .........3
   52b14:	`...:......!....
   52b24:	a.)...!.........
   52b34:	\.<...W.e'......
   52b44:	..F...?.a.......
   52b54:	..........|.....
   52b64:	..f.....v.+.....
   52b74:	.....$..A7..R.-.
   52b84:	....>...Q..>Z.OH
   52b94:	..f-..d.........
   52ba4:	f"#../....pB..IX
   52bb4:	D.29..Z.s...O.J.
   52bc4:	..%%[.........].
   52bd4:	v.......W.'..._.
   52be4:	.!S.......>.U...
   52bf4:	{........(:.k.-.
   52c04:	...?......6.B..0
   52c14:	1.8%[...i...e...
   52c24:	:.........P.g..$
   52c34:	p.... \.*2T.40F.
   52c44:	"...........i...
   52c54:	{...E...n.......
   52c64:	t.C.....\./.....
   52c74:	0.p...P. .=.).."
   52c84:	q.Y.y.E.........
   52c94:	f...r;...7r....!
   52ca4:	,...:.l..I..u...
   52cb4:	.....:p.........
   52cc4:	....`.W...A.E...
   52cd4:	_.........L.BB..
   52ce4:	....5........2..
   52cf4:	S.D$..Q!......W.
   52d04:	~.j....$...(....
   52d14:	...._.......E.k.
   52d24:	z..:_..Qi..!+.H.
   52d34:	o...!...........
   52d44:	z...H..2......f.
   52d54:	8.w.7.......d...
   52d64:	..r.:/..r1s.h...
   52d74:	e........'....m.
   52d84:	M.r.............
   52d94:	C../...!;.4.....
   52da4:	Y.........;.....
   52db4:	e..*{.e".....$..
   52dc4:	b..-....f.T.....
   52dd4:	4..*v.t..#...1..
   52de4:	.!K.i.."........
   52df4:	4...m...&...."..
   52e04:	.)K.......D..?..
   52e14:	.<'..=.../......
   52e24:	...+..s.....4.1"
   52e34:	x...q.Z.A...q...
   52e44:	o......@9..G..o.
   52e54:	..K.. ..(.....I.
   52e64:	..Y....F/.KV".. 
   52e74:	t.A%...8....i#..
   52e84:	M-...../..0.....
   52e94:	0...#.C.........
   52ea4:	9.I..#...,..k.6.
   52eb4:	..F }.[...d..A..
   52ec4:	.......7....@...
   52ed4:	D....../........
   52ee4:	............>.d.
   52ef4:	........0...B.f$
   52f04:	N..1....-.....U.
   52f14:	..o..*....R2....
   52f24:	....,.........x.
   52f34:	(........"U.t.9.
   52f44:	. ......;0G.....
   52f54:	.0...*>...r.g...
   52f64:	..........3<...?
   52f74:	........x.......
   52f84:	#/m..$....*AE.m.
   52f94:	h*....}.....!. .
   52fa4:	^...,..7-.[...<.
   52fb4:	..].....o.~.....
   52fc4:	......./u..3..S.
   52fd4:	.5....?..'\..$..
   52fe4:	.1@.G.*.X.)9....
   52ff4:	..........W.....
   53004:	.>..... ..j...n.
   53014:	G...n...|.="....
   53024:	j.* a.d.........
   53034:	......?.(...d..T
   53044:	...8...+....p...
   53054:	E.....}.......P.
   53064:	........).....o.
   53074:	.)......r.....Z.
   53084:	.....,......R...
   53094:	f...>.9.....j...
   530a4:	......#.....y.[.
   530b4:	....r...U.....V.
   530c4:	..........n...v.
   530d4:	..Z6....;.......
   530e4:	...$..1(....>.e.
   530f4:	c.W.P.........{ 
   53104:	..v.......h.b...
   53114:	........|.......
   53124:	........i.V...[.
   53134:	9.r..%.....&`...
   53144:	t*q.G@..........
   53154:	B.H.4 ..g&...$..
   53164:	......T....#..(6
   53174:	..d...%.......y.
   53184:	'......!/..)..!.
   53194:	2.A.....)@].'Y..
   531a4:	..>...G.V...h...
   531b4:	......e...c..'..
   531c4:	......|.....q.s.
   531d4:	q.............'.
   531e4:	i...l...........
   531f4:	.........&..s!..
   53204:	P.\.q...'.......
   53214:	I..(......).....
   53224:	..b...b.0.."[..(
   53234:	..3+~.t.[.X...X.
   53244:	).1...".....g..D
   53254:	..L...........k.
   53264:	........q.M..<..
   53274:	........G..... .
   53284:	.............-X.
   53294:	Y.....'..-....).
   532a4:	........z.....:.
   532b4:	.4......G.(%....
   532c4:	....?*N.......(.
   532d4:	s.9.....N.......
   532e4:	..........J.....
   532f4:	...,..D...@*d.g.
   53304:	..S.@.b....."...
   53314:	....0....%..|54.
   53324:	.EL.....3.j.....
   53334:	....T.....e._-..
   53344:	......q.....h...
   53354:	&...q.......c...
   53364:	p.>.=.%.....l...
   53374:	............;.R.
   53384:	....x.t.....=#..
   53394:	W...@.........c.
   533a4:	......K!..e.....
   533b4:	....T.I.....p.E.
   533c4:	..^......=R.../.
   533d4:	..3...d.....P...
   533e4:	....Q.G.........
   533f4:	..."<...G.......
   53404:	................
   53414:	......$.F.......
   53424:	P..!-..,x...6.r.
   53434:	4... ...........
   53444:	.)......(.w.....
   53454:	..#.V....$......
   53464:	........M.b...o.
   53474:	n...5.......6.W.
   53484:	S.\.....}..... .
   53494:	..........|.....
   534a4:	........D...-$8.
   534b4:	I...G.E.=..F..[)
   534c4:	....$.$.........
   534d4:	.......C......k.
   534e4:	]...D...0.......
   534f4:	F.p..-..7 ....}.
   53504:	..e.....a"Y..*..
   53514:	..........3.....
   53524:	.6..-.`...b..)..
   53534:	c9........7.@...
   53544:	..7.0.A.......).
   53554:	..r.O!...!....,.
   53564:	I...g.H/..@...e.
   53574:	[.)..-......'.7.
   53584:	s...z...b...$...
   53594:	..j...].......u.
   535a4:	...)............
   535b4:	....G.....x#....
   535c4:	.&-.b-....o.....
   535d4:	&...$&|.........
   535e4:	......2.....$.D.
   535f4:	..........V!..C.
   53604:	z.....n.......,.
   53614:	..D...........I.
   53624:	..!.@#..y.q.r...
   53634:	1.....O.........
   53644:	.."......._.....
   53654:	....j.?.........
   53664:	y...`...:.......
   53674:	..7.1(........c.
   53684:	t.r.p.E./!..../.
   53694:	... ....q ..v...
   536a4:	..H.....?.......
   536b4:	?..2..~.........
   536c4:	h...T...........
   536d4:	........O.S.s...
   536e4:	K...........6...
   536f4:	..i.p...l.......
   53704:	....d.k...U.d...
   53714:	....`....#f.+...
   53724:	....z.b.k...!...
   53734:	;..#..W.......V.
   53744:	...&....x...d...
   53754:	@.3....../....N.
   53764:	..U.u.(...-.....
   53774:	G.2.X.5.p.......
   53784:	............)..)
   53794:	Q..............*
   537a4:	q.....R.. ..D...
   537b4:	k.2...8.w.9.z...
   537c4:	m.\...|.!.u.j...
   537d4:	..-.S...........
   537e4:	x.......c.9.....
   537f4:	......M.........
   53804:	....4...N.m.....
   53814:	....."..I...^...
   53824:	O.............+.
   53834:	..m"&.........f.
   53844:	..1.....n 1.5...
   53854:	......9...G.....
   53864:	....w...........
   53874:	..........}.....
   53884:	:.......K......"
   53894:	(.........'...t.
   538a4:	................
   538b4:	..B...1.....n.S.
   538c4:	......A.....-...
   538d4:	#......!..L.=.E.
   538e4:	....V.........*.
   538f4:	.....8....9. .. 
   53904:	 ...../.......7.
   53914:	..E.0.;.J.......
   53924:	+.~.K...6...3.>.
   53934:	-.A.u........!..
   53944:	..F.a.$>?...0,..
   53954:	!...............
   53964:	..s.....U.#.....
   53974:	..>.....`.".#...
   53984:	..'.m...Z....)..
   53994:	........I.J.....
   539a4:	..........h.....
   539b4:	;.t.........=%..
   539c4:	......b._...K%..
   539d4:	..<...k.........
   539e4:	I.*...\.........
   539f4:	X.x.....A.....,.
   53a04:	....f...q.4.....
   53a14:	W...........j...
   53a24:	..K...5.#.J.p...
   53a34:	I...z...........
   53a44:	..<...........\.
   53a54:	......4.........
   53a64:	......H...+.....
   53a74:	..^...f...M...T.
   53a84:	\._.Q...%.p.e...
   53a94:	....>.......P...
   53aa4:	;.....~.........
   53ab4:	........$.......
   53ac4:	G.@...w.7.......
   53ad4:	.,v.....6.......
   53ae4:	>....)......q...
   53af4:	t.2./...b.....7.
   53b04:	....o..-........
   53b14:	J.......+...i...
   53b24:	..*...E.........
   53b34:	..&.}.F.....b...
   53b44:	l..!T.....j.B...
   53b54:	b.....d.[.......
   53b64:	.*..D.}...>.?.f.
   53b74:	....3.".E...c...
   53b84:	k.7...F.`._.&...
   53b94:	{.,...B.$...Y...
   53ba4:	......t.F.....u.
   53bb4:	..g.............
   53bc4:	..y...J.F...k. .
   53bd4:	w.L.......".....
   53be4:	..../.K.-.n...2.
   53bf4:	..O.......^.....
   53c04:	..............J.
   53c14:	[.............w.
   53c24:	........t...!.>.
   53c34:	..a.......*...>.
   53c44:	..).j...........
   53c54:	....T.......E...
   53c64:	f.c.C.7.`.D)..`-
   53c74:	..y.......Z.....
   53c84:	@.....+.H.y...Y.
   53c94:	0&T.<...........
   53ca4:	C....%......h...
   53cb4:	:...D...&...|.a.
   53cc4:	..f...G...S...j.
   53cd4:	u.g.i.b. ...L.Y.
   53ce4:	C...Q.....L.L...
   53cf4:	..b.....#.`...7.
   53d04:	....M...q.M.....
   53d14:	....i.......?.].
   53d24:	..!.....f.N...|.
   53d34:	..."....1+......
   53d44:	..]...c.-...k...
   53d54:	..l.....4.....M.
   53d64:	............/.#.
   53d74:	S...O...........
   53d84:	!...B.........z.
   53d94:	..........S.5...
   53da4:	z....'....}.;.(.
   53db4:	).)...L.........
   53dc4:	}.c...X.. ...8..
   53dd4:	.!J...........l.
   53de4:	............5...
   53df4:	.... .....I.....
   53e04:	;.y"........:...
   53e14:	B...T.....T.....
   53e24:	..... q.........
   53e34:	..X.#.E.p.......
   53e44:	..G.6.....q...F.
   53e54:	..Q.......|...v.
   53e64:	....o...z.O.....
   53e74:	......*.......".
   53e84:	............^.N.
   53e94:	..........."i.:.
   53ea4:	........1.5...~.
   53eb4:	....P...6...?.6.
   53ec4:	....../.?...Z...
   53ed4:	...2;./.[.p.....
   53ee4:	..............i.
   53ef4:	..<.+.p.....q...
   53f04:	..........m.:.V.
   53f14:	..........q.....
   53f24:	...........3..B.
   53f34:	..........k.E.<.
   53f44:	L.......-$p.....
   53f54:	|.8.........Z...
   53f64:	V...............
   53f74:	g...............
   53f84:	..../...K... .,.
   53f94:	..:.....f...7...
   53fa4:	....~.....(.....
   53fb4:	....x...T...S...
   53fc4:	....R.....s.C...
   53fd4:	.......+......O.
   53fe4:	....5.}.=....&..
   53ff4:	............@.K.
   54004:	....M.s.l.......
   54014:	..Z.........d...
   54024:	'.:.....M.<...+.
   54034:	9...|...........
   54044:	?.......P ../...
   54054:	....P...........
   54064:	..........W...*.
   54074:	+...V._.......j.
   54084:	..H.........-.!.
   54094:	............2...
   540a4:	o.....W!V.O...~.
   540b4:	..U...c..._.....
   540c4:	,...}...f.l.#.n.
   540d4:	2.....Y.......=.
   540e4:	]...............
   540f4:	G.....J.j.......
   54104:	....:...L...l...
   54114:	a.%...L.........
   54124:	....9.......}...
   54134:	..=...........y.
   54144:	z.M...F.....$.3.
   54154:	....q...<...G...
   54164:	&.M.......7.1.E.
   54174:	..M...N...~.9...
   54184:	......{.....F...
   54194:	........?.*.....
   541a4:	+...-.S...0.....
   541b4:	).........!.....
   541c4:	............(...
   541d4:	...(Y.W.]...x...
   541e4:	..".....'.;.....
   541f4:	..../.=.....(.r.
   54204:	............}.{.
   54214:	......-...B.3...
   54224:	..U...........T.
   54234:	....T...........
   54244:	....]...........
   54254:	..I.3.'...^.B.(.
   54264:	..............g.
   54274:	....9......*:...
   54284:	....C...........
   54294:	....\.7...G.`...
   542a4:	......'.....k.7.
   542b4:	..m.=.....^...a.
   542c4:	..........h.\.7.
   542d4:	......K.....m.u.
   542e4:	K.........p...[.
   542f4:	=.............U.
   54304:	..8.............
   54314:	p...............
   54324:	....^...........
   54334:	_.....].....(.J.
   54344:	..8.b.E.......[.
   54354:	I...............
   54364:	,.;.*.M.Y.&...@.
   54374:	....^.Z.......x.
   54384:	L.....o...%.R.&.
   54394:	......t...a...p.
   543a4:	....9.....8.N.d.
   543b4:	..............!.
   543c4:	....L.........+.
   543d4:	..J...}..'......
   543e4:	..6.a.....r...,.
   543f4:	................
   54404:	....`...N.....0.
   54414:	..*...1.........
   54424:	............*...
   54434:	.._.....W.......
   54444:	....E...G.......
   54454:	..'.....c...&...
   54464:	..x.8.(...j.P...
   54474:	..&...........>.
   54484:	................
   54494:	@...C.....$...b.
   544a4:	..C.W..... .....
   544b4:	..S.h.k.........
   544c4:	h.N...U.W....._.
   544d4:	7...........S...
   544e4:	4...........#...
   544f4:	....X.S.....L..+
   54504:	........@!....w.
   54514:	....h.....[.....
   54524:	....9...V...<...
   54534:	 ......"..!(...-
   54544:	....'.....C.....
   54554:	......x.K.o.....
   54564:	....U.<.....s...
   54574:	 ......._...E.&.
   54584:	z.,...b.L....%..
   54594:	[.....R..#>.....
   545a4:	......l.....F.B.
   545b4:	u.E...q...D.....
   545c4:	......G.........
   545d4:	........h.C.....
   545e4:	 .K.L...w.Y.}...
   545f4:	..B...V...A...t.
   54604:	j. ...+.........
   54614:	....K...-.q.E.2.
   54624:	a.%....%L.s.....
   54634:	................
   54644:	u.........k.v...
   54654:	p...........{.-.
   54664:	G ...._.@.4.....
   54674:	..`.........x...
   54684:	B.a...o.........
   54694:	..s...j..,...)..
   546a4:	*..">...........
   546b4:	*.......A.P...s.
   546c4:	D.x...........V.
   546d4:	f. ...........g.
   546e4:	......V.........
   546f4:	....,.....w.<.f.
   54704:	c.....n...D...!.
   54714:	\.......-.....G.
   54724:	..........;.A...
   54734:	....x.2.....'.O.
   54744:	v.x...#...:...B(
   54754:	..).......<.Z...
   54764:	......I.....N...
   54774:	 .........`.d...
   54784:	..J.].....k.+...
   54794:	......t.......b.
   547a4:	......s.....T ..
   547b4:	L.K....... .9...
   547c4:	..U.......K.....
   547d4:	T...l.....%.....
   547e4:	8.y...}.........
   547f4:	....m.7%........
   54804:	..D...C...&...@.
   54814:	............b...
   54824:	..........J.;...
   54834:	8.B.<...P.... ..
   54844:	y...........S...
   54854:	....H.0.-.6.....
   54864:	G.7.....C...e...
   54874:	}.i.............
   54884:	....Z.....g...g.
   54894:	D.*.............
   548a4:	~.....S.{.%.....
   548b4:	s.a...........b.
   548c4:	6...9...R.......
   548d4:	D...`.....V.....
   548e4:	......e...r._.q.
   548f4:	........B.r.....
   54904:	o2V.....B...j.r.
   54914:	..............g.
   54924:	 .......F.......
   54934:	..7.K...........
   54944:	K.u...n.j...D...
   54954:	p...............
   54964:	_.v...Z._.....4.
   54974:	O.X.......u.....
   54984:	..........h...u.
   54994:	).p.. a...A.....
   549a4:	....O.......@.4!
   549b4:	..M....."...M...
   549c4:	......[.+...s...
   549d4:	>.....0...T.(...
   549e4:	..E.2.]...6...6.
   549f4:	......[...?.....
   54a04:	..:.D.......,...
   54a14:	..+.}.....}.....
   54a24:	/.....r.e.7.F...
   54a34:	M...a...|.......
   54a44:	S..._"....y.X...
   54a54:	2.........C...y.
   54a64:	......7.\.......
   54a74:	....x.....a...M.
   54a84:	~.Y.....i...e...
   54a94:	........$...~.^.
   54aa4:	..~.....:...w.Z.
   54ab4:	..[.........C.x.
   54ac4:	............?...
   54ad4:	..W.5...........
   54ae4:	....<.c.........
   54af4:	,.......1.1.....
   54b04:	9...6.......T...
   54b14:	........2.......
   54b24:	-...............
   54b34:	..]...z.....+...
   54b44:	....C.....].....
   54b54:	".....~.t.......
   54b64:	......!.......k.
   54b74:	................
   54b84:	..............X.
   54b94:	>.X...*.g.....g.
   54ba4:	?.......[.....q.
   54bb4:	<.S...$.........
   54bc4:	..q.....=.Y.6..&
   54bd4:	..,.'...O.....+.
   54be4:	b.......T...%...
   54bf4:	....... ......Z.
   54c04:	..]...........t.
   54c14:	i...............
   54c24:	...0..%.b ......
   54c34:	]...h...........
   54c44:	~.....7...C...9.
   54c54:	..?...g.`.".v...
   54c64:	Q.....g.........
   54c74:	..../.......O...
   54c84:	..c.......3.....
   54c94:	?.........~.....
   54ca4:	..........:.....
   54cb4:	o.....5.0...i...
   54cc4:	....o.v.....8...
   54cd4:	y...l.....8...<.
   54ce4:	Z...@.p.........
   54cf4:	N.>.......D... .
   54d04:	..N.....r.....V.
   54d14:	'...J...?.f.....
   54d24:	...-}.......).U.
   54d34:	h.9._...,.......
   54d44:	..........w.....
   54d54:	m...........i...
   54d64:	....D.#...#.....
   54d74:	a.......`...P.n.
   54d84:	`...}.n...l.X. .
   54d94:	....%.|.B.......
   54da4:	..V.F.......y.4.
   54db4:	X.....z.d.+.....
   54dc4:	..;.}.....@...G.
   54dd4:	T...o.........j.
   54de4:	$.......-.......
   54df4:	#.-.m.O.....|...
   54e04:	....e.......4.+.
   54e14:	......i.F.r.T...
   54e24:	X.........d.....
   54e34:	X...'...........
   54e44:	....V.[.,.......
   54e54:	6.....Y.l.O.....
   54e64:	W.^...s...k.N.<.
   54e74:	..(.c.a.^...6...
   54e84:	......M.....}...
   54e94:	..;.9.'.......q.
   54ea4:	......!.....I.s.
   54eb4:	..........s.B...
   54ec4:	_.....q.7.......
   54ed4:	-.3...........+.
   54ee4:	......k.......-.
   54ef4:	a...a.......o...
   54f04:	................
   54f14:	..e...D.....`..!
   54f24:	,...%.....].g.7.
   54f34:	..P...+.........
   54f44:	....;.j...y.....
   54f54:	..H.r.......2.N.
   54f64:	G._.%...........
   54f74:	..0.].Z.p.X.0...
   54f84:	..>...}.........
   54f94:	n...0.:.....e...
   54fa4:	@.....7.......t.
   54fb4:	..E...S.]...2.C.
   54fc4:	..2.....L.V.2...
   54fd4:	../.........D...
   54fe4:	......B.........
   54ff4:	........H.x.....
   55004:	..w.c.T...W.....
   55014:	........{...E.j.
   55024:	....W.8.........
   55034:	o.....+.v...G.L.
   55044:	Z...............
   55054:	X...D...8.....i.
   55064:	..............}.
   55074:	,.....b...].....
   55084:	..Z.D.........f.
   55094:	......~.a.a.....
   550a4:	I.......t.3...7.
   550b4:	..7.......1.....
   550c4:	................
   550d4:	....b.f...*...N.
   550e4:	....].P.!._.H...
   550f4:	............2...
   55104:	..3.*.>.-.......
   55114:	..|.....-.d.B...
   55124:	.... .J.....e...
   55134:	f.....[.....`...
   55144:	....C.$.t.......
   55154:	..{.R.....r...A.
   55164:	=...............
   55174:	..............5.
   55184:	..B...v.!$..J...
   55194:	....-...\.'.....
   551a4:	3.............l.
   551b4:	......H...-._.3.
   551c4:	................
   551d4:	....... B.....}.
   551e4:	,.-.......V.....
   551f4:	?... .r...G.....
   55204:	.._...8.^.....k.
   55214:	..*...v.c...q...
   55224:	,.....`.A.g...r%
   55234:	....8..._.c.e.<.
   55244:	........^..._...
   55254:	..............u.
   55264:	....l...........
   55274:	Y...T.....c.s.P.
   55284:	..-...q...H.S.x.
   55294:	..8...........[.
   552a4:	-..... .......x.
   552b4:	..A.V. .......!.
   552c4:	{.......$.....".
   552d4:	S.....o...w.....
   552e4:	. ......'...~.+.
   552f4:	..!.............
   55304:	....~...".....@.
   55314:	....k.+...w.,...
   55324:	..P.2.......0...
   55334:	..b.........h...
   55344:	w.............x.
   55354:	..../...........
   55364:	f...............
   55374:	....).....A...~.
   55384:	F...............
   55394:	........(...@...
   553a4:	....d.)...,.}...
   553b4:	................
   553c4:	......{.........
   553d4:	..F.p...i.....s.
   553e4:	..*.&.x...T.u...
   553f4:	....R.......F...
   55404:	..l.t...... ....
   55414:	....S.........h.
   55424:	..r...c"l.......
   55434:	........Y...G.K.
   55444:	................
   55454:	$.C...?.........
   55464:	%.R.... ..|.....
   55474:	..6...........w.
   55484:	..........U...d.
   55494:	-.....W.M.......
   554a4:	J...$.......<.&.
   554b4:	......p.&.......
   554c4:	&.....`...M...u.
   554d4:	......z.M.......
   554e4:	%...&...........
   554f4:	P.............s.
   55504:	..............|.
   55514:	~.......;.....A.
   55524:	....r.i...-.h.-.
   55534:	J.....O.0...k.?.
   55544:	..............H.
   55554:	X.....T.......t.
   55564:	..n.........t...
   55574:	!...G...6.......
   55584:	..P..%`.........
   55594:	....".........`.
   555a4:	......t.........
   555b4:	......u.........
   555c4:	....v...........
   555d4:	H.......@.....B.
   555e4:	....b.Z.U.r.....
   555f4:	i.....c.....1.s.
   55604:	......Z.........
   55614:	..N.?.....8.....
   55624:	T.d...R.P.......
   55634:	................
   55644:	D._.....B.O.p.h.
   55654:	....A...f.......
   55664:	p.O.4...b.A.....
   55674:	....\.<.I...2.v.
   55684:	..;.Y...6.-.z...
   55694:	........7...1...
   556a4:	..g...........:.
   556b4:	..V.....W...C...
   556c4:	/.........;.a.:.
   556d4:	..{.....r.v...~.
   556e4:	.........#C.G...
   556f4:	Y.......".......
   55704:	4...\...........
   55714:	..S.............
   55724:	................
   55734:	H...).j.....3.B.
   55744:	....j...<.....C.
   55754:	..}.Q.K...J.....
   55764:	............S...
   55774:	..%.M...Z...$...
   55784:	..1.l...../.8...
   55794:	....%.k.~.p.5...
   557a4:	......&.........
   557b4:	.........._...8.
   557c4:	;.f.:.4.....i...
   557d4:	........c.\...K.
   557e4:	 ... .C...X.....
   557f4:	P.......E.\.....
   55804:	........S.%...V.
   55814:	....r.....[.....
   55824:	V...|.#.....}...
   55834:	a...#... .....O.
   55844:	*.[...m.....T...
   55854:	p.......Y...R.N.
   55864:	....o...x.......
   55874:	............>...
   55884:	]...........S...
   55894:	....../.i...K.g.
   558a4:	..4...Y...'.l...
   558b4:	e.g.I...a.N.1.M.
   558c4:	........E.=...k.
   558d4:	.... ...0.......
   558e4:	....}.=.....*...
   558f4:	....N.N...d...c.
   55904:	......4.......^.
   55914:	../.:...6....._.
   55924:	q...~...M.w.....
   55934:	......D.....m.Q.
   55944:	$...A.....8.+...
   55954:	p.....=...i...{.
   55964:	f. .....R...$...
   55974:	g.....z.k...%...
   55984:	E.....9.......*.
   55994:	........l...T...
   559a4:	B...............
   559b4:	..%.b.T.).5...!.
   559c4:	w.f...<.........
   559d4:	......i.^.......
   559e4:	......3.......M.
   559f4:	......x...f..._.
   55a04:	....6. .......H.
   55a14:	H...............
   55a24:	........O.......
   55a34:	..B...y.....p...
   55a44:	......X...L.Z.d.
   55a54:	'.......;.......
   55a64:	..[.n...P.......
   55a74:	\.5.O.....\...X.
   55a84:	..S.=...........
   55a94:	..*...........l.
   55aa4:	..g._...........
   55ab4:	Z.1...".....u...
   55ac4:	....4.....(...a.
   55ad4:	......j.L...3...
   55ae4:	..z.V.P.....O...
   55af4:	................
   55b04:	..;.....W.a./.w.
   55b14:	....<...........
   55b24:	............'...
   55b34:	..5.,.........{.
   55b44:	I._...........a.
   55b54:	].....g...<.w.Z.
   55b64:	..z. .).U.......
   55b74:	................
   55b84:	....k...$...[...
   55b94:	..=...1.........
   55ba4:	..F.p.S.e...N...
   55bb4:	......V.M.A.5...
   55bc4:	..d...d.S.....N.
   55bd4:	............<...
   55be4:	....@...`.....t.
   55bf4:	........;.).%.W.
   55c04:	..W...7.........
   55c14:	..............g.
   55c24:	....M...........
   55c34:	........l.......
   55c44:	......,.........
   55c54:	/.....&.i.I.....
   55c64:	#.....Z.B.......
   55c74:	............u...
   55c84:	(.}...i.Y.d.....
   55c94:	......H.........
   55ca4:	..p...........K.
   55cb4:	..'.I.R.s.......
   55cc4:	..W...;...~.....
   55cd4:	/.`...k.......k.
   55ce4:	....z.....a.+...
   55cf4:	......4...b.....
   55d04:	..<.....p...W...
   55d14:	V.........P...|.
   55d24:	T.h.......!.....
   55d34:	......A...1.f...
   55d44:	t.....".........
   55d54:	S.l. #2.""k.....
   55d64:	A.h.....n.p...;.
   55d74:	H.............C.
   55d84:	-...e...U...*.{.
   55d94:	....p.8.......a.
   55da4:	..........&.X...
   55db4:	g.K.K...K.'.t...
   55dc4:	....U.b.....o...
   55dd4:	........(.......
   55de4:	3..........$y.7.
   55df4:	....d.......'.3.
   55e04:	s...............
   55e14:	/...}.......M..$
   55e24:	..z.D.`.y.......
   55e34:	..Z.Z.i.......].
   55e44:	m.R.............
   55e54:	}...........C...
   55e64:	9.............O.
   55e74:	..........^.7...
   55e84:	o.....j..._.....
   55e94:	....*.^.j.......
   55ea4:	M.A.............
   55eb4:	..6.....4.+.^...
   55ec4:	......T...=.d...
   55ed4:	..........a.&...
   55ee4:	..............P.
   55ef4:	..M...l...N.....
   55f04:	..}.....'.......
   55f14:	........z.......
   55f24:	......`.G.#...o.
   55f34:	..........,.h.".
   55f44:	4...s......._.[.
   55f54:	Y.....5.....}.v.
   55f64:	..,.....O...9.s.
   55f74:	n...o.[...v..._.
   55f84:	K.q.........*.?.
   55f94:	..&.@.G.......p.
   55fa4:	........7.D.....
   55fb4:	6...;.t...&.....
   55fc4:	........u.......
   55fd4:	........x.~...L.
   55fe4:	2...........$...
   55ff4:	........{...G...
   56004:	..l.C.......G...
   56014:	....8.....d...J.
   56024:	....F.......&.M.
   56034:	E.+.6...|...R.}.
   56044:	................
   56054:	".f.5.F...v.....
   56064:	..h.......Q.....
   56074:	....4.........+.
   56084:	........8.......
   56094:	......3.f.......
   560a4:	g.t.............
   560b4:	........ ...l...
   560c4:	..D...q.....S...
   560d4:	..].......7.|...
   560e4:	........h.I...r.
   560f4:	....9.z.......f.
   56104:	......7...O.....
   56114:	X.x...O.........
   56124:	%...]...........
   56134:	K.........<...:.
   56144:	..u.....^.....".
   56154:	A.w...i.>.o.p...
   56164:	0...d.G.H...M.Q.
   56174:	..n.H...p.S.....
   56184:	I.....i.........
   56194:	..N...c...7.G.C.
   561a4:	..s.2...).V...l.
   561b4:	...$g.....t.....
   561c4:	.. ...-...$."...
   561d4:	S.......a.......
   561e4:	L...?.....x.....
   561f4:	D.E...........g.
   56204:	..!.....{.t.....
   56214:	......y...3 H...
   56224:	..S.7.d.........
   56234:	......D...9.....
   56244:	W...........\.y.
   56254:	..%....... .....
   56264:	m...E.&.......l.
   56274:	......3...4.....
   56284:	....L.....[...F.
   56294:	8...............
   562a4:	......\.........
   562b4:	....B...u.D.D.r.
   562c4:	..k.,.T...v.....
   562d4:	...............$
   562e4:	..B.w.....1.....
   562f4:	........N.......
   56304:	......../.......
   56314:	Y.....n%D.V.x...
   56324:	f...m...........
   56334:	t.....l.........
   56344:	......K.%.k.x.h.
   56354:	y"'.....(.......
   56364:	......6.........
   56374:	O.......O.&.J...
   56384:	......^.........
   56394:	......=.....q...
   563a4:	....>.......'...
   563b4:	..^.......A.....
   563c4:	....1.....F.x.I.
   563d4:	P... ...........
   563e4:	k.....?.........
   563f4:	........I.....C.
   56404:	..m.V...........
   56414:	....X./.L.*...?.
   56424:	....N...d.g.....
   56434:	..3...'.D.....o.
   56444:	.........._.....
   56454:	....'.y.c...X.3&
   56464:	....L...)...g...
   56474:	..............b.
   56484:	..c._.o.........
   56494:	......].)...*...
   564a4:	y.r.............
   564b4:	\.!...h.........
   564c4:	..."..&...~...).
   564d4:	..z...v.....'.2.
   564e4:	....m.....6.....
   564f4:	........*.n.....
   56504:	..........t.....
   56514:	....o.D.........
   56524:	........).......
   56534:	......)...Z.W.0.
   56544:	....p.=.".N.n.+.
   56554:	j...../.....z.K.
   56564:	..[.^.........R.
   56574:	....l...........
   56584:	........0.:./...
   56594:	..!.....!.....u.
   565a4:	..}.....V.....A.
   565b4:	:.'.X.....c.O...
   565c4:	....1...C...f.v.
   565d4:	#.H...........E.
   565e4:	....%.....F.....
   565f4:	..l.U...*.D.n.>.
   56604:	..B.V.....X.=...
   56614:	......z.....C...
   56624:	..............s.
   56634:	..E...g.....r...
   56644:	\.........n.....
   56654:	q.....:.....@...
   56664:	N.........Q.D...
   56674:	Q.`.....R.....C.
   56684:	................
   56694:	G.....i.f.......
   566a4:	......W.Q.@.....
   566b4:	..L...s...,.....
   566c4:	....o.........8.
   566d4:	..2.k.a...:.M.. 
   566e4:	|.....m.....f.@.
   566f4:	....%...:...u.:.
   56704:	%.h.Y.....m...r.
   56714:	I.....\.s.6.....
   56724:	;.;.:.f.....?.+.
   56734:	........).....=.
   56744:	n.H..... .....".
   56754:	....!.........\.
   56764:	r.....M._.v.....
   56774:	`.......M.../...
   56784:	Z.......5.......
   56794:	..W...J.....W...
   567a4:	..*...,.H...y...
   567b4:	..]...Z.........
   567c4:	,.<.e...}.......
   567d4:	....?...|...J...
   567e4:	......u...*.....
   567f4:	_.....|...;.l...
   56804:	..6.<.6.~.'...K.
   56814:	1.>.].2.1.].\...
   56824:	..".@.......X...
   56834:	....G.....Q.m.'.
   56844:	_.6.............
   56854:	A.....X.........
   56864:	......8.........
   56874:	....9.......m.M.
   56884:	....A.....T.....
   56894:	......|.r.......
   568a4:	..Q.L.......U...
   568b4:	................
   568c4:	..p.Z."...B.i.w.
   568d4:	..N.X.....O...|.
   568e4:	..$.Y.R.T.....K.
   568f4:	(%4...#.T...a.w.
   56904:	......:.b...C...
   56914:	,...............
   56924:	..S.....7.......
   56934:	....D.....0.....
   56944:	....W.....T.[...
   56954:	@.@.......".....
   56964:	_.....@.k.......
   56974:	J...3.......n...
   56984:	........\...E...
   56994:	..l.....z.......
   569a4:	..@.d.M.......#.
   569b4:	..Z...;...t.F.z.
   569c4:	........D.!.h...
   569d4:	O...x...n.......
   569e4:	......3...&"....
   569f4:	n...a.k...1.u...
   56a04:	..A.............
   56a14:	?.....].......{.
   56a24:	_...&.n...o.....
   56a34:	....\...........
   56a44:	....X...d.Q...5.
   56a54:	s.............7.
   56a64:	........<.B...o.
   56a74:	....5.F.T...l...
   56a84:	..k.5.......t...
   56a94:	......y.|.......
   56aa4:	h...{.......a...
   56ab4:	..U....."...P.U.
   56ac4:	............@...
   56ad4:	y.......3.!.,.}.
   56ae4:	x.........V. .=.
   56af4:	......r...J.!.G.
   56b04:	..X.......5.....
   56b14:	:.O.....d...G...
   56b24:	..b...Q.........
   56b34:	&...........V.<.
   56b44:	{.S.......h...o.
   56b54:	z.N...b.[.......
   56b64:	Y.....$.g.......
   56b74:	........A.......
   56b84:	..%...S.....f.T.
   56b94:	..........Z.B...
   56ba4:	x...+...+.&.s.P.
   56bb4:	..<."..%E.q.y...
   56bc4:	....]...N.+.....
   56bd4:	....{.o./.N...&.
   56be4:	u...8...E._.7.$.
   56bf4:	......t.......b.
   56c04:	..d.......U.e...
   56c14:	..^.4...x...i...
   56c24:	a...C.R.....n...
   56c34:	........5...$...
   56c44:	....{.....z.....
   56c54:	..E.$.8.......3.
   56c64:	h.....#.d...Y./.
   56c74:	c.N.............
   56c84:	....p...>.....a.
   56c94:	0...E.x.C.Q...C.
   56ca4:	....'...........
   56cb4:	........e.......
   56cc4:	..0.......I...E.
   56cd4:	+...O...h.......
   56ce4:	..D.........S...
   56cf4:	j.B...L...U...!.
   56d04:	..c.C...j.......
   56d14:	u...0.E.l.%.n...
   56d24:	..% ..w.....#...
   56d34:	..0.....v.|.S.Q.
   56d44:	-...p.h.....=.I.
   56d54:	....>.0.}...+.p.
   56d64:	............l...
   56d74:	i.l.Q.x.........
   56d84:	_.[.....S.d.....
   56d94:	..s.b.W...I.\.D.
   56da4:	H...............
   56db4:	T.m.............
   56dc4:	M...m.t...g.o...
   56dd4:	..{. .......r.H.
   56de4:	..9...9.S.......
   56df4:	..b.............
   56e04:	..W.(.....g.....
   56e14:	..p.t...n.!...l.
   56e24:	......$.|.&.,...
   56e34:	}...........`...
   56e44:	....$.....6.....
   56e54:	......r.....P...
   56e64:	....J...S...G...
   56e74:	..+.A.....t.....
   56e84:	..@.^...].....3.
   56e94:	..<.4.i...<.....
   56ea4:	..6...z.....n...
   56eb4:	......B.0.o.....
   56ec4:	....).....p.[.j.
   56ed4:	......%.....!.w.
   56ee4:	................
   56ef4:	i...B.i...q.c...
   56f04:	(.j.S.].........
   56f14:	..2.............
   56f24:	....D.........O.
   56f34:	..M...........R.
   56f44:	....c.......!.c.
   56f54:	k. .-.....Q.....
   56f64:	..Q.....P...}...
   56f74:	q.......K...<...
   56f84:	..1.X.....E.G...
   56f94:	....#.f.@.......
   56fa4:	......V.E..."...
   56fb4:	........i...J ..
   56fc4:	....)...5.9.S...
   56fd4:	................
   56fe4:	..H.l.e.........
   56ff4:	..).........e.].
   57004:	8.....(.......V.
   57014:	]...s...e.n.....
   57024:	..W.....c.N.....
   57034:	..3...7.....l...
   57044:	].....4.........
   57054:	U...........P...
   57064:	..C.!.W.....?...
   57074:	..............*.
   57084:	....-.........{.
   57094:	6...r...x.......
   570a4:	@...........=...
   570b4:	..C...{.......D.
   570c4:	..o._.....^...T.
   570d4:	..............(.
   570e4:	o.6.!.c.....v...
   570f4:	.. .k.....].....
   57104:	..........:.....
   57114:	....Z...9.)...!.
   57124:	....s.......P.w.
   57134:	..+.............
   57144:	x.....S.S.......
   57154:	+.....3.....&...
   57164:	................
   57174:	O.......P.......
   57184:	..].E...M.....d.
   57194:	K...........M.$.
   571a4:	<.z._.........G.
   571b4:	I.1.......6.1.z.
   571c4:	6...4...........
   571d4:	....t.z.7...:.u.
   571e4:	E.F...v.....c. .
   571f4:	..:...k.....v...
   57204:	z.K.'...Z.O...Q.
   57214:	........A...g...
   57224:	................
   57234:	............6.V.
   57244:	......}.B.......
   57254:	......Z.........
   57264:	^.M.....K.u...h.
   57274:	6..........._.O.
   57284:	..t.7...........
   57294:	....1.'.|.W.c...
   572a4:	..........t.../.
   572b4:	v.......|.......
   572c4:	....C.....h.<...
   572d4:	....'.....p.F...
   572e4:	G.....G.....D...
   572f4:	........=.....;.
   57304:	..}...D.'.b.g...
   57314:	......W.d.N.....
   57324:	..f.............
   57334:	....0.=.c.....p.
   57344:	d...M.h.....D...
   57354:	................
   57364:	).:.....z.P...K.
   57374:	..........5.....
   57384:	..$.[.t.1.......
   57394:	......=.......;.
   573a4:	....=.........}.
   573b4:	X.L.....i.......
   573c4:	....|.....m...r.
   573d4:	............_...
   573e4:	..s.9.4...E./...
   573f4:	............&...
   57404:	......r.3...n.E.
   57414:	i...-.L...H.Y...
   57424:	..2.....(.0.....
   57434:	......I.].......
   57444:	Q.........F.w...
   57454:	..m...'...j.'.$.
   57464:	..v.............
   57474:	4...<...R...q.,.
   57484:	).....D.9.......
   57494:	..........5.;.C.
   574a4:	5.B...N.U.......
   574b4:	o.q.....[.....2.
   574c4:	n.M.......u.....
   574d4:	....z...B.e.*.j.
   574e4:	..x.............
   574f4:	y...............
   57504:	1.....Z.....^...
   57514:	e.....F.....C...
   57524:	T...............
   57534:	>.....~.......N.
   57544:	Z.....{...[.....
   57554:	}.7...*...H.N...
   57564:	..^....._.......
   57574:	......6.S...h...
   57584:	............!...
   57594:	O.m.......R.6...
   575a4:	........K.....t.
   575b4:	....s.......g...
   575c4:	a.1.\.....4.+...
   575d4:	........Y.....t.
   575e4:	..b.p...g.u.....
   575f4:	....j...........
   57604:	....`.Y.........
   57614:	......X...2.....
   57624:	'.c.....!.'.....
   57634:	....^...B.D.f...
   57644:	....y.#.........
   57654:	".x.q.........B.
   57664:	Y...............
   57674:	................
   57684:	..=...3.......+.
   57694:	......Q...+.....
   576a4:	................
   576b4:	..;.D.r.......j.
   576c4:	..k...7...,.[...
   576d4:	B...u.w.........
   576e4:	d.....L.... >...
   576f4:	k.....`...D.m...
   57704:	......b.......".
   57714:	................
   57724:	.._.............
   57734:	!.n...C.....%...
   57744:	......!.4.F...i.
   57754:	..........a.<.".
   57764:	....x.Z.......m.
   57774:	....I........._.
   57784:	M.....#.u.|.T.<.
   57794:	......@.......U.
   577a4:	w.....n...}.....
   577b4:	..d.........\...
   577c4:	v.(.....D...:.X.
   577d4:	<.B...A.p.....".
   577e4:	..../.{.....m...
   577f4:	..1._.F.....0.}.
   57804:	............x...
   57814:	H.u.R...C.O...w.
   57824:	........h.J...<.
   57834:	......~...E.M.I.
   57844:	X.......[.X.....
   57854:	..m.e.......}...
   57864:	........3.l.X...
   57874:	......L.7...L...
   57884:	).....#...r...c.
   57894:	..:.Y...........
   578a4:	Q.u.....q.......
   578b4:	........m...|.g.
   578c4:	..............u.
   578d4:	..U...r.f.<.F.[.
   578e4:	....X.C.E...5...
   578f4:	..2...i...#.W...
   57904:	U...............
   57914:	........A.......
   57924:	)...*......._...
   57934:	..*... .0...|.C.
   57944:	..P.....7.s.W...
   57954:	..2.c.b...D.....
   57964:	....u.......n.J.
   57974:	y.....v.....q...
   57984:	......(.:.......
   57994:	......C...5...~.
   579a4:	....5.....T.....
   579b4:	#...|...] `...0.
   579c4:	~.%...........!.
   579d4:	E...R...$./...|.
   579e4:	..%...........@.
   579f4:	....<.....;.9...
   57a04:	..s#....L.@..%..
   57a14:	....1.K...0.J.n.
   57a24:	S...........E...
   57a34:	....}.+.......`.
   57a44:	..E...d.........
   57a54:	`...@.a.^.K.....
   57a64:	..........a.G...
   57a74:	~...Q...../.~...
   57a84:	......'...p.M. .
   57a94:	"...(...a.Q.t.8.
   57aa4:	....1.}.........
   57ab4:	..s.F.....t.[...
   57ac4:	..k.R.....v.&...
   57ad4:	..K.,."._.....0.
   57ae4:	....~...........
   57af4:	......e.2.......
   57b04:	..........R.`"..
   57b14:	..4.......)...N.
   57b24:	T.T...;.......(.
   57b34:	....5.2.....d...
   57b44:	....h.4.....X.7.
   57b54:	..f.......5...^.
   57b64:	]...C.5.L.J.m.w.
   57b74:	......N.'.....h.
   57b84:	..C.....K...H...
   57b94:	..%.....].n.s...
   57ba4:	.. .].....).6.K.
   57bb4:	v.p...I.".q.u...
   57bc4:	..t.............
   57bd4:	......]...x.g.`.
   57be4:	X.s.......|.0...
   57bf4:	6.....F.....h...
   57c04:	......9.8.l.X.M.
   57c14:	*.<.....G.......
   57c24:	n.........9...9.
   57c34:	b._.........V.:.
   57c44:	......H.\.....u.
   57c54:	).B.Z.(.........
   57c64:	..........?.n.x.
   57c74:	......l.....5.y.
   57c84:	R...1.....X...i.
   57c94:	......c."...n.D.
   57ca4:	/.K.....9.M.>...
   57cb4:	C.%...........y.
   57cc4:	....L...k.[.]...
   57cd4:	..n.........5.7.
   57ce4:	d.~...........v.
   57cf4:	..T.G.8...f.'.T.
   57d04:	............S...
   57d14:	..L.O.......:.B.
   57d24:	..G.......|.....
   57d34:	..m.......B...p.
   57d44:	5.5.../...-.....
   57d54:	s.u...........^.
   57d64:	..o.I.5.+.......
   57d74:	.... .........P.
   57d84:	........_...5.O.
   57d94:	G.D...z...6.P.#.
   57da4:	......Z...x.E...
   57db4:	q...r.../.......
   57dc4:	....r.....R.*...
   57dd4:	..N.......m.]...
   57de4:	6...".H.........
   57df4:	1.3.D.h.....e.&.
   57e04:	..n...n.........
   57e14:	................
   57e24:	"...N.D..._.E.%.
   57e34:	A.....V...-...".
   57e44:	n.......y.......
   57e54:	*...]...........
   57e64:	?.......?.....a.
   57e74:	H.6.a.G.&...e.g.
   57e84:	......*.........
   57e94:	z.3...........0.
   57ea4:	..n.....x.......
   57eb4:	..C.9.A. .U.....
   57ec4:	>.Y.Q...a...?./.
   57ed4:	c.!.....X.s...L.
   57ee4:	X.9.<...........
   57ef4:	......1._.......
   57f04:	..E...!.-.D...g.
   57f14:	n...............
   57f24:	b...i.b.......!.
   57f34:	..........:...(.
   57f44:	....&.....4...J.
   57f54:	..s.$...J.......
   57f64:	..3.......R...F.
   57f74:	..:#..A...K...4.
   57f84:	`.#.N..."...x...
   57f94:	..Q.....N...U...
   57fa4:	..#.......?.p.n.
   57fb4:	....|.4...1...b.
   57fc4:	..f.'.........&.
   57fd4:	c._...g.....n.o.
   57fe4:	....?...:.....%.
   57ff4:	?.M...u.&.....m.
   58004:	....O.......p...
   58014:	..%...K.O ......
   58024:	....5.p.....K...
   58034:	........X.......
   58044:	%...............
   58054:	A.............^.
   58064:	`.1...W.L.....I.
   58074:	L.E...........4.
   58084:	....+.R...A.T.c.
   58094:	..........'...l.
   580a4:	......D.3.%.O.p.
   580b4:	J...[...,...&...
   580c4:	........Y.v.8.1.
   580d4:	....o...<...H...
   580e4:	..x...|.........
   580f4:	n.F.............
   58104:	..........x.....
   58114:	;...}.........?.
   58124:	....G...........
   58134:	2.8.....u.......
   58144:	..6...R.....Z...
   58154:	........J...F...
   58164:	........H.V...?.
   58174:	....p.B.........
   58184:	=.....c.....P.".
   58194:	........x...d...
   581a4:	,.......&...O...
   581b4:	....6...[...R...
   581c4:	%...1...........
   581d4:	..D...:.....[.1.
   581e4:	....a.$...9...%.
   581f4:	..d...d.m.2.l...
   58204:	F...X...#.......
   58214:	....h...........
   58224:	..+...!...?.n.a.
   58234:	<.....E.C.?.!.3.
   58244:	......v.Y.8.....
   58254:	..]...S.Y...Y...
   58264:	....x...l.....|.
   58274:	....B.d.7.......
   58284:	......[.........
   58294:	......F...z.....
   582a4:	k...s...'...`...
   582b4:	..M.............
   582c4:	..............].
   582d4:	......-.h.......
   582e4:	..s...l.D.......
   582f4:	..D.........2.i.
   58304:	........r.8.....
   58314:	....k.F...}.....
   58324:	....m.2.......a.
   58334:	........5._.....
   58344:	..^...........^.
   58354:	..S.g.....3.....
   58364:	......0........$
   58374:	..|...9.......,.
   58384:	..(...x.........
   58394:	v.......[.U.....
   583a4:	f.....b.=.;.....
   583b4:	............1...
   583c4:	..".....1.......
   583d4:	8.Z.t...c.......
   583e4:	|.....#.k.......
   583f4:	V...........Q.=.
   58404:	....;.....S.d...
   58414:	R.N.............
	...

000584a4 <sample_35_standard_DRUMS_bockclave>:
   584a4:	.......3..8...\7
   584b4:	..:.G....^z..!G.
   584c4:	j..'.......W...\
   584d4:	...?I.KJC..a...r
   584e4:	..8o...r...r...Z
   584f4:	`..V...W..so...r
   58504:	...oz..1c.-.x...
   58514:	..$.......k.....
   58524:	.6...r...r...r..
   58534:	.r...[...`..9^..
   58544:	.r...r...r...g@.
   58554:	.?...L..."..T?..
   58564:	..q...6.x.E...&.
   58574:	......l.........
   58584:	...*............
   58594:	..U..(..&...=...
   585a4:	..#.a....!....U.
   585b4:	.'......%.......
   585c4:	....Y.....}.....
   585d4:	........a...I...
   585e4:	..}.......{.....
   585f4:	............/...
   58604:	......!...6.O...
   58614:	......F.........
   58624:	..J.P.b.........
   58634:	..i.....M.6.e...
   58644:	".......R...#.`.
   58654:	=.......k...L...
   58664:	..............6.
   58674:	....e.=.........
   58684:	N.........3.....
   58694:	9.W.7....... .2.
   586a4:	........:...D._.
   586b4:	...... .k...M...
   586c4:	....".R.......,.
   586d4:	q...M.......6...
   586e4:	..=.............
   586f4:	6.U.......".N...
   58704:	........@.j.....
   58714:	........?...=...
   58724:	..K.@...S.....9.
   58734:	....1.......@.J.
   58744:	.._.,.M.`.......
   58754:	).".:.......>...
   58764:	s.j...=.........
   58774:	2...../.........
   58784:	*.!......._.....
   58794:	..........".D...
   587a4:	..t.......J.]._.
   587b4:	..(.x.4.].....U.
   587c4:	 ...........7...
   587d4:	;...z.|...V.]...
   587e4:	c.....=.N./.....
   587f4:	9.../.........4.
   58804:	_.G.i...*.c...f.
   58814:	..O.....t.......
   58824:	A...Z.]...j.m...
   58834:	L.].......7...f.
   58844:	T.9.....N.p._...
   58854:	....k.t.......n.
   58864:	....K...p...m.?.
   58874:	g.......e.......
   58884:	....P...J.......
   58894:	:.|.$...........
   588a4:	&...M...........
   588b4:	.._.].......?...
   588c4:	Z.............a.
   588d4:	*...............
   588e4:	........(.....".
   588f4:	................
   58904:	..4......._...X.
   58914:	........i.......
   58924:	U.....`.........
   58934:	D.o...........1.
   58944:	k...X...?..._...
   58954:	..........~.....
   58964:	$.j.2.........j.
   58974:	_.......).f.....
   58984:	....L.....c...i.
   58994:	......|...i.....
   589a4:	?.s...G.....N...
   589b4:	....2.n.......:.
   589c4:	..,.........o.&.
   589d4:	..D.......1.?.4.
   589e4:	../...i...U.....
   589f4:	......1.9.D.j...
   58a04:	..*...f.....W...
   58a14:	s.....o.....C...
   58a24:	......a.A.......
   58a34:	/.......D...!...
   58a44:	.._...9.`...b.x.
   58a54:	`...=.......6.d.
   58a64:	5...0...9.......
   58a74:	................
   58a84:	....t.x.>.......
   58a94:	H.....S.e.....D.
   58aa4:	..`...i.......!.
   58ab4:	?.T.|.`......./.
   58ac4:	4...?...../.}.i.
   58ad4:	4...........G...
   58ae4:	......_.........
   58af4:	s.p.?...{.......
   58b04:	P..._.....,...>.
   58b14:	M.~.6..._.......
   58b24:	..t.k.....7...9.
   58b34:	_...f.....].`.f.
   58b44:	........~.......
   58b54:	....y...N.!.].a.
   58b64:	..C...y.x./.....
   58b74:	..?...s.....o...
   58b84:	..*...Z.../.....
   58b94:	......=.&.x.....
   58ba4:	..p...G.....T.].
   58bb4:	..W.............
   58bc4:	..".=.........C.
   58bd4:	f.......;.......
   58be4:	X...*._...P.0.~.
   58bf4:	M.t.....t.y...!.
   58c04:	j...........G...
   58c14:	"...........m...
   58c24:	1.......~.......
   58c34:	..".........J...
   58c44:	..X.........M.Z.
   58c54:	s.N.......e...m.
   58c64:	..........]...f.
   58c74:	..T...Q.W...o...
   58c84:	....V...........
   58c94:	g.....!...V.&.s.
   58ca4:	J...k...........
   58cb4:	......!.....,.t.
   58cc4:	m.9.9.........p.
   58cd4:	..`.............
   58ce4:	_.Z.C.......b...
   58cf4:	..........J.D...
   58d04:	..H.............
   58d14:	..........x...X.
   58d24:	o.D.......".....
   58d34:	>.....D...&...o.
   58d44:	....Q.f.......j.
   58d54:	i.../.&.....L...
   58d64:	5...........P...
   58d74:	..........|.3...
   58d84:	C.x.........M...
   58d94:	....X.........k.
   58da4:	..........N.T...
   58db4:	..&.s.....|.f.X.
   58dc4:	..x...y...=.:...
   58dd4:	..~.........e...
   58de4:	>.X.............
   58df4:	V.......b.G.a.M.
   58e04:	..x.........N...
   58e14:	7...4.........T.
   58e24:	..0...?.,.......
   58e34:	!.>.......Z.....
   58e44:	........Q.......
   58e54:	..........?...Q.
   58e64:	7.......!.i.....
   58e74:	..p.............
   58e84:	..N.....s.,.....
   58e94:	......9./.......
   58ea4:	..D...0...C.!...
   58eb4:	:..._.........V.
   58ec4:	..0...T...C.....
   58ed4:	....!.....,.....
   58ee4:	....,...!.....,.
   58ef4:	..,...J.!.......
   58f04:	`...k...?.....Q.
   58f14:	..k...?.....7...
   58f24:	......x...N...D.
   58f34:	..:.....C...:...
   58f44:	..&.........&...
   58f54:	....&...........
   58f64:	&...!...D...(...
   58f74:	............(...
   58f84:	T.......*.../...
   58f94:	?...`...J...?...
   58fa4:	......,.........
   58fb4:	......4...!.....
   58fc4:	*.........!...&.
   58fd4:	..o...(.........
   58fe4:	......>...b...g.
   58ff4:	..=.........!...
   59004:	....&.....&.....
   59014:	........J.......
   59024:	7.......`.......
   59034:	/...H.......N...
   59044:	0...x...!...7...
   59054:	......2.........
   59064:	M.........H.....
   59074:	..!.............
   59084:	../...2.......,.
   59094:	......!.........
   590a4:	................
   590b4:	............/...
   590c4:	......D...0...=.
   590d4:	..D.......7.....
   590e4:	..Q...,...=...!.
   590f4:	....D...!.......
   59104:	9.......0.......
   59114:	Q...!...2...,...
   59124:	................
   59134:	................
   59144:	..........(...(.
   59154:	................
   59164:	..0...(...4.....
   59174:	........!...(...
   59184:	..........&.....
   59194:	....:...H...C...
   591a4:	....&.!.......!.
   591b4:	........&.......
   591c4:	0...............
   591d4:	............9...
   591e4:	................
   591f4:	................
   59204:	................
   59214:	................
   59224:	....!...........
   59234:	..........&...!.
   59244:	................
   59254:	..&.............
   59264:	..............!.
   59274:	......!.........
	...

000592a4 <sample_9_standard_DRUMS_bd15>:
   592a4:	...."...F.=...d.
   592b4:	..c....%M...P"..
   592c4:	l....;......-D.A
   592d4:	`...;.5.......'.
   592e4:	A1..............
   592f4:	....!.!......."=
   59304:	..|. .....&..../
   59314:	..X.............
   59324:	..v.....?&.,....
   59334:	|....!...).9.(..
   59344:	E.T/.3.0.*d,.4T5
   59354:	.3.2.3`8d<-9.3.7
   59364:	f>.A.=b7@7s?.=.6
   59374:	.8.<.<.<$:.5.9.B
   59384:	.>F/./.8.:.6x3V3
   59394:	.1)0:6.;D1.$t#.+
   593a4:	.4.2.+.+.,.).%.(
   593b4:	t(h$" ..,.] .$c"
   593c4:	......U$ #..8.1.
   593d4:	......5...k.n.P.
   593e4:	..;.......V.w...
   593f4:	........|...B...
   59404:	..............{.
   59414:	........I...8...
   59424:	..U...........D.
   59434:	o.....".m.......
   59444:	......q.........
   59454:	p...........+...
   59464:	F.-.%.....2.....
   59474:	...._...B...O.p.
   59484:	................
   59494:	..J.....W.......
   594a4:	N...:...Y.......
   594b4:	......d.........
   594c4:	....$.......e.r.
   594d4:	%.L.......#.".l.
   594e4:	............1...
   594f4:	..o.p.g.3.p...n.
   59504:	... ....."n&.)[+
   59514:	.*.)k*..'324=1./
   59524:	]1.5.9}9.7.7|:.<
   59534:	0=[</:.8.9'<L>C?
   59544:	J@.@<AOA.AO@%@.@
   59554:	X?.@.A.B.AnAUA.A
   59564:	.A.A.A.A.A.@.@.@
   59574:	.A.A.A.@O@%@.@=?
   59584:	.>.>.@{A)@.?.>.=
   59594:	.<.<s=F>.=.<S<.<
   595a4:	o;.:.:s9.8.9t9.8
   595b4:	~7<6.5.5{4.2:2.1
   595c4:	}1.0././ /...-<+
   595d4:	.*)*.(.%*&.'.&.$
   595e4:	.#.". }...7.....
   595f4:	O...c.M...N.Y...
   59604:	P.4.A.^.-...6...
   59614:	........r.....R.
   59624:	....]...H.(.u.H.
   59634:	G.6.....H.....:.
   59644:	..........4...Q.
   59654:	..U...>.........
   59664:	......+.".......
   59674:	..s...V...U.....
   59684:	m...,.[...}.....
   59694:	7.......c.....r.
   596a4:	#.~.l...........
   596b4:	..........s...~.
   596c4:	I...`.8...w...<.
   596d4:	<...............
   596e4:	#...........e.f.
   596f4:	}.....V.......n.
   59704:	................
   59714:	a...x.....W.<...
   59724:	....*.........Y.
   59734:	..........r...5.
   59744:	..5...@.........
   59754:	..../...........
   59764:	....".y.[.=.....
   59774:	q.~...........#.
   59784:	s.[.i./.......t.
   59794:	..K...+.Y...q...
   597a4:	......Z...v.h...
   597b4:	. .!; .!.#.&.&.%
   597c4:	s%q&.(.).).*.+.+
   597d4:	.+.,.-J-...../.0
   597e4:	.021.2[3.1.0e2d5
   597f4:	.6p543*2=3.5.5.4
   59804:	S5t8.7.5.446.7.5
   59814:	.3.4.7.9S6'3w3/5
   59824:	.5.4.4.6%6w4&3A3
   59834:	L4.4.2.1.2.4*4.2
   59844:	.2.3.1=0./.0}131
   59854:	.040./..././...,
   59864:	e-;..-<-J-4-r,.+
   59874:	.,h,v+.*Y*.)M(.'
   59884:	.(.(+).).(.&Z%M&
   59894:	.'t'.&.%.%.$.#.$
   598a4:	.%.$.#*#.".!.#."
   598b4:	t . . . . [ ..[.
   598c4:	..e.........4.~.
   598d4:	................
   598e4:	0.............F.
   598f4:	[.)...#.=.....s.
   59904:	..........T.<.c.
   59914:	..a.....&.....S.
   59924:	l.3.....(.....b.
   59934:	........`.....1.
   59944:	........u.j.....
   59954:	............s...
   59964:	....y.....9. ...
   59974:	z.D.....S.......
   59984:	..?.!.....\.#...
   59994:	..............2.
   599a4:	C.0._.z...#.....
   599b4:	........K.......
   599c4:	................
   599d4:	....W.......3.R.
   599e4:	C.........U.f...
   599f4:	......J.c.=.....
   59a04:	....?.?.n.t.Y.c.
   59a14:	..............Z.
   59a24:	..).....b.m.j...
   59a34:	............).).
   59a44:	..^.i.....n.....
   59a54:	....%.......A.J.
   59a64:	..=.....\. .....
   59a74:	W...1...n...e.|.
   59a84:	..........q.c...
   59a94:	..&.........L...
   59aa4:	..~.Y.......,...
   59ab4:	1...............
   59ac4:	....|.....f.....
   59ad4:	......q.......*.
   59ae4:	........h.....h.
   59af4:	......q.x.......
   59b04:	..'.T...........
   59b14:	....Z.n.........
   59b24:	..r...4.....S...
   59b34:	....?...w...Y.2.
   59b44:	O...............
   59b54:	..........}./...
   59b64:	1.....8...Q.....
   59b74:	..........H...Z.
   59b84:	=.#.2......._...
   59b94:	..6.....3.1.B.".
   59ba4:	....].s.........
   59bb4:	..=...6.I.3.....
   59bc4:	9.)...}...X.....
   59bd4:	f...............
   59be4:	. q D . . . .!.!
   59bf4:	Q!. .!b!Z!. . .!
   59c04:	.!'".!!!. . . . 
   59c14:	.!'!.!H D...... 
   59c24:	Z ..<...e.O.F...
   59c34:	u.W...3.q.<.6...
   59c44:	X.r.T...4.....9.
   59c54:	......:...`...}.
   59c64:	....-.......A...
   59c74:	......8...0.....
   59c84:	..Q.........K...
   59c94:	..n.............
   59ca4:	........d.....U.
   59cb4:	R.n.:...x.{./...
   59cc4:	................
   59cd4:	I...Z.|...A.]...
   59ce4:	..t...m.Q.J...{.
   59cf4:	M.....~.....".R.
   59d04:	..B.3.A...M.5.}.
   59d14:	g.........y.....
   59d24:	......m.........
   59d34:	v.Z.J.l.i.......
   59d44:	..........&.9...
   59d54:	U.?...v.....*.\.
   59d64:	..............}.
   59d74:	................
   59d84:	......l.........
   59d94:	b.......D.M...y.
   59da4:	........e.H.N.+.
   59db4:	#...............
   59dc4:	i...........H.x.
   59dd4:	`.6.X.....o.`...
   59de4:	................
   59df4:	..$.6...*.;.%...
   59e04:	B.|.v.J.>.^.f.^.
   59e14:	d...u.g.......o.
   59e24:	......A.L.....`.
   59e34:	7.$.:.j.~.n.C.1.
   59e44:	=.H.8...........
   59e54:	................
   59e64:	..~.......j.z...
   59e74:	..D...!.g...f.J.
   59e84:	7.......J._.@...
   59e94:	..!.M.S.2...(.H.
   59ea4:	C. ...A.l.l.S.Y.
   59eb4:	o.x.m.i.z.......
   59ec4:	..-.I.`.........
   59ed4:	..7.N.k.........
   59ee4:	..-.M.a.w.......
   59ef4:	......4.L.c.{...
   59f04:	............+.A.
   59f14:	U.j.~...........
	...

0005a0a4 <sample_41_standard_DRUMS_chcrash>:
   5a0a4:	....D ........E.
   5a0b4:	..i2....R2..7.F.
   5a0c4:	............2...
   5a0d4:	L.[.y.#.......X.
   5a0e4:	o...%..._.P.T...
   5a0f4:	g...W...........
   5a104:	^.b......./.....
   5a114:	t.......C.......
   5a124:	...-=...m"..r:<.
   5a134:	..m...x.......d.
   5a144:	..v...$B..0L4...
   5a154:	............x...
   5a164:	./......2.1..._.
   5a174:	f)...D..W.s...E.
   5a184:	s.......b:...&c%
   5a194:	............[..+
   5a1a4:	...'Z.7.@...+...
   5a1b4:	....w...y...#...
   5a1c4:	.....-..u.......
   5a1d4:	..Q$........-...
   5a1e4:	2.#.].....:.....
   5a1f4:	G.j...J.....!!. 
   5a204:	........b.......
   5a214:	J;...Jg.....l.R.
   5a224:	C.........}>p.&.
   5a234:	p...9.........b.
   5a244:	...'[..0-.....~.
   5a254:	*...............
   5a264:	L....2o.z.....?.
   5a274:	..x._......O....
   5a284:	......?.8.".3.."
   5a294:	....$.....*.... 
   5a2a4:	..T.P...g.N.....
   5a2b4:	...2...'........
   5a2c4:	G.z......&...G..
   5a2d4:	L'3.D.......%..+
   5a2e4:	=..Z.".?..Y.~...
   5a2f4:	....Q.z...z..*f.
   5a304:	.+.).#Y.B.(.....
   5a314:	........S..)./..
   5a324:	......0!......%.
   5a334:	.?w.r.E.........
   5a344:	.....;2..E...1..
   5a354:	8#..n<3.r......I
   5a364:	D.. ..n!U.x1....
   5a374:	C...)..*.....+x.
   5a384:	w.J...p..r...<..
   5a394:	......,....G..h.
   5a3a4:	..8.....1... .h4
   5a3b4:	?..0..........=.
   5a3c4:	c.x.n=#..L'.E...
   5a3d4:	..v..Cd..X*-kJT.
   5a3e4:	%...........A.F[
   5a3f4:	..eS...+..0...W.
   5a404:	..V....?...4....
   5a414:	=.t...k..4`..*o.
   5a424:	B.E.a.....G.{(..
   5a434:	J..G?.m.r...~.h.
   5a444:	...'..}e:'2.4...
   5a454:	..}...O.rN..k<P.
   5a464:	.Y........E.g...
   5a474:	O.....1.Q.e.7..(
   5a484:	...0..k...e...uI
   5a494:	...*..*......J6.
   5a4a4:	......y......!.#
   5a4b4:	.9O..%......$.~.
   5a4c4:	..8A..w,..B.X.?1
   5a4d4:	D...).......g?6.
   5a4e4:	LbP.......y.X...
   5a4f4:	.._...%.W...}$..
   5a504:	=...!...O...Y...
   5a514:	e...p.c<...E....
   5a524:	>.w.e#...7... e.
   5a534:	..J.#9`EZFS0..e.
   5a544:	....3.......g.o>
   5a554:	...KQ./.o.0.....
   5a564:	....G...UV..mJx.
   5a574:	..V.W...1.y.l.'.
   5a584:	.,....8.H..F\...
   5a594:	..J...X.........
   5a5a4:	'..U..........3.
   5a5b4:	....&.k......'4"
   5a5c4:	..S..?...1....`.
   5a5d4:	e....-u@.D.0.$..
   5a5e4:	..]..........8.:
   5a5f4:	....x.$.......l.
   5a604:	.<..t.'*w%g.D.E.
   5a614:	....[.z8'.<+....
   5a624:	8..B..].....?.C.
   5a634:	ED...,[.].d.o.*.
   5a644:	_....N....z.d.D.
   5a654:	....r.7._.19...V
   5a664:	..o.............
   5a674:	...B^...*&....G.
   5a684:	..$...0.;.n..!u.
   5a694:	........v ..k.B.
   5a6a4:	..........y.e1\4
   5a6b4:	.R........~.i...
   5a6c4:	..#..0.*C2..;...
   5a6d4:	i.....\....3.0`.
   5a6e4:	..rA..i..=....T.
   5a6f4:	.......C.....1..
   5a704:	O...b......B...4
   5a714:	#.....~...x.).A%
   5a724:	,..-........F.<.
   5a734:	.!....s..5.J....
   5a744:	.. .1.g.^...|^F.
   5a754:	....."........B.
   5a764:	O.T.:.7Cs......I
   5a774:	................
   5a784:	L........>[...>.
   5a794:	.............G..
   5a7a4:	...@>....+....Q.
   5a7b4:	k.{.41..........
   5a7c4:	...9}.G.Y.....B.
   5a7d4:	.....3.9....1.I.
   5a7e4:	....[.....|....3
   5a7f4:	........G.......
   5a804:	.............#..
   5a814:	Y ........$.)...
   5a824:	N....2..7<b..I..
   5a834:	....P.....^#..:.
   5a844:	>......L....i+..
   5a854:	5....-.$..O....;
   5a864:	K.w.|.j.........
   5a874:	=Ka..$p7U...l...
   5a884:	.4....K....A.!..
   5a894:	....k.%.K..."..1
   5a8a4:	..b.....t./+....
   5a8b4:	...H.......6v...
   5a8c4:	......I.........
   5a8d4:	.2....'..7......
   5a8e4:	<.....g.>..H..7.
   5a8f4:	\......$...&z)..
   5a904:	U.3"X....,...<E.
   5a914:	....X?....x.X/<.
   5a924:	.^..[...W.....P-
   5a934:	..M...|=...N..`.
   5a944:	s..6u..#..&*.9..
   5a954:	|.V...........E.
   5a964:	bN...26.....I.o.
   5a974:	...#P.....o.....
   5a984:	r.....w.Y...9...
   5a994:	..I%Y.A.T.#.....
   5a9a4:	.Av...).g^#.6...
   5a9b4:	........."`.S.M.
   5a9c4:	...-....8..Z...4
   5a9d4:	..aL+..2-.T.....
   5a9e4:	....E........C..
   5a9f4:	c./...J.{.K.U.T.
   5aa04:	.(-.....~.....b.
   5aa14:	5...:.>!._ .....
   5aa24:	...#i.n.N.}.....
   5aa34:	....J.b.1-VJ....
   5aa44:	fG......q.%.....
   5aa54:	..Q.4 .:...!..:.
   5aa64:	......z....<|..9
   5aa74:	B.2.....l.u.~1..
   5aa84:	. /..,...3......
   5aa94:	.......9........
   5aaa4:	....'b..,..\.+..
   5aab4:	@.i...8..*.....1
   5aac4:	;$...W..z.R.><..
   5aad4:	C.....'...M[ .u.
   5aae4:	-.~.p.#"....[..f
   5aaf4:	h.7...D..W......
   5ab04:	..\....#......."
   5ab14:	..D.W*......".b.
   5ab24:	U.r.u....0...0.R
   5ab34:	..k.......`.a...
   5ab44:	".o..*.==..3....
   5ab54:	....<.D.BQ...=..
   5ab64:	#.j<.._.....w...
   5ab74:	....^5.HS..*R...
   5ab84:	.....G..."j....&
   5ab94:	.........+#...x@
   5aba4:	..r._."##.....H.
   5abb4:	.D..d ...91.)...
   5abc4:	..U...6..<.4j&4.
   5abd4:	[3..S.7.W....2..
   5abe4:	Q.D..N..j...I...
   5abf4:	..i....(d.....# 
   5ac04:	....X.z..<b.S...
   5ac14:	41I.....b.. .[;.
   5ac24:	.....$.........(
   5ac34:	c....=W.........
   5ac44:	.......(..z..$.`
   5ac54:	........H.!.k.M.
   5ac64:	P.M1.....9i..O..
   5ac74:	..?.:)......4...
   5ac84:	.......[...!.../
   5ac94:	....G..E....P.b.
   5aca4:	....c\...e&.....
   5acb4:	t.G...?..;.%%..r
   5acc4:	....o..."..V....
   5acd4:	.4CQ..W.L.=,....
   5ace4:	S.7.&....X...]a.
   5acf4:	..t.....OKo.....
   5ad04:	..i.,.`.G..(....
   5ad14:	...!..z.y.s.2.?.
   5ad24:	...J...9.....7. 
   5ad34:	t.r..+....E.....
   5ad44:	E&..u.2..8..%...
   5ad54:	.,..q../........
   5ad64:	..`........8...,
   5ad74:	....n/1.!..)....
   5ad84:	=..<~..+D$....<.
   5ad94:	I...[..,.=.....<
   5ada4:	}...*.z.....)...
   5adb4:	I.@nG.....(.P...
   5adc4:	YD^...`...i..%..
   5add4:	T.....$........Y
   5ade4:	.9.0..0.......q.
   5adf4:	....*.. S..._C..
   5ae04:	.?.........EN..(
   5ae14:	....v.....g..;..
   5ae24:	k..3......j...'.
   5ae34:	.:G..........4..
   5ae44:	....."F.2....4..
   5ae54:	...6H.B........C
   5ae64:	..*...Oh%...1.(.
   5ae74:	+ z...S..F......
   5ae84:	.*..b.1..!...4z.
   5ae94:	..;.....T......,
   5aea4:	...4......%...^/
   5aeb4:	..x.0&-2........
   5aec4:	J.l.....8...B(C.
   5aed4:	@,....G.L.2..0T.
   5aee4:	.%v...;)#.c.....
   5aef4:	....r...kW..`..L
   5af04:	..?.......q"R.*.
   5af14:	..bY....h>....$.
   5af24:	.(..86..O#o..W..
   5af34:	$....01...x.#...
   5af44:	R../_..52.......
   5af54:	_1.....*....q...
   5af64:	..|...U..J..B...
   5af74:	~6..o*......,...
   5af84:	#....5]=..+.C.P.
   5af94:	....2...?.......
   5afa4:	..8.....m.{..$.;
   5afb4:	...R..>.....R...
   5afc4:	.j..lJ......oD..
   5afd4:	...3:.5.....%?..
   5afe4:	......(.......i.
   5aff4:	a..4......q.....
   5b004:	.&.......T......
   5b014:	;.~.1.....P.Uj.4
   5b024:	6!A.,.I.........
   5b034:	.3..............
   5b044:	1.o#............
   5b054:	z...}.N./'[...j.
   5b064:	.....Q.....B*.-.
   5b074:	....w..;......RY
   5b084:	S.k.D.`.g....:H%
   5b094:	[,J7..R.........
   5b0a4:	..)...z.3.$.D-..
   5b0b4:	......!...: x...
   5b0c4:	......N.........
   5b0d4:	k55,.,9..)Q....1
   5b0e4:	....D..1x.0.....
   5b0f4:	..I.. l..:VAG...
   5b104:	..D.L...B.....A.
   5b114:	.$z.A."5w...q...
   5b124:	.f{...v.......<.
   5b134:	!..........7....
   5b144:	........d.....s.
   5b154:	a.-.............
   5b164:	<..0..)Y....}...
   5b174:	........j..*.>*.
   5b184:	-.....s...A.J.m.
   5b194:	z......:...#b...
   5b1a4:	~.8.z...d.).....
   5b1b4:	.,j..=...o..]...
   5b1c4:	...&...(n.`.....
   5b1d4:	........!..,..\.
   5b1e4:	(.;....$........
   5b1f4:	..[.(^../...V...
   5b204:	.....9~.c3F.n.f.
   5b214:	....+.z.d...e.T.
   5b224:	0...........!...
   5b234:	'....8.!Z.......
   5b244:	.....).!%.C.3...
   5b254:	.:U.A....&".....
   5b264:	.."...].....LFK.
   5b274:	{.g+..-..0;....4
   5b284:	....L.p....&....
   5b294:	..............`.
   5b2a4:	zb.$....a.'....;
   5b2b4:	.....K....O...^.
   5b2c4:	^9.....=..m.:+..
   5b2d4:	.%c.......&...U+
   5b2e4:	...>u!.....R....
   5b2f4:	......[;.....Tl.
   5b304:	..T.......b.".W.
   5b314:	...Q|...8.....?.
   5b324:	..a......;9..1M.
   5b334:	......c.....$...
   5b344:	L......WG..#...1
   5b354:	|...@.....T.....
   5b364:	.F..!....J....SC
   5b374:	.............Q..
   5b384:	.<..X ..?.e...I.
   5b394:	a.t....?..$..U..
   5b3a4:	...+......[...:.
   5b3b4:	..7.'3......F...
   5b3c4:	.?..u...(.N...a.
   5b3d4:	x..,H8...NR;....
   5b3e4:	....D......C.S..
   5b3f4:	b..A....v.-...Z.
   5b404:	F...S.FJ.BY.. #.
   5b414:	;...2F....X._fT.
   5b424:	'.{:U..<..  ...;
   5b434:	.......#..Z...w.
   5b444:	m .3..S."9{.,...
   5b454:	.......1,....0..
   5b464:	W.1.......9.[#..
   5b474:	5.O...5... ...XU
   5b484:	.......'...N:$..
   5b494:	.+t6.(N...G...\.
   5b4a4:	..C...`.w-...Q3.
   5b4b4:	..%..C....o.p.B.
   5b4c4:	r!'*.. 4s.......
   5b4d4:	..e........,..&.
   5b4e4:	6Y_.v.J...Y.2..G
   5b4f4:	.......6....U...
   5b504:	..I...W......-$&
   5b514:	.....#-..*...=I1
   5b524:	d....../....<.Y.
   5b534:	.6.6.R4@....Y...
   5b544:	$...J$.)J..r1...
   5b554:	............. .(
   5b564:	[1...+ ........$
   5b574:	...!........^...
   5b584:	. .0H..*,.".....
   5b594:	'....,.....<.(..
   5b5a4:	.../~.D.T.....T 
   5b5b4:	....J.....(4.C..
   5b5c4:	.E..$...2.c....A
   5b5d4:	=..(...5..../%<5
   5b5e4:	..-.;.%.........
   5b5f4:	.5....0../......
   5b604:	... .&>?..).....
   5b614:	..1.W......,."D.
   5b624:	....m<....H.jQu.
   5b634:	....r......*..."
   5b644:	h.........V.?...
   5b654:	..2..........'..
   5b664:	.X..........{.n.
   5b674:	g%....b'S.q...=<
   5b684:	z.].......u.T...
   5b694:	...M(.........6.
   5b6a4:	-...|....3v.x3..
   5b6b4:	-............r..
   5b6c4:	U.........O..%[5
   5b6d4:	K.r&o.1.........
   5b6e4:	v!..>..N..K...3I
   5b6f4:	....&...E.i.....
   5b704:	J".r....f.....I.
   5b714:	..........o'.*..
   5b724:	Q...N.....D.=...
   5b734:	...,a.@.R...I...
   5b744:	.....73/..}Sm...
   5b754:	1...U..9.<y.Q./C
   5b764:	+.......50..e)..
   5b774:	.<Q...|.......m.
   5b784:	....L.=^..9g....
   5b794:	....p.....=*...C
   5b7a4:	b.z..(K.r)...%P.
   5b7b4:	.....'...9Q...F.
   5b7c4:	..2....+......o.
   5b7d4:	J.V6{...!.5.R..E
   5b7e4:	......-F7...I...
   5b7f4:	<Xh.."P.....S...
   5b804:	B...3!....%.w...
   5b814:	....S.......V...
   5b824:	=..b6.....0"....
   5b834:	...Er.VC..+ .K..
   5b844:	;.....$.<....W..
   5b854:	.....K........l4
   5b864:	......+.T..!...,
   5b874:	p..E..P........;
   5b884:	..%....7q....2..
   5b894:	..v.............
   5b8a4:	X&p...nG_.%.....
   5b8b4:	....n.Y...R.?.#.
   5b8c4:	]!/.J......P6.+E
   5b8d4:	M...M.......g,..
   5b8e4:	.. ...6.;DY...r.
   5b8f4:	.......N....n4S.
   5b904:	..l0..T)t..2$.`.
   5b914:	..........A'....
   5b924:	.J...;..j.=.+...
   5b934:	<..!....^.E....?
   5b944:	m...;..'+.I.....
   5b954:	..z...c.R...m&. 
   5b964:	.'..m..'/.3.K)..
   5b974:	.&...4.E.......0
   5b984:	U...^.....G(...5
   5b994:	D....1.*`...... 
   5b9a4:	......|.8.'...6.
   5b9b4:	..9Bl ...'..:...
   5b9c4:	..v...W)...2T.v.
   5b9d4:	..F'..V%........
   5b9e4:	d....H......7.8.
   5b9f4:	X.....(..3$.e4z"
   5ba04:	..c.6-..........
   5ba14:	.../.!`$m.......
   5ba24:	..z"......%.8..9
   5ba34:	y....$.(........
   5ba44:	^.. ....|.....T.
   5ba54:	e...8'Y..._.s..'
   5ba64:	P....:.......-o.
   5ba74:	..}...+..%..LIo.
   5ba84:	....7......&.)..
   5ba94:	.B..G.........2.
   5baa4:	..P..Z.....2..g,
   5bab4:	..1.r...k[.....K
   5bac4:	.............J..
   5bad4:	....i.^%..u.]...
   5bae4:	u(,1....K&......
   5baf4:	..z._...|.K4f.l.
   5bb04:	.@..u ..b.6...v.
   5bb14:	B..L.....*..2...
   5bb24:	.....$#.....|.g.
   5bb34:	!!G...I>[...{8d.
   5bb44:	.....5 ....D....
   5bb54:	.P.....8"9....Y.
   5bb64:	D.....0...k.#a.4
   5bb74:	i..(u...a.t.?.C.
   5bb84:	k......."..%K.p.
   5bb94:	p...........T...
   5bba4:	k$...........H?.
   5bbb4:	8.......E."...:.
   5bbc4:	......!B...<....
   5bbd4:	W.3.e....FW..6..
   5bbe4:	#.F.+0......j...
   5bbf4:	.3......5.`...+.
   5bc04:	......9f..T....A
   5bc14:	... ..........u.
   5bc24:	.F....f*j.L.....
   5bc34:	I.G.B...i.'.e..(
   5bc44:	......}.}....8&.
   5bc54:	!.-"...!/.+...+.
   5bc64:	..;..B.'..{.$.%.
   5bc74:	.....7....\..Dx.
   5bc84:	..c.X...l p...'7
   5bc94:	....;..)........
   5bca4:	............d&..
   5bcb4:	.[...K..J%<.q...
   5bcc4:	./..r2Y......7..
   5bcd4:	..._z..8..d...}"
   5bce4:	5.m.d ".\.......
   5bcf4:	..Y...<.8.q'ZI..
   5bd04:	......g!8...k._*
   5bd14:	L..Eo/......X...
   5bd24:	b.f.O...........
   5bd34:	....VC......X..8
   5bd44:	..B.............
   5bd54:	...=....<Lv.;...
   5bd64:	*.z........-...5
   5bd74:	..A-r..#&...n...
   5bd84:	S...{...........
   5bd94:	.+....j>.....M..
   5bda4:	>...2...4%..-..r
   5bdb4:	<../..f...X...,.
   5bdc4:	...S..&..Mk..J..
   5bdd4:	$.#...?......##.
   5bde4:	....[&z...V.....
   5bdf4:	].C..(.........)
   5be04:	m.F=....O$-.K.b.
   5be14:	y.&......+.....3
   5be24:	.............$..
   5be34:	PJ.....@....=C..
   5be44:	..h...T.i..D..G.
   5be54:	.....)..........
   5be64:	R=C.........|.C.
   5be74:	..J...G.....b..+
   5be84:	n.{.A...B2......
   5be94:	I.f.)...-.....(.
   5bea4:	9/E.b...!.......
   5beb4:	..\.~..0w..c..s.
   5bec4:	............5.9C
   5bed4:	y...f)...T9...._
   5bee4:	!.A.A.f...eD<.8.
   5bef4:	{..*u....-W.."?.
   5bf04:	..R.|/+/.....@..
   5bf14:	.Y....f.i......$
   5bf24:	..}......"%WH...
   5bf34:	S.3.o.....i..8..
   5bf44:	...U.....-..r.u.
   5bf54:	....#..=...$.%..
   5bf64:	.oN.E.!,..... ..
   5bf74:	&....r*..4;.=..(
   5bf84:	..e.......H.k5".
   5bf94:	...<.........'..
   5bfa4:	......f......!1.
   5bfb4:	...*..........?.
   5bfc4:	....@.9.F..Y....
   5bfd4:	'...7.........L)
   5bfe4:	..R.8X......K.w.
   5bff4:	....J...C6?.....
   5c004:	........A.[.VX..
   5c014:	8..(..A.0. .....
   5c024:	t...`.......'.].
   5c034:	....B.]IO.o...E>
   5c044:	..........&2....
   5c054:	<9.(.5'.....Q...
   5c064:	o.=...O..-(.)..=
   5c074:	....y8......5"h.
   5c084:	1......=}..6[#.H
   5c094:	:...5.!.3..UN...
   5c0a4:	.;.....*x...z...
   5c0b4:	$...j9).zL..,.s=
   5c0c4:	].....<...b.0...
   5c0d4:	...*..6.....a.2.
   5c0e4:	C...4.x.S>E.....
   5c0f4:	{.....Q....$..9.
   5c104:	..>9L".....%..,#
   5c114:	..^.....-...l6..
   5c124:	..Y_k.....u.3...
   5c134:	..........6..(J.
   5c144:	..,./...V...$...
   5c154:	.-..........9...
   5c164:	.O.....GD.......
   5c174:	.......#&......+
   5c184:	H..)......b.....
   5c194:	g..,q]..,....-..
   5c1a4:	.%;....'[.<.. ..
   5c1b4:	..~.....9..U..l.
   5c1c4:	..W.U.....#.....
   5c1d4:	...#A5..f./.:...
   5c1e4:	6.....+......2..
   5c1f4:	M.,?...$M#......
   5c204:	.....%x.........
   5c214:	@.*....F.....0..
   5c224:	..J.2 ....}.e...
   5c234:	..t..I...*..]..;
   5c244:	u>........k.....
   5c254:	..,TR...:...s...
   5c264:	F.U...'KG.......
   5c274:	...........-W..!
   5c284:	..X...3.....&._.
   5c294:	........1*..t...
   5c2a4:	...NV....r.A(...
   5c2b4:	........]..#.1!F
   5c2c4:	n..,T..9&.y.%...
   5c2d4:	..d...;..)...."#
   5c2e4:	..).K.`...B.....
   5c2f4:	C.E.Z......7..."
   5c304:	....k.@.....[...
   5c314:	....a.}1e....T/.
   5c324:	<.%.......V.9.^.
   5c334:	.,..;.1.m...b.).
   5c344:	M.r)...-......p.
   5c354:	....-...#.n.W.VD
   5c364:	......?.G.......
   5c374:	q...{3..l....5..
   5c384:	..x.i.N.....1...
   5c394:	...7... ........
   5c3a4:	5..01.......k...
   5c3b4:	1.h...I..D...$:.
   5c3c4:	..a...G.,.l&..&.
   5c3d4:	^+......7.o..#..
   5c3e4:	E...........L..r
   5c3f4:	..x...K.........
   5c404:	.RY.....[.i./-F.
   5c414:	..g...5..97...Y.
   5c424:	..K.4.....%@..>.
   5c434:	..{.C.C%..&.....
   5c444:	w!...6....t.4...
   5c454:	).e.....M..(....
   5c464:	...+......o.<.R'
   5c474:	......Z.....P#..
   5c484:	m.l...iE........
   5c494:	+.7.].$.....V.5.
   5c4a4:	.4....;.H!3...U.
   5c4b4:	......7.......Z*
   5c4c4:	......Y...=.....
   5c4d4:	|..6....5.^....(
   5c4e4:	........j.......
   5c4f4:	..W.U..X......|.
   5c504:	K..............U
   5c514:	l....$........V.
   5c524:	..3.G....(w.1..0
   5c534:	v..1"...L...R...
   5c544:	..R........3."9.
   5c554:	.*.6..~..'..L...
   5c564:	b....F../..+....
   5c574:	e...........,.'=
   5c584:	l.8;..).;$P...P*
   5c594:	.....'".X...2...
   5c5a4:	Z.vB....x w.J.).
   5c5b4:	.BC..<..h.j,....
   5c5c4:	.?9.........t.2.
   5c5d4:	..nM......N....<
   5c5e4:	....WF0.[.....X.
   5c5f4:	........B.l..EH.
   5c604:	..&......1^*N...
   5c614:	P...0.....1 H.'.
   5c624:	H..H...7N.......
   5c634:	M.i.Q........N/.
   5c644:	.....=......N.p.
   5c654:	n.Q$".n.....o..G
   5c664:	....\.z...#.|/..
   5c674:	.....=..e"...,..
   5c684:	..A.......u.....
   5c694:	.@'.`(\.........
   5c6a4:	....L.m...."C..-
   5c6b4:	6...: {.......,.
   5c6c4:	..e...^.d1......
   5c6d4:	_.b.b.......-...
   5c6e4:	.,........'...0.
   5c6f4:	....o.."...#....
   5c704:	U...9.&.g.......
   5c714:	. .. ..9%."...H.
   5c724:	....8...O.z+\.o.
   5c734:	...@9.5.F.......
   5c744:	..4.? '../....DD
   5c754:	e.Q.g.(...i.....
   5c764:	.@Y....U........
   5c774:	1.7.....]...B.q.
   5c784:	./!....3..>..'..
   5c794:	......W.I%.2@...
   5c7a4:	9..Q....%....1..
   5c7b4:	......m?+...."..
   5c7c4:	:)......x..'..5.
   5c7d4:	.!H........(..D.
   5c7e4:	2.......aWh...O.
   5c7f4:	........g...^"..
   5c804:	U.a.`.|BR.a.CD..
   5c814:	......0...?...M.
   5c824:	....D.K"......S.
   5c834:	.&.+b...W.......
   5c844:	..i..@...... ...
   5c854:	.,......j.......
   5c864:	........a.T.!.3)
   5c874:	.%[..1T7 ./.....
   5c884:	....f.....;..&..
   5c894:	.+.J......4.9...
   5c8a4:	..........."O...
   5c8b4:	...!....n4K...X)
   5c8c4:	..F.o.a.t..,_ ..
   5c8d4:	.&(.....3.......
   5c8e4:	........4...J.K.
   5c8f4:	....j..$..}B'...
   5c904:	8.........'....9
   5c914:	..b../'.....P.r.
   5c924:	...'......u.).{.
   5c934:	).].......4.09..
   5c944:	Z@..).l"...)|...
   5c954:	..}.(..........1
   5c964:	........`-......
   5c974:	............... 
   5c984:	......C...G..#p.
   5c994:	......K.r.;/5.0.
   5c9a4:	QBV.*.?.....=..!
   5c9b4:	..W..=....`.(.M.
   5c9c4:	......e.....J.B.
   5c9d4:	.....,..Q.\.....
   5c9e4:	....V.....?.+.3.
   5c9f4:	T...d..Ap.M...!.
   5ca04:	...........,n...
   5ca14:	.,2.+%,.....R.e.
   5ca24:	.4....-.....c..J
   5ca34:	..O...o..!......
   5ca44:	...+$.n.....C(t.
   5ca54:	.......5e.......
   5ca64:	........"...n...
   5ca74:	o.......~.pA-.u6
   5ca84:	..b..-t....&^..L
   5ca94:	..O2R...+>E.....
   5caa4:	[...M#..u...U0..
   5cab4:	q.....;.h.]..&!.
   5cac4:	.1B'\.?YB.......
   5cad4:	..*.,.*..../g..1
   5cae4:	...%..T.....Y...
   5caf4:	..c......)......
   5cb04:	m..Q........F...
   5cb14:	..)....>........
   5cb24:	.(x.....w."...r.
   5cb34:	e....A .........
   5cb44:	..H...X-.8k.]...
   5cb54:	....C.........m(
   5cb64:	..s.!...B....3A.
   5cb74:	...<..&.....j.u.
   5cb84:	.(...%..i.r.....
   5cb94:	..s...6.g.. ....
   5cba4:	..........#...W<
   5cbb4:	....!....3..k.U.
   5cbc4:	..d.........[66.
   5cbd4:	....d.!.......(.
   5cbe4:	..y........5...4
   5cbf4:	....(:..D.......
   5cc04:	d.b./.3.f).....2
   5cc14:	....P.n...5.A...
   5cc24:	o.H...`......!*.
   5cc34:	.>..d..8........
   5cc44:	..f...6.....[...
   5cc54:	.+t.....M.....u.
   5cc64:	E....-......T.l.
   5cc74:	..F;4....(.....1
   5cc84:	w.u...$......9..
   5cc94:	.....#........".
   5cca4:	.)..> ....}2..D.
   5ccb4:	....Z.....7!...3
   5ccc4:	?.{-........6(..
   5ccd4:	!..,..6...,..6..
   5cce4:	w.h.u.........h.
   5ccf4:	O+..I........#..
   5cd04:	... n.w.......R.
   5cd14:	]..3..A.,+......
   5cd24:	!.+..../g.7.wGK.
   5cd34:	4..@.,%.n.6.^...
   5cd44:	........1.x.="I.
   5cd54:	o......FQ...l...
   5cd64:	.........6a6C.;<
   5cd74:	..B.7.....d...*.
   5cd84:	....b.d.........
   5cd94:	r&....}.:.&...m.
   5cda4:	&......,...(."..
   5cdb4:	i..._.s.......Y.
   5cdc4:	^@....i.x.......
   5cdd4:	..<.Z...v......K
   5cde4:	=.V*).....r)..&.
   5cdf4:	R.."...@....Z...
   5ce04:	.._...".\...,4..
   5ce14:	e...8*..[...i...
   5ce24:	...%.....6.....'
   5ce34:	....X..........&
   5ce44:	~..(.....4..J.2.
   5ce54:	..&...f.".$._;5.
   5ce64:	....(*..v.rE..p.
   5ce74:	.......&}...r., 
   5ce84:	p.....b...j.'.h.
   5ce94:	."'9. ....Y.E...
   5cea4:	P.2....._...GT..
   5ceb4:	..."..c%........
   5cec4:	y.G(...$....L..4
   5ced4:	..:..<....x.R...
   5cee4:	4.....S.A..0D.W.
   5cef4:	......r...*.?.y.
   5cf04:	...,y...........
   5cf14:	....e..Q=...})..
   5cf24:	..^.........../.
   5cf34:	E6....=...z.....
   5cf44:	......L.V...S..<
   5cf54:	t.0.5...Z:....c.
   5cf64:	8..!..2......2..
   5cf74:	..........{...}.
   5cf84:	f=.&'.5)....5...
   5cf94:	~.s.......*....2
   5cfa4:	.,...E...2....w.
   5cfb4:	...."....7..z...
   5cfc4:	..I'..d.J.......
   5cfd4:	.../....N..B....
   5cfe4:	........7.@.....
   5cff4:	"H....,.........
   5d004:	......q...,.4...
   5d014:	......w...../.3.
   5d024:	3....'a.........
   5d034:	...4s.6.......h.
   5d044:	.!.........7V.0.
   5d054:	.5^...o....9."..
   5d064:	.......#..l...."
   5d074:	..."H.~#.*......
   5d084:	..........(.K.v.
   5d094:	..............Y.
   5d0a4:	^............./.
   5d0b4:	....i...!.j)..N.
   5d0c4:	....9..."..9s...
   5d0d4:	..$.....*.>...&.
   5d0e4:	......W..<...%i.
   5d0f4:	u.....m.........
   5d104:	w......#........
   5d114:	../.~.$...^.W...
   5d124:	....T.j..."...X.
   5d134:	..s.f.F.........
   5d144:	C.....5.$......8
   5d154:	.......)v.......
   5d164:	........\'}.8...
   5d174:	.*6.....n.>.3...
   5d184:	.2e...'.!.8...8.
   5d194:	..).......p...d.
   5d1a4:	....m.K.O.8...=.
   5d1b4:	3.e.  ....H.)...
   5d1c4:	d...............
   5d1d4:	.(..3.3...P...%.
   5d1e4:	......q.f.<..%6.
   5d1f4:	U...^......,L.F.
   5d204:	.:T.g.....=.....
   5d214:	...../~.........
   5d224:	........T.....K.
   5d234:	V.V.h.a./.......
   5d244:	L'.....&....!...
   5d254:	J.p.B.%.........
   5d264:	..O. ...........
   5d274:	.":.....b-......
   5d284:	..{.Z.@..*2...A(
   5d294:	....<........:A.
   5d2a4:	_..0... ........
   5d2b4:	........q...G...
   5d2c4:	..K.....X....'..
   5d2d4:	V.......|...i..+
   5d2e4:	s(..u+:..4%.5.q.
   5d2f4:	......2.....(*..
   5d304:	x.....=.....%.R.
   5d314:	........$.....y.
   5d324:	.5k..<......!...
   5d334:	.....&T...g.....
   5d344:	..I.....e.v..!..
   5d354:	0........)..D.1.
   5d364:	...+..Z.a....*..
   5d374:	....7.'.x.....r.
   5d384:	s.E.#.....PE..u.
   5d394:	....85....w....F
   5d3a4:	........Q1......
   5d3b4:	..l...h.[.+..Sa.
   5d3c4:	>.6.j.......s...
   5d3d4:	....j..*q..2....
   5d3e4:	W.r.....w......9
   5d3f4:	....j.4.A=../.V.
   5d404:	k...I.Y.....Q4..
   5d414:	.._.....|.,...\.
   5d424:	......cB-./.0...
   5d434:	l.6.^.........*.
   5d444:	....V....)..P...
   5d454:	..p.i*..........
   5d464:	,.o..1"/.,(...e.
   5d474:	....b...u...Y.0.
   5d484:	......;/.....CL.
   5d494:	..2.R.y.3.. ....
   5d4a4:	;....'....$.....
   5d4b4:	g..........H..B.
   5d4c4:	....d...........
   5d4d4:	...>..6..(i..":.
   5d4e4:	.'`.............
   5d4f4:	5..:..!.E.....&.
   5d504:	........R.3.i.:.
   5d514:	^8..'0*.X...*.0.
   5d524:	W.....X.m...f...
   5d534:	g.}"!...&.J...!.
   5d544:	................
   5d554:	......."../...W.
   5d564:	....I.L.}.M.h...
   5d574:	.....$..k.8...o.
   5d584:	....?..4..c.L.m.
   5d594:	..e4....V.u.2..#
   5d5a4:	F.....e.)...6@..
   5d5b4:	5..&....9.......
   5d5c4:	....C)\..9......
   5d5d4:	d0..W...T...V...
   5d5e4:	.....7d...~.}..)
   5d5f4:	......s...,.....
   5d604:	w..._.I.......0.
   5d614:	v.<._..9..N.....
   5d624:	......?....,..W.
   5d634:	......;........:
   5d644:	j.G.Q5........z.
   5d654:	...C..6!T$..@..%
   5d664:	b.A...N.........
   5d674:	.)..G.R.d.......
   5d684:	............|...
   5d694:	..f..!?...H ...*
   5d6a4:	R.0.......Z.....
   5d6b4:	....f.......x.I.
   5d6c4:	..........I.&.M.
   5d6d4:	f;..k.B...`.....
   5d6e4:	?....$..c..@..u.
   5d6f4:	.6....&.".}.j.a.
   5d704:	8.r....3s...9...
   5d714:	....7.>.D...o...
   5d724:	P...S.........S&
   5d734:	....M...........
   5d744:	......t.#..&i"/.
   5d754:	......b.Z/j.W...
   5d764:	>._.....f..+..c.
   5d774:	...$..v.D.......
   5d784:	....&.1....;....
   5d794:	i.........n.;&..
   5d7a4:	.6....?.A-......
   5d7b4:	......|.......Z.
   5d7c4:	&..........._...
   5d7d4:	../...T...#.....
   5d7e4:	..K...)$..).....
   5d7f4:	).G.......w....H
   5d804:	...(.$..p...s.x.
   5d814:	......(6....~$z.
   5d824:	....*#........N.
   5d834:	.&V.-.....U.t...
   5d844:	..>........E..-"
   5d854:	...)\%E....+F.e.
   5d864:	k.|.Q.......&\#.
   5d874:	U.T.^...>.......
   5d884:	(.O.X...)....+9.
   5d894:	_.=....=........
   5d8a4:	............r...
   5d8b4:	....A.......@...
   5d8c4:	..0...a.....i.@0
   5d8d4:	*...H.....?...^.
   5d8e4:	_...h.........x.
   5d8f4:	T.y.d.A.........
   5d904:	....h.W..1K.....
   5d914:	................
   5d924:	.2Z. ......0<...
   5d934:	r%.....'....*...
   5d944:	n...$...a0s.(6y.
   5d954:	....Q.......>...
   5d964:	...5=..N..h.....
   5d974:	..........Q!$...
   5d984:	. p.q.......Q.. 
   5d994:	..y.L....;=.z-..
   5d9a4:	d.o.+.........|.
   5d9b4:	>......$z.7.....
   5d9c4:	....`.y...m0f...
   5d9d4:	.1..V..(..U.....
   5d9e4:	.....'..V......;
   5d9f4:	3./...g.7.61..w.
   5da04:	..2.M.@.......:.
   5da14:	/...........w)..
   5da24:	........../.....
   5da34:	'.1.Z......,]...
   5da44:	....+.......:...
   5da54:	?.|..;....]...y.
   5da64:	......x..&..&..2
   5da74:	..O5..p...E.....
   5da84:	."...9*.....t...
   5da94:	...-5.......i...
   5daa4:	..?....G..#>f...
   5dab4:	..g..1_.........
   5dac4:	..+ t25...u.....
   5dad4:	..;...8.[.L..<N.
   5dae4:	R.......d.#.....
   5daf4:	i.[.....s..K..G.
   5db04:	.!.............O
   5db14:	v..$..n.....B...
   5db24:	c.=.=....!W...`.
   5db34:	!...........b.J.
   5db44:	......$......!!.
   5db54:	 ...R.M.X.g....#
   5db64:	..+..=..R.w.....
   5db74:	..,...T.....5.7@
   5db84:	."..z.....5...O.
   5db94:	..7.. ..r.Z.&...
   5dba4:	=.u0X..2u.A...W.
   5dbb4:	1.w.G.......[...
   5dbc4:	F.v.........{...
   5dbd4:	. ....\...J...j.
   5dbe4:	....6...^..(..t.
   5dbf4:	..C.............
   5dc04:	..S*....:...l#.&
   5dc14:	D.y. 3..........
   5dc24:	F...]+...0h.D...
   5dc34:	..y..5..>..+;...
   5dc44:	.",.g.a.}...$..-
   5dc54:	C.54..e.W6....j.
   5dc64:	R........(G.n/..
   5dc74:	C...C.@.Q.......
   5dc84:	j.K+......].}...
   5dc94:	.....)..........
   5dca4:	..n.,.|..$T...n.
   5dcb4:	:.5..........W..
   5dcc4:	....o...D.....s.
   5dcd4:	.......'....J...
   5dce4:	#'..P.x..../....
   5dcf4:	......l.?.9=7...
   5dd04:	5IG%8.C.......i.
   5dd14:	.!..0....B..O.A.
   5dd24:	..a.......`..3.M
   5dd34:	Y...).....$.=.V.
   5dd44:	.#U.......V.....
   5dd54:	..-..;A.....9...
   5dd64:	..........)....(
   5dd74:	C.....T.......C.
   5dd84:	..u....1{.T..1..
   5dd94:	..A.......`.....
   5dda4:	................
   5ddb4:	.B0....@$.M....*
   5ddc4:	d.>.C.+.<...].#:
   5ddd4:	.$. C.'../k"....
   5dde4:	......J.....62N.
   5ddf4:	..............N.
   5de04:	&=U.<..-........
   5de14:	........D.w...C.
   5de24:	................
   5de34:	..-$:.....^..4.%
   5de44:	...T.4..D.p...>.
   5de54:	......W*.F...&d.
   5de64:	.>..Z...t...|...
   5de74:	..........!0. ..
   5de84:	..[...I...U...z.
   5de94:	.....>...$......
   5dea4:	q...............
   5deb4:	.+....$...F...}.
   5dec4:	................
   5ded4:	...2....M.m..!.-
   5dee4:	..........|.....
   5def4:	....{...2/......
   5df04:	......L...=...L1
   5df14:	;.....g0....d...
   5df24:	#.....-...3..7X.
   5df34:	C#v...o.........
   5df44:	....o.....#1L.n.
   5df54:	...D..........C.
   5df64:	\.k.S1...../`.`.
   5df74:	..!.~.-...t.1.n'
   5df84:	........eh......
   5df94:	Y.....).D..=..>.
   5dfa4:	f.........4.,...
   5dfb4:	..k%"...........
   5dfc4:	]....C..k...6...
   5dfd4:	..........:...'5
   5dfe4:	2...T...).......
   5dff4:	.. ..../........
   5e004:	..7.L.).O...2...
   5e014:	3!O.......?.....
   5e024:	 Q5.Y...........
   5e034:	..}.......y%..I.
   5e044:	j...9.......J...
   5e054:	..p.....Q2..... 
   5e064:	........q.$.....
   5e074:	[&..:.#..*_.g...
   5e084:	..z.......4.....
   5e094:	\S^.....3...x...
   5e0a4:	..l...K..C.....#
   5e0b4:	.!..;.......{.=.
   5e0c4:	...#i.k..#.,.1..
   5e0d4:	=. ...w.e.k.....
   5e0e4:	..1.......}.X0:.
   5e0f4:	4.......1...v.}5
   5e104:	"...L.".....w.^.
   5e114:	...#..".."z..5..
   5e124:	............/.7(
   5e134:	..(.R...`.R..D..
   5e144:	r.L.R......I...<
   5e154:	@.Y.U,....5"....
   5e164:	......X.<.:.(L..
   5e174:	........V+.....;
   5e184:	..`.............
   5e194:	e....../........
   5e1a4:	K.-..+........X.
   5e1b4:	....'(..F....AK.
   5e1c4:	.4............G.
   5e1d4:	......kS.......)
   5e1e4:	Y.O...Q.........
   5e1f4:	..3......G..N...
   5e204:	....8.{.:......N
   5e214:	`.n. ..*..~.Q.O.
   5e224:	).....2....5....
   5e234:	."Q.*.....~...'.
   5e244:	..5..!B.k...... 
   5e254:	..........."F...
   5e264:	d..5Q.;.~.Q.0...
   5e274:	_.....]...z3....
   5e284:	4.I...........d.
   5e294:	.$:..%>...R...;.
   5e2a4:	S...........H...
   5e2b4:	%3....U...^...m.
   5e2c4:	;.u.l#...;...G6.
   5e2d4:	....=.....I.J.X.
   5e2e4:	.."0.....F......
   5e2f4:	..........DD....
   5e304:	.J............'.
   5e314:	..*.I.6...!-....
   5e324:	.-..O..&....l.I.
   5e334:	...-_2..<.i.ZT3.
   5e344:	..l...s9>.=.....
   5e354:	^Fk.... K.':m...
   5e364:	..U.....C.( .!..
   5e374:	..<..2........&.
   5e384:	..&^p...........
   5e394:	......F*......O.
   5e3a4:	u7V....F..7...s.
   5e3b4:	..W.J...9..+..H.
   5e3c4:	.$......`..)/$..
   5e3d4:	..............NL
   5e3e4:	Y..........&..u.
   5e3f4:	F.#...x...h.W...
   5e404:	......... . ..{,
   5e414:	.7).........5...
   5e424:	Y.y.......E3.Na.
   5e434:	....;.....'.....
   5e444:	....j.....".Y...
   5e454:	$.84..Z..)....c.
   5e464:	....b+..o.z...s.
   5e474:	Y...K.A"#.J...p.
   5e484:	n.=...3.`.....o.
   5e494:	/+<.%A..'.J.....
   5e4a4:	......R..A.....,
   5e4b4:	..p.6.....9./-..
   5e4c4:	........\...@"..
   5e4d4:	#."...,<...<4...
   5e4e4:	.$^.s.....#.n...
   5e4f4:	.........5..Z$..
   5e504:	%../r.K.a.}...u.
   5e514:	........~)....v.
   5e524:	...$..I&[...|...
   5e534:	...#>,;.e..Eg.k.
   5e544:	......x..#n...P:
   5e554:	d...."e.....#.,.
   5e564:	..z.......H....2
   5e574:	..f.w...d.i.h...
   5e584:	......Y.......E.
   5e594:	.A}...%.].......
   5e5a4:	....94....h$..6.
   5e5b4:	W.m...H....:r.).
   5e5c4:	...._.|..O..l.}.
   5e5d4:	... ........b5?.
   5e5e4:	Z.....Z%...#....
   5e5f4:	u:......T.,.t...
   5e604:	..,.7...|...{.."
   5e614:	k...]D..?8..3.L,
   5e624:	..h..'..xN..V:..
   5e634:	?.48......z...v*
   5e644:	B...F.p9G...Z.o.
   5e654:	..M....%w..52%..
   5e664:	.g....e.......j.
   5e674:	..<.r2..I....)".
   5e684:	..*...u(I.......
   5e694:	9..+... ..g.[]..
   5e6a4:	V.........G...?.
   5e6b4:	.F..t.....r)....
   5e6c4:	g.......|......@
   5e6d4:	..,.^.9.`...7...
   5e6e4:	.-.9..5...|...W.
   5e6f4:	..-.>!d..-h.A...
   5e704:	7.U...,;4....C`.
   5e714:	......`...l+...$
   5e724:	.%..............
   5e734:	..........>....,
   5e744:	......W..?..[...
   5e754:	0".5............
   5e764:	&.~.:..7..&.0.[.
   5e774:	..p.E...G...w...
   5e784:	....A;..A5Z....9
   5e794:	..B.1)M.....w.0.
   5e7a4:	..K%..&.r5%.....
   5e7b4:	j.........N.s.c.
   5e7c4:	......."..\C..K.
   5e7d4:	.<....>..!....,.
   5e7e4:	X.....S...}*=.-.
   5e7f4:	J.*...2.=.....S3
   5e804:	..y.(...{.V..5..
   5e814:	../2..o.&4......
   5e824:	Q.7.]..;%......$
   5e834:	....".Z....*... 
   5e844:	x.o.u-..B.d.....
   5e854:	..@.V ...5..-0..
   5e864:	!.$._..(....81..
   5e874:	....c.a8Y.p.....
   5e884:	.. ...D.D..*..U.
   5e894:	^._.@..)C.q.R$..
   5e8a4:	......c...V..40.
   5e8b4:	#.....m.'.....u.
   5e8c4:	.00....K.._.RC.1
   5e8d4:	........#.......
   5e8e4:	.......%L.n.@...
   5e8f4:	yGx.X.....3.2...
   5e904:	j..7.:...A..Z...
   5e914:	v.1...E.........
   5e924:	M.......)..+....
   5e934:	+...U...)...6.*.
   5e944:	@-...,.&D.......
   5e954:	...........E....
   5e964:	..p.k...v.......
   5e974:	.. ".....P...,x.
   5e984:	..../.......R#..
   5e994:	.E....'.........
   5e9a4:	U......6..v....+
   5e9b4:	"...,........)q.
   5e9c4:	. .;..y..(......
   5e9d4:	|...s._..(...+:.
   5e9e4:	...7i...Z...:...
   5e9f4:	.......?........
   5ea04:	..G.dI*.....r.7.
   5ea14:	.)....3..!....=.
   5ea24:	......!.3.c$.=.!
   5ea34:	R..!~.../...B...
   5ea44:	..'.!..Y.....$..
   5ea54:	0(A...".....V*(.
   5ea64:	.'.......9}.:..?
   5ea74:	%...a./.F.?.-...
   5ea84:	7...P3..:._...F.
   5ea94:	....E........0..
   5eaa4:	......\.........
   5eab4:	.W..p..*....?...
   5eac4:	....\.../..9..v.
   5ead4:	.0]...k.p...l...
   5eae4:	J........A..R...
   5eaf4:	s..>....;...&$K.
   5eb04:	....(.t5..z...q.
   5eb14:	".t.......~A`)!.
   5eb24:	.,..9...........
   5eb34:	#........5.....J
   5eb44:	...5..!.X...C.9.
   5eb54:	..R;..u...q..)..
   5eb64:	.............2..
   5eb74:	..T..FU./.......
   5eb84:	W.....B....L..:.
   5eb94:	..'...r.6.......
   5eba4:	@...e.....s.P...
   5ebb4:	_...........'.9*
   5ebc4:	....2.\.....Z8X.
   5ebd4:	v.d.~.t...2$....
   5ebe4:	g.`.i;....p8..n.
   5ebf4:	.....<R%{.9.Z.=.
   5ec04:	.%v.v.U.T$...%..
   5ec14:	.%.-........T...
   5ec24:	V...j......!N...
   5ec34:	7.S.X.N...e.....
   5ec44:	....).....B...^.
   5ec54:	.....,y.F.....l.
   5ec64:	................
	...

0005eca4 <sample_20_standard_DRUMS_cowbell>:
   5eca4:	........e.....&.
   5ecb4:	......a....b....
   5ecc4:	.r.....r.......r
   5ecd4:	.....J.........+
   5ece4:	..A.|.....Y.o..g
   5ecf4:	..j..r.....q..8.
   5ed04:	.r...rI<*..r..17
   5ed14:	5.t..r..j.......
   5ed24:	......a....0-...
   5ed34:	s6..M..I...r.H..
   5ed44:	.r.....r...q9_..
   5ed54:	.r./..|U..x.`3..
   5ed64:	N.....i.....8._.
   5ed74:	p.w......0....df
   5ed84:	<..O.....r.....r
   5ed94:	...JR^...r...;.i
   5eda4:	....i...=.......
   5edb4:	..........!._...
   5edc4:	f...F[..)..r.D..
   5edd4:	4e.079.U.&.^l!..
   5ede4:	&^....Q.&..6v...
   5edf4:	.. ...r.........
   5ee04:	m.....'.J.3.6...
   5ee14:	.0.r..bZ.M...f.&
   5ee24:	v..2...+4...'...
   5ee34:	3...S.....l.....
   5ee44:	..O........+...)
   5ee54:	,.@.{n*1.4.AE..V
   5ee64:	sOa.i::.d.q1m.K.
   5ee74:	+.r.....,.u...I.
   5ee84:	F.F.....k.P.q...
   5ee94:	....<..A...*.W..
   5eea4:	eM.<_..0...1.-r.
   5eeb4:	6.....P-2.m.....
   5eec4:	....`.....@.....
   5eed4:	....v.......T*Q,
   5eee4:	 .....^!.6h.....
   5eef4:	......r.+.....}.
   5ef04:	^..."!..h...o...
   5ef14:	K...............
   5ef24:	..u...R.%..9(...
   5ef34:	..d..+........0.
   5ef44:	......2.....1...
   5ef54:	........ .......
   5ef64:	....X...........
   5ef74:	..v.`....!"...G.
   5ef84:	...+....;.k.....
   5ef94:	......*...5.V.i.
   5efa4:	....!.0.........
   5efb4:	..`...!.M.\...#.
   5efc4:	.....'K/y...*.a.
   5efd4:	0...~...2.*.K...
   5efe4:	....F.......*...
   5eff4:	m...K.F.P.?.../.
   5f004:	..D....!.&...$,.
   5f014:	.%/7%.F.....a...
   5f024:	..5.............
   5f034:	^.....1.).o.8...
   5f044:	....0.....-....0
   5f054:	....P.  a-......
   5f064:	........X.n...).
   5f074:	..4.........z.%.
   5f084:	....&.......).".
   5f094:	.............,..
   5f0a4:	K.|..$\!........
   5f0b4:	................
   5f0c4:	@.N...7.........
   5f0d4:	..J...,.....\...
   5f0e4:	..6.`..&y&......
   5f0f4:	....E.....3.j.v.
   5f104:	..........q.>.A.
   5f114:	r.W.....E.......
   5f124:	..q..!..........
   5f134:	:.z.4.h...o.....
   5f144:	..........a...+.
   5f154:	..G...........X.
   5f164:	W.}.............
   5f174:	[.P.............
   5f184:	..?.......q.....
   5f194:	+.......K...l...
   5f1a4:	m.....%......._.
   5f1b4:	....'.......X.~.
   5f1c4:	......p.....G.>.
   5f1d4:	........W.....<.
   5f1e4:	Z...............
   5f1f4:	h.|...........u.
   5f204:	......,...K...X.
   5f214:	....N...B...g...
   5f224:	............(...
   5f234:	....k.H.......*.
   5f244:	....2.....|.,...
   5f254:	......2.W...d.&.
   5f264:	+...g.$...w.....
   5f274:	~.q.....C.c...B.
   5f284:	C.z.....l.....A.
   5f294:	k.........Z.....
   5f2a4:	U.........q.:...
   5f2b4:	..l.Y.......)...
   5f2c4:	..[.". .y.....l.
   5f2d4:	../.w.I...k.f.k.
   5f2e4:	........S.....V.
   5f2f4:	-.........;.....
   5f304:	..h.[.......o.?.
   5f314:	..Z.....~.?...g.
   5f324:	?.....0...F.....
   5f334:	}.>...........H.
   5f344:	......~...[.N...
   5f354:	(.0.....l.W.....
   5f364:	_.M...L.....J...
   5f374:	..............D.
   5f384:	".R.......Y. ...
   5f394:	....%.......*...
   5f3a4:	..|.....7...y...
   5f3b4:	!.<.....O.r...).
   5f3c4:	0.........L.g...
   5f3d4:	..q.:.......{...
   5f3e4:	).......y.......
   5f3f4:	*...G...P...C.>.
   5f404:	t.......N.{.(...
   5f414:	4.......I...5...
   5f424:	x.............g.
   5f434:	;...p...........
   5f444:	\.........'...`.
   5f454:	..N.............
   5f464:	R...............
   5f474:	..9...T.I...#.8.
   5f484:	........r.;.~...
   5f494:	v.....^..... ...
   5f4a4:	w...............
   5f4b4:	B.C.).....+.....
   5f4c4:	x.F.H.......7...
   5f4d4:	....z.......^...
   5f4e4:	................
   5f4f4:	C.....L.........
   5f504:	`...m.a.........
   5f514:	e...m.......t...
   5f524:	....t...W...S...
   5f534:	E...g.........(.
   5f544:	..l.V...P...u.e.
   5f554:	..P.........>...
   5f564:	M.}..... .e.....
   5f574:	......T.e.;.T...
   5f584:	......M.a.......
   5f594:	^.........D.9.^.
   5f5a4:	&...v.k.......9.
   5f5b4:	n...m...J.......
   5f5c4:	....Y...........
   5f5d4:	5........./.....
   5f5e4:	..l.........n...
   5f5f4:	....C.........N.
   5f604:	d.......~.......
   5f614:	....{...5...1...
   5f624:	x.|.......^.....
   5f634:	\.......U.......
   5f644:	..3...*.......3.
   5f654:	..0.......`...p.
   5f664:	L......./...!...
   5f674:	....a.l.b.......
   5f684:	7.6.5.o.Y...=.V.
   5f694:	\.............E.
   5f6a4:	B.........".....
   5f6b4:	..........r...h.
   5f6c4:	........6.T...W.
   5f6d4:	y.i...`.....u. .
   5f6e4:	D.........0.z...
   5f6f4:	j.........O.9...
   5f704:	m.....f.|...4...
   5f714:	^.........5.U...
   5f724:	..7.`.......,...
   5f734:	C.9...=.........
   5f744:	..s.Q.t.....Z...
   5f754:	......q.D.......
   5f764:	K.L.../...<...h.
   5f774:	..J...(.h.......
   5f784:	....N...;.....G.
   5f794:	d...;...O.......
   5f7a4:	z.......*.o.....
   5f7b4:	....3.+.6.h.....
   5f7c4:	q........."...1.
   5f7d4:	..p...........b.
   5f7e4:	......d...d.....
   5f7f4:	....'.........1.
   5f804:	2...........5.c.
   5f814:	..'.............
   5f824:	..].........j...
   5f834:	........5.N.Q.U.
   5f844:	~...S.....z.K...
   5f854:	....Y...\.5...l.
   5f864:	4...=.`.v.f.....
   5f874:	..#...]...{...a.
   5f884:	..........G.....
   5f894:	d.K... .#.....,.
   5f8a4:	......*.5.V...].
   5f8b4:	d.l.....).u.,...
   5f8c4:	..^...j.v./.....
   5f8d4:	..........5...).
   5f8e4:	....v.>.E.s.....
   5f8f4:	......`...~...N.
   5f904:	o...l.>.i.......
   5f914:	%.k...g...s.....
   5f924:	....1.>.........
   5f934:	o.............E.
   5f944:	..^.H...F...M...
   5f954:	7......./.?.....
   5f964:	o......._.....).
   5f974:	......L.......+.
   5f984:	p...]...........
   5f994:	_.~...'.........
   5f9a4:	........M.D.{.S.
   5f9b4:	........{...].+.
   5f9c4:	........P.....U.
   5f9d4:	r...i.........u.
   5f9e4:	..F.............
   5f9f4:	..........f.u...
   5fa04:	........T.z.S...
   5fa14:	).u.W...........
   5fa24:	..y.............
   5fa34:	E.A....... .....
   5fa44:	..............?.
   5fa54:	......j.o.,.....
	...

0005faa4 <sample_1_standard_DRUMS_whitenoisewave>:
   5faa4:	.....4T.....&..=
   5fab4:	..U.......d.....
   5fac4:	'.g.....r#....q.
   5fad4:	U.....].g)..u..!
   5fae4:	...1..C.9..$M...
   5faf4:	..W ..........!.
   5fb04:	..F.....`?2.....
   5fb14:	h.....-.i...X...
   5fb24:	........u..@....
   5fb34:	|%m...u(..../...
   5fb44:	..t-M...w, .....
   5fb54:	 ..-}.*..0..4.N.
   5fb64:	........%.....['
   5fb74:	q..........3Z...
   5fb84:	.......p....c...
   5fb94:	y...'.. ?.M....+
   5fba4:	..}.r.K.......!.
   5fbb4:	.Y..8.O7+.......
   5fbc4:	..-..#....L.E.e.
   5fbd4:	...&....,..<....
   5fbe4:	d...(.@&i...#:..
   5fbf4:	..H1...........$
   5fc04:	I.......x. .....
   5fc14:	;...............
   5fc24:	..7...!.....=.,+
   5fc34:	A.@.......5...S.
   5fc44:	A...{.:...".....
   5fc54:	*...."Z....>....
   5fc64:	?.....w&x...|.X.
   5fc74:	.........&m.7Z..
   5fc84:	......5..*......
   5fc94:	K2..s.y...7"..$.
   5fca4:	......-.........
   5fcb4:	..d...Z....8....
   5fcc4:	4.!.....e.......
   5fcd4:	.,.....Y....p.S.
   5fce4:	................
   5fcf4:	Q.a....5..\.t...
   5fd04:	..T.............
   5fd14:	7/..H.D..-......
   5fd24:	....v...4...~...
   5fd34:	 ......-e.l.e...
   5fd44:	..3.....P&d...T.
   5fd54:	..A...9..."..$..
   5fd64:	..p.i.L...&...2.
   5fd74:	#(<...T.....?...
   5fd84:	Y.W../.%....#"..
   5fd94:	 ...t.(*..a..-..
   5fda4:	d...b3....nN.,..
   5fdb4:	......i.........
   5fdc4:	............sM..
   5fdd4:	+..&4...D*%..&n.
   5fde4:	..jF..7..)....9.
   5fdf4:	..=.*.......@...
   5fe04:	....P....)....x.
   5fe14:	\.......@D..m...
   5fe24:	.)...+..........
   5fe34:	0;~..%j....B.#..
   5fe44:	..I.)...y..3..Z%
   5fe54:	..<....0}.G)....
   5fe64:	...#....r&B...t.
   5fe74:	.'U.#(...+....].
   5fe84:	.A..b...+$[ Q...
   5fe94:	....5...q.......
   5fea4:	....Z...D/Y.`...
   5feb4:	..........5.....
   5fec4:	..]...'.L.a.T#i.
   5fed4:	.>x...V...p...=.
   5fee4:	~.`.......-.D.,.
   5fef4:	..c(..O....'..n.
   5ff04:	..H.v.?.e.....`.
   5ff14:	....P(.........%
   5ff24:	(....>.. .~.8..1
   5ff34:	....=.g.;......2
   5ff44:	..........G.....
   5ff54:	..$...n...i.....
   5ff64:	.........#....0.
   5ff74:	....(+..|....R..
   5ff84:	..I.;..........+
   5ff94:	..!.T0........[-
   5ffa4:	u...9.i.....Y..)
   5ffb4:	..e..........(..
   5ffc4:	..<......(....E.
   5ffd4:	....l"....C.`...
   5ffe4:	..5.$...<.e....J
   5fff4:	9..AU.(.T......6
   60004:	..T.......(.g...
   60014:	..I.`.....Y.Q...
   60024:	.K....d.....t.a.
   60034:	.'..(...........
   60044:	7.w.|......!..s.
   60054:	......}... ..;..
   60064:	..??!....2.....%
   60074:	[.E...(.....4.V.
   60084:	....O.{...C...h-
   60094:	...........!....
   600a4:	o*e...89y.......
   600b4:	.%..*.......e...
   600c4:	OYe.4H..d.......
   600d4:	q..0..P...d.)..1
   600e4:	...&....[.......
   600f4:	$.|...h.........
   60104:	..K0............
   60114:	dW6.;.%.......+0
   60124:	.....3..........
   60134:	,.t.U.@.F.$....G
   60144:	N...e...........
   60154:	@ ............~.
   60164:	Q.....}.W ..',..
   60174:	H.(...p...O.t0t.
   60184:	v.;.%...7.....X.
   60194:	.. ...5...,,..3.
   601a4:	..P...b.........
   601b4:	.......... .....
   601c4:	......i.......p.
   601d4:	8.....b...$.5...
   601e4:	.....0..........
   601f4:	....D...e..4.!M.
   60204:	e.C.....H.......
   60214:	..C.E...O9...$).
   60224:	..M...8.r.....Q.
   60234:	......>.....%..>
   60244:	..$/...'....W.%.
   60254:	z...........J.$!
   60264:	..e.l..,..|.....
   60274:	..j.....0.P..3&.
   60284:	......y.....>.".
   60294:	. L...L.........
   602a4:	..s%....x.R.K.\.
   602b4:	..;.T.L...p...."
   602c4:	>.T.-.;...(...z.
   602d4:	.8.....%n....1..
   602e4:	....D.y.g2..[...
   602f4:	.Gp...'.........
   60304:	......t.e.w."..H
   60314:	F."...,7..s.....
   60324:	...9.....3......
   60334:	......%...J....3
   60344:	._....a...I.0...
   60354:	....4.B.. 4.,..2
   60364:	.....5m.;.......
   60374:	....4.....\.....
   60384:	...%..J.t...L...
   60394:	......Z.!...4.7"
   603a4:	.......&\.T...38
   603b4:	B...h.m.@.......
   603c4:	....T.........h.
   603d4:	.....'........p;
   603e4:	X.E..6..!.......
   603f4:	........u.....t.
   60404:	......3...M....-
   60414:	|.....^&)...'/..
   60424:	....p...........
   60434:	w%......D.../.>.
   60444:	.....1...(......
   60454:	...'u....(}...7/
   60464:	..L.............
   60474:	....m.8@:.....!.
   60484:	.......Q..@.J...
   60494:	#%t.{...........
   604a4:	....`.V......"..
   604b4:	....3.<+....t..9
   604c4:	M.......o.G.a.].
   604d4:	=..!..@......!..
   604e4:	0...(.........g"
   604f4:	....e.. .....1m.
   60504:	..7.u...........
   60514:	o.......d.......
   60524:	........\+..0...
   60534:	 ...;2\.E+..X.k.
   60544:	..m...g z....3=.
   60554:	..\:@..)........
   60564:	.&X......../..>.
   60574:	9..1w.9..8..x...
   60584:	H...k2e.p&$...c.
   60594:	?0..U...0(<.G,..
   605a4:	'.p%...0..-.^..)
   605b4:	5.."..L.x...W.4.
   605c4:	....P......2...D
   605d4:	..^.p8..hR~...L.
   605e4:	......d...Z.....
   605f4:	...(...........&
   60604:	..i.|%..v.......
   60614:	n.^)....D. ...>.
   60624:	.-.......5......
   60634:	....:cy.H.T...y.
   60644:	B ..u.?<......M.
   60654:	'._ ^.D.........
   60664:	I.*.. e.........
   60674:	..U.....z.......
   60684:	......m.........
   60694:	..').....+X.[...
   606a4:	<...-...........
   606b4:	...<...W.....*5.
   606c4:	..........'.i...
   606d4:	..N.......<.".\$
   606e4:	.....*...<G#....
   606f4:	J.@.=...v.|.. ..
   60704:	...*Q..)...=....
   60714:	r.).42....U..* .
   60724:	............35..
   60734:	..a.......M.....
   60744:	D.m.....Y.......
   60754:	.&..y.|...U.r..4
   60764:	..i.....i.....l.
   60774:	....T.(%.$..s.|.
   60784:	............. ].
   60794:	z1x.....,...p.E(
   607a4:	...+...C...?h.e.
   607b4:	|>.... ...P...'.
   607c4:	.=..u........$9.
   607d4:	....A...m.....@ 
   607e4:	...."...A.{..#..
   607f4:	\.....9...{ ....
   60804:	,....S4...s.A...
   60814:	........U.0....&
   60824:	Q.....-.m.S...`"
   60834:	6.X.........b0O.
   60844:	..6.........x...
   60854:	....Q.....E.L...
   60864:	..q.{.......i...
   60874:	...-..........5.
   60884:	!....(((..n./4.7
   60894:	].....1...a.1...
   608a4:	..W...t.........
   608b4:	......T.."8.}...
   608c4:	`...0...80....H.
   608d4:	..)...b3!.....<.
   608e4:	....../.....o...
   608f4:	....X.h.......=.
   60904:	d.r.............
   60914:	-...*...a.....p.
   60924:	......V.....c(|.
   60934:	0...F..!..5...d.
   60944:	x...M.].........
   60954:	.A..t...!....!..
   60964:	....,.0.....h.(.
   60974:	..U.."...Bu.....
   60984:	.!...(q!..(.}.%.
   60994:	..n.g,..!.... ..
   609a4:	........V.H.....
   609b4:	....A! ...\...i.
   609c4:	f.x<....?...!...
   609d4:	..V... .....I...
   609e4:	$...<.....w.8...
   609f4:	s+..L..7..e..!..
   60a04:	...6B.....T.n.t.
   60a14:	..q.....N.......
   60a24:	v.....WM..(..C("
   60a34:	....!.....g j...
   60a44:	'&a.............
   60a54:	..V...."....m ..
   60a64:	..............(.
   60a74:	.......+..GA...8
   60a84:	....w...1...8...
   60a94:	..I.....K)....N.
   60aa4:	.3..p.H...L!..D.
   60ab4:	Z%e.......L(4..#
   60ac4:	....#.....=....7
   60ad4:	L.X4..A.o.4.0.(.
   60ae4:	((....5..=....:.
   60af4:	1.G.;0:.....Y...
   60b04:	......z.Y..81...
   60b14:	........4.=..../
   60b24:	..<.....8.w(\...
   60b34:	..0,............
   60b44:	z+x.........u(U.
   60b54:	............z.r.
   60b64:	Y.......O.t)..|.
   60b74:	..x.~....!!.O.O1
   60b84:	..h.C.p.....5..!
   60b94:	..%.{.I.........
   60ba4:	/*......  ..x.-.
   60bb4:	..d.L...y.=.I...
   60bc4:	U..2}.`"......Y.
   60bd4:	X.K...-.....4...
   60be4:	.*0..'B...T.....
   60bf4:	.....2.....1.$..
   60c04:	E.-...f.....D..%
   60c14:	..d.E..6......(.
   60c24:	..`.p...P.......
   60c34:	.E..(...3.....{.
   60c44:	..1.u...c7A.....
   60c54:	......G.i.....N.
   60c64:	&..*a.*.{.o.....
   60c74:	...... ...K,p.A.
   60c84:	..+.D...4...q.+.
   60c94:	]...1........-..
   60ca4:	M....6..S...!.'D
   60cb4:	........!.5...p.
   60cc4:	.,L......"\.j...
   60cd4:	A.. %.........Z.
   60ce4:	.-......|.C..3..
   60cf4:	..0.............
   60d04:	...0..1.b.....d.
   60d14:	9.Q...J1..%...d.
   60d24:	J.G%f.../.......
   60d34:	A...m... ...|...
   60d44:	....h...)...E...
   60d54:	34....k.........
   60d64:	..<...x.p.M...l7
   60d74:	..?.B.{5........
   60d84:	Y.4.8........$I.
   60d94:	......e.4.......
   60da4:	....4)..-.0.....
   60db4:	....t.l..,+.r...
   60dc4:	L.{ ..,.........
   60dd4:	|.!...x.o.....%.
   60de4:	"........@....L!
   60df4:	..4.!.S.....i.t.
   60e04:	K ,........:..B.
   60e14:	4.7%>.l.....5..1
   60e24:	................
   60e34:	....>...7.%..+..
   60e44:	..a..,.....1x.V.
   60e54:	4...F....-K'....
   60e64:	.#..p.......H...
   60e74:	..).Y.C.`.0...Q.
   60e84:	..J.i...m..C....
   60e94:	..H.......O.....
   60ea4:	..}...X.a...h...
   60eb4:	....*..4......n.
   60ec4:	.......7.....&9.
   60ed4:	..........i.0.Q.
   60ee4:	F...1.....9.Y.l.
   60ef4:	..w+....X.......
   60f04:	..4.......= !.h.
   60f14:	c../..|....$8.V.
   60f24:	........:;....#5
   60f34:	P...z.9.....i.K3
   60f44:	v...B.=.$.....f.
   60f54:	..........,.w.p"
   60f64:	..~.;...........
   60f74:	....1..8....\..'
   60f84:	..j.7(....N.....
   60f94:	..?../..+...!.W.
   60fa4:	..4.......F.c...
   60fb4:	y....8!.A.S. ...
   60fc4:	|'../...i../&...
   60fd4:	O...).g.$-m..'..
   60fe4:	T$%......*...6..
   60ff4:	..X.......}.....
   61004:	=...,.4.........
   61014:	......x.....`...
   61024:	......$. # %....
   61034:	@.l....+-.9.;.."
   61044:	6...........D...
   61054:	.'..<...........
   61064:	P..7H...Q.,.....
   61074:	K...]...."....`.
   61084:	...'L......A..s.
   61094:	E.+.....q.......
   610a4:	......Y....._...
   610b4:	....g;&.....#...
   610c4:	..<.............
   610d4:	......m...S=...?
   610e4:	..o...E.9.......
   610f4:	..E..(..=..Jn.4.
   61104:	..j.+9....k0C...
   61114:	..]..".........(
   61124:	e.C.N..0..1...E.
   61134:	...)e....(X!..D.
   61144:	e..(Q.z..*=.....
   61154:	....k....6A.....
   61164:	....4.i.H.$-....
   61174:	+.U.P.`.........
   61184:	q...b.K....**...
   61194:	...........E....
   611a4:	.Gr...d...(. A..
   611b4:	.........6..~..*
   611c4:	.).............-
   611d4:	$.........r ...C
   611e4:	J.H.J.........R.
   611f4:	5.....Q.[.Y.\...
   61204:	....L.4.........
   61214:	..T.@...N.....s.
   61224:	........x.`5..I.
   61234:	...)...-..'&....
   61244:	.........>......
   61254:	|.(.......,...H.
   61264:	....k.m.......P.
   61274:	(.{...S.....8...
   61284:	...3...;..... ..
   61294:	1.p&..........%.
   612a4:	..@.p.p..1i..$%.
   612b4:	......e.d...-...
   612c4:	...0..@.....\..9
   612d4:	...=5...+.K.....
   612e4:	!.+9.$......-.8.
   612f4:	-.......D.....J.
   61304:	..['A.......hF..
   61314:	..?9....8...].4.
   61324:	..m.....5.05%.p)
   61334:	....,.......X...
   61344:	k-j.|...].....M.
   61354:	<...<.....H.....
   61364:	U.^.G#%.w.......
   61374:	..........x...D.
   61384:	......q!........
   61394:	....T.A..#.....;
   613a4:	..n.D/......A...
   613b4:	.........'a....8
   613c4:	..).............
   613d4:	@.S%P...P...D...
   613e4:	.../..T.......:.
   613f4:	../...D._ &..:..
   61404:	}......%..0.....
   61414:	.'m.Q.=...T.p..<
   61424:	v...H=...._.....
   61434:	..."..L.......M.
   61444:	./h$..!..$.."?..
   61454:	.#....m.....B ..
   61464:	Q.........X.....
   61474:	T..'..j...I.$!a.
   61484:	Q.c4).?..2..(...
   61494:	..(.........J1|.
   614a4:	..x.`.....-..#..
   614b4:	_#..1.`.#.....3.
   614c4:	..l...)...(...t*
   614d4:	i..#k&......h...
   614e4:	................
   614f4:	..?.........p...
   61504:	P.....].D0".H0..
   61514:	...(....w...E..(
   61524:	q...W.... ......
   61534:	x.M.?.....A.....
   61544:	....~.U...I.....
   61554:	E...W#........$.
   61564:	O.......r..0`...
   61574:	..`....+F.......
   61584:	..............l.
   61594:	.2.............F
   615a4:	..X......7A.=...
   615b4:	....%..)..E.....
   615c4:	."..F..Bd...X3:.
   615d4:	^..;..A!Y...c"..
   615e4:	n..,......f:..G&
   615f4:	e..&..`....5....
   61604:	?.........9...}.
   61614:	(...Y%^......!..
   61624:	...%,.......D...
   61634:	Y.D...5..#..M...
   61644:	......p#y.......
   61654:	..............+.
   61664:	.....%..e.......
   61674:	.../..}.o.....<.
   61684:	{.X.U.{.^...j...
   61694:	...._....'$.G.P 
   616a4:	9..(....U..&..I.
   616b4:	....#...].....p.
   616c4:	......5.y.3A=..$
   616d4:	. ........U.T...
   616e4:	Q...o.."Q.....x.
   616f4:	+.D....*... ...H
   61704:	`...@.s......(..
   61714:	......u.O.r...d.
   61724:	....A.....0%|.p.
   61734:	..T.%.e.]......-
   61744:	y..+........Y...
   61754:	..C.....|.i...X.
   61764:	..A.........2...
   61774:	.:q.((..l4...%..
   61784:	...........2....
   61794:	.6i.`.,.......p.
   617a4:	A...........p(..
   617b4:	..W.Z...T3... 4.
   617c4:	.....<..H.].....
   617d4:	..N./...........
   617e4:	. \...C.Z.....h.
   617f4:	.*h*.. .........
   61804:	..i......7...2i.
   61814:	}......-.....@..
   61824:	..m.;.........`.
   61834:	...#....D.i.1.s.
   61844:	%..@..~.....i...
   61854:	......n.m.#.....
   61864:	......t.L.z.....
   61874:	.&..Q...m...i...
   61884:	..k.W.M...ZMA'*.
   61894:	...+..L.........
   618a4:	..b.O...-.h.....
   618b4:	.)....|.[...x.t.
   618c4:	/'..B ..).....a.
   618d4:	.1......3+......
   618e4:	...2............
   618f4:	......p...I.....
   61904:	L.G(....9.+*..I.
   61914:	5.....i.........
   61924:	..../...m...$.5.
   61934:	..O=..o.....}.U.
   61944:	l.T.8..4..4.c%u.
   61954:	.;.:....?3......
   61964:	..\+.....<....d.
   61974:	B....*..q.z49...
   61984:	e.Z....(.......-
   61994:	t.W......%..]...
   619a4:	..(...........L.
   619b4:	g....1..@.......
   619c4:	..n.*...`.m...p.
   619d4:	..1.......x.....
   619e4:	...2..,.@.."...!
   619f4:	A....#....p.....
   61a04:	....D..)....4<}.
   61a14:	..H.0...........
   61a24:	......x........-
   61a34:	...<....,.*.....
   61a44:	.#$-..H.0...+...
   61a54:	M.I.......-.....
   61a64:	..p.........]...
   61a74:	..........n.c..'
   61a84:	..c!i...4...5..#
   61a94:	B.........;.....
   61aa4:	..B#T...........
   61ab4:	. ....`.X-..^.<.
   61ac4:	T...D...=.......
   61ad4:	"9.....(..U...h!
   61ae4:	z.......&.......
   61af4:	5..,....U.=..8E.
   61b04:	.....!....E...p5
   61b14:	.....1..Y.J.-.L.
   61b24:	.... %......oI..
   61b34:	......Q.........
   61b44:	.*....5.........
   61b54:	.%..1.&......2..
   61b64:	......B.K.......
   61b74:	w...".......,...
   61b84:	..U...c-....q.D.
   61b94:	.#v.....{.s...Z.
   61ba4:	'.....}.........
   61bb4:	t.....n.4..B..h.
   61bc4:	. ..s...p.H.....
   61bd4:	....).|.........
   61be4:	..Q.R.......J.,.
   61bf4:	..>...........S.
   61c04:	......q.7.A.....
   61c14:	5..._.{.....U...
   61c24:	.(..y...~.a...A.
   61c34:	..X1..........G#
   61c44:	....w.2.$.e.....
   61c54:	@.....m.........
   61c64:	N.X7..x.[...h...
   61c74:	..t.......=.H.e.
   61c84:	Y...{q!...m.8.5.
   61c94:	.%......?...a.w>
   61ca4:	....j......#....
   61cb4:	.!R...]&Z.......
   61cc4:	L.i.....,.g...`%
   61cd4:	....X.7.h.4.....
   61ce4:	....,...4)4.../!
   61cf4:	......8.i..D....
   61d04:	i.8....(..U.....
   61d14:	.........&e.....
   61d24:	..F..L....[...1.
   61d34:	<...N5D.8.<.....
   61d44:	....`.q.....S...
   61d54:	Z.5...h.<.. ....
   61d64:	t...j.;..".+Y.M.
   61d74:	..p.....g7$.....
   61d84:	........o.O'@.B#
   61d94:	......3.....?..%
   61da4:	.......9].06z...
   61db4:	M...X..%.....'T.
   61dc4:	............5...
   61dd4:	S>............!.
   61de4:	=.....|.".....-.
   61df4:	..B ..W.L......9
   61e04:	...0a...........
   61e14:	.............!..
   61e24:	&CI......3......
   61e34:	#....=........r.
   61e44:	..........U...G.
   61e54:	...*...&....d.h.
   61e64:	....(..(..F.....
   61e74:	`..H...#....,.}.
   61e84:	KQ...E.._..>,.@.
   61e94:	...:....[......6
   61ea4:	d.....[.........
   61eb4:	..9........'..9.
   61ec4:	S...,8!.#=2...D.
   61ed4:	?*Z...........U.
   61ee4:	......./V.{2h...
   61ef4:	..8.A..0N..*8.m.
   61f04:	.(?.......h...R.
   61f14:	a...d.......a.p.
   61f24:	t.u.`2...-.....(
   61f34:	!.l........6...*
   61f44:	N.I.d..$ ...*.P.
   61f54:	......?.]...q.n.
   61f64:	.... ........(n.
   61f74:	......c..%......
   61f84:	........).@.....
   61f94:	=..;..".m..1M.3;
   61fa4:	..........=.1.P.
   61fb4:	......l.........
   61fc4:	.%..|...I....1..
   61fd4:	X-....O.S.q...p.
   61fe4:	v.....G...^.&..&
   61ff4:	......%...C....5
   62004:	..........c$..-.
   62014:	.7......L.....1.
   62024:	2...(...G...y...
   62034:	.......$D.......
   62044:	..?*....08....-.
   62054:	....:...L./...5.
   62064:	R.....)..%..|.`.
   62074:	..E..15...W&!.&.
   62084:	..2.$.....-.....
   62094:	#..&.....!H....'
   620a4:	M...Z...i..*@.J.
   620b4:	.........#..m...
   620c4:	V...K.Y........L
   620d4:	................
   620e4:	Z.K.'...g7..q. A
   620f4:	.....-V.........
   62104:	g..'......@,....
   62114:	.(..5...Q.g#....
   62124:	"6....7........(
   62134:	v$....s%....P...
   62144:	..-........)..."
   62154:	..<(.#......y..-
   62164:	H........%....).
   62174:	.......#h....&..
   62184:	..Y...C=..R..#..
   62194:	4.p...6..1......
   621a4:	M.......&.].e...
   621b4:	M.....<"..#...9.
   621c4:	.8!...`.....*.'>
   621d4:	........L..%..p.
   621e4:	...+......./..P(
   621f4:	..E...<"..Q.\...
   62204:	............0DQ.
   62214:	..X.+..*(.\.|;..
   62224:	....i.A...<!....
   62234:	..;........6....
   62244:	..$.WN$. .......
   62254:	....D2..........
   62264:	)...."..U.z.....
   62274:	..e.u.G.$.`.I...
   62284:	p1..'........,..
   62294:	.....-..D...F...
   622a4:	.....4 "........
   622b4:	!...T,#%........
   622c4:	...4T...(.B.....
   622d4:	.....%......*...
   622e4:	LA.......+n.....
   622f4:	.Z..!...,.\...E.
   62304:	..x.:.t...t.h...
   62314:	..f.!=....d9A...
   62324:	Z.-...B.........
   62334:	.6y.............
   62344:	.=E.K...<"......
   62354:	i.Y...$.. ..!.=.
   62364:	<..X...?..@.....
   62374:	..7....&......L(
   62384:	..l.k..".&......
   62394:	......x.).....H.
   623a4:	.!......p.......
   623b4:	9.S....9e.T*..u.
   623c4:	........v._.]...
   623d4:	.!...:........-.
   623e4:	.PZ.4,(.j.......
   623f4:	...%S.{..1......
   62404:	...)...........>
   62414:	>...W....3s.`.].
   62424:	..#... ..$.&*...
   62434:	......y.|.Q.....
   62444:	....g.....I.... 
   62454:	9...g2....A.Q.'/
   62464:	.... .M.........
   62474:	....%...|.......
   62484:	.....)".G)......
   62494:	..H.W...o.V.X.<.
   624a4:	-..-....%..C....
   624b4:	..U.L.y..-.N*...
   624c4:	....U...<.0.....
   624d4:	......$.`.M.....
   624e4:	F.3.P...0>v...7(
   624f4:	.. .S%..........
   62504:	L..!..D...X.N.j.
   62514:	...M............
   62524:	..].Q...0....95.
   62534:	5.%..:x...y...|.
   62544:	?...........a.k.
   62554:	..*.....n.....H.
   62564:	.&..|......*P...
   62574:	.".;..m.H...l...
   62584:	..J..!,...H.....
   62594:	s1J.*...$...Q...
   625a4:	..`.Q..%........
   625b4:	<.....@8......8.
   625c4:	M.T!....T......2
   625d4:	.+V....-....o.U.
   625e4:	..*.....F.T...*.
   625f4:	....K...)...X...
   62604:	..Q.*D......I...
   62614:	1.........1.`.P.
   62624:	a.].....@.N..0..
   62634:	..1.@...X3,.N...
   62644:	...,M...k.....'<
   62654:	..........\....-
   62664:	....d...L...3.z.
   62674:	q....%M......9..
   62684:	..T.........%...
   62694:	e.......#.P....&
   626a4:	....d...|...A.A.
   626b4:	......7&....y...
   626c4:	......t..+......
   626d4:	..9.1../.7P...!.
   626e4:	......D..5......
   626f4:	}.....E(........
   62704:	L.E.8.?X....0/>.
   62714:	..?.....$.".H...
   62724:	....e.........l.
   62734:	G.....o...d.4...
   62744:	..}.l.d..._$..&.
   62754:	..............D.
   62764:	..1-............
   62774:	=.<...M..%V..;..
   62784:	|%....*"......d.
   62794:	..?.u...L.=...Z.
   627a4:	l.20......./K.r.
   627b4:	'N..^.......j..>
   627c4:	..9.....W.......
   627d4:	X.....n........-
   627e4:	....3.......J.0.
   627f4:	......8.. ......
   62804:	t,....H...Y.g.w.
   62814:	..n...........&.
   62824:	..........0(f...
   62834:	..'AE...a.=..%w.
   62844:	2.....t...7.e..'
   62854:	..<!......=.&O..
   62864:	%.4...c.'.....8.
   62874:	..........*.....
   62884:	Q.D.......L.-.L.
   62894:	=.y.<.|.......8.
   628a4:	4. .....e.=...H.
   628b4:	.'M.A.....0.....
   628c4:	..P.....E.r&....
   628d4:	5.J.......!.2...
   628e4:	).a...D0....i...
   628f4:	....;,....H..5..
   62904:	....|.V......%..
   62914:	;.../...?...E.h.
   62924:	]..3..."!.(..*..
   62934:	....w.l.....).A.
   62944:	..-.v.8...V.....
   62954:	.5............h.
   62964:	B.J...$....%1.5.
   62974:	..v.(.h.G...*...
   62984:	........x.......
   62994:	A.$.0%..T...Y.L.
   629a4:	.....0...%..7.O.
   629b4:	f........$..)...
   629c4:	?..#X.........W&
   629d4:	$.......D.. ..l.
   629e4:	l.-.....`J.....-
   629f4:	..G%l...4.... ..
   62a04:	....H........(..
   62a14:	...8..4...=.].64
   62a24:	....9./C].......
   62a34:	.1<.....K/......
   62a44:	a...('....4..:..
   62a54:	h<).'.....I.y...
   62a64:	D.J.X.P.........
   62a74:	..7"..9.Y.kc..d.
   62a84:	L..1........o...
   62a94:	I.......L...O.1.
   62aa4:	y...<....&a.....
   62ab4:	......Z.....p..B
   62ac4:	..N........!...&
   62ad4:	@.............K.
   62ae4:	.............1..
   62af4:	.....0..Z.(.M.Z.
   62b04:	?..._...Z.....F.
   62b14:	>.`.........]../
   62b24:	...R..9.$ F.2.+$
   62b34:	........@"...%(.
   62b44:	.......,w)y..I..
   62b54:	.(\.`.D...8.Z...
   62b64:	....1...K.h.}.l.
   62b74:	[.G...1....C....
   62b84:	t.......\.......
   62b94:	j.....Q......D..
   62ba4:	.,........].....
   62bb4:	J.1....$(.......
   62bc4:	..+$..V...@..%..
   62bd4:	......`...,.....
   62be4:	]............"..
   62bf4:	..L.....e.o.@.M.
   62c04:	6..%..b.D,(.....
   62c14:	.8........Z...P(
   62c24:	.....+....i.^.U.
   62c34:	'#0...C...I..E..
   62c44:	......2...<...%.
   62c54:	....W.m.K.75..<.
   62c64:	..........T.p...
   62c74:	..9.......`.....
   62c84:	a.......f.d.?-e.
   62c94:	w.c.......E...%.
   62ca4:	I.....y.C.....x.
   62cb4:	......(...P&..@.
   62cc4:	[.. ..[. .$.b...
   62cd4:	q.a.....d...e.7.
   62ce4:	1.....s...B.+$n.
   62cf4:	*.\.......a..*..
   62d04:	....h...;.(.....
   62d14:	..T.m.........x.
   62d24:	..[...H.%......-
   62d34:	......X..0..$.H.
   62d44:	.......G....<...
   62d54:	.(.....+.-......
   62d64:	...............=
   62d74:	...-..9.4.Y.....
   62d84:	h...{.=.........
   62d94:	../...=...%...0.
   62da4:	..A.......p...S.
   62db4:	(.p...........].
   62dc4:	M.{5m.....A.z(..
   62dd4:	m.x...p#..e...$.
   62de4:	#.*...X.n.c...k.
   62df4:	......H.........
   62e04:	P.....I......&m.
   62e14:	....<.l.......1.
   62e24:	....C.E...a..=1.
   62e34:	..K.........6.1.
   62e44:	........u.q._...
   62e54:	.,2.%........8!.
   62e64:	...4i.-.c..?...+
   62e74:	......U...L...>.
   62e84:	&.o.....m..A1...
   62e94:	..........4.%...
   62ea4:	X.......!.L.....
   62eb4:	........N.Y.{&..
   62ec4:	.....=......R.,.
   62ed4:	R.....v...H.....
   62ee4:	.............F..
   62ef4:	Q.'.+!F.....q...
   62f04:	..D...V.O0U.Q.$.
   62f14:	..Q.......8.....
   62f24:	h.L. .6.s....._ 
   62f34:	......q.E.N.N..<
   62f44:	..........8...5.
   62f54:	`...<.......^...
   62f64:	....5..*=.....%.
   62f74:	l.8...4...."L%..
   62f84:	..K....+&...|...
   62f94:	. ..!..'........
   62fa4:	..........].T...
   62fb4:	<(R../.....%..f.
   62fc4:	G.....5.....e...
   62fd4:	@...m.T..)..q.g,
   62fe4:	J.......o..6..G.
   62ff4:	Q.u.........^.."
   63004:	v......#.#....R.
   63014:	....,+$....0....
   63024:	J...........M..1
   63034:	...94.....}...y.
   63044:	.'..).....9.....
   63054:	.%..(...(.X.....
   63064:	!..A`...t-..(..+
   63074:	R...}.....>... .
   63084:	............&...
   63094:	...........4&...
   630a4:	.B.......#u...i.
   630b4:	..P.q.p.....p ..
   630c4:	z.....x.).h..$L.
   630d4:	........!.......
   630e4:	...7....G.v.<.7.
   630f4:	B...w.4.rW=.=...
   63104:	h...{.../...3...
   63114:	..i...W&[ ..d...
   63124:	.<T)........[...
   63134:	|.F....'....4...
   63144:	2.......]...3$..
   63154:	8........%9..!I.
   63164:	A.B.V...........
   63174:	h.(.........I.p.
   63184:	......a.../.(...
   63194:	..0.x...@.|.....
   631a4:	..x.Z.y.X.>.c(..
   631b4:	............d.P.
   631c4:	............e.h.
   631d4:	......!..7..u./.
   631e4:	J.......9.......
   631f4:	c!..H.0.....80".
   63204:	.. ...,.........
   63214:	..............g.
   63224:	X......+......+.
   63234:	;.I....Hz.g.<...
   63244:	5...U.+......!..
   63254:	......../.......
   63264:	!.\.e.V.o...U.0/
   63274:	..S.]......Z...$
   63284:	.....'.....=....
   63294:	................
   632a4:	....W...4..._.%.
   632b4:	...&x.z.......t.
   632c4:	Q.[.............
   632d4:	y...T!....."....
   632e4:	.......)w.......
   632f4:	......I.....S...
   63304:	..B.x.2..'..}.m.
   63314:	?-.?x...e.....G.
   63324:	....<..../9....3
   63334:	............%...
   63344:	....J...I..A....
   63354:	..`...m......A..
   63364:	....x......*....
   63374:	..1.Y.......*...
   63384:	........!...k...
   63394:	|%Y.f.........T.
   633a4:	W...|....../....
   633b4:	$!k.....[ .4....
   633c4:	...!....8!....M.
   633d4:	..E....8x.....o.
   633e4:	.&..l...%.D..:<.
   633f4:	@ M...!.......+.
   63404:	-...+B..q.Q.....
   63414:	t...Y......*W.v.
   63424:	..P...C.8.......
   63434:	....*.U.....6.`.
   63444:	..z.$........$d.
   63454:	?<..A. .>.......
   63464:	 ...J..'......r.
   63474:	..B.#.:.T...R.PG
   63484:	).i._Iv.v.......
   63494:	..]&..]...?.,...
   634a4:	..1.....k.......
   634b4:	q...H...........
   634c4:	 .T.........H...
   634d4:	)........+....4.
   634e4:	..k...@.......m.
   634f4:	..|.......o.....
   63504:	m...D...........
   63514:	5.H...."....O...
   63524:	;5v.}...Z....&..
   63534:	........D.......
   63544:	..e...PK..Y.....
   63554:	...........0..S.
   63564:	....H7Z.Y....=..
   63574:	.'!.....D.......
   63584:	....y...a.=.;...
   63594:	U.k8......[H....
   635a4:	....p..........-
   635b4:	.....#...*......
   635c4:	1.T..H..........
   635d4:	..T.\.Y.<.t.w.i.
   635e4:	..l...."..w.f...
   635f4:	................
   63604:	....C...%...t95.
   63614:	..`.x.U.......H.
   63624:	;)..@+..g.....q.
   63634:	.. .Q.#.L...8...
   63644:	..H......25...$.
   63654:	:.............-.
   63664:	............H...
   63674:	..... ..@+.....+
   63684:	....S.....q...].
   63694:	.....'..9..$....
   636a4:	............Y.O.
   636b4:	..=.r.P...x...3%
   636c4:	Y..%w.Q.|.A...V.
   636d4:	.1..Q...........
   636e4:	5..... ..*......
   636f4:	....}.......A...
   63704:	!....&O.4.......
   63714:	H...H0....c..%..
   63724:	.>..............
   63734:	(.A....+u.|...t.
   63744:	......D.V.k,R...
   63754:	.........0n.y.y.
   63764:	L"....}.....d...
   63774:	....r...........
   63784:	..O.`.y..-......
   63794:	...&$.LA..o6..x.
   637a4:	..o-|....-....s.
   637b4:	..]...7..3e.=...
   637c4:	...#......8.|...
   637d4:	.!4.....`...B...
   637e4:	..=.O.U......" %
   637f4:	O... .E.......%.
   63804:	. .......7X.....
   63814:	.$....$.R...X...
   63824:	.=....p/8......$
   63834:	....U...G%....<.
   63844:	7...J.k.=.h...o.
   63854:	]...!.}.%.....[.
   63864:	..R..#..d.d.....
   63874:	!...(0.!%..*&...
   63884:	...59...s......9
   63894:	h...4...K3..|...
   638a4:	..{.u...<4..I..2
   638b4:	.....%....E.;.M.
   638c4:	?.9...%........)
   638d4:	"...y...!.i.....
   638e4:	..8....%....z.U.
   638f4:	...0..l./...O...
   63904:	..c....../......
   63914:	..D.. .%M.b..@..
   63924:	%.0.).5.......8.
   63934:	X.....3.1.....d.
   63944:	m..@5.....i.+...
   63954:	#.........|...9.
   63964:	]._.`..../..#...
   63974:	..E.T*..d&a.....
   63984:	....q.Z.E.......
   63994:	..........e.)...
   639a4:	1.....,.........
   639b4:	<....#1.t.v.h...
   639c4:	M...*.(.(.+.y.o.
   639d4:	C.M.h.E.y.S...].
   639e4:	*.t2........$.H!
   639f4:	..F.....\$..Y..&
   63a04:	z.J.x....I..o.x.
   63a14:	`..'$.........U.
   63a24:	..0.?.......=.h!
   63a34:	................
   63a44:	~...P.;.....`.-.
   63a54:	9.....0...d....@
   63a64:	J.7...,.=.s4..A.
   63a74:	S.=.-...H.W...v.
   63a84:	l...."..v.s.....
   63a94:	...I.......1 ...
   63aa4:	.........$......
   63ab4:	X.C...4 ,...0.?B
   63ac4:	5......'........
   63ad4:	.............3.+
   63ae4:	m...9.......U.J.
   63af4:	...&~.J.<...[...
   63b04:	(.?.\.OI........
   63b14:	'...("..m.D.....
   63b24:	....m........$..
   63b34:	.....+..q...O<..
   63b44:	..........a...W.
   63b54:	P.P.....8.G2...)
   63b64:	..V.............
	...

00063ca4 <sample_38_standard_DRUMS_triangle>:
   63ca4:	......../.p2t...
   63cb4:	 ...w(...N....q.
   63cc4:	...!..9..8...9R.
   63cd4:	..........1...s.
   63ce4:	..$...N.....<$..
   63cf4:	[.(....Cu...$.(8
   63d04:	....j.........).
   63d14:	.E....[.:.......
   63d24:	..;..,..:.......
   63d34:	6.....^.....D...
   63d44:	..m.s.T.....]...
   63d54:	H.0...{.....a...
   63d64:	=,....".h.>...{:
   63d74:	........`.*...>.
   63d84:	.(G.Q.v.6......)
   63d94:	....0.....:.P:;.
   63da4:	.....+e.u.0...x.
   63db4:	|.o......80.><..
   63dc4:	....4..;x..G..<1
   63dd4:	......'.....E...
   63de4:	]...#.n-......l.
   63df4:	&...QN......[$..
   63e04:	x.t...E.....L.'.
   63e14:	....YO..+.%.....
   63e24:	...BD..*I.p.....
   63e34:	....`.........A%
   63e44:	..".{...<...u5..
   63e54:	.D....X...T.o.}.
   63e64:	f...N"p...c..H..
   63e74:	....+...[.=Fj.Q.
   63e84:	d...S....%S.q...
   63e94:	../6..f.i..DW.o.
   63ea4:	.........QU.....
   63eb4:	.._...D....._...
   63ec4:	.1....?.e.....).
   63ed4:	...G....h.......
   63ee4:	.3?..Gn...g&..q.
   63ef4:	s.?/....* ..H...
   63f04:	.3......B.b@...!
   63f14:	..s.....(;...-..
   63f24:	.'C.l.o2n.7#...-
   63f34:	.../z....@..6.D.
   63f44:	.>.I..S....\....
   63f54:	q...Y.;../..e.=.
   63f64:	#.P ...*s.s+x.0.
   63f74:	ZQ^.y...]xV...r.
   63f84:	...:c.....}3....
   63f94:	:5..<....7.....C
   63fa4:	......J9L"..J...
   63fb4:	.n......./..8..'
   63fc4:	...4.....(....n.
   63fd4:	.:.....5..J....M
   63fe4:	..Q.n.%#B`q...4.
   63ff4:	.I.....C......d3
   64004:	].l.q....+......
   64014:	..y....aR...`..Z
   64024:	3........-D./..:
   64034:	P....._B..x...}.
   64044:	j#..1O....z....>
   64054:	.......Y....W3..
   64064:	@..../.-....6.cV
   64074:	..+.A.N.....}S".
   64084:	..$.!8....o.o.xH
   64094:	.....5......Sdm.
   640a4:	....\'..........
   640b4:	....i=....7.CF^.
   640c4:	 .)*.$.%..0:F%N.
   640d4:	.....dp......;..
   640e4:	..."...'..d-....
   640f4:	p.+..A6...y/.'..
   64104:	..e^..l.....FK..
   64114:	..G.<S..z.......
   64124:	...O4.........<.
   64134:	i-.$..Q._.qh....
   64144:	...S......8.R?..
   64154:	....;.f.^..P....
   64164:	>.@.z....M9.Q...
   64174:	.1VF)...#..`z...
   64184:	.&<!_.).>-".....
   64194:	n.yE..."...!.. .
   641a4:	.I..$.G..[......
   641b4:	..NJ..8..&.$..D.
   641c4:	.D....|..0.....'
   641d4:	?.a...f..:......
   641e4:	.i..?....(A.d..6
   641f4:	. 9".....=e.d...
   64204:	.A\....3%...R.,B
   64214:	....*....SV.z...
   64224:	.5E.E..W$.R...A.
   64234:	.&......rK..T...
   64244:	$...&.~R..1...j9
   64254:	r.....K.....Q..c
   64264:	..j.a..N..1.R.K.
   64274:	$6Q..&..Y.I.s.BJ
   64284:	S.5....@.....;..
   64294:	....-5.B..W...?U
   642a4:	..H...."..-.fE..
   642b4:	..^....&r.='...A
   642c4:	.....9....:..`..
   642d4:	.......A.......*
   642e4:	..r..H....s..3\.
   642f4:	...,. S"8.t..7..
   64304:	.....xX......3..
   64314:	..."..0-.....5X.
   64324:	....?9..d..@X. .
   64334:	s.`Tc.C.....NZ..
   64344:	..'..C....v3..4.
   64354:	...;..%....../f.
   64364:	G".*....I..W..E.
   64374:	...I....4..../..
   64384:	...AK...V.v\(...
   64394:	......&.19......
   643a4:	 ..NJ.h....`....
   643b4:	8<!.5...Q&......
   643c4:	...Q......x.a...
   643d4:	.S....9..:3.....
   643e4:	Z.eO?....:=.....
   643f4:	.?.........E....
   64404:	`.2.1....R....<.
   64414:	.M..+....&.%..2 
   64424:	.?h.....laA.{...
   64434:	RHg...^&.......*
   64444:	.,L...x..@..q..%
   64454:	.'....t]7 M.d...
   64464:	.B.......E..\.B!
   64474:	..b. ..=....s...
   64484:	.2....!(....U..i
   64494:	=...h..7..5._...
   644a4:	.@~....%T.'...}\
   644b4:	.......3H....2..
   644c4:	......?XM...P..N
   644d4:	{...m".,[!E.#-..
   644e4:	....O..;A...h!..
   644f4:	[.V..E'.]....H.8
   64504:	2.\....JE....7Y,
   64514:	..4.|=..V.%....&
   64524:	...%.........G..
   64534:	..0.cr}.x....*..
   64544:	.....7`...I..F..
   64554:	:.&..8..w..3..J.
   64564:	6..+.,..:."$jY..
   64574:	1.w.......j<.#u.
   64584:	..X..;|...0..6..
   64594:	...E..'...V@....
   645a4:	...-.A|...g.T%_.
   645b4:	...VF.....!Al...
   645c4:	S...8......0..u.
   645d4:	)..D..m.L..Pq.).
   645e4:	9".3..z....]..y.
   645f4:	`.8B..&...[.....
   64604:	.8....D.*..1....
   64614:	.:.9.....U......
   64624:	79.1`......@....
   64634:	....*....P*.)...
   64644:	.&....d&.,n...e.
   64654:	mD.......S......
   64664:	.3f.....M(..[...
   64674:	kRS...y.s"....V0
   64684:	<!x.2.. .<}.i...
   64694:	J_..r../i-k...x,
   646a4:	....Y.[!.*..R...
   646b4:	....'..Ha.h....R
   646c4:	......b*U7....H.
   646d4:	....Y.8&F.......
   646e4:	.#g.....x......K
   646f4:	^......Um...9../
   64704:	..@...57i.T.Y..C
   64714:	l...}..I.....,X.
   64724:	q.a..?t...j.t!.5
   64734:	....:........O.(
   64744:	.....(3%.......-
   64754:	....l.....D..;d.
   64764:	#...n1*'..V.t...
   64774:	2...._.......2W.
   64784:	M. .z..&K...b...
   64794:	....8R.......G..
   647a4:	9..2n!.....'.F..
   647b4:	@...e9..B....(..
   647c4:	..+9..~....%.#..
   647d4:	...6..t....A....
   647e4:	7..F.1>.[.>..<L.
   647f4:	0..,h!e....@....
   64804:	......y.A1......
   64814:	...@?.....gp....
   64824:	..o-.......#5...
   64834:	g.329......*..G.
   64844:	b:A.5....7.'....
   64854:	.,!T..D.".......
   64864:	x2....?....%....
   64874:	p.P'.....O-...0.
   64884:	.L.......-.5#...
   64894:	..."E...3B......
   648a4:	p@......4.....":
   648b4:	u*<...z.b@@.L...
   648c4:	.H.....%.)..J.f.
   648d4:	.G......57_...2.
   648e4:	5.j....F..m.z...
   648f4:	F,..].i-.;X....W
   64904:	3...+..:..a.q...
   64914:	c0)........./..P
   64924:	.......5.....0.&
   64934:	1.c.-..<;.=.q.<G
   64944:	6...w..#........
   64954:	..A....I.. .{..*
   64964:	..e..<.......3f(
   64974:	.......V..(....,
   64984:	!....;5......1..
   64994:	r...x.R......<S.
   649a4:	I. ..bt.h....'.0
   649b4:	+.. ..f"w.G.....
   649c4:	....O1..,.A.q.8.
   649d4:	T...s8u.....>hw.
   649e4:	..W..4I....(E...
   649f4:	A....!..".f.ZH9.
   64a04:	..T.4...s.`^;...
   64a14:	...8.1..?....4..
   64a24:	..->p......6....
   64a34:	.....'...2..-...
   64a44:	T..E....[.|F#.M.
   64a54:	..........,E....
   64a64:	r.sA..v.....;...
   64a74:	.8p...u....=s...
   64a84:	v..`....V01.T...
   64a94:	.E......N.70....
   64aa4:	...!.....C....k.
   64ab4:	CC....9....,..+.
   64ac4:	!1.......V..,.T.
   64ad4:	...+.......0....
   64ae4:	^6..z._..=4...P6
   64af4:	......`+....3.f.
   64b04:	.l.......D?.Q...
   64b14:	.......3....3.\.
   64b24:	.,.....&. .....T
   64b34:	..Y....>.F....A.
   64b44:	.5......A......=
   64b54:	..}.A.z......2.(
   64b64:	..?.@.}\0.....!W
   64b74:	[...|....6....u.
   64b84:	K.>.G.cI........
   64b94:	....n]H._.5../.1
   64ba4:	|.a.a.nc.......'
   64bb4:	4.%.)*.........3
   64bc4:	s...I.......gT..
   64bd4:	..u..S......o..P
   64be4:	..N.o-%#i....L..
   64bf4:	.....$i...I-..}.
   64c04:	...'6-......~ax.
   64c14:	!.X..9p....A..".
   64c24:	9.t..;.......?..
   64c34:	..#.......&H..R.
   64c44:	..0..D..~....0..
   64c54:	..HT.........'..
   64c64:	x....M..9.Q.....
   64c74:	...]V....../..s.
   64c84:	.,|..)..(.!WK...
   64c94:	*.uM4...O.A..8c.
   64ca4:	N4.._......5....
   64cb4:	..f/..h..@../.D.
   64cc4:	.>$I............
	...

00064ea4 <sample_26_standard_DRUMS_quintotone>:
   64ea4:	........7.z...S.
   64eb4:	......@.......%.
   64ec4:	..l...E...v.&...
   64ed4:	 ..!...,.%A..0J.
   64ee4:	c6.5q6$Ip=.LJJ.H
   64ef4:	.J.>S;N*..m.G...
   64f04:	....X.......U.(.
   64f14:	......t.....r...
   64f24:	w..._/.>uO.^.dFi
   64f34:	*k.b.[.U1E.4."..
   64f44:	@...`...........
   64f54:	..}.....w...,.L.
   64f64:	|.8..........%d-
   64f74:	S3.5.:.9.8.5.4!1
   64f84:	.'........`.....
   64f94:	......r.T.!.+.-.
   64fa4:	....K......'.3.F
   64fb4:	.N/U"T.LcI.A.<q1
   64fc4:	`)..............
   64fd4:	........w.<...'.
   64fe4:	........~.i.H...
   64ff4:	..G".*I5]>[F.L.Q
   65004:	xU.TMO.E.6w*..Q.
   65014:	................
   65024:	..y.'.....e.....
   65034:	d.....f..'.3PB0I
   65044:	-OSR.OcN%G.A.;.3
   65054:	.*K!....Z.......
   65064:	G.......Z.....S.
   65074:	........I.t.....
   65084:	...!...9O>.C.D.F
   65094:	TCA>K9./+'<...C.
   650a4:	k.....Q.M.i.t...
   650b4:	...... ...L.2.9.
   650c4:	......f...n.Y...
   650d4:	..n.n.G.......:.
   650e4:	..3...?.....F.@.
   650f4:	....7...w.D...#.
   65104:	S.f.......1#.-.6
   65114:	.>XC.E.G`B.:.0&$
   65124:	................
   65134:	..b.....,.=.E...
   65144:	..........,.K...
   65154:	.'p-.3a<r=.DVEvE
   65164:	.F.A.?i7./h%..n.
   65174:	..X.~.?...b.....
   65184:	..a.r.:...y._...
   65194:	..T.#.... .*.3.8
   651a4:	.<_?.>e=.9?3.,.#
   651b4:	............*...
   651c4:	..t.....<.q.....
   651d4:	............n...
   651e4:	......$.. b$.'.(
   651f4:	.&.$..?.>.&.....
   65204:	T......."..... .
   65214:	X.......n.*.....
   65224:	..,.:!."="F!Y.:.
   65234:	..V...t.......u.
   65244:	....Q...........
   65254:	c...........%...
   65264:	g.......q.. .&.*
   65274:	./.1.3C3}1..H).!
   65284:	..........[...A.
   65294:	z.<.x.......%...
   652a4:	W.......k.I.n...
   652b4:	. .%.*r-<0.0.0./
   652c4:	.,.).%....[...d.
   652d4:	z...n.........H.
   652e4:	{.....@.....9...
   652f4:	P.,.....=...~.j!
   65304:	.#.$.#.!(.b._.=.
   65314:	........a.G.....
   65324:	..Z.....E.b...4.
   65334:	#.n.....k.].5.Y.
   65344:	l.......A...q.@.
   65354:	C...........o...
   65364:	m...g.......=.X.
   65374:	:...../...!.....
   65384:	...!_%f'.'.&.#g 
   65394:	q.....D.........
   653a4:	..W...........m.
   653b4:	P.....z.r.(.....
   653c4:	..........9..!.$
   653d4:	P%.&R&.%7#k.....
   653e4:	........M...J...
   653f4:	;...J.+.%.D.r.v.
   65404:	!...m.j...j.^.a.
   65414:	..K.s.. _!. Y.f.
   65424:	....Q...(.....T.
   65434:	........Y.D.....
   65444:	........Z.......
   65454:	........'...W.g.
   65464:	....d.....J...q.
   65474:	_.+...Q.........
   65484:	J.........D.J.(.
   65494:	....%...)...{...
   654a4:	..v.....x.@...k.
   654b4:	..........0.....
   654c4:	..........B.....
   654d4:	%.1.....&.y.....
   654e4:	..2.... <!....w.
   654f4:	......(...5.....
   65504:	....f.....w.....
   65514:	....e...7.....I.
   65524:	G.......a.....w.
   65534:	%.j.....k.p.....
   65544:	..........`.....
   65554:	R.0.......A...'.
   65564:	<.......F.\.^...
   65574:	..K.h...i.......
   65584:	U.'.....k...Q...
   65594:	z...j.G.........
   655a4:	'.1...*.........
   655b4:	w.....".Q.[.....
   655c4:	..V.....q.v.....
   655d4:	......$.......6.
   655e4:	1.y.y.R.....^...
   655f4:	....U.....1.....
   65604:	......?...~.E...
   65614:	j.0.W...........
   65624:	=...J...b.B.....
   65634:	....N.......!...
   65644:	E.y.........o.Q.
   65654:	_...E.....7.-.G.
   65664:	Q...............
   65674:	..;.\.....].../.
   65684:	]...9.......B...
   65694:	......+.4. .`...
   656a4:	o...............
   656b4:	......7.'...0.!.
   656c4:	..p.).{...5...s.
   656d4:	:.........C.L...
   656e4:	f.....U.......V.
   656f4:	....T.......g...
   65704:	s.......V...Q...
   65714:	/...k...:.p.....
   65724:	......M.v..._...
   65734:	..{...>.........
   65744:	n.T...........v.
   65754:	@...o...-.'...|.
   65764:	................
   65774:	......V.9...Y...
   65784:	i._...........,.
   65794:	V.........5.....
   657a4:	......|.........
   657b4:	....Z...+...j...
   657c4:	................
   657d4:	L.g.............
   657e4:	......!.4...J...
   657f4:	F.[...].....[...
   65804:	:...&.9.....P...
   65814:	........L.......
   65824:	....0...B...k...
   65834:	/...........p...
   65844:	\.i.\.....Z.T.v.
   65854:	....X.......,...
   65864:	................
   65874:	..R...x...T.f...
   65884:	..G.........g...
   65894:	n.X.Y.Z.........
   658a4:	.. .......K.6.A.
   658b4:	....2.....M.T...
   658c4:	..D.....S...%.Z.
   658d4:	....%.J.#.......
   658e4:	..;.........|...
   658f4:	).B.%.".....Z...
   65904:	n.v./.T.A...U...
   65914:	{. .....2.<.....
   65924:	C.0.............
   65934:	`.v.........-...
   65944:	`...9.....r.C...
   65954:	....)...........
   65964:	....s...).+.e...
   65974:	(...]...s.....).
   65984:	&.G.&...q.@.p.q.
   65994:	N.....7.......}.
   659a4:	....X.........{.
   659b4:	......Z.w.....R.
   659c4:	..I.......f.....
   659d4:	......S.....c...
   659e4:	..@.........b...
   659f4:	%.0..._.'.......
   65a04:	-...\.{.........
   65a14:	......N.........
   65a24:	..........6...D.
   65a34:	....b...q.I.9.I.
   65a44:	......#.........
   65a54:	..z...Z.......#.
   65a64:	f.?...?...*.....
   65a74:	....E.......G...
   65a84:	......|.L.L...x.
   65a94:	....U.".......s.
   65aa4:	................
   65ab4:	3.j.......5.....
   65ac4:	......~.E.4...@.
   65ad4:	..5.k.........\.
   65ae4:	....0.........`.
   65af4:	..e...A...E.:...
   65b04:	....b...E.....v.
   65b14:	..?.....0.....c.
   65b24:	........,.$.g...
   65b34:	w.....H...q...m.
   65b44:	X.[.......F.v...
   65b54:	......".g.....f.
   65b64:	....I...........
   65b74:	?.....b.).....,.
   65b84:	..R...i.....g.+.
   65b94:	......l.A.......
   65ba4:	w.U.............
   65bb4:	..V.....^.......
   65bc4:	s.T...`.........
   65bd4:	`...8.......$.\.
   65be4:	......e.,.....>.
   65bf4:	........H.......
   65c04:	......Y...E.....
   65c14:	......a.........
   65c24:	.."...N.t.T._...
   65c34:	2.......z.4...b.
   65c44:	..r...........t.
   65c54:	....}...........
   65c64:	..|...........j.
   65c74:	p.t.../.....U...
   65c84:	....|.....#.....
   65c94:	$.h.v.w.K.....b.
   65ca4:	............N...
   65cb4:	..?.x.+.....s...
   65cc4:	....u.\./.....l.
   65cd4:	......x.P...>...
   65ce4:	....O.K.+.Y.../.
   65cf4:	....c.........~.
   65d04:	......h.+...+...
   65d14:	......x.....'...
   65d24:	-.y...K.....u...
   65d34:	r.D.....=...g...
   65d44:	t...=.....f.....
   65d54:	....k.....F.....
   65d64:	P...T.x.....X...
   65d74:	{.g.....x.j.E...
   65d84:	..W...i.C.......
   65d94:	..........E.u...
   65da4:	...._...I.'...j.
   65db4:	w.........T...?.
   65dc4:	......D.......c.
   65dd4:	......p.s.$.....
   65de4:	(...............
   65df4:	..&...`.......'.
   65e04:	|.........s.....
   65e14:	9...........r.F.
   65e24:	G.d.r...........
   65e34:	....n.......R...
   65e44:	+...T.%.+.M...P.
   65e54:	#.&.F.....!.U.a.
   65e64:	d...w.....T.....
   65e74:	6.?.I.C.F.=.d...
   65e84:	....C......./...
   65e94:	..D.;.<.m...%...
   65ea4:	........O...O...
   65eb4:	..5.E...Y...5...
   65ec4:	......?...(...E.
   65ed4:	....!.w.........
   65ee4:	..d...4...5...A.
   65ef4:	..^.........P...
   65f04:	x.....'.~.......
   65f14:	....{...D.......
   65f24:	....h...Q.......
   65f34:	..N.....{.../...
   65f44:	........=.....8.
   65f54:	............J...
   65f64:	X.....J..... ...
   65f74:	..........x.'...
   65f84:	^.....:.....G...
   65f94:	..U...c...E.....
   65fa4:	h...i.......*...
   65fb4:	M.'.A.l.....i...
   65fc4:	......G.......&.
   65fd4:	................
   65fe4:	.. .`.......G...
   65ff4:	..............`.
   66004:	..@.....h.b.g.d.
   66014:	..~.}.D...h.....
   66024:	..+.............
   66034:	....$.........Z.
   66044:	........u.....N.
   66054:	m...............
   66064:	=.g...........^.
   66074:	....x.........w.
   66084:	).........{.T.'.
   66094:	........<.K.T.T.
   660a4:	'.....K...F...*.
   660b4:	..6...........5.
   660c4:	..a.-...........
   660d4:	..6...$.:.J.2...
   660e4:	..'.....x...O...
   660f4:	D...F...<...(.|.
   66104:	........s.U.X...
   66114:	..d.............
   66124:	).6.........H.K.
   66134:	+...X.........F.
   66144:	X.........E.....
   66154:	................
   66164:	....0.i.........
   66174:	..7....."...&...
   66184:	........y.#...0.
   66194:	......>.....J.!.
   661a4:	......I.c.......
   661b4:	..r.[.......2...
   661c4:	..b.?.0.N.....?.
   661d4:	..B...O...t...G.
   661e4:	................
   661f4:	..i.9.........F.
   66204:	....A...[...A...
   66214:	........H.!.....
   66224:	}...../.........
   66234:	......:.....J.I.
   66244:	............c...
   66254:	=...#.......$...
   66264:	].....I.........
   66274:	......d...q.5...
   66284:	..z.9.....W.....
   66294:	Y.e.S.....H.../.
   662a4:	....n.....=.....
   662b4:	..............~.
   662c4:	l.H.0...........
   662d4:	..=.t.....s...7.
   662e4:	....P...........
   662f4:	..........b.@...
   66304:	................
   66314:	..l.,...r.......
   66324:	......m.:.'.&.].
   66334:	......2.........
   66344:	........;.}.....
   66354:	....q.0....._...
   66364:	..h.....*...<...
   66374:	5...'...E.......
   66384:	......R.....3...
   66394:	....n.!...[.....
   663a4:	1.1.......4...\.
   663b4:	..r.....J.....P.
   663c4:	......?.......i.
   663d4:	0.......(.N.....
   663e4:	D.............r.
   663f4:	....D._.n._.K. .
   66404:	....v.9.........
   66414:	u.f._.Z.Q.B.7...
   66424:	......Q.....f.1.
   66434:	......k.}.~.....
   66444:	+.....].........
   66454:	5.}.......).4.?.
   66464:	6.:.&...........
   66474:	..c.....r.......
   66484:	....t.....E.....
   66494:	....x...S.....@.
   664a4:	....#...).....!.
   664b4:	?.M.O.9.!.......
   664c4:	?.....O.....;...
   664d4:	n.....8...y./...
   664e4:	............u...
   664f4:	X...x.......w...
   66504:	:.w.........n.B.
   66514:	......T.......|.
   66524:	O...........z.O.
   66534:	........k.:.$...
   66544:	......3.T.....'.
   66554:	......h.....$.F.
   66564:	\.o.n.l._.g.Z.b.
   66574:	c.i.q.w...w...d.
   66584:	C.......6...n...
   66594:	..).....;.......
   665a4:	..<.y.........r.
   665b4:	..I.....e.......
   665c4:	I.y.y.....z.n.L.
   665d4:	4.......8...w...
   665e4:	..2...J...}.!...
   665f4:	..........;.....
   66604:	w...w...i...V...
   66614:	..9.d.......p.L.
   66624:	/.......M.......
   66634:	Y.$.....w.6.....
   66644:	w.:.............
   66654:	....H.....F.....
   66664:	A.......2.@.^.^.
   66674:	[.[.F.G.:.5.).#.
   66684:	&...$...........
   66694:	..g.......V.%...
   666a4:	..c.'...........
   666b4:	".Y.......].....
   666c4:	................
	...

000668a4 <sample_36_standard_DRUMS_woodblock>:
   668a4:	........P.}.t..n
   668b4:	..4..r...r..`...
   668c4:	..|..G.r....C...
   668d4:	...3..2K!..r...P
   668e4:	....f.....R6OL..
   668f4:	.Z.B............
   66904:	+\?.?A(..$#.f...
   66914:	`......S.:0"b..'
   66924:	..P...@......o..
   66934:	V.y.&.$.......E)
   66944:	,....+....X.....
   66954:	...2@...........
   66964:	........h.%.}.{.
   66974:	B...w...a5...&`&
   66984:	T...x.....J.P...
   66994:	l*z.u.r...o.:.2.
   669a4:	P..../....j.....
   669b4:	e.....\..4A%....
   669c4:	..........U..)k!
   669d4:	....u...[.......
   669e4:	H1...)........*.
   669f4:	...#..)..,......
   66a04:	....3.s.A.."....
   66a14:	........).0.B...
   66a24:	........C.......
   66a34:	..;.......C.....
   66a44:	-...^.......f...
   66a54:	I.\.h.E.......C.
   66a64:	B..... .:...#...
   66a74:	6.....^...A.....
   66a84:	a...............
   66a94:	......?.h..."...
   66aa4:	......].....^...
   66ab4:	..........:.S.L.
   66ac4:	j...'.....^.....
   66ad4:	u.8...........H.
   66ae4:	 .0.b.....D...R.
   66af4:	....e...x.C...$.
   66b04:	+.M...^.....i...
   66b14:	..Q.n.D.~.....B.
   66b24:	..F.....d.......
   66b34:	......9...^...4.
   66b44:	..y.%.....x.....
   66b54:	|.k.....n.5.g...
   66b64:	......h.........
   66b74:	................
   66b84:	_...O...X.?.....
   66b94:	....P...d.../.t.
   66ba4:	................
   66bb4:	................
   66bc4:	............|...
   66bd4:	..........u.....
   66be4:	%...w...9.......
   66bf4:	........M.&.<...
   66c04:	......e.........
   66c14:	I.a.]...5.N.i.P.
   66c24:	..D...~.........
   66c34:	..L.............
   66c44:	8....._...:.....
   66c54:	..o...<.........
   66c64:	....!.....5.j. .
   66c74:	..Q.*.o.c.......
   66c84:	..V.#.....{.....
   66c94:	......l.....V.O.
   66ca4:	....[...........
   66cb4:	&...d...........
   66cc4:	......*.......[.
   66cd4:	........|.<.....
   66ce4:	....U.......;...
   66cf4:	..........C.h...
   66d04:	..X.............
   66d14:	....y...N.z.?.O.
   66d24:	..4...^.[...h...
   66d34:	J.....p.........
   66d44:	..........}.....
   66d54:	O.........&.....
   66d64:	............r...
   66d74:	 .x.g...........
   66d84:	......7.@...E...
   66d94:	....u.H.......b.
   66da4:	..............n.
   66db4:	k.....k.....K.h.
   66dc4:	....h.......R...
   66dd4:	............=...
   66de4:	U.z.......*.....
   66df4:	......Q.........
   66e04:	c.2...z.P.3...#.
   66e14:	f...i.....'.....
   66e24:	$...k...B.......
   66e34:	........,.}.....
   66e44:	......b.....+...
   66e54:	..7.z.......g...
   66e64:	x...i.....).....
   66e74:	......h.4...i...
   66e84:	........O.......
   66e94:	....C.....c...Z.
   66ea4:	}.!.4.....l...!.
   66eb4:	....H.....?...A.
   66ec4:	....+...O.e.....
   66ed4:	4.....6.>.....h.
   66ee4:	q...!.e.....^.].
   66ef4:	..F...?.*.......
   66f04:	......K...&.....
   66f14:	S.].\.).b.Y.....
   66f24:	u.U.f.....|...A.
   66f34:	4.....n.@.....7.
   66f44:	..........i...B.
   66f54:	..F.k...V.A.'...
   66f64:	..>...S.........
   66f74:	....^.....A.u...
   66f84:	/...*.v.....}.;.
   66f94:	{.a.|.....u...*.
   66fa4:	C.U.......s.E...
   66fb4:	y.....M.j.b...!.
   66fc4:	R.p...O.b.......
   66fd4:	....F.../...i.H.
   66fe4:	=.9...0.....a./.
   66ff4:	..........G...G.
   67004:	3.....i.........
   67014:	..W...&.C.......
   67024:	}.\.....z.....F.
   67034:	..............).
   67044:	&.......c.....~.
   67054:	..............m.
   67064:	........j.....l.
   67074:	i.............Q.
   67084:	....p.....O.....
   67094:	Y.^...E.}.k.....
   670a4:	..7.a...3.....E.
   670b4:	....<...........
   670c4:	U.............=.
   670d4:	....{.......Z.q.
   670e4:	..J.....L.=.....
   670f4:	..g./...4.......
   67104:	....W...a.d.^.^.
   67114:	....1...|.......
   67124:	4.:.4.......c.y.
   67134:	......\.......+.
   67144:	....8.......s...
   67154:	........b.....F.
   67164:	........&.......
   67174:	c...M...<.......
   67184:	....S...........
   67194:	....s.!.........
   671a4:	..E.U.y.t.......
   671b4:	C...............
	...

000672a4 <sample_4_standard_DRUMS_guitarfret>:
   672a4:	......6.........
   672b4:	................
   672c4:	..............#.
   672d4:	H.....O...R...|.
   672e4:	'...y...O.......
   672f4:	m.v...]...Q.v...
   67304:	.......././.a...
   67314:	......J.....@...
   67324:	y.I.......#...~.
   67334:	..@...|.s.....V.
   67344:	n.k...O.....q...
   67354:	l.......[...s...
   67364:	......W.......J.
   67374:	......b.......p.
   67384:	..U.........R...
   67394:	5.l.....l.....R.
   673a4:	..C.d...........
   673b4:	..4.........{...
   673c4:	....U...........
   673d4:	..........i.!.H.
   673e4:	^.......9.S.:...
   673f4:	..J.X...m.....i.
   67404:	......S...@...a.
   67414:	................
   67424:	C.E.....<.d.h.I.
   67434:	........].].....
   67444:	......|...Q...*.
   67454:	..Q...........{.
   67464:	%...f.v.u.......
   67474:	..?.$.....8.....
   67484:	J.{.............
   67494:	....2.%.{.*...#.
   674a4:	....u...........
   674b4:	+.............j.
   674c4:	p.....L._.Z...r.
   674d4:	..1.......w.....
   674e4:	......S.......4.
   674f4:	..G..... .....t.
   67504:	........G.T.S...
   67514:	t...............
   67524:	..A.'...|.....&.
   67534:	$.........?.S...
   67544:	..A.Y.(./...-...
   67554:	............O...
   67564:	L...(.D.........
   67574:	..0.............
   67584:	 .O.b...?.......
   67594:	..>.....$.......
   675a4:	..N.I.z.Q...;...
   675b4:	..|. .9.........
   675c4:	B.....9. .#...7.
   675d4:	..Z.&...........
   675e4:	....B...y.......
   675f4:	......e...O.....
   67604:	................
   67614:	q.....V.J.......
   67624:	....7.s.......I.
   67634:	&...o.f.C.k.6...
   67644:	....-.C.z.......
   67654:	Z.W.n.X.........
   67664:	B.............x.
   67674:	..!.a...........
   67684:	........q.......
   67694:	W.........d...a.
   676a4:	....M...........
   676b4:	M.C.o.....E.Z.r.
   676c4:	....Q...........
   676d4:	....-..... .b...
   676e4:	..i...v...A.j...
   676f4:	....M...Q.......
   67704:	..o......'U.....
   67714:	..r+.... .......
   67724:	N&Y.<.I.~...M...
   67734:	.$5.............
   67744:	..@.w...<..,.)'.
   67754:	......... *"..4.
   67764:	b.....>...C.....
   67774:	. V..#.&....B...
   67784:	..M.]"..#.J.<...
   67794:	(...1......8....
   677a4:	........w$"...U.
   677b4:	.!........N....!
   677c4:	2...W.....m.8.P.
   677d4:	...!..........7.
   677e4:	..../.....p.+...
   677f4:	.. .!..%}.......
   67804:	..........N.S...
   67814:	4.......b.<.....
   67824:	....h........&..
   67834:	....J...* ....*4
   67844:	.)......C...B2.+
   67854:	.#-..$.%.2K.,...
   67864:	.9.6b:.,....&)h6
   67874:	.4+5....I<.<...&
   67884:	...#.O6;.#.(S#..
   67894:	.M(:}..#.A.:.D..
   678a4:	9..+.@(;.=.'..Z"
   678b4:	.:-FP+`.)$?9N;..
   678c4:	B.0'.3pI.9......
   678d4:	n"<D.&... .2!/.*
   678e4:	.....7#1.8r! .C.
   678f4:	...,0+X.X.Z3.0..
   67904:	..T....5I5[...>.
   67914:	r.."K!.....)..m.
   67924:	....<1*..0..u...
   67934:	..D.W.u.j..".&..
   67944:	..3.....g&k.....
   67954:	..3!..@.H(......
   67964:	............|.}.
   67974:	....7&..R#."....
   67984:	d...=([1b...U.H.
   67994:	..(....6...#A...
   679a4:	...-.#'3..M..%..
   679b4:	H%~.u..;....~.y.
   679c4:	P7r5./=.....*!Z$
   679d4:	...!1(.+......n2
   679e4:	.<...".....1"&I1
   679f4:	8)&)u$.$_..#.7fB
   67a04:	.6....s..?.3.J./
   67a14:	E#.-..;$.1<<.T.>
   67a24:	,.....P7~G.D.@1,
   67a34:	.....,.+dK.`.2?,
   67a44:	....HD.?Lh.D.(."
   67a54:	.._..<.S.e.B....
   67a64:	...7u_.g.:@?s...
   67a74:	t$.1#~ad.A.%...$
   67a84:	.9#ZTq.0,8B.N.. 
   67a94:	.BMt.b.8....P$.K
   67aa4:	DlzM.E% ..'*/..o
   67ab4:	.o,R6$....N8.[.b
   67ac4:	.DPA3.0.X!.G(wq[
   67ad4:	(:.....1.K.`.C;S
   67ae4:	r%....|2$m;e8?..
   67af4:	p.F1m?HN@GDR.5..
   67b04:	...*.WSe=;)'....
   67b14:	.6.B[E.H,?.....&
   67b24:	.Rg].6.&. .2.:.0
   67b34:	JF.At?.......PEP
   67b44:	./...!;8.0.2.:.B
   67b54:	n2&....0.W0B0#..
   67b64:	.#_;O0r22@o:.*..
   67b74:	.".=.T<9..3..)..
   67b84:	.&}0.:.>&...R#.<
   67b94:	cU."....?%.2...4
   67ba4:	P9.3..T..#.FUG..
   67bb4:	|....1]"|"n.Q;4/
   67bc4:	....L&{G%A......
   67bd4:	M0..p..2.8c ..^.
   67be4:	./pCw&..S.. .+..
   67bf4:	.".!g3...... 3.9
   67c04:	..b.}...5(...!.#
   67c14:	%!O......3x+....
   67c24:	..."r%...#..^...
   67c34:	....'0....9....'
   67c44:	...._...y......!
   67c54:	r0a........!L...
   67c64:	....6.8..$.!.%4.
   67c74:	../..!......e...
   67c84:	..t.3).$....x...
   67c94:	.." |...-...... 
   67ca4:	E!`...2..._..&..
   67cb4:	....+...Q..%..v.
   67cc4:	........4,Y.....
   67cd4:	L.......=.'.z.-.
   67ce4:	~..%.'+.h.......
   67cf4:	D!s.......!.....
   67d04:	....r........%..
   67d14:	..c.z.}.u$.*....
   67d24:	..F.......x.....
   67d34:	.....-..Q.d.n.$.
   67d44:	3.\!..}...x...6.
   67d54:	.#..H.......e...
   67d64:	..M.2.....L1....
   67d74:	".W.......p.F.4.
   67d84:	X...q""...{.....
   67d94:	..e.....O.......
   67da4:	.'..T...M.-.....
   67db4:	1.......d...W...
   67dc4:	V.+.4.I.........
   67dd4:	....(...I.u...c.
   67de4:	....Q.....G...4.
   67df4:	..@...........s.
   67e04:	..f.......=.)...
   67e14:	..............4.
   67e24:	..........h...;.
   67e34:	!.H.].P.....c.'.
   67e44:	s.....!.......o.
   67e54:	........k.....M.
   67e64:	..r...1...]...+.
   67e74:	R...8.......E...
   67e84:	?...........k.>.
   67e94:	..|.T...........
   67ea4:	..y...{.`.......
   67eb4:	..l._...L.......
   67ec4:	I.....2...w...].
   67ed4:	..m.[.....}.\...
   67ee4:	B.M.....o.......
   67ef4:	<...Q.....V.....
   67f04:	x.d.....0.a.....
   67f14:	'.%.s...........
   67f24:	....Z.Z...Z.....
   67f34:	g.g.....1.......
   67f44:	........t.......
   67f54:	..e.S...........
   67f64:	J...]...........
   67f74:	..J.B.E.e.^...;.
   67f84:	..........<.E...
   67f94:	..........b...%.
   67fa4:	....=...........
   67fb4:	T.&.1.%.........
   67fc4:	......J.........
   67fd4:	....m.*.....S...
   67fe4:	............7.&.
   67ff4:	4.....y.P.=...t.
   68004:	..J.).t.w.....$.
   68014:	......E.z.......
   68024:	m.....1.$...$...
   68034:	........x.o.o...
   68044:	........Z.....>.
   68054:	8.k.e.e...Y.[...
   68064:	........M.n./...
   68074:	V.....*.+...%...
   68084:	........+.y...m.
   68094:	....P.;.8.......
   680a4:	..o.G.........1.
   680b4:	J...L.U...U.v...
   680c4:	....Y...S.....3.
   680d4:	..........%.8...
   680e4:	........u...W...
   680f4:	..~...........F.
   68104:	..L...B...}.<.D%
   68114:	......l.'.....z.
   68124:	..k.....[.......
   68134:	......d.c.......
   68144:	N.9.(...e...{...
   68154:	..:.....1...c...
   68164:	..,...X.r...@...
   68174:	..Z... .h.~.....
   68184:	s...&.&.;.[...o.
   68194:	..W.~.F.........
   681a4:	......P.......f.
   681b4:	P.....?.........
   681c4:	..1...6...v.....
   681d4:	T.o.......Y.....
   681e4:	J.....?.....X.,.
   681f4:	....6...d.t.e...
   68204:	W.%.y...k...&.!.
   68214:	5.&./.......:...
   68224:	.. .....r.......
   68234:	`.....X.......I.
   68244:	..%...:...?...w.
   68254:	5.....R.......5.
   68264:	>.....O.........
   68274:	......).......].
   68284:	..........{...?.
   68294:	..=...T.v.}.....
   682a4:	..*.....%.....u.
   682b4:	....$.......9...
   682c4:	..d...x...;.....
   682d4:	..#.......=.....
   682e4:	..l.............
   682f4:	0.l.6.....}.....
   68304:	$...`.....n.....
   68314:	'.B.....A.....>.
   68324:	..z.r.......9...
   68334:	..L.u.G...,...D.
   68344:	l.d...|.........
   68354:	..e.7.....l...[.
   68364:	..<.g...n.I.....
   68374:	............!...
   68384:	..m.......7.F.D.
   68394:	..&...i.y.u...v.
   683a4:	........!...|...
   683b4:	/.....d.5.#...f.
   683c4:	....G.....h.K...
   683d4:	......4.........
   683e4:	....-...........
   683f4:	..........B...}.
   68404:	......r.........
   68414:	................
   68424:	L...............
   68434:	e.d.F.6.~...e.g.
   68444:	........I...b...
   68454:	..........4.....
   68464:	..+.............
   68474:	}.J.J...........
   68484:	?.l.1...7.......
   68494:	..s.........v...
   684a4:	....+.#.y.(...!.
   684b4:	....h.<.....l...
   684c4:	B.\.......H"m...
   684d4:	..u.....;.$.....
   684e4:	....,...3.H....#
   684f4:	_.O...s.d...]...
   68504:	N...............
   68514:	Q...........{...
   68524:	=.......(...l...
   68534:	..`.........J...
   68544:	..k...P.$.......
   68554:	S...5.Q.........
   68564:	......Y...C. ./.
   68574:	L...p.......b.'.
   68584:	Q...a...h...{...
   68594:	....{.[...k.....
   685a4:	....r...K.......
   685b4:	......l.X.....-.
   685c4:	......{.........
   685d4:	..L...........C.
   685e4:	........^.v.....
   685f4:	............P.#.
   68604:	......O.....<.M.
   68614:	....n...s.+.....
   68624:	8.....a...%...G.
   68634:	J...T.H.i.......
   68644:	....]...........
   68654:	..{.a.....b...o.
   68664:	B.l...<.k.......
   68674:	..K.........b.D.
   68684:	......../.....h.
   68694:	'.S.M.......1.=.
   686a4:	C.o...z.v.......
   686b4:	....z.....^...4.
   686c4:	..W.....}.'.....
   686d4:	......I.C.....[.
   686e4:	r.....N...f.6...
   686f4:	................
   68704:	..!...*.T.......
   68714:	}.s.........N...
   68724:	......C...+.....
   68734:	5...j.2.C.....a.
   68744:	..^.............
   68754:	6.....a.S...w...
   68764:	............h.Q.
   68774:	+.....T.........
   68784:	..........u.....
   68794:	-.}...........d.
   687a4:	y...k...}.6.!...
   687b4:	..b.F.......%...
   687c4:	......1.........
   687d4:	u...........p...
   687e4:	..X...........z.
   687f4:	#.6.......r.....
   68804:	J.n.............
   68814:	..O.........6...
   68824:	..I...\.B.O.....
   68834:	........4.'...+.
   68844:	....4./.a.@.P...
   68854:	T.h.z.....I.5.n.
   68864:	..M... ...T...?.
   68874:	............(...
   68884:	........K.q.F.=.
   68894:	..J.J.....9.....
   688a4:	I.......9.6.....
   688b4:	 .....E.....$.d.
   688c4:	............Z. .
   688d4:	........'.s.....
   688e4:	............n...
   688f4:	......T.[.V.o...
   68904:	'.5.?.....S...&.
   68914:	C...^.....*.....
   68924:	k.....*.*.r.y...
   68934:	..........Q.v.F.
   68944:	-...N. ...9.....
   68954:	....}.i...}.....
   68964:	..3.>.....|.W.".
   68974:	<...r...!...o...
   68984:	5...............
   68994:	r.......].....W.
   689a4:	..........2...o.
   689b4:	......X.5...P...
   689c4:	a.$.Z.........n.
   689d4:	..-.......+...H.
   689e4:	..........0...Z.
   689f4:	........d.......
   68a04:	8...{.;.u.....C.
   68a14:	......*...h.....
   68a24:	G...`.\.f.....Q.
   68a34:	........P.S.....
   68a44:	J.......[.C.O.-.
   68a54:	..{.............
   68a64:	j.+.l...-...m...
   68a74:	..-. .......o.i.
   68a84:	..M.........C...
   68a94:	..........0.....
   68aa4:	....v.....;...8.
   68ab4:	,.N... .........
   68ac4:	l.....;.....7.u.
   68ad4:	....P...,.....2.
   68ae4:	................
   68af4:	....]...].......
   68b04:	..Q...........L.
   68b14:	..........h.....
   68b24:	o.C.......o.o.z.
   68b34:	..............7.
   68b44:	..9...e.........
   68b54:	L...'.....(.i...
   68b64:	......'.........
   68b74:	..Q...+.........
   68b84:	..............9.
   68b94:	..V.P.s.........
   68ba4:	-...........+...
   68bb4:	....q.y.u.......
   68bc4:	......z.!...H...
   68bd4:	................
   68be4:	..u...9.........
   68bf4:	6...G.h.........
   68c04:	..].........9...
   68c14:	!.........R.....
   68c24:	..w...m.n.....h.
   68c34:	r.e...*.....e...
   68c44:	..D...b.v. ...k.
   68c54:	2.,.6.2...?.....
   68c64:	................
   68c74:	..=.....E.....C.
   68c84:	z...p...}.....i.
   68c94:	..Q.....f...9...
   68ca4:	..p.2.Q.......d.
   68cb4:	o...............
   68cc4:	......*.@.......
   68cd4:	......w.M.B.....
   68ce4:	<...s...T.9.....
   68cf4:	......X.z.Z.w...
   68d04:	..6.............
   68d14:	...._...f...B...
   68d24:	........ .;.N.M.
   68d34:	1...o.^.......G.
   68d44:	..5.a.W...'.9.r.
   68d54:	....N.8...L.....
   68d64:	..f.C.$.....<...
   68d74:	..n.E...5.......
   68d84:	X.n.f.y.y...'.9.
   68d94:	C...............
   68da4:	......i.........
   68db4:	....'.Q.w.$.?...
   68dc4:	.. .....d.<.G.8.
   68dd4:	1.+.<./.%.'.G.;.
   68de4:	f.y.............
   68df4:	................
   68e04:	................
   68e14:	....f.l.W._.T.J.
   68e24:	N.2.%...*.1.D.M.
   68e34:	G.8.;.=.<.J.@.9.
   68e44:	=.C.@.D.B.C.<.9.
   68e54:	B.8.D.6.2.(.#.(.
   68e64:	!.%.............
   68e74:	......<...B.I...
   68e84:	................
	...

00068ea4 <sample_25_standard_DRUMS_quintoslap>:
   68ea4:	............V...
   68eb4:	..a._.;.........
   68ec4:	3...E...4.....w.
   68ed4:	......}+...1b(..
   68ee4:	......H.......7.
   68ef4:	Y.#.j.....]M.[J2
   68f04:	.r8K#>.r.....d..
   68f14:	U.....A.o.....s.
   68f24:	...r..8OPW.D.r.?
   68f34:	.az.N...........
   68f44:	4.......9.e..T?;
   68f54:	.7.rHH.H.!_.....
   68f64:	......3.../.....
   68f74:	w.......O...A...
   68f84:	E.I.p.........r)
   68f94:	`.@.......v.....
   68fa4:	..;.....,./.I...
   68fb4:	R.3.:.....@...5.
   68fc4:	..........5...".
   68fd4:	........>.......
   68fe4:	....$.........2.
   68ff4:	.............. .
   69004:	..%.K.t.'...S...
   69014:	....I...*.......
   69024:	..........{.....
   69034:	..V...)..._.....
   69044:	..Y.9...f...l.Z.
   69054:	........M.....|.
   69064:	..*...O.s.......
   69074:	..b.......*.]...
   69084:	L.8...g.........
   69094:	..u.....;...\...
   690a4:	......@.&.....L.
   690b4:	..x...i.#.A...t.
   690c4:	D...M.3...2.....
   690d4:	........>.......
   690e4:	....g.........|.
   690f4:	e.e.....y.......
   69104:	......7.c...!./.
   69114:	K...].......s...
   69124:	....x...).....+.
   69134:	....Z...........
   69144:	e...2.....5...-.
   69154:	..)...C...O.....
   69164:	-.....P.......{.
   69174:	t.....g...5.V...
   69184:	..R.............
   69194:	........n...&...
   691a4:	........).....>.
   691b4:	........A.......
   691c4:	....g...x.......
   691d4:	a...d.=.......).
   691e4:	..|.k.......B.a.
   691f4:	$.....*.&.......
   69204:	T.s.e.L.....<.w.
   69214:	n.h.w.......b.f.
   69224:	........(.4...u.
   69234:	....J...........
   69244:	..!.y...........
   69254:	4...y...b...=...
   69264:	....q...b....._.
   69274:	..........s.-...
   69284:	..4.J.n...r.....
   69294:	}...........`...
   692a4:	#.t.4...........
   692b4:	....v.j.....R...
   692c4:	..D.N.0...l.....
   692d4:	H.....`.....f...
   692e4:	..6. .X...".....
   692f4:	3...[...........
   69304:	a...............
   69314:	......c.~...t...
   69324:	C.....`./.......
   69334:	h...I...........
   69344:	..`.A.#.......&.
   69354:	..A...|.#...r...
   69364:	..).......-.....
   69374:	.._....... .N...
   69384:	........S...P...
   69394:	?.........4.,...
   693a4:	Y.S...;.......S.
   693b4:	....q.....<.....
   693c4:	....M.q.;.....V.
   693d4:	..d......._.}.#.
   693e4:	'.o...b...d.Y.~.
   693f4:	&.....M.+.....N.
   69404:	..........:...z.
   69414:	..x.D...........
   69424:	k.......3...2...
   69434:	........Q.......
   69444:	....X...E.......
   69454:	....v...........
   69464:	................
   69474:	=.......?.-...a.
   69484:	`.4.......X...5.
   69494:	........>.......
   694a4:	-...............
   694b4:	..............o.
   694c4:	...... .........
   694d4:	..x.......X.....
   694e4:	0...1.........O.
   694f4:	|...............
   69504:	........h.......
   69514:	..K.......Q.....
   69524:	....Z...!.E...Q.
   69534:	1.......G.......
   69544:	N.l.....Z.X...s.
   69554:	....I...........
   69564:	......8.........
   69574:	..=...`.........
   69584:	....&...........
   69594:	(.....;.B.".]...
   695a4:	....p.....E.X.U.
   695b4:	..[.......1.}.8.
   695c4:	!.....j.4...V.s.
   695d4:	....w.Y.........
   695e4:	$...<.`.....*.r.
   695f4:	U.<.....8...F...
   69604:	A.2.....f.......
   69614:	=.....-.!.D.!.1.
   69624:	i......._.Q.....
   69634:	..|.).....3.....
   69644:	..f.\...k.W.V...
   69654:	..q...0...i...f.
   69664:	/.r.6.(.%.......
   69674:	..L.............
   69684:	..,...".........
   69694:	..a.b.........y.
   696a4:	V.;.....6.......
   696b4:	..:.........s...
   696c4:	r...J.'.......Y.
   696d4:	C.F.........^.2.
   696e4:	....y.(.o.g.....
   696f4:	;.....>.........
   69704:	....(.|.....t...
   69714:	................
   69724:	..F.G.....3.D.S.
   69734:	..........h.....
   69744:	........b.......
   69754:	..R.r.{...(...8.
   69764:	....i.../.......
   69774:	..............5.
   69784:	..G.....y.s..._.
   69794:	................
   697a4:	y.)...........5.
   697b4:	..p.....C.......
   697c4:	!...'.....r.....
   697d4:	^.0...l.........
   697e4:	X.....V.....x.F.
   697f4:	5.......Q.~.....
   69804:	D.|.....V.K...b.
   69814:	..l.M.......q...
   69824:	2.......g.\...q.
   69834:	P.......[.....=.
   69844:	..........P.....
   69854:	'.......7.`.K...
   69864:	6.J.............
   69874:	 .....G.d.......
   69884:	..............*.
   69894:	........V.i.9...
   698a4:	....H.S.+...}...
   698b4:	......V.....V...
   698c4:	.._.............
   698d4:	....M...........
   698e4:	....-...i.......
   698f4:	..<...F.....2.).
   69904:	..T.......1...l.
   69914:	T...o.........h.
   69924:	....Z.w.........
   69934:	....}...8...Q...
   69944:	..C.Z...V.......
   69954:	..6.....6.......
   69964:	....~.....j.....
   69974:	/.*.......7.....
   69984:	-.....E...3.^...
   69994:	}.....k.........
   699a4:	..#...Q.....L.>.
   699b4:	..............C.
   699c4:	....|.......}...
   699d4:	9...............
   699e4:	....P...f.v.....
   699f4:	..K.....f.o...L.
   69a04:	<...v...a.......
   69a14:	../.......{...$.
   69a24:	../.p.........5.
   69a34:	!.M...b.s...j...
   69a44:	....P.4.........
   69a54:	....n.W...4.....
   69a64:	#.u.....U.......
   69a74:	g...l...`...D...
   69a84:	......N.5.2...].
   69a94:	..............|.
   69aa4:	......9.u.!.....
   69ab4:	........H...$...
   69ac4:	..........J.*.*.
   69ad4:	=.p...U._.....l.
   69ae4:	1.....2...u.....
   69af4:	..$.f...........
   69b04:	........k.....T.
   69b14:	../...O.{.......
   69b24:	).G.....C.L.^.K.
   69b34:	M.....Q.......^.
   69b44:	..2.H.........'.
   69b54:	......Y.....{...
   69b64:	`...O.o.4.U.....
   69b74:	..b.F.:.........
   69b84:	......9.`.x.x.j.
   69b94:	......K.....)...
   69ba4:	k.........7.....
   69bb4:	..........*...1.
   69bc4:	........0.......
   69bd4:	......x.........
   69be4:	........U.G.....
   69bf4:	......r...F.....
   69c04:	......4.......{.
   69c14:	..u.a.U...i.....
   69c24:	..|...J...K.b...
   69c34:	....G.;.....p.Z.
   69c44:	........U...P...
   69c54:	h.t.;.3.F...l...
   69c64:	................
   69c74:	........W...(.,.
   69c84:	..........+.....
   69c94:	H.........8.b.>.
   69ca4:	................
   69cb4:	..g.............
   69cc4:	....!... .......
   69cd4:	..........g.D.M.
   69ce4:	v.......Z.......
   69cf4:	..4.........?.%.
   69d04:	..*.3...e.T.....
   69d14:	..............8.
   69d24:	,.......4.b.h.,.
   69d34:	....f...........
   69d44:	5./...?.(...^.2.
   69d54:	....1.G.........
   69d64:	....|.....P.....
   69d74:	j.....{...8.....
   69d84:	+...............
   69d94:	....X./...K.....
   69da4:	 .'...o.......*.
   69db4:	..3...x.........
   69dc4:	....G.....8.....
   69dd4:	....|.......?...
   69de4:	..A.........0...
   69df4:	........=.......
   69e04:	"......./.......
   69e14:	..#........."...
   69e24:	..x... .......8.
   69e34:	..............2.
   69e44:	D.....1.......".
   69e54:	...... .P.......
   69e64:	F...b...U.].....
   69e74:	..9...(.g.....T.
   69e84:	Q.......&...Q...
   69e94:	h.........A.....
   69ea4:	q.Q.".0...x.....
   69eb4:	<.......*.......
   69ec4:	................
   69ed4:	................
   69ee4:	%...#...........
   69ef4:	..........L.....
   69f04:	3...*...........
   69f14:	K...............
   69f24:	%.....".........
   69f34:	....2...........
   69f44:	......'.........
   69f54:	................
   69f64:	....+.........?.
   69f74:	................
   69f84:	..C.....).......
   69f94:	{.............!.
   69fa4:	........7.......
   69fb4:	..........!.....
   69fc4:	*.%.<.....D...8.
   69fd4:	................
   69fe4:	D.........".*.Y.
   69ff4:	..M...).......*.
   6a004:	........%...S...
   6a014:	^.f.........J...
   6a024:	......W.....X...
   6a034:	..b.....%...|...
   6a044:	..W.........(...
   6a054:	S.....D...%.&...
   6a064:	M.....&.........
   6a074:	..../...%.E.). .
   6a084:	`.........T... .
   6a094:	?.............Y.
   6a0a4:	..........!...V.
   6a0b4:	....>..... ...3.
   6a0c4:	....G.....D...0.
   6a0d4:	..).....'.......
   6a0e4:	................
   6a0f4:	................
   6a104:	................
   6a114:	................
   6a124:	....1...........
   6a134:	..........A.....
   6a144:	....M.....).....
   6a154:	..........&.L...
   6a164:	.... .....3...".
   6a174:	g...*...........
   6a184:	................
   6a194:	......&.........
   6a1a4:	................
   6a1b4:	&...............
   6a1c4:	....&...........
   6a1d4:	....,.....<.....
   6a1e4:	............%.7.
   6a1f4:	#...A.<...E.....
   6a204:	;...............
   6a214:	*.<.8...0.U...B.
   6a224:	7.".............
   6a234:	......D.../.U...
   6a244:	3.....*. .......
   6a254:	..............2.
   6a264:	........&...*...
   6a274:	..&.............
   6a284:	......).........
   6a294:	0.....!.........
   6a2a4:	................
   6a2b4:	..............9.
   6a2c4:	....!...........
   6a2d4:	..............".
   6a2e4:	....1...........
   6a2f4:	................
   6a304:	................
   6a314:	................
   6a324:	................
   6a334:	..%.............
   6a344:	................
   6a354:	..............".
   6a364:	..8.....1.......
   6a374:	................
   6a384:	....*...C.M...5.
   6a394:	....3.........#.
   6a3a4:	....'.......C...
   6a3b4:	..#.*...+.......
   6a3c4:	................
   6a3d4:	....?.!.(...,...
   6a3e4:	................
   6a3f4:	#.....4.....&.;.
   6a404:	....4."...".)...
   6a414:	..............8.
   6a424:	....^.!...*.!...
   6a434:	/.'.!...3.......
   6a444:	................
   6a454:	..3.........#...
   6a464:	................
   6a474:	................
   6a484:	................
   6a494:	................
   6a4a4:	................
   6a4b4:	................
   6a4c4:	................
   6a4d4:	........,.......
   6a4e4:	................
   6a4f4:	................
   6a504:	................
   6a514:	................
   6a524:	................
   6a534:	................
   6a544:	................
   6a554:	................
   6a564:	................
	...

0006a6a4 <sample_33_standard_DRUMS_guirodown>:
   6a6a4:	....|.I.....=...
   6a6b4:	..........3.Z.e.
   6a6c4:	..o6..(..X..i..J
   6a6d4:	..C..6........ea
   6a6e4:	..Q.._...,.9~..T
   6a6f4:	q....c..O..5..!G
   6a704:	8...._....W>...!
   6a714:	3.v....."..9....
   6a724:	!.... ......i...
   6a734:	-.=...........&.
   6a744:	........{K.....:
   6a754:	.....)$.....7.s,
   6a764:	^.3.......-.....
   6a774:	Z.4.jBi.........
   6a784:	.;O...#$!....8..
   6a794:	...;..w .....!b.
   6a7a4:	....o....%s.+.6.
   6a7b4:	............'.R.
   6a7c4:	..#.e.....k...}.
   6a7d4:	f((....%....".@.
   6a7e4:	7#G....V.....+*.
   6a7f4:	...*..w.F.S...#.
   6a804:	?...0......$%.^.
   6a814:	......o.......9.
   6a824:	Y..........&..v>
   6a834:	".J.Hc<...#K....
   6a844:	.<.....$U....'..
   6a854:	...7..l..N......
   6a864:	a........*7...q.
   6a874:	.....-..^..V....
   6a884:	.G9....8Y..1....
   6a894:	|..3.....<..W..$
   6a8a4:	..s..)..u..K-...
   6a8b4:	.<...#+.d..&....
   6a8c4:	.&....gF....M=..
   6a8d4:	#...N. *.....;..
   6a8e4:	W.qpb.^.&]..O/r.
   6a8f4:	..y'..T..H....zU
   6a904:	..>.!H....2 ....
   6a914:	.(...-..........
   6a924:	}.b....$..i...Z.
   6a934:	......%.........
   6a944:	X.^.{.n.A%N.....
   6a954:	....EQO....B....
   6a964:	.!....@.|.\.;...
   6a974:	...$..J.......p.
   6a984:	q.......d.......
   6a994:	N...|."...W...5.
   6a9a4:	....J#...../..(.
   6a9b4:	......./9.2.3F..
   6a9c4:	a..8.....5<.I7..
   6a9d4:	0...O.....M...'^
   6a9e4:	..u.w8........#+
   6a9f4:	..\,..|..Q.....6
   6aa04:	;.2../..{.}.2...
   6aa14:	.*..2.lC........
   6aa24:	..C...... ......
   6aa34:	1...\...........
   6aa44:	..t.q.q.X.C...?.
   6aa54:	u.Z.0.N.......F.
   6aa64:	........7.<.....
   6aa74:	\... .-)0.......
   6aa84:	*.l.0.......v...
   6aa94:	....>.u.........
   6aaa4:	...".....)..Z..&
   6aab4:	u.......n.....I.
   6aac4:	................
   6aad4:	s.....<.....J.k.
   6aae4:	................
   6aaf4:	R. .3...[.......
   6ab04:	s...........M.'.
   6ab14:	......D.K.....K.
   6ab24:	5...2...........
   6ab34:	....m.....j.....
   6ab44:	..U...9.....s.+.
   6ab54:	...... ...].I...
   6ab64:	........c...2.u.
   6ab74:	Q.H.....L...{.*.
   6ab84:	2.H.Q...b.......
   6ab94:	..^.........J.H.
   6aba4:	..2.......k.....
   6abb4:	.. .......d.....
   6abc4:	..8.q.........%.
   6abd4:	....>...........
   6abe4:	....G.........*.
   6abf4:	..U.....a.^.....
   6ac04:	......p...,.r.d.
   6ac14:	................
   6ac24:	..u.......z.B.I.
   6ac34:	..x.......W.n...
   6ac44:	n.............*.
   6ac54:	..&.z...U.D.}...
   6ac64:	........D.....f.
   6ac74:	s.x.........S...
   6ac84:	....>...U.....s.
   6ac94:	W...........X...
   6aca4:	n...............
   6acb4:	l...,.9.C.......
   6acc4:	..!.P...........
   6acd4:	r...............
   6ace4:	....).`.......f.
   6acf4:	............k.u.
   6ad04:	........ ...b...
   6ad14:	Z...u.......d.U.
   6ad24:	.."...0...o.....
   6ad34:	........+...l...
   6ad44:	..............r.
   6ad54:	d.I...}.....d.0.
   6ad64:	P.C.....}...A...
   6ad74:	9.......z...N...
   6ad84:	..'.L.<...z.....
   6ad94:	....../...k.m...
   6ada4:	L.....G.....8...
   6adb4:	x...%.....a.....
   6adc4:	............T...
   6add4:	........0...f...
   6ade4:	....O.........b.
   6adf4:	........#.'...|.
   6ae04:	..{.............
   6ae14:	d.........3.#...
   6ae24:	....w...=.0.d...
   6ae34:	Z.D.........r...
   6ae44:	..d.c.b...0.....
   6ae54:	v.-...=...T.....
   6ae64:	z.T.........e...
   6ae74:	&.......T.....|.
   6ae84:	........!.....9.
   6ae94:	..[.......m.....
   6aea4:	?.5.N.........}.
   6aeb4:	........X...+.p.
   6aec4:	..,.....k.....H.
   6aed4:	B.........$.....
   6aee4:	......D...[.....
   6aef4:	S.R.Q.k...V...E.
   6af04:	%._...........].
   6af14:	x.X...[.........
   6af24:	........)...G...
   6af34:	/.....i...e.....
   6af44:	......e.........
   6af54:	9.........d.....
   6af64:	........A...J...
   6af74:	..a.v.n.).......
   6af84:	X.C.....N.......
   6af94:	........_.......
   6afa4:	....g.q.h...(...
   6afb4:	>.....*...1.>.P.
   6afc4:	../.........d.A.
   6afd4:	..{./.........?.
   6afe4:	....I.`.......2.
   6aff4:	..........a.!...
   6b004:	H...{.....=.....
   6b014:	3.......].......
   6b024:	..q.....s...V...
   6b034:	....U.b.E.......
   6b044:	i...............
   6b054:	..,.........;.%.
   6b064:	................
   6b074:	J...#.i.}...9...
   6b084:	................
   6b094:	....c.8...2.....
   6b0a4:	..i.......t.W...
   6b0b4:	....s.{...F.....
   6b0c4:	3... .=.........
   6b0d4:	P...Q.F.U...z...
   6b0e4:	Y...<.3.#.Z.....
   6b0f4:	..(.-...........
   6b104:	..9.....1.......
   6b114:	..u.....1.J.u.6.
   6b124:	f.2.....*.......
   6b134:	..d.....%.......
   6b144:	S.....a.U.....%.
   6b154:	..}...=.8.(.....
   6b164:	..4.6.6.9.....E.
   6b174:	..-...6.........
   6b184:	..-.......T...I.
   6b194:	.._.........(...
   6b1a4:	........7.$...g.
   6b1b4:	..3...7.....}...
   6b1c4:	.."...........O.
   6b1d4:	,...P........._.
   6b1e4:	....T...........
   6b1f4:	..........b.....
   6b204:	..w...@.....j...
   6b214:	n.r.E.f.1.....[.
   6b224:	....Q.......#...
   6b234:	D...........b...
   6b244:	..I.T.'...9.L.V.
   6b254:	g.B.n./._.r.L.B.
   6b264:	1.......7.....2.
   6b274:	u.......V...-...
   6b284:	..4.....$...I...
   6b294:	..'.......b.%...
   6b2a4:	....{.......!...
   6b2b4:	................
   6b2c4:	i.............E.
   6b2d4:	n.....X...../...
   6b2e4:	....J.....z..._.
   6b2f4:	....d.......-...
   6b304:	......>.).O...F.
   6b314:	......`.Q.......
   6b324:	........9.....[.
   6b334:	..........3.....
   6b344:	1.......3...E...
   6b354:	....K...........
   6b364:	....]...........
   6b374:	w...../.......L.
   6b384:	....x.......u...
   6b394:	..@.B.@.....U...
   6b3a4:	..N.....m.....m.
   6b3b4:	..../...........
   6b3c4:	../.....2.....6.
   6b3d4:	....%.....1.....
   6b3e4:	x.;.[.n.).}.d...
   6b3f4:	....,.4.z.z...w.
   6b404:	......O.........
   6b414:	..P.....2.....*.
   6b424:	..(.....G.......
   6b434:	................
   6b444:	G...........L...
   6b454:	.._...(.B.....@.
   6b464:	....V.w.B.E.....
   6b474:	m.....X.....9...
   6b484:	..F.v.......}...
   6b494:	.._.h.w.......,.
   6b4a4:	B.a.f.Y. ...k...
   6b4b4:	..m.....[.....4.
   6b4c4:	..$.....7.......
   6b4d4:	....k...........
   6b4e4:	3.........6.....
   6b4f4:	............(...
   6b504:	..P.....].{.B.'.
   6b514:	..A.....<.....P.
   6b524:	............u...
   6b534:	S.....B.....g.r.
   6b544:	G.....(.....p...
   6b554:	6.....4.........
   6b564:	..........$.....
   6b574:	................
   6b584:	..............2.
   6b594:	..2.......;...A.
   6b5a4:	....1...........
   6b5b4:	/...............
   6b5c4:	..*...".......$.
   6b5d4:	..Y.....N.....[.
   6b5e4:	..........G.....
   6b5f4:	"...J..... .....
   6b604:	..........*.....
   6b614:	2.....Q...9.%...
   6b624:	(.....$....."...
   6b634:	..2.....>.......
   6b644:	....;.....'.....
   6b654:	................
   6b664:	"...............
   6b674:	..<.............
   6b684:	..h....._.....9.
   6b694:	....B...........
   6b6a4:	......@.....7...
   6b6b4:	..=.....*.....8.
   6b6c4:	..%.8...D.....7.
   6b6d4:	....'...$.....".
   6b6e4:	..........).....
   6b6f4:	................
   6b704:	%...............
   6b714:	......2..... ...
   6b724:	................
   6b734:	................
   6b744:	................
   6b754:	................
   6b764:	..'.............
   6b774:	../...../.......
   6b784:	................
   6b794:	................
   6b7a4:	2...............
   6b7b4:	................
   6b7c4:	................
   6b7d4:	................
   6b7e4:	................
   6b7f4:	................
   6b804:	................
   6b814:	................
   6b824:	................
   6b834:	................
   6b844:	................
   6b854:	................
   6b864:	................
   6b874:	................
   6b884:	................
   6b894:	..../...........
   6b8a4:	................
   6b8b4:	................
   6b8c4:	................
   6b8d4:	................
	...
   6b8ec:	................
   6b8fc:	................
   6b90c:	................
   6b91c:	................
	...
   6b93c:	................
   6b94c:	................
	...
   6b96c:	................
   6b97c:	................
   6b98c:	................
   6b99c:	................
   6b9ac:	................
   6b9bc:	................
	...
   6b9d4:	................
   6b9e4:	................
   6b9f4:	................
   6ba04:	................
   6ba14:	............*...
   6ba24:	................
   6ba34:	................
   6ba44:	................
   6ba54:	................
   6ba64:	................
   6ba74:	................
   6ba84:	................
	...
   6bac8:	................
   6bad8:	................
	...
   6bb24:	................
   6bb34:	................
	...

0006bca4 <sample_17_standard_DRUMS_chcrash>:
   6bca4:	....D ........E.
   6bcb4:	..i2....R2..7.F.
   6bcc4:	............2...
   6bcd4:	L.[.y.#.......X.
   6bce4:	o...%..._.P.T...
   6bcf4:	g...W...........
   6bd04:	^.b......./.....
   6bd14:	t.......C.......
   6bd24:	...-=...m"..r:<.
   6bd34:	..m...x.......d.
   6bd44:	..v...$B..0L4...
   6bd54:	............x...
   6bd64:	./......2.1..._.
   6bd74:	f)...D..W.s...E.
   6bd84:	s.......b:...&c%
   6bd94:	............[..+
   6bda4:	...'Z.7.@...+...
   6bdb4:	....w...y...#...
   6bdc4:	.....-..u.......
   6bdd4:	..Q$........-...
   6bde4:	2.#.].....:.....
   6bdf4:	G.j...J.....!!. 
   6be04:	........b.......
   6be14:	J;...Jg.....l.R.
   6be24:	C.........}>p.&.
   6be34:	p...9.........b.
   6be44:	...'[..0-.....~.
   6be54:	*...............
   6be64:	L....2o.z.....?.
   6be74:	..x._......O....
   6be84:	......?.8.".3.."
   6be94:	....$.....*.... 
   6bea4:	..T.P...g.N.....
   6beb4:	...2...'........
   6bec4:	G.z......&...G..
   6bed4:	L'3.D.......%..+
   6bee4:	=..Z.".?..Y.~...
   6bef4:	....Q.z...z..*f.
   6bf04:	.+.).#Y.B.(.....
   6bf14:	........S..)./..
   6bf24:	......0!......%.
   6bf34:	.?w.r.E.........
   6bf44:	.....;2..E...1..
   6bf54:	8#..n<3.r......I
   6bf64:	D.. ..n!U.x1....
   6bf74:	C...)..*.....+x.
   6bf84:	w.J...p..r...<..
   6bf94:	......,....G..h.
   6bfa4:	..8.....1... .h4
   6bfb4:	?..0..........=.
   6bfc4:	c.x.n=#..L'.E...
   6bfd4:	..v..Cd..X*-kJT.
   6bfe4:	%...........A.F[
   6bff4:	..eS...+..0...W.
   6c004:	..V....?...4....
   6c014:	=.t...k..4`..*o.
   6c024:	B.E.a.....G.{(..
   6c034:	J..G?.m.r...~.h.
   6c044:	...'..}e:'2.4...
   6c054:	..}...O.rN..k<P.
   6c064:	.Y........E.g...
   6c074:	O.....1.Q.e.7..(
   6c084:	...0..k...e...uI
   6c094:	...*..*......J6.
   6c0a4:	......y......!.#
   6c0b4:	.9O..%......$.~.
   6c0c4:	..8A..w,..B.X.?1
   6c0d4:	D...).......g?6.
   6c0e4:	LbP.......y.X...
   6c0f4:	.._...%.W...}$..
   6c104:	=...!...O...Y...
   6c114:	e...p.c<...E....
   6c124:	>.w.e#...7... e.
   6c134:	..J.#9`EZFS0..e.
   6c144:	....3.......g.o>
   6c154:	...KQ./.o.0.....
   6c164:	....G...UV..mJx.
   6c174:	..V.W...1.y.l.'.
   6c184:	.,....8.H..F\...
   6c194:	..J...X.........
   6c1a4:	'..U..........3.
   6c1b4:	....&.k......'4"
   6c1c4:	..S..?...1....`.
   6c1d4:	e....-u@.D.0.$..
   6c1e4:	..]..........8.:
   6c1f4:	....x.$.......l.
   6c204:	.<..t.'*w%g.D.E.
   6c214:	....[.z8'.<+....
   6c224:	8..B..].....?.C.
   6c234:	ED...,[.].d.o.*.
   6c244:	_....N....z.d.D.
   6c254:	....r.7._.19...V
   6c264:	..o.............
   6c274:	...B^...*&....G.
   6c284:	..$...0.;.n..!u.
   6c294:	........v ..k.B.
   6c2a4:	..........y.e1\4
   6c2b4:	.R........~.i...
   6c2c4:	..#..0.*C2..;...
   6c2d4:	i.....\....3.0`.
   6c2e4:	..rA..i..=....T.
   6c2f4:	.......C.....1..
   6c304:	O...b......B...4
   6c314:	#.....~...x.).A%
   6c324:	,..-........F.<.
   6c334:	.!....s..5.J....
   6c344:	.. .1.g.^...|^F.
   6c354:	....."........B.
   6c364:	O.T.:.7Cs......I
   6c374:	................
   6c384:	L........>[...>.
   6c394:	.............G..
   6c3a4:	...@>....+....Q.
   6c3b4:	k.{.41..........
   6c3c4:	...9}.G.Y.....B.
   6c3d4:	.....3.9....1.I.
   6c3e4:	....[.....|....3
   6c3f4:	........G.......
   6c404:	.............#..
   6c414:	Y ........$.)...
   6c424:	N....2..7<b..I..
   6c434:	....P.....^#..:.
   6c444:	>......L....i+..
   6c454:	5....-.$..O....;
   6c464:	K.w.|.j.........
   6c474:	=Ka..$p7U...l...
   6c484:	.4....K....A.!..
   6c494:	....k.%.K..."..1
   6c4a4:	..b.....t./+....
   6c4b4:	...H.......6v...
   6c4c4:	......I.........
   6c4d4:	.2....'..7......
   6c4e4:	<.....g.>..H..7.
   6c4f4:	\......$...&z)..
   6c504:	U.3"X....,...<E.
   6c514:	....X?....x.X/<.
   6c524:	.^..[...W.....P-
   6c534:	..M...|=...N..`.
   6c544:	s..6u..#..&*.9..
   6c554:	|.V...........E.
   6c564:	bN...26.....I.o.
   6c574:	...#P.....o.....
   6c584:	r.....w.Y...9...
   6c594:	..I%Y.A.T.#.....
   6c5a4:	.Av...).g^#.6...
   6c5b4:	........."`.S.M.
   6c5c4:	...-....8..Z...4
   6c5d4:	..aL+..2-.T.....
   6c5e4:	....E........C..
   6c5f4:	c./...J.{.K.U.T.
   6c604:	.(-.....~.....b.
   6c614:	5...:.>!._ .....
   6c624:	...#i.n.N.}.....
   6c634:	....J.b.1-VJ....
   6c644:	fG......q.%.....
   6c654:	..Q.4 .:...!..:.
   6c664:	......z....<|..9
   6c674:	B.2.....l.u.~1..
   6c684:	. /..,...3......
   6c694:	.......9........
   6c6a4:	....'b..,..\.+..
   6c6b4:	@.i...8..*.....1
   6c6c4:	;$...W..z.R.><..
   6c6d4:	C.....'...M[ .u.
   6c6e4:	-.~.p.#"....[..f
   6c6f4:	h.7...D..W......
   6c704:	..\....#......."
   6c714:	..D.W*......".b.
   6c724:	U.r.u....0...0.R
   6c734:	..k.......`.a...
   6c744:	".o..*.==..3....
   6c754:	....<.D.BQ...=..
   6c764:	#.j<.._.....w...
   6c774:	....^5.HS..*R...
   6c784:	.....G..."j....&
   6c794:	.........+#...x@
   6c7a4:	..r._."##.....H.
   6c7b4:	.D..d ...91.)...
   6c7c4:	..U...6..<.4j&4.
   6c7d4:	[3..S.7.W....2..
   6c7e4:	Q.D..N..j...I...
   6c7f4:	..i....(d.....# 
   6c804:	....X.z..<b.S...
   6c814:	41I.....b.. .[;.
   6c824:	.....$.........(
   6c834:	c....=W.........
   6c844:	.......(..z..$.`
   6c854:	........H.!.k.M.
   6c864:	P.M1.....9i..O..
   6c874:	..?.:)......4...
   6c884:	.......[...!.../
   6c894:	....G..E....P.b.
   6c8a4:	....c\...e&.....
   6c8b4:	t.G...?..;.%%..r
   6c8c4:	....o..."..V....
   6c8d4:	.4CQ..W.L.=,....
   6c8e4:	S.7.&....X...]a.
   6c8f4:	..t.....OKo.....
   6c904:	..i.,.`.G..(....
   6c914:	...!..z.y.s.2.?.
   6c924:	...J...9.....7. 
   6c934:	t.r..+....E.....
   6c944:	E&..u.2..8..%...
   6c954:	.,..q../........
   6c964:	..`........8...,
   6c974:	....n/1.!..)....
   6c984:	=..<~..+D$....<.
   6c994:	I...[..,.=.....<
   6c9a4:	}...*.z.....)...
   6c9b4:	I.@nG.....(.P...
   6c9c4:	YD^...`...i..%..
   6c9d4:	T.....$........Y
   6c9e4:	.9.0..0.......q.
   6c9f4:	....*.. S..._C..
   6ca04:	.?.........EN..(
   6ca14:	....v.....g..;..
   6ca24:	k..3......j...'.
   6ca34:	.:G..........4..
   6ca44:	....."F.2....4..
   6ca54:	...6H.B........C
   6ca64:	..*...Oh%...1.(.
   6ca74:	+ z...S..F......
   6ca84:	.*..b.1..!...4z.
   6ca94:	..;.....T......,
   6caa4:	...4......%...^/
   6cab4:	..x.0&-2........
   6cac4:	J.l.....8...B(C.
   6cad4:	@,....G.L.2..0T.
   6cae4:	.%v...;)#.c.....
   6caf4:	....r...kW..`..L
   6cb04:	..?.......q"R.*.
   6cb14:	..bY....h>....$.
   6cb24:	.(..86..O#o..W..
   6cb34:	$....01...x.#...
   6cb44:	R../_..52.......
   6cb54:	_1.....*....q...
   6cb64:	..|...U..J..B...
   6cb74:	~6..o*......,...
   6cb84:	#....5]=..+.C.P.
   6cb94:	....2...?.......
   6cba4:	..8.....m.{..$.;
   6cbb4:	...R..>.....R...
   6cbc4:	.j..lJ......oD..
   6cbd4:	...3:.5.....%?..
   6cbe4:	......(.......i.
   6cbf4:	a..4......q.....
   6cc04:	.&.......T......
   6cc14:	;.~.1.....P.Uj.4
   6cc24:	6!A.,.I.........
   6cc34:	.3..............
   6cc44:	1.o#............
   6cc54:	z...}.N./'[...j.
   6cc64:	.....Q.....B*.-.
   6cc74:	....w..;......RY
   6cc84:	S.k.D.`.g....:H%
   6cc94:	[,J7..R.........
   6cca4:	..)...z.3.$.D-..
   6ccb4:	......!...: x...
   6ccc4:	......N.........
   6ccd4:	k55,.,9..)Q....1
   6cce4:	....D..1x.0.....
   6ccf4:	..I.. l..:VAG...
   6cd04:	..D.L...B.....A.
   6cd14:	.$z.A."5w...q...
   6cd24:	.f{...v.......<.
   6cd34:	!..........7....
   6cd44:	........d.....s.
   6cd54:	a.-.............
   6cd64:	<..0..)Y....}...
   6cd74:	........j..*.>*.
   6cd84:	-.....s...A.J.m.
   6cd94:	z......:...#b...
   6cda4:	~.8.z...d.).....
   6cdb4:	.,j..=...o..]...
   6cdc4:	...&...(n.`.....
   6cdd4:	........!..,..\.
   6cde4:	(.;....$........
   6cdf4:	..[.(^../...V...
   6ce04:	.....9~.c3F.n.f.
   6ce14:	....+.z.d...e.T.
   6ce24:	0...........!...
   6ce34:	'....8.!Z.......
   6ce44:	.....).!%.C.3...
   6ce54:	.:U.A....&".....
   6ce64:	.."...].....LFK.
   6ce74:	{.g+..-..0;....4
   6ce84:	....L.p....&....
   6ce94:	..............`.
   6cea4:	zb.$....a.'....;
   6ceb4:	.....K....O...^.
   6cec4:	^9.....=..m.:+..
   6ced4:	.%c.......&...U+
   6cee4:	...>u!.....R....
   6cef4:	......[;.....Tl.
   6cf04:	..T.......b.".W.
   6cf14:	...Q|...8.....?.
   6cf24:	..a......;9..1M.
   6cf34:	......c.....$...
   6cf44:	L......WG..#...1
   6cf54:	|...@.....T.....
   6cf64:	.F..!....J....SC
   6cf74:	.............Q..
   6cf84:	.<..X ..?.e...I.
   6cf94:	a.t....?..$..U..
   6cfa4:	...+......[...:.
   6cfb4:	..7.'3......F...
   6cfc4:	.?..u...(.N...a.
   6cfd4:	x..,H8...NR;....
   6cfe4:	....D......C.S..
   6cff4:	b..A....v.-...Z.
   6d004:	F...S.FJ.BY.. #.
   6d014:	;...2F....X._fT.
   6d024:	'.{:U..<..  ...;
   6d034:	.......#..Z...w.
   6d044:	m .3..S."9{.,...
   6d054:	.......1,....0..
   6d064:	W.1.......9.[#..
   6d074:	5.O...5... ...XU
   6d084:	.......'...N:$..
   6d094:	.+t6.(N...G...\.
   6d0a4:	..C...`.w-...Q3.
   6d0b4:	..%..C....o.p.B.
   6d0c4:	r!'*.. 4s.......
   6d0d4:	..e........,..&.
   6d0e4:	6Y_.v.J...Y.2..G
   6d0f4:	.......6....U...
   6d104:	..I...W......-$&
   6d114:	.....#-..*...=I1
   6d124:	d....../....<.Y.
   6d134:	.6.6.R4@....Y...
   6d144:	$...J$.)J..r1...
   6d154:	............. .(
   6d164:	[1...+ ........$
   6d174:	...!........^...
   6d184:	. .0H..*,.".....
   6d194:	'....,.....<.(..
   6d1a4:	.../~.D.T.....T 
   6d1b4:	....J.....(4.C..
   6d1c4:	.E..$...2.c....A
   6d1d4:	=..(...5..../%<5
   6d1e4:	..-.;.%.........
   6d1f4:	.5....0../......
   6d204:	... .&>?..).....
   6d214:	..1.W......,."D.
   6d224:	....m<....H.jQu.
   6d234:	....r......*..."
   6d244:	h.........V.?...
   6d254:	..2..........'..
   6d264:	.X..........{.n.
   6d274:	g%....b'S.q...=<
   6d284:	z.].......u.T...
   6d294:	...M(.........6.
   6d2a4:	-...|....3v.x3..
   6d2b4:	-............r..
   6d2c4:	U.........O..%[5
   6d2d4:	K.r&o.1.........
   6d2e4:	v!..>..N..K...3I
   6d2f4:	....&...E.i.....
   6d304:	J".r....f.....I.
   6d314:	..........o'.*..
   6d324:	Q...N.....D.=...
   6d334:	...,a.@.R...I...
   6d344:	.....73/..}Sm...
   6d354:	1...U..9.<y.Q./C
   6d364:	+.......50..e)..
   6d374:	.<Q...|.......m.
   6d384:	....L.=^..9g....
   6d394:	....p.....=*...C
   6d3a4:	b.z..(K.r)...%P.
   6d3b4:	.....'...9Q...F.
   6d3c4:	..2....+......o.
   6d3d4:	J.V6{...!.5.R..E
   6d3e4:	......-F7...I...
   6d3f4:	<Xh.."P.....S...
   6d404:	B...3!....%.w...
   6d414:	....S.......V...
   6d424:	=..b6.....0"....
   6d434:	...Er.VC..+ .K..
   6d444:	;.....$.<....W..
   6d454:	.....K........l4
   6d464:	......+.T..!...,
   6d474:	p..E..P........;
   6d484:	..%....7q....2..
   6d494:	..v.............
   6d4a4:	X&p...nG_.%.....
   6d4b4:	....n.Y...R.?.#.
   6d4c4:	]!/.J......P6.+E
   6d4d4:	M...M.......g,..
   6d4e4:	.. ...6.;DY...r.
   6d4f4:	.......N....n4S.
   6d504:	..l0..T)t..2$.`.
   6d514:	..........A'....
   6d524:	.J...;..j.=.+...
   6d534:	<..!....^.E....?
   6d544:	m...;..'+.I.....
   6d554:	..z...c.R...m&. 
   6d564:	.'..m..'/.3.K)..
   6d574:	.&...4.E.......0
   6d584:	U...^.....G(...5
   6d594:	D....1.*`...... 
   6d5a4:	......|.8.'...6.
   6d5b4:	..9Bl ...'..:...
   6d5c4:	..v...W)...2T.v.
   6d5d4:	..F'..V%........
   6d5e4:	d....H......7.8.
   6d5f4:	X.....(..3$.e4z"
   6d604:	..c.6-..........
   6d614:	.../.!`$m.......
   6d624:	..z"......%.8..9
   6d634:	y....$.(........
   6d644:	^.. ....|.....T.
   6d654:	e...8'Y..._.s..'
   6d664:	P....:.......-o.
   6d674:	..}...+..%..LIo.
   6d684:	....7......&.)..
   6d694:	.B..G.........2.
   6d6a4:	..P..Z.....2..g,
   6d6b4:	..1.r...k[.....K
   6d6c4:	.............J..
   6d6d4:	....i.^%..u.]...
   6d6e4:	u(,1....K&......
   6d6f4:	..z._...|.K4f.l.
   6d704:	.@..u ..b.6...v.
   6d714:	B..L.....*..2...
   6d724:	.....$#.....|.g.
   6d734:	!!G...I>[...{8d.
   6d744:	.....5 ....D....
   6d754:	.P.....8"9....Y.
   6d764:	D.....0...k.#a.4
   6d774:	i..(u...a.t.?.C.
   6d784:	k......."..%K.p.
   6d794:	p...........T...
   6d7a4:	k$...........H?.
   6d7b4:	8.......E."...:.
   6d7c4:	......!B...<....
   6d7d4:	W.3.e....FW..6..
   6d7e4:	#.F.+0......j...
   6d7f4:	.3......5.`...+.
   6d804:	......9f..T....A
   6d814:	... ..........u.
   6d824:	.F....f*j.L.....
   6d834:	I.G.B...i.'.e..(
   6d844:	......}.}....8&.
   6d854:	!.-"...!/.+...+.
   6d864:	..;..B.'..{.$.%.
   6d874:	.....7....\..Dx.
   6d884:	..c.X...l p...'7
   6d894:	....;..)........
   6d8a4:	............d&..
   6d8b4:	.[...K..J%<.q...
   6d8c4:	./..r2Y......7..
   6d8d4:	..._z..8..d...}"
   6d8e4:	5.m.d ".\.......
   6d8f4:	..Y...<.8.q'ZI..
   6d904:	......g!8...k._*
   6d914:	L..Eo/......X...
   6d924:	b.f.O...........
   6d934:	....VC......X..8
   6d944:	..B.............
   6d954:	...=....<Lv.;...
   6d964:	*.z........-...5
   6d974:	..A-r..#&...n...
   6d984:	S...{...........
   6d994:	.+....j>.....M..
   6d9a4:	>...2...4%..-..r
   6d9b4:	<../..f...X...,.
   6d9c4:	...S..&..Mk..J..
   6d9d4:	$.#...?......##.
   6d9e4:	....[&z...V.....
   6d9f4:	].C..(.........)
   6da04:	m.F=....O$-.K.b.
   6da14:	y.&......+.....3
   6da24:	.............$..
   6da34:	PJ.....@....=C..
   6da44:	..h...T.i..D..G.
   6da54:	.....)..........
   6da64:	R=C.........|.C.
   6da74:	..J...G.....b..+
   6da84:	n.{.A...B2......
   6da94:	I.f.)...-.....(.
   6daa4:	9/E.b...!.......
   6dab4:	..\.~..0w..c..s.
   6dac4:	............5.9C
   6dad4:	y...f)...T9...._
   6dae4:	!.A.A.f...eD<.8.
   6daf4:	{..*u....-W.."?.
   6db04:	..R.|/+/.....@..
   6db14:	.Y....f.i......$
   6db24:	..}......"%WH...
   6db34:	S.3.o.....i..8..
   6db44:	...U.....-..r.u.
   6db54:	....#..=...$.%..
   6db64:	.oN.E.!,..... ..
   6db74:	&....r*..4;.=..(
   6db84:	..e.......H.k5".
   6db94:	...<.........'..
   6dba4:	......f......!1.
   6dbb4:	...*..........?.
   6dbc4:	....@.9.F..Y....
   6dbd4:	'...7.........L)
   6dbe4:	..R.8X......K.w.
   6dbf4:	....J...C6?.....
   6dc04:	........A.[.VX..
   6dc14:	8..(..A.0. .....
   6dc24:	t...`.......'.].
   6dc34:	....B.]IO.o...E>
   6dc44:	..........&2....
   6dc54:	<9.(.5'.....Q...
   6dc64:	o.=...O..-(.)..=
   6dc74:	....y8......5"h.
   6dc84:	1......=}..6[#.H
   6dc94:	:...5.!.3..UN...
   6dca4:	.;.....*x...z...
   6dcb4:	$...j9).zL..,.s=
   6dcc4:	].....<...b.0...
   6dcd4:	...*..6.....a.2.
   6dce4:	C...4.x.S>E.....
   6dcf4:	{.....Q....$..9.
   6dd04:	..>9L".....%..,#
   6dd14:	..^.....-...l6..
   6dd24:	..Y_k.....u.3...
   6dd34:	..........6..(J.
   6dd44:	..,./...V...$...
   6dd54:	.-..........9...
   6dd64:	.O.....GD.......
   6dd74:	.......#&......+
   6dd84:	H..)......b.....
   6dd94:	g..,q]..,....-..
   6dda4:	.%;....'[.<.. ..
   6ddb4:	..~.....9..U..l.
   6ddc4:	..W.U.....#.....
   6ddd4:	...#A5..f./.:...
   6dde4:	6.....+......2..
   6ddf4:	M.,?...$M#......
   6de04:	.....%x.........
   6de14:	@.*....F.....0..
   6de24:	..J.2 ....}.e...
   6de34:	..t..I...*..]..;
   6de44:	u>........k.....
   6de54:	..,TR...:...s...
   6de64:	F.U...'KG.......
   6de74:	...........-W..!
   6de84:	..X...3.....&._.
   6de94:	........1*..t...
   6dea4:	...NV....r.A(...
   6deb4:	........]..#.1!F
   6dec4:	n..,T..9&.y.%...
   6ded4:	..d...;..)...."#
   6dee4:	..).K.`...B.....
   6def4:	C.E.Z......7..."
   6df04:	....k.@.....[...
   6df14:	....a.}1e....T/.
   6df24:	<.%.......V.9.^.
   6df34:	.,..;.1.m...b.).
   6df44:	M.r)...-......p.
   6df54:	....-...#.n.W.VD
   6df64:	......?.G.......
   6df74:	q...{3..l....5..
   6df84:	..x.i.N.....1...
   6df94:	...7... ........
   6dfa4:	5..01.......k...
   6dfb4:	1.h...I..D...$:.
   6dfc4:	..a...G.,.l&..&.
   6dfd4:	^+......7.o..#..
   6dfe4:	E...........L..r
   6dff4:	..x...K.........
   6e004:	.RY.....[.i./-F.
   6e014:	..g...5..97...Y.
   6e024:	..K.4.....%@..>.
   6e034:	..{.C.C%..&.....
   6e044:	w!...6....t.4...
   6e054:	).e.....M..(....
   6e064:	...+......o.<.R'
   6e074:	......Z.....P#..
   6e084:	m.l...iE........
   6e094:	+.7.].$.....V.5.
   6e0a4:	.4....;.H!3...U.
   6e0b4:	......7.......Z*
   6e0c4:	......Y...=.....
   6e0d4:	|..6....5.^....(
   6e0e4:	........j.......
   6e0f4:	..W.U..X......|.
   6e104:	K..............U
   6e114:	l....$........V.
   6e124:	..3.G....(w.1..0
   6e134:	v..1"...L...R...
   6e144:	..R........3."9.
   6e154:	.*.6..~..'..L...
   6e164:	b....F../..+....
   6e174:	e...........,.'=
   6e184:	l.8;..).;$P...P*
   6e194:	.....'".X...2...
   6e1a4:	Z.vB....x w.J.).
   6e1b4:	.BC..<..h.j,....
   6e1c4:	.?9.........t.2.
   6e1d4:	..nM......N....<
   6e1e4:	....WF0.[.....X.
   6e1f4:	........B.l..EH.
   6e204:	..&......1^*N...
   6e214:	P...0.....1 H.'.
   6e224:	H..H...7N.......
   6e234:	M.i.Q........N/.
   6e244:	.....=......N.p.
   6e254:	n.Q$".n.....o..G
   6e264:	....\.z...#.|/..
   6e274:	.....=..e"...,..
   6e284:	..A.......u.....
   6e294:	.@'.`(\.........
   6e2a4:	....L.m...."C..-
   6e2b4:	6...: {.......,.
   6e2c4:	..e...^.d1......
   6e2d4:	_.b.b.......-...
   6e2e4:	.,........'...0.
   6e2f4:	....o.."...#....
   6e304:	U...9.&.g.......
   6e314:	. .. ..9%."...H.
   6e324:	....8...O.z+\.o.
   6e334:	...@9.5.F.......
   6e344:	..4.? '../....DD
   6e354:	e.Q.g.(...i.....
   6e364:	.@Y....U........
   6e374:	1.7.....]...B.q.
   6e384:	./!....3..>..'..
   6e394:	......W.I%.2@...
   6e3a4:	9..Q....%....1..
   6e3b4:	......m?+...."..
   6e3c4:	:)......x..'..5.
   6e3d4:	.!H........(..D.
   6e3e4:	2.......aWh...O.
   6e3f4:	........g...^"..
   6e404:	U.a.`.|BR.a.CD..
   6e414:	......0...?...M.
   6e424:	....D.K"......S.
   6e434:	.&.+b...W.......
   6e444:	..i..@...... ...
   6e454:	.,......j.......
   6e464:	........a.T.!.3)
   6e474:	.%[..1T7 ./.....
   6e484:	....f.....;..&..
   6e494:	.+.J......4.9...
   6e4a4:	..........."O...
   6e4b4:	...!....n4K...X)
   6e4c4:	..F.o.a.t..,_ ..
   6e4d4:	.&(.....3.......
   6e4e4:	........4...J.K.
   6e4f4:	....j..$..}B'...
   6e504:	8.........'....9
   6e514:	..b../'.....P.r.
   6e524:	...'......u.).{.
   6e534:	).].......4.09..
   6e544:	Z@..).l"...)|...
   6e554:	..}.(..........1
   6e564:	........`-......
   6e574:	............... 
   6e584:	......C...G..#p.
   6e594:	......K.r.;/5.0.
   6e5a4:	QBV.*.?.....=..!
   6e5b4:	..W..=....`.(.M.
   6e5c4:	......e.....J.B.
   6e5d4:	.....,..Q.\.....
   6e5e4:	....V.....?.+.3.
   6e5f4:	T...d..Ap.M...!.
   6e604:	...........,n...
   6e614:	.,2.+%,.....R.e.
   6e624:	.4....-.....c..J
   6e634:	..O...o..!......
   6e644:	...+$.n.....C(t.
   6e654:	.......5e.......
   6e664:	........"...n...
   6e674:	o.......~.pA-.u6
   6e684:	..b..-t....&^..L
   6e694:	..O2R...+>E.....
   6e6a4:	[...M#..u...U0..
   6e6b4:	q.....;.h.]..&!.
   6e6c4:	.1B'\.?YB.......
   6e6d4:	..*.,.*..../g..1
   6e6e4:	...%..T.....Y...
   6e6f4:	..c......)......
   6e704:	m..Q........F...
   6e714:	..)....>........
   6e724:	.(x.....w."...r.
   6e734:	e....A .........
   6e744:	..H...X-.8k.]...
   6e754:	....C.........m(
   6e764:	..s.!...B....3A.
   6e774:	...<..&.....j.u.
   6e784:	.(...%..i.r.....
   6e794:	..s...6.g.. ....
   6e7a4:	..........#...W<
   6e7b4:	....!....3..k.U.
   6e7c4:	..d.........[66.
   6e7d4:	....d.!.......(.
   6e7e4:	..y........5...4
   6e7f4:	....(:..D.......
   6e804:	d.b./.3.f).....2
   6e814:	....P.n...5.A...
   6e824:	o.H...`......!*.
   6e834:	.>..d..8........
   6e844:	..f...6.....[...
   6e854:	.+t.....M.....u.
   6e864:	E....-......T.l.
   6e874:	..F;4....(.....1
   6e884:	w.u...$......9..
   6e894:	.....#........".
   6e8a4:	.)..> ....}2..D.
   6e8b4:	....Z.....7!...3
   6e8c4:	?.{-........6(..
   6e8d4:	!..,..6...,..6..
   6e8e4:	w.h.u.........h.
   6e8f4:	O+..I........#..
   6e904:	... n.w.......R.
   6e914:	]..3..A.,+......
   6e924:	!.+..../g.7.wGK.
   6e934:	4..@.,%.n.6.^...
   6e944:	........1.x.="I.
   6e954:	o......FQ...l...
   6e964:	.........6a6C.;<
   6e974:	..B.7.....d...*.
   6e984:	....b.d.........
   6e994:	r&....}.:.&...m.
   6e9a4:	&......,...(."..
   6e9b4:	i..._.s.......Y.
   6e9c4:	^@....i.x.......
   6e9d4:	..<.Z...v......K
   6e9e4:	=.V*).....r)..&.
   6e9f4:	R.."...@....Z...
   6ea04:	.._...".\...,4..
   6ea14:	e...8*..[...i...
   6ea24:	...%.....6.....'
   6ea34:	....X..........&
   6ea44:	~..(.....4..J.2.
   6ea54:	..&...f.".$._;5.
   6ea64:	....(*..v.rE..p.
   6ea74:	.......&}...r., 
   6ea84:	p.....b...j.'.h.
   6ea94:	."'9. ....Y.E...
   6eaa4:	P.2....._...GT..
   6eab4:	..."..c%........
   6eac4:	y.G(...$....L..4
   6ead4:	..:..<....x.R...
   6eae4:	4.....S.A..0D.W.
   6eaf4:	......r...*.?.y.
   6eb04:	...,y...........
   6eb14:	....e..Q=...})..
   6eb24:	..^.........../.
   6eb34:	E6....=...z.....
   6eb44:	......L.V...S..<
   6eb54:	t.0.5...Z:....c.
   6eb64:	8..!..2......2..
   6eb74:	..........{...}.
   6eb84:	f=.&'.5)....5...
   6eb94:	~.s.......*....2
   6eba4:	.,...E...2....w.
   6ebb4:	...."....7..z...
   6ebc4:	..I'..d.J.......
   6ebd4:	.../....N..B....
   6ebe4:	........7.@.....
   6ebf4:	"H....,.........
   6ec04:	......q...,.4...
   6ec14:	......w...../.3.
   6ec24:	3....'a.........
   6ec34:	...4s.6.......h.
   6ec44:	.!.........7V.0.
   6ec54:	.5^...o....9."..
   6ec64:	.......#..l...."
   6ec74:	..."H.~#.*......
   6ec84:	..........(.K.v.
   6ec94:	..............Y.
   6eca4:	^............./.
   6ecb4:	....i...!.j)..N.
   6ecc4:	....9..."..9s...
   6ecd4:	..$.....*.>...&.
   6ece4:	......W..<...%i.
   6ecf4:	u.....m.........
   6ed04:	w......#........
   6ed14:	../.~.$...^.W...
   6ed24:	....T.j..."...X.
   6ed34:	..s.f.F.........
   6ed44:	C.....5.$......8
   6ed54:	.......)v.......
   6ed64:	........\'}.8...
   6ed74:	.*6.....n.>.3...
   6ed84:	.2e...'.!.8...8.
   6ed94:	..).......p...d.
   6eda4:	....m.K.O.8...=.
   6edb4:	3.e.  ....H.)...
   6edc4:	d...............
   6edd4:	.(..3.3...P...%.
   6ede4:	......q.f.<..%6.
   6edf4:	U...^......,L.F.
   6ee04:	.:T.g.....=.....
   6ee14:	...../~.........
   6ee24:	........T.....K.
   6ee34:	V.V.h.a./.......
   6ee44:	L'.....&....!...
   6ee54:	J.p.B.%.........
   6ee64:	..O. ...........
   6ee74:	.":.....b-......
   6ee84:	..{.Z.@..*2...A(
   6ee94:	....<........:A.
   6eea4:	_..0... ........
   6eeb4:	........q...G...
   6eec4:	..K.....X....'..
   6eed4:	V.......|...i..+
   6eee4:	s(..u+:..4%.5.q.
   6eef4:	......2.....(*..
   6ef04:	x.....=.....%.R.
   6ef14:	........$.....y.
   6ef24:	.5k..<......!...
   6ef34:	.....&T...g.....
   6ef44:	..I.....e.v..!..
   6ef54:	0........)..D.1.
   6ef64:	...+..Z.a....*..
   6ef74:	....7.'.x.....r.
   6ef84:	s.E.#.....PE..u.
   6ef94:	....85....w....F
   6efa4:	........Q1......
   6efb4:	..l...h.[.+..Sa.
   6efc4:	>.6.j.......s...
   6efd4:	....j..*q..2....
   6efe4:	W.r.....w......9
   6eff4:	....j.4.A=../.V.
   6f004:	k...I.Y.....Q4..
   6f014:	.._.....|.,...\.
   6f024:	......cB-./.0...
   6f034:	l.6.^.........*.
   6f044:	....V....)..P...
   6f054:	..p.i*..........
   6f064:	,.o..1"/.,(...e.
   6f074:	....b...u...Y.0.
   6f084:	......;/.....CL.
   6f094:	..2.R.y.3.. ....
   6f0a4:	;....'....$.....
   6f0b4:	g..........H..B.
   6f0c4:	....d...........
   6f0d4:	...>..6..(i..":.
   6f0e4:	.'`.............
   6f0f4:	5..:..!.E.....&.
   6f104:	........R.3.i.:.
   6f114:	^8..'0*.X...*.0.
   6f124:	W.....X.m...f...
   6f134:	g.}"!...&.J...!.
   6f144:	................
   6f154:	......."../...W.
   6f164:	....I.L.}.M.h...
   6f174:	.....$..k.8...o.
   6f184:	....?..4..c.L.m.
   6f194:	..e4....V.u.2..#
   6f1a4:	F.....e.)...6@..
   6f1b4:	5..&....9.......
   6f1c4:	....C)\..9......
   6f1d4:	d0..W...T...V...
   6f1e4:	.....7d...~.}..)
   6f1f4:	......s...,.....
   6f204:	w..._.I.......0.
   6f214:	v.<._..9..N.....
   6f224:	......?....,..W.
   6f234:	......;........:
   6f244:	j.G.Q5........z.
   6f254:	...C..6!T$..@..%
   6f264:	b.A...N.........
   6f274:	.)..G.R.d.......
   6f284:	............|...
   6f294:	..f..!?...H ...*
   6f2a4:	R.0.......Z.....
   6f2b4:	....f.......x.I.
   6f2c4:	..........I.&.M.
   6f2d4:	f;..k.B...`.....
   6f2e4:	?....$..c..@..u.
   6f2f4:	.6....&.".}.j.a.
   6f304:	8.r....3s...9...
   6f314:	....7.>.D...o...
   6f324:	P...S.........S&
   6f334:	....M...........
   6f344:	......t.#..&i"/.
   6f354:	......b.Z/j.W...
   6f364:	>._.....f..+..c.
   6f374:	...$..v.D.......
   6f384:	....&.1....;....
   6f394:	i.........n.;&..
   6f3a4:	.6....?.A-......
   6f3b4:	......|.......Z.
   6f3c4:	&..........._...
   6f3d4:	../...T...#.....
   6f3e4:	..K...)$..).....
   6f3f4:	).G.......w....H
   6f404:	...(.$..p...s.x.
   6f414:	......(6....~$z.
   6f424:	....*#........N.
   6f434:	.&V.-.....U.t...
   6f444:	..>........E..-"
   6f454:	...)\%E....+F.e.
   6f464:	k.|.Q.......&\#.
   6f474:	U.T.^...>.......
   6f484:	(.O.X...)....+9.
   6f494:	_.=....=........
   6f4a4:	............r...
   6f4b4:	....A.......@...
   6f4c4:	..0...a.....i.@0
   6f4d4:	*...H.....?...^.
   6f4e4:	_...h.........x.
   6f4f4:	T.y.d.A.........
   6f504:	....h.W..1K.....
   6f514:	................
   6f524:	.2Z. ......0<...
   6f534:	r%.....'....*...
   6f544:	n...$...a0s.(6y.
   6f554:	....Q.......>...
   6f564:	...5=..N..h.....
   6f574:	..........Q!$...
   6f584:	. p.q.......Q.. 
   6f594:	..y.L....;=.z-..
   6f5a4:	d.o.+.........|.
   6f5b4:	>......$z.7.....
   6f5c4:	....`.y...m0f...
   6f5d4:	.1..V..(..U.....
   6f5e4:	.....'..V......;
   6f5f4:	3./...g.7.61..w.
   6f604:	..2.M.@.......:.
   6f614:	/...........w)..
   6f624:	........../.....
   6f634:	'.1.Z......,]...
   6f644:	....+.......:...
   6f654:	?.|..;....]...y.
   6f664:	......x..&..&..2
   6f674:	..O5..p...E.....
   6f684:	."...9*.....t...
   6f694:	...-5.......i...
   6f6a4:	..?....G..#>f...
   6f6b4:	..g..1_.........
   6f6c4:	..+ t25...u.....
   6f6d4:	..;...8.[.L..<N.
   6f6e4:	R.......d.#.....
   6f6f4:	i.[.....s..K..G.
   6f704:	.!.............O
   6f714:	v..$..n.....B...
   6f724:	c.=.=....!W...`.
   6f734:	!...........b.J.
   6f744:	......$......!!.
   6f754:	 ...R.M.X.g....#
   6f764:	..+..=..R.w.....
   6f774:	..,...T.....5.7@
   6f784:	."..z.....5...O.
   6f794:	..7.. ..r.Z.&...
   6f7a4:	=.u0X..2u.A...W.
   6f7b4:	1.w.G.......[...
   6f7c4:	F.v.........{...
   6f7d4:	. ....\...J...j.
   6f7e4:	....6...^..(..t.
   6f7f4:	..C.............
   6f804:	..S*....:...l#.&
   6f814:	D.y. 3..........
   6f824:	F...]+...0h.D...
   6f834:	..y..5..>..+;...
   6f844:	.",.g.a.}...$..-
   6f854:	C.54..e.W6....j.
   6f864:	R........(G.n/..
   6f874:	C...C.@.Q.......
   6f884:	j.K+......].}...
   6f894:	.....)..........
   6f8a4:	..n.,.|..$T...n.
   6f8b4:	:.5..........W..
   6f8c4:	....o...D.....s.
   6f8d4:	.......'....J...
   6f8e4:	#'..P.x..../....
   6f8f4:	......l.?.9=7...
   6f904:	5IG%8.C.......i.
   6f914:	.!..0....B..O.A.
   6f924:	..a.......`..3.M
   6f934:	Y...).....$.=.V.
   6f944:	.#U.......V.....
   6f954:	..-..;A.....9...
   6f964:	..........)....(
   6f974:	C.....T.......C.
   6f984:	..u....1{.T..1..
   6f994:	..A.......`.....
   6f9a4:	................
   6f9b4:	.B0....@$.M....*
   6f9c4:	d.>.C.+.<...].#:
   6f9d4:	.$. C.'../k"....
   6f9e4:	......J.....62N.
   6f9f4:	..............N.
   6fa04:	&=U.<..-........
   6fa14:	........D.w...C.
   6fa24:	................
   6fa34:	..-$:.....^..4.%
   6fa44:	...T.4..D.p...>.
   6fa54:	......W*.F...&d.
   6fa64:	.>..Z...t...|...
   6fa74:	..........!0. ..
   6fa84:	..[...I...U...z.
   6fa94:	.....>...$......
   6faa4:	q...............
   6fab4:	.+....$...F...}.
   6fac4:	................
   6fad4:	...2....M.m..!.-
   6fae4:	..........|.....
   6faf4:	....{...2/......
   6fb04:	......L...=...L1
   6fb14:	;.....g0....d...
   6fb24:	#.....-...3..7X.
   6fb34:	C#v...o.........
   6fb44:	....o.....#1L.n.
   6fb54:	...D..........C.
   6fb64:	\.k.S1...../`.`.
   6fb74:	..!.~.-...t.1.n'
   6fb84:	........eh......
   6fb94:	Y.....).D..=..>.
   6fba4:	f.........4.,...
   6fbb4:	..k%"...........
   6fbc4:	]....C..k...6...
   6fbd4:	..........:...'5
   6fbe4:	2...T...).......
   6fbf4:	.. ..../........
   6fc04:	..7.L.).O...2...
   6fc14:	3!O.......?.....
   6fc24:	 Q5.Y...........
   6fc34:	..}.......y%..I.
   6fc44:	j...9.......J...
   6fc54:	..p.....Q2..... 
   6fc64:	........q.$.....
   6fc74:	[&..:.#..*_.g...
   6fc84:	..z.......4.....
   6fc94:	\S^.....3...x...
   6fca4:	..l...K..C.....#
   6fcb4:	.!..;.......{.=.
   6fcc4:	...#i.k..#.,.1..
   6fcd4:	=. ...w.e.k.....
   6fce4:	..1.......}.X0:.
   6fcf4:	4.......1...v.}5
   6fd04:	"...L.".....w.^.
   6fd14:	...#..".."z..5..
   6fd24:	............/.7(
   6fd34:	..(.R...`.R..D..
   6fd44:	r.L.R......I...<
   6fd54:	@.Y.U,....5"....
   6fd64:	......X.<.:.(L..
   6fd74:	........V+.....;
   6fd84:	..`.............
   6fd94:	e....../........
   6fda4:	K.-..+........X.
   6fdb4:	....'(..F....AK.
   6fdc4:	.4............G.
   6fdd4:	......kS.......)
   6fde4:	Y.O...Q.........
   6fdf4:	..3......G..N...
   6fe04:	....8.{.:......N
   6fe14:	`.n. ..*..~.Q.O.
   6fe24:	).....2....5....
   6fe34:	."Q.*.....~...'.
   6fe44:	..5..!B.k...... 
   6fe54:	..........."F...
   6fe64:	d..5Q.;.~.Q.0...
   6fe74:	_.....]...z3....
   6fe84:	4.I...........d.
   6fe94:	.$:..%>...R...;.
   6fea4:	S...........H...
   6feb4:	%3....U...^...m.
   6fec4:	;.u.l#...;...G6.
   6fed4:	....=.....I.J.X.
   6fee4:	.."0.....F......
   6fef4:	..........DD....
   6ff04:	.J............'.
   6ff14:	..*.I.6...!-....
   6ff24:	.-..O..&....l.I.
   6ff34:	...-_2..<.i.ZT3.
   6ff44:	..l...s9>.=.....
   6ff54:	^Fk.... K.':m...
   6ff64:	..U.....C.( .!..
   6ff74:	..<..2........&.
   6ff84:	..&^p...........
   6ff94:	......F*......O.
   6ffa4:	u7V....F..7...s.
   6ffb4:	..W.J...9..+..H.
   6ffc4:	.$......`..)/$..
   6ffd4:	..............NL
   6ffe4:	Y..........&..u.
   6fff4:	F.#...x...h.W...
   70004:	......... . ..{,
   70014:	.7).........5...
   70024:	Y.y.......E3.Na.
   70034:	....;.....'.....
   70044:	....j.....".Y...
   70054:	$.84..Z..)....c.
   70064:	....b+..o.z...s.
   70074:	Y...K.A"#.J...p.
   70084:	n.=...3.`.....o.
   70094:	/+<.%A..'.J.....
   700a4:	......R..A.....,
   700b4:	..p.6.....9./-..
   700c4:	........\...@"..
   700d4:	#."...,<...<4...
   700e4:	.$^.s.....#.n...
   700f4:	.........5..Z$..
   70104:	%../r.K.a.}...u.
   70114:	........~)....v.
   70124:	...$..I&[...|...
   70134:	...#>,;.e..Eg.k.
   70144:	......x..#n...P:
   70154:	d...."e.....#.,.
   70164:	..z.......H....2
   70174:	..f.w...d.i.h...
   70184:	......Y.......E.
   70194:	.A}...%.].......
   701a4:	....94....h$..6.
   701b4:	W.m...H....:r.).
   701c4:	...._.|..O..l.}.
   701d4:	... ........b5?.
   701e4:	Z.....Z%...#....
   701f4:	u:......T.,.t...
   70204:	..,.7...|...{.."
   70214:	k...]D..?8..3.L,
   70224:	..h..'..xN..V:..
   70234:	?.48......z...v*
   70244:	B...F.p9G...Z.o.
   70254:	..M....%w..52%..
   70264:	.g....e.......j.
   70274:	..<.r2..I....)".
   70284:	..*...u(I.......
   70294:	9..+... ..g.[]..
   702a4:	V.........G...?.
   702b4:	.F..t.....r)....
   702c4:	g.......|......@
   702d4:	..,.^.9.`...7...
   702e4:	.-.9..5...|...W.
   702f4:	..-.>!d..-h.A...
   70304:	7.U...,;4....C`.
   70314:	......`...l+...$
   70324:	.%..............
   70334:	..........>....,
   70344:	......W..?..[...
   70354:	0".5............
   70364:	&.~.:..7..&.0.[.
   70374:	..p.E...G...w...
   70384:	....A;..A5Z....9
   70394:	..B.1)M.....w.0.
   703a4:	..K%..&.r5%.....
   703b4:	j.........N.s.c.
   703c4:	......."..\C..K.
   703d4:	.<....>..!....,.
   703e4:	X.....S...}*=.-.
   703f4:	J.*...2.=.....S3
   70404:	..y.(...{.V..5..
   70414:	../2..o.&4......
   70424:	Q.7.]..;%......$
   70434:	....".Z....*... 
   70444:	x.o.u-..B.d.....
   70454:	..@.V ...5..-0..
   70464:	!.$._..(....81..
   70474:	....c.a8Y.p.....
   70484:	.. ...D.D..*..U.
   70494:	^._.@..)C.q.R$..
   704a4:	......c...V..40.
   704b4:	#.....m.'.....u.
   704c4:	.00....K.._.RC.1
   704d4:	........#.......
   704e4:	.......%L.n.@...
   704f4:	yGx.X.....3.2...
   70504:	j..7.:...A..Z...
   70514:	v.1...E.........
   70524:	M.......)..+....
   70534:	+...U...)...6.*.
   70544:	@-...,.&D.......
   70554:	...........E....
   70564:	..p.k...v.......
   70574:	.. ".....P...,x.
   70584:	..../.......R#..
   70594:	.E....'.........
   705a4:	U......6..v....+
   705b4:	"...,........)q.
   705c4:	. .;..y..(......
   705d4:	|...s._..(...+:.
   705e4:	...7i...Z...:...
   705f4:	.......?........
   70604:	..G.dI*.....r.7.
   70614:	.)....3..!....=.
   70624:	......!.3.c$.=.!
   70634:	R..!~.../...B...
   70644:	..'.!..Y.....$..
   70654:	0(A...".....V*(.
   70664:	.'.......9}.:..?
   70674:	%...a./.F.?.-...
   70684:	7...P3..:._...F.
   70694:	....E........0..
   706a4:	......\.........
   706b4:	.W..p..*....?...
   706c4:	....\.../..9..v.
   706d4:	.0]...k.p...l...
   706e4:	J........A..R...
   706f4:	s..>....;...&$K.
   70704:	....(.t5..z...q.
   70714:	".t.......~A`)!.
   70724:	.,..9...........
   70734:	#........5.....J
   70744:	...5..!.X...C.9.
   70754:	..R;..u...q..)..
   70764:	.............2..
   70774:	..T..FU./.......
   70784:	W.....B....L..:.
   70794:	..'...r.6.......
   707a4:	@...e.....s.P...
   707b4:	_...........'.9*
   707c4:	....2.\.....Z8X.
   707d4:	v.d.~.t...2$....
   707e4:	g.`.i;....p8..n.
   707f4:	.....<R%{.9.Z.=.
   70804:	.%v.v.U.T$...%..
   70814:	.%.-........T...
   70824:	V...j......!N...
   70834:	7.S.X.N...e.....
   70844:	....).....B...^.
   70854:	.....,y.F.....l.
   70864:	................
	...

000708a4 <sample_18_standard_DRUMS_tamborine>:
   708a4:	......-.=...\...
   708b4:	......A.[.....i.
   708c4:	A.....X.....x...
   708d4:	J.g...l.p.......
   708e4:	....|.....;.1...
   708f4:	K.<.w.('..i-....
   70904:	b-v.3... jW....r
   70914:	...#.E.....D>...
   70924:	.8@.....3...I...
   70934:	........."@.....
   70944:	..h....C.....P..
   70954:	.!.9..k.lHa.n..Q
   70964:	.."...m...7..;..
   70974:	....R.......X.g.
   70984:	..C....). ....VC
   70994:	H...7^.....I-...
   709a4:	}1..r..J..J..Sx.
   709b4:	....$.r....%..P.
   709c4:	..,.........d.H1
   709d4:	..%B.....+......
   709e4:	.2T...$T../."...
   709f4:	!.v..Ei...{5n...
   70a04:	....Q...b.......
   70a14:	/.|6..c..*......
   70a24:	E&..#..?....."..
   70a34:	9.....X..%..).8"
   70a44:	<.p....&....T)R.
   70a54:	j...I.........X.
   70a64:	....g....,1.u!..
   70a74:	k.V.j...... H.'.
   70a84:	.%B.........D..M
   70a94:	=..../#......U1.
   70aa4:	...SH.f.]*..`.W.
   70ab4:	p:T....;0.w..&f.
   70ac4:	............q...
   70ad4:	c.......c.......
   70ae4:	..>.......4$;.J.
   70af4:	="B...`0..i.. ..
   70b04:	....8%v....:w.\$
   70b14:	........K.9.O@+.
   70b24:	v.14q.6.J..H/.x.
   70b34:	.UL....[....[U..
   70b44:	..l.2+w...@D..n.
   70b54:	.1.....%K.P.c.V&
   70b64:	....o.E...%...s.
   70b74:	O+..l.a.........
   70b84:	u.....B...p.6...
   70b94:	j...e.......#...
   70ba4:	...$..8.}'v....H
   70bb4:	.....=x....A..M.
   70bc4:	uA......76....._
   70bd4:	.....P......z.8.
   70be4:	h._5...(........
   70bf4:	o...............
   70c04:	2.j)_...~+......
   70c14:	.!Q.I.3"..... W.
   70c24:	\..(....L..%..B.
   70c34:	Y)z.{...3.Y.#'..
   70c44:	 .e.,.Y...L5....
   70c54:	.#!....../:...a/
   70c64:	....."..).X.;.`.
   70c74:	......`.......q.
   70c84:	...#^.F.........
   70c94:	...........3t...
   70ca4:	G...w.k..$N.%...
   70cb4:	B.......B.%.....
   70cc4:	..6....._.....!.
   70cd4:	....j...@...v...
   70ce4:	..\...q*......M.
   70cf4:	..../.V.........
   70d04:	..1.1.o...3..(..
   70d14:	......v....9..d.
   70d24:	..%.....2/.... %
   70d34:	6.......Z.H../..
   70d44:	Q.......+...L..:
   70d54:	..J..1x...*.Q...
   70d64:	-.......l.....A.
   70d74:	.&..L..1<.A.....
   70d84:	=.......&...!.%.
   70d94:	...."._.3.k.....
   70da4:	..........0...o.
   70db4:	..........<.....
   70dc4:	_...D.......?...
   70dd4:	:...........R...
   70de4:	......{.....t.L.
   70df4:	2...R.....V.6...
   70e04:	c.....#.U.I.Y...
   70e14:	..{.1.....X.....
   70e24:	..|.a.....b.....
   70e34:	................
   70e44:	......|...E.....
   70e54:	..%...&.....'.Q.
   70e64:	..........*.I...
   70e74:	................
   70e84:	w.&.8.3.I.....V.
   70e94:	q.....K.R...G.).
   70ea4:	..\.........7.0.
   70eb4:	..6.........[...
   70ec4:	......K.......J.
   70ed4:	..o.f...........
   70ee4:	`$........v.c.U&
   70ef4:	....B3....`.....
   70f04:	...0....."2.....
   70f14:	........M.)...E.
   70f24:	../...Q..&......
   70f34:	..../.......u...
   70f44:	\.z...@.M.......
   70f54:	..b.............
   70f64:	..=.R.....9.+...
   70f74:	.&..A.....'...k.
   70f84:	..(.. ..+.......
   70f94:	................
   70fa4:	....q.$.....7...
   70fb4:	:...{.N.......s.
   70fc4:	z...............
   70fd4:	....*.....8.....
   70fe4:	T...s.#.<.o...W.
   70ff4:	B...........O...
   71004:	F.\.o.c.......L.
   71014:	...........#....
   71024:	..1.......?.C.J.
   71034:	..e.....X...)...
   71044:	:&......2.H.'...
   71054:	....J.\.....!.q.
   71064:	....q...........
   71074:	........u.....&.
   71084:	;.......{...O...
   71094:	].......c.....e.
   710a4:	......?.....G.R.
   710b4:	........l.....K.
   710c4:	....<...V...I.i.
   710d4:	................
   710e4:	................
   710f4:	............{...
   71104:	....g...'.~...Q.
   71114:	........B...4.}.
   71124:	....Y.......S.>.
   71134:	..z.............
   71144:	;.W...5.j.M.d.&.
   71154:	..`...h.........
   71164:	....:.!.=.@.....
   71174:	....U.../.......
   71184:	............T...
   71194:	..{.Q...........
   711a4:	..+.....O.L...z.
   711b4:	....P.>.I.N.7.l.
   711c4:	......p.B.X.X.0.
   711d4:	..........>.....
   711e4:	%...\.6. .....%.
   711f4:	................
   71204:	..........h...X.
   71214:	..............}.
   71224:	3...M.....4.=.S.
   71234:	....!...z.[.../.
   71244:	....w.....!.|.s.
   71254:	..q.9.a.G.......
   71264:	6...h.&.e.....T.
   71274:	...._...A.......
   71284:	U...t./...w...x.
   71294:	.. ...Q.......j.
   712a4:	t...p.........j.
   712b4:	......N.......H.
   712c4:	....O.b.......8.
   712d4:	........N.!...t.
   712e4:	".....n.....d.(.
   712f4:	T...S.W.....{.5.
   71304:	......P...t.....
   71314:	<.........:.6.;.
   71324:	7.:.........<.T.
   71334:	..z.....{.Q.....
   71344:	>.G.).../.Q.1...
   71354:	..........g...^.
   71364:	......c.........
   71374:	....P...L.M.9...
   71384:	........:.q...3.
   71394:	....a...!.......
   713a4:	............`...
   713b4:	..W.V...t.......
   713c4:	....J.....o. ...
   713d4:	..`.:...s...c...
   713e4:	................
   713f4:	m.O...g.......b.
   71404:	P.......E...[...
   71414:	..G.....p.......
   71424:	..E.?...../.k...
   71434:	A...E.......J...
   71444:	y...X.....M.d...
   71454:	........1.:.J.f.
   71464:	....@.....Z.|...
   71474:	r...f...?.a...c.
   71484:	......M.......@.
   71494:	V.\.|.........X.
   714a4:	......X.?...E.~.
   714b4:	..%...T...N.....
   714c4:	............]...
   714d4:	w.....*...H...0.
   714e4:	[.......R.w.S...
   714f4:	......i.......+.
   71504:	..l.(.........Z.
   71514:	..f...{.........
   71524:	....Y...........
   71534:	............J.].
   71544:	/.........Y.....
   71554:	..N...)...f...).
   71564:	..#.......!.....
   71574:	........B...{.1.
   71584:	c...........+.l.
   71594:	i...............
   715a4:	....1.......9.T.
   715b4:	....X...y.....k.
   715c4:	....)...>.2.....
   715d4:	I.d.,.....;.....
   715e4:	....V.i.......M.
   715f4:	..L...<.g.....x.
   71604:	v.....J.`.4.....
   71614:	s.....X.........
   71624:	Z.Y.-.^...x.a.".
   71634:	..........(.....
   71644:	h...)...m...J...
   71654:	....:.A.........
   71664:	K.....3...].G...
   71674:	......:...X.....
   71684:	..u."...B.......
   71694:	p.<.s...........
   716a4:	F...........1...
   716b4:	8......._.......
   716c4:	X.`.I.....a...(.
   716d4:	..{...,.....l...
   716e4:	................
   716f4:	....`..... ...p.
   71704:	..g...].......O.
   71714:	..\.........-...
   71724:	....(...m.......
   71734:	W.....x.....4...
   71744:	^.G...o.W.Z.-...
   71754:	(.}.....i...d.?.
   71764:	....L...........
   71774:	..B...^.O.}.S.h.
   71784:	s...p.~.i...O...
   71794:	..I.b.j.p.t...l.
   717a4:	..o...b.....F...
   717b4:	....0...A...[...
   717c4:	..y...i.L...J...
   717d4:	..............X.
   717e4:	................
   717f4:	v.....b.n.....+.
   71804:	..].N...l.......
   71814:	..............=.
   71824:	....c...........
   71834:	A.1.]...p.>.-.7.
   71844:	..d.....S...l...
   71854:	........8.M.a...
   71864:	..W...U.........
   71874:	....'.n.9.......
   71884:	................
   71894:	a...&.F...5.....
   718a4:	..a.c.U.........
   718b4:	....f...L.......
   718c4:	....i...{.q.....
   718d4:	................
   718e4:	k.G...X.p.......
   718f4:	l...O.......).z.
   71904:	..y...P.........
   71914:	........8...g...
   71924:	..a.......x...1.
   71934:	\.....F.....v.|.
   71944:	..............l.
   71954:	;.....`.h...}.K.
   71964:	..X.....9.....F.
   71974:	7...3...|.....r.
   71984:	H...~.V.........
   71994:	....f.h.......T.
   719a4:	........g.y.....
   719b4:	..+.u...".].....
   719c4:	d.>.............
   719d4:	`.s.q...5.'.....
   719e4:	..k...4.1.Y...v.
   719f4:	........v.1.J.J.
   71a04:	q.........R.#...
   71a14:	3.......4...C...
   71a24:	............t...
   71a34:	..W.".......5...
   71a44:	..D.......W.....
   71a54:	......W.4.V.....
   71a64:	..r.............
   71a74:	....I.5...#...'.
   71a84:	....0.......>...
   71a94:	`...@.....i...$.
   71aa4:	..I...P.$.......
   71ab4:	=...}.q.d.Q.V.P.
   71ac4:	..1.....}.{...o.
   71ad4:	..o.T......."...
   71ae4:	....U.......I...
   71af4:	........?.J.....
   71b04:	..u.i.K.'.4.....
   71b14:	....Z...........
   71b24:	/.o._...w.k...^.
   71b34:	..{.I.H...:...`.
   71b44:	f.............f.
   71b54:	......P.......n.
   71b64:	................
   71b74:	S...~...@.......
   71b84:	......r.........
   71b94:	..........V.[...
   71ba4:	..A...........j.
   71bb4:	..-.$.Q.....Q.s.
   71bc4:	..(...*...&.l...
   71bd4:	..^.s...........
   71be4:	..E.y. ...|.`...
   71bf4:	................
   71c04:	T.......i...K...
   71c14:	O...W.N.....:...
   71c24:	........!.a.+...
   71c34:	L...............
   71c44:	..(.d.u...Q.l.^.
   71c54:	........X.....K.
   71c64:	%...q.C.......K.
   71c74:	....F.)...y.....
   71c84:	..*.:.......z.$.
   71c94:	........4.......
   71ca4:	........_.1.'.D.
   71cb4:	....a...........
   71cc4:	..K...q.....[.h.
   71cd4:	........s.`...t.
   71ce4:	b...(.?.D.......
   71cf4:	S...s.......7.r.
   71d04:	........R...j...
   71d14:	j._.!.a.(...:...
   71d24:	....(.....P.>.|.
   71d34:	a.l.b.v...C.....
   71d44:	....6.C.....?...
   71d54:	......,.....Z...
   71d64:	'...:.....I.l.k.
   71d74:	......3.......O.
   71d84:	......T...H...|.
   71d94:	..q...........G.
   71da4:	i.....~...*...(.
   71db4:	|...............
   71dc4:	W.......`.h...?.
   71dd4:	..$...X.....~...
   71de4:	........9.......
   71df4:	..........b.w.v.
   71e04:	....~...Y.......
   71e14:	..{.s.....;.....
   71e24:	........O...7...
   71e34:	................
   71e44:	........`.....P.
   71e54:	....v.i.W...L. .
   71e64:	c.&...\.W.W... .
   71e74:	............w...
   71e84:	..........W.0...
   71e94:	......B.G.^.....
   71ea4:	)...............
   71eb4:	........:.....@.
   71ec4:	\.........N.3...
   71ed4:	......k...c.....
   71ee4:	+.,...y...O.....
   71ef4:	<.u.....Q.......
   71f04:	s...........i...
   71f14:	..........e...U.
   71f24:	......p.V.[...r.
   71f34:	......2.O...h...
   71f44:	..#.........7.V.
   71f54:	........8.....a.
   71f64:	9.....b...a.%...
   71f74:	0.s.r.*.........
   71f84:	......&...N.....
   71f94:	......O...;. .N.
   71fa4:	..N.....t. .c...
   71fb4:	........(.......
   71fc4:	R.`.s.u...*.....
   71fd4:	?...o.......T...
   71fe4:	..........a.....
   71ff4:	......a.u.....G.
   72004:	..i.......'.q.q.
   72014:	^...........Z...
   72024:	k...[.v.........
   72034:	_.].......g...~.
   72044:	=.S...<.....%...
   72054:	.. .B.....h.).i.
   72064:	....|.;.!...2...
   72074:	............|.T.
   72084:	......(.&.....6.
   72094:	....~.2.*.z.....
   720a4:	....V...........
   720b4:	....:.].X.......
   720c4:	........C.......
   720d4:	n.......).....#.
   720e4:	=.....E.+.^.9...
   720f4:	)...........T...
   72104:	A.v.].s.......4.
   72114:	............&.<.
   72124:	....~.........).
   72134:	O...Z...8.......
   72144:	..1.....;.<.....
   72154:	z.=.....r.A.....
   72164:	(.Q...). ...M...
   72174:	..s.......B...V.
   72184:	}...........B...
   72194:	1.r...h.L.......
   721a4:	....f...........
   721b4:	......Q.........
   721c4:	[.......H...Y...
   721d4:	k.;.......,.U.:.
   721e4:	..5.........3...
   721f4:	......K.i.N...[.
   72204:	{.v...........{.
   72214:	......L.......X.
   72224:	S...............
   72234:	................
   72244:	......1.r...|...
   72254:	................
   72264:	p.Q.a.....A.q.j.
   72274:	P...R.[...*.,...
   72284:	....2.........).
   72294:	*...............
   722a4:	..t...:.........
   722b4:	....V.h.q.v...j.
   722c4:	................
   722d4:	....=...k.`.....
   722e4:	>.X...M.`.....<.
   722f4:	..........t.....
   72304:	..a.!.........:.
   72314:	......2.........
   72324:	....\...........
   72334:	....{.y.b...=...
   72344:	S.....#...K.K...
   72354:	..........3...}.
   72364:	/.v.?...a.5.....
   72374:	..|.2.........u.
   72384:	^.....o.....&.F.
   72394:	s.............d.
   723a4:	D...*.....c.....
   723b4:	....M.v...!.....
   723c4:	3.)....._.l.Q.;.
   723d4:	`.Z...0...O.2.".
   723e4:	1.......a.....j.
   723f4:	............k.z.
   72404:	x.......f.......
   72414:	..#...:.......t.
   72424:	..R.....u.4...i.
   72434:	......g.b...5.g.
   72444:	..O...{...|...H.
   72454:	..........v.E...
   72464:	r.....*.....{...
   72474:	........"....._.
   72484:	M.a.I...G.......
   72494:	G.X.N.7...T.....
   724a4:	....k...J.....>.
   724b4:	N...........?.W.
   724c4:	R...............
	...

000726a4 <standard_DRUMS_samples>:
   726a4:	.v...........>.G
   726b4:	.............1..
   726c4:	........n...(...
   726d4:	................
	...
   726f0:	................
   72700:	................
   72710:	F..D..........h.
   72720:	.1..........n...
   72730:	................
   72740:	................
   72750:	................
   72760:	................
   72770:	.8,F......`.....
   72780:	.1..........n...
   72790:	................
   727a0:	................
   727b0:	................
   727c0:	.....T..........
   727d0:	...F..`.......@.
   727e0:	.F..........n...
   727f0:	n...............
   72800:	................
   72810:	................
   72820:	.....r..........
   72830:	G./F.. .........
   72840:	.F..........n...
   72850:	n...............
   72860:	................
   72870:	................
   72880:	.....$..........
   72890:	xw.G............
   728a0:	2...........n...
   728b0:	n...............
   728c0:	................
   728d0:	................
   728e0:	................
   728f0:	n.'I...........z
   72900:	S;..........C...
   72910:	n...............
   72920:	................
   72930:	................
   72940:	.....b..........
   72950:	z.LF......`.....
   72960:	S;..........n...
   72970:	................
   72980:	................
   72990:	................
   729a0:	.....N..........
   729b0:	...H............
   729c0:	S;..........n...
   729d0:	.?..............
   729e0:	................
   729f0:	................
   72a00:	................
   72a10:	..}F.. .........
   72a20:	,...........n...
   72a30:	n...T...........
   72a40:	................
   72a50:	................
   72a60:	.....l..........
   72a70:	.n.F......`.....
   72a80:	.6..........n...
   72a90:	................
   72aa0:	................
   72ab0:	................
   72ac0:	................
   72ad0:	...E..0.........
   72ae0:	|...........n...
   72af0:	. ..j"..........
   72b00:	................
   72b10:	................
   72b20:	................
   72b30:	...E..0.........
   72b40:	.F..........n...
   72b50:	....]...........
   72b60:	................
   72b70:	................
   72b80:	................
   72b90:	...D..........X<
   72ba0:	^v..........n...
   72bb0:	.1...)..........
   72bc0:	................
   72bd0:	................
   72be0:	.....(..........
   72bf0:	wc.D...........[
   72c00:	|...........n...
   72c10:	.L...)..........
   72c20:	................
   72c30:	................
   72c40:	................
   72c50:	Z..D..........X<
   72c60:	^v..........n...
   72c70:	.+...)..........
   72c80:	................
   72c90:	................
   72ca0:	................
   72cb0:	.4"D..p...`....V
   72cc0:	............n...
   72cd0:	.C..z9..........
   72ce0:	................
   72cf0:	................
   72d00:	................
   72d10:	Cw.C......x...47
   72d20:	.k..........n...
   72d30:	.C...,..........
   72d40:	................
   72d50:	................
   72d60:	................
   72d70:	Gn.E.. .......@Y
   72d80:	................
   72d90:	.+..yS..........
   72da0:	................
   72db0:	................
   72dc0:	................
   72dd0:	..@D..p...`....V
   72de0:	.Z..........n...
   72df0:	.8.../..........
   72e00:	................
   72e10:	................
   72e20:	................
   72e30:	.hxE......`.....
   72e40:	................
   72e50:	....yS..........
   72e60:	................
   72e70:	................
   72e80:	................
   72e90:	Cw.C..p...`....V
   72ea0:	............n...
   72eb0:	.8.../..........
   72ec0:	................
   72ed0:	................
   72ee0:	................
   72ef0:	...E............
   72f00:	............n...
   72f10:	.8..j"..........
   72f20:	................
   72f30:	................
   72f40:	.....R..........
   72f50:	..3D...........[
   72f60:	M&..........n...
   72f70:	.;...2..........
   72f80:	................
   72f90:	................
   72fa0:	.....8..........
   72fb0:	...D.. .........
   72fc0:	............n...
   72fd0:	................
   72fe0:	................
   72ff0:	................
   73000:	................
   73010:	N .D......`.....
   73020:	............n...
   73030:	................
   73040:	................
   73050:	................
   73060:	.....N..........
   73070:	.EfD............
   73080:	............n...
   73090:	................
   730a0:	................
   730b0:	................
   730c0:	................
   730d0:	.R.D..@.........
   730e0:	............n...
   730f0:	................
   73100:	................
   73110:	................
   73120:	................
   73130:	i..C......p...@.
   73140:	............n...
   73150:	....?...........
   73160:	................
   73170:	................
   73180:	................
   73190:	.D.C......p...@.
   731a0:	............n...
   731b0:	................
   731c0:	................
   731d0:	................
   731e0:	................
   731f0:	%.jD..P... .....
   73200:	............n...
   73210:	................
   73220:	................
   73230:	................
   73240:	................
   73250:	$..D..@.........
   73260:	.Z..........n...
   73270:	t"..^...........
   73280:	................
   73290:	................
   732a0:	.....^..........
   732b0:	X..D...........E
   732c0:	.)..............
   732d0:	n...^...........
   732e0:	................
   732f0:	................
   73300:	................
   73310:	...D..`...0.....
   73320:	: ..........n...
   73330:	.+..............
   73340:	................
   73350:	................
   73360:	................
   73370:	...C......`.....
   73380:	.Z..........n...
   73390:	................
   733a0:	................
   733b0:	................
   733c0:	................
   733d0:	U.KD...... ...`.
   733e0:	|...........n...
   733f0:	=...t...........
   73400:	................
   73410:	................
   73420:	.....h..........
   73430:	ig.C..@....... .
   73440:	2...........n...
   73450:	....^...........
   73460:	................
   73470:	................
   73480:	................
   73490:	/..D.. .........
   734a0:	^v..........n...
   734b0:	....9...........
   734c0:	................
   734d0:	................
   734e0:	.....<..........
   734f0:	.67D..0........l
   73500:	............n...
   73510:	.%..............
   73520:	................
   73530:	................
   73540:	................
   73550:	...D..P... .....
   73560:	............n...
   73570:	=...S...........
   73580:	................
   73590:	................
   735a0:	................
   735b0:	.Z.C.. .......@Y
   735c0:	............n...
   735d0:	....0...........
   735e0:	................
   735f0:	................
   73600:	................
   73610:	...C......x...47
   73620:	........t...n...
   73630:	................
   73640:	................
   73650:	................
   73660:	.....z..........
   73670:	.[.C..@... ...p%
   73680:	............n...
   73690:	.+..............
   736a0:	................
   736b0:	................
   736c0:	.....n..........
   736d0:	..=D.. .........
   736e0:	............n...
   736f0:	....t...........
   73700:	................
   73710:	................
   73720:	.....P..........
   73730:	...G...........z
   73740:	............n...
   73750:	....t...........
   73760:	................
   73770:	................
   73780:	.....l..........
   73790:	.[.C.. .........
   737a0:	............n...
   737b0:	t"..............
   737c0:	................
   737d0:	................
   737e0:	.....N..........
   737f0:	#..B..........X<
   73800:	M&..........n...
   73810:	.?..+'..........
   73820:	................
   73830:	................
   73840:	................
   73850:	..CB......p...@.
   73860:	M&..........n...
   73870:	....+'...yc~....
   73880:	................
   73890:	................
   738a0:	....

000738a4 <sample_24_standard_DRUMS_mbongotone>:
   738a4:	....Z.Q.........
   738b4:	..P...0.5.|...H.
   738c4:	R.,...-........)
   738d4:	..]..<I(.=.JB;.P
   738e4:	"SbDcG#F.(C,..".
   738f4:	......k.T.......
   73904:	?...L.........F.
   73914:	......T...;.....
   73924:	...../.=.E!\2`.f
   73934:	Ls$nVkLn.g.f.X.Q
   73944:	.H.;g5-#n.I...Q.
   73954:	..\.*...........
   73964:	....X.*...V...b.
   73974:	..g.v...=...c.x.
   73984:	.... .....[...>.
   73994:	L.(.2.0.g.1'./.6
   739a4:	.>+B.G.J.I.E%CW>
   739b4:	.?.;.3.,;(=.....
   739c4:	..D...6.z...G...
   739d4:	..(.....T.....A.
   739e4:	............e..$
   739f4:	Y5RAbJDW.^.a.h.g
   73a04:	.k.g.`'_"T.E8<~,
   73a14:	....*...H.....:.
   73a24:	................
   73a34:	..l.........{...
   73a44:	..............Q.
   73a54:	{.&.....f.?...t.
   73a64:	....A...<...^...
   73a74:	..'...........n.
   73a84:	......Q.....m...
   73a94:	...._.......G...
   73aa4:	l...~.....u.....
   73ab4:	)...............
   73ac4:	f...>...K&.$[$v%
   73ad4:	 ".!g...........
   73ae4:	........-.i...(.
   73af4:	X.......E.b.....
   73b04:	g.......v...w.[.
   73b14:	....r.........i.
   73b24:	....V.....@...l.
   73b34:	)...Q.........E.
   73b44:	......T...a...B.
   73b54:	....-.U...x.k.#.
   73b64:	0...!.........Z.
   73b74:	..F...l.a.......
   73b84:	Q.c.....G.......
   73b94:	M.3.o.$.y...5.J.
   73ba4:	..I.....G.......
   73bb4:	f...G.......B.d.
   73bc4:	......I.........
   73bd4:	......).n.G...Y.
   73be4:	................
   73bf4:	................
   73c04:	..............Z.
   73c14:	H.......o...K.^.
   73c24:	........u. .z.R.
   73c34:	..l.(.y...../...
   73c44:	..l.v.Z.W.8.....
   73c54:	#.4.............
   73c64:	..o...).j.......
   73c74:	'.x...R...).\.f.
   73c84:	..j.R.......F.u.
   73c94:	......h...x...).
   73ca4:	....Z...........
   73cb4:	..u...3.....q.3.
   73cc4:	..Q.>...........
   73cd4:	*.............A.
   73ce4:	q.............|.
   73cf4:	....E...Q.......
   73d04:	........i...S...
   73d14:	........t.......
   73d24:	z...X...y.....c.
   73d34:	v.......;.......
   73d44:	..}.....s.L.....
   73d54:	..~...1.........
   73d64:	................
   73d74:	T.^.]...3.......
   73d84:	......~.....Q.3.
   73d94:	..|.....-.!.....
   73da4:	M.t.../.J.h.....
   73db4:	P...4.......(...
   73dc4:	s.e."...:... .K.
   73dd4:	............@...
   73de4:	r.Q...........%.
   73df4:	-...3.........`.
   73e04:	Q.......G.....=.
   73e14:	%.....).....i.0.
   73e24:	;.....V.....F...
   73e34:	F.E.@...~./.:.r.
   73e44:	..e.........>...
   73e54:	v.............P.
   73e64:	........W...\...
   73e74:	........'.>...^.
   73e84:	W...K.....0.....
   73e94:	/.5.........$...
   73ea4:	s.1.Z.p.i.......
   73eb4:	r.........b.....
   73ec4:	q.......#.......
   73ed4:	'.....3.......B.
   73ee4:	..m.@...h.....L.
   73ef4:	..............E.
   73f04:	..=.....K.r.:...
   73f14:	....r...........
   73f24:	.._...........^.
   73f34:	G.Z.......?.D...
   73f44:	..G...L._.......
   73f54:	y.........1.&...
   73f64:	w.$... .8.f...q.
   73f74:	....a.i.....'...
   73f84:	......s...j...f.
   73f94:	}.........`.....
   73fa4:	..........Q.....
   73fb4:	......x. .'.-...
   73fc4:	....g.d...Z.....
   73fd4:	....m...V...e.).
   73fe4:	7.z.............
   73ff4:	H.....O...".....
   74004:	..N...Q...k.....
   74014:	7.M.).....H.....
   74024:	:...............
   74034:	T.(...x.6...E.].
   74044:	..l.u...........
   74054:	].....T.....b...
   74064:	2.....U.........
   74074:	B.7...........,.
   74084:	#.............;.
   74094:	4...j.......7...
   740a4:	......9.......U.
   740b4:	..O.1...5.......
   740c4:	....8.f.Y.......
   740d4:	..........@.b.F.
   740e4:	......#...[.>...
   740f4:	=...............
   74104:	s.....w.F.I...Y.
   74114:	..............".
   74124:	..1.....,.!.....
   74134:	%.W.....$.A.....
   74144:	 ...........M.q.
   74154:	I.....K.T.......
   74164:	E...X.....:. ...
   74174:	..m.i.B.....W...
   74184:	........3.......
   74194:	......7.........
   741a4:	....n.........h.
   741b4:	..;._...?.P...e.
   741c4:	w.......[.....U.
   741d4:	{.....c.......E.
   741e4:	......^.....V.1.
   741f4:	..........6.....
   74204:	&...............
   74214:	8.....&...6.;.1.
   74224:	................
   74234:	....Y.,.....w.N.
   74244:	l.....T.........
   74254:	q.y.........4...
   74264:	B...`.>.G.g.x.g.
   74274:	....T...f.....7.
   74284:	................
   74294:	0.Z.....H.....$.
   742a4:	..............A.
   742b4:	................
   742c4:	I...k.....L.H...
   742d4:	..K...j...%...$.
   742e4:	..=.....v.g...`.
   742f4:	................
   74304:	..E.....<.}...).
   74314:	..-.....&.J._...
   74324:	......v.K.......
   74334:	..........f...#.
   74344:	$._...A.......K.
   74354:	5./.%.....l. ...
   74364:	u.4.............
   74374:	i.s.p.j... .b...
   74384:	..n.....6.4.)...
   74394:	......[...X.....
   743a4:	[.X.....W.......
   743b4:	....z...........
   743c4:	................
   743d4:	..H.P.K.........
   743e4:	....q...........
   743f4:	..............9.
   74404:	#...j._.......L.
   74414:	>.....B.....[.`.
   74424:	........|.......
   74434:	............;.f.
   74444:	h.......8.F.^...
   74454:	........3.L.....
   74464:	....W.......2.[.
   74474:	4.K.....^.k...T.
   74484:	$.......u.......
   74494:	............[.Q.
   744a4:	w.........K.....
   744b4:	........`.s.W...
   744c4:	....D.......w.y.
   744d4:	0.....J._.<.....
   744e4:	9.....).....N...
   744f4:	................
   74504:	............i...
   74514:	......$.....>...
   74524:	..Q.t.R.u.j.....
   74534:	x.......q...4...
   74544:	..V. ...........
   74554:	................
   74564:	......8.[.k.....
   74574:	........a.....C.
   74584:	n...........\.8.
   74594:	!...r.w.F.=.....
   745a4:	............s.}.
   745b4:	....c...........
   745c4:	....~...........
   745d4:	..D.V.......}...
   745e4:	..F.{...........
   745f4:	........L.......
   74604:	....E.c.........
   74614:	..z.A.L.......).
   74624:	&.....1...0.....
   74634:	..'.2.......8.m.
   74644:	................
   74654:	................
   74664:	................
   74674:	a.u.n.D.J.......
   74684:	;.8.............
   74694:	........>.D.x...
   746a4:	......L.h.f.....
   746b4:	............O.+.
   746c4:	V.x.7.H......._.
   746d4:	........!.......
   746e4:	Z._.).+.....t.].
   746f4:	..*.>.......x...
   74704:	..=.L.:.....{...
   74714:	Q.h.\...+.......
   74724:	......../.-.....
   74734:	..P.1...........
   74744:	................
   74754:	`.z.............
   74764:	....2...K.L.c.s.
   74774:	p...............
   74784:	....!.).........
   74794:	..Q.........q.Z.
   747a4:	9.J.6...).....I.
   747b4:	Z.s.............
   747c4:	.......... .I.K.
   747d4:	v...z.....|.....
   747e4:	h...B.;.Z.......
   747f4:	....r.;...Q.6.<.
   74804:	i...x...........
   74814:	..=.[.l.......}.
   74824:	g.>.$...........
   74834:	................
   74844:	................
   74854:	................
   74864:	 ...G.F.".c. ./.
   74874:	3.......".6.....
   74884:	................
   74894:	..2...8._.J.s.V.
   748a4:	L.}.B.=.D.#.....
   748b4:	......h.q.I.`.`.
   748c4:	X.............,.
   748d4:	....$... .B...=.
   748e4:	=...P.6.=.K.F.].
   748f4:	F.S.c.q.u.m.g.[.
   74904:	................
   74914:	Q.k.h.(.|.g.E...
   74924:	u.........N.N.|.
   74934:	Z._.z.<.G.S...-.
   74944:	6...).....=.....
   74954:	P.8.G.g.Z._.d.2.
   74964:	)...............
   74974:	....}...}.......
   74984:	............4.Q.
   74994:	T...;.1.).=...$.
   749a4:	2...-.%.$.O.D.%.
   749b4:	P.Y.L.|.^.N.b.9.
   749c4:	3.......n.^.P.4.
   749d4:	9.*.4.^.s.......
   749e4:	........4.B._.d.
   749f4:	p...z._.m.U.].N.
   74a04:	<.Z.8.B.O.F.=.8.
   74a14:	1...'...........
   74a24:	..........i.T.x.
   74a34:	S.g...x.........
   74a44:	....$...J.L.P.L.
   74a54:	L.=.,.).........
   74a64:	......3...;.<.6.
   74a74:	I.3...%.........
   74a84:	............}...
   74a94:	h.}.............
   74aa4:	..........).4.K.
   74ab4:	[.<.d.L...G./...
   74ac4:	G...<.f./.i._.I.
   74ad4:	g.*.$.).........
   74ae4:	........k.s.`.S.
   74af4:	................
   74b04:	....*.*...9.1.G.
   74b14:	K.,.G.B. .(.....
   74b24:	"...$.'...3.I...
   74b34:	@.8.../.........
   74b44:	................
   74b54:	................
   74b64:	................
   74b74:	................
   74b84:	........,.7.6.F.
   74b94:	@.;.4.7.6.......
   74ba4:	................
   74bb4:	................
   74bc4:	................
   74bd4:	........ .'...,.
   74be4:	@.J.1.A.D.9.Q...
   74bf4:	..6.............
   74c04:	................
   74c14:	................
   74c24:	........ .'.....
   74c34:	................
   74c44:	..........3.....
   74c54:	................
   74c64:	................
   74c74:	............-...
   74c84:	................
   74c94:	................
   74ca4:	................
   74cb4:	................
   74cc4:	................
   74cd4:	..../.6...#.).'.
   74ce4:	................
   74cf4:	................
   74d04:	................
   74d14:	................
   74d24:	..............1.
   74d34:	..).=.).>.....".
   74d44:	................
   74d54:	................
   74d64:	................
   74d74:	................
   74d84:	........*.6.b._.
   74d94:	U.i.q.n.c.K.F.@.
   74da4:	6...............
   74db4:	................
   74dc4:	................
   74dd4:	................
   74de4:	................
	...

00074ea4 <sample_46_standard_DRUMS_floortombrite>:
   74ea4:	.....Y.i.B.SUTz;
   74eb4:	.X..Yr..`.*CF.+.
   74ec4:	....L.[...L.f.L.
   74ed4:	....g.9...k.L...
   74ee4:	4...5.t!....^..(
   74ef4:	s..6...:\..l.6..
   74f04:	.]B35E.K./h..?0T
   74f14:	.C..*n.?...:.6..
   74f24:	......E>..;..2..
   74f34:	... ;N.....M.1%.
   74f44:	.a..Z.6Q......x 
   74f54:	.&..6..W......{.
   74f64:	....p.I...L.....
   74f74:	N.K.{...]...M...
   74f84:	9...........<...
   74f94:	..0.f...... ...5
   74fa4:	((k [..4.g...2.?
   74fb4:	.D.,.'.=.C.&?=w.
   74fc4:	k.ZN..61.......)
   74fd4:	&$.......$...8..
   74fe4:	+%.>............
   74ff4:	n.U......._.....
   75004:	........G.T.....
   75014:	......6...e...4.
   75024:	-.L...p.....d...
   75034:	d.`...u...|./...
   75044:	1.......`..'/.{.
   75054:	.....@.(h6.04CA%
   75064:	.2.Y>"0F.5.=>...
   75074:	.1..O/L7z.. U2..
   75084:	.+..2....;.....1
   75094:	.$......p.U.....
   750a4:	......f...].....
   750b4:	..q...v.....`. .
   750c4:	G.L.W.+.......Y.
   750d4:	F.g.T.R...^...w.
   750e4:	..j...O.).....C.
   750f4:	..a...........C.
   75104:	y.....T.F..7r.['
   75114:	.%.M.8.-.\./.GY>
   75124:	.C6?.0XG.&.?d%.4
   75134:	_..*./.6....O...
   75144:	:..8..3.....F#Y.
   75154:	......<.....W...
   75164:	..R.....,.......
   75174:	....v...X...m...
   75184:	\.!.~.....W.l.>.
   75194:	....q...q.C.c...
   751a4:	....T.....3....9
   751b4:	y.~.,...3....!..
   751c4:	.0l......'.../.H
   751d4:	=..:hF.2.;qDy[.8
   751e4:	_$(M.Pl-.$.@{-.(
   751f4:	TL...(.%C&.....)
   75204:	..4.............
   75214:	f.P...R...g...4.
   75224:	..........N.....
   75234:	r...............
   75244:	.. .G.......7...
   75254:	}.........O.<...
   75264:	..-.y...%...@...
   75274:	..."..$...w....#
   75284:	.&."c4.F$:.2.0fC
   75294:	.2.H.G.,.>V17..A
   752a4:	.X.#.&{F.'...E.0
   752b4:	...14)..O"......
   752c4:	R.U.5...).....4.
   752d4:	4...w.".........
   752e4:	..z.....I.4.7.e.
   752f4:	................
   75304:	A.e.v...)...S...
   75314:	f.......c...d.?.
   75324:	....K...........
   75334:	.../.....-. z.F8
   75344:	.B.).@.A58.J.AoJ
   75354:	.G.A.<.9.4 <"6h$
   75364:	|-G2..z$)..)|...
   75374:	e...5.,.......{.
   75384:	..=.<.V.C.......
   75394:	 .u.....N.......
   753a4:	..+.....2...;...
   753b4:	..W.1...........
   753c4:	P.[.X.....z.N.0.
   753d4:	R...............
   753e4:	........~.V.....
   753f4:	(...i...;....9..
   75404:	[.o&.2./@6.3IC.H
   75414:	|4.Ql8.;&GG<.6>1
   75424:	.0.*.4.0.4X(.&.)
   75434:	..Q.....z.......
   75444:	'........ '...q.
   75454:	..G.>.L.`.......
   75464:	....?.^.........
   75474:	..L...8.......S.
   75484:	5.T.....+.0.....
   75494:	`.........&...C.
   754a4:	..............U.
   754b4:	..F.5.z...V.....
   754c4:	..p.....o0o...V,
   754d4:	s+.-.5.1h;.F.6.@
   754e4:	.>$5M3.F::...0.4
   754f4:	.*.+.1.*>&.'% ..
   75504:	%.m.......s.....
   75514:	j.........x.^.B.
   75524:	c.c.*...........
   75534:	3....._.e...;...
   75544:	....J.'.'.h...%.
   75554:	*...H.L.V...C.-.
   75564:	..e...j.........
   75574:	....;...........
   75584:	......].W.4.1...
   75594:	..&1....N&.'M.D.
   755a4:	."!!./. ..w .)R!
   755b4:	.%.*.$k.a,.1.&V*
   755c4:	.&R%./.).#.!..J"
   755d4:	......Q.-.G.e...
   755e4:	....[.U.........
   755f4:	-...)...>.J. . .
   75604:	<.........O...`.
   75614:	c.Y.V.[.6.>...G.
   75624:	}.\.....p.......
   75634:	D...2.4...*.....
   75644:	....y...G.......
   75654:	..j.........H...
   75664:	s.8.T.. .....(.%
   75674:	.#.*.$.).-.+.*.2
   75684:	_%...&b+.'.$..J.
   75694:	.*.....!"$4.D...
   756a4:	.(.'p....#...(.!
   756b4:	|!Q J.........=.
   756c4:	..?.N.....B.y...
   756d4:	......R.......8.
   756e4:	<...].:.....n...
   756f4:	................
   75704:	:.Q.v.}.......[.
   75714:	~.X.f.5...i.c...
   75724:	l.*.#.3.'.....}.
   75734:	V.......+.......
   75744:	.'.)Y)p,.(z0g,`/
   75754:	.-.-...+E,.%F+..
   75764:	...#.(.#....;%4.
   75774:	).. .$/.B.0%....
   75784:	........F.....W.
   75794:	....(.i.F.....-.
   757a4:	?...4...A.....;.
   757b4:	..>.......f.D.W.
   757c4:	..M...b....._.M.
   757d4:	............6...
   757e4:	 .......H.......
   757f4:	..:.....9...D.`.
   75804:	!.....x...q.....
   75814:	!...<.*...v .%.(
   75824:	.+.../b:#4.3./"8
   75834:	.;.5.3|5.9.,U2r.
   75844:	Y/.*.)7)(%.$. 8!
   75854:	."W.!.c...).K.t.
   75864:	................
   75874:	B...............
   75884:	L...........k...
   75894:	c.&.3.q.....n...
   758a4:	....x.].D.l.z...
   758b4:	i.......8.....J.
   758c4:	..'.......9.l...
   758d4:	..}...W.E...l...
   758e4:	3.*.....n.x"."]"
   758f4:	."..~*.#.,.3{*.*
   75904:	d4.7.0Y/.1.6.>.8
   75914:	b:.?X:.5.4[0"1./
   75924:	m-.,E&.%.! ". &.
   75934:	................
   75944:	....)...".....O.
   75954:	......{...<.B...
   75964:	....0.4.<...K...
   75974:	p.......Y.].K.?.
   75984:	..E...!.`...L.P.
   75994:	B.....{..._.[.:.
   759a4:	..[.n..._...+...
   759b4:	d.......U.X.....
   759c4:	h.4..&.(B+s/.1.3
   759d4:	.5{/.0s1.0.2.3.4
   759e4:	.5Q0c2.4.4.5.9U2
   759f4:	.1.5.2./.1.3./<*
   75a04:	N)D'.#..........
   75a14:	5.>.%.?.-...r.Q.
   75a24:	........,.......
   75a34:	..$...........G.
   75a44:	..<.5.a...r.....
   75a54:	E.....G.....$.i.
   75a64:	..d.8.].B..... .
   75a74:	......F...X.....
   75a84:	)...'.A.6.V...~.
   75a94:	..........D!.$."
   75aa4:	.&.).1n3.6.8.9!=
   75ab4:	V<4=\>h<S:h7i;.<
   75ac4:	.5./u2./.)&(.,f'
   75ad4:	.$.). =.... ....
   75ae4:	..M.|...b..... .
   75af4:	....>.....J.....
   75b04:	......x.o.^.J...
   75b14:	..&.e...........
   75b24:	l.......G.....q.
   75b34:	................
   75b44:	D...............
   75b54:	z. .)...+.X...!.
   75b64:	......r.v.......
   75b74:	....)..".%L%.&H+
   75b84:	.0.0c..0.3.8*9.8
   75b94:	.:.8.;.;.<A<.:.:
   75ba4:	.7l2.1..l-u)b'. 
   75bb4:	.!.%\...{...h...
   75bc4:	../.......T.]./.
   75bd4:	}...x...c./.....
   75be4:	..........%...^.
   75bf4:	2.N...8.....d...
   75c04:	9.d.{.....(.6...
   75c14:	..p.i...........
   75c24:	b.3...r...9.....
   75c34:	....S.}.......:.
   75c44:	..L.2...:.G...9.
   75c54:	D.Y!k%.&.%.*;-.-
   75c64:	A.3/./30.4.7.9n:
   75c74:	.:.7.8.6.436.9.7
   75c84:	./.-.0././#-x'@$
   75c94:	.$..S.....e...\.
   75ca4:	G.[.....v...C...
   75cb4:	..8.X.....6...q.
   75cc4:	..K.......X.....
   75cd4:	p.......U.......
   75ce4:	..%.)...J.......
   75cf4:	..F...H...I.....
   75d04:	'.....R.........
   75d14:	y...9...........
   75d24:	......".........
   75d34:	...#.%.*.,./>0.1
   75d44:	.2.2.3.5.3.4d5z3
   75d54:	r6.6.0>0.3.2.1u2
   75d64:	.,...1...+.+.'.%
   75d74:	.$.$.#....q.....
   75d84:	......+.I.......
   75d94:	......T...,.....
   75da4:	|...g...m.......
   75db4:	....f...K.......
   75dc4:	S.~...b.d.......
   75dd4:	..I.G.........g.
   75de4:	%.....g...0...G.
   75df4:	....I.:.........
   75e04:	..,...}.+.q.....
   75e14:	d!X&:(.*4,&.00.1
   75e24:	.1.3h8M8.5.5.5g7
   75e34:	G7C6`4p3.6.3n16-
   75e44:	k+.-.*>%.#."....
   75e54:	..|.....L.$.....
   75e64:	..".1...+.`...[.
   75e74:	....o...#.{. ...
   75e84:	..+.4...9.G.....
   75e94:	X........._.....
   75ea4:	c.I...........A.
   75eb4:	..Z.t...a.V...j.
   75ec4:	..6.............
   75ed4:	....(.x..._...h.
   75ee4:	......`.........
   75ef4:	.!<#K%.&.).,.-[/
   75f04:	.0\3.5.5.4.7o7.8
   75f14:	.:.:.676_4`2.3.4
   75f24:	.2.,.*>(.'.'.$. 
   75f34:	..f...........M.
   75f44:	..............&.
   75f54:	{.I.............
   75f64:	&...X...5.......
   75f74:	_.;.....}.d.....
   75f84:	..-.....\.M.....
   75f94:	*.".........j.@.
   75fa4:	..?...(...m.G...
   75fb4:	................
   75fc4:	g...0.;.........
   75fd4:	... ."A&.).,.,..
   75fe4:	.-.-x0l1.3.6.7g8
   75ff4:	.8.6.7+9.:.8.6.4
   76004:	|4D4.0..1,.).(.(
   76014:	.$/.......'.....
   76024:	b.w...6.*.Y.=.v.
   76034:	i...I.....(.....
   76044:	/.........R.E...
   76054:	`.5.=.....~...p.
   76064:	....=.....!.....
   76074:	..;.........n...
   76084:	........l.j.....
   76094:	..-.>...?.!.....
   760a4:	..t.....D.s.*...
   760b4:	... .".%v'.).+P,
   760c4:	=/.1.1.0I1.1.1c2
   760d4:	.2.2.214.3.2.0i/
   760e4:	J/h0.1.0.-.-.-h.
   760f4:	Y.S,`).&.#.!. 2.
   76104:	0.|.e.....).....
   76114:	P.h.T.....5.....
   76124:	........O.>...r.
   76134:	....+...$...7.w.
   76144:	....'...s.Z.....
   76154:	1.....).....R.\.
   76164:	..;...\.....y...
   76174:	.... ...:.x.V...
   76184:	..../...5.M.+...
   76194:	..^...q....!.$.(
   761a4:	.(.*1,.-...0.113
   761b4:	.4.5n535.4.5.5.5
   761c4:	y4.2L2.2:3.1./Y+
   761d4:	S*.(.'.%}#."....
   761e4:	......X...O.T...
   761f4:	{.[.y.m.........
   76204:	......0.w...;.w.
   76214:	6.....H.U.......
   76224:	....\...l..... .
   76234:	T...........$...
   76244:	..l...w...$...~.
   76254:	l...X.L.......L.
   76264:	v.....|.....b...
   76274:	....).K...j.... 
   76284:	z$q&.(|*.,s/.1.2
   76294:	i3.4.4.4)6F7p8.8
   762a4:	<8.7u7 6.4$3.0J/
   762b4:	L-.+.)&(_%U"~.h.
   762c4:	........"...K...
   762d4:	......a...3...".
   762e4:	..S...&.......}.
   762f4:	..r.....&.k.....
   76304:	..........s.C...
   76314:	........x.......
   76324:	f.-.....,...y...
   76334:	@...1.E.Y...@.F.
   76344:	..........p.....
   76354:	m...:.1.....\...
   76364:	u.... ."?&.(Z).*
   76374:	.-|. /.0.2.4n7.8
   76384:	.8.:m:.:.:S:O857
   76394:	.5.3.1...,.+^+.*
   763a4:	.'.$.#+!..i.E...
   763b4:	....z.$.......'.
   763c4:	..`.........H...
   763d4:	Q...I...+.3...v.
   763e4:	t.....^.M.a.]...
   763f4:	..c.$.....<.5.h.
   76404:	..............t.
   76414:	..c...n.........
   76424:	..?.O.3.....8.".
   76434:	......F.+.A.....
   76444:	..7.$.F.#.Q!.$I'
   76454:	.+.-t/.0.0.1.2.4
   76464:	.6.6.6.7.6=6.6d6
   76474:	.5.5?3s1.0....(-
   76484:	?,.+.*.).'d%.". 
   76494:	..|.l.....d...X.
   764a4:	\.........x.....
   764b4:	....F...Z.$.A...
   764c4:	1.....;.....I...
   764d4:	T.5.....X.T...e.
   764e4:	......L.........
   764f4:	#...b.".5.`.M...
   76504:	g...........d...
   76514:	..&.......E.....
   76524:	......o.8.f.Y.~"
   76534:	{%g'.(.*(,-/.1.1
   76544:	.1>2t2.2.2.3.3<4
   76554:	.4(3Q2.1.1=1.0./
   76564:	.....-.,),.+.).(
   76574:	.&.$F"......M.6.
   76584:	..d.D...T.J...n.
   76594:	....A...f...f.T.
   765a4:	0...0.....<.....
   765b4:	..J.....K.....].
   765c4:	=...F...../.....
   765d4:	u.....B.......G.
   765e4:	A...E.....l.....
   765f4:	l.....I...b.....
   76604:	 ...3.s.V.......
   76614:	K....._.."`%3'.)
   76624:	.+...0.2.3.5.7<8
   76634:	.8.8.7.6x6.5.5U4
   76644:	?4.3.2.1./...,.*
   76654:	.(.&.$.#$". ..~.
   76664:	1.I.............
   76674:	......s.......J.
   76684:	".w.&...].N.u.E.
   76694:	v.D.6...e.......
   766a4:	..7.......;.....
   766b4:	....8.x.......(.
   766c4:	....l......."...
   766d4:	..,...V.I.....i.
   766e4:	*.N.p.........].
   766f4:	$.k.......>.....
   76704:	.!.$.'d(.).*.,t/
   76714:	.1.3.6.7.8.9$:i:
   76724:	.;.;.:.9.8.5.4.4
   76734:	`3L2.0...-.*.(.&
   76744:	Z$.!......L.....
   76754:	..r.....b...9.+.
   76764:	..,.[...+.....%.
   76774:	@.........z.....
   76784:	..P...S.........
   76794:	m.......l...)...
   767a4:	B...............
   767b4:	....O...@.F.....
   767c4:	r.[.A.$.V.J.T.0.
   767d4:	....|.....a.....
   767e4:	M.5...a...J".$9&
   767f4:	)(.).*?,3../.1.3
   76804:	.5.6'7.7.7{8.8.8
   76814:	.8p8.8.7:6.4.2.0
   76824:	.. -l+l)m'z%.#.!
   76834:	..F.........]...
   76844:	....r...G.<...f.
   76854:	..S.e.N.....A...
   76864:	..8...k.:.3.y.R.
   76874:	a.t.....x.?.I...
   76884:	..............9.
   76894:	................
   768a4:	......\.........
   768b4:	..........Y...e.
   768c4:	......[.......$ 
   768d4:	.!.#B%('.).*Q,%.
   768e4:	./.1.2.3$4*4.3.4
   768f4:	#4.4]4.4.4v4.4n3
   76904:	.2.2h05/~-R,.+.)
   76914:	.(]''&h$S". ....
   76924:	..i.\.....8.x...
   76934:	......,...|.9...
   76944:	......Q.6.y...t.
   76954:	......f.~...=.*.
   76964:	E...#.&.}.......
   76974:	......{.......".
   76984:	........%...7...
   76994:	x.#.+.......4.P.
   769a4:	v.....(...x.....
   769b4:	......i...s t#I&
   769c4:	.(&+e--/c1E3z4.5
   769d4:	.6.7Y9.:?:.9.8.7
   769e4:	.6.5|4J3.1.1./..
   769f4:	.,^+.)6(.&.$.#.!
   76a04:	q ..............
   76a14:	O.....Z.".......
   76a24:	....}.....2.{...
   76a34:	+...s...v...K...
   76a44:	].p.......a.U.L.
   76a54:	J...}.......>...
   76a64:	Z.?.}._.x."...j.
   76a74:	................
   76a84:	$...-...........
   76a94:	>.......W.......
   76aa4:	b...r..!y#.%P(.*
   76ab4:	6-*0.2T4.5'7.7c8
   76ac4:	.9.9!9&9.9.8.8.8
   76ad4:	'8.7.6|5.3.140..
   76ae4:	.+O).&[$."U...K.
   76af4:	..........w...i.
   76b04:	..Q.v...=.....-.
   76b14:	......W.;...7.-.
   76b24:	7.......).......
   76b34:	H............._.
   76b44:	....6.......%.n.
   76b54:	................
   76b64:	......z...|.;...
   76b74:	..........O.n...
   76b84:	........A.......
   76b94:	..[ .".%p(.*u-./
   76ba4:	.1\2.3.4k506q6.6
   76bb4:	.7.7i8.8.8.8c8r7
   76bc4:	u6.4.3x1./.-s+3)
   76bd4:	O'.%.#.!}.....?.
   76be4:	>...............
   76bf4:	^.H.$.....3.....
   76c04:	......j.*.......
   76c14:	..l...A.V.......
   76c24:	<.c.^.....L.....
   76c34:	................
   76c44:	....o...........
   76c54:	............A...
   76c64:	].....0.....+...
   76c74:	..........x E#.%
   76c84:	+(/*.+X-.../.0{1
   76c94:	.1.2x2k2.2.3.3h4
   76ca4:	.4.4.4.4.3.2.1.0
   76cb4:	./~.,-.+.).(f&b$
   76cc4:	9"< ..........W.
   76cd4:	..H.\.;.A.i.u...
   76ce4:	.... .....b.K...
   76cf4:	..?.|...t.......
   76d04:	S.c.....a.3...(.
   76d14:	....=. .R.......
   76d24:	4...-.@.....(...
   76d34:	..^.........../.
   76d44:	w.1.7.L.j.......
   76d54:	S...<.l.....j.C.
   76d64:	..x...< ."_%.'3*
   76d74:	a,j.S0.2.3^5.6W7
   76d84:	u7.7.7(7.6r6.5.5
   76d94:	H4?3.1.0}/...,.+
   76da4:	.)7(.&.%>#!!%...
   76db4:	............`.x.
   76dc4:	@.!.....y...g...
   76dd4:	....].....d.....
   76de4:	..5.......6.....
   76df4:	D.}...,..... .g.
   76e04:	..t.,."...|.k...
   76e14:	..$...L.%.......
   76e24:	....".....I.E...
   76e34:	....-.......2...
   76e44:	....8.K.1.......
   76e54:	.....".%p(.*.,..
   76e64:	.0^1.2.3.5.5.6O7
   76e74:	k7h7B7q7.7.7.7[6
   76e84:	q554.2+1[/q-.+.)
   76e94:	.'.%.#.!..{.(...
   76ea4:	..]...#.....E...
   76eb4:	".............1.
   76ec4:	........u.x.F...
   76ed4:	&...........{...
   76ee4:	V.....=.j...N...
   76ef4:	..Q.E.F.......~.
   76f04:	......x.#.(.M...
   76f14:	..w...........1.
   76f24:	..........C.#.$.
   76f34:	........R.....=.
   76f44:	...!J$#&.(.)p+2-
   76f54:	...0c2.4.5!7.8.8
   76f64:	.9.8.8(8K7.6>6.5
   76f74:	.463.1.0 ..,.).'
   76f84:	.%i"..6.........
   76f94:	Q.....J.x.......
   76fa4:	..H.........g...
   76fb4:	....I...R.......
   76fc4:	9.c.....,.......
   76fd4:	....q.*.........
   76fe4:	D...X.....Q...@.
   76ff4:	....`...........
   77004:	g.............'.
   77014:	....|.'.{.f.b.[.
   77024:	b.n.=.......e .#
   77034:	.%.'.*.+.-m/.0&2
   77044:	.2.3{4.4.4/5.5.5
   77054:	.4-4.3.2.201J0,/
   77064:	.-.,^+.*.(I'.%.$
   77074:	A"` Q.+.....@...
   77084:	..A.......N.v.'.
   77094:	..8.....5.......
   770a4:	Y.{...=.....9...
   770b4:	....%.........a.
   770c4:	..v.".........).
   770d4:	..I.........4...
   770e4:	....g.|.....0...
   770f4:	+.z.....?.......
   77104:	....s...w.V.l.^.
   77114:	[.g.G.....A".$.&
   77124:	.(.*u,.-B/f0.1.2
   77134:	i3.4.4.4.4.4.4.4
   77144:	04.3.3D261.0..?-
   77154:	.+Y*.(.'.%.#. ..
   77164:	....a.H.2.......
   77174:	k.J...m. .......
   77184:	0.....>.......L.
   77194:	..~.,...........
   771a4:	x...=.....s.....
   771b4:	t.M.....Y.......
   771c4:	..Q.U.^.........
   771d4:	j.9.>.D.1.Q.....
   771e4:	q...[...s.4.....
   771f4:	............h.-.
   77204:	....J...b!.#9&J(
   77214:	g*b,R../M1.2d3e4
   77224:	/5.5.5.6.5.5.4.4
   77234:	n3.2.1.0./B..,.*
   77244:	.)3'G%.#.!q.@...
   77254:	v.y.......C.B.8.
   77264:	........t...v...
   77274:	..".....J.*.....
   77284:	1.Z.....M.....z.
   77294:	..o......... ...
   772a4:	)...........Q.'.
   772b4:	9.n.....g.......
   772c4:	....0.......+...
   772d4:	..h.4.......i.!.
   772e4:	........p.......
   772f4:	....;.M!-#.%.&A(
   77304:	.)U+.,..|/.0.1.2
   77314:	u3.3_4e4.4.353.2
   77324:	.1.1$0./...-.+M*
   77334:	.(.'6%a#.!/...A.
   77344:	m.....8.........
   77354:	..[.......3.....
   77364:	..I.5.......e.(.
   77374:	....{.x...&.....
   77384:	..............z.
   77394:	@...7...4.......
   773a4:	n.........O.....
   773b4:	....:.....p.)...
   773c4:	..p.B.M.(.V.)...
   773d4:	....~.L.......3.
   773e4:	..] .".$.&.(.)L+
   773f4:	I,\-P.'/.0.0V1.1
   77404:	,2=2B2.2.1.1Q1.0
   77414:	./...-c,.*.)C(.&
   77424:	.$G#k!......E.I.
   77434:	....{.........y.
   77444:	A...l.......O...
   77454:	 ...}.E.$...(.D.
   77464:	_.....D...E.....
   77474:	..........m.G...
   77484:	........H...6...
   77494:	#.w.............
   774a4:	........r...K...
   774b4:	].....1.....s...
   774c4:	....~.|.Z.......
   774d4:	A..!.#.&!(.*.+.-
   774e4:	q.s/Z091.1?2.2.2
   774f4:	p2@2.1B1.0.0././
   77504:	=.t-e,@+.)X(.&.$
   77514:	$#Y!l.........v.
   77524:	5...v...c...]...
   77534:	z...........8...
   77544:	..P.8...........
   77554:	G.........k.....
   77564:	K.A.5...........
   77574:	<.....Y.@.<.<.w.
   77584:	......r.&.....L.
   77594:	..........>...:.
   775a4:	..v...|...l.....
   775b4:	g.M.....5.......
   775c4:	.....".#.%.'.)o+
   775d4:	.,n../.0.2.2b3.3
   775e4:	.3.3`3.2.2V1j0*/
   775f4:	.-.,U+.).(.&.%.#
   77604:	.!>.O.q.s.x.o.Z.
   77614:	......5.....5...
   77624:	....s.T.......i.
   77634:	..`.............
   77644:	>. .............
   77654:	..6.D.|...}.d...
   77664:	..>...J.........
   77674:	....R.......#...
   77684:	..%.......".a...
   77694:	F......."...k...
   776a4:	b...>.........).
   776b4:	..( .".$.%.'B).*
   776c4:	.+.,.-a.././.0.0
   776d4:	.0.1.0.0n0././..
   776e4:	.,.+.*y($'n%.#'"
   776f4:	. Y.............
   77704:	m.%...i.....:...
   77714:	........w.>...e.
   77724:	..............$.
   77734:	~...e.......q.e.
   77744:	C.r.....b.......
   77754:	>....._.}.......
   77764:	....a...e.......
   77774:	......S.........
   77784:	n.....}.......-.
   77794:	..4...8.....X.q.
   777a4:	. \")$.%.'.(J*U+
   777b4:	j,1-.-~..../D/-/
   777c4:	./..}./..-.,a,.+
   777d4:	.*.).(.',&.$.#.!
   777e4:	..........d.u...
   777f4:	..............[.
   77804:	..u.&...........
   77814:	....].D.2...W...
   77824:	..X...z.6...<.d.
   77834:	..'...N.........
   77844:	.._.....D.8.F.C.
   77854:	l.......*.......
   77864:	....;...N.......
   77874:	g.v.`.r.4.A.2...
   77884:	..`.......h.....
   77894:	.!.#.%.'{)!+.,.-
   778a4:	..j/./f0.0.0.0.0
   778b4:	b0.0./?/...-!-D,
   778c4:	D+.*.(.'.&.$O#.!
   778d4:	. $.).....}./...
   778e4:	..v.R.R.....A...
   778f4:	@.r...z.).......
   77904:	........E.x.....
   77914:	..$...z.A.!.....
   77924:	T...&...p.B.0...
   77934:	].~.....U.4.J...
   77944:	....i.L.........
   77954:	....$.p...N.....
   77964:	b...:.......Y...
   77974:	a.).......o.....
   77984:	. .#:%.'.(o*.+.-
   77994:	I.`/h011.1.2.2,3
   779a4:	 3.2.2.2.1.0./..
   779b4:	.-.+c*.(.&,%=#5!
   779c4:	[.......Q.k.8...
   779d4:	..7.........N...
   779e4:	....}...u....._.
   779f4:	..7...B.O.2.B.[.
   77a04:	|...f...........
   77a14:	P.....Y.@.-.a...
   77a24:	....o.A.........
   77a34:	'.......;.......
   77a44:	#.r...z...j...w.
   77a54:	....|.....y.....
   77a64:	z.....>.........
   77a74:	. X".#S%.&)(.).*
   77a84:	.,4-".*/.0.0{1.1
   77a94:	.2@2.2.1.1.0@0N/
   77aa4:	+..,w+.)](.&.$."
   77ab4:	. ..........+...
   77ac4:	....X.........2.
   77ad4:	..^.....:.....d.
   77ae4:	............$.<.
   77af4:	}.....^.....l.h.
   77b04:	....@.....U.R.].
   77b14:	....^.........E.
   77b24:	..P.............
   77b34:	r.....W.......`.
   77b44:	..........G...J.
   77b54:	..#.....N.......
   77b64:	*!/#.%.&.(f*.,[-
   77b74:	.../.0'1.1.1#2#2
   77b84:	.1y1.0w0./`/...-
   77b94:	.-.,.*.)E(.&S%.#
   77ba4:	.!v. ...J.......
   77bb4:	|.W./.....w.....
   77bc4:	......r.G.D.].v.
   77bd4:	d.t.9.$.........
   77be4:	s.s.....0.......
   77bf4:	....f...........
   77c04:	....^.....y.....
   77c14:	..........v.Z.I.
   77c24:	g.........L.....
   77c34:	..}.Y.)...z.u.K.
   77c44:	C.......i.....- 
   77c54:	W"z$T&.(.)L+.,=.
   77c64:	./.0.1.2`3.3.3.3
   77c74:	.3K3.272.1.1.06/
   77c84:	...,.+.*.(.&f%.#
   77c94:	.!" *. .....k...
   77ca4:	..........I.....
   77cb4:	..M...i.....w.X.
   77cc4:	0.......].;.V...
   77cd4:	..P.....i.I.B.a.
   77ce4:	....1.......u.k.
   77cf4:	k.....].%.......
   77d04:	......D.......A.
   77d14:	n.~.......T.....
   77d24:	..E.......,.....
   77d34:	..k.....C...t...
   77d44:	.. "k$.&.(.*., .
   77d54:	./.0.1.2.3S4.4.5
   77d64:	.4.4.4@4.3.3R2.1
   77d74:	g0F/.-Z,.*.(.&.$
   77d84:	.". ..........F.
   77d94:	....N.....%...q.
   77da4:	3.0...Z...|.....
   77db4:	4.../...z.......
   77dc4:	..'...8.........
   77dd4:	..R...S.........
   77de4:	..:...9.........
   77df4:	+.~...b.......O.
   77e04:	......e.....y...
   77e14:	........K...w.u.
   77e24:	r.9.H.......A...
   77e34:	..D!8# %.'.(p*.+
   77e44:	A-.../.0.1.2b3.3
   77e54:	.4.4.3.3P3.2]2.1
   77e64:	.0./...--,.*.(/'
   77e74:	T%V#F!%.....d.'.
   77e84:	....P.......\...
   77e94:	..H...B.y...2...
   77ea4:	....K.....e.R.#.
   77eb4:	O.v...j.........
   77ec4:	..........v.0...
   77ed4:	........d.......
   77ee4:	P...o.6.........
   77ef4:	......*.......N.
   77f04:	....b...........
   77f14:	..c./.....:...J.
   77f24:	..C .".$.&.(f*.+
   77f34:	d-.../.0.1.2T3.3
   77f44:	V4v4.4A4.3V3.2.1
   77f54:	.0./X..,.+0*.(8'
   77f64:	.%.#L"{ ......S.
   77f74:	..........c.....
   77f84:	2.....:...n.....
   77f94:	6.....n._.>...$.
   77fa4:	..'.I.....Y...S.
   77fb4:	........5.....v.
   77fc4:	......k.....;...
   77fd4:	....q.....h.R.4.
   77fe4:	".....&.6.]...6.
   77ff4:	..].....d.....X.
   78004:	w.w.[.i.*.....\.
   78014:	..... M#.%.'.).+
   78024:	,-.../.0.1.2.3.3
   78034:	.3.3.4.3.3.363.2
   78044:	.2V1k0J/<..,P+.)
   78054:	.(.&.$.". ......
   78064:	..-...'.....\...
   78074:	........H...>...
   78084:	....$.........|.
   78094:	g...........~.[.
   780a4:	-.8.Y.....p.....
   780b4:	............K...
   780c4:	..........U.....
   780d4:	l.h.....G...x...
   780e4:	..f.(.....6...`.
   780f4:	....k.....r.....
   78104:	1.}......!.$.%.'
   78114:	.)>+.,D../.0.1.2
   78124:	@3.3.3N4u4]4.4.4
   78134:	e3.252B180...-.+
   78144:	.*.(.&.$."......
   78154:	........u.:.....
   78164:	9.....].9.....i.
   78174:	....X.....[...X.
   78184:	,.....Q.....8...
   78194:	............&.Z.
   781a4:	..i.....H...P...
   781b4:	&.....q.......K.
   781c4:	).!...../.=.q...
   781d4:	G.....m./.......
   781e4:	....o.#.....<...
   781f4:	..4...$.c!q#^%H'
   78204:	.(.*.,~-.../.0.1
   78214:	.2.2.2.3$3.3.2.2
   78224:	22.1.1a0./..|-K,
   78234:	.+.).'.&.#.!....
   78244:	....z.R.;.......
   78254:	L..._...F.:.z...
   78264:	......1.....v.7.
   78274:	(.+.........,.y.
   78284:	..k.!.........'.
   78294:	`.....Q...k.....
   782a4:	..........g.....
   782b4:	$.............[.
   782c4:	....M.......;.I.
   782d4:	f.).......T.C...
   782e4:	..].......,"Y$E&
   782f4:	$(.).+.,m../.0.2
   78304:	.2.3S4.4.4.4.4v4
   78314:	 4.3.2"2.1.0..`-
   78324:	.+.*.(.&.$.".!..
   78334:	....v.7.....x...
   78344:	.... ...W.......
   78354:	....t.U.........
   78364:	..........1.Z...
   78374:	..2...'.........
   78384:	Z.....=.....@...
   78394:	..n.........4...
   783a4:	....b...........
   783b4:	..).x...!...\.".
   783c4:	........V.[.?...
   783d4:	......_.&...r .#
   783e4:	`%.'.).+.-%/.0.1
   783f4:	-3.4.4x5.5.6.6.6
   78404:	.5/5.4.4e3x2a1%0
   78414:	..L-.+.*u(.&.$."
   78424:	. ......S.....*.
   78434:	y...m...........
   78444:	..&.....`.....~.
   78454:	l.a.D.......4.|.
   78464:	................
   78474:	a.........s.....
   78484:	4...M...........
   78494:	..Z.......m.....
   784a4:	....w...I...../.
   784b4:	....L.........I.
   784c4:	....3...i...{...
   784d4:	/ g".$.&.(y*.,.-
   784e4:	./d0.1t2b3.4.4.5
   784f4:	.5H5.4.4#4.3.2.1
   78504:	.0./[..,.+.)G(.&
   78514:	.$.". j.6.....M.
   78524:	...._.......{...
   78534:	B.....y.....d...
   78544:	........$.......
   78554:	...... ...b.Z.v.
   78564:	..k.............
   78574:	..T...Y.........
   78584:	`...v.).....#.%.
   78594:	g.....*.....1...
   785a4:	........".......
   785b4:	+...p.6.....<...
   785c4:	E.k .".$.&T(.)a+
   785d4:	.,..)/B0.1.122.2
   785e4:	.2.2.2.2.2.2.1.0
   785f4:	.0./.-.,.+A*.(.'
   78604:	%&.$.".!........
   78614:	U.....U....._.$.
   78624:	..Z.....,.....P.
   78634:	..G...).........
   78644:	........&.}...i.
   78654:	R.Q..."...d.....
   78664:	......a...^.....
   78674:	2.w...~.......P.
   78684:	C.).^.....k...a.
   78694:	..i...h.....}...
   786a4:	................
	...

000788a4 <sample_31_standard_DRUMS_maracas>:
   788a4:	......B.a.....(.
   788b4:	..+.............
   788c4:	..o.......1.F.6.
   788d4:	....[.?.........
   788e4:	/.n...l...G.(...
   788f4:	K.............'.
   78904:	..E.[...n...D...
   78914:	..G.....^..... .
   78924:	....J.....*.....
   78934:	..%.".......J...
   78944:	....4.......?...
   78954:	4.[.2.b.;...!...
   78964:	=...?...X...i.#.
   78974:	..B. ./.M.S.5.~.
   78984:	D...H.,.....^...
   78994:	8.e.o.: ..].#.g.
   789a4:	$(...!g.=.."..I.
   789b4:	......= ..C.)...
   789c4:	.-..1.....i.....
   789d4:	......m.s..*....
   789e4:	..........a...V.
   789f4:	5...Z-..{.I.....
   78a04:	....}.....r%....
   78a14:	. .....$..Q.9.H.
   78a24:	....@...........
   78a34:	......70....$.1.
   78a44:	.....&/.........
   78a54:	....j...W....$..
   78a64:	c...g.d... .....
   78a74:	....../.3#...Dm.
   78a84:	...T..$f....S...
   78a94:	...^..><......*.
   78aa4:	="U..L..DO..O.R.
   78ab4:	......@.. .....R
   78ac4:	.....!..2..i..*#
   78ad4:	O'..J..1O...mBt.
   78ae4:	e..9.....[....IL
   78af4:	...fq..C)...Z...
   78b04:	H7t...k..#..!&..
   78b14:	....~........r..
   78b24:	.I......C%3....S
   78b34:	..._.....<...n..
   78b44:	.......&...D>.4<
   78b54:	....C....0..;.5;
   78b64:	...r&.C..9....~.
   78b74:	.8...D..3...y.a.
   78b84:	`.8...:..#..a..a
   78b94:	Q..17..$...O....
   78ba4:	%;...7..........
   78bb4:	......D.t.......
   78bc4:	.......$....?.5.
   78bd4:	......Y../../%..
   78be4:	..i...R..._.9.#.
   78bf4:	&.j.......z...g.
   78c04:	....r.....Y.8.*"
   78c14:	....V...l./.x...
   78c24:	........u.....i.
   78c34:	N..$....}.......
   78c44:	......../.V.....
   78c54:	.......$.....'..
   78c64:	...$X.....0...mC
   78c74:	....6.%.....a.G.
   78c84:	6'..............
   78c94:	..4...q...i.....
   78ca4:	......d...k...m.
   78cb4:	+-*...].l....&..
   78cc4:	....:...|."./...
   78cd4:	....8.....|.=...
   78ce4:	u...r.......X.#.
   78cf4:	....2.]...7.)...
   78d04:	h...............
   78d14:	R.i...&...:.."..
   78d24:	....+.........% 
   78d34:	............B...
   78d44:	M.".....?.b.....
   78d54:	7.z.w.........}.
   78d64:	....K.........}.
   78d74:	..........~...&.
   78d84:	0...............
   78d94:	......I.F.E...O.
   78da4:	..j...@.....W...
   78db4:	..(...R.......A.
   78dc4:	..{.D...........
   78dd4:	f.H.s...5.....s.
   78de4:	....u.b.......y.
   78df4:	..........T...g.
   78e04:	W.........7.....
   78e14:	0.F...N.......S.
   78e24:	..|.......\.....
   78e34:	............~...
   78e44:	......&...W.T...
   78e54:	....A.".4.E...t.
   78e64:	..........V.d...
   78e74:	.._.Z.......,...
   78e84:	................
   78e94:	........}.......
   78ea4:	..@.....(...G...
   78eb4:	[.^...m.Z.......
   78ec4:	{.y...E.........
   78ed4:	..Z...a...p.j...
   78ee4:	u...~...........
   78ef4:	..\...........4.
   78f04:	....5.f.B.z.....
   78f14:	..1.....s.n.K.?.
   78f24:	......y.......B.
   78f34:	....~...g.......
   78f44:	......{.8.......
   78f54:	........5.S.1.V.
   78f64:	[.....|.......2.
   78f74:	..X...........W.
   78f84:	................
   78f94:	T.......~.Y.....
   78fa4:	..F.P...........
   78fb4:	..........9.D...
   78fc4:	3.............U.
   78fd4:	..%.......G.....
   78fe4:	......#...".=...
   78ff4:	K...`.;...&.....
   79004:	/...+.....?.K...
   79014:	....../.........
   79024:	a.5.....0.......
   79034:	D...........A...
   79044:	....A.......1...
   79054:	H...H.......@...
   79064:	Y.w...u.........
   79074:	....*...1._.....
   79084:	a...d.....C.R...
   79094:	y.q...1.........
   790a4:	:.........:.....
   790b4:	..=.....;.......
   790c4:	b.......:.L.....
   790d4:	......`.........
   790e4:	..-.......p.....
   790f4:	..r.4.V.'.......
   79104:	W.6.............
   79114:	5.........O.....
   79124:	..6...>.........
   79134:	........P.....).
   79144:	......_.....d.j.
   79154:	..........s.....
   79164:	e...............
   79174:	..q.}.4.........
   79184:	y.%...d.u.P.*.$.
   79194:	..d.......>.?...
   791a4:	......S.{.D.~...
   791b4:	..G...........^.
   791c4:	G...v...Q.6...X.
   791d4:	..............D.
   791e4:	....|.W.........
   791f4:	................
   79204:	..}...,...`.m...
   79214:	..........E...P.
   79224:	R...=...|.c.....
   79234:	h.....d...".2...
   79244:	..f..._.........
   79254:	....E.y.......?.
   79264:	.......... .....
   79274:	Z.....R.........
   79284:	..x.............
   79294:	......f...u.\.W.
   792a4:	l.d...+...a.....
   792b4:	C.5...M.....M...
   792c4:	....o.y.V.s.....
   792d4:	..8.....1.....!.
   792e4:	..k.,...i.].....
   792f4:	........h.,..._.
   79304:	....x.........<.
   79314:	Q.7.x...........
   79324:	..5.-.........'.
   79334:	......O.0...%.e.
   79344:	4.........<.....
   79354:	..J.........c...
   79364:	%...O.........<.
   79374:	Q.t.}...t.......
   79384:	..p...Q.o.D.....
   79394:	X.P...v...X.B...
   793a4:	....Y...Z.......
   793b4:	....t.p.....?...
   793c4:	p...............
   793d4:	(.Z.............
   793e4:	..............9.
   793f4:	..Z...$.........
   79404:	........;.E.."X.
   79414:	j.....P.t.......
   79424:	Q.......P...v...
   79434:	!.....o.u.....8.
   79444:	..../!..!...X...
   79454:	I.N.......X...*.
   79464:	........E...-.t.
   79474:	....9.:.U.......
   79484:	 .5.............
   79494:	n.. k...X.K.....
   794a4:	6.....c.....`.*.
   794b4:	............6...
   794c4:	..m...R...7.'.s.
   794d4:	........t.......
   794e4:	..a...T.O.....a.
   794f4:	Z...e.\.....j...
   79504:	....I.....7...!.
   79514:	......g.C.\.H...
   79524:	........<.......
   79534:	G.........^...q.
   79544:	........U...L.?.
   79554:	X.....P.G.......
   79564:	K.....@.....=...
   79574:	....f.#..... ...
   79584:	0.............G.
   79594:	..............I.
   795a4:	..x.....].2.o...
   795b4:	_.n...........).
   795c4:	........Z.....0.
   795d4:	..:.?.......J...
   795e4:	....#...@.......
   795f4:	..P.f.......@.q.
   79604:	..B.....=...b...
   79614:	A.*.....q.].`.2.
   79624:	....F...X.......
   79634:	!...[...N...`...
   79644:	........|.......
   79654:	..n.........3...
   79664:	......Q.6..... .
   79674:	....^...O.b...h.
   79684:	........V.K...{.
   79694:	......P.......-.
   796a4:	).....V...D.....
   796b4:	..!.......D.<...
   796c4:	d...[.O.#...6...
   796d4:	..{...N.........
   796e4:	....M.......|...
   796f4:	R._...:.!.......
   79704:	....'."...V...L.
   79714:	........y.v.....
   79724:	....r.}...E.....
   79734:	..m.d...h.......
   79744:	..*...m.......#.
   79754:	M...O...V.......
   79764:	H...^.f.........
   79774:	......\.......u.
   79784:	................
   79794:	K.^.........!.1.
   797a4:	..Q...`...$.....
   797b4:	H.c...Q.{.U.....
   797c4:	9...........L.9.
   797d4:	................
   797e4:	....b.....f...d.
   797f4:	/.......N.`.....
   79804:	(...9.s...;.....
   79814:	........n.U.4.b.
   79824:	P...k.........l.
   79834:	J...}.`.........
   79844:	i.8.m...h.....-.
   79854:	.. .....k...H.a.
   79864:	^.....%.....-.Q.
   79874:	d._.U...J.....d.
   79884:	....k.H...4.X.l.
   79894:	......}.........
   798a4:	s.........p.....
   798b4:	..|...........j.
   798c4:	....M.....'.U.3.
   798d4:	.."...|.l.i.+...
   798e4:	........}.....h.
   798f4:	J.}.w...{.......
   79904:	......8.........
   79914:	....p.}...o.l...
   79924:	N.2.2.....g.....
   79934:	..B.P...........
   79944:	........k.A.....
   79954:	..o...7...-.....
   79964:	m.....;.O.......
   79974:	......D.......F.
   79984:	/...m.d.........
   79994:	G.o.........p...
   799a4:	T.........Z.....
   799b4:	................
   799c4:	....;.S.........
   799d4:	3.........F.....
   799e4:	..R...D...N.2.p.
   799f4:	7.#.2.a.......A.
   79a04:	X...$.........l.
   79a14:	2.\.i.....3.....
   79a24:	....=.P.j.......
   79a34:	..........h.....
   79a44:	B.B.1.....P.....
   79a54:	......?.........
   79a64:	..........W.....
   79a74:	J.....1.i...#...
   79a84:	................
   79a94:	T.............X.
   79aa4:	C.*.....b.=...q.
   79ab4:	......6...".....
   79ac4:	......=.....C...
   79ad4:	..+.&.....p...|.
   79ae4:	....5.O.........
   79af4:	......Q.....W...
   79b04:	....<...2.4.b.Z.
   79b14:	:.....j.....]...
   79b24:	..t. ...........
   79b34:	....H...3...)...
   79b44:	u.........!...F.
   79b54:	....F.1.......(.
   79b64:	................
   79b74:	".........|.1.s.
   79b84:	....=...T.......
   79b94:	....E.......)...
   79ba4:	..A.....,.....*.
   79bb4:	....x.|...(._.T.
   79bc4:	F.D.~.i.9.......
   79bd4:	..:.T...........
   79be4:	....M.....a.....
   79bf4:	p.........'.V...
   79c04:	..#.......G.*.Y.
   79c14:	....^.....`.'...
   79c24:	....h...........
   79c34:	W.2.L.......O...
   79c44:	....L.J.....P...
   79c54:	`.....B...u.....
   79c64:	....d...........
   79c74:	..........T.....
   79c84:	....<.X.....&.].
   79c94:	Y.i.............
   79ca4:	E.....`.........
   79cb4:	..+.............
   79cc4:	b.....T.........
   79cd4:	:.>.*.....6.....
   79ce4:	..T...N...'...U.
   79cf4:	......d...,.....
   79d04:	y...#.z.c.q.N...
   79d14:	q.6.T...:.......
   79d24:	r...c...U.....1.
   79d34:	..O...K.......X.
   79d44:	X.b.>...3...P...
   79d54:	2.B.......a.....
   79d64:	I.........Q.....
   79d74:	........x.......
   79d84:	................
   79d94:	(.............}.
   79da4:	..........e...B.
   79db4:	..........c.....
   79dc4:	....,...........
   79dd4:	..b.............
   79de4:	M...L.....F.B.r.
   79df4:	:.K...........K.
   79e04:	X.s.V...........
   79e14:	........'.....E.
   79e24:	......i...z.F...
   79e34:	S.......5.......
   79e44:	..........8...!.
   79e54:	..:.z.....4.:...
   79e64:	$.x.............
   79e74:	................
   79e84:	........H.......
   79e94:	..o...=.....>...
   79ea4:	*...............
   79eb4:	_...n.......z.1.
   79ec4:	C.0.).....d...T.
   79ed4:	T.........u.[...
   79ee4:	....u...........
   79ef4:	..*.C.$...Z.m...
   79f04:	........\.B.1.9.
   79f14:	....%.Q.......P.
   79f24:	.."...L.a...+.z.
   79f34:	................
   79f44:	........[...o.s.
   79f54:	................
   79f64:	).....<.m...t._.
   79f74:	....P...#.......
   79f84:	..X.$.......1.{.
   79f94:	{...G...........
   79fa4:	8.#...v.......e.
   79fb4:	..A.....%.......
   79fc4:	......f...x.....
   79fd4:	,...}.....v.....
   79fe4:	........[.C.....
   79ff4:	R...0.....u.....
   7a004:	..5.....8.......
   7a014:	..G.......}.`.r.
   7a024:	................
   7a034:	....&.`...L.....
   7a044:	....X.....;.{...
   7a054:	l.{./.s.....!...
   7a064:	..~.h...l.k.&.[.
   7a074:	........>.|.Y...
   7a084:	..C.J.........3.
   7a094:	......u.=...x...
   7a0a4:	O...............
   7a0b4:	......S.v.^.H...
   7a0c4:	..=...f.........
   7a0d4:	}.........P.....
   7a0e4:	..0.v.......L...
   7a0f4:	B.?...`.....f...
   7a104:	:.-...W.........
   7a114:	{...............
   7a124:	........2.......
   7a134:	M.....o.........
   7a144:	............../.
   7a154:	>.....-...S...7.
   7a164:	....-.........*.
   7a174:	D.......3.......
   7a184:	O.B...`.......K.
   7a194:	....`...f.......
   7a1a4:	..v.`...........
   7a1b4:	).r.........l.J.
   7a1c4:	....U.o.Z. .t...
   7a1d4:	....#.....B.>.;.
   7a1e4:	....q.T.<...k...
   7a1f4:	'.:./...?.>.;...
   7a204:	8...G.U.........
	...

0007a2a4 <sample_11_standard_DRUMS_snare24>:
   7a2a4:	............W..!
   7a2b4:	;.:.\.J......(..
   7a2c4:	U.....H..._.....
   7a2d4:	C.....H.........
   7a2e4:	..3.0...NB..R.I1
   7a2f4:	.!.DY.C.$V....>6
   7a304:	........%.!...\.
   7a314:	pS.....N........
   7a324:	..].............
   7a334:	<...e.....Q..*..
   7a344:	..F...i,........
   7a354:	..I.....).....K.
   7a364:	..<...!...^$3.H.
   7a374:	5.........F.W...
   7a384:	a.x..,(.........
   7a394:	d!...3N.o4- .5.<
   7a3a4:	Z3.B#:.D.W..6U.C
   7a3b4:	.R.Q.M.;.R.HSJ..
   7a3c4:	.*.x.+S:#B.PO>.<
   7a3d4:	(M.4X].$.A;g.%XH
   7a3e4:	.:d6.3gYu..=u"HK
   7a3f4:	j..0$...."p.W...
   7a404:	R...Z.........N.
   7a414:	..b...........{.
   7a424:	..........k.....
   7a434:	 ...........@.J.
   7a444:	........\.2.'.-.
   7a454:	............f.%.
   7a464:	....O.......`...
   7a474:	..!.K...B.......
   7a484:	.V...1.#..0Z...W
   7a494:	T.:3.V.O."^a.<.F
   7a4a4:	.Z.;.UjUuHjUN>.K
   7a4b4:	{H.a:D.B.D.1.]o_
   7a4c4:	...U= !>O)..;x..
   7a4d4:	....q..CI.j...b.
   7a4e4:	.&............3.
   7a4f4:	z........."...;.
   7a504:	L.....P...D.<...
   7a514:	[.`...b.........
   7a524:	......".........
   7a534:	..e.............
   7a544:	................
   7a554:	..W...8....;....
   7a564:	./...A...;-$...a
   7a574:	...0]1.0.=N*sG1<
   7a584:	.A.D..CC.[.!RV.7
   7a594:	[BXL.'+KXR.9.#.Q
   7a5a4:	Z/V]...&26.E.)..
   7a5b4:	...O3.*.##.8....
   7a5c4:	$'..V2..........
   7a5d4:	..............F.
   7a5e4:	..y...........G.
   7a5f4:	R.X.........M...
   7a604:	5...J...~...d.*.
   7a614:	..@.g.3.i@......
   7a624:	........E!..2...
   7a634:	9$g.l#..r..,...(
   7a644:	...Qx.D......F@.
   7a654:	t"..6..Z...!;(.B
   7a664:	.*..$H...@YK...C
   7a674:	.7.+.A..X0U8]#.6
   7a684:	....M7....Q#....
   7a694:	.)k.....b.......
   7a6a4:	....i.'.G.....x.
   7a6b4:	..e.......c.n...
   7a6c4:	L.F.Z.).9...9...
   7a6d4:	..R.....@.d.....
   7a6e4:	(...U.D.r.....U.
   7a6f4:	+.`.'.../.@.%.S.
   7a704:	......( ..U...-A
   7a714:	L...B+......S#t8
   7a724:	..<8<(...:.....>
   7a734:	5.4F.....?L.H...
   7a744:	>..%.)..m".&V..X
   7a754:	...(.....1.!.!e.
   7a764:	O#.../...A...1..
   7a774:	I..#. W.O.......
   7a784:	........3.......
   7a794:	............^...
   7a7a4:	......8.r.y.B...
   7a7b4:	........h.......
   7a7c4:	w...%..#..v.Q"..
   7a7d4:	k..:..7.........
   7a7e4:	,........<......
   7a7f4:	....`.E........#
   7a804:	}......'..v%....
   7a814:	..)8p....6.!l..:
   7a824:	..+/{....1...6>.
   7a834:	a6....?..Z......
   7a844:	,3y....+VE......
   7a854:	/.PR.....-..#/..
   7a864:	\...$3<.:......>
   7a874:	......~.......Z.
   7a884:	..#.\...(.......
   7a894:	......O.....=.5.
   7a8a4:	..v...=.*...&.^.
   7a8b4:	"...?.7....._.@.
   7a8c4:	(.{...r...l.y...
   7a8d4:	_.....<.........
   7a8e4:	..)%....j...`e!.
   7a8f4:	..[>..\...-.(.E.
   7a904:	N..7O...=?<.R.AL
   7a914:	.*.....:."O1...Q
   7a924:	b.4..6.;...BD...
   7a934:	y4W.m2...=....[.
   7a944:	^...I9y........$
   7a954:	......t.Y.I.y...
   7a964:	..g...n.[.J...".
   7a974:	F.7.).....D.K...
   7a984:	................
   7a994:	1.........e.x...
   7a9a4:	b.....W... .....
   7a9b4:	...../....l../..
   7a9c4:	F.~....#..~....$
   7a9d4:	... 3.....:.l.TC
   7a9e4:	..j...p..>....m.
   7a9f4:	O*(....,.......3
   7aa04:	[$...!.!..I.Q...
   7aa14:	.B..N n6w.c&..?.
   7aa24:	'... ......*)...
   7aa34:	..x.x.....TJw.r.
   7aa44:	....R....@...../
   7aa54:	...#..........c.
   7aa64:	,.^...{.....B.*.
   7aa74:	..D.....[.....(.
   7aa84:	..2...........T.
   7aa94:	.. .?...\.....x.
   7aaa4:	..c.I.......3...
   7aab4:	7.........8..@..
   7aac4:	............|...
   7aad4:	............o.d?
   7aae4:	a.K.L...81..'...
   7aaf4:	..j....M..U....3
   7ab04:	..d......?.....;
   7ab14:	..a..#z..!:.....
   7ab24:	j...6.....` ....
   7ab34:	P.......S.....%.
   7ab44:	..-...).........
   7ab54:	i.........<.<...
   7ab64:	5...C...x.u.A.<.
   7ab74:	>...k.......p...
   7ab84:	V..._,..n.q.....
   7ab94:	....e)>.j.8...."
   7aba4:	..i.J.Y....0X..%
   7abb4:	]...$.....d.....
   7abc4:	...'s.d.%.S..)..
   7abd4:	0............%..
   7abe4:	..g...%.........
   7abf4:	.,d.[.., .......
   7ac04:	.#..9.......q...
   7ac14:	D...M...M..L....
   7ac24:	......<.p.......
   7ac34:	....g...u.......
   7ac44:	....G...].X...L.
   7ac54:	..k.......q...4.
   7ac64:	........W...p...
   7ac74:	...........!....
   7ac84:	........w.x...j.
   7ac94:	..........i.....
   7aca4:	..\ ..."}.c.T1..
   7acb4:	..m...7..&C...T'
   7acc4:	i..%a.J..<e.....
   7acd4:	......6.;._...h.
   7ace4:	..*!..E.....0.7.
   7acf4:	S...........f...
   7ad04:	........!.P.~...
   7ad14:	M.m.......V.....
   7ad24:	[.........7.....
   7ad34:	..........p.....
   7ad44:	..?.........9...
   7ad54:	................
   7ad64:	X.,.|.......?.l.
   7ad74:	..G.`.....#.....
   7ad84:	..N...8.........
   7ad94:	R...............
   7ada4:	..*.......v.J !.
   7adb4:	.....$S.{..+....
   7adc4:	@!.....$.....-..
   7add4:	l..&....~.\..$..
   7ade4:	..P./...........
   7adf4:	..h..0....t.....
   7ae04:	V.@.....X"....-.
   7ae14:	................
   7ae24:	p.....Q.......<.
   7ae34:	..w.............
   7ae44:	............A. .
   7ae54:	5...../.X.......
   7ae64:	......+.n.......
   7ae74:	........b.s.....
   7ae84:	....B.g.......f.
   7ae94:	.%............V.
   7aea4:	7........&I.l.q.
   7aeb4:	5._.N......&...&
   7aec4:	..,...'...7.....
   7aed4:	.!d....%;....(..
   7aee4:	..- ..3...D.>...
   7aef4:	Z...!...A.q.>...
   7af04:	..i.U.&.m...+...
   7af14:	..............+.
   7af24:	....s...2...!...
   7af34:	....d.........C.
   7af44:	........N.u.....
   7af54:	..M.m.6.....A.C.
   7af64:	`...7...........
   7af74:	..L.<.s.N.....$.
   7af84:	........b....(..
   7af94:	.F....X...=!....
   7afa4:	....^.%...&*..V.
   7afb4:	. `...4.........
   7afc4:	..(.....2.......
   7afd4:	..).....d.Y.z...
   7afe4:	..M..(2.....X...
   7aff4:	........s.......
   7b004:	1.M.....,.....0.
   7b014:	................
   7b024:	z...........z...
   7b034:	c.m.....y.".'...
   7b044:	..^.(.....'.....
   7b054:	..{.............
   7b064:	..X.&...L.3.p.b.
   7b074:	..'......._.H.G"
   7b084:	@.7'..s.,$..0...
   7b094:	..z.......X.....
   7b0a4:	..z.D.........<.
   7b0b4:	*.............#.
   7b0c4:	..o.Z.;...|.....
   7b0d4:	..+...........u.
   7b0e4:	3.p.....:...m.z.
   7b0f4:	@...............
   7b104:	A...U.^. .].2...
   7b114:	.............._.
   7b124:	......f.v./...j.
   7b134:	)...8.....n.].i.
   7b144:	K...j.'.........
   7b154:	......).K.......
   7b164:	V...l...........
   7b174:	........>.......
   7b184:	D.....H.9.p...}.
   7b194:	..^.$.h...@.....
   7b1a4:	....[.........D.
   7b1b4:	......3...Z.l...
   7b1c4:	........z...+...
   7b1d4:	F.=.......!.....
   7b1e4:	L.......U.y.....
   7b1f4:	B.....Y.*.i.|...
   7b204:	$.....".Y.....v.
   7b214:	x...............
   7b224:	u._.Q.....9.....
   7b234:	..............(.
   7b244:	........2.....m.
   7b254:	....../...-.c...
   7b264:	..j...D.0...7.Z.
   7b274:	N.U.Z.!.....f...
   7b284:	x.r._.......z..!
   7b294:	5...%.....H.....
   7b2a4:	8...u...*.E...t.
   7b2b4:	$.="...$....H...
   7b2c4:	..n...s...4.....
   7b2d4:	5&..3.......;.R.
   7b2e4:	....]...B.......
   7b2f4:	D.^.......4.v...
   7b304:	$.7.....!...[...
   7b314:	n.....F.......1.
   7b324:	S...W...D.......
   7b334:	q......._.......
   7b344:	E.n.............
   7b354:	n.C...2.....~.^.
   7b364:	..........g..._.
   7b374:	....z...E.A.E...
   7b384:	).E.....\.P.[...
   7b394:	......e...%.K...
   7b3a4:	U.I...l.........
   7b3b4:	........1.V...".
   7b3c4:	(.v.6.......u._.
   7b3d4:	....(.........W.
   7b3e4:	[....."...C.D...
   7b3f4:	............%...
   7b404:	`.a.......7.....
   7b414:	Y.@...[.....3...
   7b424:	..3.k...p.....A.
   7b434:	....:.s.........
   7b444:	,...I...........
   7b454:	............Q...
   7b464:	..).!...*."...=.
   7b474:	........s.h.n...
   7b484:	t.x.....9..... .
   7b494:	}.J.Z.C.......J.
   7b4a4:	g.x...:...'...T.
   7b4b4:	..?...:...,.....
   7b4c4:	....^...b.....v.
   7b4d4:	X.$.....C...8...
   7b4e4:	......+.h...K.8.
   7b4f4:	g...[.....P.....
   7b504:	f.....m.l.E.y.;.
   7b514:	0...i...+.^...Y.
   7b524:	;.............b.
   7b534:	..\.7...a.....8.
   7b544:	s...............
   7b554:	..|.......X.....
   7b564:	k.....{.'.......
   7b574:	......=.|...k...
   7b584:	4.[.......l...x.
   7b594:	1.........k.....
   7b5a4:	].8.T.,...8.*.5.
   7b5b4:	................
   7b5c4:	........q.../...
   7b5d4:	..b.........5.g.
   7b5e4:	......V.S.7...Y.
   7b5f4:	........T.o.o...
   7b604:	..b./...g.......
   7b614:	l.....r.....v...
   7b624:	......]...Y.1.&.
   7b634:	l.$...5.\.../.].
   7b644:	M...4...R.q.|.b.
   7b654:	D.K.....:.......
   7b664:	:..._...F...$"..
   7b674:	......3.q.u.....
   7b684:	5...h.8.......D.
   7b694:	j...)...4...0...
   7b6a4:	]...........%...
   7b6b4:	........'.+.".a.
   7b6c4:	................
   7b6d4:	<.........u.....
   7b6e4:	z.=.*.}.........
   7b6f4:	....B.........&.
   7b704:	..........i.....
   7b714:	..j.].....X...-.
   7b724:	......r.........
   7b734:	....5.....*...k.
   7b744:	..X.............
   7b754:	O.A...c.......U.
   7b764:	:.Y.......A.m...
   7b774:	..&.....6.h...C.
   7b784:	..........w.....
   7b794:	....t.....m.....
   7b7a4:	....)...&...t...
   7b7b4:	G...........V.w.
   7b7c4:	0.d...R...L.{...
   7b7d4:	O.u.............
   7b7e4:	..T.A.s.....B...
   7b7f4:	................
   7b804:	..........B...%.
   7b814:	..t.....L...?.N.
   7b824:	..s...o.........
   7b834:	T...i.n.4.....j.
   7b844:	..H.y.G.V.......
   7b854:	......{.-...I...
   7b864:	|.T.....2.......
   7b874:	l..._...(.......
   7b884:	............C...
   7b894:	c.S.P.T.....^.p.
   7b8a4:	..M.....o.....0.
   7b8b4:	..X.Z...'.v...^.
   7b8c4:	<.%...<.......~.
   7b8d4:	............|...
   7b8e4:	....i.........`.
   7b8f4:	....E.O.....U.*.
   7b904:	....[...u.......
   7b914:	5.$.+.q.....z...
   7b924:	:./.)...........
   7b934:	..N.H.;.X.......
   7b944:	..........#.....
   7b954:	).J......./.<...
   7b964:	P.........[.....
   7b974:	&.........f.....
   7b984:	....v.......?...
   7b994:	......>.....Q...
   7b9a4:	..N...B.......\.
   7b9b4:	L.p.3...<.A.....
   7b9c4:	a...;.......#...
   7b9d4:	....../.1...a...
   7b9e4:	..........h.'...
   7b9f4:	....L...y.x.S...
   7ba04:	..\.s.2.d...W...
   7ba14:	2.....#...B.f...
   7ba24:	..W..."...*.7.y.
   7ba34:	i.+.......U...<.
   7ba44:	......'.....1...
   7ba54:	...._...........
   7ba64:	................
   7ba74:	u.......).......
   7ba84:	..].j.u...K.....
   7ba94:	....1.........^.
   7baa4:	........7.L.2.w.
   7bab4:	....|.v.E.`...~.
   7bac4:	....+...C.......
   7bad4:	F.^.....;...`.y.
   7bae4:	....C...........
   7baf4:	....x.......4...
   7bb04:	....Q.B.|.P...f.
   7bb14:	....3...;.....A.
   7bb24:	................
   7bb34:	U....... .....o.
   7bb44:	............v...
   7bb54:	......'.c...Y...
   7bb64:	m.....I...&.....
   7bb74:	........Q...~...
   7bb84:	........F.....,.
   7bb94:	5.8...".........
   7bba4:	6.A...4.+.......
   7bbb4:	 .........Q.....
   7bbc4:	..G.......q...`.
   7bbd4:	......D.C...X...
   7bbe4:	j.$...........a.
   7bbf4:	..............=.
   7bc04:	o...-.*...h...\.
   7bc14:	K...Y...`...a...
   7bc24:	............?...
   7bc34:	}.&.R.....f./.2.
   7bc44:	3.?.?.....$.....
   7bc54:	......b.........
   7bc64:	m.?...?.Z.r...J.
   7bc74:	?.......h...}...
   7bc84:	..z.(.....e.v.d.
   7bc94:	]...Q.x.....[.B.
   7bca4:	..........&.....
   7bcb4:	a...............
   7bcc4:	..}...$.......0.
   7bcd4:	..........p.F...
   7bce4:	".J.............
   7bcf4:	Q.m.......=...L.
   7bd04:	;.7...I.....3...
   7bd14:	j.v...../.....R.
   7bd24:	w.......D.w.p...
   7bd34:	".....j.\.>.....
   7bd44:	E...=...a.`.....
   7bd54:	..d.$.H./...M.$.
   7bd64:	...._.........Y.
   7bd74:	|...[.....|.....
   7bd84:	....!...s.......
   7bd94:	-.......(.....X.
   7bda4:	..g....._...&.F.
   7bdb4:	M...C.........Z.
   7bdc4:	....v.........j.
   7bdd4:	..,.7.$...x.....
   7bde4:	\.,.7...V.....S.
   7bdf4:	X...............
   7be04:	I.....%._.....!.
   7be14:	........z.......
   7be24:	..u...5.x...k.y.
   7be34:	y...p...j./.s...
   7be44:	".....$.%.......
   7be54:	`.y.Z.d.}.......
   7be64:	....N.........C.
   7be74:	..K.1...u.....$.
   7be84:	.._...f...v...;.
   7be94:	......u...G."...
   7bea4:	..m.....'...\.G.
   7beb4:	..F...'.8.....P.
   7bec4:	,.N.u.........^.
   7bed4:	f.8.........0...
   7bee4:	....p.....;.....
   7bef4:	..}.........7...
   7bf04:	..g.....c.H.....
   7bf14:	..A...+.....}...
   7bf24:	N...o.[.Y.....>.
   7bf34:	..........l.9.j.
   7bf44:	....d.........h.
   7bf54:	....h.....u.....
   7bf64:	R...?.......J.[.
   7bf74:	..b.b...I.....).
   7bf84:	i.....*.......".
   7bf94:	................
   7bfa4:	..K...........[.
   7bfb4:	?.....b.M.,.H...
   7bfc4:	..J.F...-.......
   7bfd4:	................
   7bfe4:	..........a.....
   7bff4:	c.c.q.V.].U.E.O.
   7c004:	G.-.6.1.&.&...!.
   7c014:	................
   7c024:	................
   7c034:	..........t...t.
   7c044:	q.m.\.]._.K.L.F.
   7c054:	5.7./.-.........
   7c064:	................
   7c074:	................
   7c084:	........t.t.k.c.
   7c094:	Y.W.N.H.>.:.2.,.
   7c0a4:	#...............
   7c0b4:	................
   7c0c4:	................
   7c0d4:	|.u.n.g.`.Y.R.K.
   7c0e4:	D.=.............
	...

0007c2a4 <sample_2_nylonstrgtr_acgtrb3>:
   7c2a4:	..............*.
   7c2b4:	A.h.............
   7c2c4:	................
   7c2d4:	......v.e.b.2...
   7c2e4:	......|.E.-.....
   7c2f4:	......Y.>.,.....
   7c304:	................
   7c314:	u.^.W.Y.U.<.F.;.
   7c324:	S.H.H.D.o.X.....
   7c334:	....r.........g.
   7c344:	..m.............
   7c354:	..u...`.........
   7c364:	s...........n...
   7c374:	..s.....P 6 @!..
   7c384:	.'...$.(z .&..."
   7c394:	:.... .'.#..K...
   7c3a4:	....n.o.......a.
   7c3b4:	f.`.....b...A...
   7c3c4:	]...#.{...J."...
   7c3d4:	#.....[...H.<.Q.
   7c3e4:	4.........].....
   7c3f4:	Q.....l.F.K.c.z.
   7c404:	....[.6.......%!
   7c414:	&...z/.;.9.C.Odj
   7c424:	.h._.e't.ipe.L.j
   7c434:	.z.gKb.R.k.Y'g_R
   7c444:	+f.[EZ.V.R{P.L.J
   7c454:	.G.E9B`@.=...(g.
   7c464:	>...U....!..>...
   7c474:	`.U.L...'.......
   7c484:	..E.:.V.U.M.\...
   7c494:	p.".......u...w.
   7c4a4:	D.-.A.J...V.h...
   7c4b4:	o.....)...8...[.
   7c4c4:	....M.....c.....
   7c4d4:	E).3j.O.........
   7c4e4:	..............6.
   7c4f4:	........N.I.....
   7c504:	..{.6...........
   7c514:	......O.\...B...
   7c524:	u.f............$
   7c534:	..\'.+]%.#...$. 
   7c544:	.'< :.....`.....
   7c554:	..Q!...7.,.1. ..
   7c564:	...!.$Q...|. ...
   7c574:	=.......*.......
   7c584:	........N.^...r.
   7c594:	............P.\.
   7c5a4:	..`.u.7.Q.....{.
   7c5b4:	&..*...).8v?'Bp;
   7c5c4:	.H.@1DD?`P.FCI0F
   7c5d4:	.D.2+-.?.03F.KQR
   7c5e4:	.YML.?.2.D<K.E.2
   7c5f4:	.+w ....=.......
   7c604:	g.....u.W.......
   7c614:	Z.......#.v...$.
   7c624:	......d.......<.
   7c634:	\.......=.......
   7c644:	........*...V.H.
   7c654:	....|...J...f...
   7c664:	\...........x.`.
   7c674:	....V.........[.
   7c684:	....E...........
   7c694:	>.........x.....
   7c6a4:	W...D...O.......
   7c6b4:	..V.......#.!.~.
   7c6c4:	.....%.+.:b-.>.?
   7c6d4:	.<.9.?kG.9}R.9\3
   7c6e4:	.2.+."..\-B(C;.<
   7c6f4:	.9.%]..2.(.6.*.0
   7c704:	................
   7c714:	[.g...u...X...u.
   7c724:	....[.%.....^.l.
   7c734:	....2.C.,.m.L...
   7c744:	..Q.......V.....
   7c754:	."z .1.1./.9*2.3
   7c764:	.L.?n00/j2.%....
   7c774:	z%@)hB0=.04'.3[2
   7c784:	z9.:.@.6v3H"....
   7c794:	6...............
   7c7a4:	..........s.&.O.
   7c7b4:	......&.......D.
   7c7c4:	..l.........{...
   7c7d4:	..|.E.8.......d.
   7c7e4:	r...b.......Z...
   7c7f4:	............[...
   7c804:	U.K.............
   7c814:	'...m.......f.O.
   7c824:	....<.Z...0.....
   7c834:	6...T.....1...^.
   7c844:	l.&.}.Z.-...>...
   7c854:	d.....+....$.$.5
   7c864:	W<53*=AN.?.7.>.N
   7c874:	kH.8.2..2*+.....
   7c884:	....5/..C'...&.+
   7c894:	.$..03.2.#O.J...
   7c8a4:	l.........^.....
   7c8b4:	..}.6.9...{.....
   7c8c4:	....w...G.......
   7c8d4:	f.y./...........
   7c8e4:	7.|...K+...*]8.@
   7c8f4:	.,./.7)F.7[6*".'
   7c904:	.)9...,.]-...+..
   7c914:	..e".).$')...6.=
   7c924:	....y.S.......2.
   7c934:	..........L.X.Y.
   7c944:	h.(.............
   7c954:	W..._.........Z.
   7c964:	^.......S.)...[.
   7c974:	o....$..N.f....(
   7c984:	. ..x.L...I./.3.
   7c994:	......-.'.[.u...
   7c9a4:	..I(.(..2.>.....
   7c9b4:	|...L.....E.....
   7c9c4:	....K.I..._...A.
   7c9d4:	J.S.............
   7c9e4:	..O...../...$.p.
   7c9f4:	..>....#.!E?12.;
   7ca04:	./.3.=.G.;f..3..
   7ca14:	..8......!.#....
   7ca24:	..</.....,S4MG.&
   7ca34:	Q...#.......1...
   7ca44:	\./...........9.
   7ca54:	..............z.
   7ca64:	..e.z...........
   7ca74:	'.V.B.......... 
   7ca84:	{....)-1$!.'i:.8
   7ca94:	u..$~$O.<.:.....
   7caa4:	T.....Q.@.......
   7cab4:	5...O+..........
   7cac4:	......g...*.....
   7cad4:	V.........r.R...
   7cae4:	....S.$.......".
   7caf4:	................
   7cb04:	j........ .#}2..
   7cb14:	..G1S3.*.&u.4'..
   7cb24:	........E.W...h.
   7cb34:	H.+..._.H../.&..
   7cb44:	....|...<.M.....
   7cb54:	k...4.d...k.l...
   7cb64:	......!.Y.L...`.
   7cb74:	..k.........b...
   7cb84:	..E.]...@...h&. 
   7cb94:	`1.;35A..:.;.EK<
   7cba4:	o2|@.+......G..!
   7cbb4:	@%.....".$..|.="
   7cbc4:	-5QB.9 .........
   7cbd4:	....I...o.b...y.
   7cbe4:	......l.......I.
   7cbf4:	,...N.f.......6.
   7cc04:	....|.......*./.
   7cc14:	..|.C.].Z(d".&.#
   7cc24:	.%h0+(.+k$q D#2.
   7cc34:	..'...(.....f...
   7cc44:	!.....*.#0.(..p.
   7cc54:	e.......i.h.....
   7cc64:	D.'...~.U.L.....
   7cc74:	....g.j.E.z.....
   7cc84:	......<.........
   7cc94:	..Q.K.:.X...../.
   7cca4:	]$.).../.%.+Q2_%
   7ccb4:	q)#&q ....!.$...
   7ccc4:	8...7.......&.m.
   7ccd4:	f0.*0...........
   7cce4:	@._.......z.....
   7ccf4:	c.k.............
   7cd04:	".h.....U.......
   7cd14:	a.u...L..._."...
   7cd24:	.....**281.0.>U4
   7cd34:	<<.=.=d:l8%=.$..
   7cd44:	>...j._.L...).s.
   7cd54:	.......$.>....u.
   7cd64:	......y.......M.
   7cd74:	O.....s.........
   7cd84:	..........'.....
   7cd94:	................
   7cda4:	....i.T.x....#i.
   7cdb4:	e&.'t-.,M-.1.).5
   7cdc4:	.+=2............
   7cdd4:	......C.P.>.i..#
   7cde4:	>(#%..p.........
   7cdf4:	3.........d.....
   7ce04:	......l...p.....
   7ce14:	....|.....N.....
   7ce24:	......V.....b.}.
   7ce34:	....w...n!.'.+./
   7ce44:	.'l..,.2.4.%....
   7ce54:	................
   7ce64:	..n.N..&.6.!}.,.
   7ce74:	........s.S.....
   7ce84:	........T.N.P...
   7ce94:	Z.[.....m.......
   7cea4:	..............>.
   7ceb4:	..T.9.....z..'.-
   7cec4:	.&.9;5.8;2p3w6.C
   7ced4:	.2y(..G.(.......
   7cee4:	8...n.........p.
   7cef4:	.%W#..k.e.C.`...
   7cf04:	).........a...d.
   7cf14:	a.......%.......
   7cf24:	........n.......
   7cf34:	........D.].Q.r.
   7cf44:	..6..!@ 6&./.1.2
   7cf54:	4!.3.4.8./`.x...
   7cf64:	N.....c.....#...
   7cf74:	..J.o.<.."q.+.r.
   7cf84:	......(.........
   7cf94:	....s.-.F.....e.
   7cfa4:	u.H...).........
   7cfb4:	..W.}.......K...
   7cfc4:	........~......"
   7cfd4:	.!\8@4k'T/...?.<
   7cfe4:	Z,."............
   7cff4:	........H...M#.)
   7d004:	.0.&F.#...(.....
   7d014:	..).........N.<.
   7d024:	......s...h.d...
   7d034:	e...q...........
   7d044:	..[.q...y...{.+.
   7d054:	0..'w {..7.2z9z)
   7d064:	=,/;.>.<..*.V...
   7d074:	8.y.....&.^...z.
   7d084:	.......)."< c...
   7d094:	..x.K...[.......
   7d0a4:	..5.7.....u.....
   7d0b4:	y.......&.......
   7d0c4:	n...S.........].
   7d0d4:	..$...#.....`...
   7d0e4:	.+.51(.$.)=2.<03
   7d0f4:	..!.............
   7d104:	..........i...).
   7d114:	..P._.......J.;.
   7d124:	......(.H...v...
   7d134:	......X.!.....:.
   7d144:	..]...!.......W.
   7d154:	........=.Q.>...
   7d164:	.......%.7.3.1.'
   7d174:	.,.C;?}4.$D...E.
   7d184:	..i.......x.)...
   7d194:	....d..".+0-....
   7d1a4:	#...b.l.........
   7d1b4:	)...I.Z.....P...
   7d1c4:	........T...0.:.
   7d1d4:	..y.<...[.@...&.
   7d1e4:	......[.w....%.(
   7d1f4:	d:18...#R=.>.C*.
   7d204:	.%.!..+...l...O.
   7d214:	..........r.?...
   7d224:	.5B.0...#...h.Q.
   7d234:	p.......@...=...
   7d244:	...... .6.X...#.
   7d254:	B.|.#.......l...
   7d264:	..i.........&...
   7d274:	.......#.83(~$."
   7d284:	K6.:.7.(C.t"..F.
   7d294:	..Z.f.....r.....
   7d2a4:	-......)v%..q...
   7d2b4:	~.A...b.........
   7d2c4:	......w.....u...
   7d2d4:	....!.....Z.....
   7d2e4:	..........a.z...
   7d2f4:	............."z/
   7d304:	.7F+.%G-5:.B.4.(
   7d314:	w+.!......A.g...
   7d324:	5.-.*...y...x!?,
   7d334:	.-1.}.F...7.....
   7d344:	........[...G...
   7d354:	C...-.....t.....
   7d364:	0.e...9.......E.
   7d374:	0...[.....?.8...
   7d384:	.....*.3.2 -,#t3
   7d394:	a>==..U0.'~.7...
   7d3a4:	............:...
   7d3b4:	....^..'.'e.....
   7d3c4:	..t.D.........%.
   7d3d4:	....Z...........
   7d3e4:	......0...V.....
   7d3f4:	....{.....J.....
   7d404:	..].`........$K-
   7d414:	./..!'32.8.6.-./
   7d424:	.%....W.........
   7d434:	....=.N........,
   7d444:	g$d.t.....s.-.G.
   7d454:	 .......I.......
   7d464:	..>.......{.....
   7d474:	r...-.....,.Y...
   7d484:	\.,...8...P...2.
   7d494:	.....,.6.(.*5-.:
   7d4a4:	C=96.?'..)x&....
   7d4b4:	....J.....(...M.
   7d4c4:	..1..&m6.#2.H...
   7d4d4:	..c.......q...!.
   7d4e4:	).......g.....O.
   7d4f4:	....u...........
   7d504:	..L.......!.....
   7d514:	5...&......$.&{0
   7d524:	W$P%.2...8.:./.*
   7d534:	.,..V..._...b...
   7d544:	^.....^.K.h..+.%
   7d554:	......f.$.*.....
   7d564:	L...f.......E.t.
   7d574:	......Z.........
   7d584:	................
   7d594:	i.............}.
   7d5a4:	.....,.#w%.+.&t3
   7d5b4:	G:j2...1.*..z...
   7d5c4:	......g.;.B.C...
   7d5d4:	.....!.+.._.....
   7d5e4:	......|._.:.O.M.
   7d5f4:	X.0.A.2.s...n.^.
   7d604:	......).N.......
   7d614:	..J.D.......M...
   7d624:	..0.....;.N'.(.*
   7d634:	.1.&.3.<5:.3.:|:
   7d644:	.#S.......o.8...
   7d654:	u.h...W.m......!
   7d664:	..M.......i.....
   7d674:	.... ...........
   7d684:	....?.........,.
   7d694:	..............Y.
   7d6a4:	....z.....'.....
   7d6b4:	6...x&[)B%E$.632
   7d6c4:	./.5.9w1....>...
   7d6d4:	..F...z...=.....
   7d6e4:	.....";...F.....
   7d6f4:	....Q.....5...t.
   7d704:	..E.u.......C...
   7d714:	................
   7d724:	O.........w.....
   7d734:	..........\..)..
   7d744:	.#.,G1.-.1.9.<G(
   7d754:	......l...=...E.
   7d764:	.............&6.
   7d774:	..W.l.....R.Y.B.
   7d784:	`.1.T. .....r...
   7d794:	..?.....,...!.K.
   7d7a4:	{.F.............
   7d7b4:	9.........Q.s.i.
   7d7c4:	...'.$O$8,.2.2.+
   7d7d4:	.=S?.7.4..s.....
   7d7e4:	......o.y.....g.
   7d7f4:	..."....?.\...E.
   7d804:	Z.5.............
   7d814:	..G.U.....*...Y.
   7d824:	s.....(...{./...
   7d834:	r.....8.......(.
   7d844:	..........A.L!h.
   7d854:	.0.*h$.5.1Y;.9i'
   7d864:	..............|.
   7d874:	1.t.....1.....?.
   7d884:	....v.........$.
   7d894:	........m.......
   7d8a4:	Y.%.............
   7d8b4:	..p.S.......5...
   7d8c4:	................
   7d8d4:	9 .....,.&.(.-l,
   7d8e4:	.9D>.75(..U...u.
   7d8f4:	..Z.............
   7d904:	..B.............
   7d914:	....<...........
   7d924:	6.M...J.3.......
   7d934:	........8.......
   7d944:	P.......+...A...
   7d954:	..t.h.......C(J%
   7d964:	R..*.+.2Q<.A.8s 
   7d974:	....).u.........
   7d984:	..f.....'...h...
   7d994:	"...........R...
   7d9a4:	#.5...........!.
   7d9b4:	..........n...(.
   7d9c4:	..f.d.....s.....
   7d9d4:	e.%...M.......x.
   7d9e4:	;...x.G(.#.&u%.,
   7d9f4:	.?.:.-....K...=.
   7da04:	....C...........
   7da14:	..x.2.z.,.....e.
   7da24:	........h.......
   7da34:	..........O.....
   7da44:	..c.z...........
   7da54:	l...7.........m.
   7da64:	..[.....+...g!.'
   7da74:	G*.#k%&8.>.;..."
   7da84:	........y...../.
   7da94:	H.I.....U.......
   7daa4:	e.......4.....:.
   7dab4:	..q.....y.......
   7dac4:	..w.N...........
   7dad4:	X...............
   7dae4:	..U.h...*...C.W.
   7daf4:	}....$.,.%Y!0..7
   7db04:	.B.6)/|%........
   7db14:	......_...w.I.r.
   7db24:	L.T.X.........<.
   7db34:	........?...P...
   7db44:	y.....v...E...p.
   7db54:	..J.m.......l...
   7db64:	......y.....=.~.
   7db74:	W.^..........%.#
   7db84:	. ...,.6.<.1.*.&
   7db94:	..^...x...~.....
   7dba4:	4.....s.........
   7dbb4:	..r.....A...i.L.
   7dbc4:	..u...1...d.F...
   7dbd4:	............;...
   7dbe4:	G...7.6.`.....W.
   7dbf4:	..x.[.j.i...).Q.
   7dc04:	....{&*#...".0.;
   7dc14:	'9.5...&........
   7dc24:	....r...........
   7dc34:	..+." f. ...[.W.
   7dc44:	!.K...[.....K.O.
   7dc54:	U...........|...
   7dc64:	K.<...".....O...
   7dc74:	5.s.:.....Y...y.
   7dc84:	....f.4...u d%.!
   7dc94:	...(40.9.8.3o-.)
   7dca4:	........w.......
   7dcb4:	".........T...<.
   7dcc4:	..O.......(.....
   7dcd4:	.... ...........
   7dce4:	..U...........6.
   7dcf4:	..A...D.c.M.u...
   7dd04:	..W.g. .......N.
   7dd14:	..m!.!..g..#T1.9
   7dd24:	:2G5[..#........
   7dd34:	........k...I...
   7dd44:	..}.....\.W.....
   7dd54:	..g.....w.[.y...
   7dd64:	..K.........u.Y.
   7dd74:	<.7.............
   7dd84:	H.).......i...u.
   7dd94:	......b...k ....
   7dda4:	S.3+.345w8.5.06&
   7ddb4:	....n.....N...O.
   7ddc4:	..0...h._..!....
   7ddd4:	4...1.......b.\.
   7dde4:	..Z.............
   7ddf4:	..P.....s...i.v.
   7de04:	....9.....<.....
   7de14:	.... ..._.g.....
   7de24:	..p"{....".'=2.3
   7de34:	86-6.-.!^.......
   7de44:	.......... ...P.
   7de54:	....@...../.O...
   7de64:	b...{.......m.B.
   7de74:	....Y.2.4...7.4.
   7de84:	..........r.....
   7de94:	....S...........
   7dea4:	......'....._...
   7deb4:	7.X+.,.3.7.2\1..
   7dec4:	..........}.X...
   7ded4:	..m...H.y.......
   7dee4:	Q.z...........5.
   7def4:	B...a.....o.x...
   7df04:	K.,...R.........
   7df14:	..3.J...^...+...
   7df24:	..s...@.......N.
   7df34:	....l.G..#.).1:4
   7df44:	.:.6.1..".2.L...
   7df54:	P.....X.-...\.=.
   7df64:	7.............B.
   7df74:	......2.....S...
   7df84:	......_.#...r...
   7df94:	q.....C.....`...
   7dfa4:	....^.T.6.......
   7dfb4:	................
   7dfc4:	.#/'...2&7.9.*7.
   7dfd4:	................
   7dfe4:	k.........*.....
   7dff4:	......L...{.....
   7e004:	o.....o.........
   7e014:	b...?.....#.A...
   7e024:	..........B.H...
   7e034:	......Z.Z.2.?...
   7e044:	......].}#.'L-$0
   7e054:	.@.4.(B...N.m.<.
   7e064:	....S...c.$.....
   7e074:	..8.U...&.&.0...
   7e084:	1...&.u.-...;.p.
   7e094:	 ...]...$.....^.
   7e0a4:	..M.......n.....
   7e0b4:	j...H...b.{.....
   7e0c4:	m.X...F...J.y...
   7e0d4:	.(."i..8^<.8%%p.
   7e0e4:	..G.............
   7e0f4:	.... .g.".....K.
   7e104:	o.....C.f.r.q.s.
   7e114:	......t.........
   7e124:	T.|.....7...`.!.
   7e134:	..+.N...........
   7e144:	......:.2.......
   7e154:	..C.... K.J&.+{7
   7e164:	.?G0E!D...7.:...
   7e174:	....(...Q.....Z.
   7e184:	....O...........
   7e194:	s.....^.4.....6.
   7e1a4:	......-.........
   7e1b4:	_.B.|...J.......
   7e1c4:	......6...e.s.K.
   7e1d4:	;.....,.M.}.....
   7e1e4:	K.>"6.?=.;.1..r.
   7e1f4:	e.N.~.......]...
   7e204:	..$.........7...
   7e214:	 .`.....).......
   7e224:	X.h.............
   7e234:	........B.......
   7e244:	........%.......
   7e254:	..C.Z.-.....c...
   7e264:	........M..$.0.>
   7e274:	j=.*. ......m...
   7e284:	..,.....V.......
   7e294:	....S.o.........
   7e2a4:	U.e.....H...D.6.
   7e2b4:	'...............
   7e2c4:	........A.....|.
   7e2d4:	..C.L.I.#.......
   7e2e4:	g.W.......G...8.
   7e2f4:	..z .6.=.52*. ~.
   7e304:	q.D.........c...
   7e314:	....?...........
   7e324:	......G.i.,.....
   7e334:	P...Z.5.d.......
   7e344:	..E.\...5.......
   7e354:	..z...H.k.w.<.'.
   7e364:	......E...6.M...
   7e374:	y...7.*....'a8.9
   7e384:	.6.+..Q.?...W...
   7e394:	..W./.H.R...B...
   7e3a4:	......J.........
   7e3b4:	..H.v....._.....
   7e3c4:	..V.j._...D.c...
   7e3d4:	........C.<.....
   7e3e4:	8.......T.1.>...
   7e3f4:	F.......e.>...T.
   7e404:	..J,.5.;.7.&....
   7e414:	........B.C.....
   7e424:	........#...]...
   7e434:	C.R...'...i.....
   7e444:	......-.{.....G.
   7e454:	P./.I.......*...
   7e464:	..!.D.....5.....
   7e474:	2...W...........
   7e484:	....;......'.7.:
   7e494:	.1.$..8.M.7.....
   7e4a4:	..........Q.....
   7e4b4:	..........D.....
   7e4c4:	........o.......
   7e4d4:	F.R.P.5.".=.j...
   7e4e4:	........_...D...
   7e4f4:	........]...b...
   7e504:	...."...........
   7e514:	...+7:O:c..%.&t.
   7e524:	..k.......Z...^.
   7e534:	*.....Y...#...].
   7e544:	*...~...!...d.T.
   7e554:	......{.....G...
   7e564:	..........k.`...
   7e574:	]...x.....z.....
   7e584:	|.u.l.....q.0...
   7e594:	....V._....-%<.3
   7e5a4:	.+..~./.....{.|.
   7e5b4:	..........#.....
   7e5c4:	..F...........8.
   7e5d4:	......!.@...#.v.
   7e5e4:	................
   7e5f4:	......Z.N.......
   7e604:	..s.......7.X.X.
   7e614:	..$...>.6...h...
   7e624:	-.j4.2.2.1L'. 3.
   7e634:	H.=.....".<.Z...
   7e644:	..0.../.R...b...
   7e654:	..........i.....
   7e664:	....../...M.....
   7e674:	'...e.....$.....
   7e684:	..&...L... .....
   7e694:	`...............
   7e6a4:	.........&'-g4.3
   7e6b4:	.1((..q.........
   7e6c4:	......Z...%.....
   7e6d4:	..j.....%.......
   7e6e4:	e...q.......z...
   7e6f4:	....i.....'...q.
   7e704:	................
   7e714:	..........*.%...
   7e724:	n.v.:.n.........
   7e734:	.#.-03$5./A&."..
   7e744:	......i.;...@...
   7e754:	{...7...h.s.....
   7e764:	Y.k.G.T.....p...
   7e774:	....)...........
   7e784:	....i.....I...U.
   7e794:	..>.....5...*...
   7e7a4:	..4...@...X...q.
   7e7b4:	..Y......!%,\5P0
   7e7c4:	'/.'. 7.|.S...J.
   7e7d4:	].u.Y.S...m.....
   7e7e4:	....]...........
   7e7f4:	....D...........
   7e804:	....f.....G.....
   7e814:	....D.....8.....
   7e824:	|.Y...M...Y...~.
   7e834:	................
   7e844:	.$.-.3.0.0^)....
   7e854:	*.....,.....o.`.
   7e864:	......m.`.......
   7e874:	..#.......A.3...
   7e884:	D.......O.D...^.
   7e894:	%...........Y...
   7e8a4:	....%...........
   7e8b4:	....I.........2.
   7e8c4:	....T...j$.-./.1
   7e8d4:	.3.%......@.....
   7e8e4:	....z...........
   7e8f4:	-...............
   7e904:	....8.......z...
   7e914:	....G.p.....=.2.
   7e924:	......0.......M.
   7e934:	*.......4.....?.
   7e944:	i.....7.c.....n.
   7e954:	h&r(M1^4Z/Q&....
   7e964:	`.t.,.....Z...O.
   7e974:	$.f.............
   7e984:	2...Y.j...=.....
   7e994:	r.i.........H.u.
   7e9a4:	..g.V.....o.b.T.
   7e9b4:	a.....N.......~.
   7e9c4:	P...S.9.E...$.;.
   7e9d4:	..{.t.,..!$+i0.6
   7e9e4:	..[!_.5.3.....j.
   7e9f4:	..\.........0...
   7ea04:	..!.k...O.U.h...
   7ea14:	..^...Z.......v.
   7ea24:	......O...H.#.7.
   7ea34:	5.[...-.....].L.
   7ea44:	&...A.o.......F.
   7ea54:	8.....f.".......
   7ea64:	_!.'.6.3.+.#....
   7ea74:	........n.......
   7ea84:	............*...
   7ea94:	q.4.9.....T...x.
   7eaa4:	..........].....
   7eab4:	&.b.......o.....
   7eac4:	R...9...........
   7ead4:	-.......~.<... .
   7eae4:	..p.......s-.2:3
   7eaf4:	.*. ....a.q.....
   7eb04:	...._.l.....w.J.
   7eb14:	......~.......Y.
   7eb24:	A...K.~...1.q.7.
   7eb34:	Q..........._.].
   7eb44:	..........b.....
   7eb54:	..........%.....
   7eb64:	.._...E...;...9.
   7eb74:	w .,.4.1.).!n...
   7eb84:	....J._...v.a.3.
   7eb94:	..........<.....
   7eba4:	....[...E.......
   7ebb4:	....<...........
   7ebc4:	......!.x.@...7.
   7ebd4:	m.v.........f...
   7ebe4:	.... .+...w.A...
   7ebf4:	......... ...2w0
   7ec04:	.). 2.........h.
   7ec14:	..^.........J...
   7ec24:	......7.=...<.M.
   7ec34:	E.....l.Z.A...y.
   7ec44:	F.p...).c.......
   7ec54:	1...D.*.I...{...
   7ec64:	..J...f.......&.
   7ec74:	u...4.....L.....
   7ec84:	."3-.2b/~(..3...
   7ec94:	........6.W.&.d.
   7eca4:	_...<..._.a.-...
   7ecb4:	..A.*.........".
   7ecc4:	H...}...4.\.=.\.
   7ecd4:	....T.J...t...=.
   7ece4:	......"...Y.....
   7ecf4:	..n.....G.I.....
   7ed04:	....Q.r..#.-e3..
   7ed14:	N'y!......'.....
   7ed24:	%.G.............
   7ed34:	....@...........
   7ed44:	I.A.4...X.....".
   7ed54:	....}...D...v...
   7ed64:	..........2...\.
   7ed74:	..............S.
   7ed84:	g.....u.(.......
   7ed94:	?#.-.0..4%<.....
   7eda4:	....L...>.......
   7edb4:	s.f.........o.3.
   7edc4:	b.o...o.M.B...R.
   7edd4:	.. .c.......S...
   7ede4:	....@.......w...
   7edf4:	............A.[.
   7ee04:	_.s.......D.....
   7ee14:	........j".-.2.*
   7ee24:	t$.#..8...*.%.h.
   7ee34:	..x..... .....<.
   7ee44:	..C.......#.....
   7ee54:	L...5.........=.
   7ee64:	....t.p.......b.
   7ee74:	......k...O.L...
   7ee84:	s.........{.2...
   7ee94:	..~.............
   7eea4:	.#.0...+}'. ....
   7eeb4:	..-.4...(.....K.
   7eec4:	......0...x.3...
   7eed4:	....N.5...z.Z...
   7eee4:	8.q.............
   7eef4:	..b...;.........
   7ef04:	G.I.0...N...|...
   7ef14:	....d...k...U...
   7ef24:	4........%L,..X)
   7ef34:	.%&"R...n.....r.
   7ef44:	......9.w.....-.
   7ef54:	O.H.........9...
   7ef64:	c...............
   7ef74:	t.<...........7.
   7ef84:	........9...0...
   7ef94:	e.........w.....
   7efa4:	k. .........a.=.
   7efb4:	.%.-.+Y+|&......
   7efc4:	....p._...Z...D.
   7efd4:	..,.u...N...^...
   7efe4:	..'.....}...d...
   7eff4:	..3.s.F.........
   7f004:	..).....j.......
   7f014:	u...u....._.U...
   7f024:	.... .k.@.!.!...
   7f034:	.........%**v..(
   7f044:	.'i!......^.....
   7f054:	>...2.......M...
   7f064:	..;.o.........>.
   7f074:	..b...{.a...r...
   7f084:	......1.`...<...
   7f094:	..o.....4.......
   7f0a4:	....$...........
   7f0b4:	............V./.
   7f0c4:	'%P*`+W)Q'....L.
   7f0d4:	. 9...U.r.....S.
   7f0e4:	........T.F.u.k.
   7f0f4:	..D.........L...
   7f104:	.... .L...v.U...
   7f114:	..;.@.B.A.......
   7f124:	..6...5.o./...W.
   7f134:	..............(.
   7f144:	N.......u$C)|+.*
   7f154:	.%h.......N.Z...
   7f164:	................
   7f174:	..C.....v.....V.
   7f184:	:...a.....q.e.x.
   7f194:	......j.*.L.....
   7f1a4:	........#.....|.
   7f1b4:	....w...>.....l.
   7f1c4:	........r.9.1...
   7f1d4:	.#['...*.!......
   7f1e4:	D."...J.l.T...r.
   7f1f4:	T...............
   7f204:	..1./.a.b...V._.
   7f214:	l.....X...(.c.}.
   7f224:	......K...0.V...
   7f234:	........f.p./.K.
   7f244:	..8.......S.l.2.
   7f254:	..7...... .+{+.'
   7f264:	."..t....!..|.E.
   7f274:	....l...S.......
   7f284:	..>...../.....B.
   7f294:	|.&.............
   7f2a4:	....I.z.r...+.k.
   7f2b4:	..(...F.....Z.H.
   7f2c4:	..3.l.......*...
   7f2d4:	....q...r.1.....
   7f2e4:	.".*.+.&o#..... 
   7f2f4:	.!W.............
   7f304:	I.......<.W...;.
   7f314:	f. .5./.......n.
   7f324:	..........t.../.
   7f334:	................
   7f344:	........l.......
   7f354:	....1.......K...
	...

0007f4a4 <sample_1_nylonstrgtr_nguitb2>:
   7f4a4:	....Z.......l...
   7f4b4:	....[...u./.....
   7f4c4:	-.<...(.l.E.....
   7f4d4:	....../.........
   7f4e4:	..........(.....
   7f4f4:	....'.D.B.......
   7f504:	|._.....p.B...{.
   7f514:	..M.........y...
   7f524:	....+...&.....A.
   7f534:	..............9.
   7f544:	....i.....T.....
   7f554:	*.........f(..I*
   7f564:	<%J).(.$.#.#Z./.
   7f574:	%.g...{.....i.F.
   7f584:	M...............
   7f594:	..E...v...\.....
   7f5a4:	....&...=.......
   7f5b4:	O.....(.n...{...
   7f5c4:	J.o.............
   7f5d4:	....6*97.<)?SN.\
   7f5e4:	.a"e.h&dm].Z.`re
   7f5f4:	.W.X.`#`.`.iAi._
   7f604:	G]u`.]._.X._.UfP
   7f614:	~LVH.<9C.M.<.&#.
   7f624:	5.......p.....y.
   7f634:	....u.U.......8.
   7f644:	........{.....O.
   7f654:	........\.......
   7f664:	..N...H.....%...
   7f674:	^......".*.-...*
   7f684:	.8Q1G=.J.I0HgH.J
   7f694:	|<k9.B.?I"~.X...
   7f6a4:	..L.(.....%.N.c.
   7f6b4:	....4./...L.J...
   7f6c4:	Q...G...........
   7f6d4:	..U.a.../.V.....
   7f6e4:	u...x.....r.w.).
   7f6f4:	;...y..(.$.$.-.+
   7f704:	.2.@.F)DmF&LMB.8
   7f714:	%K.S.@><.5.,U...
   7f724:	x...g...........
   7f734:	l...&. .........
   7f744:	T...{.......*"..
   7f754:	... +&.'.,w7a/B.
   7f764:	..\#|....%.#.#..
   7f774:	.".&. 7 ....C...
   7f784:	L.'.............
   7f794:	..x.....f.6.....
   7f7a4:	....j...z.Q.L...
   7f7b4:	......`.z.....U.
   7f7c4:	a.v...r.........
   7f7d4:	.......+.1."T#.)
   7f7e4:	a$&)...4.5.,.2.6
   7f7f4:	]5A7F7.0.*.+%2.)
   7f804:	.).2.%0.......R.
   7f814:	....w...q.......
   7f824:	..e.........h...
   7f834:	................
   7f844:	..c.............
   7f854:	Q..1.?.5.5.4j3.1
   7f864:	X4.A)B.=v?=C.B.F
   7f874:	.H6IY@5D5J.?.B.O
   7f884:	8L%<Q0.9?:43C6.:
   7f894:	.!1.v.O.........
   7f8a4:	t.....d..._.....
   7f8b4:	..3...a.........
   7f8c4:	........$...U.f.
   7f8d4:	?.A.....[...p.r.
   7f8e4:	..G...W.........
   7f8f4:	..........f.....
   7f904:	....v...........
   7f914:	......c...g.....
   7f924:	E.*...8.4.......
   7f934:	[.......:.>.....
   7f944:	..........w..$..
   7f954:	\,r-...%...#.%)'
   7f964:	m$o'.%O!T,./c&.(
   7f974:	.-.(.!.).8.1.#.)
   7f984:	.&..F!.(/,......
   7f994:	T.w./.......>.b.
   7f9a4:	..#...]./...Y...
   7f9b4:	..............~.
   7f9c4:	G...,.`...Y.;.^!
   7f9d4:	Z&J.s.h.......=.
   7f9e4:	O.o.....n.......
   7f9f4:	..P.............
   7fa04:	..2.0...j.....j.
   7fa14:	..5...........;.
   7fa24:	L.......7.b.....
   7fa34:	Q.z.....x...`...
   7fa44:	m...Z.l.l...."P%
   7fa54:	......... O).).#
   7fa64:	.*Y1.2...6.=..)*
   7fa74:	.9y<.9.8.9;5h).+
   7fa84:	.9m4=+..  ....'.
   7fa94:	..d...9./.L.....
   7faa4:	F...........C.w.
   7fab4:	n...4.5.........
   7fac4:	..4.|....&S/r(."
   7fad4:	.!s....%.&."V#.)
   7fae4:	S*.!{).3.&s..!0'
   7faf4:	(&."l&<%..A.....
   7fb04:	..........m...}.
   7fb14:	..&.............
   7fb24:	*...0.T...}...5.
   7fb34:	\.Q...m.....$...
   7fb44:	..p...f.........
   7fb54:	....}......."...
   7fb64:	...'."....".. ..
   7fb74:	.%v+8.F.y./.....
   7fb84:	. ..~.....[...a.
   7fb94:	....@.......I...
   7fba4:	....s...I.q.3...
   7fbb4:	..+.....(.?.....
   7fbc4:	..Y,.1.4.5./.)c)
   7fbd4:	A1Q1.*.4m7R/"/.8
   7fbe4:	M<.6./.2.5...4.<
   7fbf4:	.5.+.+K,.%!)v.l%
   7fc04:	..g...F.........
   7fc14:	..h./.\...V...q.
   7fc24:	O...g.*...%.....
   7fc34:	H...j.#..._.....
   7fc44:	.._...........H.
   7fc54:	..1.T...|.....{.
   7fc64:	y.........O...J.
   7fc74:	m...3.{.".O.(.c.
   7fc84:	=.6..._.t...>...
   7fc94:	..f.0...i.X.'...
   7fca4:	..F...$.......a.
   7fcb4:	s...g.....2....#
   7fcc4:	]+M1)).!.&.'. .%
   7fcd4:	z.8-.&`'U2(3.,./
   7fce4:	.1y).&.1\5-/Q.Z-
   7fcf4:	.#.!.'o).$..l...
   7fd04:	9.....A.....j...
   7fd14:	..........A...2.
   7fd24:	2.......p.L...a.
   7fd34:	n.......Z.u.J .,
   7fd44:	.'..l :.:.C.!!T%
   7fd54:	..<.."C&:!. .#..
   7fd64:	l...G!........r.
   7fd74:	2.......J...:...
   7fd84:	....j.....m.....
   7fd94:	........K...[...
   7fda4:	X.W.8.+.h.P.b._.
   7fdb4:	I.f.q.D....._ z.
   7fdc4:	..!.....A..%n"..
   7fdd4:	.#.*.'\(./g+.!.&
   7fde4:	.,.+R..1.,.%.$.(
   7fdf4:	.).%l(.$......F.
   7fe04:	....r.........B.
   7fe14:	....A.....t.....
   7fe24:	....8.....].2...
   7fe34:	.........#."8".#
   7fe44:	:.\.o..!.!..,.j#
   7fe54:	T ..&'E%:.......
   7fe64:	. U%T%..x..."...
   7fe74:	............k.(.
   7fe84:	..b.....O.......
   7fe94:	....C.A...!.....
   7fea4:	x.....%...|...a.
   7feb4:	............b...
   7fec4:	k.U...........".
   7fed4:	................
   7fee4:	.._...B.9.[...S.
   7fef4:	....O...G.....F.
   7ff04:	Q...|...........
   7ff14:	3.5.;.....U...R.
   7ff24:	n...............
   7ff34:	. %'.*.0;4K+.!.%
   7ff44:	.,.'.'V..+8(.-.1
   7ff54:	O.;+.)X)^&.)./.,
   7ff64:	c'.&t#....$!.!..
   7ff74:	..5.z.1.z.......
   7ff84:	P.'...........~.
   7ff94:	..$.@.....u.....
   7ffa4:	..........D.H...
   7ffb4:	....%"....,.^.Q.
   7ffc4:	|...h......!K"..
   7ffd4:	....o...."*#....
   7ffe4:	........O...p...
   7fff4:	W.-.u.....p.g.`.
   80004:	....;.......5...
   80014:	m.....d...s.e.W.
   80024:	....;.?.........
   80034:	n!G%......`.d...
   80044:	# ..4..#.&.$.&Z'
   80054:	h!. .%.)|(.(.*.&
   80064:	. .".%.$.#L"....
   80074:	_....... .[.9.o.
   80084:	..........J.a.@.
   80094:	..!.[."...N...G.
   800a4:	....c.}.4...[..'
   800b4:	........n.m.....
   800c4:	........r.......
   800d4:	e.v.....7.....h.
   800e4:	...... ...`.....
   800f4:	3...2.Z.......2.
   80104:	........e.....U.
   80114:	8..... .....9.u.
   80124:	..X.3.....t#.$.!
   80134:	 "......a...8.X.
   80144:	R!... .#.!_.I...
   80154:	..3.. .!`.x...4.
   80164:	........U.......
   80174:	C.......^.p.P...
   80184:	....-... .....*.
   80194:	..7.........l.L.
   801a4:	..;...7 .'C(.*()
   801b4:	.". .$.%5$.&6).(
   801c4:	.'.+5,A&H##%.#."
   801d4:	.%.(.%. [ ..5...
   801e4:	..a.........4...
   801f4:	....(...2.]...G.
   80204:	;.W...2.N.9.G...
   80214:	..H.......K.{.K.
   80224:	..........i.....
   80234:	....I.0.......S.
   80244:	."......4...F.. 
   80254:	.!..k...........
   80264:	9.:....... .>.F.
   80274:	3.}.(.~...q.....
   80284:	}.C...........1.
   80294:	........?.......
   802a4:	..s....$.!......
   802b4:	g.E.R.( ..N \$."
   802c4:	........... .!. 
   802d4:	.!. ......v...{.
   802e4:	\.......6...'...
   802f4:	@..."..... ...~.
   80304:	5.W...&.....l.z.
   80314:	........J.N.6...
   80324:	...".$..K.W.5...
   80334:	..k...........7.
   80344:	........k.......
   80354:	e.............y.
   80364:	=.....x.s.......
   80374:	................
   80384:	n.@.r...../...7.
   80394:	..u.n.s.....'...
   803a4:	Z".". . ^...1.. 
   803b4:	U...."4%."."*%.!
   803c4:	......m.. .#R#d.
   803d4:	{.c.d.p.....).M.
   803e4:	'.......8...M.c.
   803f4:	......8...0.&...
   80404:	....j...........
   80414:	X.&.?.x.......i 
   80424:	$!."......R...f.
   80434:	. Y$.!.!^$."f...
   80444:	*.D.V.J!.$. ..g.
   80454:	..1...<.R.,.....
   80464:	p.8...5.......C.
   80474:	..9.........5./.
   80484:	"...............
   80494:	............{...
   804a4:	_...&...\.......
   804b4:	.. .......@.~...
   804c4:	..x.............
   804d4:	....'.....8.....
   804e4:	................
   804f4:	....q.}.e.../.-.
   80504:	..7.A.u.n.....s.
   80514:	..........o".$. 
   80524:	......_.)..!{!O 
   80534:	.!.".!....|.....
   80544:	...!......~...#.
   80554:	....~...T.....^.
   80564:	....t.......S.N.
   80574:	..Y.....N.X.....
   80584:	....Z.....#...h.
   80594:	..%...m..".!..`.
   805a4:	....m.p.....z.T 
   805b4:	5.......e.l.\...
   805c4:	..........6.....
   805d4:	........[.......
   805e4:	..L.....O.T.....
   805f4:	}...c...B.......
   80604:	....'.k.n.\.....
   80614:	..Q.9.. ........
   80624:	....<.S....".!. 
   80634:	... ..R.....[...
   80644:	h f.......M.k...
   80654:	".......r.......
   80664:	G.G.i.O....... .
   80674:	Y...\...........
   80684:	..R.......>.l...
   80694:	..' . E ........
   806a4:	+......!w"O ... 
   806b4:	..r.......9.....
   806c4:	........i.....^.
   806d4:	..'.......<.....
   806e4:	C.r...3.......$.
   806f4:	N.2...........~.
   80704:	..............=.
   80714:	....Q.$...g...j.
   80724:	U.w.............
   80734:	........f.|...).
   80744:	1.~.......W.....
   80754:	....+...........
   80764:	G...........0...
   80774:	r...T.........z.
   80784:	............(...
   80794:	.".#....%...H.u 
   807a4:	.$.#V ^!.#. z.C.
   807b4:	..I.......y...w.
   807c4:	/.s.G.....[.N.N.
   807d4:	......P.......j.
   807e4:	b.A.*.........+.
   807f4:	..|...-....._.>.
   80804:	......m...7.|...
   80814:	....r.....&.....
   80824:	........o.......
   80834:	j.L.............
   80844:	..W.w...`.....T.
   80854:	v..... .%.......
   80864:	....n.F...a...+.
   80874:	..6.r.....Q...l.
   80884:	#.*.......?.`!`.
   80894:	....u...g.."<!b 
   808a4:	.!.!. ......,.c.
   808b4:	....a.u...&.....
   808c4:	....I.u.......P.
   808d4:	....Q...g.1.....
   808e4:	........_.`.....
   808f4:	..z.............
   80904:	e.6...... . g...
   80914:	....%.Q . ) v . 
   80924:	......'...Y.L./.
   80934:	f.....S.........
   80944:	....'...#.......
   80954:	..!...........y.
   80964:	..*.G...........
   80974:	....s.(.D.......
   80984:	..C.s...B.h...\.
   80994:	<.../.x.,.......
   809a4:	.._.M...........
   809b4:	....N...).....Y.
   809c4:	..........-.....
   809d4:	............;.k.
   809e4:	........l.......
   809f4:	....h.....m.N...
   80a04:	..P.. ."B!..(...
   80a14:	q .!."6#5".!. . 
   80a24:	@...........)...
   80a34:	....P...........
   80a44:	9.Y.....$.|.:./.
   80a54:	....+.k.U.E.....
   80a64:	............E.&.
   80a74:	..Z.*...v.......
   80a84:	z.2.....J.]...~.
   80a94:	..B...........r.
   80aa4:	]...H...r.....T.
   80ab4:	..'...i...X.....
   80ac4:	......L.....+...
   80ad4:	..........Q.....
   80ae4:	....@...`.......
   80af4:	l.~.;.g.........
   80b04:	K".!O...K...7!.#
   80b14:	.$.#.#.#."k ....
   80b24:	..H.... ..:.....
   80b34:	..$.......c.....
   80b44:	../...:.........
   80b54:	..1...[.+.8.....
   80b64:	..?.....o.s.@...
   80b74:	......W.I.5.#.>.
   80b84:	F.t.'. .........
   80b94:	1.f...#.....9...
   80ba4:	....P.......b...
   80bb4:	....q...-...h...
   80bc4:	C.....a.........
   80bd4:	..i.....f.......
   80be4:	Q...'...L.......
   80bf4:	..............X.
   80c04:	..n.o.T....." . 
   80c14:	..........H...H.
   80c24:	..G.:.Q.........
   80c34:	U...............
   80c44:	............\...
   80c54:	....T.e.;.....o.
   80c64:	..........B.....
   80c74:	..........#.R...
   80c84:	......... .!.!X.
   80c94:	`...4...........
   80ca4:	w.A...|...H.....
   80cb4:	......E.o.......
   80cc4:	..v.6...........
   80cd4:	..4.....t.`.}.F.
   80ce4:	w.u.[.:.........
   80cf4:	..w.X.........4.
   80d04:	?...[.y...m.....
   80d14:	U.....P.....X.J.
   80d24:	..U.a.a.........
   80d34:	....'.....l...,.
   80d44:	............B.4.
   80d54:	....|.].z.[.X...
   80d64:	..........Q.....
   80d74:	6.@.O.. .... ...
   80d84:	f &#.%m$.!.".#. 
   80d94:	d...I.+.k. .....
   80da4:	....X.(.F.W...).
   80db4:	M...f.......'...
   80dc4:	l...".....O.../.
   80dd4:	..q._...t.7.....
   80de4:	a...............
   80df4:	b.....w...../...
   80e04:	..4.....K.I.....
   80e14:	........R...Q...
   80e24:	0.'.......].....
   80e34:	D.v...b.......M.
   80e44:	1.8. .../.......
   80e54:	..........:...t.
   80e64:	t.-.G.....S...q.
   80e74:	..........|.r!.#
   80e84:	>".!j#."a...i.6.
   80e94:	F...X.........x.
   80ea4:	z...8...........
   80eb4:	....X...z.......
   80ec4:	g...y...........
   80ed4:	e...&.3.........
   80ee4:	..i.........M...
   80ef4:	............g.>.
   80f04:	........C...;...
   80f14:	..A..... .......
   80f24:	......D.........
   80f34:	..y.........F...
   80f44:	..../...........
   80f54:	,...........`...
   80f64:	'.h...S.*...~.1.
   80f74:	......~.. ..<!\"
   80f84:	. +.C.....&...5.
   80f94:	..].......F.....
   80fa4:	l.a.........3.A.
   80fb4:	..E.F.......#.#.
   80fc4:	..F...0...l...b.
   80fd4:	......Z...`.|...
   80fe4:	......z.....Z...
   80ff4:	......p.. .".!..
   81004:	........?...p...
   81014:	......E.........
   81024:	............}.T.
   81034:	I...S...A.....I.
   81044:	........Q...I.@.
   81054:	.._.V.........#.
   81064:	................
   81074:	....H.+.........
   81084:	o...?.4.......G.
   81094:	......=.x.m.....
   810a4:	....p.4.......Y.
   810b4:	..k.............
   810c4:	i...a.I...p...r.
   810d4:	A.......#.|.../.
   810e4:	......Z.....i...
   810f4:	...#Z%.#."."G!..
   81104:	..........e.y...
   81114:	5...[.y.^.@.....
   81124:	..............$.
   81134:	......8.#.......
   81144:	............x...
   81154:	..Y...r.n.......
   81164:	Q.>.l...L.0.....
   81174:	+...;.......e...
   81184:	L...............
   81194:	....'.P.........
   811a4:	..f.h.....G.....
   811b4:	Z.X......._.i...
   811c4:	Y.g...........|.
   811d4:	..b...........$.
   811e4:	H.:.....l....!.#
   811f4:	9#.".".!B ......
   81204:	..........N.....
   81214:	......[.8.=.....
   81224:	I.T.8.....".l.#.
   81234:	......f.......:.
   81244:	..W.A...{.?.Y...
   81254:	f.........'...].
   81264:	................
   81274:	..........P.t...
   81284:	............L...
   81294:	........]...h...
   812a4:	..a.0.......W...
   812b4:	................
   812c4:	............j.7.
   812d4:	..e...B.........
   812e4:	..m.......d . . 
   812f4:	..E...{.....$...
   81304:	..../...........
   81314:	....K.f.......].
   81324:	.."...2...z.....
   81334:	............]...
   81344:	........<.......
   81354:	@...............
   81364:	..n.... .".!h!. 
   81374:	....L.r.........
   81384:	d.7.....|.a.....
   81394:	..M...Q.K.......
   813a4:	................
   813b4:	/...o.......o...
   813c4:	..W...4...G.w.9.
   813d4:	..7.[...........
   813e4:	................
   813f4:	....*...a.,.m...
   81404:	..J.....M...5.o.
   81414:	......e.7.V...r.
   81424:	....e.L...R.1...
   81434:	......j...4.....
   81444:	........N.&.W.;.
   81454:	......'...{...r.
   81464:	1 .!x"7#.#.!..`.
   81474:	0.\.a...%.......
   81484:	........7.......
   81494:	....}.....F...^.
   814a4:	....%.y.........
   814b4:	..............7.
   814c4:	............=.|.
   814d4:	0.....?.........
   814e4:	..*.f...........
   814f4:	..K.W.N...'.....
   81504:	..0.....2...w...
   81514:	4.A.......t.....
   81524:	....?...0.......
   81534:	k.....Q.....o...
   81544:	U...............
   81554:	-.......F.(...Y!
   81564:	B#.$r". "...0.L.
   81574:	....F.....+...5.
   81584:	M...\...E.....d.
   81594:	......P.^.......
   815a4:	......<.u...^...
   815b4:	..A...`.....m...
   815c4:	..y.?.9.......l.
   815d4:	......y.J...O.5!
   815e4:	. ..........i.!.
   815f4:	 .........L...^.
   81604:	p.{.)...f.I.....
   81614:	*...d...........
   81624:	......X.f.1.e.o.
   81634:	O.@...........'.
   81644:	....f.........5.
   81654:	..0.;...~..!}"E!
   81664:	..s.<.........S.
   81674:	........".*.....
   81684:	....e.!.Z.@...<.
   81694:	;...........[.K.
   816a4:	................
   816b4:	Z...5.-...5.....
   816c4:	.. ...|.l...X.|.
   816d4:	b...... B"."l!. 
   816e4:	..1...q.....I...
   816f4:	..l.....D...V.-.
   81704:	..........s.....
   81714:	..........|.....
   81724:	........k.....z.
   81734:	........7.4...5.
   81744:	....-.:.....E...
   81754:	..Z..., z . ....
   81764:	x...u.......+.?.
   81774:	b.........n.U.Z.
   81784:	..O...1.....B...
   81794:	..G.Q.......3...
   817a4:	..c.7...[.l.O.c.
   817b4:	................
   817c4:	..........[.....
   817d4:	'..!.".#4#. "...
   817e4:	..Y.....2.......
   817f4:	..8.J.....=...i.
   81804:	).l.D...5...O...
   81814:	1.l...(...O...r.
   81824:	......a...K.J.7.
   81834:	..e.|.....f.r.N.
   81844:	..........).V.3.
   81854:	,.. .!......{...
   81864:	D.....^...-...G.
   81874:	............(...
   81884:	..^.c.z...8.".8.
   81894:	..7.q.......y...
   818a4:	..7.a.....x.....
   818b4:	..^.Y...w.j.....
   818c4:	w.N.....z.d...v!
   818d4:	.#.$.!..L.@...3.
   818e4:	..[.............
   818f4:	;.M.......q.Z...
   81904:	5.....s...e...^.
   81914:	..}.......V.%.o.
   81924:	e.R.~.B.~.E.....
   81934:	..G.B.......H.B.
   81944:	......a...|._ W"
   81954:	.!W.d.....2...~.
   81964:	y...4.......0...
   81974:	........8.......
   81984:	....^.Q.........
   81994:	..o.............
   819a4:	......>.7.M.Z...
   819b4:	................
   819c4:	..*.x...E.}!.".!
   819d4:	....z...}.E...5.
   819e4:	......q.........
   819f4:	q.m.........}...
   81a04:	..$.............
   81a14:	......u.?.......
   81a24:	..,.:...q.....n.
   81a34:	=.9.m.../.......
   81a44:	........n"I# "C.
   81a54:	C.^.....f.......
   81a64:	2.-...{.[...D...
   81a74:	....7.7.....Y...
   81a84:	......1.........
   81a94:	......l.....O...
   81aa4:	....o.....7...}.
   81ab4:	A.*.d.L...K...P.
   81ac4:	......}!?". ..q.
   81ad4:	..........".....
   81ae4:	......D.........
   81af4:	..%.$.....~...Z.
   81b04:	v.`.z.......E.|.
   81b14:	..........].T...
   81b24:	L.q.........I.x.
   81b34:	....).......>...
   81b44:	..4!.#.#{!......
   81b54:	............@...
   81b64:	`.....[.]...)...
   81b74:	~...............
   81b84:	(.N...c.o...K.S.
   81b94:	..8.....'.8.....
   81ba4:	1.1...v.........
   81bb4:	....f.....m.f.7.
   81bc4:	. /".!T.:.Z.@.F.
   81bd4:	..n.......Y.V.[.
   81be4:	....+.....5.k...
   81bf4:	..+.............
   81c04:	..p.U.W.........
   81c14:	..8...7.......h.
   81c24:	h.%.............
   81c34:	..g...a........!
   81c44:	9#+". /.....5.%.
   81c54:	..........1.f.8.
   81c64:	..c...I.@.......
   81c74:	............-.:.
   81c84:	.........._.....
   81c94:	......=.f.3.0...
   81ca4:	..........x.....
   81cb4:	A.A..........!."
   81cc4:	.!..5...e.....p.
   81cd4:	).......e...*...
   81ce4:	......R.........
   81cf4:	`...........j...
   81d04:	..9.....f...?...
   81d14:	....).......W.[.
   81d24:	..........L.C...
	...

00081ea4 <sample_0_nylonstrgtr_nguitrf2>:
   81ea4:	........s.......
   81eb4:	3...q.....i.....
   81ec4:	................
   81ed4:	.._.............
   81ee4:	..#.........V...
   81ef4:	....c.........A.
   81f04:	 .4.........A...
   81f14:	......Z.....#...
   81f24:	..m.G.$.{.1.Y...
   81f34:	Y.....D.....I...
   81f44:	F...b.#...>.m...
   81f54:	".W.........?...
   81f64:	..0...`.9.r.....
   81f74:	....`.p.O.......
   81f84:	..........F.#.x.
   81f94:	........F...C.F.
   81fa4:	..!......... ...
   81fb4:	l.$.....m.......
   81fc4:	......r.}.....6.
   81fd4:	H...,...9.....z.
   81fe4:	..@.>..........#
   81ff4:	.&./.0.1.6.=.F.J
   82004:	.O?S.T.WNY.U.T+S
   82014:	.O.R~LsH.M.L.J.I
   82024:	@F-@.8.3.-:#I...
   82034:	................
   82044:	....+.........T.
   82054:	..b.R......./...
   82064:	=...........c.\.
   82074:	......T.W...^...
   82084:	(...Q...w...!...
   82094:	....3.t.B.?.k.}.
   820a4:	J.".3.....S.....
   820b4:	.$b+.0.3.9.=jD.J
   820c4:	.J.M.N.L.N!L4K5N
   820d4:	}MaM.L}L.N.K=M.N
   820e4:	.FPB.>.7L3.-.%..
   820f4:	..g...n.a.K...@.
   82104:	m.......q.......
   82114:	K.............p.
   82124:	w.......@.......
   82134:	..l...0...{.....
   82144:	..............A.
   82154:	..............+.
   82164:	b.@.Q#U'.,.2.6.=
   82174:	-D.H.L.O.TUZ.].c
   82184:	.e%f.h.g.ehdXc~b
   82194:	.^.[.ZAV.S.R.M.I
   821a4:	.B.:.2p)G ......
   821b4:	............E...
   821c4:	..r.....2...|.).
   821d4:	........z.3...b.
   821e4:	'.........d.r...
   821f4:	..............T.
   82204:	......O.L...L...
   82214:	}.b.D.a.$.Y.....
   82224:	..[&j-.3.8v>8DbK
   82234:	.Q.U,Z2^.b1i#mOp
   82244:	Hs.u(v.s{q.p.mVk
   82254:	.i.e.b4`.\.Y.UmP
   82264:	.IECf<.4.-.$e...
   82274:	o...).P.........
   82284:	..../.Y.N.......
   82294:	....r...^...W.P.
   822a4:	..../...........
   822b4:	N...............
   822c4:	d.m.....%...a...
   822d4:	....(.y.7.....+.
   822e4:	.".'@-U1.3.7n<PA
   822f4:	PE.GXIUL.O.S^V.W
   82304:	s[9[5Y.V.S2Q.M_J
   82314:	.F.B.?.;Z8.4.0.+
   82324:	.%......y.P.....
   82334:	........K.......
   82344:	..f...T...'...t.
   82354:	....x.j...*.....
   82364:	......(.[.2...$.
   82374:	..].g. .........
   82384:	". ...X.....|...
   82394:	..^.......}".(.-
   823a4:	.4.:.>.B8E.IINBS
   823b4:	.V.X.Z.].agcZf,i
   823c4:	BkEk~i.f*c._.\.X
   823d4:	.STO.K.H$D.@.;>6
   823e4:	./&).!..C.q.w.:.
   823f4:	{.?...3.....J...
   82404:	............C...
   82414:	l.........s.....
   82424:	................
   82434:	i.....[.d...S...
   82444:	..5.............
   82454:	Q.......1.v.....
   82464:	... .#{&$)[,/1G5
   82474:	.7Y9.;x>LA.CYG.J
   82484:	.L.M.K.I8G.D.A.>
   82494:	j;.8;6.3.2./.,})
   824a4:	.%..%.........z.
   824b4:	....y.....o...-.
   824c4:	m.6.............
   824d4:	........G.+.K.4.
   824e4:	..m.h...........
   824f4:	I.*.B.I.........
   82504:	..=.t.#...{.....
   82514:	..h.....h.i.F.J.
   82524:	.#.'.*f,4.T1.4.7
   82534:	.9.;w==?EA.C[FKI
   82544:	HK.K.J.H.F.C<@.<
   82554:	49.5.2q0..v+.(.%
   82564:	| ..r...........
   82574:	h...`.Y.....u...
   82584:	..".....X...h...
   82594:	E.r.f.l...P.....
   825a4:	..G.>.....:...:.
   825b4:	=.....L...L.~...
   825c4:	..........,.....
   825d4:	"...#.8.H.......
   825e4:	........* @$=(.+
   825f4:	W/.2w5?8Y;.?5C.G
   82604:	.K.M.M M.L8J-H.E
   82614:	-C.@'?.=.<.:?9.6
   82624:	>3...*.&. J.p.D.
   82634:	n...............
   82644:	................
   82654:	............L...
   82664:	`...p...k.U.....
   82674:	..@.$.r.........
   82684:	....M.....1.....
   82694:	..4.`.........h.
   826a4:	....B...........
   826b4:	,..".$f'0*.-*2q6
   826c4:	.9*<4=.=R<.;?9.6
   826d4:	~4.2.0./...-.,.*
   826e4:	.'.$, ......?...
   826f4:	B...c...V.a.....
   82704:	....R.U...3.....
   82714:	..........M.....
   82724:	3...........i...
   82734:	H.......T.V...<.
   82744:	....z.h.........
   82754:	......j.....j...
   82764:	.. ...b.... `$s(
   82774:	.,;0f3d6.9.=.B.G
   82784:	.K.N.PRQ.Q$PsNUL
   82794:	BJUH.F.E[D.CSBE@
   827a4:	u=.9.5.0.+H&J O.
   827b4:	'.w.]...........
   827c4:	......K...".....
   827d4:	....G.......!...
   827e4:	3...!.#.....D...
   827f4:	#.........&.....
   82804:	6.v.......`.!...
   82814:	5.....".......U.
   82824:	..2.A...;.......
   82834:	..=.."7&"*...3K9
   82844:	0>.AWD.E.FdF@E.C
   82854:	.AI@.>.=.=L=n<1;
   82864:	79J6X2(..).$6...
   82874:	8..._...9.....m.
   82884:	....j.....4.F...
   82894:	........B.`.D.-.
   828a4:	..R.............
   828b4:	......+.1.....;.
   828c4:	............*...
   828d4:	v...o...t. .....
   828e4:	Z...u.L.M.P...G#
   828f4:	y'.+[.s1.4'9.=.C
   82904:	xG.K.M.N?O.NWMpK
   82914:	.H.FlD.C.B.@.?.=
   82924:	g;.8.3./.*e$....
   82934:	...._.D.....@...
   82944:	f...........i...
   82954:	....-...........
   82964:	&.A...........l.
   82974:	s.&.)...!...c.%.
   82984:	..4.a...;...x.j.
   82994:	......a...J.h.7.
   829a4:	....7...........
   829b4:	Q".&7*.-.1.6.;4A
   829c4:	*FoJ.M.PWQ.Q+Q.O
   829d4:	.M.KoJxI.H.HxGXF
   829e4:	vD.A'>3:.5.0.*^$
   829f4:	..o...V.-...E...
   82a04:	........m.h.....
   82a14:	......Y.j.4.D.z.
   82a24:	..%...U.........
   82a34:	....w.......]...
   82a44:	....K."...j.q...
   82a54:	......=...M...~.
   82a64:	........c.]...d.
   82a74:	..@ j#j&.)...2.7
   82a84:	$<8@gC.E.F.G.F.D
   82a94:	.Bk@.>.=.;-;t:.9
   82aa4:	17t4.1P-.(.#..3.
   82ab4:	..............U.
   82ac4:	s..... ...I.....
   82ad4:	........\.z.....
   82ae4:	....2.].Y...`...
   82af4:	......H.s.....y.
   82b04:	....$.......7...
   82b14:	8...........q...
   82b24:	<...1.......... 
   82b34:	.%.)8-.0W4.8.=.B
   82b44:	pG.KvO.R.S.TXT.R
   82b54:	.P.N.L.K.I.IMH.F
   82b64:	.E.B.?.<.7.2.,.&
   82b74:	k.......8._.....
   82b84:	............ ...
   82b94:	c...............
   82ba4:	L.6...9.........
   82bb4:	..#.Z.U.....6.u.
   82bc4:	u...Q...z...U.u.
   82bd4:	..>...p.....@...
   82be4:	..K.Q.)...Y.....
   82bf4:	?.4.....r".&@+U0
   82c04:	u5.:.=(A.C.D/E[D
   82c14:	.B*A.?I>w=.=.<.;
   82c24:	.:.9.7K4.0M,7'.!
   82c34:	_.4.D.....6...@.
   82c44:	..S.......J.....
   82c54:	..-.f.&.{.=...P.
   82c64:	..x.".q.......h.
   82c74:	....P.....b.....
   82c84:	..........}.....
   82c94:	@.[...w...../...
   82ca4:	......S.?.}.....
   82cb4:	...!)%B(.+u/.3.8
   82cc4:	D=.AqE.H.KfL.L.K
   82cd4:	6J?H.FPD.C)B5A.?
   82ce4:	^>.<N:17f3..O)W#
   82cf4:	........0.....D.
   82d04:	J.....%.........
   82d14:	..............0.
   82d24:	~.......T.n...L.
   82d34:	X.........f...q.
   82d44:	..G.x.g.........
   82d54:	..B...2.2.M.....
   82d64:	....p...........
   82d74:	..`.r.2 .$l(R-.2
   82d84:	.7.<hAyE.H.KGLoL
   82d94:	.KEJ.H.G.G.F8F.E
   82da4:	.D.C5B.?.<&9.40/
   82db4:	:).#..L...:.....
   82dc4:	Y...............
   82dd4:	....h.D.........
   82de4:	................
   82df4:	\.z...~.$.......
   82e04:	..)...3.........
   82e14:	M...F.....4.).u.
   82e24:	....N......... .
   82e34:	....-.|...."['.+
   82e44:	.075.9|=.@.B.C.D
   82e54:	 CvA.?^>a=y<.;.:
   82e64:	.9p8.6.4.1...)Y$
   82e74:	i.?... .....#.F.
   82e84:	....F.Q.W.z.....
   82e94:	....j.f...].Z...
   82ea4:	7...........D.e.
   82eb4:	%.q.A.=.E.".....
   82ec4:	......{.........
   82ed4:	........I.f.....
   82ee4:	........j... .I.
   82ef4:	Q......#.'.+x0N5
   82f04:	':.?.C.H.KuN1P.P
   82f14:	FP.O.MPLXK.J.I.H
   82f24:	.GvF.E.BE@.<g8,3
   82f34:	G-.'. ....r...H.
   82f44:	k...p.H.........
   82f54:	V.....).........
   82f64:	....^...&.....*.
   82f74:	9.......;.....A.
   82f84:	4.s.......2.0...
   82f94:	..L........... .
   82fa4:	..|.......G...!.
   82fb4:	..l.h.....3.. p%
   82fc4:	G*:/.4.8o<.?.A.B
   82fd4:	.B)B7AS@.?.?}>.=
   82fe4:	==v<^;.9.7.5w1.,
   82ff4:	.'1"....A.>.....
   83004:	q.......@.......
   83014:	............{...
   83024:	B.....V...o...Q.
   83034:	..I.......e.<...
   83044:	S.......q.......
   83054:	..W...........m.
   83064:	..s.....r...R.&.
   83074:	.. .....9".&=*..
   83084:	.2j7.;.?.C.F.H.I
   83094:	zI.HPG.E.D.C.BlA
   830a4:	X@.>r=.;c9K6c2.-
   830b4:	B(f"_...........
   830c4:	..7.C.I.I.J.o...
   830d4:	....X...g.......
   830e4:	R.......p.......
   830f4:	..z.l.......~.E.
   83104:	..1...]...q.....
   83114:	..8.....4.n...|.
   83124:	D.........9.-.[.
   83134:	a...>.^.p...*#.'
   83144:	.,.1O6.;c?.C.E.G
   83154:	.G.G5G.F.E]E.D.D
   83164:	.C.B.A.@<?.<.9.5
   83174:	(1.,.&. h.@.....
   83184:	..V...>.........
   83194:	..V.;.|.;.o.z.F.
   831a4:	......d...;.9.c.
   831b4:	......F.+.......
   831c4:	...."...........
   831d4:	..Q.....1.......
   831e4:	......&.......Q.
   831f4:	......*...e.W.z 
   83204:	.$.(=-.1.5.9.;.=
   83214:	.=_=.<.;.:=:q9.8
   83224:	.7.6.5.4H3.0.-2*
   83234:	.%. ..-.........
   83244:	'...[.....:.....
   83254:	|.k.|.......B.?.
   83264:	..e.......f...P.
   83274:	7...,...0.......
   83284:	....S.........'.
   83294:	8...........C...
   832a4:	 .....D...,.....
   832b4:	....9.......[#.'
   832c4:	V,.0P5.9A>.B.D.F
   832d4:	.G.H.G.G|F.EVE.D
   832e4:	.C CBB*A.?.=.:.7
   832f4:	.2>..(.#......|.
   83304:	m...#.w...<...#.
   83314:	..'.........F...
   83324:	}...k...........
   83334:	..S.3.:.....+.m.
   83344:	L.a.....N.....G.
   83354:	}.p...'...c.R.Q.
   83364:	k...............
   83374:	c.........o.....
   83384:	...!.%b*./.3]6.8
   83394:	8:.:.;.:.:.:f:.:
   833a4:	.9}9K9.8.7;6.4H1
   833b4:	.-.)_%. ........
   833c4:	........y.{.}.s.
   833d4:	........X.|.L...
   833e4:	..r.......e.....
   833f4:	..P.2.i.........
   83404:	..F.............
   83414:	........O.......
   83424:	....m.=.f.......
   83434:	..........O.?.f.
   83444:	.".&.+./.3.7.:)=
   83454:	.>.?.?.>a>.=.=.<
   83464:	h<.;V;.:.9j7.5.2
   83474:	..R*.%. z.|...~.
   83484:	y...P...}.,.....
   83494:	F...............
   834a4:	......H.M.....*.
   834b4:	....t.W.......:.
   834c4:	0.i.............
   834d4:	x......._.1.K...
   834e4:	........F.0.{.-.
   834f4:	..w.....$.u...`.
   83504:	...!.&.+u0.4.8.;
   83514:	.=.?.?'@X@.@.@.@
   83524:	.@.@|@I@.?T>.<E:
   83534:	I7.3./.+z&.!....
   83544:	..B.....y.O.1. .
   83554:	......o.}... ...
   83564:	v.N.............
   83574:	....0...i.......
   83584:	K.*.R...0...E...
   83594:	......4...h.....
   835a4:	h...y.....@.'.t.
   835b4:	........{.......
   835c4:	..@....#%(.,=0 3
   835d4:	,5]6.7h7.7.7.7.7
   835e4:	.7.7.7D7.6|5.3.1
   835f4:	..V+c'.#s.......
   83604:	*...7...........
   83614:	........).......
   83624:	Y.h...?.q.6.....
   83634:	Q.......~...F...
   83644:	....W.J.........
   83654:	B...Z...........
   83664:	......s.....3...
   83674:	E...../.h.....4.
   83684:	...!.%.*./.4%8U;
   83694:	.=0?.@.@.@.A.A.A
   836a4:	.A.A.A.@9@.?g=.;
   836b4:	a8.5.1.,%(.# ...
   836c4:	..G...4...m.:...
   836d4:	............Z...
   836e4:	..U...0...u.....
   836f4:	....q...........
   83704:	).*.O...V.......
   83714:	............Z.4.
   83724:	....:.........=.
   83734:	....@.f.......L.
   83744:	..F......$.(,-.0
   83754:	b3I5.6d7.8r8.8.9
   83764:	`9.9#:a:U:.9.8.6
   83774:	.4.1b..*z&["e...
   83784:	 ...{.i.{.......
   83794:	..?.c.........y.
   837a4:	..b.........$.m.
   837b4:	............z.y.
   837c4:	;.Z...0...,.5...
   837d4:	_._.....D.W.....
   837e4:	 .....}.2.O.....
   837f4:	..&.:.9.....-.>.
   83804:	a...G..!.&>+p/.2
   83814:	.5R7.8f9.9.9.: :
   83824:	5:^:.:.:O:.9Z8|6
   83834:	.4-1.-.).%T!,.5.
   83844:	z...g.......{.~.
   83854:	~.u.T.(...Q...2.
   83864:	!...+.....a...&.
   83874:	+...#.;.....V.0.
   83884:	..#...7...U.X...
   83894:	3...l.Q.....K...
   838a4:	....%...z...w...
   838b4:	..S.....).u...*.
   838c4:	.........#.(.-t1
   838d4:	.4.6.8.9.:.;.;.;
   838e4:	q<.<x=.=.>.=.<.;
   838f4:	.9.7.3x0.,.(.$.!
   83904:	.. .............
   83914:	................
   83924:	....U.....a.....
   83934:	......j...n...a.
   83944:	......{.........
   83954:	y...............
   83964:	~.........P...-.
   83974:	................
   83984:	$.N...Q....!A&,*
   83994:	Q-./`1|2H3.3.4W4
   839a4:	.4.5.556c6P6.5u4
   839b4:	.2]0`-.)U&."..9.
   839c4:	....v.d.l.....L.
   839d4:	......!.9...>...
   839e4:	........[.T.....
   839f4:	............W. .
   83a04:	..-...`.........
   83a14:	......".1.....`.
   83a24:	..F.........4...
   83a34:	......%.N.\.Q.}.
   83a44:	....@......$0)j-
   83a54:	.0s3Z5.6.7B8.8.9
   83a64:	c9.9.:.;w;.;#;":
   83a74:	.8E6|3D0.,.(N%.!
   83a84:	5.............6.
   83a94:	m...............
   83aa4:	......P.e...y...
   83ab4:	..n.......S.h...
   83ac4:	<.E.....#.>...j.
   83ad4:	..T...s...=...4.
   83ae4:	................
   83af4:	................
   83b04:	..>...Z.>.... .%
   83b14:	.(.+.../.1.1.2.3
   83b24:	.3.4k5E6.6P7V7.6
   83b34:	~5.3[1..Y+.(.$[!
   83b44:	>.h.......n...k.
   83b54:	..L.......".....
   83b64:	....X...........
   83b74:	....t.5.B.....S.
   83b84:	....M.......F...
   83b94:	......3.u...,.,.
   83ba4:	N.^.Z.O.\.......
   83bb4:	i...............
   83bc4:	......7.....2!z%
   83bd4:	C)Q,..|0.1.2"3.3
   83be4:	.4.4n5=6.6V7.7.7
   83bf4:	.6z4G2./.,7).%y"
   83c04:	D.4.S.x.....v...
   83c14:	....I.......0...
   83c24:	v.b.....J.u.G...
   83c34:	#......._...W...
   83c44:	..z.g...4.O.h...
   83c54:	....m...W.......
   83c64:	................
   83c74:	..O.............
   83c84:	..A.{...........
	...

00083ca4 <nylonstrgtr_samples>:
   83ca4:	............EX.E
   83cb4:	..0..........k..
   83cc4:	...."...n...\...
   83cd4:	(............E..
   83ce4:	-...M...R....q..
   83cf4:	-...M...H...(...
   83d04:	..............;D
   83d14:	..8..........k..
   83d24:	...."...n...\...
   83d34:	(............E..
   83d44:	-...M...R....q..
   83d54:	-...M...H...(...
   83d64:	............I.JD
   83d74:	.......... ..k..
   83d84:	...."...n...\...
   83d94:	(............E..
   83da4:	-...M...R....q..
   83db4:	-...M...H...(...

00083dc4 <sample_1_vibraphone_vibese2>:
   83dc4:	....-.>.X.n.....
   83dd4:	{.........}...}.
   83de4:	}.......}.......
   83df4:	............q...
   83e04:	....9...(6.gHv.G
   83e14:	......#...~...D.
   83e24:	....c..)W=....a.
   83e34:	..A..!.11."...9.
   83e44:	6.G..E.B....d.0.
   83e54:	..8'.7......K...
   83e64:	.(.6r1.#.......5
   83e74:	.I.;..&.0.......
   83e84:	.#..........h..%
   83e94:	."..W...4...H.>$
   83ea4:	..t.S.....p."...
   83eb4:	....B...'.......
   83ec4:	a...........z...
   83ed4:	H...........@...
   83ee4:	]...^.... ."..i.
   83ef4:	1...@.!.+.......
   83f04:	8.e..$.3+6.1M.H.
   83f14:	+&......c.......
   83f24:	}...X...E...m...
   83f34:	N...1.).........
   83f44:	....Y.(.........
   83f54:	..).c.5.....y...
   83f64:	................
   83f74:	............m...
   83f84:	1..0h6......n...
   83f94:	S .............9
   83fa4:	.6X%.#P......%V-
   83fb4:	.1t!..%.........
   83fc4:	....y...s.......
   83fd4:	......}.f.v.....
   83fe4:	K...T..._.U.....
   83ff4:	=...-.J...>./.{.
   84004:	..C...6...J.....
   84014:	..B........(_.t.
   84024:	....3&{..7.4.#W.
   84034:	..=..#.9+/E.....
   84044:	w"8&.9.I.?U-....
   84054:	....#&9.....B...
   84064:	....V.H...X.2.-.
   84074:	......S.........
   84084:	h.....-.y.....U.
   84094:	............t...
   840a4:	........T.......
   840b4:	....V.@.....k))0
   840c4:	.5.-"#`....)!;.A
   840d4:	.*..u....".4]?@8
   840e4:	Y%q....!.+~7z6.&
   840f4:	*.3.P.....Y ..V.
   84104:	..e.......A.d...
   84114:	..;.....O.......
   84124:	_...<.....(.....
   84134:	....W.....f.|...
   84144:	?.N.........b...
   84154:	........*.......
   84164:	...3.B/=.'..O.g.
   84174:	U4.>.F.86.>.#..3
   84184:	 ;@=l8}).......$
   84194:	.=88............
   841a4:	..r.......=.O...
   841b4:	t.".....5.8.....
   841c4:	........8...t.u.
   841d4:	....O.}.........
   841e4:	....N.z...o.....
   841f4:	....@...o..1.6.-
   84204:	....6$.,mB.R.GA+
   84214:	.....$.=">.3.(w 
   84224:	s.L..(;;.=.4Y!..
   84234:	..........l...0.
   84244:	............T...
   84254:	..*.....N.n...B.
   84264:	p.........H.....
   84274:	....,.......]...
   84284:	U.....L...|.....
   84294:	......g.!.n...^,
   842a4:	.B.JpG.3.#=/.@3O
   842b4:	OJ.=.-U . v'Y6.>
   842c4:	.=#/......Y..-<5
   842d4:	.*........C.....
   842e4:	......D.......).
   842f4:	D...}.....F...E.
   84304:	l...#.....E.....
   84314:	I.1.%.......*...
   84324:	................
   84334:	..}....#%0.8.4m)
   84344:	.+!;2J.T.KD@.9.8
   84354:	.?~A.A.9h-%(P*.1
   84364:	.5.7.0.).%@....%
   84374:	?,.#....%.^.....
   84384:	\.....<.;.l..._.
   84394:	..R...;.......=.
   843a4:	..|...U.).].(...
   843b4:	....u...:.....!.
   843c4:	................
   843d4:	....}.q.........
	...

000845c4 <sample_0_vibraphone_vibese2>:
   845c4:	....-.>.X.n.....
   845d4:	{.........}...}.
   845e4:	}.......}.......
   845f4:	............q...
   84604:	....9...(6.gHv.G
   84614:	......#...~...D.
   84624:	....c..)W=....a.
   84634:	..A..!.11."...9.
   84644:	6.G..E.B....d.0.
   84654:	..8'.7......K...
   84664:	.(.6r1.#.......5
   84674:	.I.;..&.0.......
   84684:	.#..........h..%
   84694:	."..W...4...H.>$
   846a4:	..t.S.....p."...
   846b4:	....B...'.......
   846c4:	a...........z...
   846d4:	H...........@...
   846e4:	]...^.... ."..i.
   846f4:	1...@.!.+.......
   84704:	8.e..$.3+6.1M.H.
   84714:	+&......c.......
   84724:	}...X...E...m...
   84734:	N...1.).........
   84744:	....Y.(.........
   84754:	..).c.5.....y...
   84764:	................
   84774:	............m...
   84784:	1..0h6......n...
   84794:	S .............9
   847a4:	.6X%.#P......%V-
   847b4:	.1t!..%.........
   847c4:	....y...s.......
   847d4:	......}.f.v.....
   847e4:	K...T..._.U.....
   847f4:	=...-.J...>./.{.
   84804:	..C...6...J.....
   84814:	..B........(_.t.
   84824:	....3&{..7.4.#W.
   84834:	..=..#.9+/E.....
   84844:	w"8&.9.I.?U-....
   84854:	....#&9.....B...
   84864:	....V.H...X.2.-.
   84874:	......S.........
   84884:	h.....-.y.....U.
   84894:	............t...
   848a4:	........T.......
   848b4:	....V.@.....k))0
   848c4:	.5.-"#`....)!;.A
   848d4:	.*..u....".4]?@8
   848e4:	Y%q....!.+~7z6.&
   848f4:	*.3.P.....Y ..V.
   84904:	..e.......A.d...
   84914:	..;.....O.......
   84924:	_...<.....(.....
   84934:	....W.....f.|...
   84944:	?.N.........b...
   84954:	........*.......
   84964:	...3.B/=.'..O.g.
   84974:	U4.>.F.86.>.#..3
   84984:	 ;@=l8}).......$
   84994:	.=88............
   849a4:	..r.......=.O...
   849b4:	t.".....5.8.....
   849c4:	........8...t.u.
   849d4:	....O.}.........
   849e4:	....N.z...o.....
   849f4:	....@...o..1.6.-
   84a04:	....6$.,mB.R.GA+
   84a14:	.....$.=">.3.(w 
   84a24:	s.L..(;;.=.4Y!..
   84a34:	..........l...0.
   84a44:	............T...
   84a54:	..*.....N.n...B.
   84a64:	p.........H.....
   84a74:	....,.......]...
   84a84:	U.....L...|.....
   84a94:	......g.!.n...^,
   84aa4:	.B.JpG.3.#=/.@3O
   84ab4:	OJ.=.-U . v'Y6.>
   84ac4:	.=#/......Y..-<5
   84ad4:	.*........C.....
   84ae4:	......D.......).
   84af4:	D...}.....F...E.
   84b04:	l...#.....E.....
   84b14:	I.1.%.......*...
   84b24:	................
   84b34:	..}....#%0.8.4m)
   84b44:	.+!;2J.T.KD@.9.8
   84b54:	.?~A.A.9h-%(P*.1
   84b64:	.5.7.0.).%@....%
   84b74:	?,.#....%.^.....
   84b84:	\.....<.;.l..._.
   84b94:	..R...;.......=.
   84ba4:	..|...U.).].(...
   84bb4:	....u...:.....!.
   84bc4:	................
   84bd4:	....}.q.........
	...

00084dc4 <vibraphone_samples>:
   84dc4:	.E.............E
   84dd4:	..........@..c..
   84de4:	....!...n...[}..
   84df4:	. ..............
	...
   84e10:	.2.......... ...
   84e20:	.....=..........
   84e30:	...E..........@.
   84e40:	.c......!...n...
   84e50:	.4... ..........
   84e60:	................
   84e70:	.2.......... ...
   84e80:	....

00084e84 <sample_2_piano_kpianodx5>:
   84e84:	....!.x.........
   84e94:	....[.|.G.i.B.k.
   84ea4:	Q.f.>.7.........
   84eb4:	................
   84ec4:	........w.l.p.|.
   84ed4:	..........B.r.m.
   84ee4:	w...............
   84ef4:	................
   84f04:	*.L.....<...x.".
   84f14:	..,.....o.....B.
   84f24:	/...4...9.w.8...
   84f34:	)......,....M.d.
   84f44:	..N........5.B>X
   84f54:	."..?...j.w.....
   84f64:	31.PPp.h+(-.....
   84f74:	....s....5.5JS.M
   84f84:	......>...2.:.=.
   84f94:	D.u/.R(9s..... .
   84fa4:	q...@......+-J..
   84fb4:	K.........Q....,
   84fc4:	.'.HNR0"........
   84fd4:	>...q.Z"..=E.D.'
   84fe4:	..7._.T.p.......
   84ff4:	.#<I.I..../.....
   85004:	.....!.#.H.M.V..
   85014:	..S.......$.O.M)
   85024:	.H.i.Z..I...w...
   85034:	......`' 6Jv.Kv.
   85044:	..........[.-...
   85054:	.'.Xn&..h.......
   85064:	......-..8.Nc.q.
   85074:	....%.......c...
   85084:	.K.d.(....W.....
   85094:	.........P.PA5..
   850a4:	........2...V...
   850b4:	,C.&|.........-.
   850c4:	......d,0N.@..a.
   850d4:	........D.&.....
   850e4:	'L.O.!..........
   850f4:	<...e....GPG.(;.
   85104:	I%..O...\.Y.F.u.
   85114:	sGF7u.3.W.y.5...
   85124:	..M.C..:q`.O.)."
   85134:	..0...7.W.b...i.
   85144:	.\.A?3J..+......
   85154:	..d.4...}Q.:.(.)
   85164:	.,r.....=......E
   85174:	CN.C..V-........
   85184:	d...o.pG.V.;...2
   85194:	..*.4.@..._....=
   851a4:	.YL%...%l.....:.
   851b4:	:.x.3.%B.Q. $$/'
   851c4:	e...+.......N..U
   851d4:	.K*%./.!N.....\.
   851e4:	Z...y..\`M.+@?. 
   851f4:	..M.......6.E.LX
   85204:	.:k/.1W...z...0.
   85214:	g.f.'(B].:.:.0..
   85224:	m...f........3.N
   85234:	.A@9+B......&...
   85244:	.....6.B.;-/a> .
   85254:	X.$..........4.M
   85264:	u9.Bo>0.........
   85274:	|....2_O.9.N.@Q.
   85284:	..".".......Q5.>
   85294:	+=.N.;..........
   852a4:	.....5G7.<SN..Q.
   852b4:	....S......../.3
   852c4:	XCsM.4......d.C.
   852d4:	.....,./.MuE.=..
   852e4:	........~.R.M&.3
   852f4:	.F.B.2..M...@.\.
   85304:	......Q@.E}R./..
   85314:	..m.`.|.....C..4
   85324:	.B.Oj+t.....>.q.
   85334:	....4".0;I.J.%..
   85344:	+...6.........4,
   85354:	VG.G.._.-.......
   85364:	..O.....YL.BL#!.
   85374:	..4.&..........2
   85384:	QR.A.%..........
   85394:	+......;.L.B....
   853a4:	..........Z....<
   853b4:	MH4<....7.A...p.
   853c4:	W.'.U..3.M.1y.T 
   853d4:	.. ............9
   853e4:	.R.+&.y#....}...
   853f4:	..7...]D.M.+.!.#
   85404:	..a.d.&.....3.oF
   85414:	.E.%.%@...t.....
   85424:	..... FNnE.*.*3&
   85434:	;.A.....H.z..$.P
   85444:	.<.-A&.'`...-.x.
   85454:	....B&.Ga92)7)l$
   85464:	......5...T.;..D
   85474:	9=.*r6!$z.......
   85484:	.....,"B.7.,.7.%
   85494:	#............*.C
   854a4:	`1.1.9.%..:...m.
   854b4:	*.+.'0s@.1+3i8.!
   854c4:	h...X.......Q3_;
   854d4:	./%7.7.$S.......
   854e4:	....Y/.5.,.4.3. 
   854f4:	..X.....}._.A0w1
   85504:	.2.4&<......R...
   85514:	%....,...1.48?..
   85524:	....k........(.0
   85534:	.+p9O:..t.g.A...
   85544:	w.w..'...)Z<.6..
   85554:	&.N.........P',(
   85564:	.-.=.5'.6.......
   85574:	'...:'.%.,.=.0..
   85584:	@...J.K.....u#.#
   85594:	^/E>./....#.....
   855a4:	.....!.#.5;@82 .
   855b4:	..f............#
   855c4:	.7.C.0..R.#.....
   855d4:	....`..'.84E.+{.
   855e4:	v...#...-...../'
   855f4:	.=.CU*a.......U.
   85604:	....^..#=?|=.(..
   85614:	m./.....;......&
   85624:	.?/<N)H.*.}.....
   85634:	.......*.@.:p+..
   85644:	..%.......j....-
   85654:	??R8.)..........
   85664:	.......0.=E:.(..
   85674:	..........=.D..0
   85684:	.;.7.%..v.......
   85694:	....h.M/.=.5f)..
   856a4:	....5...&.n.@.t1
   856b4:	X?.5.+..;...U...
   856c4:	&...&..3.;.4.*..
   856d4:	....w.......K..1
   856e4:	&8.3.*..........
   856f4:	.......0.5.2.)..
   85704:	..'.#...z.K.D..1
   85714:	.482.(..........
   85724:	......31.5.4;.<.
   85734:	o.T.p.f.@...o..0
   85744:	.7.2./(.X...[...
   85754:	f.....P2I5.3./..
   85764:	.........."...v1
   85774:	.3.6x2..R...)...
   85784:	..D...P1.2.8.1|.
   85794:	........7.+..!.0
   857a4:	.3.;.-....9...f.
   857b4:	j.D.F"T.N2K<c,..
   857c4:	4.........B..!T*
   857d4:	.4.:.,........,.
   857e4:	n.@.!"c).6.:.-..
   857f4:	&...A.......X..+
   85804:	t6.>.+G.q.].q...
   85814:	..D....(.4.=.'..
   85824:	=..............&
   85834:	%7&=<%..Y...%.!.
   85844:	.......&.9S>.#..
   85854:	..&.....g.I.@..'
   85864:	.:.<H"+.......g.
   85874:	..8....(.<.:!"..
   85884:	N..............)
   85894:	.;Y:....a...%...
   858a4:	K.&.J..,_<.<..M.
   858b4:	......P.t......,
   858c4:	">.8E...+.K.S...
   858d4:	Q...1.7,.?+8..#.
   858e4:	......9.......d,
   858f4:	.>.5..).O...r...
   85904:	......R-.>.3..f.
   85914:	..!...4...%...k0
   85924:	.?.0[...j.....f.
   85934:	6......4f=.0....
   85944:	S.../..........4
   85954:	.;'/..........j.
   85964:	......C2|;.+....
   85974:	........k.....#4
   85984:	N:%*......-.f.,.
   85994:	d......4.8.+..L.
   859a4:	......z...C._..4
   859b4:	*7.+......p.I...
   859c4:	..q.. p5.6|+..c.
   859d4:	........A......5
   859e4:	-3>-..d...R.....
   859f4:	..... t3.4.+7...
   85a04:	..e...G.T.d..".0
   85a14:	f4.(..........*.
   85a24:	....H".1.4.)....
   85a34:	..........U..!.2
   85a44:	,3.*....D...l...
   85a54:	!...."x0.1f*....
   85a64:	..M.....b.i.y".0
   85a74:	`1.+@.......".G.
   85a84:	.....".0/0.+..N.
   85a94:	..A.8.=.Z.5.."1-
   85aa4:	.1.(..~...4.W.Y.
   85ab4:	i.(..".,.1.'S...
   85ac4:	......6...... 9.
   85ad4:	.0I)............
   85ae4:	....P D/.1.*..E.
   85af4:	....../.....s".-
   85b04:	`2>(..A...p.....
   85b14:	!.... .,.1.'q...
   85b24:	..T.....f.....!-
   85b34:	.1.%p...........
   85b44:	.......+"3.!a...
   85b54:	..).c.........`-
   85b64:	L2.!....t.O.j.D.
   85b74:	`......1.1f#Q...
   85b84:	..).....p.Z.p .1
   85b94:	p0$!......[.z...
   85ba4:	..B.[!./b09 ....
   85bb4:	}.........}.."L0
   85bc4:	... ..n...B...F.
   85bd4:	....."././X.F.V.
   85be4:	$.....M......#./
   85bf4:	90N.........:...
   85c04:	..g..".0.,....@.
   85c14:	..........1..!.0
   85c24:	.)d.....\.Z.....
   85c34:	A.M..$z.`+x.....
   85c44:	....(.&.J.|..%P-
   85c54:	@+C.....<.D.....
   85c64:	..z..#E-O(x.....
   85c74:	s.......d.7.."8-
   85c84:	.(......)...c.h.
   85c94:	..k..$.._'......
   85ca4:	............u$..
   85cb4:	\$....~.......D.
   85cc4:	....h%~,."X.l...
   85cd4:	n.....7......'.)
   85ce4:	.#..I...4.....!.
   85cf4:	..%.F'f)I#1.@...
   85d04:	H.......@....&.*
   85d14:	\"..2...........
   85d24:	..c..&V)'#....=.
   85d34:	=...7...{.k.O&.'
   85d44:	.!..q.n.......D.
   85d54:	V....&.'y"..S.^.
   85d64:	..........5..'.%
   85d74:	.$........k...V.
   85d84:	.....'.#i%#.^.(.
   85d94:	$.k..........#.&
   85da4:	."e........."...
   85db4:	.....!.'."X.'...
   85dc4:	......S.t...A"3%
   85dd4:	.!..!.6.........
   85de4:	....."J$. ......
   85df4:	....w...t....!I#
   85e04:	. ......2.......
   85e14:	.....!+"."@.....
   85e24:	4.......?.p..!.$
   85e34:	i"............P.
   85e44:	n.-.M..&. ..N...
   85e54:	..............e$
   85e64:	........w...F...
   85e74:	2.7.^!."8!..,...
   85e84:	....I.........."
   85e94:	. ..K.......E...
   85ea4:	,...S..". ..R...
   85eb4:	.._...........-$
   85ec4:	. b.p...(.p.....
   85ed4:	..g.D..&....O.+.
   85ee4:	t.......D.-.}..%
   85ef4:	....!.....c.X...
   85f04:	x.q.>!.#..a.....
   85f14:	..........5.."."
   85f24:	..I.\...,.......
   85f34:	.....!."........
   85f44:	+.......H.@.-!."
   85f54:	......a.A.....$.
   85f64:	..q.+".!......=.
   85f74:	q.(.......... .!
   85f84:	....T.......l.<.
   85f94:	X.... ..R...=...
   85fa4:	........|.U.. &.
   85fb4:	..U.G...4.d...'.
   85fc4:	_...........+.x.
   85fd4:	......@.....{...
   85fe4:	....F...[...$...
   85ff4:	....G...........
   86004:	..+.8.....q.....
   86014:	W...[.........h.
   86024:	I...b...~...1.0.
   86034:	............{.V.
   86044:	-...{...w.......
   86054:	*.........L...`.
   86064:	E...$...:.......
   86074:	..f...f.....H...
   86084:	......".....H.*.
   86094:	E.......j.U.!.'.
   860a4:	................
   860b4:	....S. ...&.....
   860c4:	J.........1.-.".
   860d4:	............s...
   860e4:	..(.....o.=...".
   860f4:	..L.6.....\.t...
   86104:	K.J.........Z...
   86114:	....... ..H...G.
   86124:	Z.....}.-.......
   86134:	..F.........3.U.
   86144:	..F...G.\.......
   86154:	..B...R.y...=.L.
   86164:	L.......s...p...
   86174:	....8.....o.u...
   86184:	E.7.....R.......
   86194:	..t...x...h.....
   861a4:	....0.-.h.J...e.
   861b4:	......9.........
   861c4:	..z.......U.....
   861d4:	....~.F...0.....
   861e4:	..`.....v.......
   861f4:	....6.`.&.;.....
   86204:	..2.*.]...d...q.
   86214:	..&.d.c.......y.
   86224:	....l.8.C.J.....
   86234:	..j.............
   86244:	...... .....9...
   86254:	?.w.....}...I...
   86264:	).......'.f.'...
   86274:	8.O.1.....`...=.
   86284:	..........:.....
   86294:	..........!.....
   862a4:	W.i.n.b.T...[.?.
   862b4:	..o.s.<.Y.F...[.
   862c4:	....e.E...>.p.x.
   862d4:	9.b.&.h.....A...
   862e4:	!.../.........1.
   862f4:	........../...x.
   86304:	R.........|.k...
   86314:	P...U.....5.....
   86324:	0.-...x...].....
   86334:	1.......H.*.....
   86344:	..x...........W.
   86354:	..........s...%.
   86364:	..V...z.......H.
   86374:	..j.......m.....
   86384:	<.......0.....9.
   86394:	B."...9.........
   863a4:	....f...d.......
   863b4:	............m.).
   863c4:	......h.......T.
   863d4:	............B...
   863e4:	 .....z...6...!.
   863f4:	..........;.7...
   86404:	..........1.(...
   86414:	......X.1...'...
   86424:	....S.......e...
   86434:	....2.....a.#. .
   86444:	q.....\...q.h...
   86454:	....-.......t...
   86464:	..p.z.}...g.....
   86474:	..s...W.;...n...
   86484:	-.............+.
   86494:	....3...........
   864a4:	,.........2.....
   864b4:	f...........s...
   864c4:	8.....I.....0.m.
   864d4:	............Q...
   864e4:	....{.7.I...Z...
   864f4:	......K.....x.T.
   86504:	............&.k.
   86514:	......Z...+...W.
   86524:	%.<.o.#......._.
   86534:	......Y...!.....
   86544:	L...'.u. .!...{.
   86554:	x.N.....l.^...N.
   86564:	Q.....}.....#...
   86574:	i...~.I.......;.
   86584:	..p.s.X....."...
   86594:	o.N...&...)...I.
   865a4:	].G.).r.......E.
   865b4:	..*...i.......|.
   865c4:	s...2.......o.e.
   865d4:	........s.!.....
   865e4:	W.9...a.........
   865f4:	..R.f...W.\.....
   86604:	..........).....
   86614:	....,.^.$.......
   86624:	........7.U...{.
   86634:	................
   86644:	M.r...8.......$.
   86654:	#...L...........
   86664:	..C.......%...o.
   86674:	....%.........~.
   86684:	......9.......).
   86694:	......T.\.8.D...
   866a4:	........{...!./.
   866b4:	\.c...S.........
   866c4:	..@.w.&...-.....
   866d4:	O.......k...P.n.
   866e4:	0.........i.7...
   866f4:	j.a...5.....>...
   86704:	>...^.^...5.~.v.
   86714:	......a.....2...
   86724:	....-.......u...
   86734:	....P...|.......
   86744:	|...u.......a...
   86754:	....c.f.........
   86764:	Y.7.i...,.....9.
   86774:	}.1.......v...!.
   86784:	.. .[.G.........
   86794:	..Y.....[...0...
   867a4:	......S.....'.I.
   867b4:	s...U.........f.
   867c4:	..2...L.P. .....
   867d4:	....N.w.s.....`.
   867e4:	........f.{.....
   867f4:	......8.:.....5.
   86804:	@.............L.
   86814:	............N...
   86824:	S.{.............
   86834:	................
   86844:	..k.U.....*...6.
   86854:	..Y.D...........
   86864:	........V.~.....
   86874:	........+...?...
   86884:	..4.B...Y...H...
   86894:	`.....p.<.l.....
   868a4:	......].........
   868b4:	:.i.g...a.k.....
   868c4:	P...^.....s.;...
   868d4:	..U...R.........
   868e4:	..U.6.......5...
   868f4:	g.".......\...f.
   86904:	W...S.R.........
   86914:	................
   86924:	Z...<.4.N.a.....
   86934:	........E...).8.
   86944:	N.........A.....
   86954:	&.{.....V.....4.
   86964:	4.....k.....#.L.
   86974:	..X.2...G.......
   86984:	=.........L.;...
   86994:	....5...h...y...
   869a4:	........P.....p.
   869b4:	3...}...........
   869c4:	,...............
   869d4:	..\.....+...u...
   869e4:	....h.....a.....
   869f4:	g.s.X...p.c.[.+.
   86a04:	J.......9.....|.
   86a14:	U.?.....1.'.(.1.
   86a24:	..X.....q.....}.
   86a34:	......_.....<.y.
   86a44:	............3...
   86a54:	..h.W.......j...
   86a64:	..:...=.`.......
   86a74:	..z.f.B...3.,...
   86a84:	..d..._...@.....
   86a94:	G...c...K.C...K.
   86aa4:	L.F...........K.
   86ab4:	......8.......$.
   86ac4:	................
   86ad4:	..........l.D...
   86ae4:	..".......q.f...
   86af4:	O...8.v.....{...
   86b04:	..9.....).......
   86b14:	......2.i.O.s...
   86b24:	................
   86b34:	4...........F...
   86b44:	D.........L.....
   86b54:	..W.*...q.T...p.
   86b64:	....=...<.E.....
   86b74:	..Y.............
   86b84:	....^.........E.
   86b94:	....W...M...).{.
   86ba4:	......L.....e...
   86bb4:	-...c.%.[.j...w.
   86bc4:	3.H.....E...T...
   86bd4:	....R.....r...m.
   86be4:	..~.^...........
   86bf4:	..?...9.....4...
   86c04:	7.......v.I.....
   86c14:	....B.....O.....
   86c24:	/...f.z.........
   86c34:	......B.v.......
   86c44:	..,.].>.I.V.....
   86c54:	+...b.!.........
   86c64:	....r.Z.....7.o.
   86c74:	....;...7.6.....
   86c84:	....o.........e.
   86c94:	............L...
   86ca4:	..v.......h.....
   86cb4:	Z.......i.......
   86cc4:	..F.b.Z.........
   86cd4:	................
   86ce4:	f. .X.....3.....
   86cf4:	..0.........a.D.
   86d04:	..?.......I.W...
   86d14:	0.C.e.:._...B...
   86d24:	..U.....\.a...=.
   86d34:	D.O...&...Q...7.
   86d44:	....4./.'...D.`.
   86d54:	..M.....[.......
   86d64:	......E.....l...
   86d74:	....T...z.....a.
   86d84:	].......n.r...=.
   86d94:	..:.{...Z.......
   86da4:	..v.......5.".z.
   86db4:	....@...N.6...N.
   86dc4:	..G.>.\...".w.\.
   86dd4:	q...........2...
   86de4:	4.....5.....c...
   86df4:	V.i.....F.U...c.
   86e04:	..h...S.*.......
   86e14:	......%.........
   86e24:	....).y.......N.
   86e34:	<.S.............
   86e44:	....T.........4.
   86e54:	..[.;.......8...
   86e64:	....../.........
   86e74:	......C.H...<.K.
   86e84:	..Q...#.........
   86e94:	../.[...h.R...a.
   86ea4:	....o...........
   86eb4:	z.V.c.0.-.!.h...
   86ec4:	>.....c...\.....
   86ed4:	..u...$...t.6.P.
   86ee4:	....b.........Z.
   86ef4:	(.o...!...5.&...
   86f04:	".v.......].S...
   86f14:	&...0.......g...
   86f24:	`.....-....... .
   86f34:	......=.....r.M.
   86f44:	......N.".....M.
   86f54:	....../...L.p.Z.
   86f64:	........K.:.....
   86f74:	C...7.....e.....
   86f84:	h.......I.......
   86f94:	....@...........
   86fa4:	..z.............
   86fb4:	g...F.....2.....
   86fc4:	....v.x.....6...
   86fd4:	....).T.!...#.*.
   86fe4:	..6.m.`.......x.
   86ff4:	&.....Z.....h._.
   87004:	..d.....m.^.....
   87014:	e.N.%.......#._.
   87024:	....F.....n...K.
   87034:	f.....l.L.T...(.
   87044:	B.......".'.A.a.
   87054:	..b.B.p.X.<.U...
   87064:	........k.....5.
   87074:	p...Y.......y.h.
   87084:	'.....).t.q...y.
   87094:	.. .<...g.......
   870a4:	................
   870b4:	%.U.....C.......
   870c4:	....\.5...~.....
   870d4:	W.h.............
   870e4:	........^.......
   870f4:	..M...o.W.[.T...
   87104:	..$...d...%.....
   87114:	......Q.Q.......
   87124:	..^._...I.......
   87134:	P.b.......M.....
   87144:	6.............@.
   87154:	e.....:...U.#...
   87164:	....@...+...\.M.
   87174:	@.........$...A.
   87184:	Y.../.-.........
   87194:	../.......?.....
   871a4:	..j...>.d.Q.+...
   871b4:	..*.T...d.b.c.l.
   871c4:	....s...,.......
   871d4:	......H.......,.
   871e4:	......b...y.....
   871f4:	..6...{.........
   87204:	..............v.
   87214:	b.........k.3.-.
   87224:	..d.....4.}...n.
   87234:	r.g.O.....b.....
   87244:	................
   87254:	..R...........X.
   87264:	............z...
   87274:	........~.......
   87284:	........<.w...A.
   87294:	........6.V.0.".
   872a4:	........C.L.....
   872b4:	....{...p.l.A...
   872c4:	..............z.
   872d4:	....W...'.t.;.[.
   872e4:	O...............
   872f4:	~.......U.3.2...
   87304:	....{.......~.U.
   87314:	{...(...p...&...
   87324:	..........o.G.e.
   87334:	......j.....%.R.
   87344:	..R.............
   87354:	}.....i...F.....
   87364:	..i.......s.....
   87374:	............,...
   87384:	..........;...'.
   87394:	-...).#.{.....J.
   873a4:	b.......i.......
   873b4:	}...........-...
   873c4:	=...........&.N.
   873d4:	........S...v...
   873e4:	0...W.......W...
   873f4:	..{.\.....%.^.}.
   87404:	....|.~.z.^.....
   87414:	......_.j.X.....
   87424:	........~.......
   87434:	......C.V.v./.R.
   87444:	G.......H.,.....
   87454:	D.8.....x.......
   87464:	Y.$.......d.5...
   87474:	......D...f...<.
   87484:	h.......@...q...
   87494:	..........z.....
   874a4:	..U.?.D.....[...
   874b4:	......,.........
   874c4:	..G.t.K.....G...
   874d4:	....~.a.........
   874e4:	......v.....~.s.
   874f4:	......W.........
   87504:	..B.I.6.....<...
   87514:	..W.....0...J...
   87524:	........O.X.....
   87534:	....S...Y...;.F.
   87544:	....{.Y.<.C.,...
   87554:	..c.....4.......
   87564:	..........#.W.3.
   87574:	.. ._...`.......
   87584:	..R...`.#.......
   87594:	..F.......*.....
   875a4:	......r.^....._.
   875b4:	............N...
   875c4:	o.....d.}.w.m...
   875d4:	%.@.....t.....s.
   875e4:	....'.1...i.....
   875f4:	t.........#._...
   87604:	............e...
   87614:	..o...........#.
   87624:	....d.R.......@.
   87634:	../...I...T.M.t.
   87644:	p.............v.
   87654:	..B.............
   87664:	....J.u...+.....
   87674:	....9.....'.K...
   87684:	u.q.......i...Z.
   87694:	.. .....C.B.@...
   876a4:	".'."...z.......
   876b4:	`.J.........n...
   876c4:	......3.t.W...{.
   876d4:	......#./...N.8.
   876e4:	....`...)...|...
   876f4:	..{.Y. .^.'.....
   87704:	o.........C.....
   87714:	s...t...........
   87724:	..3.7...j.......
   87734:	B.........^.x.W.
   87744:	O.........I...?.
   87754:	........I.......
   87764:	.. .=.........j.
   87774:	T.P.....b.c...<.
   87784:	................
   87794:	................
   877a4:	S...^...6.......
   877b4:	......0.......q.
   877c4:	../.~.M.........
   877d4:	....2.....Q.M.;.
   877e4:	V.5.g.B...a.....
   877f4:	......P.......:.
   87804:	....7.G.0.....!.
   87814:	]...5...&.....+.
   87824:	s...^.E.~.!...!.
   87834:	..\.c...D.V.....
   87844:	..5...H...:.....
   87854:	.. .....q...F.W.
   87864:	*.;...o.........
   87874:	B.v.........o.o.
   87884:	....@.a.(.......
   87894:	h.....c.........
   878a4:	................
   878b4:	......J.......t.
   878c4:	'..... .@.......
   878d4:	..D.....`.....+.
   878e4:	....H.*.........
   878f4:	....-.&...Z.~...
   87904:	..C...c.Z.0.J...
   87914:	M...L...Z...B...
   87924:	....W...........
   87934:	..}...m...8.....
   87944:	............I...
   87954:	..h.../.E.......
   87964:	.. .......E.I...
   87974:	..B.V.....3...:.
   87984:	K.4.[.|...n.....
   87994:	..I.&...+.Z.0...
   879a4:	..n...j.......4.
   879b4:	0.......g.......
   879c4:	[.....M.H...0.,.
   879d4:	1.............W.
   879e4:	.._.........-.3.
   879f4:	......C...*...D.
   87a04:	..q.......a.....
   87a14:	..A...........p.
   87a24:	..........(. ...
   87a34:	..t.%.V...`...w.
   87a44:	..G...........,.
   87a54:	..V...`...J.d...
   87a64:	..........o.....
   87a74:	5._...h.`.v.t...
   87a84:	+...:...P...0.V.
   87a94:	C.....$.....(...
   87aa4:	......W..."... .
   87ab4:	........ ...:.P.
   87ac4:	............7.{.
   87ad4:	7.7...e...1...=.
   87ae4:	A.......V...?...
   87af4:	I.[...*.H.......
   87b04:	..F...!...}.....
   87b14:	4.x.5.r.....0.D.
   87b24:	......!.2.W.f...
   87b34:	..].......o.....
   87b44:	).9...K.......a.
   87b54:	9...p.....,.....
   87b64:	........h.......
   87b74:	....].....\.....
   87b84:	\...~...T.....).
   87b94:	....[...........
   87ba4:	-.......Z.......
   87bb4:	....!.V.....A...
   87bc4:	......l.$.......
   87bd4:	,.....#.....Q.J.
   87be4:	....(...3.F.....
   87bf4:	O...!.l.....o.W.
   87c04:	..v.'.....A.9...
   87c14:	..:.l.....c.S...
   87c24:	....s.....Q.#.N.
   87c34:	........U...s...
   87c44:	........u.6.....
   87c54:	......k.........
   87c64:	..^.D.....#...u.
   87c74:	w.!.........\...
   87c84:	......~...8.\.@.
   87c94:	............3...
   87ca4:	..n.). .....W.}.
   87cb4:	......-....."...
   87cc4:	3...8...}.....b.
   87cd4:	7...............
   87ce4:	......q.0.U.9.Y.
   87cf4:	..d.......r.....
   87d04:	A.#.....t.......
   87d14:	s...\...{.......
   87d24:	....C.U.O.....T.
   87d34:	............5...
   87d44:	......).Q.......
   87d54:	>...!...1.]...U.
   87d64:	..@.....x.....O.
   87d74:	..E.............
   87d84:	X.a...u...-.....
   87d94:	........L.v.....
   87da4:	..)...>...P.....
   87db4:	S._.......c.D.M.
   87dc4:	......c.m.......
   87dd4:	..i...........o.
   87de4:	#...............
   87df4:	j.....+.....+...
   87e04:	....%...!.v.....
   87e14:	....m...j.../...
   87e24:	..l.......W.|...
   87e34:	Y...0...........
   87e44:	....b...{...Q...
   87e54:	..k.|.....#.a...
   87e64:	....E.....f.....
   87e74:	../.r...j...6...
	...

00088084 <piano_samples>:
   88084:	.,............MC
   88094:	..........X3.-..
   880a4:	....".......\...
   880b4:	................
	...
   880d0:	................
   880e0:	................
   880f0:	..<C..........~.
   88100:	.-......".......
   88110:	\...............
   88120:	................
   88130:	................
   88140:	.....N..........
   88150:	Eg.C............
   88160:	.-......".......
   88170:	\...............
   88180:	................
   88190:	................
   881a0:	................
   881b0:	.<.B..p...H.....
   881c0:	.-......".......
   881d0:	\...............
   881e0:	................
   881f0:	................
   88200:	....

00088204 <sample_1_piano_kpianocx4>:
   88204:	....g.......z.6.
   88214:	..............5.
   88224:	..).*...Q.......
   88234:	..........2.....
   88244:	......9.......i.
   88254:	z.g...x.......l.
   88264:	..............`.
   88274:	........u...x...
   88284:	|.....4.{.......
   88294:	-.....H...z/..P.
   882a4:	\.......Y.....~.
   882b4:	....}...L.......
   882c4:	A...y...*...N7O.
   882d4:	..x.U..+{..".*."
   882e4:	.(.?.6..Y...[...
   882f4:	E...*.Q.......{.
   88304:	....@...,(.+.(.#
   88314:	t.....#".0j*..=.
   88324:	t...e.P...N.....
   88334:	......2.......-.
   88344:	....O.2..)......
   88354:	.&.3.,../..>J#.0
   88364:	.O.=.:5.....}.\.
   88374:	l.Z.........=...
   88384:	..W.........S.j.
   88394:	....%0U..$.".!//
   883a4:	..7..)...)O7p...
   883b4:	[1h.....+.....~.
   883c4:	......*.H....%..
   883d4:	......I!.&`..&iU
   883e4:	Fat7......N...q.
   883f4:	u.x.....'.,.....
   88404:	V.^.....G...)...
   88414:	./.#.0.KK3.+.;k.
   88424:	..X(w/.-W.r#.FL'
   88434:	..j.,.p...(...O.
   88444:	-.U.W.L.%.....t.
   88454:	..........C3.OtN
   88464:	@<......y.....\.
   88474:	..w.......I...0.
   88484:	S...........2.g+
   88494:	l&J!.%E,P2.....)
   884a4:	9.....o,]@.5....
   884b4:	....G.....O...3.
   884c4:	..B.....d...."..
   884d4:	........u7,6.@.9
   884e4:	..O....."...E...
   884f4:	Y.J.....u...s...
   88504:	........T.."....
   88514:	~4./............
   88524:	>..-.4..I.....I.
   88534:	..+.......J.....
   88544:	9.t.....A1~4..Q.
   88554:	U...;".>(:1H....
   88564:	s...c.........+.
   88574:	*.L.............
   88584:	r..."...w...9/.3
   88594:	.......0;...E.!.
   885a4:	..*...&.p.....|.
   885b4:	m.4.........a...
   885c4:	..k$}(.CO;..D.[.
   885d4:	...>FHxPF\%:h.N.
   885e4:	u.......l.z.....
   885f4:	Q...............
   88604:	....0...x9l....#
   88614:	.9.0..+......3. 
   88624:	Z..!. ..........
   88634:	....!...t.......
   88644:	...$.6i ..y.r...
   88654:	)!O5.G.4..9!..J.
   88664:	..'.......x.....
   88674:	..@...9.!.....a.
   88684:	M.`.$..._.{..$.?
   88694:	....*.O....&9...
   886a4:	.2... ."..t.....
   886b4:	\...)...........
   886c4:	,4.-....@...}...
   886d4:	.(.51B.)......T.
   886e4:	..C.............
   886f4:	..x.....,...(...
   88704:	:........".-.)..
   88714:	..{...#.. ..U%a.
   88724:	...4.(y.........
   88734:	........~...U..:
   88744:	.=........=.r(.5
   88754:	.F`D.,. ........
   88764:	..............x.
   88774:	..0...p.N...(...
   88784:	..(.)). ..y...D.
   88794:	....d.S.....e..*
   887a4:	b,Y.Q...?.......
   887b4:	..L.w.....y4.4+)
   887c4:	..0.:....(!:.F.C
   887d4:	yIZU.%........H.
   887e4:	K.....b.....S.\.
   887f4:	........`.....L.
   88804:	~.B.3.3.O.F...h.
   88814:	........I...t,.A
   88824:	>!/.<...k.......
   88834:	......N..&@+.'7%
   88844:	;.2..0./9..B]f.Q
   88854:	.:_...^.......@.
   88864:	..Y...s.....U.:.
   88874:	q...^.?.c.#.Q.m.
   88884:	@...^.......X...
   88894:	;........).1.5.(
   888a4:	..w.....;.g.....
   888b4:	^......-}9..d.. 
   888c4:	..j.B.V-.Z.R.E.>
   888d4:	.#..|...'.......
   888e4:	......]. ...2.Q.
   888f4:	..\.8.......[.g.
   88904:	M.........%.....
   88914:	.......!.7..I...
   88924:	..Y.....-.....D.
   88934:	".<..!..b..)..&.
   88944:	..9$.9.J.IrM.BN+
   88954:	..F.-.E.....)...
   88964:	............l.L.
   88974:	....b.M.@...t...
   88984:	......Q.........
   88994:	.....=.L..x.."..
   889a4:	................
   889b4:	...";..1."..9..#
   889c4:	.3A@.J`ZAbnQ..v.
   889d4:	....R.=.......x.
   889e4:	{.....w.....I.?.
   889f4:	'.m...?.....o...
   88a04:	f...............
   88a14:	.".(.!. .#:.....
   88a24:	........\.!.....
   88a34:	.#.,.#.......'.!
   88a44:	]/9O0b(a<4......
   88a54:	..c.............
   88a64:	..:. .i.........
   88a74:	p.'.Z...F...n...
   88a84:	........9.......
   88a94:	|#.+h...r...+.~.
   88aa4:	........T...y..)
   88ab4:	......i..!..<.iC
   88ac4:	Oes].M.6.$......
   88ad4:	t.......".......
   88ae4:	......<.....D...
   88af4:	F...............
   88b04:	....../.....g .(
   88b14:	..M.k.$#A.......
   88b24:	..v.$.}.........
   88b34:	..O$..C....2{DIS
   88b44:	.d.F.-(/T.4...^.
   88b54:	h...h.....^.....
   88b64:	........!.<.....
   88b74:	........f...)...
   88b84:	y.k.).......o...
   88b94:	...((...........
   88ba4:	..e.....+.\...&&
   88bb4:	J.......M=.K.T.^
   88bc4:	2D.9.<..a...v.3.
   88bd4:	_.....d.5.E...r.
   88be4:	........;.......
   88bf4:	b.g.V.v.....p...
   88c04:	..w............*
   88c14:	Y&=...b.....Y.e.
   88c24:	...........,N...
   88c34:	..Z....>.C.E.PlO
   88c44:	o;.(h"g.......&.
   88c54:	..#.X.R.".......
   88c64:	..............S.
   88c74:	p.C.;.}.....|.p.
   88c84:	....n......0....
   88c94:	y,.0....+...j...
   88ca4:	.........)......
   88cb4:	...#.-.=.P.R.EXA
   88cc4:	.6.. .........^.
   88cd4:	0... .....B.C...
   88ce4:	..z.......o.....
   88cf4:	....U...9.l.1...
   88d04:	..B.....).o..!y5
   88d14:	("6...<.r.......
   88d24:	.....$-.q.......
   88d34:	. .5t9.@tW.W.?. 
   88d44:	..-*..[.....i...
   88d54:	&.`...7.F...8...
   88d64:	..O.I...........
   88d74:	..[...]...F.....
   88d84:	........f&.(.).#
   88d94:	o._.].W.M.......
   88da4:	..<...h...{...V(
   88db4:	. p5.^.^.Du8.1y,
   88dc4:	..&...B..... .+.
   88dd4:	....1...8.......
   88de4:	C.u.v.......4...
   88df4:	..F...S.....7.Q.
   88e04:	.......#.+f).._.
   88e14:	..D...........#.
   88e24:	.#d.G...:.Q.#.#+
   88e34:	'J{T.LtI[@.03&0.
   88e44:	.#."........=.(.
   88e54:	..].....}...(.v.
   88e64:	....h.'.t.......
   88e74:	............../.
   88e84:	a. .Z ..........
   88e94:	..f.`.*.........
   88ea4:	..Y.....X....+*=
   88eb4:	.A.Q.N(..,..  .%
   88ec4:	.%....4...N.{...
   88ed4:	....)...p...(...
   88ee4:	~...l.%.~...6...
   88ef4:	!...n.w.......~.
   88f04:	.....(.(..<...B.
   88f14:	......&.0.......
   88f24:	....o...w.Z).G.K
   88f34:	5QNNp6...5=1.(.&
   88f44:	Z.../.......P...
   88f54:	F.....!...V.....
   88f64:	................
   88f74:	..y...;.....9...
   88f84:	|"M...x4.$......
   88f94:	....p.r.:.....e.
   88fa4:	......1.3#.@8PdI
   88fb4:	.B58.1.2.0=1.+K.
   88fc4:	Q.=.f...........
   88fd4:	............x...
   88fe4:	v.......S...n.4.
   88ff4:	........K...l...
   89004:	...8.;..K.......
   89014:	..T.i...........
   89024:	.......(H>0GbI;C
   89034:	.3.-W4.A.9 .....
   89044:	..........q...D.
   89054:	..q...........t.
   89064:	..}.v...b.....5.
   89074:	'.}...-.....[ .5
   89084:	.0.)....-.6...6.
   89094:	..|.......X...x.
   890a4:	..T.U%J6.J]L$2<&
   890b4:	.;.GG;."....K.+.
   890c4:	1.t.H...^.....y.
   890d4:	..k.......s.x...
   890e4:	....O...../...=.
   890f4:	....z......!U..+
   89104:	.'............,.
   89114:	b.|.........(...
   89124:	8..*.DHH35.*-?.H
   89134:	.A&8.&*...{...?.
   89144:	..........k.T.,.
   89154:	..........?...2.
   89164:	o.Q...O.........
   89174:	..7...y....*o2k-
   89184:	........q.....X.
   89194:	..........@.h...
   891a4:	.7.8.7.3.9.B.F.G
   891b4:	.19 .%..u.j.....
   891c4:	N.....M.....J...
   891d4:	........-.......
   891e4:	..~.....r...c...
   891f4:	..H.....Y*.5.'..
   89204:	............l...
   89214:	..?.*.......y >)
   89224:	C3N1..PAgK.B.=X8
   89234:	m+. ............
   89244:	..o.......S.....
   89254:	....V.$.f.....;.
   89264:	..P.~.~.........
   89274:	(....!0-.-)'. 2.
   89284:	......[.........
   89294:	X.....[.P.."...$
   892a4:	.139$?.B.@ZE.;..
   892b4:	/.{%......(.....
   892c4:	......?.........
   892d4:	%.y.....2._.....
   892e4:	................
   892f4:	....O+*7^/f...9.
   89304:	......F.......`.
   89314:	/.....T.....z(K8
   89324:	.1*6.K.L.;.0.,G(
   89334:	".....@.....#...
   89344:	\.......J.P.&...
   89354:	........-...[...
   89364:	..;...q.N...5.j.
   89374:	.#o9.-....+...b.
   89384:	..n...../.a.r.7.
   89394:	..-.......5!"&.5
   893a4:	.C|DgB.?.4Y*.%."
   893b4:	.%....;.........
   893c4:	Q...P...%.=...l.
   893d4:	........h.......
   893e4:	..............[$
   893f4:	.-u&8.....I.....
   89404:	Y.......n.h.....
   89414:	z.`...9.b .*.7l=
   89424:	.A.J.?.,.,./W/f 
   89434:	S.....A.k...J.B.
   89444:	..b.....g...E.M.
   89454:	..........a.....
   89464:	..............K'
   89474:	.'Y%n"........9.
   89484:	..+.,.......3.Y.
   89494:	f.6...~ .%k1.?.H
   894a4:	.B52./.5i6.,B...
   894b4:	K...m.(...).0...
   894c4:	....\...@.......
   894d4:	......#.....j...
   894e4:	i.v.(........../
   894f4:	.4z...(.i.......
   89504:	..m.....9.9._...
   89514:	@......%.7.C.Cx8
   89524:	q2A;0@.5."G.....
   89534:	..O.0.I.&.!.....
   89544:	................
   89554:	*.r.p.......k...
   89564:	n.).p.?....+.7{)
   89574:	..k.....i.>.u...
   89584:	..B.......$.J.d.
   89594:	Z...I,.<h>.7.6U>
   895a4:	.F@={*.%..".[.).
   895b4:	J...............
   895c4:	..R.........6...
   895d4:	..f.../.F...F.F.
   895e4:	..X.Z.?..,.0.&".
   895f4:	s...............
   89604:	......;.........
   89614:	(.K2.5.-<4.A.@.>
   89624:	.<h-. ..4.i...o.
   89634:	..F.~.......B...
   89644:	..1.m.\...5.x.Z.
   89654:	(...Z.......L...
   89664:	.......-.3.!....
   89674:	..W.Q...T./.....
   89684:	..|.s...........
   89694:	.%.,y..7.?.DuE.7
   896a4:	.)p$.%....u.z._.
   896b4:	........G.1.....
   896c4:	....0...6.....w.
   896d4:	....6.......'.$.
   896e4:	....Z0.,7.'.....
   896f4:	;...............
   89704:	..6...y........"
   89714:	.%.).5_D.J.97-]3
   89724:	.,g...........T.
   89734:	..j.B.....~.S.4.
   89744:	o.k...m...].?.{.
   89754:	B...............
   89764:	$".*.(h.H.~.....
   89774:	....]...5...~.j.
   89784:	T.....o.3.....6.
   89794:	./.?!AB?.8.614.*
   897a4:	@.F.J.....#...~.
   897b4:	......5...k...I.
   897c4:	`...............
   897d4:	....^.~.O.......
   897e4:	.$.&9...........
   897f4:	......]...U.....
   89804:	........x....!%1
   89814:	.:3>.=.<r;l4O&e.
   89824:	@..#......p.....
   89834:	7.Q.....3.d...Z.
   89844:	......t.S.......
   89854:	............2.X)
   89864:	l$......E.o.d...
   89874:	................
   89884:	..3.......I#..$5
   89894:	R9.=.C.;.+f"#'.)
   898a4:	..h.h.......P...
   898b4:	....N.s.........
   898c4:	................
   898d4:	\.....T....$s(..
   898e4:	e.....[.....&.+.
   898f4:	..*...........y.
   89904:	#........".'.-'?
   89914:	.Hv>.1R-././0"..
   89924:	<...........K...
   89934:	..#...X.}.B.m...
   89944:	....b...N.......
   89954:	......P...^ ..u.
   89964:	..........q...R.
   89974:	....~.%.?.......
   89984:	......... *5,E)=
   89994:	.1v3.6.1.&c....!
   899a4:	.!............'.
   899b4:	&.?...~.........
   899c4:	................
   899d4:	....m.c.Z.......
   899e4:	....+.......@...
   899f4:	....`.........B.
   89a04:	<......)K8.8Y4U6
   89a14:	98b7./. ...".#b#
   89a24:	6.6.......0.M...
   89a34:	..a...F...(..._.
   89a44:	H...@.....M.....
   89a54:	#.c.!.....7...H.
   89a64:	j.w...D.Z.).....
   89a74:	....p.......,...
   89a84:	E...m).1\0 5.;.9
   89a94:	.4J-.!_ .&.'.$..
   89aa4:	....X...........
   89ab4:	......].....}...
   89ac4:	h.......'.}.....
   89ad4:	....$.....).....
   89ae4:	u...............
   89af4:	..s.............
   89b04:	...".,.0.7.<.:v3
   89b14:	5+.#.$.,.-..H...
   89b24:	............r...
   89b34:	..o.).`.G.w.....
   89b44:	P.z.l......./.2.
   89b54:	8.....?...H...(.
   89b64:	b.@.......+.,.g.
   89b74:	..V.............
   89b84:	..K'&0.5.;.:8..%
   89b94:	.&.,.+u$. 1.....
   89ba4:	....M...S.......
   89bb4:	`.7.........>...
   89bc4:	..N.K...L.I.....
   89bd4:	..C...N.......|.
   89be4:	..<...7...O.G...
   89bf4:	................
   89c04:	.".0.<.:.0.,.,.+
   89c14:	!+.(~)6(......r.
   89c24:	k.....2.F.S.....
   89c34:	..(.|.......[.C.
   89c44:	`...j.R.......F.
   89c54:	..}...S...k.B...
   89c64:	2.....k...5.....
   89c74:	......$.......@'
   89c84:	?5.8.2.1'3.-.)|*
   89c94:	.+.,6(.!#...J.M.
   89ca4:	........y...q...
   89cb4:	..}.1...G.C...$.
   89cc4:	......i.z.......
   89cd4:	a.......8.....Y.
   89ce4:	..........x.....
   89cf4:	......K.S....&./
   89d04:	o2.3.4.1.+b*.).+
   89d14:	..=*3#....<.N._.
   89d24:	\.........W.>...
   89d34:	5.....D.....X.6.
   89d44:	..........4.p...
   89d54:	..........U.D...
   89d64:	c.....{.........
   89d74:	C.....n...3".,.0
   89d84:	.2.3U0*,.(.(./.0
   89d94:	c).#6.S...v.....
   89da4:	j...........l...
   89db4:	 .)...........D.
   89dc4:	......H.l.....c.
   89dd4:	..=.Z.....5.R...
   89de4:	'.t.....k.3.O...
   89df4:	M.7.....^ .(s,.2
   89e04:	h2p,c).).+..]/.)
   89e14:	.#....w...v.p. .
   89e24:	..E.........V...
   89e34:	................
   89e44:	......\.$.......
   89e54:	..4....... ...7.
   89e64:	........C.^.p...
   89e74:	......\.=(.-./%1
   89e84:	.,d(H*.,.....+a(
   89e94:	k#L.J.,.........
   89ea4:	..b.........6...
   89eb4:	/.....N.......H.
   89ec4:	....h...U...!._.
   89ed4:	....T.I.a.$...&.
   89ee4:	o.:.n.5.........
   89ef4:	..w....'.-./.-"+
   89f04:	Z).+1..,.+s242#"
   89f14:	..v.....r.....Y.
   89f24:	....u.....t.....
   89f34:	................
   89f44:	=.p.o.z.D.....!.
   89f54:	....a.....i...g.
   89f64:	........F.0...}.
   89f74:	L...n%.,c,x)B+..
   89f84:	.)P&t*14.:T0....
   89f94:	........n.....{.
   89fa4:	........,.....A.
   89fb4:	%...8.....t.....
   89fc4:	....5.....*.v...
   89fd4:	..!.]......./.v.
   89fe4:	...... .2.....z.
   89ff4:	..H#.$.&.+./|)m 
   8a004:	.#.1.=.7p$I.}...
   8a014:	^.........../...
   8a024:	%.".v...1.......
   8a034:	....$.{......./.
   8a044:	..............b.
   8a054:	............=.Z.
   8a064:	H.....b.........
   8a074:	... .*|1.*6....-
   8a084:	.:(<.0%#..V.}...
   8a094:	..|.....U...{.F.
   8a0a4:	....*.s.........
   8a0b4:	....".*.I.r.....
   8a0c4:	..........V.5.9.
   8a0d4:	....r.!.....1.~.
   8a0e4:	|.............v.
   8a0f4:	.'./.*....(%.2.9
   8a104:	.7...%........a.
   8a114:	....G.2.........
   8a124:	|.b.......y.5.x.
   8a134:	..)..._.........
   8a144:	......D.....S...
   8a154:	......!.........
   8a164:	I...$...+......*
   8a174:	.(+!....}).3.7.5
   8a184:	...&..J.\.....m.
   8a194:	....e.s.}.D.....
   8a1a4:	..J.....1...R...
   8a1b4:	L.k.....4.m.3...
   8a1c4:	..&...h.....C.v.
   8a1d4:	......x.......`.
   8a1e4:	2..........!@'."
   8a1f4:	....= .*Q3.6.3./
   8a204:	.(..W.Z.^.....X.
   8a214:	....Z.......a...
   8a224:	..A...y.G.p.....
   8a234:	........N.@.....
   8a244:	v.......e.......
   8a254:	k...d.......w.(.
   8a264:	......J.e.[!....
   8a274:	...#.*.0.6.5b.p&
   8a284:	7...O#R.......).
   8a294:	P.../.........d.
   8a2a4:	..*.............
   8a2b4:	........a.K...J.
   8a2c4:	Q.......M.......
   8a2d4:	..k.D...........
   8a2e4:	............Z...
   8a2f4:	U"r(.0A9.5.*."I"
   8a304:	.&.$7.......r...
   8a314:	k.......+.z.....
   8a324:	........1.f.....
   8a334:	;.....O.........
   8a344:	A...I.i.......O.
   8a354:	......U...,.....
   8a364:	H...L...........
   8a374:	.*.6.7.0.)f&.'.)
   8a384:	.&a.............
   8a394:	r.3.......+.....
   8a3a4:	N...s.........p.
   8a3b4:	..u.<.......F.%.
   8a3c4:	&.h...%.0.....r.
   8a3d4:	..3...........%.
   8a3e4:	e...>...{...h .+
   8a3f4:	.4.2n+.'.(.).*\#
   8a404:	\...X.b...3...4.
   8a414:	(.&...&...L.5.l.
   8a424:	..~.....C.......
   8a434:	F.........w.H.O.
   8a444:	..e.<.1.!.3...c.
   8a454:	..=...v.D.......
   8a464:	2.q.....]..".,I1
   8a474:	.,.(.).*.*.'.$L 
   8a484:	..O.j.......}...
   8a494:	%.a...l.(.r...2.
   8a4a4:	....{...{.......
   8a4b4:	....k.....\.V.>.
   8a4c4:	..........6.....
   8a4d4:	....0.N...c.....
   8a4e4:	r.t......&.,$-.+
   8a4f4:	.+%-^+.*.*.&."..
   8a504:	................
   8a514:	......9.....=...
   8a524:	....).....h.B...
   8a534:	..~.....C.".G.K.
   8a544:	u.".....H.!.....
   8a554:	..{.....>.).4.!.
   8a564:	....g.@#''.*n+.+
   8a574:	`*.*O+.'.'.(. j.
   8a584:	..k.............
   8a594:	..Q.o.....*.....
   8a5a4:	..[.*.m.........
   8a5b4:	........O.&.....
   8a5c4:	....o.Y...%.].v.
   8a5d4:	......[.L...C.l.
   8a5e4:	..... .'X(.).,.+
   8a5f4:	.).(.*\-.*' ..O.
   8a604:	....d.<.J.e.....
   8a614:	....../.].....C.
   8a624:	o...[...q.......
   8a634:	....\...........
   8a644:	E...R.~...^.d...
   8a654:	......]...>.....
   8a664:	+...h#.(u,.,.(?'
   8a674:	.+K/...*.!..L.o.
   8a684:	........7.<.a...
   8a694:	q.\.c.P.r.9.....
   8a6a4:	....X.x...A.n.3.
   8a6b4:	..X.K...j.2.R...
   8a6c4:	..........U.C...
   8a6d4:	...... .........
   8a6e4:	..6#L).+.&}%%*K,
   8a6f4:	}.9/v*.%c.S.....
   8a704:	..........P.....
   8a714:	H.i...J...d...}.
   8a724:	..h.......n.....
   8a734:	K.......h.<...K.
   8a744:	c...5.).r.{.....
   8a754:	f...).....1.....
   8a764:	x#.&.'G%G&5+.-.,
   8a774:	./,0.+}.........
   8a784:	$...=.o.....9...
   8a794:	-.....}.........
   8a7a4:	G.S.............
   8a7b4:	..............-.
   8a7c4:	..'.o.........=.
   8a7d4:	..+.....B.s...n"
   8a7e4:	.#.$.&;(.).),..3
   8a7f4:	y2.+....o.......
   8a804:	V.....0.G.......
   8a814:	@...}.k.........
   8a824:	..7...J...~.....
   8a834:	..P...7...?.....
   8a844:	..k.K.r.R.....l.
   8a854:	R...r.........W!
   8a864:	;%L%U%N%u)=1.4.3
   8a874:	.)..F.......t...
   8a884:	....|.....a.....
   8a894:	_...,...H.}.....
   8a8a4:	k...2.n...2.....
   8a8b4:	:.......t.......
   8a8c4:	......A.......s.
   8a8d4:	|...u........#.$
   8a8e4:	.#O#.$t,.5.7.1.)
   8a8f4:	&........._.....
   8a904:	/.e._...p.A."...
   8a914:	....Z.2.P...:...
   8a924:	....U...........
   8a934:	-.......'.1... .
   8a944:	}.q.-...L.?.M...
   8a954:	..........1#."..
   8a964:	...%}0.6u3.0.,."
   8a974:	S.....1...3.....
   8a984:	............e...
   8a994:	..............L.
   8a9a4:	......n.(.......
   8a9b4:	..V.......".R.i.
   8a9c4:	<.t...Z......./.
   8a9d4:	..w...J..!....G 
   8a9e4:	.(./.2!4 4u/3'..
   8a9f4:	..............7.
   8aa04:	............v...
   8aa14:	Y.^...}.g...;.H.
   8aa24:	....a.....?.....
   8aa34:	....:.q.........
   8aa44:	S...R.I.^.m.....
   8aa54:	........0.9.K!.'
   8aa64:	p/.0.2.6.3.(Z...
   8aa74:	0.W.............
   8aa84:	O...%...........
   8aa94:	4.@.p....._.y...
   8aaa4:	e.....+.......@.
   8aab4:	i.........P.....
   8aac4:	p.........Z.....
   8aad4:	..b........ _&.*
   8aae4:	L-.5.:.2.%..|...
   8aaf4:	..........N.....
   8ab04:	....y.l.....8...
   8ab14:	........z.......
   8ab24:	....A.....e.....
   8ab34:	....R...>.....2.
   8ab44:	......`.......v.
   8ab54:	..Z.{...0..!.(.2
   8ab64:	G94882.(|.......
   8ab74:	......~.........
   8ab84:	(.{...".........
   8ab94:	....q.i./...t.v.
   8aba4:	........q...q...
   8abb4:	..).D...e.8.....
   8abc4:	....+...n.......
   8abd4:	....>.X..!v*.1.8
   8abe4:	H8+3H*......1...
   8abf4:	....R.........u.
   8ac04:	Q.../.}.....E.h.
   8ac14:	|.M.....I...k...
   8ac24:	*.......U.n.....
   8ac34:	......#...$.}...
   8ac44:	....1...X...)...
   8ac54:	.......!.(Y2.7.6
   8ac64:	.3.,..:.7...H...
   8ac74:	....-.....t...Q.
   8ac84:	l...........k...
   8ac94:	................
   8aca4:	....6.....(.`...
   8acb4:	l...?.'.]...F.4.
   8acc4:	D.c...@...^.....
   8acd4:	..a..!.)?1.608>6
   8ace4:	.-.!......&.]...
   8acf4:	....c.....>.[.y.
   8ad04:	..p.......M./.H.
   8ad14:	................
   8ad24:	u...|...........
   8ad34:	......".........
   8ad44:	V.....!...?...C.
   8ad54:	... L(.0.5.9M89.
   8ad64:	."d...4.....~...
   8ad74:	h.....V.........
   8ad84:	..L.(...........
   8ad94:	7.............:.
   8ada4:	'...5.......[...
   8adb4:	\.;.....5.....r.
   8adc4:	............-.*.
   8add4:	...&e/.4.:.7.,.$
   8ade4:	..M.............
   8adf4:	C.l...F.5.......
   8ae04:	..`.....D...j...
   8ae14:	..[.?.......Z...
   8ae24:	Q.......J...9.d.
   8ae34:	..J.'.....w...\.
   8ae44:	I.!.............
   8ae54:	.%n0.6x8.5c0.(..
   8ae64:	................
   8ae74:	j.f...A.a...i.K.
   8ae84:	....c...S.......
   8ae94:	..V...........<.
   8aea4:	L.H.....7.....*.
   8aeb4:	d.........h.[...
   8aec4:	o.....Y...M...D&
   8aed4:	...3.7+6G29+....
   8aee4:	......5.p.l.4...
   8aef4:	G...K.L...w."...
   8af04:	/.......h.....].
   8af14:	..l.\...D.....*.
   8af24:	8.Y.w...8.J.....
   8af34:	....Z.u.h.X.....
   8af44:	..2.......M.o$.+
   8af54:	.2.6R6.5.,......
   8af64:	[...q...J.......
   8af74:	k.....1.........
   8af84:	....L.......f...
   8af94:	.._.1.1...l.S.].
   8afa4:	....j.....J...v.
   8afb4:	X...@.T.W.4.....
   8afc4:	........t..$.)_0
   8afd4:	.7.9!6p+..R.I...
   8afe4:	........-...+...
   8aff4:	....Y.@.".2...@.
   8b004:	..............M.
   8b014:	..B...#.%...b...
   8b024:	......\...H...).
   8b034:	G...;...1.....'.
   8b044:	..w.....|..&.2.7
   8b054:	.8N6.-_!G.......
   8b064:	..G.P...C.`.....
   8b074:	....k...........
   8b084:	......R.E.......
   8b094:	......{...|.d.}.
   8b0a4:	......>.w.......
   8b0b4:	..g.......\.....
   8b0c4:	.........'.0.6M;
   8b0d4:	.7B,."..f.e.....
   8b0e4:	1...M..... ...'.
   8b0f4:	....?.......9...
   8b104:	N.............5.
   8b114:	......s.{.6.....
   8b124:	............3...
   8b134:	......-.........
   8b144:	".&....%*0s6.9.6
   8b154:	#.`$......7.T...
   8b164:	......*.w.......
   8b174:	............l...
   8b184:	y..._.Q...{.....
   8b194:	....D.....O.t...
   8b1a4:	#.}.L...........
   8b1b4:	..<.....m.......
   8b1c4:	,.:..$.-.4.937\.
   8b1d4:	."............E.
   8b1e4:	k...........`.W.
   8b1f4:	..F.......<.>.p.
   8b204:	..x.[...........
   8b214:	..........V.9...
   8b224:	S.....6. .......
   8b234:	"...R.R.0.....^.
   8b244:	..1".,.6*:.5=..$
   8b254:	..?...).....>.'.
   8b264:	..'...5.......~.
   8b274:	....a.f.:.Q.r...
   8b284:	..............%.
   8b294:	..{.".....`.9.W.
   8b2a4:	..?.e...........
   8b2b4:	..............q.
   8b2c4:	1!(,.6p9!4.-5%..
   8b2d4:	........b.....7.
   8b2e4:	...... .....3.5.
   8b2f4:	..Z.3...7.#.....
   8b304:	..J...F.E.......
   8b314:	.."...O.....R.W.
   8b324:	..../.....a.....
   8b334:	Z.V.,.....4.... 
   8b344:	b,Y6.6.2c.]'U!..
   8b354:	......w.O.0.p...
   8b364:	/.y.......y...5.
   8b374:	6.C...........[.
   8b384:	8...".v...L.....
   8b394:	....3.....B.R...
   8b3a4:	......a.....@...
   8b3b4:	....X.........:,
   8b3c4:	.3.4.2o..).%....
   8b3d4:	..6.....a.......
   8b3e4:	..!.............
   8b3f4:	..........$.7.Y.
   8b404:	....V.J.O...q...
   8b414:	z.P...J.Y.....\.
   8b424:	..!.p.5.?...p...
   8b434:	O...........u+.1
   8b444:	.0.1.0.+"&....&.
   8b454:	z.....J.C.B...(.
   8b464:	....".U.........
   8b474:	......b.......X.
   8b484:	..-.....N.....o.
   8b494:	I...}...........
   8b4a4:	..=...M.s.>.....
   8b4b4:	..R...2.P..(5-r0
   8b4c4:	.3.0<,{'....k...
   8b4d4:	=...h.......W.A.
   8b4e4:	........~.....=.
   8b4f4:	k...t.....J.)...
   8b504:	....u...I.......
   8b514:	&.f.P.......q...
   8b524:	z...........[...
   8b534:	.........%W,.0X1
   8b544:	*0M.+(..N...Y.a.
   8b554:	..g...'...T.....
   8b564:	..[.{...v.D.....
   8b574:	....%.....%.....
   8b584:	..0.i...h.......
   8b594:	....3.4.r.d.....
   8b5a4:	......G...x.....
   8b5b4:	....s.%#a)3/.0h/
   8b5c4:	8..)."........6.
   8b5d4:	..J.........X.Q.
   8b5e4:	..-.....f.u.....
   8b5f4:	........<.-.2...
   8b604:	..;.o.7.......K.
   8b614:	>.........K.d...
   8b624:	................
   8b634:	..b.. z(5.>.?/.1
   8b644:	.,."......&...0.
   8b654:	B.u...b...z.....
   8b664:	........p.i.e...
   8b674:	q.....A.`.M.#...
   8b684:	....].i.........
   8b694:	_.Q.v.D.)...w...
   8b6a4:	....o.......b...
   8b6b4:	... .%6*..f212.+
   8b6c4:	.$..q.Y.x.......
   8b6d4:	......).G... ...
   8b6e4:	...."...........
   8b6f4:	....M.:...8.#.Z.
   8b704:	~.M...1...9.t...
   8b714:	..u.../.........
   8b724:	Y.3.......M...q.
   8b734:	..O#.)I.l2.1j-.'
   8b744:	E...S.v.,.~...;.
   8b754:	....|...c...g...
   8b764:	..M.........s.N.
   8b774:	......?.......N.
   8b784:	k.d...#...O.1...
   8b794:	s.M.....<.i.Q.5.
   8b7a4:	3...M.....E.R...
   8b7b4:	F".'.-.2.1...'G.
   8b7c4:	<...7.....z.5.:.
   8b7d4:	....P...T.......
   8b7e4:	......[.8.....c.
   8b7f4:	5.v...|.....m...
   8b804:	....~._.1.......
   8b814:	..;...........!.
   8b824:	..\.t...........
   8b834:	r&.,.1.2./.(W...
   8b844:	....8.....M.....
   8b854:	..K...........&.
   8b864:	......p...k.....
   8b874:	..........8.c...
   8b884:	..G.S.....1.....
   8b894:	......2.........
   8b8a4:	....E.2........$
   8b8b4:	.+(1.2.1.(......
   8b8c4:	H.7.......r.....
   8b8d4:	U...a..... .....
   8b8e4:	..\.3.........z.
   8b8f4:	`.).......-...<.
   8b904:	n.i.I...........
   8b914:	....3.R...Y.B...
   8b924:	U.........<.."5+
   8b934:	+1.3F1.'..H..._.
   8b944:	....*.z...J.k./.
   8b954:	........b...I...
   8b964:	..........m...b.
   8b974:	P...k.........'.
   8b984:	[.....2...e.-...
   8b994:	..../...N.......
   8b9a4:	'...:.....5 .+.1
   8b9b4:	(2.0b).!4.......
   8b9c4:	j.*.......U.S.f.
   8b9d4:	..f.....".N.l...
   8b9e4:	........v.......
   8b9f4:	X.....@.....#...
   8ba04:	d...3.i.........
   8ba14:	..........J.....
   8ba24:	........L!.)h..2
   8ba34:	.0"*.!..........
   8ba44:	..Q.?...3...V.m.
   8ba54:	..H.....Y...B...
   8ba64:	....&...{.......
   8ba74:	......L...W.....
   8ba84:	1.........=.>...
   8ba94:	o.............-.
   8baa4:	....D.Q..'./G3.0
   8bab4:	'+.#........*...
   8bac4:	=..... ...X...n.
   8bad4:	0.....$.........
   8bae4:	..............T.
   8baf4:	......5.........
   8bb04:	..A.\.........8.
   8bb14:	....&.C...Y.V...
   8bb24:	W.....C'...1.1.,
   8bb34:	.$..Z.w.....[...
   8bb44:	+.8.....5...u.f.
   8bb54:	..(.6.....R.....
   8bb64:	............%...
   8bb74:	........1.3.....
   8bb84:	X.............".
   8bb94:	......3. .....?.
   8bba4:	O.s..$J-.1x0.+.$
   8bbb4:	..0.....N.o...A.
   8bbc4:	..w.......O.....
   8bbd4:	3...h.B...r.8...
   8bbe4:	a...R.........&.
   8bbf4:	..7...L...o.....
   8bc04:	....p.b.....l...
   8bc14:	........G...y...
   8bc24:	...#.,}0Z0.,.$W.
   8bc34:	..x...^.........
   8bc44:	........d.....K.
   8bc54:	......4.....E...
   8bc64:	=.W.............
   8bc74:	..O.....m.......
   8bc84:	l.n.............
   8bc94:	!.{.....R...w...
   8bca4:	.!.+./.01,.#8...
   8bcb4:	..S.:...........
   8bcc4:	..e...........v.
   8bcd4:	..s.b.....'.....
   8bce4:	B.....W.h.).....
   8bcf4:	......f.........
   8bd04:	............Y...
   8bd14:	~........."....!
   8bd24:	.*.../.+.%%.|.n.
   8bd34:	..:.6.......f.t.
   8bd44:	u...>...........
   8bd54:	......2.........
   8bd64:	O.Y...{...N.....
   8bd74:	..u...?.R...&.y.
   8bd84:	..c...(./.......
   8bd94:	9.|.E.....s.' .(
   8bda4:	.-o/.,)&..h.....
   8bdb4:	f.....(.....=.W.
   8bdc4:	..t...7.....K...
   8bdd4:	........f.`.....
   8bde4:	..%.......f.8.d.
   8bdf4:	..............1.
   8be04:	4.]...#...J.....
   8be14:	....$.....w.A&.-
   8be24:	W0.+.#........l.
   8be34:	3...V.Z.?._...h.
   8be44:	K...}...........
   8be54:	....i.5.*.......
   8be64:	....j.J...o...w.
   8be74:	;.............y.
   8be84:	8.......$.......
   8be94:	......p.e..&.-[.
   8bea4:	.)B$..........Q.
   8beb4:	r...K.........x.
   8bec4:	).......L...5...
   8bed4:	......G...x...l.
   8bee4:	?.(...O...3.Q.3.
   8bef4:	..........y.....
   8bf04:	..?.,...........
   8bf14:	<."...C.`%.,.,.(
   8bf24:	.#..............
   8bf34:	....b.........F.
   8bf44:	=.7.....5.......
   8bf54:	........K.1.....
   8bf64:	..........5.....
   8bf74:	J...............
   8bf84:	e.@.(.........O.
   8bf94:	..^....#J+.).&.$
   8bfa4:	..........Z.h...
   8bfb4:	=.Q...>.........
   8bfc4:	R.a.\...".e.....
   8bfd4:	;.'...".m.......
   8bfe4:	....../.........
   8bff4:	..`.%.......'.Q.
   8c004:	(.w.A.(.....Z...
   8c014:	....C#G'.'.(7$..
   8c024:	......r.<...c...
   8c034:	........2...{...
   8c044:	......%.........
   8c054:	(.......L.:.....
   8c064:	9...N.m.......^.
   8c074:	{.....G.......a.
   8c084:	........o.5...}.
   8c094:	q.s..%u(m&."U.].
   8c0a4:	....;.Z.....G.-.
   8c0b4:	~.....T.y...s.S.
   8c0c4:	P...;.\.2.......
   8c0d4:	....*...Y.....O.
   8c0e4:	..D._.....I.....
   8c0f4:	..\.e./.......[.
   8c104:	..6.........6...
   8c114:	...$.%.$6". ....
   8c124:	....K...V.......
   8c134:	'.A.....W.......
   8c144:	..c.n.......=...
   8c154:	..L.$...x...E.|.
   8c164:	~.....t.....N...
   8c174:	......A.........
   8c184:	......[.5.......
   8c194:	."\#.#."."t ..X.
   8c1a4:	..r.............
   8c1b4:	....K...].......
   8c1c4:	..5.}...........
   8c1d4:	..X.....6.......
   8c1e4:	..V...^.....^...
   8c1f4:	....<.......!.c.
   8c204:	S...m...$.;.....
   8c214:	.!.#.#c"..y.....
   8c224:	M...3.......J...
   8c234:	......D.........
   8c244:	2.......v.p.....
   8c254:	................
   8c264:	........F.L...u.
   8c274:	...._.........V.
   8c284:	i.!.>...../....!
   8c294:	.!."m"..j.k.....
   8c2a4:	................
   8c2b4:	....^...........
   8c2c4:	..%.;.&.).t.....
   8c2d4:	M.....s.......W.
   8c2e4:	......K...;.Y...
   8c2f4:	........ .....0.
   8c304:	....S.....N...S!
   8c314:	.".!. ..........
   8c324:	......E.b.......
   8c334:	......2.H...#...
   8c344:	..c...g.&...h...
   8c354:	..........>...j.
   8c364:	..-.-.......h.-.
   8c374:	....c.^.!...M.l.
   8c384:	..%.h.e.......W!
   8c394:	.". ............
   8c3a4:	........3.....'.
   8c3b4:	........?...7...
   8c3c4:	....?........./.
   8c3d4:	..d...........-.
   8c3e4:	R...s.`.o.......
   8c3f4:	................
   8c404:	i.....D.l.\..!.!
   8c414:	........h...v...
   8c424:	......[...7.....
   8c434:	..u.........q...
   8c444:	........A._...K.
   8c454:	..........}.R...
   8c464:	..W...5.o.....{.
   8c474:	..............8.
   8c484:	..........^ . ~ 
   8c494:	_.[.a...`...c.u.
   8c4a4:	e.....V.x...3...
   8c4b4:	k.}.8.....~./...
   8c4c4:	..[.........6...
   8c4d4:	........Z.....R.
   8c4e4:	....A...........
   8c4f4:	....b.a.........
   8c504:	..6...Y.. . ".X.
   8c514:	..............d.
   8c524:	..=.....I...n.h.
   8c534:	....r.....~...*.
   8c544:	$.............U.
   8c554:	m.........`. ...
   8c564:	7...........*.w.
   8c574:	....X.....;...a.
   8c584:	....s.....c.....
   8c594:	[...s.R.e...6...
   8c5a4:	......j.A.......
   8c5b4:	....y.........>.
   8c5c4:	................
   8c5d4:	..'.............
   8c5e4:	....1.t.1.......
   8c5f4:	w.<.,.......'...
   8c604:	D.........".....
   8c614:	e.......X.......
   8c624:	......*...,...s.
   8c634:	U.8.......^.S...
   8c644:	a...u.9.-...n...
   8c654:	"...G...Z...=...
   8c664:	..F...T......._.
   8c674:	..........3.,...
   8c684:	........... -...
   8c694:	......g.f.\...G.
   8c6a4:	......T.......A.
   8c6b4:	........?.......
   8c6c4:	:.............).
   8c6d4:	..~.%.-.5..._.%.
   8c6e4:	................
   8c6f4:	......~.(.*...f.
   8c704:	..........F.5...
   8c714:	..Z.........^...
   8c724:	....E...S.2.....
   8c734:	..T.....a.K.D.i.
   8c744:	......1.d.8.X.c.
   8c754:	K.......".l.....
   8c764:	....f.&.........
   8c774:	Y.I.(...).d.....
   8c784:	..I...{.......9.
   8c794:	....y.6...P...=.
   8c7a4:	z.`.T...........
   8c7b4:	../. .......$...
   8c7c4:	....<.).....w...
   8c7d4:	..n...:...+...I.
   8c7e4:	..1.[...C.....N.
   8c7f4:	..........g.....
   8c804:	..... . ....;...
   8c814:	............c.R.
   8c824:	..%...8...S.....
   8c834:	6. .....y...z.%.
   8c844:	......9.......;.
   8c854:	..@.4.=...v.I...
   8c864:	............D...
   8c874:	b.......y.^.W...
   8c884:	..7!....Y.?...w.
   8c894:	....../.#.3.....
   8c8a4:	..>.O...k.....r.
   8c8b4:	Y.....o...X.....
   8c8c4:	?...N.".........
   8c8d4:	....K...A.....:.
   8c8e4:	E.?.........V./.
   8c8f4:	u.P.q........./ 
   8c904:	.!..F...W. .Y...
   8c914:	................
   8c924:	....r.J.......B.
   8c934:	........o._.)...
   8c944:	......q.S.).....
   8c954:	........#.....9.
   8c964:	........f...].N.
   8c974:	..C...B.L.J.. ^.
   8c984:	....F...@.....-.
   8c994:	......s.......1.
   8c9a4:	{...............
   8c9b4:	..'...O.9.......
   8c9c4:	....K.../.}.J.I.
   8c9d4:	?...X.........5.
   8c9e4:	........X...W...
   8c9f4:	..........q.^...
   8ca04:	{...b......... .
   8ca14:	........%.......
   8ca24:	..........g.s.-.
   8ca34:	S...B.J.........
   8ca44:	1...............
   8ca54:	..E.n.U......./.
   8ca64:	..p.;.........T.
   8ca74:	6.9.....l.....;.
   8ca84:	....E...B.F.....
   8ca94:	...... ...V...<.
   8caa4:	:.(.......`...g.
   8cab4:	..t.....s.B...&.
   8cac4:	......8...w.}...
   8cad4:	....t...O...1.0.
   8cae4:	R...o...........
   8caf4:	..}...F.../.....
   8cb04:	......D.........
   8cb14:	....#...........
   8cb24:	..Q.%.7...x.....
   8cb34:	..........=...2.
   8cb44:	..k...".........
   8cb54:	B...........@...
   8cb64:	....w.....x.....
   8cb74:	v...U.........P.
   8cb84:	....#.....L.....
   8cb94:	H........... .>.
   8cba4:	G.........$.T.r.
   8cbb4:	..............E.
   8cbc4:	`.......(... .".
   8cbd4:	K.....a.........
   8cbe4:	................
   8cbf4:	..t...^...O._...
   8cc04:	......@.....!...
   8cc14:	$.o.............
   8cc24:	Z.[.6...b..._...
   8cc34:	m.n.......:.T...
   8cc44:	....w...........
   8cc54:	X...*.....h./...
   8cc64:	....2.....{.....
   8cc74:	........2.t...>.
   8cc84:	..).....'.&.{. .
   8cc94:	....7.......4...
   8cca4:	Z...w.t.\...T...
   8ccb4:	..3.R...3.[.....
   8ccc4:	....E.....m.....
   8ccd4:	N.....p...d...j.
   8cce4:	(.....d.U.:.....
   8ccf4:	....)...-.^...K.
   8cd04:	......4.........
   8cd14:	............D.j.
   8cd24:	............*.3.
   8cd34:	5.....A.....).+.
   8cd44:	A...~...........
   8cd54:	....E.....h.k...
   8cd64:	................
   8cd74:	$.....v.k.......
   8cd84:	................
   8cd94:	#.....\...w.P.Q.
   8cda4:	......n.......0.
   8cdb4:	..G...g.[.......
   8cdc4:	..s.[.H.|.h.=...
   8cdd4:	..O...?....."...
   8cde4:	....@.}.6.:...@.
   8cdf4:	.. ...l.C.5...v.
   8ce04:	......H.......Q.
   8ce14:	............5...
   8ce24:	....v...A..._.=.
   8ce34:	Y...o...$.......
   8ce44:	@...3...l...F...
   8ce54:	D.R.s...@...E...
   8ce64:	n.U.)...-...l...
   8ce74:	n...2.........q.
   8ce84:	%...6...V.j.....
   8ce94:	w.'.........*...
   8cea4:	f...........V...
   8ceb4:	]...<.=.m...0...
   8cec4:	....,...o.P.!...
   8ced4:	....I.......5...
   8cee4:	I.@...\...h.....
   8cef4:	......d.....-...
   8cf04:	X.............q.
   8cf14:	..|.....B.K.....
   8cf24:	........<.{.....
   8cf34:	&.....B...g.N...
   8cf44:	......`.].X.....
   8cf54:	<...g...C...\...
   8cf64:	..........^.k._.
   8cf74:	....i.....F.....
   8cf84:	......&...O...R.
   8cf94:	E.!.............
   8cfa4:	......[.|..._.l.
   8cfb4:	G.J...k.K...8...
   8cfc4:	..B.E.Q.f.K./...
   8cfd4:	......".......Y.
   8cfe4:	....M...........
   8cff4:	..~.....s.......
   8d004:	......@.0.......
   8d014:	p.^.....6.......
   8d024:	K.....B.........
   8d034:	,...[.|...I.....
   8d044:	................
   8d054:	........}.4.O.|.
   8d064:	..../...........
   8d074:	$...?...z...^.u.
   8d084:	..E...3.Y.......
   8d094:	'.E...%.....e...
   8d0a4:	c.'.L...S.o.....
   8d0b4:	..m.o...s.R.....
   8d0c4:	f.y.].....3.....
   8d0d4:	......O.........
   8d0e4:	......).j...J.N.
   8d0f4:	......V.d.X.6...
   8d104:	v.......Z...'.p.
   8d114:	..=...........0.
   8d124:	u.......R.....E.
   8d134:	..h.......q...U.
   8d144:	........r.......
   8d154:	........0...v.k.
   8d164:	-.......p.t.1...
   8d174:	........;...\...
   8d184:	$...P.o.........
   8d194:	..k...p.....C...
   8d1a4:	..Z.s...j.....S.
   8d1b4:	m.../...P.....z.
   8d1c4:	......a. ...n.g.
   8d1d4:	M...B.....5.....
   8d1e4:	....(.N.@.....3.
   8d1f4:	..j.......7.....
   8d204:	/.....h.5.....u.
   8d214:	j.......M.......
   8d224:	................
   8d234:	........v.}.(...
   8d244:	....v...........
   8d254:	....0.....R.....
   8d264:	....t.6.......w.
   8d274:	t.@.h.I.i.......
   8d284:	..F.3.......7...
   8d294:	................
   8d2a4:	..^...<...0.!...
   8d2b4:	........M.S.....
   8d2c4:	S.s.1...r...C...
   8d2d4:	................
   8d2e4:	G.+.....b.....[.
   8d2f4:	..<...Z.I.&.n...
   8d304:	......k.....g...
   8d314:	........Q.......
   8d324:	..........P.|...
   8d334:	....O.+.....:...
   8d344:	|.*.....3...2...
   8d354:	....J...........
   8d364:	d...............
   8d374:	2.....E.......T.
   8d384:	......h.........
   8d394:	H.^.'.y.....).R.
   8d3a4:	..h...l.k.'...Z.
   8d3b4:	......q...,...q.
   8d3c4:	......&.T.....s.
   8d3d4:	......C.d.......
   8d3e4:	I.....j...y.....
   8d3f4:	8...!.*.....@...
   8d404:	......w.....j.>.
   8d414:	..c.......x.....
   8d424:	..........T.....
   8d434:	....8...7.......
   8d444:	..=.............
   8d454:	....,.......i.@.
   8d464:	..7.o.V.........
   8d474:	......w.........
   8d484:	:.Y.....'.....|.
   8d494:	B.n.......N.....
   8d4a4:	'.".)...........
   8d4b4:	......-.<.....7.
   8d4c4:	..........:... .
   8d4d4:	X.E...d.F.f.F...
   8d4e4:	..b...........,.
   8d4f4:	..3.u...*.......
   8d504:	..y...l.|...o. .
   8d514:	....H.....}...l.
   8d524:	S.w.......^.....
   8d534:	........?.O.....
   8d544:	..........s.....
   8d554:	....i.i.......p.
   8d564:	........r.U.....
   8d574:	..k...a.J.......
   8d584:	..J.............
   8d594:	....j...........
   8d5a4:	!.....).3.....E.
   8d5b4:	$.P.h...P.t.#.e.
   8d5c4:	V.~...3.........
   8d5d4:	..:...".o.(...H.
   8d5e4:	........N.......
   8d5f4:	$.....v.}.......
   8d604:	o.H.;...........
   8d614:	................
   8d624:	........A...c...
   8d634:	..........6.)...
   8d644:	..0.T.).,.z..._.
   8d654:	......p.u...t...
   8d664:	@.y..._.....X...
   8d674:	............]. .
   8d684:	..............8.
   8d694:	....9...y.U...".
   8d6a4:	....`.....Z.x...
   8d6b4:	3...=.s.........
   8d6c4:	........b...D.4.
   8d6d4:	..Q.......C.....
   8d6e4:	$.+.-.......x.D.
   8d6f4:	....9.S...y.....
   8d704:	................
   8d714:	....G.....).i...
   8d724:	..A.m.......t.8.
   8d734:	4...?...J.......
   8d744:	............y...
   8d754:	..........T.Z...
   8d764:	..........C...4.
   8d774:	2.|.....=.....{.
   8d784:	..........F...K.
   8d794:	......R.........
   8d7a4:	..L.............
   8d7b4:	..D. ...$.....W.
   8d7c4:	.......... .c.P.
   8d7d4:	....G...i.......
   8d7e4:	..Z.....6.......
   8d7f4:	T.......S.Y.....
   8d804:	....{...c.....\.
   8d814:	..!.K...A.~.....
   8d824:	p.......l.......
   8d834:	..............`.
   8d844:	~.....K.....P.S.
   8d854:	c.....+...C.....
   8d864:	....!.h.......r.
   8d874:	..[...x.v.......
   8d884:	-.}.Y.....E.....
   8d894:	E.q.G.....B.Q...
   8d8a4:	..H...,.........
   8d8b4:	|.s.........=...
   8d8c4:	d.........4.i.^.
   8d8d4:	..]. .M.K.7.P...
   8d8e4:	................
   8d8f4:	..F.....Z.......
   8d904:	....I...........
   8d914:	....d.....l.....
   8d924:	w...-...~.%.....
   8d934:	..=..... .H.....
   8d944:	,.o.;.......*.0.
   8d954:	0.p...Y.....z...
   8d964:	#.......7.......
   8d974:	....o.T...F.m.Z.
   8d984:	..#.......].....
   8d994:	..............l.
   8d9a4:	......V.6.f...r.
   8d9b4:	..............4.
   8d9c4:	..N...d.....\...
   8d9d4:	{.U.............
   8d9e4:	..\.........Z...
   8d9f4:	....x.....5.j...
   8da04:	P.......6.H.....
   8da14:	....}.v.....f.G.
   8da24:	......|...7.{...
   8da34:	....0.........j.
   8da44:	................
   8da54:	....}...+.{.^.].
   8da64:	..$.#.......N...
   8da74:	".......>.....9.
   8da84:	............'...
   8da94:	X.......'...!.*.
   8daa4:	....S.........o.
   8dab4:	....t.t.....%.N.
   8dac4:	..d.............
   8dad4:	....p.....8.5...
   8dae4:	......+...P.....
   8daf4:	......2.......2.
   8db04:	-.Y.../.........
   8db14:	K.j.....T.......
   8db24:	..X...N...Q.....
   8db34:	..-.............
   8db44:	..........q.....
   8db54:	......`.....Z...
   8db64:	..Z...........!.
   8db74:	`./...k.V.......
   8db84:	......Y.........
   8db94:	%.R...=...@.....
   8dba4:	..(...W...1.....
   8dbb4:	............r...
   8dbc4:	......=.....<...
   8dbd4:	....P.F.|.......
   8dbe4:	..d.........X...
   8dbf4:	J.....u.}.......
   8dc04:	................
   8dc14:	..5.....X...(.y.
   8dc24:	....R...........
   8dc34:	....u.........r.
   8dc44:	3.....^.p.......
   8dc54:	l.....2...".$...
   8dc64:	..G.........T...
   8dc74:	................
   8dc84:	..Y.-...c.-.....
   8dc94:	r.........../...
   8dca4:	3.......w.R...n.
   8dcb4:	)...?.........m.
   8dcc4:	`...G...........
   8dcd4:	;.......#.......
   8dce4:	................
   8dcf4:	..`.............
   8dd04:	..b.v.....!.6...
   8dd14:	T.....N...".....
   8dd24:	......N.|...|...
   8dd34:	..Y.....~.s.>...
   8dd44:	X.%.......9..._.
   8dd54:	....k...R.....y.
   8dd64:	..X.0.g.U.......
   8dd74:	....0.1.........
   8dd84:	......t.$.w.9.J.
   8dd94:	..(.&.......X.%.
   8dda4:	..S...z...V...[.
   8ddb4:	k.....z.........
   8ddc4:	..%.....M.....s.
   8ddd4:	..f...p...e.,.T.
   8dde4:	........d.l...-.
   8ddf4:	\...t...z.Q.....
   8de04:	....r...O.....E.
   8de14:	..............r.
   8de24:	..Z...........t.
   8de34:	..z.J.L.........
   8de44:	l.....C...R.....
   8de54:	..o.....[.Q.%...
   8de64:	......1.........
   8de74:	@.G.c.......]...
   8de84:	..;.m.\.,.6..._.
   8de94:	;.........'.....
   8dea4:	............M...
   8deb4:	..B.............
   8dec4:	..<... .....Y...
   8ded4:	...._...........
   8dee4:	?...............
   8def4:	w.......>.!.K.P.
   8df04:	..[...B.Z.....L.
   8df14:	..M.............
   8df24:	..\.H...........
   8df34:	....C.......w...
   8df44:	P.......G.*.....
   8df54:	#...!.........i.
   8df64:	U...f.!.......p.
   8df74:	..=...7.......B.
   8df84:	..n.B.).......K.
   8df94:	r.....,.....A...
   8dfa4:	....N...........
   8dfb4:	................
   8dfc4:	..%...].........
   8dfd4:	w...x.........+.
   8dfe4:	....$...........
   8dff4:	......\...Z...y.
   8e004:	....J.......8...
   8e014:	......j.6.......
   8e024:	(...c.......f...
   8e034:	..!...........W.
   8e044:	".i.|...........
   8e054:	,...E.....j.".k.
   8e064:	6.........>...~.
   8e074:	............].i.
   8e084:	e.~...s...d... .
   8e094:	....O.|.{...(.+.
   8e0a4:	V.....6...;.w.o.
   8e0b4:	H.......<.j...O.
   8e0c4:	m...w.....u._...
   8e0d4:	................
   8e0e4:	..c.............
   8e0f4:	0.$.........e...
   8e104:	........-...!...
   8e114:	..-.;.....!.w...
   8e124:	............=...
   8e134:	b...-.b.C.9.....
   8e144:	j...[.....]...!.
   8e154:	..........p.....
   8e164:	$.........X.....
   8e174:	......J.....G.o.
   8e184:	..........3.....
   8e194:	\.......-.9.....
   8e1a4:	{.....R.E.......
   8e1b4:	/.......5.~.....
   8e1c4:	u.....>.Y.....g.
   8e1d4:	....x.....S.Y...
   8e1e4:	....k.....J...X.
   8e1f4:	}...%.....~.../.
   8e204:	..z.......L.R.t.
   8e214:	..F.......y.N...
   8e224:	..6.....z.{.....
   8e234:	..9.|.c.~...+.N.
   8e244:	....K...{...W.j.
   8e254:	........@.H.a...
   8e264:	......n.m.....+.
   8e274:	....R.....L.....
   8e284:	o... .z.......t.
   8e294:	o...........b.z.
   8e2a4:	o.......W. ...T.
   8e2b4:	....o...M.....5.
   8e2c4:	..............Y.
   8e2d4:	..........|...].
   8e2e4:	......{...y...S.
   8e2f4:	m.R...........z.
   8e304:	..s.........+...
   8e314:	?... .....?.....
   8e324:	..;.m.%.....e...
   8e334:	..A.............
   8e344:	(...~.].S...L...
   8e354:	........E.....;.
   8e364:	X.........).....
   8e374:	..q.D...y.......
   8e384:	*...........G.<.
   8e394:	..........4.....
   8e3a4:	%.........7...I.
   8e3b4:	..............H.
   8e3c4:	;.1.Q.......~.+.
   8e3d4:	....A.....I.....
   8e3e4:	d.'.U.P.h.......
   8e3f4:	V.......7...D.W.
   8e404:	............R...
   8e414:	`.....N.i.e...A.
   8e424:	l.......V.0.....
   8e434:	..D...].......}.
   8e444:	v.+...Q./.......
   8e454:	......X.........
   8e464:	/...~...........
   8e474:	..x.v.c.~.Q.|...
   8e484:	r...J.H.t.......
   8e494:	..............p.
   8e4a4:	..;.u....... ...
   8e4b4:	..B.....)...`.A.
   8e4c4:	....9.........0.
   8e4d4:	....f.`.......N.
   8e4e4:	|...d...w.......
   8e4f4:	..N.............
   8e504:	................
   8e514:	......(...+...H.
   8e524:	........"....._.
   8e534:	V.u.8...s.i.....
   8e544:	.... ...........
   8e554:	......6.........
   8e564:	................
   8e574:	N...q...Q.......
   8e584:	+.....E.q.....Q.
   8e594:	......c.q.......
   8e5a4:	....4...9._...x.
   8e5b4:	....2.s.....x...
   8e5c4:	....\.......-...
   8e5d4:	....H.....v.....
   8e5e4:	h.....N.h.4...8.
   8e5f4:	..........-...+.
   8e604:	e.B.{.s.F.....B.
   8e614:	........e.....e.
   8e624:	J.t.D./.m.......
   8e634:	........f.......
   8e644:	......M.....1...
   8e654:	..5.........:...
   8e664:	*.1.~...........
   8e674:	................
   8e684:	....b.........t.
   8e694:	............%...
   8e6a4:	..P.w.a.....`...
   8e6b4:	n.t.s.....L.....
   8e6c4:	C.......1.......
   8e6d4:	..S.........D.p.
   8e6e4:	..Q.............
   8e6f4:	................
   8e704:	..Y.............
   8e714:	........).......
   8e724:	>.......=.=.....
   8e734:	C...............
   8e744:	q.......z.".....
   8e754:	........b.).|...
   8e764:	..L.'...........
   8e774:	..0.&...h.......
   8e784:	Z.....c.E...=.:.
   8e794:	..G.0.....*.-...
   8e7a4:	c...U...w.......
   8e7b4:	<.....Q...../...
   8e7c4:	..p.@..._.....L.
   8e7d4:	y.....m.Z.]...r.
   8e7e4:	?./...u.u.....u.
   8e7f4:	..M.o.......h...
   8e804:	l.....z.......d.
   8e814:	......h...G._.4.
   8e824:	..r.............
   8e834:	......k.....6...
   8e844:	..,.".....q.....
   8e854:	C.....1.d.......
   8e864:	..T.............
   8e874:	........C.......
   8e884:	M...j...........
   8e894:	......*.....t...
   8e8a4:	..............>.
   8e8b4:	#.....y.$.@.....
   8e8c4:	=.u.L.4.........
   8e8d4:	........"...@...
   8e8e4:	a.............,.
   8e8f4:	..=...A.........
   8e904:	....{...,.J.....
   8e914:	&...V...Z.W.....
   8e924:	4...~.F.W...N...
   8e934:	............Z.G.
   8e944:	..q.h.3.........
   8e954:	..b.../.).......
   8e964:	".........&.1.a.
   8e974:	=.{.............
   8e984:	................
   8e994:	..X.t.S.........
   8e9a4:	....<...U.....k.
   8e9b4:	)...e.b.........
   8e9c4:	W.....D.l.l.@...
   8e9d4:	....b...q.-.....
   8e9e4:	..+.M.........Y.
   8e9f4:	X...i.^.......#.
   8ea04:	..........T.....
   8ea14:	{...E...`.......
   8ea24:	..J.u.....x.....
   8ea34:	..[.........X.,.
   8ea44:	B.W.......*.....
   8ea54:	....`...-.M.i.L.
   8ea64:	.._...V.......J.
   8ea74:	^.........J."...
   8ea84:	....Z...*.v...3.
   8ea94:	H.............-.
   8eaa4:	..j.......2.....
   8eab4:	....(...z.......
   8eac4:	........~.....-.
   8ead4:	........F.....V.
   8eae4:	....E.......`.H.
   8eaf4:	....~.T... .#._.
   8eb04:	1.M.G.?.O.....i.
   8eb14:	......#.....f...
   8eb24:	........z.......
   8eb34:	..E.p.m.........
   8eb44:	q.f.......c.X...
   8eb54:	....h...1.#.h.&.
   8eb64:	e.h.....~.K.z...
   8eb74:	......O. ...L...
   8eb84:	..?.".U._.4...J.
   8eb94:	..Z...{.?...V...
   8eba4:	<.......2...D...
   8ebb4:	..........O.....
   8ebc4:	....g.........A.
   8ebd4:	..:.............
   8ebe4:	......q.I.?.....
   8ebf4:	........(.......
   8ec04:	........I.......
   8ec14:	Y...........L.\.
   8ec24:	E...E......... .
   8ec34:	a.x.!.....Y...|.
   8ec44:	..............p.
   8ec54:	..r.....H.....D.
   8ec64:	..M.............
   8ec74:	..............@.
   8ec84:	..J...`.X...S.`.
   8ec94:	s.$...2...X.%...
   8eca4:	h.....].......t.
   8ecb4:	................
   8ecc4:	".......U.......
   8ecd4:	"...>.\.......[.
   8ece4:	........b.......
   8ecf4:	........D.....3.
   8ed04:	W.....R.....i...
   8ed14:	......U.P.....I.
   8ed24:	......-...).....
   8ed34:	2.......r.....3.
   8ed44:	......V.~.a...Q.
   8ed54:	....3.........2.
   8ed64:	..).U.".........
   8ed74:	..d.....~...4.O.
   8ed84:	g.......X.g.....
   8ed94:	-.9.....i...z.+.
   8eda4:	..,.1...........
   8edb4:	..........I...!.
   8edc4:	R.....X.G...~.@.
   8edd4:	*...............
   8ede4:	............+...
   8edf4:	..........W.E...
   8ee04:	.. ...(.........
   8ee14:	).z.....O.M.....
   8ee24:	G...7...E...W.~.
   8ee34:	q...Q._...h.,.?.
   8ee44:	....|.....J.J...
   8ee54:	........b...y...
   8ee64:	..(.B.&.y.....S.
   8ee74:	..........a...y.
   8ee84:	'.....j.....<...
   8ee94:	....S.5...m.....
   8eea4:	L... .<.........
   8eeb4:	C...3.U.d.t.....
   8eec4:	v.......u.]...E.
   8eed4:	....5...(.j.....
   8eee4:	{...m.e.G.......
   8eef4:	....;...........
   8ef04:	n...q.H.o.z.>...
   8ef14:	..+.Y.w.........
   8ef24:	....b.&.F.I.....
   8ef34:	....&.......Y...
   8ef44:	......S.........
   8ef54:	........`.....y.
   8ef64:	E...".%.+.8.....
   8ef74:	A.....k.I.^.....
   8ef84:	x.*.....:.......
   8ef94:	..d...........^.
   8efa4:	........A.......
   8efb4:	..q.p...........
   8efc4:	....Z.....?.....
   8efd4:	..p.......:.@.w.
   8efe4:	..........2.<...
   8eff4:	Z...............
   8f004:	k...C.I...'.7...
   8f014:	W.(...&.N.......
   8f024:	+.(...X.....d...
   8f034:	s.H.!.......G...
   8f044:	,...p...p.......
   8f054:	....l...9.......
   8f064:	{.d.F...........
   8f074:	..............}.
   8f084:	..N...Y...V.....
   8f094:	..T.............
   8f0a4:	................
   8f0b4:	....>.E.z.....+.
   8f0c4:	..K.......\.M...
   8f0d4:	?.g.......a.*.k.
   8f0e4:	......".........
   8f0f4:	......R...1.....
   8f104:	..t.b...........
   8f114:	-...I.....?.....
   8f124:	1........./..._.
   8f134:	P.|.Q.......F...
   8f144:	....4.n...O.l.t.
   8f154:	2...m.[.......>.
   8f164:	..;.7.......[.|.
   8f174:	..?...9...!.....
   8f184:	....[...C.B.P.a.
   8f194:	].....w...&.T...
   8f1a4:	..........K.....
   8f1b4:	..H.....|.I.~.Q.
   8f1c4:	^...A.(.......v.
   8f1d4:	Y...%.;.o.L...".
   8f1e4:	y.@.....-.....~.
   8f1f4:	u.b.I......."...
   8f204:	B.Y...1...B...5.
   8f214:	..^..._...$.....
   8f224:	 ...........`...
   8f234:	!.....V.........
   8f244:	......S.e.k.4...
   8f254:	y...Q...~.....z.
   8f264:	............ .|.
   8f274:	/.|...d.....\.(.
   8f284:	....0.....W.!.i.
   8f294:	......&.....Q...
   8f2a4:	....c.n...k.....
   8f2b4:	..........p...(.
   8f2c4:	..4......./.....
   8f2d4:	......q.%.......
   8f2e4:	..........q.....
   8f2f4:	Z.......i...B.M.
   8f304:	5.-.....!.D.....
   8f314:	..q.......j.J...
   8f324:	..f.......7.;.Z.
   8f334:	!.~.......|.....
   8f344:	2.\.W.....l.p./.
   8f354:	......\.,.1...I.
   8f364:	..........e...g.
   8f374:	Q...............
   8f384:	..[...$.&... ...
   8f394:	....;.......*...
   8f3a4:	3.......>.....t.
   8f3b4:	?.........}...).
   8f3c4:	....$...2.......
   8f3d4:	..).D...Q.z.....
   8f3e4:	..&./.....*.@...
   8f3f4:	....=.d.t.......
   8f404:	-.;...`.........
   8f414:	4.....q.......x.
   8f424:	....k...i.>.....
   8f434:	....~...K.H.....
   8f444:	......?...^.....
   8f454:	..n.W.....R...Y.
   8f464:	..I.......I.....
   8f474:	..........j.q...
   8f484:	..v.5.......O.D.
   8f494:	......z.........
   8f4a4:	......8...M.....
   8f4b4:	T...W...^.....K.
   8f4c4:	U...............
   8f4d4:	....I.....Z.0.u.
   8f4e4:	!.......V.......
   8f4f4:	).a.9.s.......R.
   8f504:	....".....<...-.
   8f514:	$.H.........y.D.
   8f524:	(...".7.......R.
   8f534:	..........n.....
   8f544:	t...w.R.+.......
   8f554:	..J.....,...q...
   8f564:	r.b.-.s.......&.
   8f574:	....k.(.F...y...
   8f584:	......)...b.....
   8f594:	..b.n...'.......
   8f5a4:	t.k...Q.......Q.
   8f5b4:	W...I.......=.9.
   8f5c4:	I...y.....t.F.z.
   8f5d4:	........Z.......
   8f5e4:	s...n...T.......
   8f5f4:	..N.......V.G...
   8f604:	........n.A...a.
   8f614:	..............}.
   8f624:	......q.<...7.T.
   8f634:	S.......:.......
   8f644:	..Q.n.V....... .
   8f654:	7.9.......2.)...
   8f664:	................
   8f674:	<.e.......Z...O.
   8f684:	............T...
   8f694:	H.Z.....#...:. .
   8f6a4:	......9...j.n...
   8f6b4:	b.,.......j.....
   8f6c4:	..e.&...!.0.....
   8f6d4:	L.I...O.........
   8f6e4:	....p.'.P...X...
   8f6f4:	......7...V.=.m.
   8f704:	..%...2.....<.1.
   8f714:	|.......x...]...
   8f724:	..|._...Y.....S.
   8f734:	......>.|.......
   8f744:	?.K...g.......z.
   8f754:	..'.........V.5.
   8f764:	..........J.....
   8f774:	 .......7.......
   8f784:	......Z.S.B.[...
   8f794:	......5...n.....
   8f7a4:	^...*...3.......
   8f7b4:	N.N.........[...
   8f7c4:	..n...L.<.......
   8f7d4:	..........x.<...
   8f7e4:	!.........Y.:.q.
   8f7f4:	......B.....=...
   8f804:	9...Z.".........
   8f814:	..g._...D.....y.
   8f824:	..........<.....
   8f834:	r...!...........
   8f844:	U...F.9./.J.L...
   8f854:	2...............
   8f864:	..P.7.k.........
   8f874:	..l.U.H.........
   8f884:	..N...9.W.......
   8f894:	..l.u.m.....<...
   8f8a4:	..1.........s.z.
   8f8b4:	..........(...7.
   8f8c4:	..X.l...........
   8f8d4:	....i...E.......
   8f8e4:	......,.f.......
   8f8f4:	..b.y...........
   8f904:	......8.......D.
   8f914:	-.v.t.".(.Y.....
   8f924:	......X.....g...
   8f934:	N...A.\...a.....
   8f944:	....T.......$.d.
   8f954:	E.c.E.......L...
   8f964:	@.....J.....f.t.
   8f974:	..b...<.......+.
   8f984:	h...Z...........
   8f994:	7.....o.....J...
   8f9a4:	..../.......r...
   8f9b4:	V.....%...D.....
   8f9c4:	............<.P.
   8f9d4:	J.....}.X.U.....
   8f9e4:	..........5...2.
   8f9f4:	..U...../.v.&...
   8fa04:	....d.L.U.....(.
   8fa14:	&.W.....}.......
   8fa24:	?.....n.y.F.3...
   8fa34:	........d...L...
   8fa44:	_.].z.....+...L.
   8fa54:	D.$.......].....
   8fa64:	..$.#.G.........
   8fa74:	0.........c.(.].
   8fa84:	4.[.5...........
   8fa94:	b.b.F.x...2.B.>.
   8faa4:	..P.M.7.Z.E.3...
   8fab4:	9.L...o...&.....
   8fac4:	B.Z.........x...
   8fad4:	..k.......s.....
   8fae4:	............U...
   8faf4:	..7...;.G...'.".
   8fb04:	`.........V.g...
   8fb14:	..Z._.Z...;.....
   8fb24:	[.....k.o.B...[.
   8fb34:	......k...4.....
   8fb44:	..........9.....
   8fb54:	w...7.c.........
   8fb64:	I.f...^.0.,.....
   8fb74:	..?.:...h.4.....
   8fb84:	..C.............
   8fb94:	........7.......
   8fba4:	o._.............
   8fbb4:	......J.........
   8fbc4:	..-...~.....,...
   8fbd4:	....@.=...;.B.C.
   8fbe4:	......5.....6.U.
   8fbf4:	..W.?.<.......M.
   8fc04:	".I.............
   8fc14:	V...d...f.L.....
   8fc24:	............X...
   8fc34:	....J...{.[...I.
   8fc44:	s.a.......W.2.o.
   8fc54:	..Z...8.-.).....
   8fc64:	..9.....].r...\.
   8fc74:	Q...C.q...P.....
   8fc84:	..j.s.&.......S.
   8fc94:	1...............
   8fca4:	......../.Q.....
   8fcb4:	>.1.............
   8fcc4:	}.K.......M.....
   8fcd4:	........v.g.....
   8fce4:	..........M.-...
   8fcf4:	....B.......H...
   8fd04:	..z...(.........
   8fd14:	..~.....S...0.B.
   8fd24:	..i.....).......
   8fd34:	e.....S...v.....
   8fd44:	......;.e.$.{.>.
   8fd54:	........:.......
   8fd64:	....f.3.....p...
   8fd74:	.........._.A...
   8fd84:	......t.P.-.[.I.
   8fd94:	..~.M...D...@...
   8fda4:	..*...#...C...C.
   8fdb4:	......>.....?...
   8fdc4:	..;.,.*.+...U...
   8fdd4:	..........9.?.q.
   8fde4:	....5...F.......
   8fdf4:	....:...h.:...h.
   8fe04:	......p.....C...
   8fe14:	..i...t.....q...
   8fe24:	..l.....l.......
   8fe34:	............4.`.
   8fe44:	].....G.!.P.....
   8fe54:	..R.....n.d.;...
   8fe64:	..~.......{...+.
   8fe74:	J.........s.L.Q.
   8fe84:	#.%.....E.......
   8fe94:	......J.J.......
   8fea4:	..C...:.L.*.I...
   8feb4:	................
   8fec4:	..........[.....
   8fed4:	......Q.(.{.....
   8fee4:	..m...W.........
   8fef4:	......t.........
   8ff04:	..........].....
   8ff14:	................
   8ff24:	................
   8ff34:	b.......9.......
   8ff44:	x.....".........
   8ff54:	......Z.......d.
   8ff64:	....K.).N...]...
   8ff74:	..{.........X...
   8ff84:	....t...l...i...
   8ff94:	..}.............
   8ffa4:	%...g.....].N...
   8ffb4:	X...../.V...o...
   8ffc4:	....b.F...T.....
   8ffd4:	..<.~.z.....#...
   8ffe4:	k.....Z.C...V.^.
   8fff4:	........!...n.{.
   90004:	B.7...!...).A...
   90014:	{.....x.s.{.w.@.
   90024:	r.F.........D...
   90034:	$.9...-.....9...
   90044:	..'...4.(.......
   90054:	..".............
   90064:	6.........N.e...
   90074:	..........@...t.
   90084:	..........).....
   90094:	..>.K.8.......].
   900a4:	7.e.y.L.......g.
   900b4:	....O...H...R...
   900c4:	!...E.(...r...L.
   900d4:	w.,.p.......0...
   900e4:	..h.......m.f...
   900f4:	,.............k.
   90104:	g.......e...t...
   90114:	T...............
   90124:	..].x.H...0.....
   90134:	......2...>...7.
   90144:	.. .A.R.q...l...
   90154:	......>...h.5...
   90164:	..`.A...........
   90174:	....*...R...9...
   90184:	..9.K.N.......H.
   90194:	..2.E.....`.H.u.
   901a4:	............B...
   901b4:	....)...e.5.....
   901c4:	......Q.4.....p.
   901d4:	&.....-.........
   901e4:	|...i.H.....H.S.
   901f4:	..2.K.....r...o.
   90204:	u./.f...[.....\.
   90214:	..x.C.*.O...0...
   90224:	..<...........5.
   90234:	..i.d.b.j.....!.
   90244:	..=.......5...Z.
   90254:	....}.....v.z...
   90264:	....>...........
   90274:	...._.....I.....
   90284:	\.....".......l.
   90294:	....,.P.........
   902a4:	.. ...........-.
   902b4:	......i.#.R./.(.
   902c4:	....H.H...(.....
   902d4:	....;...6...r...
   902e4:	p.......>.3.../.
   902f4:	{.....*...`.....
   90304:	............t.'.
   90314:	0.k.l...........
   90324:	$...?.q.K.......
   90334:	r.m.........p.H.
   90344:	..z...#.7.......
   90354:	..K.a.m.........
   90364:	........;.......
   90374:	..@.D...........
   90384:	!.?.......D...q.
   90394:	L.....[.....Q.f.
   903a4:	........1...}...
   903b4:	..?.&...i.....*.
   903c4:	....E...x...Y...
   903d4:	H.c.)...f.....v.
   903e4:	......9...;.....
   903f4:	....^...O.b.G.a.
   90404:	3...............
   90414:	..w.c.....>...T.
   90424:	..............'.
   90434:	..W.R.........@.
   90444:	................
   90454:	A.C.......p...3.
   90464:	..............3.
   90474:	......x.........
   90484:	3.....8.].U...;.
   90494:	......L...V.....
   904a4:	....e.-.......A.
   904b4:	..x.....5.$.....
   904c4:	....#.:.|.......
   904d4:	..@..._.*.A...W.
   904e4:	q.......W.....8.
   904f4:	w.2.m...u...I...
   90504:	......C.)...x...
   90514:	s...........)...
   90524:	).......8.E.....
   90534:	......=.....d...
   90544:	..........F...|.
   90554:	................
   90564:	....V.v.j...'...
   90574:	....c...........
   90584:	........N.....Y.
   90594:	e.Y.^.#.....[.l.
   905a4:	n.....e.........
   905b4:	c.....t.R.......
   905c4:	>.'.r.....G.....
   905d4:	..j.C.g.[...k...
   905e4:	..Y...l.......,.
   905f4:	..........Y.=...
   90604:	........;.6.D...
   90614:	%.G.A.O.......z.
   90624:	....z...`.i.?...
   90634:	................
   90644:	........V...M...
   90654:	J.../.....d.e...
   90664:	..J.....y...H...
   90674:	....P...r.......
   90684:	v.....5.......>.
   90694:	A...i.........z.
   906a4:	<.8.d...*.*.9...
   906b4:	........2.5.C.".
   906c4:	..:...J.(.y.....
   906d4:	`.G.A.........).
   906e4:	..d.T.....f.f._.
   906f4:	..w...5.....6.=.
   90704:	?...N...........
   90714:	P.^.P.....;.....
   90724:	................
   90734:	?.....t.,.......
   90744:	9.....;...I...u.
   90754:	+.N...d.p...V.c.
   90764:	......D.......3.
   90774:	!.........E...o.
   90784:	 ...z.....j.E.p.
   90794:	....D.....d.....
   907a4:	A.....X...8.....
   907b4:	..!.....A.9.....
   907c4:	L. .........j.!.
   907d4:	..........;.....
   907e4:	2.B...........L.
   907f4:	......s.....g.J.
   90804:	..............G.
   90814:	..t.H.....m.....
   90824:	..7...^...e...,.
   90834:	..e.A...g.8.....
   90844:	o...9.....{.....
   90854:	......3.....Y.,.
   90864:	Y.......S.w...'.
   90874:	..1...w.........
   90884:	......5.4.S.....
   90894:	..&.4...v.......
   908a4:	....G.........}.
   908b4:	........'...6.o.
   908c4:	....o.......0...
   908d4:	........E. .|.i.
   908e4:	>...............
   908f4:	f.f...".......{.
   90904:	r...Q...-...f...
   90914:	..K.(...........
   90924:	....s.........o.
   90934:	..!.u...H.....%.
   90944:	..&.........Z...
   90954:	................
   90964:	....m.k.....@...
   90974:	..&.............
   90984:	@...i...u.....m.
   90994:	i.......L.....p.
   909a4:	s...1.....y... .
   909b4:	..Q.f...i.......
   909c4:	..'...........M.
   909d4:	..a.h...........
   909e4:	..........Z...-.
   909f4:	..........~.....
   90a04:	..I...........M.
   90a14:	..}.........n...
   90a24:	_.3.........=.=.
   90a34:	........Q.....I.
   90a44:	L.............[.
   90a54:	&...............
   90a64:	................
   90a74:	g.............x.
   90a84:	..Q.|...0.J.....
   90a94:	..E........./...
   90aa4:	a.........g.....
   90ab4:	w...........B.T.
   90ac4:	..5.......L...j.
   90ad4:	....2.........'.
   90ae4:	^.i...[.....5...
   90af4:	..G.............
   90b04:	 ...y.....~...z.
   90b14:	M.............3.
   90b24:	..A...........`.
   90b34:	....T...7...+...
   90b44:	..\.L.....e.....
   90b54:	M.P.%...o.%.L...
   90b64:	....U...L.|.....
   90b74:	..L.........2.8.
   90b84:	....8.z.~.R.o.O.
   90b94:	..u...~...o.5...
   90ba4:	4.......1.e.....
   90bb4:	......{.........
   90bc4:	....F.....]...'.
   90bd4:	q.......q..._.r.
   90be4:	..............P.
   90bf4:	........>.,...a.
   90c04:	g.....h.........
   90c14:	....M...........
   90c24:	.... .d.......(.
   90c34:	;.,...'.........
   90c44:	L...K...{.......
   90c54:	%.=.........}...
   90c64:	P...#.c.......`.
   90c74:	....0...........
   90c84:	?.3...l.........
   90c94:	..$.....s.......
   90ca4:	Q...........q.U.
   90cb4:	......4.P.....@.
   90cc4:	{.........'.h.S.
   90cd4:	w.V...n.+.W.".[.
   90ce4:	I.....H.Q...H...
   90cf4:	t.......;.D.\...
   90d04:	P.w.>.1.......A.
   90d14:	a...f.....}.R.F.
   90d24:	l.......L.......
   90d34:	....r.%.E.......
   90d44:	....D.6.....R...
   90d54:	u.........'...:.
   90d64:	..@.d...........
   90d74:	....I.z...a.=...
   90d84:	n.L.............
   90d94:	{.......i.....-.
   90da4:	..G...q.l.R.....
   90db4:	................
   90dc4:	S.......F.......
   90dd4:	........p...L...
   90de4:	Y.......+.N...{.
   90df4:	....=.w...#.....
   90e04:	..3.....6...-...
   90e14:	R.....!.........
   90e24:	................
   90e34:	..w.....U.N...4.
   90e44:	h.........a.....
   90e54:	.. .5...".......
   90e64:	S...5.6.9.y.....
   90e74:	....9...../...T.
   90e84:	Q.....!.........
   90e94:	..z...l.U.......
   90ea4:	....j.....u.?.i.
   90eb4:	....[.......E.0.
   90ec4:	z...v.....X...0.
   90ed4:	........o.....1.
   90ee4:	~.......B.....l.
   90ef4:	H...........\...
   90f04:	........L...E...
   90f14:	..s.-.?...Q...O.
   90f24:	!.g.......-...G.
   90f34:	;...............
   90f44:	....x.......&.+.
   90f54:	..........K.4.5.
   90f64:	..........D.Y...
   90f74:	....n./.......S.
   90f84:	..".......f.....
   90f94:	-...\.......-.o.
   90fa4:	8...y...l.f.....
   90fb4:	........6.......
   90fc4:	N.j.....M.......
   90fd4:	4.y.,.X...*.4...
   90fe4:	..u.1.....K.F.2.
   90ff4:	..........n.....
   91004:	3.........h.|.a.
   91014:	........Z...y...
   91024:	....0.M.).m.d...
   91034:	_.g...4.....J...
   91044:	..n.....E.9.e...
   91054:	8.......x...j...
   91064:	.."......._...Y.
   91074:	^.#.......I.....
   91084:	x.9.e...........
   91094:	....}...........
   910a4:	..P.G.......).F.
   910b4:	......1...t.....
   910c4:	..%.....9...L...
   910d4:	Q.....*.C.......
   910e4:	................
   910f4:	^.I.......@.....
   91104:	k...j.Z.k.......
   91114:	3.........L...A.
   91124:	)...............
   91134:	....R.A.....<.e.
   91144:	......[.H.....0.
   91154:	........x...;...
   91164:	........=.......
   91174:	6...j.P...?.....
   91184:	....~........._.
   91194:	......!.].6...Y.
   911a4:	........W.......
   911b4:	..{.3.A.........
   911c4:	................
   911d4:	;.G.U.5.:...,.g.
   911e4:	........(.......
   911f4:	....b.E...3.o...
   91204:	..l...Q.4.......
   91214:	..Y.[.....P.....
   91224:	..$.......J...(.
   91234:	Z.......%.......
   91244:	t.Y.......8...$.
   91254:	........?.0.....
   91264:	................
   91274:	..V.......6.....
   91284:	@.[.........:...
   91294:	..y.e...V.....z.
   912a4:	..V.n.......4...
   912b4:	......2.......(.
   912c4:	..m.....3.......
   912d4:	..{.............
   912e4:	................
   912f4:	c..."...........
   91304:	N...C.y.|._.....
   91314:	..}...-.........
   91324:	..).O.2.o...B.w.
   91334:	i...O.w.5...}...
   91344:	....r.....6.....
   91354:	...."...........
   91364:	0.....T...e.'.d.
   91374:	..K.t.O...t.....
   91384:	1........._.....
   91394:	....:._.&.M.Q...
   913a4:	....-.@.'.....y.
   913b4:	....Q.0...(.....
   913c4:	G.........F.....
   913d4:	..A.9...T.......
   913e4:	w.6...........~.
   913f4:	........_.....E.
   91404:	..........\...O.
   91414:	....l...........
   91424:	2.....W.$.......
   91434:	k.>...].+.....Q.
   91444:	....|...?.......
   91454:	............[.W.
   91464:	....|.....K.W...
   91474:	+.u.n.......L...
   91484:	................
   91494:	..........z...x.
   914a4:	-.B.........Y...
   914b4:	............{...
   914c4:	7...;.]...;.C...
   914d4:	........'.y...d.
   914e4:	......q.....'...
   914f4:	+...........".].
   91504:	....1.U...R...U.
   91514:	R.L.............
   91524:	..!.....T.......
   91534:	................
   91544:	.. .............
   91554:	......O.........
   91564:	8...............
   91574:	................
   91584:	....!.-.........
   91594:	z.-.#...........
   915a4:	^...)...........
   915b4:	'.e.W.F.P.......
   915c4:	..m.W...q...J...
   915d4:	....6.......{...
   915e4:	*.........*.w...
   915f4:	....g.....?...V.
   91604:	........e.......
   91614:	..=...f.......U.
   91624:	..w.......>.z.r.
   91634:	....<.......'...
   91644:	O.e.i...u.......
   91654:	..$...{...7.g...
   91664:	........*.......
   91674:	G.f.1.1.p...(.Z.
   91684:	c...q.......x...
   91694:	L.L.....h.k.z.f.
   916a4:	....B...........
   916b4:	........B.R.....
   916c4:	....+...........
   916d4:	......P...Q.....
   916e4:	....w.l.....Y...
   916f4:	....R.........#.
   91704:	~.........!...f.
   91714:	....i.......V...
   91724:	........c.......
   91734:	....:...........
   91744:	..L.......D.q.).
   91754:	......g.#.....W.
   91764:	&.......,.......
   91774:	......c./.......
   91784:	I.....B.......{.
   91794:	P.......h.......
   917a4:	%...M...........
   917b4:	S...v.o.i.B.@.a.
   917c4:	..;.....A.......
   917d4:	..=.3.........o.
   917e4:	..Q.....Y.....I.
   917f4:	..O.m...........
   91804:	..p.......Q.....
   91814:	..........?.....
   91824:	#.w.U.........r.
   91834:	......x.A.s.....
   91844:	..\.P.#.........
   91854:	..H...z.X.!...0.
   91864:	?.....!.\.......
   91874:	`.&.U.....l...f.
   91884:	......u.........
   91894:	......[.9.N...#.
   918a4:	....=.........p.
   918b4:	!...............
   918c4:	..V.i.L...!...5.
   918d4:	Z.E.........}...
   918e4:	y.......I.S.).?.
   918f4:	......u.....n.?.
   91904:	..H........./...
   91914:	:.&.......&.L...
   91924:	........d.6.....
   91934:	5.....z.c.......
   91944:	&.P.............
   91954:	$.R.......X.....
   91964:	..d.......5...n.
   91974:	V...............
   91984:	..].X...`.......
   91994:	^..... .D.....V.
   919a4:	..$.............
   919b4:	..Y...R.....w...
   919c4:	......(...).{.b.
   919d4:	......v...w.x...
   919e4:	9. .\...........
   919f4:	......}.A.?.c.p.
   91a04:	................
   91a14:	v.....z.........
   91a24:	&.b...E.n...j...
   91a34:	p.......1.L.....
   91a44:	`.....f...f.{.R.
   91a54:	..J...........i.
   91a64:	../.}.........c.
   91a74:	................
   91a84:	X.e...{.....F.+.
   91a94:	....`.W...p.....
   91aa4:	..........!...D.
   91ab4:	'.g.a.......W...
   91ac4:	..K.....X.......
   91ad4:	S...K./.!.......
   91ae4:	..Y.....K.+...m.
   91af4:	..P.............
   91b04:	....k.....'...%.
   91b14:	....^...J.f.....
   91b24:	S...u.r.........
   91b34:	..x...........0.
   91b44:	........&.......
   91b54:	X.{...&.........
   91b64:	|...+...P.......
   91b74:	..5.............
   91b84:	".1.....n.3.@...
   91b94:	..............s.
   91ba4:	..........#.Y...
   91bb4:	%.....S.........
   91bc4:	........6.......
   91bd4:	..............B.
   91be4:	&.......h...?...
   91bf4:	..:.......3.E.6.
   91c04:	...... .......'.
   91c14:	....4.........M.
   91c24:	..w.2.........0.
   91c34:	6.........Q.e...
   91c44:	H.....j.......%.
   91c54:	Q.s.............
   91c64:	..A...I.g.G.....
   91c74:	......?.......C.
   91c84:	....\.....d.0.T.
   91c94:	v.1.h...=.......
   91ca4:	z...u...........
   91cb4:	..B.............
   91cc4:	......L.|.e.....
   91cd4:	......).x.m.y...
   91ce4:	\...x.}.......7.
   91cf4:	....3.T...T.....
   91d04:	..n.8...\.......
   91d14:	..f.6.....c.....
   91d24:	................
   91d34:	..\...s.........
   91d44:	....7...f.f.Q...
   91d54:	......0.[.e.....
   91d64:	z.n.....]...%.G.
   91d74:	................
   91d84:	-...w.......9...
   91d94:	...."...;.b.....
   91da4:	..............1.
   91db4:	....C.X.....x.7.
   91dc4:	..k.s...........
   91dd4:	................
   91de4:	....\.......Y...
   91df4:	..`.S.....<.....
   91e04:	[.......N.......
   91e14:	....y.........M.
   91e24:	..j.r.....w.....
   91e34:	....v.......:...
   91e44:	2...0.e.........
   91e54:	....i.I.(...u...
   91e64:	......F...}...].
   91e74:	......6.......D.
   91e84:	....%......._.q.
   91e94:	..........9.....
   91ea4:	z.V...e.....p...
   91eb4:	^.A.......;.....
   91ec4:	w.....}.....2.C.
   91ed4:	....J.....(...!.
   91ee4:	Z.O.)...........
   91ef4:	#.A...%.>.......
   91f04:	......i.@...x...
   91f14:	..........m.E.K.
   91f24:	o...........=...
   91f34:	........+.......
   91f44:	..{.....P.......
   91f54:	....]...0.......
   91f64:	R.y.d...........
   91f74:	d.^.....[.].....
   91f84:	..V.T.?."...@...
   91f94:	..........D...9.
   91fa4:	j...D.1.X.f.-...
   91fb4:	............-...
   91fc4:	....z...E.....c.
   91fd4:	..@...X.....+...
   91fe4:	$...j.L.e.......
   91ff4:	/.(...8.....).W.
   92004:	`.K.`...z.^.....
   92014:	..u.............
   92024:	..........h...q.
   92034:	1.....n.........
   92044:	......e.(...4...
   92054:	O...s.^.......H.
   92064:	(.-...........l.
   92074:	>........._.7...
   92084:	'...........i...
   92094:	x...~.R.........
   920a4:	../.O.....W...|.
   920b4:	..a...?.......+.
   920c4:	..d./...W.....u.
   920d4:	........'.M.....
   920e4:	..S...w.N.......
   920f4:	..b.......w.....
   92104:	..........U.....
   92114:	V...m...........
   92124:	..p.w.|.I.....O.
   92134:	.._.......9...`.
   92144:	Y...E...........
   92154:	..#.\.....}.....
   92164:	z...6.....P.....
   92174:	......X.........
   92184:	y...............
   92194:	........%.q.g.0.
   921a4:	C.$......... ...
   921b4:	......G.......*.
   921c4:	G.......I. .f.+.
   921d4:	T.Q...z.........
   921e4:	............Z...
   921f4:	..:.S.........d.
   92204:	....0...Q.5.....
   92214:	".......j...G.D.
   92224:	S.....m.........
   92234:	&.Z.......g.}.*.
   92244:	M._.............
   92254:	..b...?.....~.U.
   92264:	......I.........
   92274:	D.`...s.........
   92284:	&.k.............
   92294:	............S...
   922a4:	...._.c.....k.{.
   922b4:	'.E.<.....*.:...
   922c4:	S.E.2...........
   922d4:	..A...`.1...t...
   922e4:	....f."...v.1.#.
   922f4:	Y...v...........
   92304:	#.....w.......H.
   92314:	..D.....R...8...
   92324:	).%...a.....M.G.
   92334:	T.......7...i...
   92344:	..5...s.........
   92354:	......z...Z...o.
   92364:	....!.T.,.....Z.
   92374:	..8.............
   92384:	..}...(.....s...
   92394:	........!.=.y.C.
   923a4:	....;.?.k.r...4.
   923b4:	6.Y.?...d...(...
   923c4:	1.s.........[...
   923d4:	........=.......
   923e4:	..".........-.q.
   923f4:	......k._.....P.
   92404:	......X.,.F.#...
   92414:	......4.4.{.....
   92424:	..........r.^...
   92434:	j.m.*...w...j...
   92444:	............~...
   92454:	............U...
   92464:	............{.U.
   92474:	....N.../.P...Y.
   92484:	..........?...T.
   92494:	..z...)...7..._.
   924a4:	E.............R.
   924b4:	......e.....-...
   924c4:	....z.....c.....
   924d4:	..........5.d...
   924e4:	....f.t...P.0...
   924f4:	......g.........
   92504:	......b.5.E.....
   92514:	!...z.B.....e...
   92524:	....t.......*...
   92534:	....O.....H.....
   92544:	....%...{.....y.
   92554:	........G.......
   92564:	....q.....r.....
   92574:	....X.....>.....
   92584:	......`.Y.....p.
   92594:	;.]...0...e.[...
   925a4:	..........L.....
   925b4:	..c.....-.......
   925c4:	t.....k.........
   925d4:	......?.o.......
   925e4:	T.b...}.U.......
   925f4:	................
   92604:	............z...
   92614:	............?...
   92624:	b.....W.........
   92634:	..D...+.........
   92644:	..........p...l.
   92654:	............I...
   92664:	R.+.....m.....7.
   92674:	....e.........o.
   92684:	....h.+.B.......
   92694:	..R...........).
   926a4:	]...........-...
   926b4:	v.r...P...~.Q...
   926c4:	........x...v...
   926d4:	H...r.'.R.....x.
   926e4:	..........V.....
   926f4:	>...m.....b.....
   92704:	................
   92714:	V.....!.o.......
   92724:	..........K...n.
   92734:	..}...5.....Q.t.
   92744:	'.....o.......s.
   92754:	&.g.....W.......
   92764:	m.....q...k.....
   92774:	....Y...........
   92784:	............%.v.
   92794:	(.........p.H...
   927a4:	....8...$...M...
   927b4:	$.Y.............
   927c4:	....5.h...*...~.
   927d4:	..........".....
   927e4:	#.....l...0.S...
   927f4:	..z.S...........
   92804:	..X.F...?.|.t...
   92814:	'.....@...V.....
   92824:	_...C...w.@.....
   92834:	....V.t.........
   92844:	..........>.....
   92854:	....z.u.........
   92864:	........!.......
   92874:	..P.............
   92884:	W.q.....=.v.n...
   92894:	........x.....K.
   928a4:	..-.......G.|...
   928b4:	r.Y.5.Q...[.....
   928c4:	R.M...-.@.,.....
   928d4:	..`.........r...
   928e4:	......#.2.....).
   928f4:	....-.........+.
   92904:	a.6.....).*.....
   92914:	..3.`...|...)...
   92924:	R.......".~...~.
   92934:	........X.5.....
   92944:	....7.h...C.....
   92954:	m.-.)...~.e.4...
   92964:	1.C.....F...0...
   92974:	C...............
   92984:	P...............
   92994:	w.....~.........
   929a4:	=.....?.......i.
   929b4:	....q...........
   929c4:	..L.....9.......
   929d4:	....~.k...0.f.".
   929e4:	....>...O.......
   929f4:	......h.......B.
   92a04:	..x.9...o.....t.
   92a14:	....C.e.....g...
   92a24:	B...P.o.0.Q.Z...
   92a34:	....|...........
   92a44:	................
   92a54:	..I.A...<.F.....
   92a64:	..2.b.<.........
   92a74:	....o.......A...
   92a84:	x.9.............
	...

00092c04 <sample_0_piano_kpianob1>:
   92c04:	......,...o.....
   92c14:	........|.....j.
   92c24:	............R...
   92c34:	..../...........
   92c44:	6.2.......v.....
   92c54:	7.E...F.U.......
   92c64:	............W...
   92c74:	..d.R.w...6.....
   92c84:	j0....."K3n9.D.\
   92c94:	.Y.I.6l)`3.+.#..
   92ca4:	....e...H....'..
   92cb4:	..g.............
   92cc4:	........7.L.Q...
   92cd4:	F...9.j.;.K...:.
   92ce4:	................
   92cf4:	..h.M.4.=.^.....
   92d04:	....7...f_.R.GJA
   92d14:	.1h..-.>N;WF.I.J
   92d24:	.?../..'.%.%.(;.
   92d34:	c...s...! ......
   92d44:	u.l...c.].....j.
   92d54:	[.[...Q.......q.
   92d64:	i.....p......!..
   92d74:	............4.y.
   92d84:	..c.....b.....#.
   92d94:	#.t6.=.T'Hs4.'.%
   92da4:	.8.6C7.O.Y.(L..1
   92db4:	.!2+!1....*....!
   92dc4:	F1....\.7.....u.
   92dd4:	..`.8.^.........
   92de4:	d.~.V.........F.
   92df4:	....9..&..E.N...
   92e04:	R...0...........
   92e14:	."....[......9.N
   92e24:	.W.Q,3.$L,w.."PE
   92e34:	.AQ*.;`)/.}#.-.!
   92e44:	....... .4.,.&..
   92e54:	.._...W.s.......
   92e64:	..D...h.........
   92e74:	..X............$
   92e84:	Q.....2...L.....
   92e94:	..&......$..j...
   92ea4:	..Q.M..*.LED.&.%
   92eb4:	.#....n=.7+?.G}(
   92ec4:	.!..d.Z3t'......
   92ed4:	...(..$...Y...*.
   92ee4:	..........#...".
   92ef4:	W...P.4.......x2
   92f04:	R.]...D...0.....
   92f14:	o.....*.E.H.....
   92f24:	<...k...........
   92f34:	.M.A.C.U.<...!i&
   92f44:	.2.B.;.<.D>.;.N3
   92f54:	.*=..........2.+
   92f64:	..E.j...........
   92f74:	[...........k.].
   92f84:	q......#..G.p...
   92f94:	..........?.....
   92fa4:	..E.........u...
   92fb4:	.........7./ZK.`
   92fc4:	.K.:.....1.3.,.G
   92fd4:	.=. ....a2.+b...
   92fe4:	....9.P&.0......
   92ff4:	......w.^.....K.
   93004:	....I.........S.
   93014:	7.....%.....$...
   93024:	 .l.S.O.`.......
   93034:	..q...U.....m. .
   93044:	X.. .A.M._yd./C&
   93054:	.+p&.<.?wH.6J#./
   93064:	z#1A.*..M.......
   93074:	.0.2....~...^...
   93084:	....X.Z...y.....
   93094:	w.g.-...v. !....
   930a4:	......=$......t.
   930b4:	..m.^.......0...
   930c4:	..T.U.`...G.....
   930d4:	._.[@X]=...&...D
   930e4:	.F.H.3q.(2.>.>.,
   930f4:	. ........./.=@.
   93104:	....|.../.......
   93114:	;.....:...F.~. .
   93124:	....|.....^.....
   93134:	........M.......
   93144:	......R...V...<.
   93154:	D.\......<gX.Za[
   93164:	.Dy-.$.4.E.Q.7./
   93174:	./.;.=.9484.....
   93184:	....a7.9..].....
   93194:	].W.....q...\.m.
   931a4:	..*.b...n..."...
   931b4:	......6.........
   931c4:	..N...(.........
   931d4:	..........Q.....
   931e4:	..]8.L.]LS.G.$.%
   931f4:	D;gS.IE1);.1k>.E
   93204:	.>.7.!....V..'.@
   93214:	.>..6...........
   93224:	............].e.
   93234:	....F.........X.
   93244:	...'F.........7.
   93254:	..].3...^.a.....
   93264:	......%......+.E
   93274:	4S.R.8..."G:.B.;
   93284:	H'a.f)e@.8.@.3..
   93294:	.......&%L|(r...
   932a4:	......s...B.....
   932b4:	..J...).K.#.....
   932c4:	3...Y.R.....Y...
   932d4:	..C.....t...O...
   932e4:	R.....R.U...m...
   932f4:	.."....-.G.i.S.1
   93304:	...-.=&H.3)0N%.0
   93314:	.8'=4B40.(..M...
   93324:	.:.6.%..........
   93334:	....<.....+...u.
   93344:	..$.........A...
   93354:	2.!.....Q.....}.
   93364:	......r.........
   93374:	..w...\...!.!...
   93384:	.*.W.^"R.-p(;2.E
   93394:	.F.:J0M$.8x7.@.<
   933a4:	.H......$..,.8.)
   933b4:	......j.G...\...
   933c4:	B.........|.....
   933d4:	7.>...'.........
   933e4:	B.;.......A.....
   933f4:	y.....O.Y.8.....
   93404:	....].7.j..3.V.[
   93414:	.Iz/./.2.G.I.;.&
   93424:	,4.4.+=J.V.4$.K.
   93434:	.....1G+.!$,R...
   93444:	j.............|.
   93454:	..........P.D...
   93464:	A.....}.....V.Z.
   93474:	....+...........
   93484:	*.........y.Q...
   93494:	....#9zQ.S;Fy9.(
   934a4:	.9DS.B.6.?b,.'J=
   934b4:	.\-M434.x.Q...3.
   934c4:	)4..L'....Z.....
   934d4:	,...........}...
   934e4:	2.f...........w.
   934f4:	x...z. .v.n.q.=.
   93504:	................
   93514:	........O...<.'4
   93524:	.G3T0GZ).4.D.@.?
   93534:	.K~...N2 5ud.N..
   93544:	..E...p......5n-
   93554:	........N.....B.
   93564:	......H.g.......
   93574:	..z.......G.....
   93584:	..............V.
   93594:	..?.....^.....9.
   935a4:	\...&....8.L.L.3
   935b4:	19H=.-CJ.F.A.3<.
   935c4:	.&.X.QtIr*......
   935d4:	..u..1z<x...U...
   935e4:	..}.....+.......
   935f4:	..-.....S.....d.
   93604:	..I.d.....0.....
   93614:	......q.o.%.J...
   93624:	%.......`.(.....
   93634:	...Dy0Y@.@./.6.2
   93644:	.9.Ys?.......T.[
   93654:	ZJn...a.......s<
   93664:	.5o...|...a.....
   93674:	;.....].$.@...m.
   93684:	>.y.......6.....
   93694:	......e.........
   936a4:	..V...6.%.N...N.
   936b4:	Q."...7...7.$-x:
   936c4:	,2.@%?...1.P.P.0
   936d4:	.!...2.a[M.;I..%
   936e4:	.......#.7.).%..
   936f4:	..5...........r.
   93704:	..............#.
   93714:	....G...^.'.....
   93724:	:.....G.3.....n.
   93734:	..5.5.f...}.3.M.
   93744:	....f . e/.CLI.%
   93754:	.+.>.L.S.0S....F
   93764:	.T1L.7.3.$w.Z...
   93774:	.)Q).6..1.......
   93784:	U...I..... .....
   93794:	....w...,.......
   937a4:	......R.:.....`.
   937b4:	H.f.e.-.>.......
   937c4:	6.../.~...].m...
   937d4:	...8l9.:.&.(.>.Y
   937e4:	uGL%...(}F.K.F.>
   937f4:	.>Q.....d....1.9
   93804:	g!%.........J.+.
   93814:	)...S.-.m.v...`.
   93824:	..........y...\.
   93834:	....n.....W%....
   93844:	_...h.....f.....
   93854:	......(.....J3e>
   93864:	_0|!F..M.W.=....
   93874:	.0.<.A.OnI.+....
   93884:	....e..2z0{.'.|.
   93894:	R.H...G.1...%.z.
   938a4:	....`...R.......
   938b4:	..,.....*...`.!.
   938c4:	T.T.............
   938d4:	....>.W.<...7...
   938e4:	.......:.5)'k".7
   938f4:	.V.QG2{&},.(O6.M
   93904:	.VyB.4}........(
   93914:	I1.0.'..........
   93924:	B.......x.....5.
   93934:	................
   93944:	............E...
   93954:	......L.......;.
   93964:	..x.....W...x.v 
   93974:	.0V)...!.G.O.>.2
   93984:	71...$.7QK.O.C.5
   93994:	Y ..<.?.P).*.+.)
   939a4:	........u.....d.
   939b4:	....p.0.....T.f.
   939c4:	..........#.....
   939d4:	............m...
   939e4:	......x.L._.4...
   939f4:	;...W...P*.*....
   93a04:	.9.EXH.C.9.0q..,
   93a14:	.:.I.V.C.>..?...
   93a24:	...$e(.1.,m...r.
   93a34:	'.....j.b.......
   93a44:	..=.6.j.....Q...
   93a54:	^...............
   93a64:	>.........R...".
   93a74:	..,.F.....y.....
   93a84:	i..%..G. ..8.>AE
   93a94:	.D.5.....*.6.JZO
   93aa4:	.P355 ......j..:
   93ab4:	.(S'.$C.../.....
   93ac4:	v.>......._.}...
   93ad4:	..F.Z.:...#.b...
   93ae4:	..S....."._."..%
   93af4:	........#.O...0.
   93b04:	......".q.\.o...
   93b14:	P.}..5.>.D.?07.&
   93b24:	2$z!e9m@yUfQ.&>)
   93b34:	D...4.l..)./.%..
   93b44:	y)h.....n....._.
   93b54:	K...........|...
   93b64:	....y.....?...e.
   93b74:	".....y .(C...S.
   93b84:	....A...........
   93b94:	p... ........$.,
   93ba4:	.F.@.D.5.&.-l.m7
   93bb4:	.M.Q.J_<..R.D.c.
   93bc4:	.$y1. n%H/N"..;.
   93bd4:	....9......./...
   93be4:	[.....`.|.......
   93bf4:	&.R.!...........
   93c04:	< 5.!.;...=...Q.
   93c14:	9...........l.U.
   93c24:	H...i..!!&.G.A.9
   93c34:	.8.,!..&.3$FYYqJ
   93c44:	.3.*....... . .)
   93c54:	1(\,.,..}...V...
   93c64:	..........~.A...
   93c74:	..Q.).......:...
   93c84:	J.t...g.6.h3. ..
   93c94:	....D...........
   93ca4:	g.......3...j...
   93cb4:	H..5D8.?.@.0D+.#
   93cc4:	...6.MAJtN.?....
   93cd4:	..^.. z!.".,Q7.$
   93ce4:	......o.......e.
   93cf4:	..4.....=.c.....
   93d04:	........&...S.d.
   93d14:	...,^-....!.....
   93d24:	0.7.:.9.....Z...
   93d34:	....M.......N*EB
   93d44:	.?.8.=.&...*.0.E
   93d54:	.TTOt6.#....W s.
   93d64:	...+Q1.0.,....y.
   93d74:	D...............
   93d84:	..}.....!.......
   93d94:	~.....Q.\.}..'..
   93da4:	..........$.....
   93db4:	<.......?...t...
   93dc4:	..g.x../D/.C.>..
   93dd4:	H$. ..X1.FxPGM.7
   93de4:	......1......(.-
   93df4:	:8A'O.......I...
   93e04:	-.=.K.'.......8.
   93e14:	......u...e.:...
   93e24:	S...u... &."l.7.
   93e34:	..G.....J.9...Q.
   93e44:	/.R.............
   93e54:	%"y=.?.9_3.%...%
   93e64:	B*.J.Y.Gs2.$.%\.
   93e74:	..,.=.v*.2.3.-..
   93e84:	........7.a...V.
   93e94:	~.E...j.....w...
   93ea4:	[.... ..4.......
   93eb4:	_.C e+..........
   93ec4:	^...).+.e.S.....
   93ed4:	*.......3.B*42.B
   93ee4:	.:]-Q+`.q..0.S.N
   93ef4:	.DC9p).#..(.'...
   93f04:	.).5 0.2....T.`.
   93f14:	..d.......o.s...
   93f24:	..#.f.h.P.....(.
   93f34:	z.|.....3.7. 1.)
   93f44:	..|...L.k.6.H.(.
   93f54:	g...-.C...[.....
   93f64:	.....%.8.;V3.8{&
   93f74:	....'8dH.OH?.<.+
   93f84:	.$....U...7*./85
   93f94:	.;..^. .....L.).
   93fa4:	o...;.....?.....
   93fb4:	m.H.(.R.*.......
   93fc4:	......[$.4....M.
   93fd4:	..I.G.....Q...H.
   93fe4:	........&......(
   93ff4:	0."8.B.0. 9..#.9
   94004:	=D.L.C_;.0.)S...
   94014:	..."..[8<B.2....
   94024:	....\.......h...
   94034:	:...S...j.......
   94044:	......x.....T...
   94054:	'3.3....m.(...O.
   94064:	..F.g...........
   94074:	......m.m.6-.::B
   94084:	E)..Y..#.7c@.L.@
   94094:	.9A=....h......#
   940a4:	.?.>`*V.e.....{.
   940b4:	+.........M.....
   940c4:	!.............9.
   940d4:	....*.+....2v5..
   940e4:	q.s...t.6.c.?...
   940f4:	..Q.....{.l.....
   94104:	....|1.?.;.$....
   94114:	...9z?>@mD.C...%
   94124:	.!......3-.<.7./
   94134:	....)...H...&...
   94144:	....k.[.O.......
   94154:	M.......0.......
   94164:	.....6..o...x...
   94174:	......9.&.....w.
   94184:	....~...y.....h9
   94194:	h9y66*....?+.3.9
   941a4:	.E.J.:P0e/.'....
   941b4:	:..(+>.BP"..*.f.
   941c4:	I.......a.....;.
   941d4:	..o...e.........
   941e4:	......$.k...v%.*
   941f4:	t3..O...M. .....
   94204:	(.....K.4...u...
   94214:	.........-.=.5. 
   94224:	...!#&.+R:vJs@,7
   94234:	K<.2..2.r...W3R@
   94244:	D86 .....#/.G...
   94254:	....v...........
   94264:	 .....m.......:.
   94274:	....... .4F,s...
   94284:	+.....*.......u.
   94294:	y.....Q.........
   942a4:	...3.9..2 \!. ..
   942b4:	.0.Bd=bC.?.8R88#
   942c4:	......~4[Em/6..!
   942d4:	.'..<.a.F.......
   942e4:	..:.r...`.....1.
   942f4:	Q.0.......G...#.
   94304:	5%E4p(..........
   94314:	`.i.o.]...P.a...
   94324:	....I.L......2./
   94334:	.'.*..:.;%.-.9.A
   94344:	o<.<.C.5........
   94354:	,EG4v!.#S)U s.,.
   94364:	......Z.......Z.
   94374:	....>...E...y.X.
   94384:	....8.=.0..%[3.$
   94394:	2.h.............
   943a4:	C.......J...h...
   943b4:	....R.j!.11-i ..
   943c4:	 ._../w:B6.=vB.?
   943d4:	.A.......*&9.(.%
   943e4:	N+.,......H.i...
   943f4:	q.w.5.@.'.C.@...
   94404:	......*.......e.
   94414:	.....!++!.......
   94424:	......q...j.*...
   94434:	%.....p.R.A.....
   94444:	.'.-.).&.....(j+
   94454:	.7.6g8.E.P.7..7.
   94464:	&..,f0}#4,.8....
   94474:	..5.........o.x.
   94484:	G.....w.Q...U...
   94494:	A.B.......Q.....
   944a4:	.3.&....].6.e.X.
   944b4:	....i.......r...
   944c4:	e.....*.....-0<)
   944d4:	......5#.0.0.,.:
   944e4:	.T'L.1'...:&.#. 
   944f4:	.2_2.+....... ..
   94504:	........Y...7...
   94514:	........t...~...
   94524:	..,...p...Y1.!..
   94534:	*.'.+.......Y.L.
   94544:	).B.......Q...i.
   94554:	V......'Y(....E.
   94564:	|+.)f#+-.=\\)I8.
   94574:	..3......'.1.,.*
   94584:	.....#Z#h.......
   94594:	<...u.,.....5.`.
   945a4:	X...&...........
   945b4:	..i..)A&....-...
   945c4:	..........H.....
   945d4:	..............t.
   945e4:	.*b(....[!.)W'P.
   945f4:	./.Q.W99.'."K.a.
   94604:	..B(.1./b#..[ .%
   94614:	j&Z.....b.k.....
   94624:	......u.T.......
   94634:	7.........=...U/
   94644:	......q.I.....t.
   94654:	_.m.#...s.......
   94664:	......?.H..!B!..
   94674:	...*.'a....<WP.I
   94684:	.:.+.!......R-.0
   94694:	.*0$...".,.$..2.
   946a4:	....N.......3...
   946b4:	..........N.h...
   946c4:	....6...v.9.5...
   946d4:	....Q.d.....G...
   946e4:	..3...'...F.....
   946f4:	{...."R.+.L(.,..
   94704:	...".<EN.E.9)1.%
   94714:	.....#D*b2.'.!.#
   94724:	h%..}(b.........
   94734:	..H.;.>.....G.q.
   94744:	x.j.{.j.....<...
   94754:	..... ..........
   94764:	..N.x...........
   94774:	......Y.........
   94784:	...!.*.".....$.?
   94794:	.F.B*A.2."i...@&
   947a4:	.,*+.*..."i+H..#
   947b4:	Y.j.!._.n.D.....
   947c4:	..{.r.l.....c...
   947d4:	=.#..... .....9)
   947e4:	3.........L...H.
   947f4:	|.-.............
   94804:	o.U.W...'.c.=#.*
   94814:	.......(.7.D5B5D
   94824:	#4Z.V./.L$d-@-.#
   94834:	...).,.(E#j'[...
   94844:	....3...o.......
   94854:	........c...`...
   94864:	B.......q O.....
   94874:	....N.........T.
   94884:	R.....m...k.....
   94894:	.......,.!....c.
   948a4:	.(.0rC.G.B./.!..
   948b4:	A.X(-/R'}.~".-Z%
   948c4:	.&.2g%..Z.......
   948d4:	..U........./...
   948e4:	....-.{...1.q...
   948f4:	...!..q...X.....
   94904:	......)....... .
   94914:	......y...n.....
   94924:	.*..p........0~E
   94934:	.D.?r1. @.{..-.*
   94944:	w.5$.*L..(./.,."
   94954:	.. ...p.........
   94964:	..........g.....
   94974:	......$.#.....e.
   94984:	....7.....m.....
   94994:	*.{...y.........
   949a4:	..p...6., .!....
   949b4:	..W...j3.AwD.?+6
   949c4:	%....+.#."%&.&F.
   949d4:	O".-.(.0.(..]...
   949e4:	..(.....<.......
   949f4:	........$.L...C.
   94a04:	............_.p.
   94a14:	M...G.|.*..."...
   94a24:	......N...P.+...
   94a34:	....$.......C.'!
   94a44:	...:.M.>g)...%. 
   94a54:	...,-#. ."d!l(e0
   94a64:	}..,......#.@...
   94a74:	..|...........p.
   94a84:	..W...j.3.....S#
   94a94:	>.......n.Z.....
   94aa4:	................
   94ab4:	<.O.....Q...1...
   94ac4:	..O.....B..).G.H
   94ad4:	.3I.0%...#.%.#`(
   94ae4:	.....$g&E1b4.)..
   94af4:	....#...$.......
   94b04:	..............V.
   94b14:	-...o.........K.
   94b24:	}.#.3...........
   94b34:	..@...`...a.....
   94b44:	............)...
   94b54:	..~.l5.@)A.9.(v(
   94b64:	n U .%O'i"M a ..
   94b74:	.*U5.0.,. ......
   94b84:	....\...c.......
   94b94:	......+...u.....
   94ba4:	........a...@.4.
   94bb4:	....u...h.......
   94bc4:	O.......-.......
   94bd4:	s...G.....B.p..2
   94be4:	mB.=.6.0a&...&.$
   94bf4:	.%.&0....!.+.3.2
   94c04:	..L#~.......^.i.
   94c14:	............I...
   94c24:	1.....r.........
   94c34:	+.........j...@.
   94c44:	......3.....N...
   94c54:	X.......Q.....0.
   94c64:	.........1*9/<.8
   94c74:	.+.'.!O!.'.%.$|.
   94c84:	/.. .*.240.7~"..
   94c94:	..9.p...&...9...
   94ca4:	..R.....m...$...
   94cb4:	....P...s.{.x...
   94cc4:	....{.........r.
   94cd4:	;...8.+.....z...
   94ce4:	....'.f.I.....S.
   94cf4:	...-.9J:.9.-.(."
   94d04:	.%.)=$j'..E.^%.#
   94d14:	./.?c5......p.:.
   94d24:	....<...Z.".....
   94d34:	 .......:.....c.
   94d44:	*.=.........q...
   94d54:	..6.....4.....r.
   94d64:	T._...8...9...G.
   94d74:	......c......+I6
   94d84:	:;.7y).+.".".,y&
   94d94:	u.0.. ..#$$:N?.-
   94da4:	a.:.D.n.M.K...U.
   94db4:	U.#.............
   94dc4:	K.....t.O.....%.
   94dd4:	....#.<...>.....
   94de4:	T.......<.A.g...
   94df4:	../.............
   94e04:	.......)r7.6.3.1
   94e14:	1".#.,.&. *#."P.
   94e24:	...).:=>U,......
   94e34:	c.[.P.....*.q. .
   94e44:	..../.V.B.=.....
   94e54:	..m...g.e.......
   94e64:	%.....0...V.!...
   94e74:	..k.3...h.I.[.e.
   94e84:	N.....^...y...D.
   94e94:	.&!04904.(.#.-[#
   94ea4:	k$2'l$......l*.;
   94eb4:	V>.+z.......}...
   94ec4:	..>...3.......|.
   94ed4:	c.....e.........
   94ee4:	....1.!'7.......
   94ef4:	&.z.v.5.........
   94f04:	..@.4.Z.=.......
   94f14:	..v...:.<.. L7.4
   94f24:	n.}+Y*O)."2(.*.%
   94f34:	&.D.m.K-9?U=r'..
   94f44:	e.1.....Z.!.....
   94f54:	p...'...$.K.i.O.
   94f64:	..X.#.-.....0...
   94f74:	K#..u...........
   94f84:	......O.l...#.r.
   94f94:	V.....!.........
   94fa4:	....>%.1f/.-.-.)
   94fb4:	/#.&.'.-w"<...\.
   94fc4:	.1+@.7Z#....n...
   94fd4:	Q!..Y...R./.....
   94fe4:	d.....#...X.x.E.
   94ff4:	......j.O...e...
   95004:	............0...
   95014:	......\...!./.0.
   95024:	....S.......?..#
   95034:	.*./o.0..'."|'.+
   95044:	B..!d.]....4.>.1
   95054:	o&". ...l..%j#..
   95064:	..D.....T.v...v.
   95074:	..{...[.........
   95084:	....t...........
   95094:	..............A.
   950a4:	*.5...X.+.;.....
   950b4:	9.....:.. .(t../
   950c4:	r-8&{!.*!12-# ..
   950d4:	o.. .2i:L2.&....
   950e4:	B..%.2....B...0.
   950f4:	".............`.
   95104:	....U.........\.
   95114:	m...7.....>.h...
   95124:	..........i.p.^.
   95134:	........|.../...
   95144:	..[.c%.-.2r).$7!
   95154:	C..57,..-.s....6
   95164:	B5.../'......0.,
   95174:	6.T.......f.....
   95184:	;...g.a.3...r...
   95194:	..Y.....n.%.S.0.
   951a4:	R...~.......M...
   951b4:	..P.....i.j.....
   951c4:	..........R...."
   951d4:	.///.'..+#.740.*
   951e4:	.......#.+32.:U*
   951f4:	'...l$...,......
   95204:	......2...j.n.}.
   95214:	....p...l.z.....
   95224:	............-...
   95234:	......".........
   95244:	q.......@.....*.
   95254:	....`....!.3.)$.
   95264:	.!]'.2g7.&..O.#.
   95274:	...'9<.7.$&....)
   95284:	.,z)....X.......
   95294:	......i.c.......
   952a4:	v.`.....H.e.p...
   952b4:	B.8._.C.{...@...
   952c4:	........|.>.....
   952d4:	N.....q.E.(.....
   952e4:	..?).*y'  ...+.9
   952f4:	.3I.......|..+.>
   95304:	u3......K'.,.*. 
   95314:	..)._.....R.`.*.
   95324:	R.......'.{.....
   95334:	..;.:.?.E.......
   95344:	........3.f.D.9.
   95354:	y.r.....$.M.....
   95364:	[.....n.j....%.*
   95374:	.%...".1T7.-."..
   95384:	Z.....n4`;b+Q...
   95394:	...).*.(.)....{.
   953a4:	..v...N..._...E.
   953b4:	..k.u.|...E.-.X.
   953c4:	..Q.8...R.*.....
   953d4:	n.,...a.;.......
   953e4:	X.......$.E.....
   953f4:	....v..'.%....I$
   95404:	\2.2p*.&.......!
   95414:	*3.4d)n.6.. .#.(
   95424:	.,.+-...#.8.....
   95434:	........\.......
   95444:	......D.N.......
   95454:	f...........B...
   95464:	....K...Q.....|.
   95474:	....2.F.>.+.6...
   95484:	.$Q.....:)...-.2
   95494:	.*.......#.3./1%
   954a4:	. B...n"G*x-.52!
   954b4:	7...........^.+.
   954c4:	U.............?.
   954d4:	9...........U...
   954e4:	n..._.......?...
   954f4:	..............b.
   95504:	......K.... D...
   95514:	. .#"*.4.5.'T.r.
   95524:	...%.07+.(,!...!
   95534:	...*.8:9........
   95544:	...._.7.........
   95554:	R.............#.
   95564:	b...............
   95574:	D...`.........).
   95584:	M.t.....8.|.Z...
   95594:	(.#...M.Z.f....)
   955a4:	.:.5.#..8...4!2/
   955b4:	.)c%.$B"....V1j=
   955c4:	.5L.........D.k.
   955d4:	....F...G.!.....
   955e4:	....'.L.....k...
   955f4:	f...........,...
   95604:	..Y.P.:...=.....
   95614:	a.<.........}.b.
   95624:	t......../(@....
   95634:	..6....&.($%.+.(
   95644:	..... .4.>R3( 1.
   95654:	............B...
   95664:	..(...~.....I...
   95674:	....e.;.~.s.....
   95684:	....<.......x...
   95694:	1..... .y.....q.
   956a4:	..k...+.".....(.
   956b4:	...7.8./..}._.|.
   956c4:	.#.!.*.-/'..w..!
   956d4:	.7.@.3........).
   956e4:	................
   956f4:	..T.....d.....@.
   95704:	R...............
   95714:	......6.x.^.1...
   95724:	..e...`...7.....
   95734:	....1......#J3.;
   95744:	?,........T.!$.-
   95754:	.-.".....&.8.?.4
   95764:	........'.....y.
   95774:	....a...l.......
   95784:	........q.......
   95794:	w... . .....8...
   957a4:	...... .....?.x.
   957b4:	....C.R.....y.B.
   957c4:	.....#.4.;.%..e.
   957d4:	^.4.?.X$'0o-m.b.
   957e4:	..L&m:.?.0.#k...
   957f4:	........1...B.N.
   95804:	........J.p.=...
   95814:	..............I.
   95824:	....6.(.6.....1.
   95834:	..........4...J.
   95844:	T.....o.N.../.|&
   95854:	.6.1F%....C.....
   95864:	.(]0.(....A..+.7
   95874:	.:.7.$....5.4...
   95884:	....P...........
   95894:	=. .....B.g.O...
   958a4:	7...P...........
   958b4:	(.y...I...H.....
   958c4:	......Q.......\.
   958d4:	..%...N..&.3z-.$
   958e4:	. ........?)L0.'
   958f4:	..?....&.60=.8.!
   95904:	......4.S...q.l.
   95914:	K.}...-...Y.-...
   95924:	F.....k....!..t.
   95934:	U.......k.......
   95944:	:...w.8.....t...
   95954:	g.......'.#...@.
   95964:	..]).+.*.(l$y.K.
   95974:	....u/@,N#z.>...
   95984:	.'.7.=?:.!..{.).
   95994:	......a.N.8.d...
   959a4:	..C.............
   959b4:	..W"0...q.j.a...
   959c4:	........E.'.....
   959d4:	....".S.m.^...e.
   959e4:	......Z...... .*
   959f4:	.+X).&z......#H+
   95a04:	g)\$....$..&+8.@
   95a14:	.4.%..z...m...h.
   95a24:	..;.........B._.
   95a34:	R.........T.n...
   95a44:	!.+...[.U...H...
   95a54:	v.]...R.N...3...
   95a64:	........a.....h.
   95a74:	....B...c&.*./."
   95a84:	.......#.(~*....
   95a94:	H...0'.8.<.5.'!.
   95aa4:	....B...........
   95ab4:	................
   95ac4:	%.............(.
   95ad4:	....e.w.g.U.`...
   95ae4:	M.........0.l...
   95af4:	 ...T...q.......
   95b04:	%.G%.0.,....L...
   95b14:	j!.)3). .......%
   95b24:	.9.;.5P&........
   95b34:	..5.........3...
   95b44:	......:....._...
   95b54:	..7...o...N...7.
   95b64:	&...........x...
   95b74:	4...[...........
   95b84:	q. .......G.G&;1
   95b94:	.). ....:....,.&
   95ba4:	....G...V(.8.7.6
   95bb4:	.(......Y...U...
   95bc4:	2...e...........
   95bd4:	U.).......*...7.
   95be4:	......E.Z.....[.
   95bf4:	..h.........M...
   95c04:	................
   95c14:	%...I.G(;/+(9...
   95c24:	k....#.)t&t i...
   95c34:	...&s5.9.2.-.#}.
   95c44:	..-.......w."...
   95c54:	....R.t.........
   95c64:	........>.......
   95c74:	V.....=.S.V.4.~.
   95c84:	....:.?.....R...
   95c94:	(."...........).
   95ca4:	.&u+.*..'.......
   95cb4:	.,.(2.s.....l'.4
   95cc4:	24\670s$......m.
   95cd4:	..M.0.r...M.....
   95ce4:	..!.....J.......
   95cf4:	x.@.'...........
   95d04:	'.7...).I.i.=...
   95d14:	..V.4...!.......
   95d24:	..K........$./*$
   95d34:	.. .U....".,.$..
   95d44:	r.....B%..14.9./
   95d54:	.$Q. .n.&...U...
   95d64:	>...............
   95d74:	....9.O.w.Y.....
   95d84:	1...W.[...2...y.
   95d94:	..E.....;.(...W.
   95da4:	p.......W...D...
   95db4:	].<.?%Z*.%\...}.
   95dc4:	...%.,J$....!...
   95dd4:	&"s,>7.7!1b$....
   95de4:	....|...........
   95df4:	....>.}.<.....D.
   95e04:	.. ...$.........
   95e14:	$.:.........m...
   95e24:	....'.R...;...$.
   95e34:	....J./.-.V...9#
   95e44:	.(.%R.......(*.(
   95e54:	."......L.^ .+.8
   95e64:	.74/.#}!......W.
   95e74:	9...b.....v.....
   95e84:	....{.k.........
   95e94:	..N...}...t.....
   95ea4:	(...........Z...
   95eb4:	....3.O.0.......
   95ec4:	....y.... #'W&..
   95ed4:	=.....G(.%.!....
   95ee4:	.. ....-.6.3.- *
   95ef4:	D#..v.K.J.....C.
   95f04:	*.....}.......H.
   95f14:	..~.?.0.F...../.
   95f24:	..c.b...`.....b.
   95f34:	6.....#.:.P.....
   95f44:	................
   95f54:	..-..).#........
   95f64:	.%4(=.t.........
   95f74:	.-.3.2.-s1.$....
   95f84:	S.x.....A.^...%.
   95f94:	=...H.......6.c.
   95fa4:	U.....v...$.....
   95fb4:	. ..}...........
   95fc4:	Y...+.o.........
   95fd4:	9.[.x...F.Q.. =)
   95fe4:	A.......g.L&9%".
   95ff4:	..z...V...@-.-y/
   96004:	W5.2.!..'.......
   96014:	............i...
   96024:	..7.............
   96034:	k.T.....q.{!....
   96044:	[.,.....-.....@.
   96054:	<.:.....`.......
   96064:	s...... h#....#.
   96074:	k.A.Q%.#M ......
   96084:	... }%.).4.5.0.$
   96094:	t.......y...2.E.
   960a4:	..&.....&.......
   960b4:	5.)...j.........
   960c4:	r.!...9.+...x.|.
   960d4:	..............{.
   960e4:	..........t...f.
   960f4:	S.. ....?.;.... 
   96104:	.%.#......R...w"
   96114:	)+.3k5D5.#!.-...
   96124:	..@.............
   96134:	....I.......;...
   96144:	... ..L.....t.`.
   96154:	>...?.....G.....
   96164:	4.}.}...2...g.j.
   96174:	}.2.......... m.
   96184:	P.&.....m".,. ..
   96194:	..!...l..!b(64.:
   961a4:	.2G 9.%.........
   961b4:	C.D.).~.J.B.u.{.
   961c4:	..........A.e '.
   961d4:	%.j.#.D.1...K...
   961e4:	..o.....J.O.\...
   961f4:	 .y...........7.
   96204:	......A.b...H.H.
   96214:	N..*}'......r.$.
   96224:	..S..).6E:.,."..
   96234:	m.^.........&...
   96244:	<.G.......P.....
   96254:	..*.."....R...I.
   96264:	...!..j.'.......
   96274:	c...........,.V.
   96284:	X.....T.........
   96294:	......L......'.#
   962a4:	..l... ...,...;+
   962b4:	`8.3.*.*....Y...
   962c4:	..+.............
   962d4:	......r.....o.?.
   962e4:	......F.....Y...
   962f4:	....;.......}...
   96304:	..G.....I.......
   96314:	..<...y.d.3.e...
   96324:	....]..%.$..e...
   96334:	..]...+.?-b1.1'1
   96344:	.(. *.q.........
   96354:	..+.9.:...0.....
   96364:	=.:.............
   96374:	....p.\.".......
   96384:	....f...Q.u...d.
   96394:	....U.....9.....
   963a4:	".].X......."...
   963b4:	.#.$..~...J.A...
   963c4:	Z..'T0T1g0.).#w.
   963d4:	..?...[.=.E...a.
   963e4:	X.........K.6...
   963f4:	u.%...m.....H...
   96404:	`.....?.....]...
   96414:	........S.......
   96424:	8.......v.....G.
   96434:	......y.d..#....
   96444:	v...{... ....'.,
   96454:	.1l2.*?!..9.....
   96464:	$...........%...
   96474:	-...=.......,...
   96484:	..9.....9.."....
   96494:	>...B.g.........
   964a4:	............1.,.
   964b4:	.... .......#...
   964c4:	....!.T . [.{.".
   964d4:	..Q...(".+52t1.(
   964e4:	.#..........V.K.
   964f4:	v...@.....q.)...
   96504:	x.....g.........
   96514:	..........;.....
   96524:	..^.m.w.......}.
   96534:	......v.........
   96544:	5.W.V.......f...
   96554:	. +!....$.y.a...
   96564:	O!L-./k2{)f"E.=.
   96574:	........*.....b.
   96584:	..a.t.........".
   96594:	q....... .d.Q...
   965a4:	y.\...:.........
   965b4:	........4...$.E.
   965c4:	......U.........
   965d4:	I.o.......l!.$..
   965e4:	......`.Q.. .).2
   965f4:	./t&.$.$o.n.....
   96604:	....K.o...D.Z...
   96614:	..7.......\...N.
   96624:	s.`.5...........
   96634:	..............0.
   96644:	........r...[...
   96654:	..|.......!.....
   96664:	<.. .#.":...C...
   96674:	......N,r0#*.'=*
   96684:	.'..5.....'.D...
   96694:	..-.C.....!.....
   966a4:	..4.......C.....
   966b4:	Z..._...A...1...
   966c4:	w.I.........W...
   966d4:	..].p.'.K.......
   966e4:	..5.G.....l...."
   966f4:	c!<...........: 
   96704:	.,.).'.,.,n$#.x.
   96714:	........!.a.....
   96724:	..K.z...?.D...!.
   96734:	W.o...0...s...."
   96744:	^...............
   96754:	/.}.........e...
   96764:	....\.L...f.....
   96774:	j...V...8$E.....
   96784:	..8......!.&N%.+
   96794:	*-H-L#+.....|.2.
   967a4:	W...o.....~.....
   967b4:	F...|.-._.O.....
   967c4:	......."....m...
   967d4:	..j.`.0.!...s.H.
   967e4:	....X...@.......
   967f4:	..<.../...Z.1.8.
   96804:	...!E.......@...
   96814:	R...."h%O+...-X#
   96824:	G.X.)...G.D.h...
   96834:	................
   96844:	`.....B...E...X.
   96854:	. ........!.....
   96864:	................
   96874:	..N.....r.;...$.
   96884:	..7.H.....O.... 
   96894:	m.p...........A 
   968a4:	."e+.2.*..,.+...
   968b4:	q...x.....=.....
   968c4:	................
   968d4:	..(...!...x"."..
   968e4:	O.........O.D...
   968f4:	..s..._.........
   96904:	....8...U.....A.
   96914:	..;.A...y"n...J.
   96924:	..I.o......#./.+
   96934:	;)K#..E.....:...
   96944:	..........%.W...
   96954:	............,...
   96964:	!...w#......P...
   96974:	..N.8.~...S.B.l.
   96984:	..C.3.....].t...
   96994:	O.....9.........
   969a4:	e!."V.N.....E...
   969b4:	..`..&.*<-.+: . 
   969c4:	j.i.t.:.........
   969d4:	w.....J.....2...
   969e4:	v...4.....Q...# 
   969f4:	..........5.6.y.
   96a04:	..O.......V.....
   96a14:	....H.r.Q...n...
   96a24:	..8..........&..
   96a34:	5.........3._.\#
   96a44:	g*...'. .#.%....
   96a54:	..<...[.q.:...~.
   96a64:	.."...A...g.....
   96a74:	..........m.\.#.
   96a84:	...... .S...0.z.
   96a94:	....s.o.U.......
   96aa4:	..z...l.......@.
   96ab4:	#.I..#.&........
   96ac4:	F.5.*...9"--.*.!
   96ad4:	.$8)U!..........
   96ae4:	(...............
   96af4:	........w.^.....
   96b04:	....H.....R...Q.
   96b14:	......2.....d.z.
   96b24:	..*.'...<.......
   96b34:	..T.......s.V..$
   96b44:	....+.2.(...F...
   96b54:	...%.)8".&!*.$. 
   96b64:	..@.......9.....
   96b74:	......4.........
   96b84:	..d.4.....>...^!
   96b94:	:.....Z.........
   96ba4:	S...7.....j.....
   96bb4:	..3.+.{.....p...
   96bc4:	N.U.........-...
   96bd4:	..p.........M#.!
   96be4:	.$A+e$.$.&......
   96bf4:	......S.e.I.....
   96c04:	4.............J.
   96c14:	..`.e.T!..].#...
   96c24:	....W.1.b.O...2.
   96c34:	..........D.A.v.
   96c44:	V.C.q.$.f...=...
   96c54:	..^.....T.......
   96c64:	......~."#w'.%.$
   96c74:	.'.)p ..........
   96c84:	4...............
   96c94:	....:.}.........
   96ca4:	....e.......h.x.
   96cb4:	............n...
   96cc4:	..z...".........
   96cd4:	..~...e.F.....`.
   96ce4:	n.........0.h...
   96cf4:	X.0#.$?#S#.,.,..
   96d04:	....(...K.......
   96d14:	......B...T.W...
   96d24:	....W.E.'.....j.
   96d34:	6...............
   96d44:	2.m.....C.....1.
   96d54:	......Q.3.{.....
   96d64:	G.............#.
   96d74:	*.y.1.\......#..
   96d84:	...'./Y(..z.D...
   96d94:	O.....?...N.....
   96da4:	....c...L...k...
   96db4:	p.O.."..i...=...
   96dc4:	..q.u.Z.........
   96dd4:	Y.......*...|...
   96de4:	....h...$.......
   96df4:	:.....:.......z.
   96e04:	...........!.+.-
   96e14:	'(.!......%...?.
   96e24:	......6.d.......
   96e34:	..u...7...g.....
   96e44:	....H.t.].......
   96e54:	`.E.M.....o...u.
   96e64:	-.?.......'...Z.
   96e74:	h.........}.....
   96e84:	........$...z.0.
   96e94:	..c..".(.-),..H.
   96ea4:	..../...>.......
   96eb4:	..............~.
   96ec4:	..R.....u....._.
   96ed4:	....&.3...\...#.
   96ee4:	p.....!.K.......
   96ef4:	J.....\.k.@...P.
   96f04:	..........o.Q.Y.
   96f14:	S.......w...L...
   96f24:	.+.0.(....B.....
   96f34:	..C.............
   96f44:	5.j.A.$.W.|.....
   96f54:	............o.s.
   96f64:	w...|.B.....z.6.
   96f74:	..Y.../.....Q.D.
   96f84:	..h.....?.j.....
   96f94:	....R...].....t.
   96fa4:	......M.J"),...%
   96fb4:	J...N.>.....X...
   96fc4:	....-.......e.m.
   96fd4:	B.D.]...l.....M.
   96fe4:	L.....q.......L.
   96ff4:	D...u.y.....-...
   97004:	f...9.S.i...C.T.
   97014:	w.....M.........
   97024:	,...Q.y.r.T.....
   97034:	...$I*.,c).!....
   97044:	..(.......$.....
   97054:	............4...
   97064:	+...C...L.>.}...
   97074:	. 1.,.z.'...5.E.
   97084:	......w.e.....P.
   97094:	..'...3.G.8.n...
   970a4:	......s.E.....).
   970b4:	-.}...S...... ;(
   970c4:	Z..'(.....g...#.
   970d4:	..........|.+...
   970e4:	Y.h.Y.....B.....
   970f4:	y.......l.......
   97104:	........4.......
   97114:	........;.......
   97124:	t.g. .(.U...$.=.
   97134:	....].....i...5.
   97144:	.......!.(.*O(E%
   97154:	W...Z...-.......
   97164:	..d.....x...E...
   97174:	........Q.z.t.q.
   97184:	.....!! ......O.
   97194:	9.........;...z.
   971a4:	s.........@.....
   971b4:	j.d.....)...Q.#.
   971c4:	:...........y...
   971d4:	. .#.,@-.!....P.
   971e4:	................
   971f4:	..$...i.>...Q.[.
   97204:	L.......k.=....#
   97214:	; q.....K.h.....
   97224:	'.X.J.......j...
   97234:	..0.5.........z.
   97244:	......m...3...+.
   97254:	w.......J....&..
   97264:	.+..y.......E...
   97274:	4.......-..... .
   97284:	S.c.7.j.'.....a.
   97294:	..P......#;.x...
   972a4:	......&.f.c.t.~.
   972b4:	<.........J.4.A.
   972c4:	..M.....0...$...
   972d4:	{...=.........~.
   972e4:	7.w.0..(<-.(%...
   972f4:	..........%.....
   97304:	F.....E.-.Q.]...
   97314:	..1...'...6.O...
   97324:	...#M.........!.
   97334:	......m...P.....
   97344:	Q.....$...o.....
   97354:	....1.....=.....
   97364:	....a.B.........
   97374:	.(V)1)."........
   97384:	..s...Z.....$.F.
   97394:	....?...........
   973a4:	....".I._...|...
   973b4:	.._. .`.......o.
   973c4:	......K.@.......
   973d4:	....0...e.......
   973e4:	........).......
   973f4:	h.3.......s#.,.(
   97404:	..{.z...........
   97414:	~...!.).T.......
   97424:	......&.........
   97434:	p.......g#@...B.
   97444:	...."...4.Y.j.,.
   97454:	..g.{.......$...
   97464:	}...>.....P.[...
   97474:	..(.............
   97484:	^.}.'&l*.%%"-...
   97494:	%...*...........
   974a4:	....N.......?...
   974b4:	?.........E.0...
   974c4:	\".$..........?.
   974d4:	\.....z.........
   974e4:	..Z.........1.P.
   974f4:	....?.:...a.!...
   97504:	r...........u..#
   97514:	.&c%.&....!.M...
   97524:	..R...E.Q.....&.
   97534:	..L...M...l.....
   97544:	..9.....+.9!.$s"
   97554:	..R.].V.>.......
   97564:	......v.{.......
   97574:	..6.i...f...[...
   97584:	..E.....t...0...
   97594:	....W.K.+..%%*3'
   975a4:	....i.....<.....
   975b4:	..5.....w.......
   975c4:	....3.5.G.......
   975d4:	S....!.*. ..^.".
   975e4:	f.....B.....<.z.
   975f4:	........Y.`.G...
   97604:	L.s.....7.......
   97614:	@...;.......5...
   97624:	q....'},<#$...}.
   97634:	..4.. ....O.....
   97644:	0.......O.*.2.b.
   97654:	B.....j...4...r'
   97664:	]&A.....,...K...
   97674:	..%...P....._.".
   97684:	d...).......#...
   97694:	........E.(...c.
   976a4:	........,...P..+
   976b4:	.)..4.M.....`...
   976c4:	..L.;.K.D.....w.
   976d4:	..R.............
   976e4:	..<.z.*.."%$_#..
   976f4:	=.a._.....i.....
   97704:	l.E...X...+.....
   97714:	n...^.0.........
   97724:	....g.l...(.z.Q.
   97734:	.........'.&I ..
   97744:	@.......Q...-...
   97754:	v.-.W...`.......
   97764:	............7...
   97774:	P.. 8&.&O.....[.
   97784:	......P.,...(.b.
   97794:	..F...C.].....s.
   977a4:	..(.g.+.........
   977b4:	J........._.....
   977c4:	..$%b(......K...
   977d4:	... ..y...}.....
   977e4:	I...............
   977f4:	..........R..!.*
   97804:	M#......+.z."...
   97814:	......w.}.......
   97824:	..V.......|.-.o.
   97834:	....2.....N.#.v.
   97844:	........I....'Y(
   97854:	....=.>...e.r%L.
   97864:	F.........|.a...
   97874:	................
   97884:	..p.C..%"'.!....
   97894:	....i.........'.
   978a4:	3.(...........z.
   978b4:	'.....P.....{...
   978c4:	......G...S.G.m.
   978d4:	.......&d"7...Y.
   978e4:	..?.h".!..^.1...
   978f4:	................
   97904:	5.g...\...}.....
   97914:	c".&8$....H.....
   97924:	../.Z.......e.d.
   97934:	.._./.....n.t.w.
   97944:	#..."...........
   97954:	..............9.
   97964:	Z!.!. ..8...h.."
   97974:	.$..%...........
   97984:	....M.b...#.[...
   97994:	..........&"u(.$
   979a4:	../.....m...G...
   979b4:	d.........U.....
   979c4:	........?.....b.
   979d4:	......Y.D.Q.....
   979e4:	K.W.5.B.}..!.#..
   979f4:	.........$."....
   97a04:	..j...[.U.......
   97a14:	e...*...N.'.....
   97a24:	..u..%.'. ....(.
   97a34:	Z...........B.C.
   97a44:	..........M.:...
   97a54:	..}.".^.....k. .
   97a64:	....W.N.....h...
   97a74:	..}...."N.V...H.
   97a84:	..O%G ........{.
   97a94:	E.....{.........
   97aa4:	......|.D......$
   97ab4:	\%).T...|.M.Q.W.
   97ac4:	..........x...\.
   97ad4:	........d.@.....
   97ae4:	........b.g.n...
   97af4:	..9...x.l...H...
   97b04:	.#n.0.u.@....!..
   97b14:	6...............
   97b24:	................
   97b34:	?./.-...'#O#..1.
   97b44:	Z.......v.D.F.4.
   97b54:	..........+.....
   97b64:	'.j.R...........
   97b74:	^.........%.....
   97b84:	..'...... .$P...
   97b94:	..6.... .!..|...
   97ba4:	................
   97bb4:	).r.....v.$...?.
   97bc4:	... f!V...h.....
   97bd4:	......v...G.....
   97be4:	*.........L.....
   97bf4:	........{.B.0.).
   97c04:	..a...N...q.....
   97c14:	...$............
   97c24:	."{"C.......d...
   97c34:	k...r.....:...0.
   97c44:	....O...J.....n.
   97c54:	....N...\...E...
   97c64:	..V.4...........
   97c74:	A...a.......;.`.
   97c84:	?.r.....E...S...
   97c94:	......R...s.- ..
   97ca4:	".h.E.}....!..g.
   97cb4:	;.*.........B...
   97cc4:	......c.x.....(.
   97cd4:	9.X...a.n.(!^...
   97ce4:	......L.......t.
   97cf4:	)...O.?.y.h.....
   97d04:	{...f.v.........
   97d14:	..........Z.....
   97d24:	..Z.....T.2.....
   97d34:	....... ..n.....
   97d44:	s.....L...A.g...
   97d54:	....../.....B...
   97d64:	..... ..........
   97d74:	N.....9.'.N.....
   97d84:	..z...C...u.....
   97d94:	U...........u...
   97da4:	....t.z...-...I.
   97db4:	..+...r........ 
   97dc4:	.!y.....K.5.)...
   97dd4:	..D.....l.....&.
   97de4:	..h.3.k......!..
   97df4:	............V.b.
   97e04:	....P...8...\...
   97e14:	D.....P.........
   97e24:	......$...o...G.
   97e34:	5.0.....O.....*.
   97e44:	K........!..../.
   97e54:	....g...>..._...
   97e64:	 .......3.......
   97e74:	s.....;.........
   97e84:	........o.<.5.O.
   97e94:	g...............
   97ea4:	......Z.....}.g.
   97eb4:	t.w...M...G.g...
   97ec4:	k.....,.......(.
   97ed4:	............`...
   97ee4:	..........-.....
   97ef4:	................
   97f04:	........%.#.....
   97f14:	..=...,.2.....7.
   97f24:	..j.......W...".
   97f34:	....6.......I...
   97f44:	..E.y...[.i.e...
   97f54:	....}.X...y.... 
   97f64:	w.....F.....b.U.
   97f74:	........@.h...T.
   97f84:	........_.......
   97f94:	..M.......-.....
   97fa4:	{...'.......!...
   97fb4:	..........8.....
   97fc4:	..b...........g.
   97fd4:	......V...C...{.
   97fe4:	Q.M...Y.d.i.n.@.
   97ff4:	..............+.
   98004:	d...k......./.o.
   98014:	......?.) & i...
   98024:	>..........._...
   98034:	+...J...B.....s.
   98044:	................
   98054:	f...3.....-.....
   98064:	f.......h...u...
   98074:	....$.9./...L...
   98084:	w.\.....q.#.*.=.
   98094:	|...+...../.....
   980a4:	..."D.......o...
   980b4:	K...M.j.....d.n.
   980c4:	D.f.........@...
   980d4:	..".b.b.......(.
   980e4:	......s.T.#...g.
   980f4:	..)...p.c...W...
   98104:	O.......=...4...
   98114:	M...Z.#...[.>...
   98124:	h.........s.....
   98134:	f.......h.E.D.V.
   98144:	....e.5.....+...
   98154:	......>...!.....
   98164:	T.............5.
   98174:	{.&.......3...B.
   98184:	x......!..4...M.
   98194:	..!.w.......v...
   981a4:	..v.:...n...X...
   981b4:	............7...
   981c4:	........-.......
   981d4:	......G.i.v.....
   981e4:	h.........U.....
   981f4:	..'.......E...?.
   98204:	A.y.....E...d...
   98214:	. ..P.........l.
   98224:	..3.......7.....
   98234:	..a.......t.....
   98244:	. 9...U.Q.g.....
   98254:	..&.U.....3.....
   98264:	.. .............
   98274:	t.......m.^.....
   98284:	..3.........w...
   98294:	....P.E.%...}...
   982a4:	....p.F.....b...
   982b4:	*...............
   982c4:	....'.../.....y.
   982d4:	..3.a...........
   982e4:	A...J...]...r...
   982f4:	_...z.2.....b.S.
   98304:	5.....O...g.e...
   98314:	........Z.Q...F.
   98324:	....|...1.d...w.
   98334:	..'...T.....h...
   98344:	~...............
   98354:	 .N.v.........,.
   98364:	9...T.......a...
   98374:	....>...D.H.2.q.
   98384:	......*...6.....
   98394:	8...;.....F...X.
   983a4:	<.}...H...x.....
   983b4:	H.....P.........
   983c4:	v.....T.........
   983d4:	~.....+.......".
   983e4:	....~...(.-.V...
   983f4:	....+.......z...
   98404:	....}.....w...s.
   98414:	Q.....h.*.*.*.,.
   98424:	..f...q.........
   98434:	7.....{.q.*...,.
   98444:	i...[.....H.....
   98454:	......r...d.....
   98464:	A.<.........|...
   98474:	..&.....(.....Z.
   98484:	....J...........
   98494:	..8.......Y.1.8.
   984a4:	......].3.b.....
   984b4:	......Z.........
   984c4:	7.......s.......
   984d4:	....g.....3.\...
   984e4:	........X...\...
   984f4:	}.E.........x.n.
   98504:	!...1.....l...e.
   98514:	....c.......`...
   98524:	y...\.]...%.....
   98534:	*.|...0...G...Z.
   98544:	.... .........Z.
   98554:	g...B.....T.S.~.
   98564:	......#.H.....c.
   98574:	..............T.
   98584:	......*.&.....b.
   98594:	..5...1...].....
   985a4:	........U.......
   985b4:	r."...........S.
   985c4:	..u...........o.
   985d4:	............z...
   985e4:	..t..._.........
   985f4:	..S...-.........
   98604:	A.....b.-.......
   98614:	..{.........}.z.
   98624:	..,.S.......?...
   98634:	....`.....<.....
   98644:	................
   98654:	....6...(.^.....
   98664:	..B.....>...H.].
   98674:	....5...'.......
   98684:	..P.M.....R...q.
   98694:	..A.........B...
   986a4:	@.I...........d.
   986b4:	Q...)...........
   986c4:	....4.^.".,.....
   986d4:	..W.......>...8.
   986e4:	..*.....Q.....w.
   986f4:	H.{.t...$.......
   98704:	..6.......H...A.
   98714:	n...K.....z...H.
   98724:	g.J.........-...
   98734:	p.............~.
   98744:	..|...,.......o.
   98754:	......[...B...=.
   98764:	........v.~...1.
   98774:	..............].
   98784:	..h.C.....}.....
   98794:	....%...h.......
   987a4:	....1.6.3.......
   987b4:	X.d.P...P.|.....
   987c4:	9.N...o.....o.a.
   987d4:	{.....S.M.......
   987e4:	n...........k.'.
   987f4:	`.k.......O.v...
   98804:	..F.......z.....
   98814:	..........}...{.
   98824:	....q.:.7...z...
   98834:	..:...\...h.....
   98844:	....}...).*.....
   98854:	F.|.............
   98864:	a.w...5.....w...
   98874:	....B...J.......
   98884:	9.`.....~.....".
   98894:	D...G.o.........
   988a4:	....D...U.O...X.
   988b4:	............J...
   988c4:	B.1...`.......y.
   988d4:	..G.0.o.o.R.3...
   988e4:	..n...G.`.....T.
   988f4:	z...D.....q...e.
   98904:	..k.J...........
   98914:	..8.............
   98924:	R.x...-.......T.
   98934:	..../.4.....W...
   98944:	b.E.e...o.......
   98954:	..U.Z.....q.....
   98964:	..F...D.......a.
   98974:	................
   98984:	..........;.H...
   98994:	............I.S.
   989a4:	R......._.......
   989b4:	|.....z.........
   989c4:	..B.....L...D...
   989d4:	........=.....i.
   989e4:	....u... .....-.
   989f4:	....%.........P.
   98a04:	........V.(.N...
   98a14:	{...\._.<.].....
   98a24:	..%...'./.C.....
   98a34:	......p.........
   98a44:	................
   98a54:	5...-.e.......9.
   98a64:	]...........h...
   98a74:	....\...........
   98a84:	....k.....0.5.q.
   98a94:	....!.,...G...$.
   98aa4:	I.......Q.....G.
   98ab4:	............B...
   98ac4:	A.o.......K.V.i.
   98ad4:	C.....$...i.....
   98ae4:	b.g.......;.....
   98af4:	....M.......{.d.
   98b04:	9.a...>.\...y...
   98b14:	2.........h.....
   98b24:	b...{... .l.~.-.
   98b34:	........|.....0.
   98b44:	..R.......".r.*.
   98b54:	....r.R.....9.\.
   98b64:	{...5...D.O...B.
   98b74:	......".....i...
   98b84:	........D.I.J...
   98b94:	{.z... ...0.....
   98ba4:	....5.........(.
   98bb4:	..%.....P.......
   98bc4:	..`.....J.H.(...
   98bd4:	................
   98be4:	......s.........
   98bf4:	..............c.
   98c04:	$...a.h.M.?."...
   98c14:	..~.............
   98c24:	..i...<.z...n...
   98c34:	..............v.
   98c44:	..............r.
   98c54:	..p.T.@.}.T...;.
   98c64:	......v...1.....
   98c74:	..E.#.........G.
   98c84:	b.|.............
   98c94:	=...X...h...!...
   98ca4:	............i.r.
   98cb4:	................
   98cc4:	..A.2.......w.`.
   98cd4:	........].......
   98ce4:	..Q.....Y.`...p.
   98cf4:	..c.....W...g...
   98d04:	x.*.z.v.......:.
   98d14:	..v.....S.....R.
   98d24:	............V.E.
   98d34:	T...n.}. .......
   98d44:	....!....."...*.
   98d54:	....x.1.....:...
   98d64:	........7 ......
   98d74:	?.n.....K.......
   98d84:	....c.........U.
   98d94:	6.........B.l...
   98da4:	8.z...$..._.....
   98db4:	..R...J.........
   98dc4:	..C.&.s...]...D.
   98dd4:	..E.........X.].
   98de4:	f.:...?...J...A.
   98df4:	..6.....V.*.q...
   98e04:	0.{.......s.B.s.
   98e14:	......L.......m.
   98e24:	........;.H.B...
   98e34:	..i.............
   98e44:	..(...2.W...L.N.
   98e54:	..H.....B.n.l...
   98e64:	..[.2.......}.j.
   98e74:	......p.........
   98e84:	..B.............
   98e94:	..'.Q...?.O.....
   98ea4:	....Y...S.......
   98eb4:	....'.....M.....
   98ec4:	k...............
   98ed4:	....X...........
   98ee4:	..z.6.......{...
   98ef4:	................
   98f04:	j.............o.
   98f14:	......=.........
   98f24:	..j...........$.
   98f34:	k.......+.c.....
   98f44:	`...g...........
   98f54:	........2.......
   98f64:	A...........N...
   98f74:	..}...b...H...i.
   98f84:	..u.4.....8._.3.
   98f94:	E.9.L...=...~...
   98fa4:	u.........?.....
   98fb4:	1.7.......d...3.
   98fc4:	..f.....o.....#.
   98fd4:	....[...(.......
   98fe4:	T.........d.,.".
   98ff4:	.... ...R.....5.
   99004:	<.............9.
   99014:	..K.......>.....
   99024:	..~...".......~.
   99034:	..L.M.....N.....
   99044:	..'...M.....-...
   99054:	8.#...C...j.....
   99064:	......}...(.....
   99074:	..Q.......p...~.
   99084:	.... ...J.......
   99094:	........p...s...
   990a4:	{...........#.).
   990b4:	....A.K.|.$.....
   990c4:	k...7...7.......
   990d4:	....>.......v.6.
   990e4:	....}.7.w.w...y.
   990f4:	..M...#.|...8...
   99104:	..$.;...:...u.}.
   99114:	^.Z.....K...5.;.
   99124:	....k.~.t.a.4.X.
   99134:	=.............%.
   99144:	W.....v...W.....
   99154:	....y.h.U.......
   99164:	............t.!.
   99174:	5.....<...4.H.3.
   99184:	@.......c.2.V...
   99194:	V.....y.......!.
   991a4:	..........R.;...
   991b4:	(.............L.
   991c4:	..".Q.......'...
   991d4:	............t...
   991e4:	....>.d.......S.
   991f4:	..J.....4..."...
   99204:	 ...........C.o.
   99214:	~.......N.......
   99224:	..........B.x...
   99234:	/.w.\.@...0.....
   99244:	i.....j...#.....
   99254:	..).O.O.........
   99264:	......s.........
   99274:	...... .m.R.o...
   99284:	).O.@.]...-.$.3.
   99294:	..!.....V...}...
   992a4:	........U.'...G.
   992b4:	o.$.........i...
   992c4:	..2.........4...
   992d4:	....,.k.$...g.B.
   992e4:	n...-.....O.....
   992f4:	..........J.+.".
   99304:	......F.D.....".
   99314:	..O...p.....o...
   99324:	-.$.............
   99334:	..w.;.n.F..._...
   99344:	....".E...[.....
   99354:	........s.f.....
   99364:	P.O.........;.k.
   99374:	`.d.....;.!.8...
   99384:	....B.......,.:.
   99394:	....k.....O...b.
   993a4:	..I...V...].....
   993b4:	'.W.........$.q.
   993c4:	........0.......
   993d4:	[._...........v.
   993e4:	....5...[.9.....
   993f4:	....5.....a...#.
   99404:	..].......L.l.S.
   99414:	..........m...?.
   99424:	......`.1...2...
   99434:	........z.......
   99444:	..a.........w...
   99454:	..E...........g.
   99464:	....<.......y...
   99474:	. ....A.P.m.....
   99484:	..........m.....
   99494:	O.....h.......9.
   994a4:	........W.......
   994b4:	x.........L.....
   994c4:	W...}...l...q...
   994d4:	..c...E.....(...
   994e4:	..m.>...J...t...
   994f4:	..e.^.:.........
   99504:	`.7.........n.[.
   99514:	....V...2...=.,.
   99524:	..`.......v.....
   99534:	....o...........
   99544:	..:.k.8...L.(.L.
   99554:	....n.........<.
   99564:	W.A...........K.
   99574:	l...T.-...].6...
   99584:	....D.....&.....
   99594:	..m.p...../.O.|.
   995a4:	m...u. .......{.
   995b4:	..?.....8.......
   995c4:	l...........l.1.
   995d4:	!.>.f.(.........
   995e4:	..........F.....
   995f4:	d...............
   99604:	....(.....Y.....
   99614:	.!1...E.A...x...
   99624:	............s.9.
   99634:	..H.....9.......
   99644:	*.G.....;.......
   99654:	....8.......`.2.
   99664:	..f...1...".w...
   99674:	................
   99684:	....r.......].e.
   99694:	.. .0.[..". ....
   996a4:	z.........C.p...
   996b4:	>...........F...
   996c4:	....+.Y.C._.....
   996d4:	..........`...w.
   996e4:	-.7.....e.....N.
   996f4:	............s.A.
   99704:	H........._.....
   99714:	8...u.;...J.}...
   99724:	..4"."..~.[.....
   99734:	..U.......h.N...
   99744:	..G...T.........
   99754:	..............!.
   99764:	..B.....T...Y...
   99774:	..U.....}.......
   99784:	......r.-.....p.
   99794:	....A."...g.....
   997a4:	..*.T.....t..$.!
   997b4:	....T.3...`.N...
   997c4:	L...R...........
   997d4:	....<."...p.M...
   997e4:	..9..........._.
   997f4:	....L.3...F.....
   99804:	j.....M.a.{.....
   99814:	......~...I.....
   99824:	....t.......u.G.
   99834:	..l.X v".!....Z.
   99844:	..!.....].....u.
   99854:	......x...X...m.
   99864:	_.5.9.+.6.......
   99874:	..l.%...........
   99884:	......2.u.H...`.
   99894:	&.....V.[.....p.
   998a4:	d.).....%...,...
   998b4:	b.......c.2.N...
   998c4:	.$S!l.....i...p.
   998d4:	X.y.............
   998e4:	................
   998f4:	D.1.....A.../.Q.
   99904:	..........(...M.
   99914:	..1.(...%.`.....
   99924:	K...B...........
   99934:	........^.......
   99944:	8.......m!. .!.!
   99954:	M...q.......7...
   99964:	..z.........S...
   99974:	^.Z.....~.......
   99984:	....h.z.P.v.....
   99994:	....#.q.....[...
   999a4:	F...........O.@.
   999b4:	].A.y...f...V.D.
   999c4:	5...........g.f.
   999d4:	d......#\%7...~.
   999e4:	....k.....T.i...
   999f4:	..T.*.%.;.....'.
   99a04:	............5...
   99a14:	............P...
   99a24:	I...9...H...;...
   99a34:	......G...D.....
   99a44:	h...............
   99a54:	....E.........B 
   99a64:	N&.%..2...M.:...
   99a74:	8.7.......#.....
   99a84:	................
   99a94:	~...@.d.........
   99aa4:	u.....=.F.......
   99ab4:	......q...b.$.C.
   99ac4:	........1...~...
   99ad4:	;...........2.?.
   99ae4:	:.../...\#P&.%S.
   99af4:	......c.........
   99b04:	g.......u.......
   99b14:	5.....Y.......'.
   99b24:	........z.......
   99b34:	..-...B.).K.F.u.
   99b44:	I...j...h.......
   99b54:	..I.....j.G.y.=.
   99b64:	....m.....H...>.
   99b74:	..Z#.&.$........
   99b84:	......!...t.....
   99b94:	..w...........].
   99ba4:	....9...g...|...
   99bb4:	..........k...w.
   99bc4:	........J.......
   99bd4:	..R.....m.....+.
   99be4:	....,.!...g.J.o.
   99bf4:	..r.......}.3%2(
   99c04:	. N.............
   99c14:	B.....-.L.......
   99c24:	g...M.......d.b.
   99c34:	|.\...M...~.7...
   99c44:	W.a.N.%.........
   99c54:	m...............
   99c64:	........o.......
   99c74:	..........q.....
   99c84:	..f. .9%i"u"..2.
   99c94:	....0.....J.7...
   99ca4:	......{...%.....
   99cb4:	....j.F.......7.
   99cc4:	3...........N./.
   99cd4:	........v.......
   99ce4:	........O.v.+...
   99cf4:	...._.....6.U.P.
   99d04:	B...............
   99d14:	..Z%.#..X.].]...
   99d24:	..?.w.....I.....
   99d34:	....(.E.......>.
   99d44:	f.).....W.....D.
   99d54:	r...............
   99d64:	....*...;.M.....
   99d74:	0...}...9...D.Q.
   99d84:	............V...
   99d94:	..\.i......!.$. 
   99da4:	......!...K.....
   99db4:	M.5.d.....-.f...
   99dc4:	....*.....d.....
   99dd4:	P.....!...G.z...
   99de4:	7.C.&.J... .....
   99df4:	J.t.T.q.......,.
   99e04:	E.x.v...........
   99e14:	....&...\.....e.
   99e24:	c...f"/!F .". U.
   99e34:	(.....H.t.{.8.B.
   99e44:	;.............>.
   99e54:	w...(...5.......
   99e64:	....>...O...I...
   99e74:	..t.2.......d.).
   99e84:	A.j.7...Q...6...
   99e94:	L.l.'...R.X.K...
   99ea4:	....x.....Q.....
   99eb4:	(.L%O$..........
   99ec4:	..............b.
   99ed4:	R.........Y.....
   99ee4:	..?.....&.......
   99ef4:	..v.`.........J.
   99f04:	............6.-.
   99f14:	....X.(...4.....
   99f24:	G...7.....\.{.e.
   99f34:	#.....F./..".&..
   99f44:	L ....f.]...\...
   99f54:	d.;...T...,...Y.
   99f64:	......6...&...j.
   99f74:	........(...{...
   99f84:	..\. ...O.......
   99f94:	}.)...V...w.i.e.
   99fa4:	....L.....:.b.w.
   99fb4:	....C.....{.....
   99fc4:	..!..!/"C".!....
   99fd4:	G.*.B.U...>...1.
   99fe4:	............k.p.
   99ff4:	..[.......e.?.B.
   9a004:	......:.....d...
   9a014:	..X.3.......2.2.
   9a024:	......J.v.......
   9a034:	........t...T.D.
   9a044:	..2............ 
   9a054:	.!.!4&| ..%.....
   9a064:	W.......R.....s.
   9a074:	........@.......
   9a084:	........4.+...w.
   9a094:	........o...L...
   9a0a4:	1.(.............
   9a0b4:	........"...P...
   9a0c4:	u._...].D.~...?.
   9a0d4:	X.C.........!&.'
   9a0e4:	......"...N.....
   9a0f4:	......*...}.....
   9a104:	........u.:.K...
   9a114:	................
   9a124:	7.U...9...Q.t.:.
   9a134:	....)...-.......
   9a144:	................
   9a154:	..;.>.......[...
   9a164:	.....!.).%#...d.
   9a174:	......6.........
   9a184:	......p...%.U.q.
   9a194:	..&.z...9...o...
   9a1a4:	j.........Q.@...
   9a1b4:	..(...N.........
   9a1c4:	........@...p.@.
   9a1d4:	........Q...S...
   9a1e4:	..............N"
   9a1f4:	.&.'..b...X.}...
   9a204:	........Y.....x.
   9a214:	..U.;./.....f...
   9a224:	6.].L.........O.
   9a234:	*...............
   9a244:	Q...............
   9a254:	........R.......
   9a264:	N.........:.T.~.
   9a274:	O.......:!C).'..
   9a284:	..U.......I.....
   9a294:	..Z.......V.l...
   9a2a4:	i.....%.....m.T.
   9a2b4:	......k.........
   9a2c4:	6.Z...?...Y.....
   9a2d4:	..........s...2.
   9a2e4:	W...F...........
   9a2f4:	........7.......
   9a304:	`.?$}(.%t.9...@.
   9a314:	..............s.
   9a324:	/.>.....-...].R.
   9a334:	..%.......8...+.
   9a344:	..H.f...;./...6.
   9a354:	l...........D.P.
   9a364:	......8.......2.
   9a374:	....%...l.......
   9a384:	e.$...[.n....$.%
   9a394:	!%L"......5.....
   9a3a4:	q.......f.....Y.
   9a3b4:	..............e.
   9a3c4:	..Y...Y.X..!o...
   9a3d4:	..W.F.@.;.....j.
   9a3e4:	......:...:...W.
   9a3f4:	..f...;.....6.Y.
   9a404:	..Q.............
   9a414:	i.].2.4 .%/'U ..
   9a424:	......E.9.d.....
   9a434:	..l...?.".....-.
   9a444:	h.y...O.6...2.L.
   9a454:	X...i.'.".......
   9a464:	..}.".T.....d...
   9a474:	%.`...]....."...
   9a484:	..I.......l.....
   9a494:	....../.<...E...
   9a4a4:	.".$.$.#^.......
   9a4b4:	..@...<...H...{.
   9a4c4:	....B.Z.6.......
   9a4d4:	..[............"
   9a4e4:	g........./.f...
   9a4f4:	....r.j...-...x.
   9a504:	:...N.q.b.......
   9a514:	....S...5...V.\.
   9a524:	Q.]...].....5!.(
   9a534:	.&`.....j.^.K...
   9a544:	2.....C.[...A.O.
   9a554:	......Q.....]...
   9a564:	\.......k"..%...
   9a574:	........;...#.B.
   9a584:	..............].
   9a594:	..7.y.........3.
   9a5a4:	......}.......u.
   9a5b4:	[.r... &.)i$!.%.
   9a5c4:	....>.m.......z.
   9a5d4:	..E.S.......>. .
   9a5e4:	....h...........
   9a5f4:	. .!............
   9a604:	......m.@...K.9.
   9a614:	....-.+.......S.
   9a624:	-.......O.&.....
   9a634:	....+..... ...T.
   9a644:	.&.(."....G...!.
   9a654:	K.x.W.>.m.......
   9a664:	/.......`.......
   9a674:	O..........!?!S.
   9a684:	............H...
   9a694:	........(...?...
   9a6a4:	7.....M.........
   9a6b4:	........Z.....+.
   9a6c4:	k.....s...D%.%.%
   9a6d4:	............F...
   9a6e4:	 ...B...q.[.....
   9a6f4:	U...Y.......l...
   9a704:	C...c...1.......
   9a714:	A.z.x.....~.M...
   9a724:	7...#.S.^.!._.Y.
   9a734:	-.y.q.f.z.......
   9a744:	......5.........
   9a754:	..B..#.)."......
   9a764:	......_.....g.w.
   9a774:	................
   9a784:	..6.......}...@.
   9a794:	f ?"..M.N.R.....
   9a7a4:	....=.q.........
   9a7b4:	........F.......
   9a7c4:	..g.........<.6.
   9a7d4:	..S...%.n.....O&
   9a7e4:	.%o!1.....m...#.
   9a7f4:	..............y.
   9a804:	........4.:.s...
   9a814:	...........#.! .
   9a824:	<...0.......7...
   9a834:	......O.N...I...
   9a844:	..~.............
   9a854:	..).........6...
   9a864:	p.....c..!.#S#N"
   9a874:	......N...b.?.0.
   9a884:	......a...=.....
   9a894:	..{.7...L...x.q.
   9a8a4:	|....!v"R.Z.Z.V.
   9a8b4:	....J.e. .h.....
   9a8c4:	-...c.....f. .=.
   9a8d4:	......(.......{.
   9a8e4:	l.'...........z.
   9a8f4:	E...X%.&. ..V.6.
   9a904:	..Y...........#.
   9a914:	........".>.'...
   9a924:	..........:....$
   9a934:	.&....!.......J.
   9a944:	..R.x...v.......
   9a954:	........,.3.....
   9a964:	........@.j.d.N.
   9a974:	..U.......x...#'
   9a984:	.(-.8...m.....K.
   9a994:	'.9.......T.o.E.
   9a9a4:	f.../.$.........
   9a9b4:	F.....$.l'. K...
   9a9c4:	1.y...........V.
   9a9d4:	..e.....y.....o.
   9a9e4:	Q.....E.....&...
   9a9f4:	6.X.......Q.....
   9aa04:	..q.... .)m#....
   9aa14:	S.'.............
   9aa24:	..!.K...........
   9aa34:	..S.....8.p.V...
   9aa44:	...!."..q.....6.
   9aa54:	..........x...n.
   9aa64:	....9.m.#...|.W.
   9aa74:	..+...U.~...2...
   9aa84:	........a.......
   9aa94:	.!F%""..S.6.....
   9aaa4:	....G.D.....n...
   9aab4:	....p.......8.A.
   9aac4:	......h...x.. .$
   9aad4:	V a.|.<.........
   9aae4:	........&.!.....
   9aaf4:	Q.....T.".....5.
   9ab04:	..C.m.....F.^...
   9ab14:	&...........7$.$
   9ab24:	......@.8.w...$.
   9ab34:	....n...M...7...
   9ab44:	..............&.
   9ab54:	....}._#.(......
   9ab64:	V.......E.......
   9ab74:	....E...8.w.....
   9ab84:	3.........R...t.
   9ab94:	~.........".....
   9aba4:	....S..&."y.....
   9abb4:	x...............
   9abc4:	..!.G.....'.C...
   9abd4:	[...........^.?.
   9abe4:	.${#......f.M.c.
   9abf4:	=.....-.........
   9ac04:	..........?...N.
   9ac14:	_.......q.2.6...
   9ac24:	..Q.....|.).....
   9ac34:	.$....%...W.... 
   9ac44:	..z.;.\.........
   9ac54:	,.A...........F.
   9ac64:	....b.D....".$..
   9ac74:	....z.b.....v...
   9ac84:	_.:.........C...
   9ac94:	+...............
   9aca4:	............C...
   9acb4:	..X.......... ..
   9acc4:	?...@.!..!......
   9acd4:	l.........]...u.
   9ace4:	v.....L.....!...
   9acf4:	../.a#x&......_.
   9ad04:	z.....v.....)...
   9ad14:	j...<...`.......
   9ad24:	..e.Z.......j...
   9ad34:	n.....Q.....F...
   9ad44:	x.:.. . ....D.I.
   9ad54:	E.."..(.......F.
   9ad64:	Q.b.....W.f.....
   9ad74:	..6.......*....&
   9ad84:	.#..........N...
   9ad94:	................
   9ada4:	..s.......-.O...
   9adb4:	v.].o...(...r...
   9adc4:	9.I...z.........
   9add4:	.!..3........"w.
   9ade4:	............F...
   9adf4:	......^.....9...
   9ae04:	"... ....$.!6...
   9ae14:	..W.....5...J.T.
   9ae24:	....,...........
   9ae34:	B...].....y.~.E.
   9ae44:	....~.4.........
   9ae54:	....!...s >!(...
   9ae64:	..U...f.g.......
   9ae74:	........H.....f.
   9ae84:	........A.......
   9ae94:	..."s ..6.....(.
   9aea4:	i.I...{.....4.^.
   9aeb4:	......\.[.X.).6.
   9aec4:	..'.............
   9aed4:	....r...w.......
   9aee4:	...!. ..W...o.w.
   9aef4:	. d.......+.....
   9af04:	'.........B.....
   9af14:	R.....1...A.. ..
   9af24:	o./.:.....%.^.v.
   9af34:	..O.............
   9af44:	..0...%.3...O...
   9af54:	....z.x.P.-.c...
   9af64:	......;......#..
   9af74:	..d.....6.."....
   9af84:	....D.....|.v...
   9af94:	v...|.+...I.....
   9afa4:	..e.............
   9afb4:	I.%...K...9.~.p.
   9afc4:	Z.=...r.......?.
   9afd4:	o.\.......!.|...
   9afe4:	=.......O.j.....
   9aff4:	........x.......
   9b004:	..9.g R.........
   9b014:	..W.M.....B.....
   9b024:	a.E.....)...*...
   9b034:	..a.m ..y.......
   9b044:	..............X.
   9b054:	....K.....s.{.R.
   9b064:	B.%...5...V.....
   9b074:	P.....(.....Y...
   9b084:	....^...&.....K.
   9b094:	............K.6.
   9b0a4:	M.............G.
   9b0b4:	......s.S.T.n ?.
   9b0c4:	......s.....a...
   9b0d4:	..N.-...{.2...^.
   9b0e4:	....t.!.d.......
   9b0f4:	..L...../.....@.
   9b104:	..!.........'...
   9b114:	..\.....T!......
   9b124:	............"...
   9b134:	..}...k...2...H.
   9b144:	....V.. ..R...2.
   9b154:	..-...w.......*.
   9b164:	..8.?.....p...9.
   9b174:	u.O...[.....`.L.
   9b184:	8.d...x.4.......
   9b194:	].......c...y.&.
   9b1a4:	...!....v...&...
   9b1b4:	<...".....d.....
   9b1c4:	K.<...........[.
   9b1d4:	..~...I.........
   9b1e4:	................
   9b1f4:	......V...%.....
   9b204:	..............b.
   9b214:	..c...4...[.<...
   9b224:	....4.R.`.u...].
   9b234:	..D.6.2.....P.(.
   9b244:	0.H...a...u.s...
   9b254:	............(...
   9b264:	..!...+.{. ...L.
   9b274:	c.Q...W.........
   9b284:	................
   9b294:	d.|.I.....3.....
	...

0009b404 <sample_3_piano_kpianof502>:
   9b404:	........$.<.L.^.
   9b414:	m.q.i.h.h.e.Z.C.
   9b424:	/...............
   9b434:	z.d.-...........
   9b444:	..............3.
   9b454:	..A.G.,.'...7.1.
   9b464:	E.;.....d.3...8.
   9b474:	..b.....m...R.`.
   9b484:	..O.^...........
   9b494:	..Q.l...A.../...
   9b4a4:	.!f)..Z.7.......
   9b4b4:	.6.??BO..._.....
   9b4c4:	...,,8.6..F...J.
   9b4d4:	.....: G./......
   9b4e4:	V...n".LL].B....
   9b4f4:	i........7.`QE.$
   9b504:	+...S...V..9vY.C
   9b514:	.&=.........hA7Z
   9b524:	.E.&..8........=
   9b534:	mJW=..j...X.P...
   9b544:	.P.P.=P.z.q.....
   9b554:	..|W&].X........
   9b564:	.._..N4MPM......
   9b574:	..1..&.O.D.9..3.
   9b584:	{.8....4.b.g.P..
   9b594:	B.....B..,.L+^.7
   9b5a4:	a...J.u.H..G.[.g
   9b5b4:	.1......T....Aq^
   9b5c4:	fo.FQ...4.)...3.
   9b5d4:	OE.Y.0..,.[...-.
   9b5e4:	.;.`.gm;..x.V...
   9b5f4:	..?#*Wgo.K..C...
   9b604:	....p..B~\.@F...
   9b614:	..5.7.t"jY.k.I$.
   9b624:	..K........T.oPU
   9b634:	......q.....sATa
   9b644:	.9..;.......J..N
   9b654:	.q.9c.(.......Z.
   9b664:	.FDu.?B.E.:.....
   9b674:	...G.f.*....$...
   9b684:	..>.8R.f.5..|...
   9b694:	$.J....S.].-(...
   9b6a4:	......Y..[oY&-..
   9b6b4:	l.t.^.k.-..`.YP7
   9b6c4:	............u^.R
   9b6d4:	.<C.<...v.t....^
   9b6e4:	.Jw:.. ...0...%.
   9b6f4:	tY.I.9....$.W...
   9b704:	..qP.I.5M.]...[.
   9b714:	..D$.T.UL>I.....
   9b724:	..... .J.L.;....
   9b734:	....@./#-O.L.A..
   9b744:	..".....a";PMNrG
   9b754:	..m........".K.K
   9b764:	.H....{...O.U%kJ
   9b774:	eMmIO...+......#
   9b784:	BCtI_H........7.
   9b794:	.'.B2K.B..f.....
   9b7a4:	..L&N?.S.B....n.
   9b7b4:	(.K..!.3.R.7?...
   9b7c4:	......u).:.^.4..
   9b7d4:	U..........39];2
   9b7e4:	..H...0.3.x..8@[
   9b7f4:	C-}.3.......j..;
   9b804:	'U.(..c.....|...
   9b814:	v?.S.*D...y.+.x.
   9b824:	...DrQ})..>.....
   9b834:	..9..GjQs-E.....
   9b844:	..@.}..I.ON-`...
   9b854:	..X.V....E.Kk'..
   9b864:	i.o.......rG.Q.)
   9b874:	..&.S........HKQ
   9b884:	m&a...n...V....H
   9b894:	JN.%..|.F...2.~.
   9b8a4:	;J.F]$..........
   9b8b4:	e.XO.D4-t.R.{...
   9b8c4:	.....Q.?.3..C...
   9b8d4:	....M.#J.3n2....
   9b8e4:	....X...|G.2.5X.
   9b8f4:	n...\....."H.5.:
   9b904:	1."........#LB.:
   9b914:	.;........m.x'.:
   9b924:	.>.8...........*
   9b934:	964Bg4..o...g...
   9b944:	.)@4.C.2e.......
   9b954:	J..&]4.C.0L...t.
   9b964:	..4.."V5.D.1....
   9b974:	.......!.7.D./..
   9b984:	i.......F +8.E.1
   9b994:	......n.`.Z.P6HD
   9b9a4:	..........1....5
   9b9b4:	.D.)..F.....h.a.
   9b9c4:	X6.I:'O.....Y...
   9b9d4:	..S4.Iw .._.....
   9b9e4:	)....4.K........
   9b9f4:	q...z..5.I....-.
   9ba04:	Z...*....7.D....
   9ba14:	8.Q.......A@.C..
   9ba24:	....6.m...:.:A!<
   9ba34:	..........d...DB
   9ba44:	 64.$.........K.
   9ba54:	HDg3..O.........
   9ba64:	?..Cr1. ........
   9ba74:	..R..A.1.!5.4.!.
   9ba84:	-.w....>.1>!....
   9ba94:	/.....z.4<.3."..
   9baa4:	..=.$.W.u .8;2.#
   9bab4:	p...2...)....5C.
   9bac4:	F%L...~.\.t....6
   9bad4:	.,.(..n.......l.
   9bae4:	.59).*..........
   9baf4:	...4.).+..h.....
   9bb04:	......4,:,u.o.`.
   9bb14:	....X..*.-.)....
   9bb24:	].6....".(.2.&4.
   9bb34:	....B.H.. .&#5.#
   9bb44:	......j...B O&69
   9bb54:	/#..".).M.M.s..&
   9bb64:	<:@!..h...!.?.^.
   9bb74:	.&.9..P.'.../...
   9bb84:	...).:Y.........
   9bb94:	.....*N9..].....
   9bba4:	..R....,.6..@...
   9bbb4:	..<.....".b4....
   9bbc4:	....H.P.J../.1..
   9bbd4:	..O.....z...B1.2
   9bbe4:	..0...0.....t..0
   9bbf4:	-1.._.......8...
   9bc04:	s1Z0..m.........
   9bc14:	...0.,<.........
   9bc24:	..K..1.+{.....M.
   9bc34:	Z......36*9.....
   9bc44:	....z.N.O4.(....
   9bc54:	^...a......2.$x.
   9bc64:	............m0."
   9bc74:	..D...$...<.k...
   9bc84:	=!0...c..... .O.
   9bc94:	.,z"......H...K.
   9bca4:	..G*c%......J...
   9bcb4:	$.#..(!&..+.[.P.
   9bcc4:	..m...p$.%e...l.
   9bcd4:	..!.|.0..#w%....
   9bce4:	..-.;...r..!((} 
   9bcf4:	....0........!.)
   9bd04:	..C.....^.....=.
   9bd14:	M)..8...A.....Q.
   9bd24:	...)......g...~.
   9bd34:	y._..*....g.....
   9bd44:	0....!.+6.......
   9bd54:	..h....".,..y.$.
   9bd64:	^.'...4.."B-e.{.
   9bd74:	..........t".-;.
   9bd84:	..\...m......#.-
   9bd94:	....2..........$
   9bda4:	9.....?.......U.
   9bdb4:	/&.+....../.o...
   9bdc4:	..n'X)3...d.....
   9bdd4:	..1..(.&y.B.....
   9bde4:	J.I....(W$..U...
   9bdf4:	/........'.#+.O.
   9be04:	..~.....N..'.!..
   9be14:	....7........&F 
   9be24:	e.......O.....+&
   9be34:	~.......M.......
   9be44:	.%..............
   9be54:	...$..h.......A.
   9be64:	O.7..#;...'.M.w.
   9be74:	......."......].
   9be84:	..I.!...."....c.
   9be94:	&.....Q...K!".=.
   9bea4:	......D.......c.
   9beb4:	......I.........
   9bec4:	. ....N.~.......
   9bed4:	...!3.s.O.y.....
   9bee4:	.....#....p.R...
   9bef4:	w......#..H.....
   9bf04:	=.....Q.A$..g...
   9bf14:	?.J.......2%?...
   9bf24:	P.t.|...P.I.w$H.
   9bf34:	..#.....[...M.a#
   9bf44:	....Y...........
   9bf54:	."U.m. .I.e.....
   9bf64:	O.. ....f...r...
   9bf74:	..... ..3...$.T.
   9bf84:	......>!........
   9bf94:	e...-.... ......
   9bfa4:	..*.........f.%.
   9bfb4:	..........N.....
   9bfc4:	..].b........ ..
   9bfd4:	......y...n.3.. 
   9bfe4:	+.y.............
   9bff4:	......~.......(.
   9c004:	{.....b.y.g.....
   9c014:	u.L.f...'.K.{...
   9c024:	9.........t...v.
   9c034:	........u.X.....
   9c044:	......`...[.....
   9c054:	....z...C.......
   9c064:	......O.j.......
   9c074:	....z.`...V...d.
   9c084:	l.h.r.....n.h...
   9c094:	Q.....>.$.....U.
   9c0a4:	..7.J...m.......
   9c0b4:	..<.../.R.......
   9c0c4:	......;...z.....
   9c0d4:	..K.6...........
   9c0e4:	............R...
   9c0f4:	....[...........
   9c104:	..........x.y...
   9c114:	x.p._...........
   9c124:	........d. .....
   9c134:	....R.V.........
   9c144:	V.....E...l.....
   9c154:	................
   9c164:	................
   9c174:	..7.J.....a.....
   9c184:	g.........9...N.
   9c194:	C.E.............
   9c1a4:	....k.w.........
   9c1b4:	....X...`.......
   9c1c4:	....R.].{.~...].
   9c1d4:	=...L.........s.
   9c1e4:	..G.a....... .h.
   9c1f4:	......a.........
   9c204:	..........9.'.M.
   9c214:	..k.E.}.....b...
   9c224:	;.>.........o.9.
   9c234:	..:.7.d.....1.Q.
   9c244:	......C.........
   9c254:	..E.8...Q.......
   9c264:	......|...r.....
   9c274:	....U.....w...!.
   9c284:	......0.........
   9c294:	I......./...G...
   9c2a4:	..3.......'.....
   9c2b4:	#.....|...>...}.
   9c2c4:	..h.y...}.......
   9c2d4:	..{.=...~.e.....
   9c2e4:	..........O...5.
   9c2f4:	3.+.......+.....
   9c304:	!.......9.h...g.
   9c314:	..!.P.n.....K...
   9c324:	Q.......(.....*.
   9c334:	....M...+.......
   9c344:	......4.......A.
   9c354:	......f.........
   9c364:	r.......^.......
   9c374:	...._. .....'...
   9c384:	........e.!.....
   9c394:	T.......^.t.6.K.
   9c3a4:	y.9...&.........
   9c3b4:	....A.:.....4.d.
   9c3c4:	I...0.....N.Z.m.
   9c3d4:	@...8...5.h...Q.
   9c3e4:	....Z.B.|.n.....
   9c3f4:	......{.........
   9c404:	..%...r...w...J.
   9c414:	..i.......s...n.
   9c424:	..,...-...]...s.
   9c434:	....;...Z...`.H.
   9c444:	..'...E.O.......
   9c454:	......R.....@...
   9c464:	\.S.....f...Z...
   9c474:	T.Y.........N.j.
   9c484:	........N. ...D.
   9c494:	....~.........o.
   9c4a4:	..........N.....
   9c4b4:	V...........e.{.
   9c4c4:	..s...........(.
   9c4d4:	................
   9c4e4:	6...^...R.......
   9c4f4:	..........*.....
   9c504:	..F...n.....0...
   9c514:	.. ...4.>.......
   9c524:	..........G.t.T.
   9c534:	8.....;.g.....<.
   9c544:	........E./.....
   9c554:	....@.1.........
   9c564:	V.'.......|...2.
   9c574:	../.....Y.......
   9c584:	1.c...v.......M.
   9c594:	................
   9c5a4:	......B.....7...
   9c5b4:	U.....3...b.|.\.
   9c5c4:	D.~.............
   9c5d4:	....V.u.].K.....
   9c5e4:	e.f.-.s.X.f.H...
   9c5f4:	......4.........
   9c604:	..6.".....>...o.
   9c614:	..S...?.;.C.n.$.
   9c624:	....]...J.k.....
   9c634:	..h.z.....l.1...
   9c644:	x.[.[...t...C...
   9c654:	............o...
   9c664:	`.......S...o...
   9c674:	..N...!.....:.".
   9c684:	=.....Y.Q...=...
   9c694:	D.2.....R...#.Y.
   9c6a4:	....].c.....X...
   9c6b4:	..R.....C.H...-.
   9c6c4:	l.?.Q.H.....1...
   9c6d4:	....+.R.........
   9c6e4:	.._.t...........
   9c6f4:	..O...u.......2.
   9c704:	..=.............
   9c714:	F...h.....5.....
   9c724:	....^...........
   9c734:	..........h.....
   9c744:	E.".....z...b.F.
   9c754:	......i.T.....<.
   9c764:	............].4.
   9c774:	..........b...6.
   9c784:	........-..._.#.
   9c794:	........o.8.....
   9c7a4:	..<...2.N.......
   9c7b4:	..<.....|.....u.
   9c7c4:	........c.......
   9c7d4:	..+.e.........x.
   9c7e4:	........X.(... .
   9c7f4:	....k...j.P...D.
   9c804:	....U...........
   9c814:	....!.....S.\...
   9c824:	............p.1.
   9c834:	P.M...........p.
   9c844:	l.2.....X.....O.
   9c854:	..>..... .....'.
   9c864:	....c...........
   9c874:	@.....5.........
   9c884:	................
   9c894:	K.......*.......
   9c8a4:	......[...*.....
   9c8b4:	......^.....`...
   9c8c4:	......k.(.-.'...
   9c8d4:	-.....m.H.....I.
   9c8e4:	..*.b.y.[.'.N...
   9c8f4:	....K.3.........
   9c904:	d....._.......!.
   9c914:	..d...s.o.W.....
   9c924:	..|.7...&...;...
   9c934:	..............x.
   9c944:	..+...U.........
   9c954:	..].....@.N.6...
   9c964:	................
   9c974:	.._./.`...[.j...
   9c984:	....y...G...$...
   9c994:	S.t...2.e...(...
   9c9a4:	Q.........E.H.u.
   9c9b4:	..A.............
   9c9c4:	............-...
   9c9d4:	........8.......
   9c9e4:	....5.........j.
   9c9f4:	........ .......
   9ca04:	....&.u...G.../.
   9ca14:	v...............
   9ca24:	 .......F.s...k.
   9ca34:	..x.....Y.v.o...
   9ca44:	..`...i.........
   9ca54:	........`.c.....
   9ca64:	7.........].P. .
   9ca74:	....I.+.....|...
   9ca84:	....0.........,.
   9ca94:	..t.........<.b.
   9caa4:	..#._...R.Y.....
   9cab4:	....n...........
   9cac4:	3. ...>.....Q...
   9cad4:	..2.V...4.......
   9cae4:	a.....6.h...=...
   9caf4:	0...U...........
   9cb04:	........'...U...
   9cb14:	..x.....}.......
   9cb24:	..>.Z.%...l."...
   9cb34:	 .......&.......
   9cb44:	'.....}...r.Z...
   9cb54:	5.y...F.'.......
   9cb64:	................
   9cb74:	y.........3...,.
   9cb84:	......i.q.......
   9cb94:	....R.....c.'...
   9cba4:	..........D.....
   9cbb4:	G.....w.......Q.
   9cbc4:	T...F.....p...x.
   9cbd4:	i.........|.....
   9cbe4:	................
   9cbf4:	J.w...........9.
   9cc04:	..o...p...w.....
   9cc14:	2.+.X.O...q...N.
   9cc24:	X...........F...
   9cc34:	......'.A.......
   9cc44:	y.......Q.w.....
   9cc54:	......E...).|...
   9cc64:	..k...7.~.B.n...
   9cc74:	..........P.S...
   9cc84:	O.u.|.N...B...!.
   9cc94:	........T.......
   9cca4:	..........).....
   9ccb4:	......v...u...I.
   9ccc4:	........z.......
   9ccd4:	....7...\.....p.
   9cce4:	........D.p.z.7.
   9ccf4:	....7...........
   9cd04:	............l.=.
   9cd14:	..m.-...Z...R.4.
   9cd24:	Q...............
   9cd34:	x.r.%.....4.....
   9cd44:	........H.......
   9cd54:	".k...F...&...R.
   9cd64:	Y...b.K.1. .....
   9cd74:	G...Z...7.x...8.
   9cd84:	x.....$.......@.
   9cd94:	......Y.....)...
   9cda4:	B...w.......`...
   9cdb4:	....z.........1.
   9cdc4:	[.`.'..._.....A.
   9cdd4:	......g./.R.H...
   9cde4:	z.....L._.k.....
   9cdf4:	......H.........
   9ce04:	..........p.....
   9ce14:	..n...H.w.......
   9ce24:	u.@...`...S.e.:.
   9ce34:	..+.....b.......
   9ce44:	......h.L.......
   9ce54:	................
   9ce64:	................
   9ce74:	>.........O...I.
   9ce84:	^.......5.f.2...
   9ce94:	<.Y.:.G...Y.'...
   9cea4:	1.W.............
   9ceb4:	(...............
   9cec4:	....i.y...'...>.
   9ced4:	&...O.!...d.....
   9cee4:	..\.....C.j.....
   9cef4:	Q...D._.N.......
   9cf04:	A...e..... .....
   9cf14:	........c.I.....
   9cf24:	........_.......
   9cf34:	z.*.B...).......
   9cf44:	J...........&.:.
   9cf54:	....<...w.9.A...
   9cf64:	....U.:...3.Q.#.
   9cf74:	..8.....\...6.7.
   9cf84:	........T.^.....
   9cf94:	..a.............
   9cfa4:	............ .{.
   9cfb4:	..>.&.........[.
   9cfc4:	E...[.-.......^.
   9cfd4:	o...>.1.>.......
   9cfe4:	R.......*.......
   9cff4:	..H.~.....'.}...
   9d004:	....Y...p...x...
   9d014:	..........~.Z.X.
   9d024:	..9...{...N.....
   9d034:	B.........N.{./.
   9d044:	..:.......>.l.u.
   9d054:	........-.......
   9d064:	..}.............
   9d074:	S...'...4.8.....
   9d084:	..........&.....
   9d094:	w.Q...........7.
   9d0a4:	I...V...*...<...
   9d0b4:	..............I.
   9d0c4:	....Q...........
   9d0d4:	..Q.......f...U.
   9d0e4:	......"..._.N...
   9d0f4:	....+.......1.f.
   9d104:	Q.....,.......@.
   9d114:	...... .6.......
   9d124:	N.........'...n.
   9d134:	....*...........
   9d144:	....b.......y.9.
   9d154:	9.......:.}.....
   9d164:	..x.....i.|.....
   9d174:	..,.........e.O.
   9d184:	>.........s.....
   9d194:	........S...Y.).
   9d1a4:	....v...........
   9d1b4:	q.7.B.....{.....
   9d1c4:	..........r.O.!.
   9d1d4:	..........u.}...
   9d1e4:	T...K.n...x...3.
   9d1f4:	......r.........
   9d204:	......#.2.f.^.'.
   9d214:	j.......Y.L.U.-.
   9d224:	..M.3.........2.
   9d234:	..r.&.....1.....
   9d244:	......+...9.....
   9d254:	..l.....M.X.....
   9d264:	....%...C.......
   9d274:	[...............
   9d284:	........l.I...B.
   9d294:	N.K.......W...k.
   9d2a4:	..F.'...........
   9d2b4:	..I..."...Y...+.
   9d2c4:	z.....-.*.......
   9d2d4:	;...}.!.x.....).
   9d2e4:	...._.t.[...'...
   9d2f4:	f.......1.....a.
   9d304:	v...N...........
   9d314:	'.1.......$.i...
   9d324:	....8...l...H.0.
   9d334:	Z.n...b.....].M.
   9d344:	....t.....m.q...
   9d354:	C.L.4.x.B.....`.
   9d364:	.............. .
   9d374:	<.>...Q.......[.
   9d384:	..!.X.O.......g.
   9d394:	....,...(...%.s.
   9d3a4:	......[.........
   9d3b4:	..x.+.n.s.%.....
   9d3c4:	\.....@...e.s.s.
   9d3d4:	..[.P...^.......
   9d3e4:	*.......f.......
   9d3f4:	....A...k.......
   9d404:	6...K...........
   9d414:	............[...
   9d424:	[.-.......-...I.
   9d434:	4.Q.....O.....{.
   9d444:	[.\.......Q.....
   9d454:	..S.....-.X.....
   9d464:	....Q...P.e.....
   9d474:	4...z.X...Q...J.
   9d484:	..[.........T...
   9d494:	....f...........
   9d4a4:	.."...).........
   9d4b4:	....B...'.....x.
   9d4c4:	......]...1.....
   9d4d4:	V...L.|.....`.x.
   9d4e4:	E.....8.6.G.....
   9d4f4:	].>...g.....*...
   9d504:	6.....q...8.$...
   9d514:	............2...
   9d524:	........h...E.X.
   9d534:	..m...c.........
   9d544:	r. ...D.L.....i.
   9d554:	................
   9d564:	..X.............
   9d574:	..../.%.....Z.,.
   9d584:	u...Y.4.......^.
   9d594:	....X.2.G...2...
   9d5a4:	}...A...>.......
   9d5b4:	h.........4...8.
   9d5c4:	V.....c.......>.
   9d5d4:	S.f.a...f.......
   9d5e4:	..?.m.....f.)...
   9d5f4:	r...".m.C...7.K.
   9d604:	..m.....X.b...4.
   9d614:	..1.K...i.O.....
   9d624:	9.....{.9...!...
   9d634:	..Q.3.:...M...@.
   9d644:	!...1.{.........
   9d654:	...._.O.9.......
   9d664:	..`.......J.c.;.
   9d674:	_.q.......%...L.
   9d684:	..C.............
   9d694:	g.......V.`.P...
   9d6a4:	..y.........H...
   9d6b4:	A.,.\...........
   9d6c4:	..w.............
   9d6d4:	..3.l... .......
	...

0009d804 <vtable for seesaw_NeoPixel>:
	...
   9d80c:	5j..E....+...+..
   9d81c:	.j..5h..-i..Yj..

0009d82c <vtable for Adafruit_NeoTrellis>:
	...
   9d834:	5j..E....+...+..
   9d844:	.j..5h..-i..Yj..
   9d854:	3...4...(...5...
	...
   9d874:	................
   9d884:	................
   9d894:	................
	...
   9d8ac:	................
   9d8bc:	................
   9d8cc:	................
   9d8dc:	................
   9d8ec:	................
   9d8fc:	................
   9d90c:	................
   9d91c:	................
   9d92c:	................
   9d93c:	................
   9d94c:	................
   9d95c:	........failed t
   9d96c:	o begin trellis.
   9d97c:	Error: readButto
   9d98c:	n .. out of rang
   9d99c:	e exception.Erro
   9d9ac:	r: readSlidePot 
   9d9bc:	....Error: readP
   9d9cc:	ot .

0009d9d0 <zeroblock>:
	...

0009dad4 <vtable for AudioEffectFreeverb>:
	...
   9dadc:	]0..

0009dae0 <vtable for AudioControlSGTL5000>:
	...
   9dae8:	.7..%7..)9..)7..
   9daf8:	e8..

0009dafc <vtable for AudioEffectBitcrusher>:
	...
   9db04:	I9..

0009db08 <vtable for AudioAmplifier>:
	...
   9db10:	-;..

0009db14 <vtable for AudioMixer4>:
	...
   9db1c:	9:..

0009db20 <vtable for AudioEffectMultiply>:
	...
   9db28:	.;..

0009db2c <vtable for AudioFilterStateVariable>:
	...
   9db34:	y>..

0009db38 <vtable for AudioSynthWaveformSine>:
	...
   9db40:	.?..

0009db44 <vtable for AudioSynthWavetable>:
	...
   9db4c:	E@..

0009db50 <vtable for AudioOutputI2S>:
	...
   9db58:	.K..

0009db5c <vtable for AudioEffectDelay>:
	...
   9db64:	=N..

0009db68 <TwoWire::i2c0_hardware>:
   9db68:	4..@@.....".0...
   9db78:	....!./.........

0009db88 <TwoWire::i2c1_hardware>:
   9db88:	4..@....&:......
   9db98:	..%;............

0009dba8 <TwoWire::i2c2_hardware>:
   9dba8:	(..@@...........
   9dbb8:	............J...

0009dbc8 <vtable for TwoWire>:
	...
   9dbd0:	.P..IP...+..EP..
   9dbe0:	.P...P..-P..

0009dbec <SPIClass::spi0_hardware>:
   9dbec:	<..@............
   9dbfc:	.....V....'.....
   9dc0c:	................
   9dc1c:	................
   9dc2c:	................
   9dc3c:	..........-.....
   9dc4c:	................
   9dc5c:	................
   9dc6c:	................
   9dc7c:	.. .

0009dc80 <vtable for SdFile>:
	...
   9dc88:	.`..E....+...+..

0009dc98 <CSWTCH.47>:
   9dc98:	....

0009dc9c <vtable for Adafruit_seesaw>:
	...
   9dca4:	5j..E....+...+..
   9dcb4:	.j..5h..-i..Yj..

0009dcc4 <AudioWaveformSine>:
   9dcc4:	..$.H.j.........
   9dcd4:	......#"(%&(.+..
   9dce4:	.0.3.6.9V<.?.AzD
   9dcf4:	.G.I?L.N3Q.S.UBX
   9dd04:	.Z.\.^.`.b.d.f.h
   9dd14:	mj#l.m^o.pTr.s.u
   9dd24:	Avkw.x.y|z\{)|.|
   9dd34:	.}.~.~..a.......
   9dd44:	........a....~.~
   9dd54:	.}.|)|\{|z.y.xkw
   9dd64:	Av.u.sTr.p^o.m#l
   9dd74:	mj.h.f.d.b.`.^.\
   9dd84:	.ZBX.U.S3Q.N?L.I
   9dd94:	.GzD.A.?V<.9.6.3
   9dda4:	.0...+&((%#"....
   9ddb4:	..........j.H.$.
   9ddc4:	........t.U.8...
   9ddd4:	................
   9dde4:	..!.F.t.....2...
   9ddf4:	..L...A...e.....
   9de04:	~.M.).......1.Z.
   9de14:	....7.......K...
   9de24:	....|.w.........
   9de34:	w...d.....Z.(...
   9de44:	....(.Z.....d...
   9de54:	w.........w.|...
   9de64:	....K.......7...
   9de74:	..Z.1.......).M.
   9de84:	~.....e...A...L.
   9de94:	....2.....t.F.!.
   9dea4:	................
   9deb4:	....8.U.t.......
   9dec4:	....

0009dec8 <pin2sc1a>:
   9dec8:	................
   9ded8:	................
   9dee8:	................
   9def8:	................
   9df08:	........

0009df10 <digital_pin_to_info_PGM>:
   9df10:	@..C@..@D..CD..@
   9df20:	...C...@0..C0..@
   9df30:	4..C4..@...C...@
   9df40:	...C...@...C...@
   9df50:	...C...@...C...@
   9df60:	...C...@...C...@
   9df70:	...C...@...C...@
   9df80:	...C...@...C...@
   9df90:	...C...@...C...@
   9dfa0:	...C...@...C...@
   9dfb0:	...C...@...C...@
   9dfc0:	...C...@...C...@
   9dfd0:	h .Ch..@...C...@
   9dfe0:	8..C8..@<..C<..@
   9dff0:	@..C@..@H..CH..@
   9e000:	L..CL..@(..C(..@
   9e010:	,..C,..@` .C`..@
   9e020:	d .Cd..@ ..C ..@
   9e030:	$..C$..@(..C(..@
   9e040:	,..C,..@D..CD..@
   9e050:	p..Cp..@t..Ct..@
   9e060:	h..Ch..@P..CP..@
   9e070:	X..CX..@\..C\..@
   9e080:	T..CT..@ ..C ..@
   9e090:	$..C$..@...C...@
   9e0a0:	...C...@8..C8..@
   9e0b0:	4..C4..@0..C0..@
   9e0c0:	<..C<..@,..C,..@
   9e0d0:	( .C(..@, .C,..@
   9e0e0:	. .C...@. .C...@
   9e0f0:	. .C...@. .C...@
   9e100:	. .C...@. .C...@

0009e110 <vtable for usb_serial_class>:
	...
   9e118:	9...1...-...)...
   9e128:	%...!...........
   9e138:	....

0009e13c <vtable for Print>:
	...
   9e144:	.v..E....+...+..

0009e154 <vtable for AudioInputUSB>:
	...
   9e15c:	....

0009e160 <vtable for AudioOutputUSB>:
	...
   9e168:	....

0009e16c <usb_endpoint_config_table>:
   9e16c:	........

0009e174 <usb_descriptor_list>:
   9e174:	....l.. ........
   9e184:	... U.......... 
   9e194:	........... ....
   9e1a4:	....... ........
   9e1b4:	... ............
   9e1c4:	....powf....

0009e1d0 <TWO52>:
   9e1d0:	......0C......0.

0009e1e0 <_global_impure_ptr>:
   9e1e0:	0.. POSIX.......

0009e1f0 <_ctype_>:
   9e1f0:	.         ((((( 
   9e200:	                
   9e210:	 ...............
   9e220:	................
   9e230:	..AAAAAA........
   9e240:	................
   9e250:	..BBBBBB........
   9e260:	................
   9e270:	 ...............
	...
   9e2f0:	........

0009e2f8 <__mprec_tens>:
   9e2f8:	.......?......$@
   9e308:	......Y@.....@.@
   9e318:	.......@.....j.@
   9e328:	.......A......cA
   9e338:	.......A....e..A
   9e348:	... _..B....vH7B
   9e358:	......mB..@..0.B
   9e368:	.......B..4&.k.C
   9e378:	...7y.AC....W4vC
   9e388:	..Ngm..C.=.`.X.C
   9e398:	@..x...DP.....KD
   9e3a8:	..M....D.J...-.D
   9e3b8:	...yCx.D

0009e3c0 <__mprec_bigtens>:
   9e3c0:	...7y.AC.n.....F
   9e3d0:	..?..O8M2.0.Hw.Z
   9e3e0:	<.s..O.u

0009e3e8 <p05.6087>:
   9e3e8:	........}...Infi
   9e3f8:	nity....NaN.0...

0009e408 <zeroes.7258>:
   9e408:	0000000000000000
   9e418:	INF.inf.NAN.nan.
   9e428:	0123456789ABCDEF
   9e438:	....0123456789ab
   9e448:	cdef....(null)..

0009e458 <blanks.7257>:
   9e458:	                

0009e468 <_init>:
   9e468:	push	{r3, r4, r5, r6, r7, lr}
   9e46a:	nop
   9e46c:	pop	{r3, r4, r5, r6, r7}
   9e46e:	pop	{r3}
   9e470:	mov	lr, r3
   9e472:	bx	lr

0009e474 <__init_array_start>:
   9e474:	.word	0x0000d1ad

0009e478 <__frame_dummy_init_array_entry>:
   9e478:	5...5..../..-0..
   9e488:	E0...;..]<..u<..
   9e498:	.<...<...<..u?..
   9e4a8:	.@..-@..yJ...J..
   9e4b8:	.N..%N...X...d..

Disassembly of section .fini:

0009e4c8 <_fini>:
   9e4c8:	push	{r3, r4, r5, r6, r7, lr}
   9e4ca:	nop
